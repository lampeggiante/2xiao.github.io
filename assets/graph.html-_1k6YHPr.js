import{_ as c,r as _,o as i,c as a,a as t,d as e,w as o,b as l,f as r}from"./app-5VBZs9Uu.js";const h={},u=t("h1",{id:"图",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#图","aria-hidden":"true"},"#"),l(" 图")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),p=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),j=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),H=t("code",null,"队列",-1),M=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),v=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),P=t("code",null,"二叉搜索树",-1),C=t("code",null,"最小生成树",-1),E=t("span",{class:"blue"},"图",-1),O=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),D=t("code",null,"最短路",-1),J=t("code",null,"强连通分量",-1),K=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),B=t("code",null,"并查集",-1),N=t("code",null,"字典树",-1),T=t("code",null,"线段树",-1),F=t("code",null,"树状数组",-1),W=t("code",null,"后缀数组",-1),Q=t("p",null,[t("strong",null,"算法")],-1),R=t("code",null,"枚举",-1),U=t("code",null,"递归",-1),X=t("code",null,"分治",-1),Z=t("code",null,"回溯",-1),G=t("code",null,"贪心",-1),S=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),st=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),pt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),jt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Ht=t("code",null,"组合数学",-1),Mt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),vt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Pt=t("code",null,"脑筋急转弯",-1),Ct=t("code",null,"交互",-1),Et=t("code",null,"迭代器",-1),Ot=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Dt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Jt=t("td",{style:{"text-align":"center"}},"133",-1),Kt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/clone-graph",target:"_blank",rel:"noopener noreferrer"},Bt={style:{"text-align":"center"}},Nt={style:{"text-align":"left"}},Tt=t("code",null,"深度优先搜索",-1),Ft=t("code",null,"广度优先搜索",-1),Wt=t("code",null,"图",-1),Qt=t("code",null,"1+",-1),Rt={style:{"text-align":"left"}},Ut=t("td",{style:{"text-align":"center"}},"207",-1),Xt={style:{"text-align":"left"}},Zt={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},Gt={style:{"text-align":"center"}},St={style:{"text-align":"left"}},Yt=t("code",null,"深度优先搜索",-1),$t=t("code",null,"广度优先搜索",-1),te=t("code",null,"图",-1),ee=t("code",null,"1+",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"210",-1),se={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},de={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},ce=t("code",null,"深度优先搜索",-1),ie=t("code",null,"广度优先搜索",-1),ae=t("code",null,"图",-1),re=t("code",null,"1+",-1),he={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"261",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},me=t("td",{style:{"text-align":"center"}},null,-1),ye={style:{"text-align":"left"}},pe=t("code",null,"深度优先搜索",-1),xe=t("code",null,"广度优先搜索",-1),be=t("code",null,"并查集",-1),je=t("code",null,"1+",-1),ke={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"269",-1),Me={style:{"text-align":"left"}},Ie={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},we=t("td",{style:{"text-align":"center"}},null,-1),ve={style:{"text-align":"left"}},qe=t("code",null,"深度优先搜索",-1),Le=t("code",null,"广度优先搜索",-1),ze=t("code",null,"图",-1),Pe=t("code",null,"3+",-1),Ce={style:{"text-align":"left"}},Ee=t("td",{style:{"text-align":"center"}},"277",-1),Oe={style:{"text-align":"left"}},Ve={href:"https://leetcode.com/problems/find-the-celebrity",target:"_blank",rel:"noopener noreferrer"},De=t("td",{style:{"text-align":"center"}},null,-1),Je={style:{"text-align":"left"}},Ke=t("code",null,"图",-1),Ae=t("code",null,"双指针",-1),Be=t("code",null,"交互",-1),Ne={style:{"text-align":"left"}},Te=t("td",{style:{"text-align":"center"}},"310",-1),Fe={style:{"text-align":"left"}},We={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},Qe=t("td",{style:{"text-align":"center"}},null,-1),Re={style:{"text-align":"left"}},Ue=t("code",null,"深度优先搜索",-1),Xe=t("code",null,"广度优先搜索",-1),Ze=t("code",null,"图",-1),Ge=t("code",null,"1+",-1),Se={style:{"text-align":"left"}},Ye=t("td",{style:{"text-align":"center"}},"323",-1),$e={style:{"text-align":"left"}},tl={href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},el=t("td",{style:{"text-align":"center"}},null,-1),ll={style:{"text-align":"left"}},ol=t("code",null,"深度优先搜索",-1),sl=t("code",null,"广度优先搜索",-1),nl=t("code",null,"并查集",-1),dl=t("code",null,"1+",-1),_l={style:{"text-align":"left"}},cl=t("td",{style:{"text-align":"center"}},"329",-1),il={style:{"text-align":"left"}},al={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},rl=t("td",{style:{"text-align":"center"}},null,-1),hl={style:{"text-align":"left"}},ul=t("code",null,"深度优先搜索",-1),fl=t("code",null,"广度优先搜索",-1),gl=t("code",null,"图",-1),ml=t("code",null,"5+",-1),yl={style:{"text-align":"left"}},pl=t("td",{style:{"text-align":"center"}},"332",-1),xl={style:{"text-align":"left"}},bl={href:"https://leetcode.com/problems/reconstruct-itinerary",target:"_blank",rel:"noopener noreferrer"},jl=t("td",{style:{"text-align":"center"}},null,-1),kl={style:{"text-align":"left"}},Hl=t("code",null,"深度优先搜索",-1),Ml=t("code",null,"图",-1),Il=t("code",null,"欧拉回路",-1),wl={style:{"text-align":"left"}},vl=t("td",{style:{"text-align":"center"}},"399",-1),ql={style:{"text-align":"left"}},Ll={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},zl={style:{"text-align":"center"}},Pl={style:{"text-align":"left"}},Cl=t("code",null,"深度优先搜索",-1),El=t("code",null,"广度优先搜索",-1),Ol=t("code",null,"并查集",-1),Vl=t("code",null,"4+",-1),Dl={style:{"text-align":"left"}},Jl=t("td",{style:{"text-align":"center"}},"444",-1),Kl={style:{"text-align":"left"}},Al={href:"https://leetcode.com/problems/sequence-reconstruction",target:"_blank",rel:"noopener noreferrer"},Bl=t("td",{style:{"text-align":"center"}},null,-1),Nl={style:{"text-align":"left"}},Tl=t("code",null,"图",-1),Fl=t("code",null,"拓扑排序",-1),Wl=t("code",null,"数组",-1),Ql={style:{"text-align":"left"}},Rl=t("td",{style:{"text-align":"center"}},"499",-1),Ul={style:{"text-align":"left"}},Xl={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},Zl=t("td",{style:{"text-align":"center"}},null,-1),Gl={style:{"text-align":"left"}},Sl=t("code",null,"深度优先搜索",-1),Yl=t("code",null,"广度优先搜索",-1),$l=t("code",null,"图",-1),to=t("code",null,"5+",-1),eo={style:{"text-align":"left"}},lo=t("td",{style:{"text-align":"center"}},"505",-1),oo={style:{"text-align":"left"}},so={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},no=t("td",{style:{"text-align":"center"}},null,-1),_o={style:{"text-align":"left"}},co=t("code",null,"深度优先搜索",-1),io=t("code",null,"广度优先搜索",-1),ao=t("code",null,"图",-1),ro=t("code",null,"4+",-1),ho={style:{"text-align":"left"}},uo=t("td",{style:{"text-align":"center"}},"547",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},mo=t("td",{style:{"text-align":"center"}},null,-1),yo={style:{"text-align":"left"}},po=t("code",null,"深度优先搜索",-1),xo=t("code",null,"广度优先搜索",-1),bo=t("code",null,"并查集",-1),jo=t("code",null,"1+",-1),ko={style:{"text-align":"left"}},Ho=t("td",{style:{"text-align":"center"}},"631",-1),Mo={style:{"text-align":"left"}},Io={href:"https://leetcode.com/problems/design-excel-sum-formula",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},null,-1),vo={style:{"text-align":"left"}},qo=t("code",null,"图",-1),Lo=t("code",null,"设计",-1),zo=t("code",null,"拓扑排序",-1),Po=t("code",null,"2+",-1),Co={style:{"text-align":"left"}},Eo=t("td",{style:{"text-align":"center"}},"684",-1),Oo={style:{"text-align":"left"}},Vo={href:"https://leetcode.com/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},Do=t("td",{style:{"text-align":"center"}},null,-1),Jo={style:{"text-align":"left"}},Ko=t("code",null,"深度优先搜索",-1),Ao=t("code",null,"广度优先搜索",-1),Bo=t("code",null,"并查集",-1),No=t("code",null,"1+",-1),To={style:{"text-align":"left"}},Fo=t("td",{style:{"text-align":"center"}},"685",-1),Wo={style:{"text-align":"left"}},Qo={href:"https://leetcode.com/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},Ro=t("td",{style:{"text-align":"center"}},null,-1),Uo={style:{"text-align":"left"}},Xo=t("code",null,"深度优先搜索",-1),Zo=t("code",null,"广度优先搜索",-1),Go=t("code",null,"并查集",-1),So=t("code",null,"1+",-1),Yo={style:{"text-align":"left"}},$o=t("td",{style:{"text-align":"center"}},"743",-1),ts={style:{"text-align":"left"}},es={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},ls=t("td",{style:{"text-align":"center"}},null,-1),os={style:{"text-align":"left"}},ss=t("code",null,"深度优先搜索",-1),ns=t("code",null,"广度优先搜索",-1),ds=t("code",null,"图",-1),_s=t("code",null,"2+",-1),cs={style:{"text-align":"left"}},is=t("td",{style:{"text-align":"center"}},"753",-1),as={style:{"text-align":"left"}},rs={href:"https://leetcode.com/problems/cracking-the-safe",target:"_blank",rel:"noopener noreferrer"},hs=t("td",{style:{"text-align":"center"}},null,-1),us={style:{"text-align":"left"}},fs=t("code",null,"深度优先搜索",-1),gs=t("code",null,"图",-1),ms=t("code",null,"欧拉回路",-1),ys={style:{"text-align":"left"}},ps=t("td",{style:{"text-align":"center"}},"765",-1),xs={style:{"text-align":"left"}},bs={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},js=t("td",{style:{"text-align":"center"}},null,-1),ks={style:{"text-align":"left"}},Hs=t("code",null,"贪心",-1),Ms=t("code",null,"深度优先搜索",-1),Is=t("code",null,"广度优先搜索",-1),ws=t("code",null,"2+",-1),vs={style:{"text-align":"left"}},qs=t("td",{style:{"text-align":"center"}},"785",-1),Ls={style:{"text-align":"left"}},zs={href:"https://leetcode.com/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},Ps=t("td",{style:{"text-align":"center"}},null,-1),Cs={style:{"text-align":"left"}},Es=t("code",null,"深度优先搜索",-1),Os=t("code",null,"广度优先搜索",-1),Vs=t("code",null,"并查集",-1),Ds=t("code",null,"1+",-1),Js={style:{"text-align":"left"}},Ks=t("td",{style:{"text-align":"center"}},"787",-1),As={style:{"text-align":"left"}},Bs={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},Ns=t("td",{style:{"text-align":"center"}},null,-1),Ts={style:{"text-align":"left"}},Fs=t("code",null,"深度优先搜索",-1),Ws=t("code",null,"广度优先搜索",-1),Qs=t("code",null,"图",-1),Rs=t("code",null,"3+",-1),Us={style:{"text-align":"left"}},Xs=t("td",{style:{"text-align":"center"}},"797",-1),Zs={style:{"text-align":"left"}},Gs={href:"https://leetcode.com/problems/all-paths-from-source-to-target",target:"_blank",rel:"noopener noreferrer"},Ss=t("td",{style:{"text-align":"center"}},null,-1),Ys={style:{"text-align":"left"}},$s=t("code",null,"深度优先搜索",-1),tn=t("code",null,"广度优先搜索",-1),en=t("code",null,"图",-1),ln=t("code",null,"1+",-1),on={style:{"text-align":"left"}},sn=t("td",{style:{"text-align":"center"}},"802",-1),nn={style:{"text-align":"left"}},dn={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},_n=t("td",{style:{"text-align":"center"}},null,-1),cn={style:{"text-align":"left"}},an=t("code",null,"深度优先搜索",-1),rn=t("code",null,"广度优先搜索",-1),hn=t("code",null,"图",-1),un=t("code",null,"1+",-1),fn={style:{"text-align":"left"}},gn=t("td",{style:{"text-align":"center"}},"834",-1),mn={style:{"text-align":"left"}},yn={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},pn=t("td",{style:{"text-align":"center"}},null,-1),xn={style:{"text-align":"left"}},bn=t("code",null,"树",-1),jn=t("code",null,"深度优先搜索",-1),kn=t("code",null,"图",-1),Hn=t("code",null,"1+",-1),Mn={style:{"text-align":"left"}},In=t("td",{style:{"text-align":"center"}},"841",-1),wn={style:{"text-align":"left"}},vn={href:"https://leetcode.com/problems/keys-and-rooms",target:"_blank",rel:"noopener noreferrer"},qn=t("td",{style:{"text-align":"center"}},null,-1),Ln={style:{"text-align":"left"}},zn=t("code",null,"深度优先搜索",-1),Pn=t("code",null,"广度优先搜索",-1),Cn=t("code",null,"图",-1),En={style:{"text-align":"left"}},On=t("td",{style:{"text-align":"center"}},"847",-1),Vn={style:{"text-align":"left"}},Dn={href:"https://leetcode.com/problems/shortest-path-visiting-all-nodes",target:"_blank",rel:"noopener noreferrer"},Jn=t("td",{style:{"text-align":"center"}},null,-1),Kn={style:{"text-align":"left"}},An=t("code",null,"位运算",-1),Bn=t("code",null,"广度优先搜索",-1),Nn=t("code",null,"图",-1),Tn=t("code",null,"2+",-1),Fn={style:{"text-align":"left"}},Wn=t("td",{style:{"text-align":"center"}},"851",-1),Qn={style:{"text-align":"left"}},Rn={href:"https://leetcode.com/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},Un=t("td",{style:{"text-align":"center"}},null,-1),Xn={style:{"text-align":"left"}},Zn=t("code",null,"深度优先搜索",-1),Gn=t("code",null,"图",-1),Sn=t("code",null,"拓扑排序",-1),Yn=t("code",null,"1+",-1),$n={style:{"text-align":"left"}},td=t("td",{style:{"text-align":"center"}},"882",-1),ed={style:{"text-align":"left"}},ld={href:"https://leetcode.com/problems/reachable-nodes-in-subdivided-graph",target:"_blank",rel:"noopener noreferrer"},od=t("td",{style:{"text-align":"center"}},null,-1),sd={style:{"text-align":"left"}},nd=t("code",null,"图",-1),dd=t("code",null,"最短路",-1),_d=t("code",null,"堆（优先队列）",-1),cd={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"886",-1),ad={style:{"text-align":"left"}},rd={href:"https://leetcode.com/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},hd=t("td",{style:{"text-align":"center"}},null,-1),ud={style:{"text-align":"left"}},fd=t("code",null,"深度优先搜索",-1),gd=t("code",null,"广度优先搜索",-1),md=t("code",null,"并查集",-1),yd=t("code",null,"1+",-1),pd={style:{"text-align":"left"}},xd=t("td",{style:{"text-align":"center"}},"913",-1),bd={style:{"text-align":"left"}},jd={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},kd=t("td",{style:{"text-align":"center"}},null,-1),Hd={style:{"text-align":"left"}},Md=t("code",null,"图",-1),Id=t("code",null,"拓扑排序",-1),wd=t("code",null,"记忆化搜索",-1),vd=t("code",null,"3+",-1),qd={style:{"text-align":"left"}},Ld=t("td",{style:{"text-align":"center"}},"924",-1),zd={style:{"text-align":"left"}},Pd={href:"https://leetcode.com/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},Cd=t("td",{style:{"text-align":"center"}},null,-1),Ed={style:{"text-align":"left"}},Od=t("code",null,"深度优先搜索",-1),Vd=t("code",null,"广度优先搜索",-1),Dd=t("code",null,"并查集",-1),Jd=t("code",null,"3+",-1),Kd={style:{"text-align":"left"}},Ad=t("td",{style:{"text-align":"center"}},"928",-1),Bd={style:{"text-align":"left"}},Nd={href:"https://leetcode.com/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},Td=t("td",{style:{"text-align":"center"}},null,-1),Fd={style:{"text-align":"left"}},Wd=t("code",null,"深度优先搜索",-1),Qd=t("code",null,"广度优先搜索",-1),Rd=t("code",null,"并查集",-1),Ud=t("code",null,"3+",-1),Xd={style:{"text-align":"left"}},Zd=t("td",{style:{"text-align":"center"}},"947",-1),Gd={style:{"text-align":"left"}},Sd={href:"https://leetcode.com/problems/most-stones-removed-with-same-row-or-column",target:"_blank",rel:"noopener noreferrer"},Yd=t("td",{style:{"text-align":"center"}},null,-1),$d={style:{"text-align":"left"}},t_=t("code",null,"深度优先搜索",-1),e_=t("code",null,"并查集",-1),l_=t("code",null,"图",-1),o_=t("code",null,"1+",-1),s_={style:{"text-align":"left"}},n_=t("td",{style:{"text-align":"center"}},"990",-1),d_={style:{"text-align":"left"}},__={href:"https://leetcode.com/problems/satisfiability-of-equality-equations",target:"_blank",rel:"noopener noreferrer"},c_=t("td",{style:{"text-align":"center"}},null,-1),i_={style:{"text-align":"left"}},a_=t("code",null,"并查集",-1),r_=t("code",null,"图",-1),h_=t("code",null,"数组",-1),u_=t("code",null,"1+",-1),f_={style:{"text-align":"left"}},g_=t("td",{style:{"text-align":"center"}},"997",-1),m_={style:{"text-align":"left"}},y_={href:"https://leetcode.com/problems/find-the-town-judge",target:"_blank",rel:"noopener noreferrer"},p_=t("td",{style:{"text-align":"center"}},null,-1),x_={style:{"text-align":"left"}},b_=t("code",null,"图",-1),j_=t("code",null,"数组",-1),k_=t("code",null,"哈希表",-1),H_={style:{"text-align":"left"}},M_=t("td",{style:{"text-align":"center"}},"1042",-1),I_={style:{"text-align":"left"}},w_={href:"https://leetcode.com/problems/flower-planting-with-no-adjacent",target:"_blank",rel:"noopener noreferrer"},v_=t("td",{style:{"text-align":"center"}},null,-1),q_={style:{"text-align":"left"}},L_=t("code",null,"深度优先搜索",-1),z_=t("code",null,"广度优先搜索",-1),P_=t("code",null,"图",-1),C_={style:{"text-align":"left"}},E_=t("td",{style:{"text-align":"center"}},"1059",-1),O_={style:{"text-align":"left"}},V_={href:"https://leetcode.com/problems/all-paths-from-source-lead-to-destination",target:"_blank",rel:"noopener noreferrer"},D_=t("td",{style:{"text-align":"center"}},null,-1),J_={style:{"text-align":"left"}},K_=t("code",null,"图",-1),A_=t("code",null,"拓扑排序",-1),B_={style:{"text-align":"left"}},N_=t("td",{style:{"text-align":"center"}},"1129",-1),T_={style:{"text-align":"left"}},F_={href:"https://leetcode.com/problems/shortest-path-with-alternating-colors",target:"_blank",rel:"noopener noreferrer"},W_=t("td",{style:{"text-align":"center"}},null,-1),Q_={style:{"text-align":"left"}},R_=t("code",null,"广度优先搜索",-1),U_=t("code",null,"图",-1),X_={style:{"text-align":"left"}},Z_=t("td",{style:{"text-align":"center"}},"1135",-1),G_={style:{"text-align":"left"}},S_={href:"https://leetcode.com/problems/connecting-cities-with-minimum-cost",target:"_blank",rel:"noopener noreferrer"},Y_=t("td",{style:{"text-align":"center"}},null,-1),$_={style:{"text-align":"left"}},tc=t("code",null,"并查集",-1),ec=t("code",null,"图",-1),lc=t("code",null,"最小生成树",-1),oc=t("code",null,"1+",-1),sc={style:{"text-align":"left"}},nc=t("td",{style:{"text-align":"center"}},"1136",-1),dc={style:{"text-align":"left"}},_c={href:"https://leetcode.com/problems/parallel-courses",target:"_blank",rel:"noopener noreferrer"},cc=t("td",{style:{"text-align":"center"}},null,-1),ic={style:{"text-align":"left"}},ac=t("code",null,"图",-1),rc=t("code",null,"拓扑排序",-1),hc={style:{"text-align":"left"}},uc=t("td",{style:{"text-align":"center"}},"1168",-1),fc={style:{"text-align":"left"}},gc={href:"https://leetcode.com/problems/optimize-water-distribution-in-a-village",target:"_blank",rel:"noopener noreferrer"},mc=t("td",{style:{"text-align":"center"}},null,-1),yc={style:{"text-align":"left"}},pc=t("code",null,"并查集",-1),xc=t("code",null,"图",-1),bc=t("code",null,"最小生成树",-1),jc=t("code",null,"1+",-1),kc={style:{"text-align":"left"}},Hc=t("td",{style:{"text-align":"center"}},"1192",-1),Mc={style:{"text-align":"left"}},Ic={href:"https://leetcode.com/problems/critical-connections-in-a-network",target:"_blank",rel:"noopener noreferrer"},wc=t("td",{style:{"text-align":"center"}},null,-1),vc={style:{"text-align":"left"}},qc=t("code",null,"深度优先搜索",-1),Lc=t("code",null,"图",-1),zc=t("code",null,"双连通分量",-1),Pc={style:{"text-align":"left"}},Cc=t("td",{style:{"text-align":"center"}},"1203",-1),Ec={style:{"text-align":"left"}},Oc={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},Vc=t("td",{style:{"text-align":"center"}},null,-1),Dc={style:{"text-align":"left"}},Jc=t("code",null,"深度优先搜索",-1),Kc=t("code",null,"广度优先搜索",-1),Ac=t("code",null,"图",-1),Bc=t("code",null,"1+",-1),Nc={style:{"text-align":"left"}},Tc=t("td",{style:{"text-align":"center"}},"1245",-1),Fc={style:{"text-align":"left"}},Wc={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},Qc=t("td",{style:{"text-align":"center"}},null,-1),Rc={style:{"text-align":"left"}},Uc=t("code",null,"树",-1),Xc=t("code",null,"深度优先搜索",-1),Zc=t("code",null,"广度优先搜索",-1),Gc=t("code",null,"2+",-1),Sc={style:{"text-align":"left"}},Yc=t("td",{style:{"text-align":"center"}},"1298",-1),$c={style:{"text-align":"left"}},ti={href:"https://leetcode.com/problems/maximum-candies-you-can-get-from-boxes",target:"_blank",rel:"noopener noreferrer"},ei=t("td",{style:{"text-align":"center"}},null,-1),li={style:{"text-align":"left"}},oi=t("code",null,"广度优先搜索",-1),si=t("code",null,"图",-1),ni=t("code",null,"数组",-1),di={style:{"text-align":"left"}},_i=t("td",{style:{"text-align":"center"}},"1311",-1),ci={style:{"text-align":"left"}},ii={href:"https://leetcode.com/problems/get-watched-videos-by-your-friends",target:"_blank",rel:"noopener noreferrer"},ai=t("td",{style:{"text-align":"center"}},null,-1),ri={style:{"text-align":"left"}},hi=t("code",null,"广度优先搜索",-1),ui=t("code",null,"图",-1),fi=t("code",null,"数组",-1),gi=t("code",null,"2+",-1),mi={style:{"text-align":"left"}},yi=t("td",{style:{"text-align":"center"}},"1319",-1),pi={style:{"text-align":"left"}},xi={href:"https://leetcode.com/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},bi=t("td",{style:{"text-align":"center"}},null,-1),ji={style:{"text-align":"left"}},ki=t("code",null,"深度优先搜索",-1),Hi=t("code",null,"广度优先搜索",-1),Mi=t("code",null,"并查集",-1),Ii=t("code",null,"1+",-1),wi={style:{"text-align":"left"}},vi=t("td",{style:{"text-align":"center"}},"1334",-1),qi={style:{"text-align":"left"}},Li={href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},zi=t("td",{style:{"text-align":"center"}},null,-1),Pi={style:{"text-align":"left"}},Ci=t("code",null,"图",-1),Ei=t("code",null,"动态规划",-1),Oi=t("code",null,"最短路",-1),Vi={style:{"text-align":"left"}},Di=t("td",{style:{"text-align":"center"}},"1361",-1),Ji={style:{"text-align":"left"}},Ki={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},Ai=t("td",{style:{"text-align":"center"}},null,-1),Bi={style:{"text-align":"left"}},Ni=t("code",null,"树",-1),Ti=t("code",null,"深度优先搜索",-1),Fi=t("code",null,"广度优先搜索",-1),Wi=t("code",null,"3+",-1),Qi={style:{"text-align":"left"}},Ri=t("td",{style:{"text-align":"center"}},"1368",-1),Ui={style:{"text-align":"left"}},Xi={href:"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Zi=t("td",{style:{"text-align":"center"}},null,-1),Gi={style:{"text-align":"left"}},Si=t("code",null,"广度优先搜索",-1),Yi=t("code",null,"图",-1),$i=t("code",null,"数组",-1),ta=t("code",null,"3+",-1),ea={style:{"text-align":"left"}},la=t("td",{style:{"text-align":"center"}},"1377",-1),oa={style:{"text-align":"left"}},sa={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},na=t("td",{style:{"text-align":"center"}},null,-1),da={style:{"text-align":"left"}},_a=t("code",null,"树",-1),ca=t("code",null,"深度优先搜索",-1),ia=t("code",null,"广度优先搜索",-1),aa=t("code",null,"1+",-1),ra={style:{"text-align":"left"}},ha=t("td",{style:{"text-align":"center"}},"1462",-1),ua={style:{"text-align":"left"}},fa={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},ga=t("td",{style:{"text-align":"center"}},null,-1),ma={style:{"text-align":"left"}},ya=t("code",null,"深度优先搜索",-1),pa=t("code",null,"广度优先搜索",-1),xa=t("code",null,"图",-1),ba=t("code",null,"1+",-1),ja={style:{"text-align":"left"}},ka=t("td",{style:{"text-align":"center"}},"1466",-1),Ha={style:{"text-align":"left"}},Ma={href:"https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero",target:"_blank",rel:"noopener noreferrer"},Ia=t("td",{style:{"text-align":"center"}},null,-1),wa={style:{"text-align":"left"}},va=t("code",null,"深度优先搜索",-1),qa=t("code",null,"广度优先搜索",-1),La=t("code",null,"图",-1),za={style:{"text-align":"left"}},Pa=t("td",{style:{"text-align":"center"}},"1489",-1),Ca={style:{"text-align":"left"}},Ea={href:"https://leetcode.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",target:"_blank",rel:"noopener noreferrer"},Oa=t("td",{style:{"text-align":"center"}},null,-1),Va={style:{"text-align":"left"}},Da=t("code",null,"并查集",-1),Ja=t("code",null,"图",-1),Ka=t("code",null,"最小生成树",-1),Aa=t("code",null,"2+",-1),Ba={style:{"text-align":"left"}},Na=t("td",{style:{"text-align":"center"}},"1494",-1),Ta={style:{"text-align":"left"}},Fa={href:"https://leetcode.com/problems/parallel-courses-ii",target:"_blank",rel:"noopener noreferrer"},Wa=t("td",{style:{"text-align":"center"}},null,-1),Qa={style:{"text-align":"left"}},Ra=t("code",null,"位运算",-1),Ua=t("code",null,"图",-1),Xa=t("code",null,"动态规划",-1),Za=t("code",null,"1+",-1),Ga={style:{"text-align":"left"}},Sa=t("td",{style:{"text-align":"center"}},"1514",-1),Ya={style:{"text-align":"left"}},$a={href:"https://leetcode.com/problems/path-with-maximum-probability",target:"_blank",rel:"noopener noreferrer"},tr=t("td",{style:{"text-align":"center"}},null,-1),er={style:{"text-align":"left"}},lr=t("code",null,"图",-1),or=t("code",null,"数组",-1),sr=t("code",null,"最短路",-1),nr=t("code",null,"1+",-1),dr={style:{"text-align":"left"}},_r=t("td",{style:{"text-align":"center"}},"1548",-1),cr={style:{"text-align":"left"}},ir={href:"https://leetcode.com/problems/the-most-similar-path-in-a-graph",target:"_blank",rel:"noopener noreferrer"},ar=t("td",{style:{"text-align":"center"}},null,-1),rr={style:{"text-align":"left"}},hr=t("code",null,"图",-1),ur=t("code",null,"动态规划",-1),fr={style:{"text-align":"left"}},gr=t("td",{style:{"text-align":"center"}},"1557",-1),mr={style:{"text-align":"left"}},yr={href:"https://leetcode.com/problems/minimum-number-of-vertices-to-reach-all-nodes",target:"_blank",rel:"noopener noreferrer"},pr=t("td",{style:{"text-align":"center"}},null,-1),xr={style:{"text-align":"left"}},br=t("code",null,"图",-1),jr={style:{"text-align":"left"}},kr=t("td",{style:{"text-align":"center"}},"1579",-1),Hr={style:{"text-align":"left"}},Mr={href:"https://leetcode.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable",target:"_blank",rel:"noopener noreferrer"},Ir=t("td",{style:{"text-align":"center"}},null,-1),wr={style:{"text-align":"left"}},vr=t("code",null,"并查集",-1),qr=t("code",null,"图",-1),Lr={style:{"text-align":"left"}},zr=t("td",{style:{"text-align":"center"}},"1584",-1),Pr={style:{"text-align":"left"}},Cr={href:"https://leetcode.com/problems/min-cost-to-connect-all-points",target:"_blank",rel:"noopener noreferrer"},Er=t("td",{style:{"text-align":"center"}},null,-1),Or={style:{"text-align":"left"}},Vr=t("code",null,"并查集",-1),Dr=t("code",null,"图",-1),Jr=t("code",null,"数组",-1),Kr=t("code",null,"1+",-1),Ar={style:{"text-align":"left"}},Br=t("td",{style:{"text-align":"center"}},"1591",-1),Nr={style:{"text-align":"left"}},Tr={href:"https://leetcode.com/problems/strange-printer-ii",target:"_blank",rel:"noopener noreferrer"},Fr=t("td",{style:{"text-align":"center"}},null,-1),Wr={style:{"text-align":"left"}},Qr=t("code",null,"图",-1),Rr=t("code",null,"拓扑排序",-1),Ur=t("code",null,"数组",-1),Xr=t("code",null,"1+",-1),Zr={style:{"text-align":"left"}},Gr=t("td",{style:{"text-align":"center"}},"1615",-1),Sr={style:{"text-align":"left"}},Yr={href:"https://leetcode.com/problems/maximal-network-rank",target:"_blank",rel:"noopener noreferrer"},$r=t("td",{style:{"text-align":"center"}},null,-1),th={style:{"text-align":"left"}},eh=t("code",null,"图",-1),lh={style:{"text-align":"left"}},oh=t("td",{style:{"text-align":"center"}},"1632",-1),sh={style:{"text-align":"left"}},nh={href:"https://leetcode.com/problems/rank-transform-of-a-matrix",target:"_blank",rel:"noopener noreferrer"},dh=t("td",{style:{"text-align":"center"}},null,-1),_h={style:{"text-align":"left"}},ch=t("code",null,"并查集",-1),ih=t("code",null,"图",-1),ah=t("code",null,"拓扑排序",-1),rh=t("code",null,"3+",-1),hh={style:{"text-align":"left"}},uh=t("td",{style:{"text-align":"center"}},"1697",-1),fh={style:{"text-align":"left"}},gh={href:"https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths",target:"_blank",rel:"noopener noreferrer"},mh=t("td",{style:{"text-align":"center"}},null,-1),yh={style:{"text-align":"left"}},ph=t("code",null,"并查集",-1),xh=t("code",null,"图",-1),bh=t("code",null,"数组",-1),jh=t("code",null,"2+",-1),kh={style:{"text-align":"left"}},Hh=t("td",{style:{"text-align":"center"}},"1719",-1),Mh={style:{"text-align":"left"}},Ih={href:"https://leetcode.com/problems/number-of-ways-to-reconstruct-a-tree",target:"_blank",rel:"noopener noreferrer"},wh=t("td",{style:{"text-align":"center"}},null,-1),vh={style:{"text-align":"left"}},qh=t("code",null,"树",-1),Lh=t("code",null,"图",-1),zh={style:{"text-align":"left"}},Ph=t("td",{style:{"text-align":"center"}},"1724",-1),Ch={style:{"text-align":"left"}},Eh={href:"https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths-ii",target:"_blank",rel:"noopener noreferrer"},Oh=t("td",{style:{"text-align":"center"}},null,-1),Vh={style:{"text-align":"left"}},Dh=t("code",null,"并查集",-1),Jh=t("code",null,"图",-1),Kh=t("code",null,"最小生成树",-1),Ah={style:{"text-align":"left"}},Bh=t("td",{style:{"text-align":"center"}},"1728",-1),Nh={style:{"text-align":"left"}},Th={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},Fh=t("td",{style:{"text-align":"center"}},null,-1),Wh={style:{"text-align":"left"}},Qh=t("code",null,"图",-1),Rh=t("code",null,"拓扑排序",-1),Uh=t("code",null,"记忆化搜索",-1),Xh=t("code",null,"5+",-1),Zh={style:{"text-align":"left"}},Gh=t("td",{style:{"text-align":"center"}},"1761",-1),Sh={style:{"text-align":"left"}},Yh={href:"https://leetcode.com/problems/minimum-degree-of-a-connected-trio-in-a-graph",target:"_blank",rel:"noopener noreferrer"},$h=t("td",{style:{"text-align":"center"}},null,-1),t1={style:{"text-align":"left"}},e1=t("code",null,"图",-1),l1={style:{"text-align":"left"}},o1=t("td",{style:{"text-align":"center"}},"1778",-1),s1={style:{"text-align":"left"}},n1={href:"https://leetcode.com/problems/shortest-path-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},d1=t("td",{style:{"text-align":"center"}},null,-1),_1={style:{"text-align":"left"}},c1=t("code",null,"深度优先搜索",-1),i1=t("code",null,"广度优先搜索",-1),a1=t("code",null,"图",-1),r1=t("code",null,"1+",-1),h1={style:{"text-align":"left"}},u1=t("td",{style:{"text-align":"center"}},"1782",-1),f1={style:{"text-align":"left"}},g1={href:"https://leetcode.com/problems/count-pairs-of-nodes",target:"_blank",rel:"noopener noreferrer"},m1=t("td",{style:{"text-align":"center"}},null,-1),y1={style:{"text-align":"left"}},p1=t("code",null,"图",-1),x1=t("code",null,"数组",-1),b1=t("code",null,"双指针",-1),j1=t("code",null,"2+",-1),k1={style:{"text-align":"left"}},H1=t("td",{style:{"text-align":"center"}},"1786",-1),M1={style:{"text-align":"left"}},I1={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},w1=t("td",{style:{"text-align":"center"}},null,-1),v1={style:{"text-align":"left"}},q1=t("code",null,"图",-1),L1=t("code",null,"拓扑排序",-1),z1=t("code",null,"动态规划",-1),P1=t("code",null,"2+",-1),C1={style:{"text-align":"left"}},E1=t("td",{style:{"text-align":"center"}},"1791",-1),O1={style:{"text-align":"left"}},V1={href:"https://leetcode.com/problems/find-center-of-star-graph",target:"_blank",rel:"noopener noreferrer"},D1=t("td",{style:{"text-align":"center"}},null,-1),J1={style:{"text-align":"left"}},K1=t("code",null,"图",-1),A1={style:{"text-align":"left"}},B1=t("td",{style:{"text-align":"center"}},"1810",-1),N1={style:{"text-align":"left"}},T1={href:"https://leetcode.com/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},F1=t("td",{style:{"text-align":"center"}},null,-1),W1={style:{"text-align":"left"}},Q1=t("code",null,"深度优先搜索",-1),R1=t("code",null,"广度优先搜索",-1),U1=t("code",null,"图",-1),X1=t("code",null,"2+",-1),Z1={style:{"text-align":"left"}},G1=t("td",{style:{"text-align":"center"}},"1820",-1),S1={style:{"text-align":"left"}},Y1={href:"https://leetcode.com/problems/maximum-number-of-accepted-invitations",target:"_blank",rel:"noopener noreferrer"},$1=t("td",{style:{"text-align":"center"}},null,-1),tu={style:{"text-align":"left"}},eu=t("code",null,"深度优先搜索",-1),lu=t("code",null,"图",-1),ou=t("code",null,"数组",-1),su=t("code",null,"1+",-1),nu={style:{"text-align":"left"}},du=t("td",{style:{"text-align":"center"}},"1857",-1),_u={style:{"text-align":"left"}},cu={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},iu=t("td",{style:{"text-align":"center"}},null,-1),au={style:{"text-align":"left"}},ru=t("code",null,"图",-1),hu=t("code",null,"拓扑排序",-1),uu=t("code",null,"记忆化搜索",-1),fu=t("code",null,"3+",-1),gu={style:{"text-align":"left"}},mu=t("td",{style:{"text-align":"center"}},"1916",-1),yu={style:{"text-align":"left"}},pu={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},xu=t("td",{style:{"text-align":"center"}},null,-1),bu={style:{"text-align":"left"}},ju=t("code",null,"树",-1),ku=t("code",null,"图",-1),Hu=t("code",null,"拓扑排序",-1),Mu=t("code",null,"3+",-1),Iu={style:{"text-align":"left"}},wu=t("td",{style:{"text-align":"center"}},"1928",-1),vu={style:{"text-align":"left"}},qu={href:"https://leetcode.com/problems/minimum-cost-to-reach-destination-in-time",target:"_blank",rel:"noopener noreferrer"},Lu=t("td",{style:{"text-align":"center"}},null,-1),zu={style:{"text-align":"left"}},Pu=t("code",null,"图",-1),Cu=t("code",null,"数组",-1),Eu=t("code",null,"动态规划",-1),Ou={style:{"text-align":"left"}},Vu=t("td",{style:{"text-align":"center"}},"1971",-1),Du={style:{"text-align":"left"}},Ju={href:"https://leetcode.com/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},Ku=t("td",{style:{"text-align":"center"}},null,-1),Au={style:{"text-align":"left"}},Bu=t("code",null,"深度优先搜索",-1),Nu=t("code",null,"广度优先搜索",-1),Tu=t("code",null,"并查集",-1),Fu=t("code",null,"1+",-1),Wu={style:{"text-align":"left"}},Qu=t("td",{style:{"text-align":"center"}},"1976",-1),Ru={style:{"text-align":"left"}},Uu={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},Xu=t("td",{style:{"text-align":"center"}},null,-1),Zu={style:{"text-align":"left"}},Gu=t("code",null,"图",-1),Su=t("code",null,"拓扑排序",-1),Yu=t("code",null,"动态规划",-1),$u=t("code",null,"1+",-1),tf={style:{"text-align":"left"}},ef=t("td",{style:{"text-align":"center"}},"2039",-1),lf={style:{"text-align":"left"}},of={href:"https://leetcode.com/problems/the-time-when-the-network-becomes-idle",target:"_blank",rel:"noopener noreferrer"},sf=t("td",{style:{"text-align":"center"}},null,-1),nf={style:{"text-align":"left"}},df=t("code",null,"广度优先搜索",-1),_f=t("code",null,"图",-1),cf=t("code",null,"数组",-1),af={style:{"text-align":"left"}},rf=t("td",{style:{"text-align":"center"}},"2045",-1),hf={style:{"text-align":"left"}},uf={href:"https://leetcode.com/problems/second-minimum-time-to-reach-destination",target:"_blank",rel:"noopener noreferrer"},ff=t("td",{style:{"text-align":"center"}},null,-1),gf={style:{"text-align":"left"}},mf=t("code",null,"广度优先搜索",-1),yf=t("code",null,"图",-1),pf=t("code",null,"最短路",-1),xf={style:{"text-align":"left"}},bf=t("td",{style:{"text-align":"center"}},"2050",-1),jf={style:{"text-align":"left"}},kf={href:"https://leetcode.com/problems/parallel-courses-iii",target:"_blank",rel:"noopener noreferrer"},Hf=t("td",{style:{"text-align":"center"}},null,-1),Mf={style:{"text-align":"left"}},If=t("code",null,"图",-1),wf=t("code",null,"拓扑排序",-1),vf=t("code",null,"数组",-1),qf=t("code",null,"1+",-1),Lf={style:{"text-align":"left"}},zf=t("td",{style:{"text-align":"center"}},"2065",-1),Pf={style:{"text-align":"left"}},Cf={href:"https://leetcode.com/problems/maximum-path-quality-of-a-graph",target:"_blank",rel:"noopener noreferrer"},Ef=t("td",{style:{"text-align":"center"}},null,-1),Of={style:{"text-align":"left"}},Vf=t("code",null,"图",-1),Df=t("code",null,"数组",-1),Jf=t("code",null,"回溯",-1),Kf={style:{"text-align":"left"}},Af=t("td",{style:{"text-align":"center"}},"2076",-1),Bf={style:{"text-align":"left"}},Nf={href:"https://leetcode.com/problems/process-restricted-friend-requests",target:"_blank",rel:"noopener noreferrer"},Tf=t("td",{style:{"text-align":"center"}},null,-1),Ff={style:{"text-align":"left"}},Wf=t("code",null,"并查集",-1),Qf=t("code",null,"图",-1),Rf={style:{"text-align":"left"}},Uf=t("td",{style:{"text-align":"center"}},"2077",-1),Xf={style:{"text-align":"left"}},Zf={href:"https://leetcode.com/problems/paths-in-maze-that-lead-to-same-room",target:"_blank",rel:"noopener noreferrer"},Gf=t("td",{style:{"text-align":"center"}},null,-1),Sf={style:{"text-align":"left"}},Yf=t("code",null,"图",-1),$f={style:{"text-align":"left"}},tg=t("td",{style:{"text-align":"center"}},"2092",-1),eg={style:{"text-align":"left"}},lg={href:"https://leetcode.com/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},og=t("td",{style:{"text-align":"center"}},null,-1),sg={style:{"text-align":"left"}},ng=t("code",null,"深度优先搜索",-1),dg=t("code",null,"广度优先搜索",-1),_g=t("code",null,"并查集",-1),cg=t("code",null,"2+",-1),ig={style:{"text-align":"left"}},ag=t("td",{style:{"text-align":"center"}},"2093",-1),rg={style:{"text-align":"left"}},hg={href:"https://leetcode.com/problems/minimum-cost-to-reach-city-with-discounts",target:"_blank",rel:"noopener noreferrer"},ug=t("td",{style:{"text-align":"center"}},null,-1),fg={style:{"text-align":"left"}},gg=t("code",null,"图",-1),mg=t("code",null,"最短路",-1),yg=t("code",null,"堆（优先队列）",-1),pg={style:{"text-align":"left"}},xg=t("td",{style:{"text-align":"center"}},"2097",-1),bg={style:{"text-align":"left"}},jg={href:"https://leetcode.com/problems/valid-arrangement-of-pairs",target:"_blank",rel:"noopener noreferrer"},kg=t("td",{style:{"text-align":"center"}},null,-1),Hg={style:{"text-align":"left"}},Mg=t("code",null,"深度优先搜索",-1),Ig=t("code",null,"图",-1),wg=t("code",null,"欧拉回路",-1),vg={style:{"text-align":"left"}},qg=t("td",{style:{"text-align":"center"}},"2101",-1),Lg={style:{"text-align":"left"}},zg={href:"https://leetcode.com/problems/detonate-the-maximum-bombs",target:"_blank",rel:"noopener noreferrer"},Pg=t("td",{style:{"text-align":"center"}},null,-1),Cg={style:{"text-align":"left"}},Eg=t("code",null,"深度优先搜索",-1),Og=t("code",null,"广度优先搜索",-1),Vg=t("code",null,"图",-1),Dg=t("code",null,"3+",-1),Jg={style:{"text-align":"left"}},Kg=t("td",{style:{"text-align":"center"}},"2115",-1),Ag={style:{"text-align":"left"}},Bg={href:"https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies",target:"_blank",rel:"noopener noreferrer"},Ng=t("td",{style:{"text-align":"center"}},null,-1),Tg={style:{"text-align":"left"}},Fg=t("code",null,"图",-1),Wg=t("code",null,"拓扑排序",-1),Qg=t("code",null,"数组",-1),Rg=t("code",null,"2+",-1),Ug={style:{"text-align":"left"}},Xg=t("td",{style:{"text-align":"center"}},"2123",-1),Zg={style:{"text-align":"left"}},Gg={href:"https://leetcode.com/problems/minimum-operations-to-remove-adjacent-ones-in-matrix",target:"_blank",rel:"noopener noreferrer"},Sg=t("td",{style:{"text-align":"center"}},null,-1),Yg={style:{"text-align":"left"}},$g=t("code",null,"图",-1),tm=t("code",null,"数组",-1),em=t("code",null,"矩阵",-1),lm={style:{"text-align":"left"}},om=t("td",{style:{"text-align":"center"}},"2127",-1),sm={style:{"text-align":"left"}},nm={href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},dm=t("td",{style:{"text-align":"center"}},null,-1),_m={style:{"text-align":"left"}},cm=t("code",null,"深度优先搜索",-1),im=t("code",null,"图",-1),am=t("code",null,"拓扑排序",-1),rm={style:{"text-align":"left"}},hm=t("td",{style:{"text-align":"center"}},"2192",-1),um={style:{"text-align":"left"}},fm={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},gm=t("td",{style:{"text-align":"center"}},null,-1),mm={style:{"text-align":"left"}},ym=t("code",null,"深度优先搜索",-1),pm=t("code",null,"广度优先搜索",-1),xm=t("code",null,"图",-1),bm=t("code",null,"1+",-1),jm={style:{"text-align":"left"}},km=t("td",{style:{"text-align":"center"}},"2203",-1),Hm={style:{"text-align":"left"}},Mm={href:"https://leetcode.com/problems/minimum-weighted-subgraph-with-the-required-paths",target:"_blank",rel:"noopener noreferrer"},Im=t("td",{style:{"text-align":"center"}},null,-1),wm={style:{"text-align":"left"}},vm=t("code",null,"图",-1),qm=t("code",null,"最短路",-1),Lm={style:{"text-align":"left"}},zm=t("td",{style:{"text-align":"center"}},"2204",-1),Pm={style:{"text-align":"left"}},Cm={href:"https://leetcode.com/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Em=t("td",{style:{"text-align":"center"}},null,-1),Om={style:{"text-align":"left"}},Vm=t("code",null,"深度优先搜索",-1),Dm=t("code",null,"广度优先搜索",-1),Jm=t("code",null,"并查集",-1),Km=t("code",null,"1+",-1),Am={style:{"text-align":"left"}},Bm=t("td",{style:{"text-align":"center"}},"2242",-1),Nm={style:{"text-align":"left"}},Tm={href:"https://leetcode.com/problems/maximum-score-of-a-node-sequence",target:"_blank",rel:"noopener noreferrer"},Fm=t("td",{style:{"text-align":"center"}},null,-1),Wm={style:{"text-align":"left"}},Qm=t("code",null,"图",-1),Rm=t("code",null,"数组",-1),Um=t("code",null,"枚举",-1),Xm=t("code",null,"1+",-1),Zm={style:{"text-align":"left"}},Gm=t("td",{style:{"text-align":"center"}},"2246",-1),Sm={style:{"text-align":"left"}},Ym={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},$m=t("td",{style:{"text-align":"center"}},null,-1),ty={style:{"text-align":"left"}},ey=t("code",null,"树",-1),ly=t("code",null,"深度优先搜索",-1),oy=t("code",null,"图",-1),sy=t("code",null,"3+",-1),ny={style:{"text-align":"left"}},dy=t("td",{style:{"text-align":"center"}},"2247",-1),_y={style:{"text-align":"left"}},cy={href:"https://leetcode.com/problems/maximum-cost-of-trip-with-k-highways",target:"_blank",rel:"noopener noreferrer"},iy=t("td",{style:{"text-align":"center"}},null,-1),ay={style:{"text-align":"left"}},ry=t("code",null,"位运算",-1),hy=t("code",null,"图",-1),uy=t("code",null,"动态规划",-1),fy=t("code",null,"1+",-1),gy={style:{"text-align":"left"}},my=t("td",{style:{"text-align":"center"}},"2285",-1),yy={style:{"text-align":"left"}},py={href:"https://leetcode.com/problems/maximum-total-importance-of-roads",target:"_blank",rel:"noopener noreferrer"},xy=t("td",{style:{"text-align":"center"}},null,-1),by={style:{"text-align":"left"}},jy=t("code",null,"贪心",-1),ky=t("code",null,"图",-1),Hy=t("code",null,"排序",-1),My=t("code",null,"1+",-1),Iy={style:{"text-align":"left"}},wy=t("td",{style:{"text-align":"center"}},"2290",-1),vy={style:{"text-align":"left"}},qy={href:"https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner",target:"_blank",rel:"noopener noreferrer"},Ly=t("td",{style:{"text-align":"center"}},null,-1),zy={style:{"text-align":"left"}},Py=t("code",null,"广度优先搜索",-1),Cy=t("code",null,"图",-1),Ey=t("code",null,"数组",-1),Oy=t("code",null,"3+",-1),Vy={style:{"text-align":"left"}},Dy=t("td",{style:{"text-align":"center"}},"2297",-1),Jy={style:{"text-align":"left"}},Ky={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},Ay=t("td",{style:{"text-align":"center"}},null,-1),By={style:{"text-align":"left"}},Ny=t("code",null,"栈",-1),Ty=t("code",null,"图",-1),Fy=t("code",null,"数组",-1),Wy=t("code",null,"3+",-1),Qy={style:{"text-align":"left"}},Ry=t("td",{style:{"text-align":"center"}},"2307",-1),Uy={style:{"text-align":"left"}},Xy={href:"https://leetcode.com/problems/check-for-contradictions-in-equations",target:"_blank",rel:"noopener noreferrer"},Zy=t("td",{style:{"text-align":"center"}},null,-1),Gy={style:{"text-align":"left"}},Sy=t("code",null,"深度优先搜索",-1),Yy=t("code",null,"并查集",-1),$y=t("code",null,"图",-1),tp=t("code",null,"1+",-1),ep={style:{"text-align":"left"}},lp=t("td",{style:{"text-align":"center"}},"2316",-1),op={style:{"text-align":"left"}},sp={href:"https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},np=t("td",{style:{"text-align":"center"}},null,-1),dp={style:{"text-align":"left"}},_p=t("code",null,"深度优先搜索",-1),cp=t("code",null,"广度优先搜索",-1),ip=t("code",null,"并查集",-1),ap=t("code",null,"1+",-1),rp={style:{"text-align":"left"}},hp=t("td",{style:{"text-align":"center"}},"2328",-1),up={style:{"text-align":"left"}},fp={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},gp=t("td",{style:{"text-align":"center"}},null,-1),mp={style:{"text-align":"left"}},yp=t("code",null,"深度优先搜索",-1),pp=t("code",null,"广度优先搜索",-1),xp=t("code",null,"图",-1),bp=t("code",null,"5+",-1),jp={style:{"text-align":"left"}},kp=t("td",{style:{"text-align":"center"}},"2359",-1),Hp={style:{"text-align":"left"}},Mp={href:"https://leetcode.com/problems/find-closest-node-to-given-two-nodes",target:"_blank",rel:"noopener noreferrer"},Ip=t("td",{style:{"text-align":"center"}},null,-1),wp={style:{"text-align":"left"}},vp=t("code",null,"深度优先搜索",-1),qp=t("code",null,"图",-1),Lp={style:{"text-align":"left"}},zp=t("td",{style:{"text-align":"center"}},"2360",-1),Pp={style:{"text-align":"left"}},Cp={href:"https://leetcode.com/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},Ep=t("td",{style:{"text-align":"center"}},null,-1),Op={style:{"text-align":"left"}},Vp=t("code",null,"深度优先搜索",-1),Dp=t("code",null,"图",-1),Jp=t("code",null,"拓扑排序",-1),Kp={style:{"text-align":"left"}},Ap=t("td",{style:{"text-align":"center"}},"2368",-1),Bp={style:{"text-align":"left"}},Np={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},Tp=t("td",{style:{"text-align":"center"}},null,-1),Fp={style:{"text-align":"left"}},Wp=t("code",null,"树",-1),Qp=t("code",null,"深度优先搜索",-1),Rp=t("code",null,"广度优先搜索",-1),Up=t("code",null,"4+",-1),Xp={style:{"text-align":"left"}},Zp=t("td",{style:{"text-align":"center"}},"2371",-1),Gp={style:{"text-align":"left"}},Sp={href:"https://leetcode.com/problems/minimize-maximum-value-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Yp=t("td",{style:{"text-align":"center"}},null,-1),$p={style:{"text-align":"left"}},tx=t("code",null,"并查集",-1),ex=t("code",null,"图",-1),lx=t("code",null,"拓扑排序",-1),ox=t("code",null,"3+",-1),sx={style:{"text-align":"left"}},nx=t("td",{style:{"text-align":"center"}},"2374",-1),dx={style:{"text-align":"left"}},_x={href:"https://leetcode.com/problems/node-with-highest-edge-score",target:"_blank",rel:"noopener noreferrer"},cx=t("td",{style:{"text-align":"center"}},null,-1),ix={style:{"text-align":"left"}},ax=t("code",null,"图",-1),rx=t("code",null,"哈希表",-1),hx={style:{"text-align":"left"}},ux=t("td",{style:{"text-align":"center"}},"2392",-1),fx={style:{"text-align":"left"}},gx={href:"https://leetcode.com/problems/build-a-matrix-with-conditions",target:"_blank",rel:"noopener noreferrer"},mx=t("td",{style:{"text-align":"center"}},null,-1),yx={style:{"text-align":"left"}},px=t("code",null,"图",-1),xx=t("code",null,"拓扑排序",-1),bx=t("code",null,"数组",-1),jx=t("code",null,"1+",-1),kx={style:{"text-align":"left"}},Hx=t("td",{style:{"text-align":"center"}},"2421",-1),Mx={style:{"text-align":"left"}},Ix={href:"https://leetcode.com/problems/number-of-good-paths",target:"_blank",rel:"noopener noreferrer"},wx=t("td",{style:{"text-align":"center"}},null,-1),vx={style:{"text-align":"left"}},qx=t("code",null,"树",-1),Lx=t("code",null,"并查集",-1),zx=t("code",null,"图",-1),Px=t("code",null,"3+",-1),Cx={style:{"text-align":"left"}},Ex=t("td",{style:{"text-align":"center"}},"2467",-1),Ox={style:{"text-align":"left"}},Vx={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Dx=t("td",{style:{"text-align":"center"}},null,-1),Jx={style:{"text-align":"left"}},Kx=t("code",null,"树",-1),Ax=t("code",null,"深度优先搜索",-1),Bx=t("code",null,"广度优先搜索",-1),Nx=t("code",null,"2+",-1),Tx={style:{"text-align":"left"}},Fx=t("td",{style:{"text-align":"center"}},"2473",-1),Wx={style:{"text-align":"left"}},Qx={href:"https://leetcode.com/problems/minimum-cost-to-buy-apples",target:"_blank",rel:"noopener noreferrer"},Rx=t("td",{style:{"text-align":"center"}},null,-1),Ux={style:{"text-align":"left"}},Xx=t("code",null,"图",-1),Zx=t("code",null,"数组",-1),Gx=t("code",null,"最短路",-1),Sx=t("code",null,"1+",-1),Yx={style:{"text-align":"left"}},$x=t("td",{style:{"text-align":"center"}},"2477",-1),t3={style:{"text-align":"left"}},e3={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},l3=t("td",{style:{"text-align":"center"}},null,-1),o3={style:{"text-align":"left"}},s3=t("code",null,"树",-1),n3=t("code",null,"深度优先搜索",-1),d3=t("code",null,"广度优先搜索",-1),_3=t("code",null,"1+",-1),c3={style:{"text-align":"left"}},i3=t("td",{style:{"text-align":"center"}},"2479",-1),a3={style:{"text-align":"left"}},r3={href:"https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},h3=t("td",{style:{"text-align":"center"}},null,-1),u3={style:{"text-align":"left"}},f3=t("code",null,"树",-1),g3=t("code",null,"深度优先搜索",-1),m3=t("code",null,"图",-1),y3=t("code",null,"1+",-1),p3={style:{"text-align":"left"}},x3=t("td",{style:{"text-align":"center"}},"2492",-1),b3={style:{"text-align":"left"}},j3={href:"https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},k3=t("td",{style:{"text-align":"center"}},null,-1),H3={style:{"text-align":"left"}},M3=t("code",null,"深度优先搜索",-1),I3=t("code",null,"广度优先搜索",-1),w3=t("code",null,"并查集",-1),v3=t("code",null,"1+",-1),q3={style:{"text-align":"left"}},L3=t("td",{style:{"text-align":"center"}},"2493",-1),z3={style:{"text-align":"left"}},P3={href:"https://leetcode.com/problems/divide-nodes-into-the-maximum-number-of-groups",target:"_blank",rel:"noopener noreferrer"},C3=t("td",{style:{"text-align":"center"}},null,-1),E3={style:{"text-align":"left"}},O3=t("code",null,"广度优先搜索",-1),V3=t("code",null,"并查集",-1),D3=t("code",null,"图",-1),J3={style:{"text-align":"left"}},K3=t("td",{style:{"text-align":"center"}},"2497",-1),A3={style:{"text-align":"left"}},B3={href:"https://leetcode.com/problems/maximum-star-sum-of-a-graph",target:"_blank",rel:"noopener noreferrer"},N3=t("td",{style:{"text-align":"center"}},null,-1),T3={style:{"text-align":"left"}},F3=t("code",null,"贪心",-1),W3=t("code",null,"图",-1),Q3=t("code",null,"数组",-1),R3=t("code",null,"2+",-1),U3={style:{"text-align":"left"}},X3=t("td",{style:{"text-align":"center"}},"2508",-1),Z3={style:{"text-align":"left"}},G3={href:"https://leetcode.com/problems/add-edges-to-make-degrees-of-all-nodes-even",target:"_blank",rel:"noopener noreferrer"},S3=t("td",{style:{"text-align":"center"}},null,-1),Y3={style:{"text-align":"left"}},$3=t("code",null,"图",-1),tb=t("code",null,"哈希表",-1),eb={style:{"text-align":"left"}},lb=t("td",{style:{"text-align":"center"}},"2577",-1),ob={style:{"text-align":"left"}},sb={href:"https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid",target:"_blank",rel:"noopener noreferrer"},nb=t("td",{style:{"text-align":"center"}},null,-1),db={style:{"text-align":"left"}},_b=t("code",null,"广度优先搜索",-1),cb=t("code",null,"图",-1),ib=t("code",null,"数组",-1),ab=t("code",null,"3+",-1),rb={style:{"text-align":"left"}},hb=t("td",{style:{"text-align":"center"}},"2603",-1),ub={style:{"text-align":"left"}},fb={href:"https://leetcode.com/problems/collect-coins-in-a-tree",target:"_blank",rel:"noopener noreferrer"},gb=t("td",{style:{"text-align":"center"}},null,-1),mb={style:{"text-align":"left"}},yb=t("code",null,"树",-1),pb=t("code",null,"图",-1),xb=t("code",null,"拓扑排序",-1),bb=t("code",null,"1+",-1),jb={style:{"text-align":"left"}},kb=t("td",{style:{"text-align":"center"}},"2608",-1),Hb={style:{"text-align":"left"}},Mb={href:"https://leetcode.com/problems/shortest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},Ib=t("td",{style:{"text-align":"center"}},null,-1),wb={style:{"text-align":"left"}},vb=t("code",null,"广度优先搜索",-1),qb=t("code",null,"图",-1),Lb={style:{"text-align":"left"}},zb=t("td",{style:{"text-align":"center"}},"2642",-1),Pb={style:{"text-align":"left"}},Cb={href:"https://leetcode.com/problems/design-graph-with-shortest-path-calculator",target:"_blank",rel:"noopener noreferrer"},Eb=t("td",{style:{"text-align":"center"}},null,-1),Ob={style:{"text-align":"left"}},Vb=t("code",null,"图",-1),Db=t("code",null,"设计",-1),Jb=t("code",null,"最短路",-1),Kb=t("code",null,"1+",-1),Ab={style:{"text-align":"left"}},Bb=t("td",{style:{"text-align":"center"}},"2646",-1),Nb={style:{"text-align":"left"}},Tb={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},Fb=t("td",{style:{"text-align":"center"}},null,-1),Wb={style:{"text-align":"left"}},Qb=t("code",null,"树",-1),Rb=t("code",null,"深度优先搜索",-1),Ub=t("code",null,"图",-1),Xb=t("code",null,"2+",-1),Zb={style:{"text-align":"left"}},Gb=t("td",{style:{"text-align":"center"}},"2662",-1),Sb={style:{"text-align":"left"}},Yb={href:"https://leetcode.com/problems/minimum-cost-of-a-path-with-special-roads",target:"_blank",rel:"noopener noreferrer"},$b=t("td",{style:{"text-align":"center"}},null,-1),t4={style:{"text-align":"left"}},e4=t("code",null,"图",-1),l4=t("code",null,"数组",-1),o4=t("code",null,"最短路",-1),s4=t("code",null,"1+",-1),n4={style:{"text-align":"left"}},d4=t("td",{style:{"text-align":"center"}},"2685",-1),_4={style:{"text-align":"left"}},c4={href:"https://leetcode.com/problems/count-the-number-of-complete-components",target:"_blank",rel:"noopener noreferrer"},i4=t("td",{style:{"text-align":"center"}},null,-1),a4={style:{"text-align":"left"}},r4=t("code",null,"深度优先搜索",-1),h4=t("code",null,"广度优先搜索",-1),u4=t("code",null,"图",-1),f4={style:{"text-align":"left"}},g4=t("td",{style:{"text-align":"center"}},"2699",-1),m4={style:{"text-align":"left"}},y4={href:"https://leetcode.com/problems/modify-graph-edge-weights",target:"_blank",rel:"noopener noreferrer"},p4=t("td",{style:{"text-align":"center"}},null,-1),x4={style:{"text-align":"left"}},b4=t("code",null,"图",-1),j4=t("code",null,"最短路",-1),k4=t("code",null,"堆（优先队列）",-1),H4={style:{"text-align":"left"}},M4=t("td",{style:{"text-align":"center"}},"2714",-1),I4={style:{"text-align":"left"}},w4={href:"https://leetcode.com/problems/find-shortest-path-with-k-hops",target:"_blank",rel:"noopener noreferrer"},v4=t("td",{style:{"text-align":"center"}},null,-1),q4={style:{"text-align":"left"}},L4=t("code",null,"图",-1),z4=t("code",null,"最短路",-1),P4=t("code",null,"堆（优先队列）",-1),C4={style:{"text-align":"left"}},E4=t("td",{style:{"text-align":"center"}},"2737",-1),O4={style:{"text-align":"left"}},V4={href:"https://leetcode.com/problems/find-the-closest-marked-node",target:"_blank",rel:"noopener noreferrer"},D4=t("td",{style:{"text-align":"center"}},null,-1),J4={style:{"text-align":"left"}},K4=t("code",null,"图",-1),A4=t("code",null,"数组",-1),B4=t("code",null,"最短路",-1),N4=t("code",null,"1+",-1),T4={style:{"text-align":"left"}},F4=t("td",{style:{"text-align":"center"}},"2846",-1),W4={style:{"text-align":"left"}},Q4={href:"https://leetcode.com/problems/minimum-edge-weight-equilibrium-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},R4=t("td",{style:{"text-align":"center"}},null,-1),U4={style:{"text-align":"left"}},X4=t("code",null,"树",-1),Z4=t("code",null,"图",-1),G4=t("code",null,"数组",-1),S4=t("code",null,"1+",-1),Y4={style:{"text-align":"left"}},$4=t("td",{style:{"text-align":"center"}},"2858",-1),t2={style:{"text-align":"left"}},e2={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},l2=t("td",{style:{"text-align":"center"}},null,-1),o2={style:{"text-align":"left"}},s2=t("code",null,"深度优先搜索",-1),n2=t("code",null,"广度优先搜索",-1),d2=t("code",null,"图",-1),_2=t("code",null,"1+",-1),c2={style:{"text-align":"left"}},i2=t("td",{style:{"text-align":"center"}},"2876",-1),a2={style:{"text-align":"left"}},r2={href:"https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},h2=t("td",{style:{"text-align":"center"}},null,-1),u2={style:{"text-align":"left"}},f2=t("code",null,"图",-1),g2=t("code",null,"记忆化搜索",-1),m2=t("code",null,"动态规划",-1),y2={style:{"text-align":"left"}},p2=t("td",{style:{"text-align":"center"}},"2924",-1),x2={style:{"text-align":"left"}},b2={href:"https://leetcode.com/problems/find-champion-ii",target:"_blank",rel:"noopener noreferrer"},j2=t("td",{style:{"text-align":"center"}},null,-1),k2={style:{"text-align":"left"}},H2=t("code",null,"图",-1),M2={style:{"text-align":"left"}},I2=t("td",{style:{"text-align":"center"}},"2959",-1),w2={style:{"text-align":"left"}},v2={href:"https://leetcode.com/problems/number-of-possible-sets-of-closing-branches",target:"_blank",rel:"noopener noreferrer"},q2=t("td",{style:{"text-align":"center"}},null,-1),L2={style:{"text-align":"left"}},z2=t("code",null,"位运算",-1),P2=t("code",null,"图",-1),C2=t("code",null,"枚举",-1),E2=t("code",null,"2+",-1),O2={style:{"text-align":"left"}},V2=t("td",{style:{"text-align":"center"}},"2976",-1),D2={style:{"text-align":"left"}},J2={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-i",target:"_blank",rel:"noopener noreferrer"},K2=t("td",{style:{"text-align":"center"}},null,-1),A2={style:{"text-align":"left"}},B2=t("code",null,"图",-1),N2=t("code",null,"数组",-1),T2=t("code",null,"字符串",-1),F2=t("code",null,"1+",-1),W2={style:{"text-align":"left"}},Q2=t("td",{style:{"text-align":"center"}},"2977",-1),R2={style:{"text-align":"left"}},U2={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},X2=t("td",{style:{"text-align":"center"}},null,-1),Z2={style:{"text-align":"left"}},G2=t("code",null,"图",-1),S2=t("code",null,"字典树",-1),Y2=t("code",null,"数组",-1),$2=t("code",null,"3+",-1),t0={style:{"text-align":"left"}},e0=t("td",{style:{"text-align":"center"}},"3015",-1),l0={style:{"text-align":"left"}},o0={href:"https://leetcode.com/problems/count-the-number-of-houses-at-a-certain-distance-i",target:"_blank",rel:"noopener noreferrer"},s0=t("td",{style:{"text-align":"center"}},null,-1),n0={style:{"text-align":"left"}},d0=t("code",null,"广度优先搜索",-1),_0=t("code",null,"图",-1),c0=t("code",null,"前缀和",-1),i0={style:{"text-align":"left"}},a0=t("td",{style:{"text-align":"center"}},"3017",-1),r0={style:{"text-align":"left"}},h0={href:"https://leetcode.com/problems/count-the-number-of-houses-at-a-certain-distance-ii",target:"_blank",rel:"noopener noreferrer"},u0=t("td",{style:{"text-align":"center"}},null,-1),f0={style:{"text-align":"left"}},g0=t("code",null,"图",-1),m0=t("code",null,"前缀和",-1),y0={style:{"text-align":"left"}},p0=t("td",{style:{"text-align":"center"}},"3108",-1),x0={style:{"text-align":"left"}},b0={href:"https://leetcode.com/problems/minimum-cost-walk-in-weighted-graph",target:"_blank",rel:"noopener noreferrer"},j0=t("td",{style:{"text-align":"center"}},null,-1),k0={style:{"text-align":"left"}},H0=t("code",null,"位运算",-1),M0=t("code",null,"并查集",-1),I0=t("code",null,"图",-1),w0=t("code",null,"1+",-1),v0={style:{"text-align":"left"}},q0=t("td",{style:{"text-align":"center"}},"3112",-1),L0={style:{"text-align":"left"}},z0={href:"https://leetcode.com/problems/minimum-time-to-visit-disappearing-nodes",target:"_blank",rel:"noopener noreferrer"},P0=t("td",{style:{"text-align":"center"}},null,-1),C0={style:{"text-align":"left"}},E0=t("code",null,"图",-1),O0=t("code",null,"数组",-1),V0=t("code",null,"最短路",-1),D0=t("code",null,"1+",-1),J0={style:{"text-align":"left"}},K0=t("td",{style:{"text-align":"center"}},"3123",-1),A0={style:{"text-align":"left"}},B0={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},N0=t("td",{style:{"text-align":"center"}},null,-1),T0={style:{"text-align":"left"}},F0=t("code",null,"深度优先搜索",-1),W0=t("code",null,"广度优先搜索",-1),Q0=t("code",null,"图",-1),R0=t("code",null,"2+",-1),U0={style:{"text-align":"left"}},X0=t("td",{style:{"text-align":"center"}},"3203",-1),Z0={style:{"text-align":"left"}},G0={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},S0=t("td",{style:{"text-align":"center"}},null,-1),Y0={style:{"text-align":"left"}},$0=t("code",null,"树",-1),t6=t("code",null,"深度优先搜索",-1),e6=t("code",null,"广度优先搜索",-1),l6=t("code",null,"1+",-1),o6={style:{"text-align":"left"}},s6=t("td",{style:{"text-align":"center"}},"3241",-1),n6={style:{"text-align":"left"}},d6={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},_6=t("td",{style:{"text-align":"center"}},null,-1),c6={style:{"text-align":"left"}},i6=t("code",null,"树",-1),a6=t("code",null,"深度优先搜索",-1),r6=t("code",null,"图",-1),h6=t("code",null,"1+",-1),u6={style:{"text-align":"left"}},f6=t("td",{style:{"text-align":"center"}},"3243",-1),g6={style:{"text-align":"left"}},m6={href:"https://leetcode.com/problems/shortest-distance-after-road-addition-queries-i",target:"_blank",rel:"noopener noreferrer"},y6=t("td",{style:{"text-align":"center"}},null,-1),p6={style:{"text-align":"left"}},x6=t("code",null,"广度优先搜索",-1),b6=t("code",null,"图",-1),j6=t("code",null,"数组",-1),k6={style:{"text-align":"left"}},H6=t("td",{style:{"text-align":"center"}},"3244",-1),M6={style:{"text-align":"left"}},I6={href:"https://leetcode.com/problems/shortest-distance-after-road-addition-queries-ii",target:"_blank",rel:"noopener noreferrer"},w6=t("td",{style:{"text-align":"center"}},null,-1),v6={style:{"text-align":"left"}},q6=t("code",null,"贪心",-1),L6=t("code",null,"图",-1),z6=t("code",null,"数组",-1),P6=t("code",null,"1+",-1),C6={style:{"text-align":"left"}},E6=t("td",{style:{"text-align":"center"}},"3286",-1),O6={style:{"text-align":"left"}},V6={href:"https://leetcode.com/problems/find-a-safe-walk-through-a-grid",target:"_blank",rel:"noopener noreferrer"},D6=t("td",{style:{"text-align":"center"}},null,-1),J6={style:{"text-align":"left"}},K6=t("code",null,"广度优先搜索",-1),A6=t("code",null,"图",-1),B6=t("code",null,"数组",-1),N6=t("code",null,"3+",-1),T6={style:{"text-align":"left"}},F6=t("td",{style:{"text-align":"center"}},"3310",-1),W6={style:{"text-align":"left"}},Q6={href:"https://leetcode.com/problems/remove-methods-from-project",target:"_blank",rel:"noopener noreferrer"},R6=t("td",{style:{"text-align":"center"}},null,-1),U6={style:{"text-align":"left"}},X6=t("code",null,"深度优先搜索",-1),Z6=t("code",null,"广度优先搜索",-1),G6=t("code",null,"图",-1),S6={style:{"text-align":"left"}},Y6=t("td",{style:{"text-align":"center"}},"3311",-1),$6={style:{"text-align":"left"}},t5={href:"https://leetcode.com/problems/construct-2d-grid-matching-graph-layout",target:"_blank",rel:"noopener noreferrer"},e5=t("td",{style:{"text-align":"center"}},null,-1),l5={style:{"text-align":"left"}},o5=t("code",null,"图",-1),s5=t("code",null,"数组",-1),n5=t("code",null,"哈希表",-1),d5=t("code",null,"1+",-1),_5={style:{"text-align":"left"}},c5=t("td",{style:{"text-align":"center"}},"LCP 04",-1),i5={style:{"text-align":"left"}},a5={href:"https://leetcode.cn/problems/broken-board-dominoes",target:"_blank",rel:"noopener noreferrer"},r5=t("td",{style:{"text-align":"center"}},null,-1),h5={style:{"text-align":"left"}},u5=t("code",null,"位运算",-1),f5=t("code",null,"图",-1),g5=t("code",null,"数组",-1),m5=t("code",null,"2+",-1),y5={style:{"text-align":"left"}},p5=t("td",{style:{"text-align":"center"}},"LCP 07",-1),x5={style:{"text-align":"left"}},b5={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},j5=t("td",{style:{"text-align":"center"}},null,-1),k5={style:{"text-align":"left"}},H5=t("code",null,"深度优先搜索",-1),M5=t("code",null,"广度优先搜索",-1),I5=t("code",null,"图",-1),w5=t("code",null,"1+",-1),v5={style:{"text-align":"left"}},q5=t("td",{style:{"text-align":"center"}},"LCP 16",-1),L5={style:{"text-align":"left"}},z5={href:"https://leetcode.cn/problems/you-le-yuan-de-you-lan-ji-hua",target:"_blank",rel:"noopener noreferrer"},P5=t("td",{style:{"text-align":"center"}},null,-1),C5={style:{"text-align":"left"}},E5=t("code",null,"图",-1),O5=t("code",null,"几何",-1),V5=t("code",null,"数学",-1),D5={style:{"text-align":"left"}},J5=t("td",{style:{"text-align":"center"}},"LCP 21",-1),K5={style:{"text-align":"left"}},A5={href:"https://leetcode.cn/problems/Za25hA",target:"_blank",rel:"noopener noreferrer"},B5=t("td",{style:{"text-align":"center"}},null,-1),N5={style:{"text-align":"left"}},T5=t("code",null,"深度优先搜索",-1),F5=t("code",null,"广度优先搜索",-1),W5=t("code",null,"图",-1),Q5=t("code",null,"1+",-1),R5={style:{"text-align":"left"}},U5=t("td",{style:{"text-align":"center"}},"LCP 35",-1),X5={style:{"text-align":"left"}},Z5={href:"https://leetcode.cn/problems/DFPeFJ",target:"_blank",rel:"noopener noreferrer"},G5=t("td",{style:{"text-align":"center"}},null,-1),S5={style:{"text-align":"left"}},Y5=t("code",null,"图",-1),$5=t("code",null,"最短路",-1),tj=t("code",null,"堆（优先队列）",-1),ej={style:{"text-align":"left"}},lj=t("td",{style:{"text-align":"center"}},"LCP 46",-1),oj={style:{"text-align":"left"}},sj={href:"https://leetcode.cn/problems/05ZEDJ",target:"_blank",rel:"noopener noreferrer"},nj=t("td",{style:{"text-align":"center"}},null,-1),dj={style:{"text-align":"left"}},_j=t("code",null,"图",-1),cj=t("code",null,"数组",-1),ij=t("code",null,"数学",-1),aj={style:{"text-align":"left"}},rj=t("td",{style:{"text-align":"center"}},"LCP 54",-1),hj={style:{"text-align":"left"}},uj={href:"https://leetcode.cn/problems/s5kipK",target:"_blank",rel:"noopener noreferrer"},fj=t("td",{style:{"text-align":"center"}},null,-1),gj={style:{"text-align":"left"}},mj=t("code",null,"图",-1),yj=t("code",null,"数组",-1),pj=t("code",null,"双连通分量",-1),xj={style:{"text-align":"left"}},bj=t("td",{style:{"text-align":"center"}},"LCP 56",-1),jj={style:{"text-align":"left"}},kj={href:"https://leetcode.cn/problems/6UEx57",target:"_blank",rel:"noopener noreferrer"},Hj=t("td",{style:{"text-align":"center"}},null,-1),Mj={style:{"text-align":"left"}},Ij=t("code",null,"广度优先搜索",-1),wj=t("code",null,"图",-1),vj=t("code",null,"数组",-1),qj=t("code",null,"3+",-1),Lj={style:{"text-align":"left"}},zj=t("td",{style:{"text-align":"center"}},"LCP 62",-1),Pj={style:{"text-align":"left"}},Cj={href:"https://leetcode.cn/problems/D9PW8w",target:"_blank",rel:"noopener noreferrer"},Ej=t("td",{style:{"text-align":"center"}},null,-1),Oj={style:{"text-align":"left"}},Vj=t("code",null,"图",-1),Dj={style:{"text-align":"left"}},Jj=t("td",{style:{"text-align":"center"}},"LCP 63",-1),Kj={style:{"text-align":"left"}},Aj={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},Bj=t("td",{style:{"text-align":"center"}},null,-1),Nj={style:{"text-align":"left"}},Tj=t("code",null,"深度优先搜索",-1),Fj=t("code",null,"广度优先搜索",-1),Wj=t("code",null,"图",-1),Qj=t("code",null,"5+",-1),Rj={style:{"text-align":"left"}},Uj=t("td",{style:{"text-align":"center"}},"剑指 Offer II 106",-1),Xj={style:{"text-align":"left"}},Zj={href:"https://leetcode.cn/problems/vEAB3K",target:"_blank",rel:"noopener noreferrer"},Gj=t("td",{style:{"text-align":"center"}},null,-1),Sj={style:{"text-align":"left"}},Yj=t("code",null,"深度优先搜索",-1),$j=t("code",null,"广度优先搜索",-1),t8=t("code",null,"并查集",-1),e8=t("code",null,"1+",-1),l8={style:{"text-align":"left"}},o8=t("td",{style:{"text-align":"center"}},"剑指 Offer II 110",-1),s8={style:{"text-align":"left"}},n8={href:"https://leetcode.cn/problems/bP4bmD",target:"_blank",rel:"noopener noreferrer"},d8=t("td",{style:{"text-align":"center"}},null,-1),_8={style:{"text-align":"left"}},c8=t("code",null,"深度优先搜索",-1),i8=t("code",null,"广度优先搜索",-1),a8=t("code",null,"图",-1),r8=t("code",null,"1+",-1),h8={style:{"text-align":"left"}},u8=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),f8={style:{"text-align":"left"}},g8={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},m8=t("td",{style:{"text-align":"center"}},null,-1),y8={style:{"text-align":"left"}},p8=t("code",null,"深度优先搜索",-1),x8=t("code",null,"广度优先搜索",-1),b8=t("code",null,"并查集",-1),j8=t("code",null,"3+",-1),k8={style:{"text-align":"left"}},H8=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),M8={style:{"text-align":"left"}},I8={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},w8=t("td",{style:{"text-align":"center"}},null,-1),v8={style:{"text-align":"left"}},q8=t("code",null,"深度优先搜索",-1),L8=t("code",null,"广度优先搜索",-1),z8=t("code",null,"图",-1),P8=t("code",null,"5+",-1),C8={style:{"text-align":"left"}},E8=t("td",{style:{"text-align":"center"}},"剑指 Offer II 113",-1),O8={style:{"text-align":"left"}},V8={href:"https://leetcode.cn/problems/QA2IGt",target:"_blank",rel:"noopener noreferrer"},D8=t("td",{style:{"text-align":"center"}},null,-1),J8={style:{"text-align":"left"}},K8=t("code",null,"深度优先搜索",-1),A8=t("code",null,"广度优先搜索",-1),B8=t("code",null,"图",-1),N8=t("code",null,"1+",-1),T8={style:{"text-align":"left"}},F8=t("td",{style:{"text-align":"center"}},"剑指 Offer II 114",-1),W8={style:{"text-align":"left"}},Q8={href:"https://leetcode.cn/problems/Jf1JuT",target:"_blank",rel:"noopener noreferrer"},R8=t("td",{style:{"text-align":"center"}},null,-1),U8={style:{"text-align":"left"}},X8=t("code",null,"深度优先搜索",-1),Z8=t("code",null,"广度优先搜索",-1),G8=t("code",null,"图",-1),S8=t("code",null,"3+",-1),Y8={style:{"text-align":"left"}},$8=t("td",{style:{"text-align":"center"}},"剑指 Offer II 115",-1),t7={style:{"text-align":"left"}},e7={href:"https://leetcode.cn/problems/ur2n8P",target:"_blank",rel:"noopener noreferrer"},l7=t("td",{style:{"text-align":"center"}},null,-1),o7={style:{"text-align":"left"}},s7=t("code",null,"图",-1),n7=t("code",null,"拓扑排序",-1),d7=t("code",null,"数组",-1),_7={style:{"text-align":"left"}},c7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 116",-1),i7={style:{"text-align":"left"}},a7={href:"https://leetcode.cn/problems/bLyHh0",target:"_blank",rel:"noopener noreferrer"},r7=t("td",{style:{"text-align":"center"}},null,-1),h7={style:{"text-align":"left"}},u7=t("code",null,"深度优先搜索",-1),f7=t("code",null,"广度优先搜索",-1),g7=t("code",null,"并查集",-1),m7=t("code",null,"1+",-1),y7={style:{"text-align":"left"}},p7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 118",-1),x7={style:{"text-align":"left"}},b7={href:"https://leetcode.cn/problems/7LpjUW",target:"_blank",rel:"noopener noreferrer"},j7=t("td",{style:{"text-align":"center"}},null,-1),k7={style:{"text-align":"left"}},H7=t("code",null,"深度优先搜索",-1),M7=t("code",null,"广度优先搜索",-1),I7=t("code",null,"并查集",-1),w7=t("code",null,"1+",-1),v7={style:{"text-align":"left"}},q7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 86",-1),L7={style:{"text-align":"left"}},z7={href:"https://leetcode.cn/problems/M99OJA",target:"_blank",rel:"noopener noreferrer"},P7=t("td",{style:{"text-align":"center"}},null,-1),C7={style:{"text-align":"left"}},E7=t("code",null,"深度优先搜索",-1),O7=t("code",null,"广度优先搜索",-1),V7=t("code",null,"图",-1),D7=t("code",null,"1+",-1),J7={style:{"text-align":"left"}},K7=t("td",{style:{"text-align":"center"}},"面试题 04.01",-1),A7={style:{"text-align":"left"}},B7={href:"https://leetcode.cn/problems/route-between-nodes-lcci",target:"_blank",rel:"noopener noreferrer"},N7=t("td",{style:{"text-align":"center"}},null,-1),T7={style:{"text-align":"left"}},F7=t("code",null,"深度优先搜索",-1),W7=t("code",null,"广度优先搜索",-1),Q7=t("code",null,"图",-1),R7={style:{"text-align":"left"}};function U7(X7,Z7){const s=_("RouterLink"),n=_("ExternalLinkIcon"),d=_("font");return i(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[p]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[j]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[H]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-queue.html"},{default:o(()=>[M]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[I]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[w]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[v]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[q]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[L]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[z]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[P]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[C]),_:1}),l(),E,l(),e(s,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[O]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[V]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[D]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/strongly-connected-component.html"},{default:o(()=>[J]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[K]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:o(()=>[A]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[B]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[N]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[T]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[F]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[W]),_:1})]),Q,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[R]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[U]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[X]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[Z]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[G]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[S]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[Y]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[st]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[nt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[pt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:o(()=>[jt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[Ht]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/randomized.html"},{default:o(()=>[Mt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:o(()=>[It]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/reservoir-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/rejection-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/database.html"},{default:o(()=>[qt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Lt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:o(()=>[zt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[Pt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/interactive.html"},{default:o(()=>[Ct]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/iterator.html"},{default:o(()=>[Et]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/concurrency.html"},{default:o(()=>[Ot]),_:1})])]),Vt,r(" prettier-ignore "),t("table",null,[Dt,t("tbody",null,[t("tr",null,[Jt,t("td",Kt,[t("a",At,[l("克隆图"),e(n)])]),t("td",Bt,[e(s,{to:"/leetcode-js/problem/0133.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Nt,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Tt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ft]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Wt]),_:1}),l(),Qt]),t("td",Rt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ut,t("td",Xt,[t("a",Zt,[l("课程表"),e(n)])]),t("td",Gt,[e(s,{to:"/leetcode-js/problem/0207.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",St,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Yt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$t]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[te]),_:1}),l(),ee]),t("td",le,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oe,t("td",se,[t("a",ne,[l("课程表 II"),e(n)])]),t("td",de,[e(s,{to:"/leetcode-js/problem/0210.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_e,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ce]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ie]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ae]),_:1}),l(),re]),t("td",he,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[l("以图判树"),e(n)])]),me,t("td",ye,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[pe]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[xe]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[be]),_:1}),l(),je]),t("td",ke,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[He,t("td",Me,[t("a",Ie,[l("火星词典"),e(n)])]),we,t("td",ve,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[qe]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Le]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ze]),_:1}),l(),Pe]),t("td",Ce,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ee,t("td",Oe,[t("a",Ve,[l("搜寻名人"),e(n)])]),De,t("td",Je,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Ke]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[Ae]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/interactive.html"},{default:o(()=>[Be]),_:1})]),t("td",Ne,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Te,t("td",Fe,[t("a",We,[l("最小高度树"),e(n)])]),Qe,t("td",Re,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ue]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Xe]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Ze]),_:1}),l(),Ge]),t("td",Se,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ye,t("td",$e,[t("a",tl,[l("无向图中连通分量的数目"),e(n)])]),el,t("td",ll,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ol]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[sl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[nl]),_:1}),l(),dl]),t("td",_l,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cl,t("td",il,[t("a",al,[l("矩阵中的最长递增路径"),e(n)])]),rl,t("td",hl,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ul]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[fl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[gl]),_:1}),l(),ml]),t("td",yl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pl,t("td",xl,[t("a",bl,[l("重新安排行程"),e(n)])]),jl,t("td",kl,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Hl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Ml]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[Il]),_:1})]),t("td",wl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vl,t("td",ql,[t("a",Ll,[l("除法求值"),e(n)])]),t("td",zl,[e(s,{to:"/leetcode-js/problem/0399.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Pl,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Cl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[El]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Ol]),_:1}),l(),Vl]),t("td",Dl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jl,t("td",Kl,[t("a",Al,[l("序列重建"),e(n)])]),Bl,t("td",Nl,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Tl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[Fl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Wl]),_:1})]),t("td",Ql,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rl,t("td",Ul,[t("a",Xl,[l("迷宫 III"),e(n)])]),Zl,t("td",Gl,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Sl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Yl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[$l]),_:1}),l(),to]),t("td",eo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lo,t("td",oo,[t("a",so,[l("迷宫 II"),e(n)])]),no,t("td",_o,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[co]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[io]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ao]),_:1}),l(),ro]),t("td",ho,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uo,t("td",fo,[t("a",go,[l("省份数量"),e(n)])]),mo,t("td",yo,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[po]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[xo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[bo]),_:1}),l(),jo]),t("td",ko,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ho,t("td",Mo,[t("a",Io,[l("设计 Excel 求和公式"),e(n)])]),wo,t("td",vo,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[qo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Lo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[zo]),_:1}),l(),Po]),t("td",Co,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Eo,t("td",Oo,[t("a",Vo,[l("冗余连接"),e(n)])]),Do,t("td",Jo,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ko]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ao]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Bo]),_:1}),l(),No]),t("td",To,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fo,t("td",Wo,[t("a",Qo,[l("冗余连接 II"),e(n)])]),Ro,t("td",Uo,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Xo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Zo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Go]),_:1}),l(),So]),t("td",Yo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$o,t("td",ts,[t("a",es,[l("网络延迟时间"),e(n)])]),ls,t("td",os,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ss]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ns]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ds]),_:1}),l(),_s]),t("td",cs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[is,t("td",as,[t("a",rs,[l("破解保险箱"),e(n)])]),hs,t("td",us,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[fs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[gs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[ms]),_:1})]),t("td",ys,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ps,t("td",xs,[t("a",bs,[l("情侣牵手"),e(n)])]),js,t("td",ks,[e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Hs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ms]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Is]),_:1}),l(),ws]),t("td",vs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qs,t("td",Ls,[t("a",zs,[l("判断二分图"),e(n)])]),Ps,t("td",Cs,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Es]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Os]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Vs]),_:1}),l(),Ds]),t("td",Js,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ks,t("td",As,[t("a",Bs,[l("K 站中转内最便宜的航班"),e(n)])]),Ns,t("td",Ts,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Fs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ws]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Qs]),_:1}),l(),Rs]),t("td",Us,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xs,t("td",Zs,[t("a",Gs,[l("所有可能的路径"),e(n)])]),Ss,t("td",Ys,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[$s]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[tn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[en]),_:1}),l(),ln]),t("td",on,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sn,t("td",nn,[t("a",dn,[l("找到最终的安全状态"),e(n)])]),_n,t("td",cn,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[an]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[rn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[hn]),_:1}),l(),un]),t("td",fn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gn,t("td",mn,[t("a",yn,[l("树中距离之和"),e(n)])]),pn,t("td",xn,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[bn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[jn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[kn]),_:1}),l(),Hn]),t("td",Mn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[In,t("td",wn,[t("a",vn,[l("钥匙和房间"),e(n)])]),qn,t("td",Ln,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[zn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Pn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Cn]),_:1})]),t("td",En,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[On,t("td",Vn,[t("a",Dn,[l("访问所有节点的最短路径"),e(n)])]),Jn,t("td",Kn,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[An]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Bn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Nn]),_:1}),l(),Tn]),t("td",Fn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wn,t("td",Qn,[t("a",Rn,[l("喧闹和富有"),e(n)])]),Un,t("td",Xn,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Zn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Gn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[Sn]),_:1}),l(),Yn]),t("td",$n,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[td,t("td",ed,[t("a",ld,[l("细分图中的可到达节点"),e(n)])]),od,t("td",sd,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[nd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[dd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[_d]),_:1})]),t("td",cd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[id,t("td",ad,[t("a",rd,[l("可能的二分法"),e(n)])]),hd,t("td",ud,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[fd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[gd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[md]),_:1}),l(),yd]),t("td",pd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xd,t("td",bd,[t("a",jd,[l("猫和老鼠"),e(n)])]),kd,t("td",Hd,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Md]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[Id]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[wd]),_:1}),l(),vd]),t("td",qd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ld,t("td",zd,[t("a",Pd,[l("尽量减少恶意软件的传播"),e(n)])]),Cd,t("td",Ed,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Od]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Vd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Dd]),_:1}),l(),Jd]),t("td",Kd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ad,t("td",Bd,[t("a",Nd,[l("尽量减少恶意软件的传播 II"),e(n)])]),Td,t("td",Fd,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Wd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Qd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Rd]),_:1}),l(),Ud]),t("td",Xd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zd,t("td",Gd,[t("a",Sd,[l("移除最多的同行或同列石头"),e(n)])]),Yd,t("td",$d,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[t_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[e_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[l_]),_:1}),l(),o_]),t("td",s_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n_,t("td",d_,[t("a",__,[l("等式方程的可满足性"),e(n)])]),c_,t("td",i_,[e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[a_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[r_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[h_]),_:1}),l(),u_]),t("td",f_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g_,t("td",m_,[t("a",y_,[l("找到小镇的法官"),e(n)])]),p_,t("td",x_,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[b_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[j_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[k_]),_:1})]),t("td",H_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[M_,t("td",I_,[t("a",w_,[l("不邻接植花"),e(n)])]),v_,t("td",q_,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[L_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[z_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[P_]),_:1})]),t("td",C_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E_,t("td",O_,[t("a",V_,[l("从始点到终点的所有路径"),e(n)])]),D_,t("td",J_,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[K_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[A_]),_:1})]),t("td",B_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N_,t("td",T_,[t("a",F_,[l("颜色交替的最短路径"),e(n)])]),W_,t("td",Q_,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[R_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[U_]),_:1})]),t("td",X_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z_,t("td",G_,[t("a",S_,[l("最低成本连通所有城市"),e(n)])]),Y_,t("td",$_,[e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[tc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ec]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[lc]),_:1}),l(),oc]),t("td",sc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nc,t("td",dc,[t("a",_c,[l("并行课程"),e(n)])]),cc,t("td",ic,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ac]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[rc]),_:1})]),t("td",hc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uc,t("td",fc,[t("a",gc,[l("水资源分配优化"),e(n)])]),mc,t("td",yc,[e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[pc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[xc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[bc]),_:1}),l(),jc]),t("td",kc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hc,t("td",Mc,[t("a",Ic,[l("查找集群内的关键连接"),e(n)])]),wc,t("td",vc,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[qc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Lc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:o(()=>[zc]),_:1})]),t("td",Pc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cc,t("td",Ec,[t("a",Oc,[l("项目管理"),e(n)])]),Vc,t("td",Dc,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Jc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Kc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Ac]),_:1}),l(),Bc]),t("td",Nc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Tc,t("td",Fc,[t("a",Wc,[l("树的直径"),e(n)])]),Qc,t("td",Rc,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Uc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Xc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Zc]),_:1}),l(),Gc]),t("td",Sc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yc,t("td",$c,[t("a",ti,[l("你能从盒子里获得的最大糖果数"),e(n)])]),ei,t("td",li,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[oi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[si]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ni]),_:1})]),t("td",di,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_i,t("td",ci,[t("a",ii,[l("获取你好友已观看的视频"),e(n)])]),ai,t("td",ri,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[hi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ui]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[fi]),_:1}),l(),gi]),t("td",mi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yi,t("td",pi,[t("a",xi,[l("连通网络的操作次数"),e(n)])]),bi,t("td",ji,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ki]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Hi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Mi]),_:1}),l(),Ii]),t("td",wi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vi,t("td",qi,[t("a",Li,[l("阈值距离内邻居最少的城市"),e(n)])]),zi,t("td",Pi,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Ci]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ei]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[Oi]),_:1})]),t("td",Vi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Di,t("td",Ji,[t("a",Ki,[l("验证二叉树"),e(n)])]),Ai,t("td",Bi,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ni]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ti]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Fi]),_:1}),l(),Wi]),t("td",Qi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ri,t("td",Ui,[t("a",Xi,[l("使网格图至少有一条有效路径的最小代价"),e(n)])]),Zi,t("td",Gi,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Si]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Yi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[$i]),_:1}),l(),ta]),t("td",ea,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[la,t("td",oa,[t("a",sa,[l("T 秒后青蛙的位置"),e(n)])]),na,t("td",da,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[_a]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ca]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ia]),_:1}),l(),aa]),t("td",ra,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ha,t("td",ua,[t("a",fa,[l("课程表 IV"),e(n)])]),ga,t("td",ma,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ya]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[pa]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[xa]),_:1}),l(),ba]),t("td",ja,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ka,t("td",Ha,[t("a",Ma,[l("重新规划路线"),e(n)])]),Ia,t("td",wa,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[va]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[qa]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[La]),_:1})]),t("td",za,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pa,t("td",Ca,[t("a",Ea,[l("找到最小生成树里的关键边和伪关键边"),e(n)])]),Oa,t("td",Va,[e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Da]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Ja]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[Ka]),_:1}),l(),Aa]),t("td",Ba,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Na,t("td",Ta,[t("a",Fa,[l("并行课程 II"),e(n)])]),Wa,t("td",Qa,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Ra]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Ua]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Xa]),_:1}),l(),Za]),t("td",Ga,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sa,t("td",Ya,[t("a",$a,[l("概率最大的路径"),e(n)])]),tr,t("td",er,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[lr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[or]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[sr]),_:1}),l(),nr]),t("td",dr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_r,t("td",cr,[t("a",ir,[l("图中最相似的路径"),e(n)])]),ar,t("td",rr,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[hr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ur]),_:1})]),t("td",fr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gr,t("td",mr,[t("a",yr,[l("可以到达所有点的最少点数目"),e(n)])]),pr,t("td",xr,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[br]),_:1})]),t("td",jr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kr,t("td",Hr,[t("a",Mr,[l("保证图可完全遍历"),e(n)])]),Ir,t("td",wr,[e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[vr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[qr]),_:1})]),t("td",Lr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zr,t("td",Pr,[t("a",Cr,[l("连接所有点的最小费用"),e(n)])]),Er,t("td",Or,[e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Vr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Dr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Jr]),_:1}),l(),Kr]),t("td",Ar,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Br,t("td",Nr,[t("a",Tr,[l("奇怪的打印机 II"),e(n)])]),Fr,t("td",Wr,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Qr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[Rr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ur]),_:1}),l(),Xr]),t("td",Zr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gr,t("td",Sr,[t("a",Yr,[l("最大网络秩"),e(n)])]),$r,t("td",th,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[eh]),_:1})]),t("td",lh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oh,t("td",sh,[t("a",nh,[l("矩阵转换后的秩"),e(n)])]),dh,t("td",_h,[e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[ch]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ih]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[ah]),_:1}),l(),rh]),t("td",hh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uh,t("td",fh,[t("a",gh,[l("检查边长度限制的路径是否存在"),e(n)])]),mh,t("td",yh,[e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[ph]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[xh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[bh]),_:1}),l(),jh]),t("td",kh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hh,t("td",Mh,[t("a",Ih,[l("重构一棵树的方案数"),e(n)])]),wh,t("td",vh,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[qh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Lh]),_:1})]),t("td",zh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ph,t("td",Ch,[t("a",Eh,[l("检查边长度限制的路径是否存在 II"),e(n)])]),Oh,t("td",Vh,[e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Dh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Jh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[Kh]),_:1})]),t("td",Ah,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bh,t("td",Nh,[t("a",Th,[l("猫和老鼠 II"),e(n)])]),Fh,t("td",Wh,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Qh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[Rh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[Uh]),_:1}),l(),Xh]),t("td",Zh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gh,t("td",Sh,[t("a",Yh,[l("一个图中连通三元组的最小度数"),e(n)])]),$h,t("td",t1,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[e1]),_:1})]),t("td",l1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o1,t("td",s1,[t("a",n1,[l("未知网格中的最短路径"),e(n)])]),d1,t("td",_1,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[c1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[i1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[a1]),_:1}),l(),r1]),t("td",h1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u1,t("td",f1,[t("a",g1,[l("统计点对的数目"),e(n)])]),m1,t("td",y1,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[p1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[x1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[b1]),_:1}),l(),j1]),t("td",k1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H1,t("td",M1,[t("a",I1,[l("从第一个节点出发到最后一个节点的受限路径数"),e(n)])]),w1,t("td",v1,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[q1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[L1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[z1]),_:1}),l(),P1]),t("td",C1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E1,t("td",O1,[t("a",V1,[l("找出星型图的中心节点"),e(n)])]),D1,t("td",J1,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[K1]),_:1})]),t("td",A1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[B1,t("td",N1,[t("a",T1,[l("隐藏网格下的最小消耗路径"),e(n)])]),F1,t("td",W1,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Q1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[R1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[U1]),_:1}),l(),X1]),t("td",Z1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G1,t("td",S1,[t("a",Y1,[l("最多邀请的个数"),e(n)])]),$1,t("td",tu,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[eu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[lu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ou]),_:1}),l(),su]),t("td",nu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[du,t("td",_u,[t("a",cu,[l("有向图中最大颜色值"),e(n)])]),iu,t("td",au,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ru]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[hu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[uu]),_:1}),l(),fu]),t("td",gu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mu,t("td",yu,[t("a",pu,[l("统计为蚁群构筑房间的不同顺序"),e(n)])]),xu,t("td",bu,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ju]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ku]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[Hu]),_:1}),l(),Mu]),t("td",Iu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wu,t("td",vu,[t("a",qu,[l("规定时间内到达终点的最小花费"),e(n)])]),Lu,t("td",zu,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Pu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Cu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Eu]),_:1})]),t("td",Ou,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vu,t("td",Du,[t("a",Ju,[l("寻找图中是否存在路径"),e(n)])]),Ku,t("td",Au,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Bu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Nu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Tu]),_:1}),l(),Fu]),t("td",Wu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Qu,t("td",Ru,[t("a",Uu,[l("到达目的地的方案数"),e(n)])]),Xu,t("td",Zu,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Gu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[Su]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Yu]),_:1}),l(),$u]),t("td",tf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ef,t("td",lf,[t("a",of,[l("网络空闲的时刻"),e(n)])]),sf,t("td",nf,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[df]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[_f]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[cf]),_:1})]),t("td",af,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rf,t("td",hf,[t("a",uf,[l("到达目的地的第二短时间"),e(n)])]),ff,t("td",gf,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[mf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[yf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[pf]),_:1})]),t("td",xf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bf,t("td",jf,[t("a",kf,[l("并行课程 III"),e(n)])]),Hf,t("td",Mf,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[If]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[wf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vf]),_:1}),l(),qf]),t("td",Lf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zf,t("td",Pf,[t("a",Cf,[l("最大化一张图中的路径价值"),e(n)])]),Ef,t("td",Of,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Vf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Df]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[Jf]),_:1})]),t("td",Kf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Af,t("td",Bf,[t("a",Nf,[l("处理含限制条件的好友请求"),e(n)])]),Tf,t("td",Ff,[e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Wf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Qf]),_:1})]),t("td",Rf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Uf,t("td",Xf,[t("a",Zf,[l("殊途同归"),e(n)])]),Gf,t("td",Sf,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Yf]),_:1})]),t("td",$f,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tg,t("td",eg,[t("a",lg,[l("找出知晓秘密的所有专家"),e(n)])]),og,t("td",sg,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ng]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[dg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[_g]),_:1}),l(),cg]),t("td",ig,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ag,t("td",rg,[t("a",hg,[l("前往目标城市的最小费用"),e(n)])]),ug,t("td",fg,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[gg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[mg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[yg]),_:1})]),t("td",pg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xg,t("td",bg,[t("a",jg,[l("合法重新排列数对"),e(n)])]),kg,t("td",Hg,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Mg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Ig]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[wg]),_:1})]),t("td",vg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qg,t("td",Lg,[t("a",zg,[l("引爆最多的炸弹"),e(n)])]),Pg,t("td",Cg,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Eg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Og]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Vg]),_:1}),l(),Dg]),t("td",Jg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kg,t("td",Ag,[t("a",Bg,[l("从给定原材料中找到所有可以做出的菜"),e(n)])]),Ng,t("td",Tg,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Fg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[Wg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Qg]),_:1}),l(),Rg]),t("td",Ug,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xg,t("td",Zg,[t("a",Gg,[l("使矩阵中的 1 互不相邻的最小操作数"),e(n)])]),Sg,t("td",Yg,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[$g]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[tm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[em]),_:1})]),t("td",lm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[om,t("td",sm,[t("a",nm,[l("参加会议的最多员工数"),e(n)])]),dm,t("td",_m,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[cm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[im]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[am]),_:1})]),t("td",rm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hm,t("td",um,[t("a",fm,[l("有向无环图中一个节点的所有祖先"),e(n)])]),gm,t("td",mm,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ym]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[pm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[xm]),_:1}),l(),bm]),t("td",jm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[km,t("td",Hm,[t("a",Mm,[l("得到要求路径的最小带权子图"),e(n)])]),Im,t("td",wm,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[vm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[qm]),_:1})]),t("td",Lm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zm,t("td",Pm,[t("a",Cm,[l("无向图中到环的距离"),e(n)])]),Em,t("td",Om,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Vm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Dm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Jm]),_:1}),l(),Km]),t("td",Am,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bm,t("td",Nm,[t("a",Tm,[l("节点序列的最大得分"),e(n)])]),Fm,t("td",Wm,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Qm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Rm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[Um]),_:1}),l(),Xm]),t("td",Zm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gm,t("td",Sm,[t("a",Ym,[l("相邻字符不同的最长路径"),e(n)])]),$m,t("td",ty,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ey]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ly]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[oy]),_:1}),l(),sy]),t("td",ny,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dy,t("td",_y,[t("a",cy,[l("K 条高速公路的最大旅行费用"),e(n)])]),iy,t("td",ay,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[ry]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[hy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[uy]),_:1}),l(),fy]),t("td",gy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[my,t("td",yy,[t("a",py,[l("道路的最大总重要性"),e(n)])]),xy,t("td",by,[e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[jy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ky]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[Hy]),_:1}),l(),My]),t("td",Iy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wy,t("td",vy,[t("a",qy,[l("到达角落需要移除障碍物的最小数目"),e(n)])]),Ly,t("td",zy,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Py]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Cy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ey]),_:1}),l(),Oy]),t("td",Vy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dy,t("td",Jy,[t("a",Ky,[l("跳跃游戏 VIII"),e(n)])]),Ay,t("td",By,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Ny]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Ty]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Fy]),_:1}),l(),Wy]),t("td",Qy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ry,t("td",Uy,[t("a",Xy,[l("检查方程中的矛盾之处"),e(n)])]),Zy,t("td",Gy,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Sy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Yy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[$y]),_:1}),l(),tp]),t("td",ep,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lp,t("td",op,[t("a",sp,[l("统计无向图中无法互相到达点对数"),e(n)])]),np,t("td",dp,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[_p]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[cp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[ip]),_:1}),l(),ap]),t("td",rp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hp,t("td",up,[t("a",fp,[l("网格图中递增路径的数目"),e(n)])]),gp,t("td",mp,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[yp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[pp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[xp]),_:1}),l(),bp]),t("td",jp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kp,t("td",Hp,[t("a",Mp,[l("找到离给定两个节点最近的节点"),e(n)])]),Ip,t("td",wp,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[vp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[qp]),_:1})]),t("td",Lp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zp,t("td",Pp,[t("a",Cp,[l("图中的最长环"),e(n)])]),Ep,t("td",Op,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Vp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Dp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[Jp]),_:1})]),t("td",Kp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ap,t("td",Bp,[t("a",Np,[l("受限条件下可到达节点的数目"),e(n)])]),Tp,t("td",Fp,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Wp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Qp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Rp]),_:1}),l(),Up]),t("td",Xp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zp,t("td",Gp,[t("a",Sp,[l("最小化网格中的最大值"),e(n)])]),Yp,t("td",$p,[e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[tx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ex]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[lx]),_:1}),l(),ox]),t("td",sx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nx,t("td",dx,[t("a",_x,[l("边积分最高的节点"),e(n)])]),cx,t("td",ix,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ax]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[rx]),_:1})]),t("td",hx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ux,t("td",fx,[t("a",gx,[l("给定条件下构造矩阵"),e(n)])]),mx,t("td",yx,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[px]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[xx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[bx]),_:1}),l(),jx]),t("td",kx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hx,t("td",Mx,[t("a",Ix,[l("好路径的数目"),e(n)])]),wx,t("td",vx,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[qx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Lx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[zx]),_:1}),l(),Px]),t("td",Cx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ex,t("td",Ox,[t("a",Vx,[l("树上最大得分和路径"),e(n)])]),Dx,t("td",Jx,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Kx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ax]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Bx]),_:1}),l(),Nx]),t("td",Tx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fx,t("td",Wx,[t("a",Qx,[l("购买苹果的最低成本"),e(n)])]),Rx,t("td",Ux,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Xx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Zx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[Gx]),_:1}),l(),Sx]),t("td",Yx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$x,t("td",t3,[t("a",e3,[l("到达首都的最少油耗"),e(n)])]),l3,t("td",o3,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[s3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[n3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[d3]),_:1}),l(),_3]),t("td",c3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i3,t("td",a3,[t("a",r3,[l("两个不重叠子树的最大异或值"),e(n)])]),h3,t("td",u3,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[f3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[g3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[m3]),_:1}),l(),y3]),t("td",p3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[x3,t("td",b3,[t("a",j3,[l("两个城市间路径的最小分数"),e(n)])]),k3,t("td",H3,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[M3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[I3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[w3]),_:1}),l(),v3]),t("td",q3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L3,t("td",z3,[t("a",P3,[l("将节点分成尽可能多的组"),e(n)])]),C3,t("td",E3,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[O3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[V3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[D3]),_:1})]),t("td",J3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K3,t("td",A3,[t("a",B3,[l("图中最大星和"),e(n)])]),N3,t("td",T3,[e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[F3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[W3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Q3]),_:1}),l(),R3]),t("td",U3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X3,t("td",Z3,[t("a",G3,[l("添加边使所有节点度数都为偶数"),e(n)])]),S3,t("td",Y3,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[$3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[tb]),_:1})]),t("td",eb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lb,t("td",ob,[t("a",sb,[l("在网格图中访问一个格子的最少时间"),e(n)])]),nb,t("td",db,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[_b]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[cb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ib]),_:1}),l(),ab]),t("td",rb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hb,t("td",ub,[t("a",fb,[l("收集树中金币"),e(n)])]),gb,t("td",mb,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[yb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[pb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[xb]),_:1}),l(),bb]),t("td",jb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kb,t("td",Hb,[t("a",Mb,[l("图中的最短环"),e(n)])]),Ib,t("td",wb,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[vb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[qb]),_:1})]),t("td",Lb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zb,t("td",Pb,[t("a",Cb,[l("设计可以求最短路径的图类"),e(n)])]),Eb,t("td",Ob,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Vb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Db]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[Jb]),_:1}),l(),Kb]),t("td",Ab,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bb,t("td",Nb,[t("a",Tb,[l("最小化旅行的价格总和"),e(n)])]),Fb,t("td",Wb,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Qb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Rb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Ub]),_:1}),l(),Xb]),t("td",Zb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gb,t("td",Sb,[t("a",Yb,[l("前往目标的最小代价"),e(n)])]),$b,t("td",t4,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[e4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[l4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[o4]),_:1}),l(),s4]),t("td",n4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d4,t("td",_4,[t("a",c4,[l("统计完全连通分量的数量"),e(n)])]),i4,t("td",a4,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[r4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[h4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[u4]),_:1})]),t("td",f4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g4,t("td",m4,[t("a",y4,[l("修改图中的边权"),e(n)])]),p4,t("td",x4,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[b4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[j4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[k4]),_:1})]),t("td",H4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[M4,t("td",I4,[t("a",w4,[l("找到 K 次跨越的最短路径"),e(n)])]),v4,t("td",q4,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[L4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[z4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[P4]),_:1})]),t("td",C4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E4,t("td",O4,[t("a",V4,[l("找到最近的标记节点"),e(n)])]),D4,t("td",J4,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[K4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[A4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[B4]),_:1}),l(),N4]),t("td",T4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F4,t("td",W4,[t("a",Q4,[l("边权重均等查询"),e(n)])]),R4,t("td",U4,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[X4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Z4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[G4]),_:1}),l(),S4]),t("td",Y4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$4,t("td",t2,[t("a",e2,[l("可以到达每一个节点的最少边反转次数"),e(n)])]),l2,t("td",o2,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[s2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[n2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[d2]),_:1}),l(),_2]),t("td",c2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i2,t("td",a2,[t("a",r2,[l("有向图访问计数"),e(n)])]),h2,t("td",u2,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[f2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[g2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[m2]),_:1})]),t("td",y2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p2,t("td",x2,[t("a",b2,[l("找到冠军 II"),e(n)])]),j2,t("td",k2,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[H2]),_:1})]),t("td",M2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I2,t("td",w2,[t("a",v2,[l("关闭分部的可行集合数目"),e(n)])]),q2,t("td",L2,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[z2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[P2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[C2]),_:1}),l(),E2]),t("td",O2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[V2,t("td",D2,[t("a",J2,[l("转换字符串的最小成本 I"),e(n)])]),K2,t("td",A2,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[B2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[N2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[T2]),_:1}),l(),F2]),t("td",W2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q2,t("td",R2,[t("a",U2,[l("转换字符串的最小成本 II"),e(n)])]),X2,t("td",Z2,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[G2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[S2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Y2]),_:1}),l(),$2]),t("td",t0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e0,t("td",l0,[t("a",o0,[l("按距离统计房屋对数目 I"),e(n)])]),s0,t("td",n0,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[d0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[_0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[c0]),_:1})]),t("td",i0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a0,t("td",r0,[t("a",h0,[l("按距离统计房屋对数目 II"),e(n)])]),u0,t("td",f0,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[g0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[m0]),_:1})]),t("td",y0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p0,t("td",x0,[t("a",b0,[l("带权图里旅途的最小代价"),e(n)])]),j0,t("td",k0,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[H0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[M0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[I0]),_:1}),l(),w0]),t("td",v0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[q0,t("td",L0,[t("a",z0,[l("访问消失节点的最少时间"),e(n)])]),P0,t("td",C0,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[E0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[O0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[V0]),_:1}),l(),D0]),t("td",J0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K0,t("td",A0,[t("a",B0,[l("最短路径中的边"),e(n)])]),N0,t("td",T0,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[F0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[W0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Q0]),_:1}),l(),R0]),t("td",U0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[X0,t("td",Z0,[t("a",G0,[l("合并两棵树后的最小直径"),e(n)])]),S0,t("td",Y0,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[t6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[e6]),_:1}),l(),l6]),t("td",o6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[s6,t("td",n6,[t("a",d6,[l("标记所有节点需要的时间"),e(n)])]),_6,t("td",c6,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[i6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[a6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[r6]),_:1}),l(),h6]),t("td",u6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f6,t("td",g6,[t("a",m6,[l("新增道路查询后的最短距离 I"),e(n)])]),y6,t("td",p6,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[x6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[b6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[j6]),_:1})]),t("td",k6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H6,t("td",M6,[t("a",I6,[l("新增道路查询后的最短距离 II"),e(n)])]),w6,t("td",v6,[e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[q6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[L6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[z6]),_:1}),l(),P6]),t("td",C6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E6,t("td",O6,[t("a",V6,[l("穿越网格图的安全路径"),e(n)])]),D6,t("td",J6,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[K6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[A6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[B6]),_:1}),l(),N6]),t("td",T6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F6,t("td",W6,[t("a",Q6,[l("移除可疑的方法"),e(n)])]),R6,t("td",U6,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[X6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Z6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[G6]),_:1})]),t("td",S6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y6,t("td",$6,[t("a",t5,[l("构造符合图结构的二维矩阵"),e(n)])]),e5,t("td",l5,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[o5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[s5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[n5]),_:1}),l(),d5]),t("td",_5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[c5,t("td",i5,[t("a",a5,[l("覆盖"),e(n)])]),r5,t("td",h5,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[u5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[f5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[g5]),_:1}),l(),m5]),t("td",y5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p5,t("td",x5,[t("a",b5,[l("传递信息"),e(n)])]),j5,t("td",k5,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[H5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[M5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[I5]),_:1}),l(),w5]),t("td",v5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[q5,t("td",L5,[t("a",z5,[l("游乐园的游览计划"),e(n)])]),P5,t("td",C5,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[E5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[O5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[V5]),_:1})]),t("td",D5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[J5,t("td",K5,[t("a",A5,[l("追逐游戏"),e(n)])]),B5,t("td",N5,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[T5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[F5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[W5]),_:1}),l(),Q5]),t("td",R5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[U5,t("td",X5,[t("a",Z5,[l("电动车游城市"),e(n)])]),G5,t("td",S5,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Y5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[$5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[tj]),_:1})]),t("td",ej,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lj,t("td",oj,[t("a",sj,[l("志愿者调配"),e(n)])]),nj,t("td",dj,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[_j]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[cj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[ij]),_:1})]),t("td",aj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rj,t("td",hj,[t("a",uj,[l("夺回据点"),e(n)])]),fj,t("td",gj,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[mj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[yj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:o(()=>[pj]),_:1})]),t("td",xj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bj,t("td",jj,[t("a",kj,[l("信物传送"),e(n)])]),Hj,t("td",Mj,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ij]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[wj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vj]),_:1}),l(),qj]),t("td",Lj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zj,t("td",Pj,[t("a",Cj,[l("交通枢纽"),e(n)])]),Ej,t("td",Oj,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Vj]),_:1})]),t("td",Dj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jj,t("td",Kj,[t("a",Aj,[l("弹珠游戏"),e(n)])]),Bj,t("td",Nj,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Tj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Fj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Wj]),_:1}),l(),Qj]),t("td",Rj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Uj,t("td",Xj,[t("a",Zj,[l("二分图"),e(n)])]),Gj,t("td",Sj,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Yj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$j]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[t8]),_:1}),l(),e8]),t("td",l8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o8,t("td",s8,[t("a",n8,[l("所有路径"),e(n)])]),d8,t("td",_8,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[c8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[i8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[a8]),_:1}),l(),r8]),t("td",h8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u8,t("td",f8,[t("a",g8,[l("计算除法"),e(n)])]),m8,t("td",y8,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[p8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[x8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[b8]),_:1}),l(),j8]),t("td",k8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H8,t("td",M8,[t("a",I8,[l("最长递增路径"),e(n)])]),w8,t("td",v8,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[q8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[L8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[z8]),_:1}),l(),P8]),t("td",C8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E8,t("td",O8,[t("a",V8,[l("课程顺序"),e(n)])]),D8,t("td",J8,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[K8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[A8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[B8]),_:1}),l(),N8]),t("td",T8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F8,t("td",W8,[t("a",Q8,[l("外星文字典"),e(n)])]),R8,t("td",U8,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[X8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Z8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[G8]),_:1}),l(),S8]),t("td",Y8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$8,t("td",t7,[t("a",e7,[l("重建序列"),e(n)])]),l7,t("td",o7,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[s7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[n7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[d7]),_:1})]),t("td",_7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c7,t("td",i7,[t("a",a7,[l("省份数量"),e(n)])]),r7,t("td",h7,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[u7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[f7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[g7]),_:1}),l(),m7]),t("td",y7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p7,t("td",x7,[t("a",b7,[l("多余的边"),e(n)])]),j7,t("td",k7,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[H7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[M7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[I7]),_:1}),l(),w7]),t("td",v7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q7,t("td",L7,[t("a",z7,[l("分割回文子字符串"),e(n)])]),P7,t("td",C7,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[E7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[O7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[V7]),_:1}),l(),D7]),t("td",J7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K7,t("td",A7,[t("a",B7,[l("节点间通路"),e(n)])]),N7,t("td",T7,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[F7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[W7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Q7]),_:1})]),t("td",R7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const S7=c(h,[["render",U7],["__file","graph.html.vue"]]);export{S7 as default};
