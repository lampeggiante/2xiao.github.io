import{_ as p,r as c,o as d,c as r,a as n,b as t,d as e,w as s,f as i,e as u}from"./app-GnK0vSxb.js";const m={},h={id:"_88-合并两个有序数组",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#_88-合并两个有序数组","aria-hidden":"true"},"#",-1),_={href:"https://leetcode.com/problems/merge-sorted-array",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"数组",-1),f=n("code",null,"双指针",-1),b=n("code",null,"排序",-1),y={href:"https://leetcode.com/problems/merge-sorted-array",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"LeetCode",-1),x=u(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>You are given two integer arrays <code>nums1</code> and <code>nums2</code>, sorted in <strong>non-decreasing order</strong> , and two integers <code>m</code> and <code>n</code>, representing the number of elements in <code>nums1</code> and <code>nums2</code> respectively.</p><p><strong>Merge</strong> <code>nums1</code> and <code>nums2</code> into a single array sorted in <strong>non-decreasing order</strong>.</p><p>The final sorted array should not be returned by the function, but instead be <em>stored inside the array</em><code>nums1</code>. To accommodate this, <code>nums1</code> has a length of <code>m + n</code>, where the first <code>m</code> elements denote the elements that should be merged, and the last <code>n</code> elements are set to <code>0</code> and should be ignored. <code>nums2</code> has a length of <code>n</code>.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3</p><p>Output: [1,2,2,3,5,6]</p><p>Explanation: The arrays we are merging are [1,2,3] and [2,5,6].</p><p>The result of the merge is [ <em>1</em> , <em>2</em> ,2, <em>3</em> ,5,6] with the underlined elements coming from nums1.</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: nums1 = [1], m = 1, nums2 = [], n = 0</p><p>Output: [1]</p><p>Explanation: The arrays we are merging are [1] and [].</p><p>The result of the merge is [1].</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: nums1 = [0], m = 0, nums2 = [1], n = 1</p><p>Output: [1]</p><p>Explanation: The arrays we are merging are [] and [1].</p><p>The result of the merge is [1].</p><p>Note that because m = 0, there are no elements in nums1. The 0 is only there to ensure the merge result can fit in nums1.</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>nums1.length == m + n</code></li><li><code>nums2.length == n</code></li><li><code>0 &lt;= m, n &lt;= 200</code></li><li><code>1 &lt;= m + n &lt;= 200</code></li><li><code>-10^9 &lt;= nums1[i], nums2[j] &lt;= 10^9</code></li></ul><p><strong>Follow up:</strong> Can you come up with an algorithm that runs in <code>O(m + n)</code> time?</p><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给你两个按 递增顺序 排列的整数数组 <code>nums1</code> 和 <code>nums2</code>，另有两个整数 <code>m</code> 和 <code>n</code> ，分别表示 <code>nums1</code> 和 <code>nums2</code> 中的元素数目。</p><p>请你 合并 <code>nums2</code> 到 <code>nums1</code> 中，使合并后的数组同样按 递增顺序 排列。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><p>为了不大量移动元素，就要从 2 个数组长度之和的最后一个位置开始，依次选取两个数组中大的数，从第一个数组的尾巴开始往头放，只要循环一次以后，就生成了合并以后的数组了。</p><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n + m)</code>，其中<code>m</code> 和 <code>n</code> ，分别表示 <code>nums1</code> 和 <code>nums2</code> 中的元素数目，需要遍历一遍两个数组。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>，用了常数个变量存储中间状态。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums1</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> ../../../assets/todo/0242.mdm
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums2</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">n</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">void</span><span class="token punctuation">}</span></span> Do not return anything, modify nums1 in-place instead.
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">merge</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums1<span class="token punctuation">,</span> m<span class="token punctuation">,</span> nums2<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> i <span class="token operator">=</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> j <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> k <span class="token operator">=</span> m <span class="token operator">+</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			nums1<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
			i<span class="token operator">--</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			nums1<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> nums2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
			j<span class="token operator">--</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		k<span class="token operator">--</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,23),w=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"题号"),n("th",{style:{"text-align":"left"}},"标题"),n("th",{style:{"text-align":"center"}},"题解"),n("th",{style:{"text-align":"left"}},"标签"),n("th",{style:{"text-align":"left"}},"难度")])],-1),E=n("td",{style:{"text-align":"center"}},"21",-1),T={style:{"text-align":"left"}},j={href:"https://leetcode.com/problems/merge-two-sorted-lists",target:"_blank",rel:"noopener noreferrer"},q={style:{"text-align":"center"}},C={style:{"text-align":"left"}},N=n("code",null,"递归",-1),O=n("code",null,"链表",-1),I={style:{"text-align":"left"}},L=n("td",{style:{"text-align":"center"}},"977",-1),V={style:{"text-align":"left"}},B={href:"https://leetcode.com/problems/squares-of-a-sorted-array",target:"_blank",rel:"noopener noreferrer"},M=n("td",{style:{"text-align":"center"}},null,-1),R={style:{"text-align":"left"}},D=n("code",null,"数组",-1),F=n("code",null,"双指针",-1),K=n("code",null,"排序",-1),S={style:{"text-align":"left"}},Y=n("td",{style:{"text-align":"center"}},"986",-1),z={style:{"text-align":"left"}},A={href:"https://leetcode.com/problems/interval-list-intersections",target:"_blank",rel:"noopener noreferrer"},G={style:{"text-align":"center"}},H={style:{"text-align":"left"}},J=n("code",null,"数组",-1),P=n("code",null,"双指针",-1),Q={style:{"text-align":"left"}},U=n("td",{style:{"text-align":"center"}},"2516",-1),W={style:{"text-align":"left"}},X={href:"https://leetcode.com/problems/take-k-of-each-character-from-left-and-right",target:"_blank",rel:"noopener noreferrer"},Z=n("td",{style:{"text-align":"center"}},null,-1),$={style:{"text-align":"left"}},nn=n("code",null,"哈希表",-1),en=n("code",null,"字符串",-1),tn=n("code",null,"滑动窗口",-1),sn={style:{"text-align":"left"}};function an(on,ln){const o=c("ExternalLinkIcon"),l=c("font"),a=c("RouterLink");return d(),r("div",null,[n("h1",h,[k,t(),n("a",_,[t("88. 合并两个有序数组"),e(o)])]),n("p",null,[t("🟢 "),e(l,{color:"#15bd66"},{default:s(()=>[t("Easy")]),_:1}),t("  🔖  "),e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[g]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/two-pointers.html"},{default:s(()=>[f]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/sorting.html"},{default:s(()=>[b]),_:1}),t("  🔗 "),n("a",y,[v,e(o)])]),x,i(" prettier-ignore "),n("table",null,[w,n("tbody",null,[n("tr",null,[E,n("td",T,[n("a",j,[t("合并两个有序链表"),e(o)])]),n("td",q,[e(a,{to:"/leetcode/problem/0021.html"},{default:s(()=>[t("[✓]")]),_:1})]),n("td",C,[e(a,{to:"/leetcode/outline/tag/recursion.html"},{default:s(()=>[N]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/linked-list.html"},{default:s(()=>[O]),_:1})]),n("td",I,[e(l,{color:"#15bd66"},{default:s(()=>[t("Easy")]),_:1})])]),n("tr",null,[L,n("td",V,[n("a",B,[t("有序数组的平方"),e(o)])]),M,n("td",R,[e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[D]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/two-pointers.html"},{default:s(()=>[F]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/sorting.html"},{default:s(()=>[K]),_:1})]),n("td",S,[e(l,{color:"#15bd66"},{default:s(()=>[t("Easy")]),_:1})])]),n("tr",null,[Y,n("td",z,[n("a",A,[t("区间列表的交集"),e(o)])]),n("td",G,[e(a,{to:"/leetcode/problem/0986.html"},{default:s(()=>[t("[✓]")]),_:1})]),n("td",H,[e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[J]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/two-pointers.html"},{default:s(()=>[P]),_:1})]),n("td",Q,[e(l,{color:"#ffb800"},{default:s(()=>[t("Medium")]),_:1})])]),n("tr",null,[U,n("td",W,[n("a",X,[t("每种字符至少取 K 个"),e(o)])]),Z,n("td",$,[e(a,{to:"/leetcode/outline/tag/hash-table.html"},{default:s(()=>[nn]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/string.html"},{default:s(()=>[en]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/sliding-window.html"},{default:s(()=>[tn]),_:1})]),n("td",sn,[e(l,{color:"#ffb800"},{default:s(()=>[t("Medium")]),_:1})])])])])])}const pn=p(m,[["render",an],["__file","0088.html.vue"]]);export{pn as default};
