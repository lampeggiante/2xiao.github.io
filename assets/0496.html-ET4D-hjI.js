import{_ as i,r as c,o as d,c as r,a as t,b as n,d as e,w as s,f as p,e as u}from"./app-mvY9N9Pc.js";const _={},h={id:"_496-下一个更大元素-i",tabindex:"-1"},m=t("a",{class:"header-anchor",href:"#_496-下一个更大元素-i","aria-hidden":"true"},"#",-1),k={href:"https://leetcode.com/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},g=t("code",null,"栈",-1),f=t("code",null,"数组",-1),x=t("code",null,"哈希表",-1),b=t("code",null,"单调栈",-1),y={href:"https://leetcode.com/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},v=t("code",null,"LeetCode",-1),w=u(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>The <strong>next greater element</strong> of some element <code>x</code> in an array is the <strong>first greater</strong> element that is <strong>to the right</strong> of <code>x</code> in the same array.</p><p>You are given two <strong>distinct 0-indexed</strong> integer arrays <code>nums1</code> and <code>nums2</code>, where <code>nums1</code> is a subset of <code>nums2</code>.</p><p>For each <code>0 &lt;= i &lt; nums1.length</code>, find the index <code>j</code> such that <code>nums1[i] == nums2[j]</code> and determine the <strong>next greater element</strong> of <code>nums2[j]</code> in <code>nums2</code>. If there is no next greater element, then the answer for this query is <code>-1</code>.</p><p>Return <em>an array</em><code>ans</code> <em>of length</em><code>nums1.length</code> <em>such that</em><code>ans[i]</code> <em>is the <strong>next greater element</strong> as described above.</em></p><p><strong>Example 1:</strong></p><blockquote><p>Input: nums1 = [4,1,2], nums2 = [1,3,4,2]</p><p>Output: [-1,3,-1]</p><p>Explanation: The next greater element for each value of nums1 is as follows:</p><ul><li>4 is underlined in nums2 = [1,3, <em>4</em> ,2]. There is no next greater element, so the answer is -1.</li><li>1 is underlined in nums2 = [ <em>1</em> ,3,4,2]. The next greater element is 3.</li><li>2 is underlined in nums2 = [1,3,4, <em>2</em> ]. There is no next greater element, so the answer is -1.</li></ul></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: nums1 = [2,4], nums2 = [1,2,3,4]</p><p>Output: [3,-1]</p><p>Explanation: The next greater element for each value of nums1 is as follows:</p><ul><li>2 is underlined in nums2 = [1, <em>2</em> ,3,4]. The next greater element is 3.</li><li>4 is underlined in nums2 = [1,2,3, <em>4</em> ]. There is no next greater element, so the answer is -1.</li></ul></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= nums1.length &lt;= nums2.length &lt;= 1000</code></li><li><code>0 &lt;= nums1[i], nums2[i] &lt;= 10^4</code></li><li>All integers in <code>nums1</code> and <code>nums2</code> are <strong>unique</strong>.</li><li>All the integers of <code>nums1</code> also appear in <code>nums2</code>.</li></ul><p><strong>Follow up:</strong> Could you find an <code>O(nums1.length + nums2.length)</code> solution?</p><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>题目给出 2 个数组 A 和 B，针对 A 中的每个数组中的元素，要求在 B 数组中找出比 A 数组中元素大的数，B 中元素之间的顺序保持不变。如果找到了就输出这个值，如果找不到就输出 <code>-1</code>。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ul><li>使用单调递增栈；</li><li>因为 <code>nums1</code> 是 <code>nums2</code> 的子集，所以我们可以先遍历一遍 <code>nums2</code>，并构造单调递增栈；</li><li>求出 <code>nums2</code> 中每个元素右侧下一个更大的元素，然后将其存储到哈希表中；</li><li>再遍历一遍 <code>nums1</code>，从哈希表中取出对应结果，存放到答案数组中；</li><li>这种解法的时间复杂度是 <code>O(n)</code>。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums1</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums2</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">nextGreaterElement</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums1<span class="token punctuation">,</span> nums2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> num <span class="token keyword">of</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">while</span> <span class="token punctuation">(</span>stack<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> nums1<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,19),I=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),E=t("td",{style:{"text-align":"center"}},"503",-1),T={style:{"text-align":"left"}},j={href:"https://leetcode.com/problems/next-greater-element-ii",target:"_blank",rel:"noopener noreferrer"},q={style:{"text-align":"center"}},B={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0503",target:"_blank",rel:"noopener noreferrer"},C={style:{"text-align":"left"}},M=t("code",null,"栈",-1),V=t("code",null,"数组",-1),A=t("code",null,"单调栈",-1),L={style:{"text-align":"left"}},N=t("td",{style:{"text-align":"center"}},"556",-1),O={style:{"text-align":"left"}},R={href:"https://leetcode.com/problems/next-greater-element-iii",target:"_blank",rel:"noopener noreferrer"},F=t("td",{style:{"text-align":"center"}},null,-1),H={style:{"text-align":"left"}},z=t("code",null,"数学",-1),G=t("code",null,"双指针",-1),S=t("code",null,"字符串",-1),Y={style:{"text-align":"left"}},D=t("td",{style:{"text-align":"center"}},"739",-1),J={style:{"text-align":"left"}},K={href:"https://leetcode.com/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},P={style:{"text-align":"center"}},Q={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0739",target:"_blank",rel:"noopener noreferrer"},U={style:{"text-align":"left"}},W=t("code",null,"栈",-1),X=t("code",null,"数组",-1),Z=t("code",null,"单调栈",-1),$={style:{"text-align":"left"}},tt=t("td",{style:{"text-align":"center"}},"2104",-1),et={style:{"text-align":"left"}},nt={href:"https://leetcode.com/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},st=t("td",{style:{"text-align":"center"}},null,-1),at={style:{"text-align":"left"}},ot=t("code",null,"栈",-1),lt=t("code",null,"数组",-1),ct=t("code",null,"单调栈",-1),it={style:{"text-align":"left"}},dt=t("td",{style:{"text-align":"center"}},"2281",-1),rt={style:{"text-align":"left"}},pt={href:"https://leetcode.com/problems/sum-of-total-strength-of-wizards",target:"_blank",rel:"noopener noreferrer"},ut=t("td",{style:{"text-align":"center"}},null,-1),_t={style:{"text-align":"left"}},ht=t("code",null,"栈",-1),mt=t("code",null,"数组",-1),kt=t("code",null,"前缀和",-1),gt=t("code",null,"1+",-1),ft={style:{"text-align":"left"}},xt=t("td",{style:{"text-align":"center"}},"2454",-1),bt={style:{"text-align":"left"}},yt={href:"https://leetcode.com/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},vt=t("td",{style:{"text-align":"center"}},null,-1),wt={style:{"text-align":"left"}},It=t("code",null,"栈",-1),Et=t("code",null,"数组",-1),Tt=t("code",null,"二分查找",-1),jt=t("code",null,"3+",-1),qt={style:{"text-align":"left"}},Bt=t("td",{style:{"text-align":"center"}},"2487",-1),Ct={style:{"text-align":"left"}},Mt={href:"https://leetcode.com/problems/remove-nodes-from-linked-list",target:"_blank",rel:"noopener noreferrer"},Vt=t("td",{style:{"text-align":"center"}},null,-1),At={style:{"text-align":"left"}},Lt=t("code",null,"栈",-1),Nt=t("code",null,"递归",-1),Ot=t("code",null,"链表",-1),Rt=t("code",null,"1+",-1),Ft={style:{"text-align":"left"}},Ht=t("td",{style:{"text-align":"center"}},"2996",-1),zt={style:{"text-align":"left"}},Gt={href:"https://leetcode.com/problems/smallest-missing-integer-greater-than-sequential-prefix-sum",target:"_blank",rel:"noopener noreferrer"},St=t("td",{style:{"text-align":"center"}},null,-1),Yt={style:{"text-align":"left"}},Dt=t("code",null,"数组",-1),Jt=t("code",null,"哈希表",-1),Kt=t("code",null,"排序",-1),Pt={style:{"text-align":"left"}};function Qt(Ut,Wt){const o=c("ExternalLinkIcon"),l=c("font"),a=c("RouterLink");return d(),r("div",null,[t("h1",h,[m,n(),t("a",k,[n("496. 下一个更大元素 I"),e(o)])]),t("p",null,[n("🟢 "),e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1}),n("  🔖  "),e(a,{to:"/leetcode/outline/tag/stack.html"},{default:s(()=>[g]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[f]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/hash-table.html"},{default:s(()=>[x]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:s(()=>[b]),_:1}),n("  🔗 "),t("a",y,[v,e(o)])]),w,p(" prettier-ignore "),t("table",null,[I,t("tbody",null,[t("tr",null,[E,t("td",T,[t("a",j,[n("下一个更大元素 II"),e(o)])]),t("td",q,[t("a",B,[n("[✓]"),e(o)])]),t("td",C,[e(a,{to:"/leetcode/outline/tag/stack.html"},{default:s(()=>[M]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[V]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:s(()=>[A]),_:1})]),t("td",L,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[N,t("td",O,[t("a",R,[n("下一个更大元素 III"),e(o)])]),F,t("td",H,[e(a,{to:"/leetcode/outline/tag/math.html"},{default:s(()=>[z]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/two-pointers.html"},{default:s(()=>[G]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/string.html"},{default:s(()=>[S]),_:1})]),t("td",Y,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[D,t("td",J,[t("a",K,[n("每日温度"),e(o)])]),t("td",P,[t("a",Q,[n("[✓]"),e(o)])]),t("td",U,[e(a,{to:"/leetcode/outline/tag/stack.html"},{default:s(()=>[W]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[X]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:s(()=>[Z]),_:1})]),t("td",$,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[tt,t("td",et,[t("a",nt,[n("子数组范围和"),e(o)])]),st,t("td",at,[e(a,{to:"/leetcode/outline/tag/stack.html"},{default:s(()=>[ot]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[lt]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:s(()=>[ct]),_:1})]),t("td",it,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[dt,t("td",rt,[t("a",pt,[n("巫师的总力量和"),e(o)])]),ut,t("td",_t,[e(a,{to:"/leetcode/outline/tag/stack.html"},{default:s(()=>[ht]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[mt]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:s(()=>[kt]),_:1}),n(),gt]),t("td",ft,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])]),t("tr",null,[xt,t("td",bt,[t("a",yt,[n("下一个更大元素 IV"),e(o)])]),vt,t("td",wt,[e(a,{to:"/leetcode/outline/tag/stack.html"},{default:s(()=>[It]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[Et]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/binary-search.html"},{default:s(()=>[Tt]),_:1}),n(),jt]),t("td",qt,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])]),t("tr",null,[Bt,t("td",Ct,[t("a",Mt,[n("从链表中移除节点"),e(o)])]),Vt,t("td",At,[e(a,{to:"/leetcode/outline/tag/stack.html"},{default:s(()=>[Lt]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/recursion.html"},{default:s(()=>[Nt]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/linked-list.html"},{default:s(()=>[Ot]),_:1}),n(),Rt]),t("td",Ft,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[Ht,t("td",zt,[t("a",Gt,[n("大于等于顺序前缀和的最小缺失整数"),e(o)])]),St,t("td",Yt,[e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[Dt]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/hash-table.html"},{default:s(()=>[Jt]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/sorting.html"},{default:s(()=>[Kt]),_:1})]),t("td",Pt,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])])])])])}const Zt=i(_,[["render",Qt],["__file","0496.html.vue"]]);export{Zt as default};
