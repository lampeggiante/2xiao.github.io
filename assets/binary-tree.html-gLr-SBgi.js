import{_ as c,r as _,o as i,c as r,a as t,d as e,w as l,b as o,f as a}from"./app-mvY9N9Pc.js";const h={},u=t("h1",{id:"二叉树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#二叉树","aria-hidden":"true"},"#"),o(" 二叉树")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),b=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("code",null,"单调栈",-1),j=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),E=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),O=t("code",null,"树",-1),q=t("span",{class:"blue"},"二叉树",-1),H=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),C=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),B=t("code",null,"最短路",-1),K=t("code",null,"强连通分量",-1),V=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),U=t("code",null,"并查集",-1),R=t("code",null,"字典树",-1),W=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),Y=t("code",null,"后缀数组",-1),Q=t("p",null,[t("strong",null,"算法")],-1),S=t("code",null,"枚举",-1),D=t("code",null,"递归",-1),Z=t("code",null,"分治",-1),A=t("code",null,"回溯",-1),F=t("code",null,"贪心",-1),J=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),bt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),jt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),Et=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),Ot=t("code",null,"设计",-1),qt=t("code",null,"数据流",-1),Ht=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Ct=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Kt=t("td",{style:{"text-align":"center"}},"94",-1),Vt={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},Rt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0094",target:"_blank",rel:"noopener noreferrer"},Wt={style:{"text-align":"left"}},Gt=t("code",null,"栈",-1),Yt=t("code",null,"树",-1),Qt=t("code",null,"深度优先搜索",-1),St=t("code",null,"1+",-1),Dt={style:{"text-align":"left"}},Zt=t("td",{style:{"text-align":"center"}},"95",-1),At={style:{"text-align":"left"}},Ft={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"center"}},Xt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0095",target:"_blank",rel:"noopener noreferrer"},$t={style:{"text-align":"left"}},te=t("code",null,"树",-1),ee=t("code",null,"二叉搜索树",-1),oe=t("code",null,"动态规划",-1),le=t("code",null,"2+",-1),ne={style:{"text-align":"left"}},se=t("td",{style:{"text-align":"center"}},"96",-1),de={style:{"text-align":"left"}},_e={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},ce={style:{"text-align":"center"}},ie={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0096",target:"_blank",rel:"noopener noreferrer"},re={style:{"text-align":"left"}},ae=t("code",null,"树",-1),he=t("code",null,"二叉搜索树",-1),ue=t("code",null,"数学",-1),fe=t("code",null,"2+",-1),ge={style:{"text-align":"left"}},me=t("td",{style:{"text-align":"center"}},"98",-1),ye={style:{"text-align":"left"}},be={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},xe={style:{"text-align":"center"}},pe={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0098",target:"_blank",rel:"noopener noreferrer"},ke={style:{"text-align":"left"}},Me=t("code",null,"树",-1),je=t("code",null,"深度优先搜索",-1),ve=t("code",null,"二叉搜索树",-1),Ie=t("code",null,"1+",-1),Ee={style:{"text-align":"left"}},we=t("td",{style:{"text-align":"center"}},"99",-1),ze={style:{"text-align":"left"}},Oe={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},qe={style:{"text-align":"center"}},He={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0099",target:"_blank",rel:"noopener noreferrer"},Le={style:{"text-align":"left"}},Ce=t("code",null,"树",-1),Ne=t("code",null,"深度优先搜索",-1),Pe=t("code",null,"二叉搜索树",-1),Be=t("code",null,"1+",-1),Ke={style:{"text-align":"left"}},Ve=t("td",{style:{"text-align":"center"}},"100",-1),Te={style:{"text-align":"left"}},Ue={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Re={style:{"text-align":"center"}},We={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0100",target:"_blank",rel:"noopener noreferrer"},Ge={style:{"text-align":"left"}},Ye=t("code",null,"树",-1),Qe=t("code",null,"深度优先搜索",-1),Se=t("code",null,"广度优先搜索",-1),De=t("code",null,"1+",-1),Ze={style:{"text-align":"left"}},Ae=t("td",{style:{"text-align":"center"}},"101",-1),Fe={style:{"text-align":"left"}},Je={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},Xe={style:{"text-align":"center"}},$e={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0101",target:"_blank",rel:"noopener noreferrer"},to={style:{"text-align":"left"}},eo=t("code",null,"树",-1),oo=t("code",null,"深度优先搜索",-1),lo=t("code",null,"广度优先搜索",-1),no=t("code",null,"1+",-1),so={style:{"text-align":"left"}},_o=t("td",{style:{"text-align":"center"}},"102",-1),co={style:{"text-align":"left"}},io={href:"https://leetcode.com/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},ro={style:{"text-align":"center"}},ao={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0102",target:"_blank",rel:"noopener noreferrer"},ho={style:{"text-align":"left"}},uo=t("code",null,"树",-1),fo=t("code",null,"广度优先搜索",-1),go=t("code",null,"二叉树",-1),mo={style:{"text-align":"left"}},yo=t("td",{style:{"text-align":"center"}},"103",-1),bo={style:{"text-align":"left"}},xo={href:"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},po={style:{"text-align":"center"}},ko={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0103",target:"_blank",rel:"noopener noreferrer"},Mo={style:{"text-align":"left"}},jo=t("code",null,"树",-1),vo=t("code",null,"广度优先搜索",-1),Io=t("code",null,"二叉树",-1),Eo={style:{"text-align":"left"}},wo=t("td",{style:{"text-align":"center"}},"104",-1),zo={style:{"text-align":"left"}},Oo={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},qo={style:{"text-align":"center"}},Ho={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0104",target:"_blank",rel:"noopener noreferrer"},Lo={style:{"text-align":"left"}},Co=t("code",null,"树",-1),No=t("code",null,"深度优先搜索",-1),Po=t("code",null,"广度优先搜索",-1),Bo=t("code",null,"1+",-1),Ko={style:{"text-align":"left"}},Vo=t("td",{style:{"text-align":"center"}},"105",-1),To={style:{"text-align":"left"}},Uo={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ro={style:{"text-align":"center"}},Wo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0105",target:"_blank",rel:"noopener noreferrer"},Go={style:{"text-align":"left"}},Yo=t("code",null,"树",-1),Qo=t("code",null,"数组",-1),So=t("code",null,"哈希表",-1),Do=t("code",null,"2+",-1),Zo={style:{"text-align":"left"}},Ao=t("td",{style:{"text-align":"center"}},"106",-1),Fo={style:{"text-align":"left"}},Jo={href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Xo={style:{"text-align":"center"}},$o={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0106",target:"_blank",rel:"noopener noreferrer"},tl={style:{"text-align":"left"}},el=t("code",null,"树",-1),ol=t("code",null,"数组",-1),ll=t("code",null,"哈希表",-1),nl=t("code",null,"2+",-1),sl={style:{"text-align":"left"}},dl=t("td",{style:{"text-align":"center"}},"107",-1),_l={style:{"text-align":"left"}},cl={href:"https://leetcode.com/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},il={style:{"text-align":"center"}},rl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0107",target:"_blank",rel:"noopener noreferrer"},al={style:{"text-align":"left"}},hl=t("code",null,"树",-1),ul=t("code",null,"广度优先搜索",-1),fl=t("code",null,"二叉树",-1),gl={style:{"text-align":"left"}},ml=t("td",{style:{"text-align":"center"}},"108",-1),yl={style:{"text-align":"left"}},bl={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},xl={style:{"text-align":"center"}},pl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0108",target:"_blank",rel:"noopener noreferrer"},kl={style:{"text-align":"left"}},Ml=t("code",null,"树",-1),jl=t("code",null,"二叉搜索树",-1),vl=t("code",null,"数组",-1),Il=t("code",null,"2+",-1),El={style:{"text-align":"left"}},wl=t("td",{style:{"text-align":"center"}},"109",-1),zl={style:{"text-align":"left"}},Ol={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ql={style:{"text-align":"center"}},Hl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0109",target:"_blank",rel:"noopener noreferrer"},Ll={style:{"text-align":"left"}},Cl=t("code",null,"树",-1),Nl=t("code",null,"二叉搜索树",-1),Pl=t("code",null,"链表",-1),Bl=t("code",null,"2+",-1),Kl={style:{"text-align":"left"}},Vl=t("td",{style:{"text-align":"center"}},"110",-1),Tl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},Rl={style:{"text-align":"center"}},Wl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0110",target:"_blank",rel:"noopener noreferrer"},Gl={style:{"text-align":"left"}},Yl=t("code",null,"树",-1),Ql=t("code",null,"深度优先搜索",-1),Sl=t("code",null,"二叉树",-1),Dl={style:{"text-align":"left"}},Zl=t("td",{style:{"text-align":"center"}},"111",-1),Al={style:{"text-align":"left"}},Fl={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Jl={style:{"text-align":"center"}},Xl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0111",target:"_blank",rel:"noopener noreferrer"},$l={style:{"text-align":"left"}},tn=t("code",null,"树",-1),en=t("code",null,"深度优先搜索",-1),on=t("code",null,"广度优先搜索",-1),ln=t("code",null,"1+",-1),nn={style:{"text-align":"left"}},sn=t("td",{style:{"text-align":"center"}},"112",-1),dn={style:{"text-align":"left"}},_n={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},cn={style:{"text-align":"center"}},rn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0112",target:"_blank",rel:"noopener noreferrer"},an={style:{"text-align":"left"}},hn=t("code",null,"树",-1),un=t("code",null,"深度优先搜索",-1),fn=t("code",null,"广度优先搜索",-1),gn=t("code",null,"1+",-1),mn={style:{"text-align":"left"}},yn=t("td",{style:{"text-align":"center"}},"113",-1),bn={style:{"text-align":"left"}},xn={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},pn={style:{"text-align":"center"}},kn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0113",target:"_blank",rel:"noopener noreferrer"},Mn={style:{"text-align":"left"}},jn=t("code",null,"树",-1),vn=t("code",null,"深度优先搜索",-1),In=t("code",null,"回溯",-1),En=t("code",null,"1+",-1),wn={style:{"text-align":"left"}},zn=t("td",{style:{"text-align":"center"}},"114",-1),On={style:{"text-align":"left"}},qn={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},Hn={style:{"text-align":"center"}},Ln={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0114",target:"_blank",rel:"noopener noreferrer"},Cn={style:{"text-align":"left"}},Nn=t("code",null,"栈",-1),Pn=t("code",null,"树",-1),Bn=t("code",null,"深度优先搜索",-1),Kn=t("code",null,"2+",-1),Vn={style:{"text-align":"left"}},Tn=t("td",{style:{"text-align":"center"}},"116",-1),Un={style:{"text-align":"left"}},Rn={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},Wn={style:{"text-align":"center"}},Gn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0116",target:"_blank",rel:"noopener noreferrer"},Yn={style:{"text-align":"left"}},Qn=t("code",null,"树",-1),Sn=t("code",null,"深度优先搜索",-1),Dn=t("code",null,"广度优先搜索",-1),Zn=t("code",null,"2+",-1),An={style:{"text-align":"left"}},Fn=t("td",{style:{"text-align":"center"}},"117",-1),Jn={style:{"text-align":"left"}},Xn={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},$n={style:{"text-align":"center"}},ts={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0117",target:"_blank",rel:"noopener noreferrer"},es={style:{"text-align":"left"}},os=t("code",null,"树",-1),ls=t("code",null,"深度优先搜索",-1),ns=t("code",null,"广度优先搜索",-1),ss=t("code",null,"2+",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"124",-1),cs={style:{"text-align":"left"}},is={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},rs={style:{"text-align":"center"}},as={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0124",target:"_blank",rel:"noopener noreferrer"},hs={style:{"text-align":"left"}},us=t("code",null,"树",-1),fs=t("code",null,"深度优先搜索",-1),gs=t("code",null,"动态规划",-1),ms=t("code",null,"1+",-1),ys={style:{"text-align":"left"}},bs=t("td",{style:{"text-align":"center"}},"129",-1),xs={style:{"text-align":"left"}},ps={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},ks={style:{"text-align":"center"}},Ms={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0129",target:"_blank",rel:"noopener noreferrer"},js={style:{"text-align":"left"}},vs=t("code",null,"树",-1),Is=t("code",null,"深度优先搜索",-1),Es=t("code",null,"二叉树",-1),ws={style:{"text-align":"left"}},zs=t("td",{style:{"text-align":"center"}},"144",-1),Os={style:{"text-align":"left"}},qs={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Hs={style:{"text-align":"center"}},Ls={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0144",target:"_blank",rel:"noopener noreferrer"},Cs={style:{"text-align":"left"}},Ns=t("code",null,"栈",-1),Ps=t("code",null,"树",-1),Bs=t("code",null,"深度优先搜索",-1),Ks=t("code",null,"1+",-1),Vs={style:{"text-align":"left"}},Ts=t("td",{style:{"text-align":"center"}},"145",-1),Us={style:{"text-align":"left"}},Rs={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ws={style:{"text-align":"center"}},Gs={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0145",target:"_blank",rel:"noopener noreferrer"},Ys={style:{"text-align":"left"}},Qs=t("code",null,"栈",-1),Ss=t("code",null,"树",-1),Ds=t("code",null,"深度优先搜索",-1),Zs=t("code",null,"1+",-1),As={style:{"text-align":"left"}},Fs=t("td",{style:{"text-align":"center"}},"156",-1),Js={style:{"text-align":"left"}},Xs={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},$s={style:{"text-align":"center"}},td={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0156",target:"_blank",rel:"noopener noreferrer"},ed={style:{"text-align":"left"}},od=t("code",null,"树",-1),ld=t("code",null,"深度优先搜索",-1),nd=t("code",null,"二叉树",-1),sd={style:{"text-align":"left"}},dd=t("td",{style:{"text-align":"center"}},"173",-1),_d={style:{"text-align":"left"}},cd={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},id={style:{"text-align":"center"}},rd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0173",target:"_blank",rel:"noopener noreferrer"},ad={style:{"text-align":"left"}},hd=t("code",null,"栈",-1),ud=t("code",null,"树",-1),fd=t("code",null,"设计",-1),gd=t("code",null,"3+",-1),md={style:{"text-align":"left"}},yd=t("td",{style:{"text-align":"center"}},"199",-1),bd={style:{"text-align":"left"}},xd={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},pd={style:{"text-align":"center"}},kd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0199",target:"_blank",rel:"noopener noreferrer"},Md={style:{"text-align":"left"}},jd=t("code",null,"树",-1),vd=t("code",null,"深度优先搜索",-1),Id=t("code",null,"广度优先搜索",-1),Ed=t("code",null,"1+",-1),wd={style:{"text-align":"left"}},zd=t("td",{style:{"text-align":"center"}},"222",-1),Od={style:{"text-align":"left"}},qd={href:"https://leetcode.com/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},Hd={style:{"text-align":"center"}},Ld={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0222",target:"_blank",rel:"noopener noreferrer"},Cd={style:{"text-align":"left"}},Nd=t("code",null,"位运算",-1),Pd=t("code",null,"树",-1),Bd=t("code",null,"二分查找",-1),Kd=t("code",null,"1+",-1),Vd={style:{"text-align":"left"}},Td=t("td",{style:{"text-align":"center"}},"226",-1),Ud={style:{"text-align":"left"}},Rd={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wd={style:{"text-align":"center"}},Gd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0226",target:"_blank",rel:"noopener noreferrer"},Yd={style:{"text-align":"left"}},Qd=t("code",null,"树",-1),Sd=t("code",null,"深度优先搜索",-1),Dd=t("code",null,"广度优先搜索",-1),Zd=t("code",null,"1+",-1),Ad={style:{"text-align":"left"}},Fd=t("td",{style:{"text-align":"center"}},"230",-1),Jd={style:{"text-align":"left"}},Xd={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},$d={style:{"text-align":"center"}},t_={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0230",target:"_blank",rel:"noopener noreferrer"},e_={style:{"text-align":"left"}},o_=t("code",null,"树",-1),l_=t("code",null,"深度优先搜索",-1),n_=t("code",null,"二叉搜索树",-1),s_=t("code",null,"1+",-1),d_={style:{"text-align":"left"}},__=t("td",{style:{"text-align":"center"}},"235",-1),c_={style:{"text-align":"left"}},i_={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},r_={style:{"text-align":"center"}},a_={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0235",target:"_blank",rel:"noopener noreferrer"},h_={style:{"text-align":"left"}},u_=t("code",null,"树",-1),f_=t("code",null,"深度优先搜索",-1),g_=t("code",null,"二叉搜索树",-1),m_=t("code",null,"1+",-1),y_={style:{"text-align":"left"}},b_=t("td",{style:{"text-align":"center"}},"236",-1),x_={style:{"text-align":"left"}},p_={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},k_={style:{"text-align":"center"}},M_={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0236",target:"_blank",rel:"noopener noreferrer"},j_={style:{"text-align":"left"}},v_=t("code",null,"树",-1),I_=t("code",null,"深度优先搜索",-1),E_=t("code",null,"二叉树",-1),w_={style:{"text-align":"left"}},z_=t("td",{style:{"text-align":"center"}},"250",-1),O_={style:{"text-align":"left"}},q_={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},H_=t("td",{style:{"text-align":"center"}},null,-1),L_={style:{"text-align":"left"}},C_=t("code",null,"树",-1),N_=t("code",null,"深度优先搜索",-1),P_=t("code",null,"二叉树",-1),B_={style:{"text-align":"left"}},K_=t("td",{style:{"text-align":"center"}},"255",-1),V_={style:{"text-align":"left"}},T_={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},U_=t("td",{style:{"text-align":"center"}},null,-1),R_={style:{"text-align":"left"}},W_=t("code",null,"栈",-1),G_=t("code",null,"树",-1),Y_=t("code",null,"二叉搜索树",-1),Q_=t("code",null,"4+",-1),S_={style:{"text-align":"left"}},D_=t("td",{style:{"text-align":"center"}},"257",-1),Z_={style:{"text-align":"left"}},A_={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},F_={style:{"text-align":"center"}},J_={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0257",target:"_blank",rel:"noopener noreferrer"},X_={style:{"text-align":"left"}},$_=t("code",null,"树",-1),tc=t("code",null,"深度优先搜索",-1),ec=t("code",null,"字符串",-1),oc=t("code",null,"2+",-1),lc={style:{"text-align":"left"}},nc=t("td",{style:{"text-align":"center"}},"270",-1),sc={style:{"text-align":"left"}},dc={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},_c=t("td",{style:{"text-align":"center"}},null,-1),cc={style:{"text-align":"left"}},ic=t("code",null,"树",-1),rc=t("code",null,"深度优先搜索",-1),ac=t("code",null,"二叉搜索树",-1),hc=t("code",null,"2+",-1),uc={style:{"text-align":"left"}},fc=t("td",{style:{"text-align":"center"}},"272",-1),gc={style:{"text-align":"left"}},mc={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},yc=t("td",{style:{"text-align":"center"}},null,-1),bc={style:{"text-align":"left"}},xc=t("code",null,"栈",-1),pc=t("code",null,"树",-1),kc=t("code",null,"深度优先搜索",-1),Mc=t("code",null,"4+",-1),jc={style:{"text-align":"left"}},vc=t("td",{style:{"text-align":"center"}},"285",-1),Ic={style:{"text-align":"left"}},Ec={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},wc=t("td",{style:{"text-align":"center"}},null,-1),zc={style:{"text-align":"left"}},Oc=t("code",null,"树",-1),qc=t("code",null,"深度优先搜索",-1),Hc=t("code",null,"二叉搜索树",-1),Lc=t("code",null,"1+",-1),Cc={style:{"text-align":"left"}},Nc=t("td",{style:{"text-align":"center"}},"297",-1),Pc={style:{"text-align":"left"}},Bc={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},Kc={style:{"text-align":"center"}},Vc={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0297",target:"_blank",rel:"noopener noreferrer"},Tc={style:{"text-align":"left"}},Uc=t("code",null,"树",-1),Rc=t("code",null,"深度优先搜索",-1),Wc=t("code",null,"广度优先搜索",-1),Gc=t("code",null,"3+",-1),Yc={style:{"text-align":"left"}},Qc=t("td",{style:{"text-align":"center"}},"298",-1),Sc={style:{"text-align":"left"}},Dc={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},Zc=t("td",{style:{"text-align":"center"}},null,-1),Ac={style:{"text-align":"left"}},Fc=t("code",null,"树",-1),Jc=t("code",null,"深度优先搜索",-1),Xc=t("code",null,"二叉树",-1),$c={style:{"text-align":"left"}},ti=t("td",{style:{"text-align":"center"}},"314",-1),ei={style:{"text-align":"left"}},oi={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},li=t("td",{style:{"text-align":"center"}},null,-1),ni={style:{"text-align":"left"}},si=t("code",null,"树",-1),di=t("code",null,"深度优先搜索",-1),_i=t("code",null,"广度优先搜索",-1),ci=t("code",null,"3+",-1),ii={style:{"text-align":"left"}},ri=t("td",{style:{"text-align":"center"}},"331",-1),ai={style:{"text-align":"left"}},hi={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ui=t("td",{style:{"text-align":"center"}},null,-1),fi={style:{"text-align":"left"}},gi=t("code",null,"栈",-1),mi=t("code",null,"树",-1),yi=t("code",null,"字符串",-1),bi=t("code",null,"1+",-1),xi={style:{"text-align":"left"}},pi=t("td",{style:{"text-align":"center"}},"333",-1),ki={style:{"text-align":"left"}},Mi={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},ji=t("td",{style:{"text-align":"center"}},null,-1),vi={style:{"text-align":"left"}},Ii=t("code",null,"树",-1),Ei=t("code",null,"深度优先搜索",-1),wi=t("code",null,"二叉搜索树",-1),zi=t("code",null,"2+",-1),Oi={style:{"text-align":"left"}},qi=t("td",{style:{"text-align":"center"}},"337",-1),Hi={style:{"text-align":"left"}},Li={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Ci=t("td",{style:{"text-align":"center"}},null,-1),Ni={style:{"text-align":"left"}},Pi=t("code",null,"树",-1),Bi=t("code",null,"深度优先搜索",-1),Ki=t("code",null,"动态规划",-1),Vi=t("code",null,"1+",-1),Ti={style:{"text-align":"left"}},Ui=t("td",{style:{"text-align":"center"}},"366",-1),Ri={style:{"text-align":"left"}},Wi={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Gi={style:{"text-align":"center"}},Yi={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0366",target:"_blank",rel:"noopener noreferrer"},Qi={style:{"text-align":"left"}},Si=t("code",null,"树",-1),Di=t("code",null,"深度优先搜索",-1),Zi=t("code",null,"二叉树",-1),Ai={style:{"text-align":"left"}},Fi=t("td",{style:{"text-align":"center"}},"404",-1),Ji={style:{"text-align":"left"}},Xi={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},$i=t("td",{style:{"text-align":"center"}},null,-1),tr={style:{"text-align":"left"}},er=t("code",null,"树",-1),or=t("code",null,"深度优先搜索",-1),lr=t("code",null,"广度优先搜索",-1),nr=t("code",null,"1+",-1),sr={style:{"text-align":"left"}},dr=t("td",{style:{"text-align":"center"}},"426",-1),_r={style:{"text-align":"left"}},cr={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},ir={style:{"text-align":"center"}},rr={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0426",target:"_blank",rel:"noopener noreferrer"},ar={style:{"text-align":"left"}},hr=t("code",null,"栈",-1),ur=t("code",null,"树",-1),fr=t("code",null,"深度优先搜索",-1),gr=t("code",null,"4+",-1),mr={style:{"text-align":"left"}},yr=t("td",{style:{"text-align":"center"}},"431",-1),br={style:{"text-align":"left"}},xr={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},pr=t("td",{style:{"text-align":"center"}},null,-1),kr={style:{"text-align":"left"}},Mr=t("code",null,"树",-1),jr=t("code",null,"深度优先搜索",-1),vr=t("code",null,"广度优先搜索",-1),Ir=t("code",null,"2+",-1),Er={style:{"text-align":"left"}},wr=t("td",{style:{"text-align":"center"}},"437",-1),zr={style:{"text-align":"left"}},Or={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},qr={style:{"text-align":"center"}},Hr={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0437",target:"_blank",rel:"noopener noreferrer"},Lr={style:{"text-align":"left"}},Cr=t("code",null,"树",-1),Nr=t("code",null,"深度优先搜索",-1),Pr=t("code",null,"二叉树",-1),Br={style:{"text-align":"left"}},Kr=t("td",{style:{"text-align":"center"}},"449",-1),Vr={style:{"text-align":"left"}},Tr={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Ur=t("td",{style:{"text-align":"center"}},null,-1),Rr={style:{"text-align":"left"}},Wr=t("code",null,"树",-1),Gr=t("code",null,"深度优先搜索",-1),Yr=t("code",null,"广度优先搜索",-1),Qr=t("code",null,"4+",-1),Sr={style:{"text-align":"left"}},Dr=t("td",{style:{"text-align":"center"}},"450",-1),Zr={style:{"text-align":"left"}},Ar={href:"https://leetcode.com/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Fr={style:{"text-align":"center"}},Jr={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0450",target:"_blank",rel:"noopener noreferrer"},Xr={style:{"text-align":"left"}},$r=t("code",null,"树",-1),ta=t("code",null,"二叉搜索树",-1),ea=t("code",null,"二叉树",-1),oa={style:{"text-align":"left"}},la=t("td",{style:{"text-align":"center"}},"501",-1),na={style:{"text-align":"left"}},sa={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},da=t("td",{style:{"text-align":"center"}},null,-1),_a={style:{"text-align":"left"}},ca=t("code",null,"树",-1),ia=t("code",null,"深度优先搜索",-1),ra=t("code",null,"二叉搜索树",-1),aa=t("code",null,"1+",-1),ha={style:{"text-align":"left"}},ua=t("td",{style:{"text-align":"center"}},"508",-1),fa={style:{"text-align":"left"}},ga={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},ma=t("td",{style:{"text-align":"center"}},null,-1),ya={style:{"text-align":"left"}},ba=t("code",null,"树",-1),xa=t("code",null,"深度优先搜索",-1),pa=t("code",null,"哈希表",-1),ka=t("code",null,"1+",-1),Ma={style:{"text-align":"left"}},ja=t("td",{style:{"text-align":"center"}},"510",-1),va={style:{"text-align":"left"}},Ia={href:"https://leetcode.com/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},Ea=t("td",{style:{"text-align":"center"}},null,-1),wa={style:{"text-align":"left"}},za=t("code",null,"树",-1),Oa=t("code",null,"二叉搜索树",-1),qa=t("code",null,"二叉树",-1),Ha={style:{"text-align":"left"}},La=t("td",{style:{"text-align":"center"}},"513",-1),Ca={style:{"text-align":"left"}},Na={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},Pa=t("td",{style:{"text-align":"center"}},null,-1),Ba={style:{"text-align":"left"}},Ka=t("code",null,"树",-1),Va=t("code",null,"深度优先搜索",-1),Ta=t("code",null,"广度优先搜索",-1),Ua=t("code",null,"1+",-1),Ra={style:{"text-align":"left"}},Wa=t("td",{style:{"text-align":"center"}},"515",-1),Ga={style:{"text-align":"left"}},Ya={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},Qa=t("td",{style:{"text-align":"center"}},null,-1),Sa={style:{"text-align":"left"}},Da=t("code",null,"树",-1),Za=t("code",null,"深度优先搜索",-1),Aa=t("code",null,"广度优先搜索",-1),Fa=t("code",null,"1+",-1),Ja={style:{"text-align":"left"}},Xa=t("td",{style:{"text-align":"center"}},"530",-1),$a={style:{"text-align":"left"}},th={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},eh={style:{"text-align":"center"}},oh={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0530",target:"_blank",rel:"noopener noreferrer"},lh={style:{"text-align":"left"}},nh=t("code",null,"树",-1),sh=t("code",null,"深度优先搜索",-1),dh=t("code",null,"广度优先搜索",-1),_h=t("code",null,"2+",-1),ch={style:{"text-align":"left"}},ih=t("td",{style:{"text-align":"center"}},"536",-1),rh={style:{"text-align":"left"}},ah={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},hh=t("td",{style:{"text-align":"center"}},null,-1),uh={style:{"text-align":"left"}},fh=t("code",null,"栈",-1),gh=t("code",null,"树",-1),mh=t("code",null,"深度优先搜索",-1),yh=t("code",null,"2+",-1),bh={style:{"text-align":"left"}},xh=t("td",{style:{"text-align":"center"}},"538",-1),ph={style:{"text-align":"left"}},kh={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Mh=t("td",{style:{"text-align":"center"}},null,-1),jh={style:{"text-align":"left"}},vh=t("code",null,"树",-1),Ih=t("code",null,"深度优先搜索",-1),Eh=t("code",null,"二叉搜索树",-1),wh=t("code",null,"1+",-1),zh={style:{"text-align":"left"}},Oh=t("td",{style:{"text-align":"center"}},"543",-1),qh={style:{"text-align":"left"}},Hh={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Lh={style:{"text-align":"center"}},Ch={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0543",target:"_blank",rel:"noopener noreferrer"},Nh={style:{"text-align":"left"}},Ph=t("code",null,"树",-1),Bh=t("code",null,"深度优先搜索",-1),Kh=t("code",null,"二叉树",-1),Vh={style:{"text-align":"left"}},Th=t("td",{style:{"text-align":"center"}},"545",-1),Uh={style:{"text-align":"left"}},Rh={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wh=t("td",{style:{"text-align":"center"}},null,-1),Gh={style:{"text-align":"left"}},Yh=t("code",null,"树",-1),Qh=t("code",null,"深度优先搜索",-1),Sh=t("code",null,"二叉树",-1),Dh={style:{"text-align":"left"}},Zh=t("td",{style:{"text-align":"center"}},"549",-1),Ah={style:{"text-align":"left"}},Fh={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},Jh=t("td",{style:{"text-align":"center"}},null,-1),Xh={style:{"text-align":"left"}},$h=t("code",null,"树",-1),t1=t("code",null,"深度优先搜索",-1),e1=t("code",null,"二叉树",-1),o1={style:{"text-align":"left"}},l1=t("td",{style:{"text-align":"center"}},"563",-1),n1={style:{"text-align":"left"}},s1={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},d1=t("td",{style:{"text-align":"center"}},null,-1),_1={style:{"text-align":"left"}},c1=t("code",null,"树",-1),i1=t("code",null,"深度优先搜索",-1),r1=t("code",null,"二叉树",-1),a1={style:{"text-align":"left"}},h1=t("td",{style:{"text-align":"center"}},"572",-1),u1={style:{"text-align":"left"}},f1={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},g1={style:{"text-align":"center"}},m1={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0572",target:"_blank",rel:"noopener noreferrer"},y1={style:{"text-align":"left"}},b1=t("code",null,"树",-1),x1=t("code",null,"深度优先搜索",-1),p1=t("code",null,"二叉树",-1),k1=t("code",null,"2+",-1),M1={style:{"text-align":"left"}},j1=t("td",{style:{"text-align":"center"}},"606",-1),v1={style:{"text-align":"left"}},I1={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},E1=t("td",{style:{"text-align":"center"}},null,-1),w1={style:{"text-align":"left"}},z1=t("code",null,"树",-1),O1=t("code",null,"深度优先搜索",-1),q1=t("code",null,"字符串",-1),H1=t("code",null,"1+",-1),L1={style:{"text-align":"left"}},C1=t("td",{style:{"text-align":"center"}},"617",-1),N1={style:{"text-align":"left"}},P1={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},B1={style:{"text-align":"center"}},K1={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0617",target:"_blank",rel:"noopener noreferrer"},V1={style:{"text-align":"left"}},T1=t("code",null,"树",-1),U1=t("code",null,"深度优先搜索",-1),R1=t("code",null,"广度优先搜索",-1),W1=t("code",null,"1+",-1),G1={style:{"text-align":"left"}},Y1=t("td",{style:{"text-align":"center"}},"623",-1),Q1={style:{"text-align":"left"}},S1={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},D1=t("td",{style:{"text-align":"center"}},null,-1),Z1={style:{"text-align":"left"}},A1=t("code",null,"树",-1),F1=t("code",null,"深度优先搜索",-1),J1=t("code",null,"广度优先搜索",-1),X1=t("code",null,"1+",-1),$1={style:{"text-align":"left"}},tu=t("td",{style:{"text-align":"center"}},"637",-1),eu={style:{"text-align":"left"}},ou={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},lu={style:{"text-align":"center"}},nu={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0637",target:"_blank",rel:"noopener noreferrer"},su={style:{"text-align":"left"}},du=t("code",null,"树",-1),_u=t("code",null,"深度优先搜索",-1),cu=t("code",null,"广度优先搜索",-1),iu=t("code",null,"1+",-1),ru={style:{"text-align":"left"}},au=t("td",{style:{"text-align":"center"}},"652",-1),hu={style:{"text-align":"left"}},uu={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},fu=t("td",{style:{"text-align":"center"}},null,-1),gu={style:{"text-align":"left"}},mu=t("code",null,"树",-1),yu=t("code",null,"深度优先搜索",-1),bu=t("code",null,"哈希表",-1),xu=t("code",null,"1+",-1),pu={style:{"text-align":"left"}},ku=t("td",{style:{"text-align":"center"}},"653",-1),Mu={style:{"text-align":"left"}},ju={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},vu=t("td",{style:{"text-align":"center"}},null,-1),Iu={style:{"text-align":"left"}},Eu=t("code",null,"树",-1),wu=t("code",null,"深度优先搜索",-1),zu=t("code",null,"广度优先搜索",-1),Ou=t("code",null,"4+",-1),qu={style:{"text-align":"left"}},Hu=t("td",{style:{"text-align":"center"}},"654",-1),Lu={style:{"text-align":"left"}},Cu={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Nu={style:{"text-align":"center"}},Pu={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0654",target:"_blank",rel:"noopener noreferrer"},Bu={style:{"text-align":"left"}},Ku=t("code",null,"栈",-1),Vu=t("code",null,"树",-1),Tu=t("code",null,"数组",-1),Uu=t("code",null,"3+",-1),Ru={style:{"text-align":"left"}},Wu=t("td",{style:{"text-align":"center"}},"655",-1),Gu={style:{"text-align":"left"}},Yu={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qu=t("td",{style:{"text-align":"center"}},null,-1),Su={style:{"text-align":"left"}},Du=t("code",null,"树",-1),Zu=t("code",null,"深度优先搜索",-1),Au=t("code",null,"广度优先搜索",-1),Fu=t("code",null,"1+",-1),Ju={style:{"text-align":"left"}},Xu=t("td",{style:{"text-align":"center"}},"662",-1),$u={style:{"text-align":"left"}},tf={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},ef={style:{"text-align":"center"}},of={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0662",target:"_blank",rel:"noopener noreferrer"},lf={style:{"text-align":"left"}},nf=t("code",null,"树",-1),sf=t("code",null,"深度优先搜索",-1),df=t("code",null,"广度优先搜索",-1),_f=t("code",null,"1+",-1),cf={style:{"text-align":"left"}},rf=t("td",{style:{"text-align":"center"}},"663",-1),af={style:{"text-align":"left"}},hf={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},uf=t("td",{style:{"text-align":"center"}},null,-1),ff={style:{"text-align":"left"}},gf=t("code",null,"树",-1),mf=t("code",null,"深度优先搜索",-1),yf=t("code",null,"二叉树",-1),bf={style:{"text-align":"left"}},xf=t("td",{style:{"text-align":"center"}},"666",-1),pf={style:{"text-align":"left"}},kf={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},Mf=t("td",{style:{"text-align":"center"}},null,-1),jf={style:{"text-align":"left"}},vf=t("code",null,"树",-1),If=t("code",null,"深度优先搜索",-1),Ef=t("code",null,"数组",-1),wf=t("code",null,"2+",-1),zf={style:{"text-align":"left"}},Of=t("td",{style:{"text-align":"center"}},"669",-1),qf={style:{"text-align":"left"}},Hf={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Lf=t("td",{style:{"text-align":"center"}},null,-1),Cf={style:{"text-align":"left"}},Nf=t("code",null,"树",-1),Pf=t("code",null,"深度优先搜索",-1),Bf=t("code",null,"二叉搜索树",-1),Kf=t("code",null,"1+",-1),Vf={style:{"text-align":"left"}},Tf=t("td",{style:{"text-align":"center"}},"671",-1),Uf={style:{"text-align":"left"}},Rf={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wf=t("td",{style:{"text-align":"center"}},null,-1),Gf={style:{"text-align":"left"}},Yf=t("code",null,"树",-1),Qf=t("code",null,"深度优先搜索",-1),Sf=t("code",null,"二叉树",-1),Df={style:{"text-align":"left"}},Zf=t("td",{style:{"text-align":"center"}},"687",-1),Af={style:{"text-align":"left"}},Ff={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},Jf=t("td",{style:{"text-align":"center"}},null,-1),Xf={style:{"text-align":"left"}},$f=t("code",null,"树",-1),tg=t("code",null,"深度优先搜索",-1),eg=t("code",null,"二叉树",-1),og={style:{"text-align":"left"}},lg=t("td",{style:{"text-align":"center"}},"700",-1),ng={style:{"text-align":"left"}},sg={href:"https://leetcode.com/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},dg={style:{"text-align":"center"}},_g={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0700",target:"_blank",rel:"noopener noreferrer"},cg={style:{"text-align":"left"}},ig=t("code",null,"树",-1),rg=t("code",null,"二叉搜索树",-1),ag=t("code",null,"二叉树",-1),hg={style:{"text-align":"left"}},ug=t("td",{style:{"text-align":"center"}},"701",-1),fg={style:{"text-align":"left"}},gg={href:"https://leetcode.com/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},mg={style:{"text-align":"center"}},yg={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0701",target:"_blank",rel:"noopener noreferrer"},bg={style:{"text-align":"left"}},xg=t("code",null,"树",-1),pg=t("code",null,"二叉搜索树",-1),kg=t("code",null,"二叉树",-1),Mg={style:{"text-align":"left"}},jg=t("td",{style:{"text-align":"center"}},"703",-1),vg={style:{"text-align":"left"}},Ig={href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},Eg={style:{"text-align":"center"}},wg={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0703",target:"_blank",rel:"noopener noreferrer"},zg={style:{"text-align":"left"}},Og=t("code",null,"树",-1),qg=t("code",null,"设计",-1),Hg=t("code",null,"二叉搜索树",-1),Lg=t("code",null,"3+",-1),Cg={style:{"text-align":"left"}},Ng=t("td",{style:{"text-align":"center"}},"742",-1),Pg={style:{"text-align":"left"}},Bg={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Kg=t("td",{style:{"text-align":"center"}},null,-1),Vg={style:{"text-align":"left"}},Tg=t("code",null,"树",-1),Ug=t("code",null,"深度优先搜索",-1),Rg=t("code",null,"广度优先搜索",-1),Wg=t("code",null,"1+",-1),Gg={style:{"text-align":"left"}},Yg=t("td",{style:{"text-align":"center"}},"776",-1),Qg={style:{"text-align":"left"}},Sg={href:"https://leetcode.com/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},Dg=t("td",{style:{"text-align":"center"}},null,-1),Zg={style:{"text-align":"left"}},Ag=t("code",null,"树",-1),Fg=t("code",null,"二叉搜索树",-1),Jg=t("code",null,"递归",-1),Xg=t("code",null,"1+",-1),$g={style:{"text-align":"left"}},tm=t("td",{style:{"text-align":"center"}},"783",-1),em={style:{"text-align":"left"}},om={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},lm={style:{"text-align":"center"}},nm={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0783",target:"_blank",rel:"noopener noreferrer"},sm={style:{"text-align":"left"}},dm=t("code",null,"树",-1),_m=t("code",null,"深度优先搜索",-1),cm=t("code",null,"广度优先搜索",-1),im=t("code",null,"2+",-1),rm={style:{"text-align":"left"}},am=t("td",{style:{"text-align":"center"}},"814",-1),hm={style:{"text-align":"left"}},um={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},fm=t("td",{style:{"text-align":"center"}},null,-1),gm={style:{"text-align":"left"}},mm=t("code",null,"树",-1),ym=t("code",null,"深度优先搜索",-1),bm=t("code",null,"二叉树",-1),xm={style:{"text-align":"left"}},pm=t("td",{style:{"text-align":"center"}},"863",-1),km={style:{"text-align":"left"}},Mm={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},jm=t("td",{style:{"text-align":"center"}},null,-1),vm={style:{"text-align":"left"}},Im=t("code",null,"树",-1),Em=t("code",null,"深度优先搜索",-1),wm=t("code",null,"广度优先搜索",-1),zm=t("code",null,"2+",-1),Om={style:{"text-align":"left"}},qm=t("td",{style:{"text-align":"center"}},"865",-1),Hm={style:{"text-align":"left"}},Lm={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},Cm=t("td",{style:{"text-align":"center"}},null,-1),Nm={style:{"text-align":"left"}},Pm=t("code",null,"树",-1),Bm=t("code",null,"深度优先搜索",-1),Km=t("code",null,"广度优先搜索",-1),Vm=t("code",null,"2+",-1),Tm={style:{"text-align":"left"}},Um=t("td",{style:{"text-align":"center"}},"872",-1),Rm={style:{"text-align":"left"}},Wm={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},Gm=t("td",{style:{"text-align":"center"}},null,-1),Ym={style:{"text-align":"left"}},Qm=t("code",null,"树",-1),Sm=t("code",null,"深度优先搜索",-1),Dm=t("code",null,"二叉树",-1),Zm={style:{"text-align":"left"}},Am=t("td",{style:{"text-align":"center"}},"889",-1),Fm={style:{"text-align":"left"}},Jm={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Xm={style:{"text-align":"center"}},$m={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0889",target:"_blank",rel:"noopener noreferrer"},ty={style:{"text-align":"left"}},ey=t("code",null,"树",-1),oy=t("code",null,"数组",-1),ly=t("code",null,"哈希表",-1),ny=t("code",null,"2+",-1),sy={style:{"text-align":"left"}},dy=t("td",{style:{"text-align":"center"}},"894",-1),_y={style:{"text-align":"left"}},cy={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},iy=t("td",{style:{"text-align":"center"}},null,-1),ry={style:{"text-align":"left"}},ay=t("code",null,"树",-1),hy=t("code",null,"递归",-1),uy=t("code",null,"记忆化搜索",-1),fy=t("code",null,"2+",-1),gy={style:{"text-align":"left"}},my=t("td",{style:{"text-align":"center"}},"897",-1),yy={style:{"text-align":"left"}},by={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},xy=t("td",{style:{"text-align":"center"}},null,-1),py={style:{"text-align":"left"}},ky=t("code",null,"栈",-1),My=t("code",null,"树",-1),jy=t("code",null,"深度优先搜索",-1),vy=t("code",null,"2+",-1),Iy={style:{"text-align":"left"}},Ey=t("td",{style:{"text-align":"center"}},"919",-1),wy={style:{"text-align":"left"}},zy={href:"https://leetcode.com/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},Oy=t("td",{style:{"text-align":"center"}},null,-1),qy={style:{"text-align":"left"}},Hy=t("code",null,"树",-1),Ly=t("code",null,"广度优先搜索",-1),Cy=t("code",null,"设计",-1),Ny=t("code",null,"1+",-1),Py={style:{"text-align":"left"}},By=t("td",{style:{"text-align":"center"}},"938",-1),Ky={style:{"text-align":"left"}},Vy={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},Ty=t("td",{style:{"text-align":"center"}},null,-1),Uy={style:{"text-align":"left"}},Ry=t("code",null,"树",-1),Wy=t("code",null,"深度优先搜索",-1),Gy=t("code",null,"二叉搜索树",-1),Yy=t("code",null,"1+",-1),Qy={style:{"text-align":"left"}},Sy=t("td",{style:{"text-align":"center"}},"951",-1),Dy={style:{"text-align":"left"}},Zy={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Ay=t("td",{style:{"text-align":"center"}},null,-1),Fy={style:{"text-align":"left"}},Jy=t("code",null,"树",-1),Xy=t("code",null,"深度优先搜索",-1),$y=t("code",null,"二叉树",-1),t2={style:{"text-align":"left"}},e2=t("td",{style:{"text-align":"center"}},"958",-1),o2={style:{"text-align":"left"}},l2={href:"https://leetcode.com/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},n2={style:{"text-align":"center"}},s2={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0958",target:"_blank",rel:"noopener noreferrer"},d2={style:{"text-align":"left"}},_2=t("code",null,"树",-1),c2=t("code",null,"广度优先搜索",-1),i2=t("code",null,"二叉树",-1),r2={style:{"text-align":"left"}},a2=t("td",{style:{"text-align":"center"}},"965",-1),h2={style:{"text-align":"left"}},u2={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},f2=t("td",{style:{"text-align":"center"}},null,-1),g2={style:{"text-align":"left"}},m2=t("code",null,"树",-1),y2=t("code",null,"深度优先搜索",-1),b2=t("code",null,"广度优先搜索",-1),x2=t("code",null,"1+",-1),p2={style:{"text-align":"left"}},k2=t("td",{style:{"text-align":"center"}},"968",-1),M2={style:{"text-align":"left"}},j2={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},v2=t("td",{style:{"text-align":"center"}},null,-1),I2={style:{"text-align":"left"}},E2=t("code",null,"树",-1),w2=t("code",null,"深度优先搜索",-1),z2=t("code",null,"动态规划",-1),O2=t("code",null,"1+",-1),q2={style:{"text-align":"left"}},H2=t("td",{style:{"text-align":"center"}},"971",-1),L2={style:{"text-align":"left"}},C2={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},N2=t("td",{style:{"text-align":"center"}},null,-1),P2={style:{"text-align":"left"}},B2=t("code",null,"树",-1),K2=t("code",null,"深度优先搜索",-1),V2=t("code",null,"二叉树",-1),T2={style:{"text-align":"left"}},U2=t("td",{style:{"text-align":"center"}},"979",-1),R2={style:{"text-align":"left"}},W2={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},G2=t("td",{style:{"text-align":"center"}},null,-1),Y2={style:{"text-align":"left"}},Q2=t("code",null,"树",-1),S2=t("code",null,"深度优先搜索",-1),D2=t("code",null,"二叉树",-1),Z2={style:{"text-align":"left"}},A2=t("td",{style:{"text-align":"center"}},"987",-1),F2={style:{"text-align":"left"}},J2={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},X2=t("td",{style:{"text-align":"center"}},null,-1),$2={style:{"text-align":"left"}},tb=t("code",null,"树",-1),eb=t("code",null,"深度优先搜索",-1),ob=t("code",null,"广度优先搜索",-1),lb=t("code",null,"3+",-1),nb={style:{"text-align":"left"}},sb=t("td",{style:{"text-align":"center"}},"988",-1),db={style:{"text-align":"left"}},_b={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},cb=t("td",{style:{"text-align":"center"}},null,-1),ib={style:{"text-align":"left"}},rb=t("code",null,"树",-1),ab=t("code",null,"深度优先搜索",-1),hb=t("code",null,"字符串",-1),ub=t("code",null,"2+",-1),fb={style:{"text-align":"left"}},gb=t("td",{style:{"text-align":"center"}},"993",-1),mb={style:{"text-align":"left"}},yb={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},bb=t("td",{style:{"text-align":"center"}},null,-1),xb={style:{"text-align":"left"}},pb=t("code",null,"树",-1),kb=t("code",null,"深度优先搜索",-1),Mb=t("code",null,"广度优先搜索",-1),jb=t("code",null,"1+",-1),vb={style:{"text-align":"left"}},Ib=t("td",{style:{"text-align":"center"}},"998",-1),Eb={style:{"text-align":"left"}},wb={href:"https://leetcode.com/problems/maximum-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},zb=t("td",{style:{"text-align":"center"}},null,-1),Ob={style:{"text-align":"left"}},qb=t("code",null,"树",-1),Hb=t("code",null,"二叉树",-1),Lb={style:{"text-align":"left"}},Cb=t("td",{style:{"text-align":"center"}},"1008",-1),Nb={style:{"text-align":"left"}},Pb={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Bb={style:{"text-align":"center"}},Kb={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1008",target:"_blank",rel:"noopener noreferrer"},Vb={style:{"text-align":"left"}},Tb=t("code",null,"栈",-1),Ub=t("code",null,"树",-1),Rb=t("code",null,"二叉搜索树",-1),Wb=t("code",null,"3+",-1),Gb={style:{"text-align":"left"}},Yb=t("td",{style:{"text-align":"center"}},"1022",-1),Qb={style:{"text-align":"left"}},Sb={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},Db=t("td",{style:{"text-align":"center"}},null,-1),Zb={style:{"text-align":"left"}},Ab=t("code",null,"树",-1),Fb=t("code",null,"深度优先搜索",-1),Jb=t("code",null,"二叉树",-1),Xb={style:{"text-align":"left"}},$b=t("td",{style:{"text-align":"center"}},"1026",-1),tx={style:{"text-align":"left"}},ex={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},ox=t("td",{style:{"text-align":"center"}},null,-1),lx={style:{"text-align":"left"}},nx=t("code",null,"树",-1),sx=t("code",null,"深度优先搜索",-1),dx=t("code",null,"二叉树",-1),_x={style:{"text-align":"left"}},cx=t("td",{style:{"text-align":"center"}},"1028",-1),ix={style:{"text-align":"left"}},rx={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},ax=t("td",{style:{"text-align":"center"}},null,-1),hx={style:{"text-align":"left"}},ux=t("code",null,"树",-1),fx=t("code",null,"深度优先搜索",-1),gx=t("code",null,"字符串",-1),mx=t("code",null,"1+",-1),yx={style:{"text-align":"left"}},bx=t("td",{style:{"text-align":"center"}},"1038",-1),xx={style:{"text-align":"left"}},px={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},kx=t("td",{style:{"text-align":"center"}},null,-1),Mx={style:{"text-align":"left"}},jx=t("code",null,"树",-1),vx=t("code",null,"深度优先搜索",-1),Ix=t("code",null,"二叉搜索树",-1),Ex=t("code",null,"1+",-1),wx={style:{"text-align":"left"}},zx=t("td",{style:{"text-align":"center"}},"1080",-1),Ox={style:{"text-align":"left"}},qx={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},Hx=t("td",{style:{"text-align":"center"}},null,-1),Lx={style:{"text-align":"left"}},Cx=t("code",null,"树",-1),Nx=t("code",null,"深度优先搜索",-1),Px=t("code",null,"二叉树",-1),Bx={style:{"text-align":"left"}},Kx=t("td",{style:{"text-align":"center"}},"1104",-1),Vx={style:{"text-align":"left"}},Tx={href:"https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ux=t("td",{style:{"text-align":"center"}},null,-1),Rx={style:{"text-align":"left"}},Wx=t("code",null,"树",-1),Gx=t("code",null,"数学",-1),Yx=t("code",null,"二叉树",-1),Qx={style:{"text-align":"left"}},Sx=t("td",{style:{"text-align":"center"}},"1110",-1),Dx={style:{"text-align":"left"}},Zx={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},Ax=t("td",{style:{"text-align":"center"}},null,-1),Fx={style:{"text-align":"left"}},Jx=t("code",null,"树",-1),Xx=t("code",null,"深度优先搜索",-1),$x=t("code",null,"数组",-1),tp=t("code",null,"2+",-1),ep={style:{"text-align":"left"}},op=t("td",{style:{"text-align":"center"}},"1120",-1),lp={style:{"text-align":"left"}},np={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},sp=t("td",{style:{"text-align":"center"}},null,-1),dp={style:{"text-align":"left"}},_p=t("code",null,"树",-1),cp=t("code",null,"深度优先搜索",-1),ip=t("code",null,"二叉树",-1),rp={style:{"text-align":"left"}},ap=t("td",{style:{"text-align":"center"}},"1123",-1),hp={style:{"text-align":"left"}},up={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},fp=t("td",{style:{"text-align":"center"}},null,-1),gp={style:{"text-align":"left"}},mp=t("code",null,"树",-1),yp=t("code",null,"深度优先搜索",-1),bp=t("code",null,"广度优先搜索",-1),xp=t("code",null,"2+",-1),pp={style:{"text-align":"left"}},kp=t("td",{style:{"text-align":"center"}},"1145",-1),Mp={style:{"text-align":"left"}},jp={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},vp=t("td",{style:{"text-align":"center"}},null,-1),Ip={style:{"text-align":"left"}},Ep=t("code",null,"树",-1),wp=t("code",null,"深度优先搜索",-1),zp=t("code",null,"二叉树",-1),Op={style:{"text-align":"left"}},qp=t("td",{style:{"text-align":"center"}},"1161",-1),Hp={style:{"text-align":"left"}},Lp={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Cp=t("td",{style:{"text-align":"center"}},null,-1),Np={style:{"text-align":"left"}},Pp=t("code",null,"树",-1),Bp=t("code",null,"深度优先搜索",-1),Kp=t("code",null,"广度优先搜索",-1),Vp=t("code",null,"1+",-1),Tp={style:{"text-align":"left"}},Up=t("td",{style:{"text-align":"center"}},"1214",-1),Rp={style:{"text-align":"left"}},Wp={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},Gp=t("td",{style:{"text-align":"center"}},null,-1),Yp={style:{"text-align":"left"}},Qp=t("code",null,"栈",-1),Sp=t("code",null,"树",-1),Dp=t("code",null,"深度优先搜索",-1),Zp=t("code",null,"4+",-1),Ap={style:{"text-align":"left"}},Fp=t("td",{style:{"text-align":"center"}},"1261",-1),Jp={style:{"text-align":"left"}},Xp={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},$p=t("td",{style:{"text-align":"center"}},null,-1),t0={style:{"text-align":"left"}},e0=t("code",null,"树",-1),o0=t("code",null,"深度优先搜索",-1),l0=t("code",null,"广度优先搜索",-1),n0=t("code",null,"3+",-1),s0={style:{"text-align":"left"}},d0=t("td",{style:{"text-align":"center"}},"1302",-1),_0={style:{"text-align":"left"}},c0={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},i0=t("td",{style:{"text-align":"center"}},null,-1),r0={style:{"text-align":"left"}},a0=t("code",null,"树",-1),h0=t("code",null,"深度优先搜索",-1),u0=t("code",null,"广度优先搜索",-1),f0=t("code",null,"1+",-1),g0={style:{"text-align":"left"}},m0=t("td",{style:{"text-align":"center"}},"1305",-1),y0={style:{"text-align":"left"}},b0={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},x0=t("td",{style:{"text-align":"center"}},null,-1),p0={style:{"text-align":"left"}},k0=t("code",null,"树",-1),M0=t("code",null,"深度优先搜索",-1),j0=t("code",null,"二叉搜索树",-1),v0=t("code",null,"2+",-1),I0={style:{"text-align":"left"}},E0=t("td",{style:{"text-align":"center"}},"1315",-1),w0={style:{"text-align":"left"}},z0={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},O0=t("td",{style:{"text-align":"center"}},null,-1),q0={style:{"text-align":"left"}},H0=t("code",null,"树",-1),L0=t("code",null,"深度优先搜索",-1),C0=t("code",null,"广度优先搜索",-1),N0=t("code",null,"1+",-1),P0={style:{"text-align":"left"}},B0=t("td",{style:{"text-align":"center"}},"1325",-1),K0={style:{"text-align":"left"}},V0={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},T0=t("td",{style:{"text-align":"center"}},null,-1),U0={style:{"text-align":"left"}},R0=t("code",null,"树",-1),W0=t("code",null,"深度优先搜索",-1),G0=t("code",null,"二叉树",-1),Y0={style:{"text-align":"left"}},Q0=t("td",{style:{"text-align":"center"}},"1339",-1),S0={style:{"text-align":"left"}},D0={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},Z0=t("td",{style:{"text-align":"center"}},null,-1),A0={style:{"text-align":"left"}},F0=t("code",null,"树",-1),J0=t("code",null,"深度优先搜索",-1),X0=t("code",null,"二叉树",-1),$0={style:{"text-align":"left"}},t6=t("td",{style:{"text-align":"center"}},"1361",-1),e6={style:{"text-align":"left"}},o6={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},l6=t("td",{style:{"text-align":"center"}},null,-1),n6={style:{"text-align":"left"}},s6=t("code",null,"树",-1),d6=t("code",null,"深度优先搜索",-1),_6=t("code",null,"广度优先搜索",-1),c6=t("code",null,"3+",-1),i6={style:{"text-align":"left"}},r6=t("td",{style:{"text-align":"center"}},"1367",-1),a6={style:{"text-align":"left"}},h6={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},u6=t("td",{style:{"text-align":"center"}},null,-1),f6={style:{"text-align":"left"}},g6=t("code",null,"树",-1),m6=t("code",null,"深度优先搜索",-1),y6=t("code",null,"链表",-1),b6=t("code",null,"1+",-1),x6={style:{"text-align":"left"}},p6=t("td",{style:{"text-align":"center"}},"1372",-1),k6={style:{"text-align":"left"}},M6={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},j6=t("td",{style:{"text-align":"center"}},null,-1),v6={style:{"text-align":"left"}},I6=t("code",null,"树",-1),E6=t("code",null,"深度优先搜索",-1),w6=t("code",null,"动态规划",-1),z6=t("code",null,"1+",-1),O6={style:{"text-align":"left"}},q6=t("td",{style:{"text-align":"center"}},"1373",-1),H6={style:{"text-align":"left"}},L6={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},C6=t("td",{style:{"text-align":"center"}},null,-1),N6={style:{"text-align":"left"}},P6=t("code",null,"树",-1),B6=t("code",null,"深度优先搜索",-1),K6=t("code",null,"二叉搜索树",-1),V6=t("code",null,"2+",-1),T6={style:{"text-align":"left"}},U6=t("td",{style:{"text-align":"center"}},"1379",-1),R6={style:{"text-align":"left"}},W6={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},G6=t("td",{style:{"text-align":"center"}},null,-1),Y6={style:{"text-align":"left"}},Q6=t("code",null,"树",-1),S6=t("code",null,"深度优先搜索",-1),D6=t("code",null,"广度优先搜索",-1),Z6=t("code",null,"1+",-1),A6={style:{"text-align":"left"}},F6=t("td",{style:{"text-align":"center"}},"1382",-1),J6={style:{"text-align":"left"}},X6={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},$6=t("td",{style:{"text-align":"center"}},null,-1),t8={style:{"text-align":"left"}},e8=t("code",null,"贪心",-1),o8=t("code",null,"树",-1),l8=t("code",null,"深度优先搜索",-1),n8=t("code",null,"3+",-1),s8={style:{"text-align":"left"}},d8=t("td",{style:{"text-align":"center"}},"1430",-1),_8={style:{"text-align":"left"}},c8={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},i8=t("td",{style:{"text-align":"center"}},null,-1),r8={style:{"text-align":"left"}},a8=t("code",null,"树",-1),h8=t("code",null,"深度优先搜索",-1),u8=t("code",null,"广度优先搜索",-1),f8=t("code",null,"1+",-1),g8={style:{"text-align":"left"}},m8=t("td",{style:{"text-align":"center"}},"1448",-1),y8={style:{"text-align":"left"}},b8={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},x8=t("td",{style:{"text-align":"center"}},null,-1),p8={style:{"text-align":"left"}},k8=t("code",null,"树",-1),M8=t("code",null,"深度优先搜索",-1),j8=t("code",null,"广度优先搜索",-1),v8=t("code",null,"1+",-1),I8={style:{"text-align":"left"}},E8=t("td",{style:{"text-align":"center"}},"1457",-1),w8={style:{"text-align":"left"}},z8={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},O8=t("td",{style:{"text-align":"center"}},null,-1),q8={style:{"text-align":"left"}},H8=t("code",null,"位运算",-1),L8=t("code",null,"树",-1),C8=t("code",null,"深度优先搜索",-1),N8=t("code",null,"2+",-1),P8={style:{"text-align":"left"}},B8=t("td",{style:{"text-align":"center"}},"1469",-1),K8={style:{"text-align":"left"}},V8={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},T8=t("td",{style:{"text-align":"center"}},null,-1),U8={style:{"text-align":"left"}},R8=t("code",null,"树",-1),W8=t("code",null,"深度优先搜索",-1),G8=t("code",null,"广度优先搜索",-1),Y8=t("code",null,"1+",-1),Q8={style:{"text-align":"left"}},S8=t("td",{style:{"text-align":"center"}},"1485",-1),D8={style:{"text-align":"left"}},Z8={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},A8=t("td",{style:{"text-align":"center"}},null,-1),F8={style:{"text-align":"left"}},J8=t("code",null,"树",-1),X8=t("code",null,"深度优先搜索",-1),$8=t("code",null,"广度优先搜索",-1),t3=t("code",null,"2+",-1),e3={style:{"text-align":"left"}},o3=t("td",{style:{"text-align":"center"}},"1530",-1),l3={style:{"text-align":"left"}},n3={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},s3=t("td",{style:{"text-align":"center"}},null,-1),d3={style:{"text-align":"left"}},_3=t("code",null,"树",-1),c3=t("code",null,"深度优先搜索",-1),i3=t("code",null,"二叉树",-1),r3={style:{"text-align":"left"}},a3=t("td",{style:{"text-align":"center"}},"1569",-1),h3={style:{"text-align":"left"}},u3={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},f3=t("td",{style:{"text-align":"center"}},null,-1),g3={style:{"text-align":"left"}},m3=t("code",null,"树",-1),y3=t("code",null,"并查集",-1),b3=t("code",null,"二叉搜索树",-1),x3=t("code",null,"7+",-1),p3={style:{"text-align":"left"}},k3=t("td",{style:{"text-align":"center"}},"1586",-1),M3={style:{"text-align":"left"}},j3={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},v3=t("td",{style:{"text-align":"center"}},null,-1),I3={style:{"text-align":"left"}},E3=t("code",null,"栈",-1),w3=t("code",null,"树",-1),z3=t("code",null,"设计",-1),O3=t("code",null,"3+",-1),q3={style:{"text-align":"left"}},H3=t("td",{style:{"text-align":"center"}},"1597",-1),L3={style:{"text-align":"left"}},C3={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},N3=t("td",{style:{"text-align":"center"}},null,-1),P3={style:{"text-align":"left"}},B3=t("code",null,"栈",-1),K3=t("code",null,"树",-1),V3=t("code",null,"字符串",-1),T3=t("code",null,"1+",-1),U3={style:{"text-align":"left"}},R3=t("td",{style:{"text-align":"center"}},"1602",-1),W3={style:{"text-align":"left"}},G3={href:"https://leetcode.com/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Y3=t("td",{style:{"text-align":"center"}},null,-1),Q3={style:{"text-align":"left"}},S3=t("code",null,"树",-1),D3=t("code",null,"广度优先搜索",-1),Z3=t("code",null,"二叉树",-1),A3={style:{"text-align":"left"}},F3=t("td",{style:{"text-align":"center"}},"1609",-1),J3={style:{"text-align":"left"}},X3={href:"https://leetcode.com/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},$3=t("td",{style:{"text-align":"center"}},null,-1),t5={style:{"text-align":"left"}},e5=t("code",null,"树",-1),o5=t("code",null,"广度优先搜索",-1),l5=t("code",null,"二叉树",-1),n5={style:{"text-align":"left"}},s5=t("td",{style:{"text-align":"center"}},"1612",-1),d5={style:{"text-align":"left"}},_5={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},c5=t("td",{style:{"text-align":"center"}},null,-1),i5={style:{"text-align":"left"}},r5=t("code",null,"树",-1),a5=t("code",null,"深度优先搜索",-1),h5=t("code",null,"哈希表",-1),u5=t("code",null,"2+",-1),f5={style:{"text-align":"left"}},g5=t("td",{style:{"text-align":"center"}},"1628",-1),m5={style:{"text-align":"left"}},y5={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},b5=t("td",{style:{"text-align":"center"}},null,-1),x5={style:{"text-align":"left"}},p5=t("code",null,"栈",-1),k5=t("code",null,"树",-1),M5=t("code",null,"设计",-1),j5=t("code",null,"3+",-1),v5={style:{"text-align":"left"}},I5=t("td",{style:{"text-align":"center"}},"1644",-1),E5={style:{"text-align":"left"}},w5={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},z5=t("td",{style:{"text-align":"center"}},null,-1),O5={style:{"text-align":"left"}},q5=t("code",null,"树",-1),H5=t("code",null,"深度优先搜索",-1),L5=t("code",null,"二叉树",-1),C5={style:{"text-align":"left"}},N5=t("td",{style:{"text-align":"center"}},"1650",-1),P5={style:{"text-align":"left"}},B5={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii",target:"_blank",rel:"noopener noreferrer"},K5=t("td",{style:{"text-align":"center"}},null,-1),V5={style:{"text-align":"left"}},T5=t("code",null,"树",-1),U5=t("code",null,"哈希表",-1),R5=t("code",null,"双指针",-1),W5=t("code",null,"1+",-1),G5={style:{"text-align":"left"}},Y5=t("td",{style:{"text-align":"center"}},"1660",-1),Q5={style:{"text-align":"left"}},S5={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},D5=t("td",{style:{"text-align":"center"}},null,-1),Z5={style:{"text-align":"left"}},A5=t("code",null,"树",-1),F5=t("code",null,"深度优先搜索",-1),J5=t("code",null,"广度优先搜索",-1),X5=t("code",null,"2+",-1),$5={style:{"text-align":"left"}},t4=t("td",{style:{"text-align":"center"}},"1666",-1),e4={style:{"text-align":"left"}},o4={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},l4=t("td",{style:{"text-align":"center"}},null,-1),n4={style:{"text-align":"left"}},s4=t("code",null,"树",-1),d4=t("code",null,"深度优先搜索",-1),_4=t("code",null,"二叉树",-1),c4={style:{"text-align":"left"}},i4=t("td",{style:{"text-align":"center"}},"1676",-1),r4={style:{"text-align":"left"}},a4={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},h4=t("td",{style:{"text-align":"center"}},null,-1),u4={style:{"text-align":"left"}},f4=t("code",null,"树",-1),g4=t("code",null,"深度优先搜索",-1),m4=t("code",null,"哈希表",-1),y4=t("code",null,"1+",-1),b4={style:{"text-align":"left"}},x4=t("td",{style:{"text-align":"center"}},"1740",-1),p4={style:{"text-align":"left"}},k4={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},M4=t("td",{style:{"text-align":"center"}},null,-1),j4={style:{"text-align":"left"}},v4=t("code",null,"树",-1),I4=t("code",null,"深度优先搜索",-1),E4=t("code",null,"广度优先搜索",-1),w4=t("code",null,"2+",-1),z4={style:{"text-align":"left"}},O4=t("td",{style:{"text-align":"center"}},"1902",-1),q4={style:{"text-align":"left"}},H4={href:"https://leetcode.com/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},L4=t("td",{style:{"text-align":"center"}},null,-1),C4={style:{"text-align":"left"}},N4=t("code",null,"树",-1),P4=t("code",null,"二叉搜索树",-1),B4=t("code",null,"数组",-1),K4=t("code",null,"2+",-1),V4={style:{"text-align":"left"}},T4=t("td",{style:{"text-align":"center"}},"1932",-1),U4={style:{"text-align":"left"}},R4={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},W4=t("td",{style:{"text-align":"center"}},null,-1),G4={style:{"text-align":"left"}},Y4=t("code",null,"树",-1),Q4=t("code",null,"深度优先搜索",-1),S4=t("code",null,"哈希表",-1),D4=t("code",null,"2+",-1),Z4={style:{"text-align":"left"}},A4=t("td",{style:{"text-align":"center"}},"1973",-1),F4={style:{"text-align":"left"}},J4={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},X4=t("td",{style:{"text-align":"center"}},null,-1),$4={style:{"text-align":"left"}},t7=t("code",null,"树",-1),e7=t("code",null,"深度优先搜索",-1),o7=t("code",null,"二叉树",-1),l7={style:{"text-align":"left"}},n7=t("td",{style:{"text-align":"center"}},"2005",-1),s7={style:{"text-align":"left"}},d7={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},_7=t("td",{style:{"text-align":"center"}},null,-1),c7={style:{"text-align":"left"}},i7=t("code",null,"树",-1),r7=t("code",null,"数学",-1),a7=t("code",null,"动态规划",-1),h7=t("code",null,"2+",-1),u7={style:{"text-align":"left"}},f7=t("td",{style:{"text-align":"center"}},"2049",-1),g7={style:{"text-align":"left"}},m7={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},y7=t("td",{style:{"text-align":"center"}},null,-1),b7={style:{"text-align":"left"}},x7=t("code",null,"树",-1),p7=t("code",null,"深度优先搜索",-1),k7=t("code",null,"数组",-1),M7=t("code",null,"1+",-1),j7={style:{"text-align":"left"}},v7=t("td",{style:{"text-align":"center"}},"2096",-1),I7={style:{"text-align":"left"}},E7={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},w7=t("td",{style:{"text-align":"center"}},null,-1),z7={style:{"text-align":"left"}},O7=t("code",null,"树",-1),q7=t("code",null,"深度优先搜索",-1),H7=t("code",null,"字符串",-1),L7=t("code",null,"1+",-1),C7={style:{"text-align":"left"}},N7=t("td",{style:{"text-align":"center"}},"2196",-1),P7={style:{"text-align":"left"}},B7={href:"https://leetcode.com/problems/create-binary-tree-from-descriptions",target:"_blank",rel:"noopener noreferrer"},K7={style:{"text-align":"center"}},V7={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/2196",target:"_blank",rel:"noopener noreferrer"},T7={style:{"text-align":"left"}},U7=t("code",null,"树",-1),R7=t("code",null,"数组",-1),W7=t("code",null,"哈希表",-1),G7=t("code",null,"1+",-1),Y7={style:{"text-align":"left"}},Q7=t("td",{style:{"text-align":"center"}},"2236",-1),S7={style:{"text-align":"left"}},D7={href:"https://leetcode.com/problems/root-equals-sum-of-children",target:"_blank",rel:"noopener noreferrer"},Z7=t("td",{style:{"text-align":"center"}},null,-1),A7={style:{"text-align":"left"}},F7=t("code",null,"树",-1),J7=t("code",null,"二叉树",-1),X7={style:{"text-align":"left"}},$7=t("td",{style:{"text-align":"center"}},"2265",-1),t9={style:{"text-align":"left"}},e9={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},o9=t("td",{style:{"text-align":"center"}},null,-1),l9={style:{"text-align":"left"}},n9=t("code",null,"树",-1),s9=t("code",null,"深度优先搜索",-1),d9=t("code",null,"二叉树",-1),_9={style:{"text-align":"left"}},c9=t("td",{style:{"text-align":"center"}},"2313",-1),i9={style:{"text-align":"left"}},r9={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},a9=t("td",{style:{"text-align":"center"}},null,-1),h9={style:{"text-align":"left"}},u9=t("code",null,"树",-1),f9=t("code",null,"深度优先搜索",-1),g9=t("code",null,"动态规划",-1),m9=t("code",null,"1+",-1),y9={style:{"text-align":"left"}},b9=t("td",{style:{"text-align":"center"}},"2331",-1),x9={style:{"text-align":"left"}},p9={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},k9=t("td",{style:{"text-align":"center"}},null,-1),M9={style:{"text-align":"left"}},j9=t("code",null,"树",-1),v9=t("code",null,"深度优先搜索",-1),I9=t("code",null,"二叉树",-1),E9={style:{"text-align":"left"}},w9=t("td",{style:{"text-align":"center"}},"2385",-1),z9={style:{"text-align":"left"}},O9={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},q9=t("td",{style:{"text-align":"center"}},null,-1),H9={style:{"text-align":"left"}},L9=t("code",null,"树",-1),C9=t("code",null,"深度优先搜索",-1),N9=t("code",null,"广度优先搜索",-1),P9=t("code",null,"2+",-1),B9={style:{"text-align":"left"}},K9=t("td",{style:{"text-align":"center"}},"2415",-1),V9={style:{"text-align":"left"}},T9={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},U9=t("td",{style:{"text-align":"center"}},null,-1),R9={style:{"text-align":"left"}},W9=t("code",null,"树",-1),G9=t("code",null,"深度优先搜索",-1),Y9=t("code",null,"广度优先搜索",-1),Q9=t("code",null,"1+",-1),S9={style:{"text-align":"left"}},D9=t("td",{style:{"text-align":"center"}},"2445",-1),Z9={style:{"text-align":"left"}},A9={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},F9=t("td",{style:{"text-align":"center"}},null,-1),J9={style:{"text-align":"left"}},X9=t("code",null,"树",-1),$9=t("code",null,"深度优先搜索",-1),tk=t("code",null,"广度优先搜索",-1),ek=t("code",null,"1+",-1),ok={style:{"text-align":"left"}},lk=t("td",{style:{"text-align":"center"}},"2458",-1),nk={style:{"text-align":"left"}},sk={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},dk=t("td",{style:{"text-align":"center"}},null,-1),_k={style:{"text-align":"left"}},ck=t("code",null,"树",-1),ik=t("code",null,"深度优先搜索",-1),rk=t("code",null,"广度优先搜索",-1),ak=t("code",null,"2+",-1),hk={style:{"text-align":"left"}},uk=t("td",{style:{"text-align":"center"}},"2471",-1),fk={style:{"text-align":"left"}},gk={href:"https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},mk=t("td",{style:{"text-align":"center"}},null,-1),yk={style:{"text-align":"left"}},bk=t("code",null,"树",-1),xk=t("code",null,"广度优先搜索",-1),pk=t("code",null,"二叉树",-1),kk={style:{"text-align":"left"}},Mk=t("td",{style:{"text-align":"center"}},"2476",-1),jk={style:{"text-align":"left"}},vk={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ik=t("td",{style:{"text-align":"center"}},null,-1),Ek={style:{"text-align":"left"}},wk=t("code",null,"树",-1),zk=t("code",null,"深度优先搜索",-1),Ok=t("code",null,"二叉搜索树",-1),qk=t("code",null,"3+",-1),Hk={style:{"text-align":"left"}},Lk=t("td",{style:{"text-align":"center"}},"2509",-1),Ck={style:{"text-align":"left"}},Nk={href:"https://leetcode.com/problems/cycle-length-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Pk=t("td",{style:{"text-align":"center"}},null,-1),Bk={style:{"text-align":"left"}},Kk=t("code",null,"树",-1),Vk=t("code",null,"数组",-1),Tk=t("code",null,"二叉树",-1),Uk={style:{"text-align":"left"}},Rk=t("td",{style:{"text-align":"center"}},"2583",-1),Wk={style:{"text-align":"left"}},Gk={href:"https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yk=t("td",{style:{"text-align":"center"}},null,-1),Qk={style:{"text-align":"left"}},Sk=t("code",null,"树",-1),Dk=t("code",null,"广度优先搜索",-1),Zk=t("code",null,"二叉树",-1),Ak=t("code",null,"1+",-1),Fk={style:{"text-align":"left"}},Jk=t("td",{style:{"text-align":"center"}},"2641",-1),Xk={style:{"text-align":"left"}},$k={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},tM=t("td",{style:{"text-align":"center"}},null,-1),eM={style:{"text-align":"left"}},oM=t("code",null,"树",-1),lM=t("code",null,"深度优先搜索",-1),nM=t("code",null,"广度优先搜索",-1),sM=t("code",null,"2+",-1),dM={style:{"text-align":"left"}},_M=t("td",{style:{"text-align":"center"}},"2673",-1),cM={style:{"text-align":"left"}},iM={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},rM=t("td",{style:{"text-align":"center"}},null,-1),aM={style:{"text-align":"left"}},hM=t("code",null,"贪心",-1),uM=t("code",null,"树",-1),fM=t("code",null,"数组",-1),gM=t("code",null,"2+",-1),mM={style:{"text-align":"left"}},yM=t("td",{style:{"text-align":"center"}},"2689",-1),bM={style:{"text-align":"left"}},xM={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},pM=t("td",{style:{"text-align":"center"}},null,-1),kM={style:{"text-align":"left"}},MM=t("code",null,"树",-1),jM=t("code",null,"深度优先搜索",-1),vM=t("code",null,"二叉树",-1),IM={style:{"text-align":"left"}},EM=t("td",{style:{"text-align":"center"}},"2764",-1),wM={style:{"text-align":"left"}},zM={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},OM=t("td",{style:{"text-align":"center"}},null,-1),qM={style:{"text-align":"left"}},HM=t("code",null,"栈",-1),LM=t("code",null,"树",-1),CM=t("code",null,"深度优先搜索",-1),NM=t("code",null,"1+",-1),PM={style:{"text-align":"left"}},BM=t("td",{style:{"text-align":"center"}},"2773",-1),KM={style:{"text-align":"left"}},VM={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},TM=t("td",{style:{"text-align":"center"}},null,-1),UM={style:{"text-align":"left"}},RM=t("code",null,"树",-1),WM=t("code",null,"深度优先搜索",-1),GM=t("code",null,"广度优先搜索",-1),YM=t("code",null,"1+",-1),QM={style:{"text-align":"left"}},SM=t("td",{style:{"text-align":"center"}},"2792",-1),DM={style:{"text-align":"left"}},ZM={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},AM=t("td",{style:{"text-align":"center"}},null,-1),FM={style:{"text-align":"left"}},JM=t("code",null,"树",-1),XM=t("code",null,"深度优先搜索",-1),$M=t("code",null,"分治",-1),tj=t("code",null,"1+",-1),ej={style:{"text-align":"left"}},oj=t("td",{style:{"text-align":"center"}},"3157",-1),lj={style:{"text-align":"left"}},nj={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},sj=t("td",{style:{"text-align":"center"}},null,-1),dj={style:{"text-align":"left"}},_j=t("code",null,"树",-1),cj=t("code",null,"深度优先搜索",-1),ij=t("code",null,"广度优先搜索",-1),rj=t("code",null,"1+",-1),aj={style:{"text-align":"left"}},hj=t("td",{style:{"text-align":"center"}},"LCP 10",-1),uj={style:{"text-align":"left"}},fj={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},gj=t("td",{style:{"text-align":"center"}},null,-1),mj={style:{"text-align":"left"}},yj=t("code",null,"树",-1),bj=t("code",null,"深度优先搜索",-1),xj=t("code",null,"动态规划",-1),pj=t("code",null,"1+",-1),kj={style:{"text-align":"left"}},Mj=t("td",{style:{"text-align":"center"}},"LCP 26",-1),jj={style:{"text-align":"left"}},vj={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},Ij=t("td",{style:{"text-align":"center"}},null,-1),Ej={style:{"text-align":"left"}},wj=t("code",null,"树",-1),zj=t("code",null,"动态规划",-1),Oj=t("code",null,"二叉树",-1),qj={style:{"text-align":"left"}},Hj=t("td",{style:{"text-align":"center"}},"LCP 34",-1),Lj={style:{"text-align":"left"}},Cj={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},Nj=t("td",{style:{"text-align":"center"}},null,-1),Pj={style:{"text-align":"left"}},Bj=t("code",null,"树",-1),Kj=t("code",null,"动态规划",-1),Vj=t("code",null,"二叉树",-1),Tj={style:{"text-align":"left"}},Uj=t("td",{style:{"text-align":"center"}},"LCP 44",-1),Rj={style:{"text-align":"left"}},Wj={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},Gj=t("td",{style:{"text-align":"center"}},null,-1),Yj={style:{"text-align":"left"}},Qj=t("code",null,"树",-1),Sj=t("code",null,"深度优先搜索",-1),Dj=t("code",null,"广度优先搜索",-1),Zj=t("code",null,"2+",-1),Aj={style:{"text-align":"left"}},Fj=t("td",{style:{"text-align":"center"}},"LCP 52",-1),Jj={style:{"text-align":"left"}},Xj={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},$j=t("td",{style:{"text-align":"center"}},null,-1),tv={style:{"text-align":"left"}},ev=t("code",null,"树",-1),ov=t("code",null,"线段树",-1),lv=t("code",null,"二叉搜索树",-1),nv=t("code",null,"4+",-1),sv={style:{"text-align":"left"}},dv=t("td",{style:{"text-align":"center"}},"LCP 60",-1),_v={style:{"text-align":"left"}},cv={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},iv=t("td",{style:{"text-align":"center"}},null,-1),rv={style:{"text-align":"left"}},av=t("code",null,"树",-1),hv=t("code",null,"动态规划",-1),uv=t("code",null,"二叉树",-1),fv={style:{"text-align":"left"}},gv=t("td",{style:{"text-align":"center"}},"LCP 64",-1),mv={style:{"text-align":"left"}},yv={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},bv=t("td",{style:{"text-align":"center"}},null,-1),xv={style:{"text-align":"left"}},pv=t("code",null,"树",-1),kv=t("code",null,"深度优先搜索",-1),Mv=t("code",null,"动态规划",-1),jv=t("code",null,"1+",-1),vv={style:{"text-align":"left"}},Iv=t("td",{style:{"text-align":"center"}},"LCP 67",-1),Ev={style:{"text-align":"left"}},wv={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},zv=t("td",{style:{"text-align":"center"}},null,-1),Ov={style:{"text-align":"left"}},qv=t("code",null,"树",-1),Hv=t("code",null,"深度优先搜索",-1),Lv=t("code",null,"广度优先搜索",-1),Cv=t("code",null,"1+",-1),Nv={style:{"text-align":"left"}},Pv=t("td",{style:{"text-align":"center"}},"剑指 Offer 07",-1),Bv={style:{"text-align":"left"}},Kv={href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},Vv={style:{"text-align":"center"}},Tv={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_07_1",target:"_blank",rel:"noopener noreferrer"},Uv={style:{"text-align":"left"}},Rv=t("code",null,"树",-1),Wv=t("code",null,"数组",-1),Gv=t("code",null,"哈希表",-1),Yv=t("code",null,"2+",-1),Qv={style:{"text-align":"left"}},Sv=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),Dv={style:{"text-align":"left"}},Zv={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},Av={style:{"text-align":"center"}},Fv={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_26_1",target:"_blank",rel:"noopener noreferrer"},Jv={style:{"text-align":"left"}},Xv=t("code",null,"树",-1),$v=t("code",null,"深度优先搜索",-1),tI=t("code",null,"二叉树",-1),eI={style:{"text-align":"left"}},oI=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),lI={style:{"text-align":"left"}},nI={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},sI={style:{"text-align":"center"}},dI={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_27_1",target:"_blank",rel:"noopener noreferrer"},_I={style:{"text-align":"left"}},cI=t("code",null,"树",-1),iI=t("code",null,"深度优先搜索",-1),rI=t("code",null,"广度优先搜索",-1),aI=t("code",null,"1+",-1),hI={style:{"text-align":"left"}},uI=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),fI={style:{"text-align":"left"}},gI={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},mI={style:{"text-align":"center"}},yI={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_28_1",target:"_blank",rel:"noopener noreferrer"},bI={style:{"text-align":"left"}},xI=t("code",null,"树",-1),pI=t("code",null,"深度优先搜索",-1),kI=t("code",null,"广度优先搜索",-1),MI=t("code",null,"1+",-1),jI={style:{"text-align":"left"}},vI=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - I",-1),II={style:{"text-align":"left"}},EI={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},wI={style:{"text-align":"center"}},zI={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_32_1",target:"_blank",rel:"noopener noreferrer"},OI={style:{"text-align":"left"}},qI=t("code",null,"树",-1),HI=t("code",null,"广度优先搜索",-1),LI=t("code",null,"二叉树",-1),CI={style:{"text-align":"left"}},NI=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - II",-1),PI={style:{"text-align":"left"}},BI={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof",target:"_blank",rel:"noopener noreferrer"},KI={style:{"text-align":"center"}},VI={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_32_2",target:"_blank",rel:"noopener noreferrer"},TI={style:{"text-align":"left"}},UI=t("code",null,"树",-1),RI=t("code",null,"广度优先搜索",-1),WI=t("code",null,"二叉树",-1),GI={style:{"text-align":"left"}},YI=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - III",-1),QI={style:{"text-align":"left"}},SI={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof",target:"_blank",rel:"noopener noreferrer"},DI={style:{"text-align":"center"}},ZI={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_32_3",target:"_blank",rel:"noopener noreferrer"},AI={style:{"text-align":"left"}},FI=t("code",null,"树",-1),JI=t("code",null,"广度优先搜索",-1),XI=t("code",null,"二叉树",-1),$I={style:{"text-align":"left"}},tE=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),eE={style:{"text-align":"left"}},oE={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},lE={style:{"text-align":"center"}},nE={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_33_1",target:"_blank",rel:"noopener noreferrer"},sE={style:{"text-align":"left"}},dE=t("code",null,"栈",-1),_E=t("code",null,"树",-1),cE=t("code",null,"二叉搜索树",-1),iE=t("code",null,"4+",-1),rE={style:{"text-align":"left"}},aE=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),hE={style:{"text-align":"left"}},uE={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},fE={style:{"text-align":"center"}},gE={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_34_1",target:"_blank",rel:"noopener noreferrer"},mE={style:{"text-align":"left"}},yE=t("code",null,"树",-1),bE=t("code",null,"深度优先搜索",-1),xE=t("code",null,"回溯",-1),pE=t("code",null,"1+",-1),kE={style:{"text-align":"left"}},ME=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),jE={style:{"text-align":"left"}},vE={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},IE={style:{"text-align":"center"}},EE={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_36_1",target:"_blank",rel:"noopener noreferrer"},wE={style:{"text-align":"left"}},zE=t("code",null,"栈",-1),OE=t("code",null,"树",-1),qE=t("code",null,"深度优先搜索",-1),HE=t("code",null,"4+",-1),LE={style:{"text-align":"left"}},CE=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),NE={style:{"text-align":"left"}},PE={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},BE={style:{"text-align":"center"}},KE={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_37_1",target:"_blank",rel:"noopener noreferrer"},VE={style:{"text-align":"left"}},TE=t("code",null,"树",-1),UE=t("code",null,"深度优先搜索",-1),RE=t("code",null,"广度优先搜索",-1),WE=t("code",null,"3+",-1),GE={style:{"text-align":"left"}},YE=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),QE={style:{"text-align":"left"}},SE={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},DE={style:{"text-align":"center"}},ZE={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_54_1",target:"_blank",rel:"noopener noreferrer"},AE={style:{"text-align":"left"}},FE=t("code",null,"树",-1),JE=t("code",null,"深度优先搜索",-1),XE=t("code",null,"二叉搜索树",-1),$E=t("code",null,"1+",-1),tw={style:{"text-align":"left"}},ew=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - I",-1),ow={style:{"text-align":"left"}},lw={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},nw={style:{"text-align":"center"}},sw={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_55_1",target:"_blank",rel:"noopener noreferrer"},dw={style:{"text-align":"left"}},_w=t("code",null,"树",-1),cw=t("code",null,"深度优先搜索",-1),iw=t("code",null,"广度优先搜索",-1),rw=t("code",null,"1+",-1),aw={style:{"text-align":"left"}},hw=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - II",-1),uw={style:{"text-align":"left"}},fw={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},gw=t("td",{style:{"text-align":"center"}},null,-1),mw={style:{"text-align":"left"}},yw=t("code",null,"树",-1),bw=t("code",null,"深度优先搜索",-1),xw=t("code",null,"二叉树",-1),pw={style:{"text-align":"left"}},kw=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - I",-1),Mw={style:{"text-align":"left"}},jw={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},vw=t("td",{style:{"text-align":"center"}},null,-1),Iw={style:{"text-align":"left"}},Ew=t("code",null,"树",-1),ww=t("code",null,"深度优先搜索",-1),zw=t("code",null,"二叉搜索树",-1),Ow=t("code",null,"1+",-1),qw={style:{"text-align":"left"}},Hw=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - II",-1),Lw={style:{"text-align":"left"}},Cw={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},Nw=t("td",{style:{"text-align":"center"}},null,-1),Pw={style:{"text-align":"left"}},Bw=t("code",null,"树",-1),Kw=t("code",null,"深度优先搜索",-1),Vw=t("code",null,"二叉树",-1),Tw={style:{"text-align":"left"}},Uw=t("td",{style:{"text-align":"center"}},"剑指 Offer II 43",-1),Rw={style:{"text-align":"left"}},Ww={href:"https://leetcode.cn/problems/NaqhDT",target:"_blank",rel:"noopener noreferrer"},Gw=t("td",{style:{"text-align":"center"}},null,-1),Yw={style:{"text-align":"left"}},Qw=t("code",null,"树",-1),Sw=t("code",null,"广度优先搜索",-1),Dw=t("code",null,"设计",-1),Zw=t("code",null,"1+",-1),Aw={style:{"text-align":"left"}},Fw=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),Jw={style:{"text-align":"left"}},Xw={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},$w=t("td",{style:{"text-align":"center"}},null,-1),tz={style:{"text-align":"left"}},ez=t("code",null,"树",-1),oz=t("code",null,"深度优先搜索",-1),lz=t("code",null,"广度优先搜索",-1),nz=t("code",null,"1+",-1),sz={style:{"text-align":"left"}},dz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),_z={style:{"text-align":"left"}},cz={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},iz=t("td",{style:{"text-align":"center"}},null,-1),rz={style:{"text-align":"left"}},az=t("code",null,"树",-1),hz=t("code",null,"深度优先搜索",-1),uz=t("code",null,"广度优先搜索",-1),fz=t("code",null,"1+",-1),gz={style:{"text-align":"left"}},mz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),yz={style:{"text-align":"left"}},bz={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},xz=t("td",{style:{"text-align":"center"}},null,-1),pz={style:{"text-align":"left"}},kz=t("code",null,"树",-1),Mz=t("code",null,"深度优先搜索",-1),jz=t("code",null,"广度优先搜索",-1),vz=t("code",null,"1+",-1),Iz={style:{"text-align":"left"}},Ez=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),wz={style:{"text-align":"left"}},zz={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},Oz=t("td",{style:{"text-align":"center"}},null,-1),qz={style:{"text-align":"left"}},Hz=t("code",null,"树",-1),Lz=t("code",null,"深度优先搜索",-1),Cz=t("code",null,"二叉树",-1),Nz={style:{"text-align":"left"}},Pz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),Bz={style:{"text-align":"left"}},Kz={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},Vz=t("td",{style:{"text-align":"center"}},null,-1),Tz={style:{"text-align":"left"}},Uz=t("code",null,"树",-1),Rz=t("code",null,"深度优先搜索",-1),Wz=t("code",null,"广度优先搜索",-1),Gz=t("code",null,"3+",-1),Yz={style:{"text-align":"left"}},Qz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),Sz={style:{"text-align":"left"}},Dz={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},Zz=t("td",{style:{"text-align":"center"}},null,-1),Az={style:{"text-align":"left"}},Fz=t("code",null,"树",-1),Jz=t("code",null,"深度优先搜索",-1),Xz=t("code",null,"二叉树",-1),$z={style:{"text-align":"left"}},tO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),eO={style:{"text-align":"left"}},oO={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},lO=t("td",{style:{"text-align":"center"}},null,-1),nO={style:{"text-align":"left"}},sO=t("code",null,"树",-1),dO=t("code",null,"深度优先搜索",-1),_O=t("code",null,"二叉树",-1),cO={style:{"text-align":"left"}},iO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),rO={style:{"text-align":"left"}},aO={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},hO=t("td",{style:{"text-align":"center"}},null,-1),uO={style:{"text-align":"left"}},fO=t("code",null,"树",-1),gO=t("code",null,"深度优先搜索",-1),mO=t("code",null,"动态规划",-1),yO=t("code",null,"1+",-1),bO={style:{"text-align":"left"}},xO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),pO={style:{"text-align":"left"}},kO={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},MO=t("td",{style:{"text-align":"center"}},null,-1),jO={style:{"text-align":"left"}},vO=t("code",null,"栈",-1),IO=t("code",null,"树",-1),EO=t("code",null,"深度优先搜索",-1),wO=t("code",null,"2+",-1),zO={style:{"text-align":"left"}},OO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),qO={style:{"text-align":"left"}},HO={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},LO=t("td",{style:{"text-align":"center"}},null,-1),CO={style:{"text-align":"left"}},NO=t("code",null,"树",-1),PO=t("code",null,"深度优先搜索",-1),BO=t("code",null,"二叉搜索树",-1),KO=t("code",null,"1+",-1),VO={style:{"text-align":"left"}},TO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),UO={style:{"text-align":"left"}},RO={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},WO=t("td",{style:{"text-align":"center"}},null,-1),GO={style:{"text-align":"left"}},YO=t("code",null,"树",-1),QO=t("code",null,"深度优先搜索",-1),SO=t("code",null,"二叉搜索树",-1),DO=t("code",null,"1+",-1),ZO={style:{"text-align":"left"}},AO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),FO={style:{"text-align":"left"}},JO={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},XO=t("td",{style:{"text-align":"center"}},null,-1),$O={style:{"text-align":"left"}},tq=t("code",null,"栈",-1),eq=t("code",null,"树",-1),oq=t("code",null,"设计",-1),lq=t("code",null,"3+",-1),nq={style:{"text-align":"left"}},sq=t("td",{style:{"text-align":"center"}},"剑指 Offer II 59",-1),dq={style:{"text-align":"left"}},_q={href:"https://leetcode.cn/problems/jBjn9C",target:"_blank",rel:"noopener noreferrer"},cq=t("td",{style:{"text-align":"center"}},null,-1),iq={style:{"text-align":"left"}},rq=t("code",null,"树",-1),aq=t("code",null,"设计",-1),hq=t("code",null,"二叉搜索树",-1),uq=t("code",null,"3+",-1),fq={style:{"text-align":"left"}},gq=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),mq={style:{"text-align":"left"}},yq={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},bq=t("td",{style:{"text-align":"center"}},null,-1),xq={style:{"text-align":"left"}},pq=t("code",null,"树",-1),kq=t("code",null,"二叉搜索树",-1),Mq=t("code",null,"数组",-1),jq=t("code",null,"2+",-1),vq={style:{"text-align":"left"}},Iq=t("td",{style:{"text-align":"center"}},"面试题 04.03",-1),Eq={style:{"text-align":"left"}},wq={href:"https://leetcode.cn/problems/list-of-depth-lcci",target:"_blank",rel:"noopener noreferrer"},zq=t("td",{style:{"text-align":"center"}},null,-1),Oq={style:{"text-align":"left"}},qq=t("code",null,"树",-1),Hq=t("code",null,"广度优先搜索",-1),Lq=t("code",null,"链表",-1),Cq=t("code",null,"1+",-1),Nq={style:{"text-align":"left"}},Pq=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),Bq={style:{"text-align":"left"}},Kq={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},Vq=t("td",{style:{"text-align":"center"}},null,-1),Tq={style:{"text-align":"left"}},Uq=t("code",null,"树",-1),Rq=t("code",null,"深度优先搜索",-1),Wq=t("code",null,"二叉树",-1),Gq={style:{"text-align":"left"}},Yq=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),Qq={style:{"text-align":"left"}},Sq={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},Dq=t("td",{style:{"text-align":"center"}},null,-1),Zq={style:{"text-align":"left"}},Aq=t("code",null,"树",-1),Fq=t("code",null,"深度优先搜索",-1),Jq=t("code",null,"二叉搜索树",-1),Xq=t("code",null,"1+",-1),$q={style:{"text-align":"left"}},tH=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),eH={style:{"text-align":"left"}},oH={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},lH=t("td",{style:{"text-align":"center"}},null,-1),nH={style:{"text-align":"left"}},sH=t("code",null,"树",-1),dH=t("code",null,"深度优先搜索",-1),_H=t("code",null,"二叉搜索树",-1),cH=t("code",null,"1+",-1),iH={style:{"text-align":"left"}},rH=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),aH={style:{"text-align":"left"}},hH={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},uH=t("td",{style:{"text-align":"center"}},null,-1),fH={style:{"text-align":"left"}},gH=t("code",null,"树",-1),mH=t("code",null,"深度优先搜索",-1),yH=t("code",null,"二叉树",-1),bH={style:{"text-align":"left"}},xH=t("td",{style:{"text-align":"center"}},"面试题 04.09",-1),pH={style:{"text-align":"left"}},kH={href:"https://leetcode.cn/problems/bst-sequences-lcci",target:"_blank",rel:"noopener noreferrer"},MH=t("td",{style:{"text-align":"center"}},null,-1),jH={style:{"text-align":"left"}},vH=t("code",null,"树",-1),IH=t("code",null,"二叉搜索树",-1),EH=t("code",null,"回溯",-1),wH=t("code",null,"1+",-1),zH={style:{"text-align":"left"}},OH=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),qH={style:{"text-align":"left"}},HH={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},LH=t("td",{style:{"text-align":"center"}},null,-1),CH={style:{"text-align":"left"}},NH=t("code",null,"树",-1),PH=t("code",null,"深度优先搜索",-1),BH=t("code",null,"二叉树",-1),KH=t("code",null,"2+",-1),VH={style:{"text-align":"left"}},TH=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),UH={style:{"text-align":"left"}},RH={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},WH=t("td",{style:{"text-align":"center"}},null,-1),GH={style:{"text-align":"left"}},YH=t("code",null,"树",-1),QH=t("code",null,"深度优先搜索",-1),SH=t("code",null,"二叉树",-1),DH={style:{"text-align":"left"}},ZH=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),AH={style:{"text-align":"left"}},FH={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},JH=t("td",{style:{"text-align":"center"}},null,-1),XH={style:{"text-align":"left"}},$H=t("code",null,"栈",-1),tL=t("code",null,"树",-1),eL=t("code",null,"深度优先搜索",-1),oL=t("code",null,"3+",-1),lL={style:{"text-align":"left"}};function nL(sL,dL){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),r("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[O]),_:1}),o(),q,o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[Y]),_:1})]),Q,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Nt]),_:1})])]),Pt,a(" prettier-ignore "),t("table",null,[Bt,t("tbody",null,[t("tr",null,[Kt,t("td",Vt,[t("a",Tt,[o("二叉树的中序遍历"),e(s)])]),t("td",Ut,[t("a",Rt,[o("[✓]"),e(s)])]),t("td",Wt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Yt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Qt]),_:1}),o(),St]),t("td",Dt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Zt,t("td",At,[t("a",Ft,[o("不同的二叉搜索树 II"),e(s)])]),t("td",Jt,[t("a",Xt,[o("[✓]"),e(s)])]),t("td",$t,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[te]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[ee]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[oe]),_:1}),o(),le]),t("td",ne,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[se,t("td",de,[t("a",_e,[o("不同的二叉搜索树"),e(s)])]),t("td",ce,[t("a",ie,[o("[✓]"),e(s)])]),t("td",re,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[he]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[ue]),_:1}),o(),fe]),t("td",ge,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[me,t("td",ye,[t("a",be,[o("验证二叉搜索树"),e(s)])]),t("td",xe,[t("a",pe,[o("[✓]"),e(s)])]),t("td",ke,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Me]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[je]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[ve]),_:1}),o(),Ie]),t("td",Ee,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[we,t("td",ze,[t("a",Oe,[o("恢复二叉搜索树"),e(s)])]),t("td",qe,[t("a",He,[o("[✓]"),e(s)])]),t("td",Le,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ce]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ne]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Pe]),_:1}),o(),Be]),t("td",Ke,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ve,t("td",Te,[t("a",Ue,[o("相同的树"),e(s)])]),t("td",Re,[t("a",We,[o("[✓]"),e(s)])]),t("td",Ge,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ye]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Qe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Se]),_:1}),o(),De]),t("td",Ze,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ae,t("td",Fe,[t("a",Je,[o("对称二叉树"),e(s)])]),t("td",Xe,[t("a",$e,[o("[✓]"),e(s)])]),t("td",to,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[eo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[oo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[lo]),_:1}),o(),no]),t("td",so,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[_o,t("td",co,[t("a",io,[o("二叉树的层序遍历"),e(s)])]),t("td",ro,[t("a",ao,[o("[✓]"),e(s)])]),t("td",ho,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[uo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[fo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[go]),_:1})]),t("td",mo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yo,t("td",bo,[t("a",xo,[o("二叉树的锯齿形层序遍历"),e(s)])]),t("td",po,[t("a",ko,[o("[✓]"),e(s)])]),t("td",Mo,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[jo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[vo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Io]),_:1})]),t("td",Eo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[wo,t("td",zo,[t("a",Oo,[o("二叉树的最大深度"),e(s)])]),t("td",qo,[t("a",Ho,[o("[✓]"),e(s)])]),t("td",Lo,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Co]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[No]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Po]),_:1}),o(),Bo]),t("td",Ko,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Vo,t("td",To,[t("a",Uo,[o("从前序与中序遍历序列构造二叉树"),e(s)])]),t("td",Ro,[t("a",Wo,[o("[✓]"),e(s)])]),t("td",Go,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Yo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Qo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[So]),_:1}),o(),Do]),t("td",Zo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ao,t("td",Fo,[t("a",Jo,[o("从中序与后序遍历序列构造二叉树"),e(s)])]),t("td",Xo,[t("a",$o,[o("[✓]"),e(s)])]),t("td",tl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[el]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ol]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ll]),_:1}),o(),nl]),t("td",sl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[dl,t("td",_l,[t("a",cl,[o("二叉树的层序遍历 II"),e(s)])]),t("td",il,[t("a",rl,[o("[✓]"),e(s)])]),t("td",al,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[hl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ul]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[fl]),_:1})]),t("td",gl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ml,t("td",yl,[t("a",bl,[o("将有序数组转换为二叉搜索树"),e(s)])]),t("td",xl,[t("a",pl,[o("[✓]"),e(s)])]),t("td",kl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ml]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[jl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[vl]),_:1}),o(),Il]),t("td",El,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[wl,t("td",zl,[t("a",Ol,[o("有序链表转换二叉搜索树"),e(s)])]),t("td",ql,[t("a",Hl,[o("[✓]"),e(s)])]),t("td",Ll,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Cl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Nl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Pl]),_:1}),o(),Bl]),t("td",Kl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Vl,t("td",Tl,[t("a",Ul,[o("平衡二叉树"),e(s)])]),t("td",Rl,[t("a",Wl,[o("[✓]"),e(s)])]),t("td",Gl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Yl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ql]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Sl]),_:1})]),t("td",Dl,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Zl,t("td",Al,[t("a",Fl,[o("二叉树的最小深度"),e(s)])]),t("td",Jl,[t("a",Xl,[o("[✓]"),e(s)])]),t("td",$l,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[tn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[en]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[on]),_:1}),o(),ln]),t("td",nn,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[sn,t("td",dn,[t("a",_n,[o("路径总和"),e(s)])]),t("td",cn,[t("a",rn,[o("[✓]"),e(s)])]),t("td",an,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[hn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[un]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[fn]),_:1}),o(),gn]),t("td",mn,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[yn,t("td",bn,[t("a",xn,[o("路径总和 II"),e(s)])]),t("td",pn,[t("a",kn,[o("[✓]"),e(s)])]),t("td",Mn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[jn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[vn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[In]),_:1}),o(),En]),t("td",wn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zn,t("td",On,[t("a",qn,[o("二叉树展开为链表"),e(s)])]),t("td",Hn,[t("a",Ln,[o("[✓]"),e(s)])]),t("td",Cn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Nn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Pn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Bn]),_:1}),o(),Kn]),t("td",Vn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Tn,t("td",Un,[t("a",Rn,[o("填充每个节点的下一个右侧节点指针"),e(s)])]),t("td",Wn,[t("a",Gn,[o("[✓]"),e(s)])]),t("td",Yn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Qn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Sn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Dn]),_:1}),o(),Zn]),t("td",An,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Fn,t("td",Jn,[t("a",Xn,[o("填充每个节点的下一个右侧节点指针 II"),e(s)])]),t("td",$n,[t("a",ts,[o("[✓]"),e(s)])]),t("td",es,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[os]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ls]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ns]),_:1}),o(),ss]),t("td",ds,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_s,t("td",cs,[t("a",is,[o("二叉树中的最大路径和"),e(s)])]),t("td",rs,[t("a",as,[o("[✓]"),e(s)])]),t("td",hs,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[us]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[fs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[gs]),_:1}),o(),ms]),t("td",ys,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bs,t("td",xs,[t("a",ps,[o("求根节点到叶节点数字之和"),e(s)])]),t("td",ks,[t("a",Ms,[o("[✓]"),e(s)])]),t("td",js,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[vs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Is]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Es]),_:1})]),t("td",ws,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zs,t("td",Os,[t("a",qs,[o("二叉树的前序遍历"),e(s)])]),t("td",Hs,[t("a",Ls,[o("[✓]"),e(s)])]),t("td",Cs,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ns]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ps]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Bs]),_:1}),o(),Ks]),t("td",Vs,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ts,t("td",Us,[t("a",Rs,[o("二叉树的后序遍历"),e(s)])]),t("td",Ws,[t("a",Gs,[o("[✓]"),e(s)])]),t("td",Ys,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Qs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ss]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ds]),_:1}),o(),Zs]),t("td",As,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Fs,t("td",Js,[t("a",Xs,[o("上下翻转二叉树"),e(s)])]),t("td",$s,[t("a",td,[o("[✓]"),e(s)])]),t("td",ed,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[od]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ld]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[nd]),_:1})]),t("td",sd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[dd,t("td",_d,[t("a",cd,[o("二叉搜索树迭代器"),e(s)])]),t("td",id,[t("a",rd,[o("[✓]"),e(s)])]),t("td",ad,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[hd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ud]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[fd]),_:1}),o(),gd]),t("td",md,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yd,t("td",bd,[t("a",xd,[o("二叉树的右视图"),e(s)])]),t("td",pd,[t("a",kd,[o("[✓]"),e(s)])]),t("td",Md,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[jd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[vd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Id]),_:1}),o(),Ed]),t("td",wd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zd,t("td",Od,[t("a",qd,[o("完全二叉树的节点个数"),e(s)])]),t("td",Hd,[t("a",Ld,[o("[✓]"),e(s)])]),t("td",Cd,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Nd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Pd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Bd]),_:1}),o(),Kd]),t("td",Vd,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Td,t("td",Ud,[t("a",Rd,[o("翻转二叉树"),e(s)])]),t("td",Wd,[t("a",Gd,[o("[✓]"),e(s)])]),t("td",Yd,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Qd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Sd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Dd]),_:1}),o(),Zd]),t("td",Ad,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Fd,t("td",Jd,[t("a",Xd,[o("二叉搜索树中第 K 小的元素"),e(s)])]),t("td",$d,[t("a",t_,[o("[✓]"),e(s)])]),t("td",e_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[o_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[l_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[n_]),_:1}),o(),s_]),t("td",d_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[__,t("td",c_,[t("a",i_,[o("二叉搜索树的最近公共祖先"),e(s)])]),t("td",r_,[t("a",a_,[o("[✓]"),e(s)])]),t("td",h_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[u_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[f_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[g_]),_:1}),o(),m_]),t("td",y_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[b_,t("td",x_,[t("a",p_,[o("二叉树的最近公共祖先"),e(s)])]),t("td",k_,[t("a",M_,[o("[✓]"),e(s)])]),t("td",j_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[v_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[I_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[E_]),_:1})]),t("td",w_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[z_,t("td",O_,[t("a",q_,[o("统计同值子树"),e(s)])]),H_,t("td",L_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[C_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[N_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[P_]),_:1})]),t("td",B_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[K_,t("td",V_,[t("a",T_,[o("验证二叉搜索树的前序遍历序列"),e(s)])]),U_,t("td",R_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[W_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[G_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Y_]),_:1}),o(),Q_]),t("td",S_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[D_,t("td",Z_,[t("a",A_,[o("二叉树的所有路径"),e(s)])]),t("td",F_,[t("a",J_,[o("[✓]"),e(s)])]),t("td",X_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[tc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[ec]),_:1}),o(),oc]),t("td",lc,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[nc,t("td",sc,[t("a",dc,[o("最接近的二叉搜索树值"),e(s)])]),_c,t("td",cc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ic]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[rc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[ac]),_:1}),o(),hc]),t("td",uc,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[fc,t("td",gc,[t("a",mc,[o("最接近的二叉搜索树值 II"),e(s)])]),yc,t("td",bc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[xc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[pc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[kc]),_:1}),o(),Mc]),t("td",jc,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[vc,t("td",Ic,[t("a",Ec,[o("二叉搜索树中的中序后继"),e(s)])]),wc,t("td",zc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Oc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[qc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Hc]),_:1}),o(),Lc]),t("td",Cc,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Nc,t("td",Pc,[t("a",Bc,[o("二叉树的序列化与反序列化"),e(s)])]),t("td",Kc,[t("a",Vc,[o("[✓]"),e(s)])]),t("td",Tc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Uc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Rc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Wc]),_:1}),o(),Gc]),t("td",Yc,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Qc,t("td",Sc,[t("a",Dc,[o("二叉树最长连续序列"),e(s)])]),Zc,t("td",Ac,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Fc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Jc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Xc]),_:1})]),t("td",$c,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ti,t("td",ei,[t("a",oi,[o("二叉树的垂直遍历"),e(s)])]),li,t("td",ni,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[si]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[di]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[_i]),_:1}),o(),ci]),t("td",ii,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ri,t("td",ai,[t("a",hi,[o("验证二叉树的前序序列化"),e(s)])]),ui,t("td",fi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[gi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[mi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[yi]),_:1}),o(),bi]),t("td",xi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[pi,t("td",ki,[t("a",Mi,[o("最大二叉搜索子树"),e(s)])]),ji,t("td",vi,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ii]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ei]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[wi]),_:1}),o(),zi]),t("td",Oi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qi,t("td",Hi,[t("a",Li,[o("打家劫舍 III"),e(s)])]),Ci,t("td",Ni,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Pi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Bi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ki]),_:1}),o(),Vi]),t("td",Ti,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ui,t("td",Ri,[t("a",Wi,[o("寻找二叉树的叶子节点"),e(s)])]),t("td",Gi,[t("a",Yi,[o("[✓]"),e(s)])]),t("td",Qi,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Si]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Di]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Zi]),_:1})]),t("td",Ai,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Fi,t("td",Ji,[t("a",Xi,[o("左叶子之和"),e(s)])]),$i,t("td",tr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[er]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[or]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[lr]),_:1}),o(),nr]),t("td",sr,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[dr,t("td",_r,[t("a",cr,[o("将二叉搜索树转化为排序的双向链表"),e(s)])]),t("td",ir,[t("a",rr,[o("[✓]"),e(s)])]),t("td",ar,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[hr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ur]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[fr]),_:1}),o(),gr]),t("td",mr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yr,t("td",br,[t("a",xr,[o("将 N 叉树编码为二叉树"),e(s)])]),pr,t("td",kr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Mr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[jr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[vr]),_:1}),o(),Ir]),t("td",Er,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[wr,t("td",zr,[t("a",Or,[o("路径总和 III"),e(s)])]),t("td",qr,[t("a",Hr,[o("[✓]"),e(s)])]),t("td",Lr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Cr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Nr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Pr]),_:1})]),t("td",Br,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Kr,t("td",Vr,[t("a",Tr,[o("序列化和反序列化二叉搜索树"),e(s)])]),Ur,t("td",Rr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Wr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Gr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Yr]),_:1}),o(),Qr]),t("td",Sr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Dr,t("td",Zr,[t("a",Ar,[o("删除二叉搜索树中的节点"),e(s)])]),t("td",Fr,[t("a",Jr,[o("[✓]"),e(s)])]),t("td",Xr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$r]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[ta]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[ea]),_:1})]),t("td",oa,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[la,t("td",na,[t("a",sa,[o("二叉搜索树中的众数"),e(s)])]),da,t("td",_a,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ca]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ia]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[ra]),_:1}),o(),aa]),t("td",ha,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ua,t("td",fa,[t("a",ga,[o("出现次数最多的子树元素和"),e(s)])]),ma,t("td",ya,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ba]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[xa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[pa]),_:1}),o(),ka]),t("td",Ma,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ja,t("td",va,[t("a",Ia,[o("二叉搜索树中的中序后继 II"),e(s)])]),Ea,t("td",wa,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[za]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Oa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[qa]),_:1})]),t("td",Ha,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[La,t("td",Ca,[t("a",Na,[o("找树左下角的值"),e(s)])]),Pa,t("td",Ba,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ka]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Va]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Ta]),_:1}),o(),Ua]),t("td",Ra,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wa,t("td",Ga,[t("a",Ya,[o("在每个树行中找最大值"),e(s)])]),Qa,t("td",Sa,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Da]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Za]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Aa]),_:1}),o(),Fa]),t("td",Ja,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xa,t("td",$a,[t("a",th,[o("二叉搜索树的最小绝对差"),e(s)])]),t("td",eh,[t("a",oh,[o("[✓]"),e(s)])]),t("td",lh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[nh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[sh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[dh]),_:1}),o(),_h]),t("td",ch,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ih,t("td",rh,[t("a",ah,[o("从字符串生成二叉树"),e(s)])]),hh,t("td",uh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[fh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[gh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[mh]),_:1}),o(),yh]),t("td",bh,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xh,t("td",ph,[t("a",kh,[o("把二叉搜索树转换为累加树"),e(s)])]),Mh,t("td",jh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[vh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ih]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Eh]),_:1}),o(),wh]),t("td",zh,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Oh,t("td",qh,[t("a",Hh,[o("二叉树的直径"),e(s)])]),t("td",Lh,[t("a",Ch,[o("[✓]"),e(s)])]),t("td",Nh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ph]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Bh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Kh]),_:1})]),t("td",Vh,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Th,t("td",Uh,[t("a",Rh,[o("二叉树的边界"),e(s)])]),Wh,t("td",Gh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Yh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Qh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Sh]),_:1})]),t("td",Dh,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Zh,t("td",Ah,[t("a",Fh,[o("二叉树最长连续序列 II"),e(s)])]),Jh,t("td",Xh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$h]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[t1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[e1]),_:1})]),t("td",o1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[l1,t("td",n1,[t("a",s1,[o("二叉树的坡度"),e(s)])]),d1,t("td",_1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[c1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[i1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[r1]),_:1})]),t("td",a1,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[h1,t("td",u1,[t("a",f1,[o("另一棵树的子树"),e(s)])]),t("td",g1,[t("a",m1,[o("[✓]"),e(s)])]),t("td",y1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[b1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[x1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[p1]),_:1}),o(),k1]),t("td",M1,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[j1,t("td",v1,[t("a",I1,[o("根据二叉树创建字符串"),e(s)])]),E1,t("td",w1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[z1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[O1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[q1]),_:1}),o(),H1]),t("td",L1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[C1,t("td",N1,[t("a",P1,[o("合并二叉树"),e(s)])]),t("td",B1,[t("a",K1,[o("[✓]"),e(s)])]),t("td",V1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[T1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[U1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[R1]),_:1}),o(),W1]),t("td",G1,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Y1,t("td",Q1,[t("a",S1,[o("在二叉树中增加一行"),e(s)])]),D1,t("td",Z1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[A1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[F1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[J1]),_:1}),o(),X1]),t("td",$1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[tu,t("td",eu,[t("a",ou,[o("二叉树的层平均值"),e(s)])]),t("td",lu,[t("a",nu,[o("[✓]"),e(s)])]),t("td",su,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[du]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[_u]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[cu]),_:1}),o(),iu]),t("td",ru,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[au,t("td",hu,[t("a",uu,[o("寻找重复的子树"),e(s)])]),fu,t("td",gu,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[mu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[yu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[bu]),_:1}),o(),xu]),t("td",pu,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ku,t("td",Mu,[t("a",ju,[o("两数之和 IV - 输入二叉搜索树"),e(s)])]),vu,t("td",Iu,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Eu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[wu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[zu]),_:1}),o(),Ou]),t("td",qu,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Hu,t("td",Lu,[t("a",Cu,[o("最大二叉树"),e(s)])]),t("td",Nu,[t("a",Pu,[o("[✓]"),e(s)])]),t("td",Bu,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ku]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Vu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Tu]),_:1}),o(),Uu]),t("td",Ru,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wu,t("td",Gu,[t("a",Yu,[o("输出二叉树"),e(s)])]),Qu,t("td",Su,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Du]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Zu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Au]),_:1}),o(),Fu]),t("td",Ju,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xu,t("td",$u,[t("a",tf,[o("二叉树最大宽度"),e(s)])]),t("td",ef,[t("a",of,[o("[✓]"),e(s)])]),t("td",lf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[nf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[sf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[df]),_:1}),o(),_f]),t("td",cf,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[rf,t("td",af,[t("a",hf,[o("均匀树划分"),e(s)])]),uf,t("td",ff,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[gf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[mf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[yf]),_:1})]),t("td",bf,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xf,t("td",pf,[t("a",kf,[o("路径总和 IV"),e(s)])]),Mf,t("td",jf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[vf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[If]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ef]),_:1}),o(),wf]),t("td",zf,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Of,t("td",qf,[t("a",Hf,[o("修剪二叉搜索树"),e(s)])]),Lf,t("td",Cf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Nf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Pf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Bf]),_:1}),o(),Kf]),t("td",Vf,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Tf,t("td",Uf,[t("a",Rf,[o("二叉树中第二小的节点"),e(s)])]),Wf,t("td",Gf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Yf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Qf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Sf]),_:1})]),t("td",Df,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Zf,t("td",Af,[t("a",Ff,[o("最长同值路径"),e(s)])]),Jf,t("td",Xf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$f]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[tg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[eg]),_:1})]),t("td",og,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[lg,t("td",ng,[t("a",sg,[o("二叉搜索树中的搜索"),e(s)])]),t("td",dg,[t("a",_g,[o("[✓]"),e(s)])]),t("td",cg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ig]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[rg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[ag]),_:1})]),t("td",hg,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ug,t("td",fg,[t("a",gg,[o("二叉搜索树中的插入操作"),e(s)])]),t("td",mg,[t("a",yg,[o("[✓]"),e(s)])]),t("td",bg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[xg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[pg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[kg]),_:1})]),t("td",Mg,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jg,t("td",vg,[t("a",Ig,[o("数据流中的第 K 大元素"),e(s)])]),t("td",Eg,[t("a",wg,[o("[✓]"),e(s)])]),t("td",zg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Og]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[qg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Hg]),_:1}),o(),Lg]),t("td",Cg,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ng,t("td",Pg,[t("a",Bg,[o("二叉树最近的叶节点"),e(s)])]),Kg,t("td",Vg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Tg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ug]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Rg]),_:1}),o(),Wg]),t("td",Gg,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Yg,t("td",Qg,[t("a",Sg,[o("拆分二叉搜索树"),e(s)])]),Dg,t("td",Zg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ag]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Fg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[Jg]),_:1}),o(),Xg]),t("td",$g,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[tm,t("td",em,[t("a",om,[o("二叉搜索树节点最小距离"),e(s)])]),t("td",lm,[t("a",nm,[o("[✓]"),e(s)])]),t("td",sm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[dm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[_m]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[cm]),_:1}),o(),im]),t("td",rm,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[am,t("td",hm,[t("a",um,[o("二叉树剪枝"),e(s)])]),fm,t("td",gm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[mm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ym]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[bm]),_:1})]),t("td",xm,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[pm,t("td",km,[t("a",Mm,[o("二叉树中所有距离为 K 的结点"),e(s)])]),jm,t("td",vm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Im]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Em]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[wm]),_:1}),o(),zm]),t("td",Om,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qm,t("td",Hm,[t("a",Lm,[o("具有所有最深节点的最小子树"),e(s)])]),Cm,t("td",Nm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Pm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Bm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Km]),_:1}),o(),Vm]),t("td",Tm,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Um,t("td",Rm,[t("a",Wm,[o("叶子相似的树"),e(s)])]),Gm,t("td",Ym,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Qm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Sm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Dm]),_:1})]),t("td",Zm,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Am,t("td",Fm,[t("a",Jm,[o("根据前序和后序遍历构造二叉树"),e(s)])]),t("td",Xm,[t("a",$m,[o("[✓]"),e(s)])]),t("td",ty,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ey]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[oy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ly]),_:1}),o(),ny]),t("td",sy,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[dy,t("td",_y,[t("a",cy,[o("所有可能的真二叉树"),e(s)])]),iy,t("td",ry,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ay]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[hy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[uy]),_:1}),o(),fy]),t("td",gy,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[my,t("td",yy,[t("a",by,[o("递增顺序搜索树"),e(s)])]),xy,t("td",py,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ky]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[My]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[jy]),_:1}),o(),vy]),t("td",Iy,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ey,t("td",wy,[t("a",zy,[o("完全二叉树插入器"),e(s)])]),Oy,t("td",qy,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Hy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Ly]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Cy]),_:1}),o(),Ny]),t("td",Py,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[By,t("td",Ky,[t("a",Vy,[o("二叉搜索树的范围和"),e(s)])]),Ty,t("td",Uy,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ry]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Wy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Gy]),_:1}),o(),Yy]),t("td",Qy,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Sy,t("td",Dy,[t("a",Zy,[o("翻转等价二叉树"),e(s)])]),Ay,t("td",Fy,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Jy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Xy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[$y]),_:1})]),t("td",t2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[e2,t("td",o2,[t("a",l2,[o("二叉树的完全性检验"),e(s)])]),t("td",n2,[t("a",s2,[o("[✓]"),e(s)])]),t("td",d2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[_2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[c2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[i2]),_:1})]),t("td",r2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[a2,t("td",h2,[t("a",u2,[o("单值二叉树"),e(s)])]),f2,t("td",g2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[m2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[y2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[b2]),_:1}),o(),x2]),t("td",p2,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[k2,t("td",M2,[t("a",j2,[o("监控二叉树"),e(s)])]),v2,t("td",I2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[E2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[w2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[z2]),_:1}),o(),O2]),t("td",q2,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[H2,t("td",L2,[t("a",C2,[o("翻转二叉树以匹配先序遍历"),e(s)])]),N2,t("td",P2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[B2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[K2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[V2]),_:1})]),t("td",T2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[U2,t("td",R2,[t("a",W2,[o("在二叉树中分配硬币"),e(s)])]),G2,t("td",Y2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Q2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[S2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[D2]),_:1})]),t("td",Z2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[A2,t("td",F2,[t("a",J2,[o("二叉树的垂序遍历"),e(s)])]),X2,t("td",$2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[tb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[eb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ob]),_:1}),o(),lb]),t("td",nb,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[sb,t("td",db,[t("a",_b,[o("从叶结点开始的最小字符串"),e(s)])]),cb,t("td",ib,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[rb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ab]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[hb]),_:1}),o(),ub]),t("td",fb,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[gb,t("td",mb,[t("a",yb,[o("二叉树的堂兄弟节点"),e(s)])]),bb,t("td",xb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[pb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[kb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Mb]),_:1}),o(),jb]),t("td",vb,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ib,t("td",Eb,[t("a",wb,[o("最大二叉树 II"),e(s)])]),zb,t("td",Ob,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[qb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Hb]),_:1})]),t("td",Lb,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Cb,t("td",Nb,[t("a",Pb,[o("前序遍历构造二叉搜索树"),e(s)])]),t("td",Bb,[t("a",Kb,[o("[✓]"),e(s)])]),t("td",Vb,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Tb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ub]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Rb]),_:1}),o(),Wb]),t("td",Gb,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Yb,t("td",Qb,[t("a",Sb,[o("从根到叶的二进制数之和"),e(s)])]),Db,t("td",Zb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ab]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Fb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Jb]),_:1})]),t("td",Xb,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[$b,t("td",tx,[t("a",ex,[o("节点与其祖先之间的最大差值"),e(s)])]),ox,t("td",lx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[nx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[sx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[dx]),_:1})]),t("td",_x,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[cx,t("td",ix,[t("a",rx,[o("从先序遍历还原二叉树"),e(s)])]),ax,t("td",hx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ux]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[fx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[gx]),_:1}),o(),mx]),t("td",yx,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bx,t("td",xx,[t("a",px,[o("从二叉搜索树到更大和树"),e(s)])]),kx,t("td",Mx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[jx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[vx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Ix]),_:1}),o(),Ex]),t("td",wx,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zx,t("td",Ox,[t("a",qx,[o("根到叶路径上的不足节点"),e(s)])]),Hx,t("td",Lx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Cx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Nx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Px]),_:1})]),t("td",Bx,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Kx,t("td",Vx,[t("a",Tx,[o("二叉树寻路"),e(s)])]),Ux,t("td",Rx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Wx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Gx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Yx]),_:1})]),t("td",Qx,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Sx,t("td",Dx,[t("a",Zx,[o("删点成林"),e(s)])]),Ax,t("td",Fx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Jx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Xx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[$x]),_:1}),o(),tp]),t("td",ep,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[op,t("td",lp,[t("a",np,[o("子树的最大平均值"),e(s)])]),sp,t("td",dp,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[_p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[cp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[ip]),_:1})]),t("td",rp,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ap,t("td",hp,[t("a",up,[o("最深叶节点的最近公共祖先"),e(s)])]),fp,t("td",gp,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[mp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[yp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[bp]),_:1}),o(),xp]),t("td",pp,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[kp,t("td",Mp,[t("a",jp,[o("二叉树着色游戏"),e(s)])]),vp,t("td",Ip,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ep]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[wp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[zp]),_:1})]),t("td",Op,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qp,t("td",Hp,[t("a",Lp,[o("最大层内元素和"),e(s)])]),Cp,t("td",Np,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Pp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Bp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Kp]),_:1}),o(),Vp]),t("td",Tp,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Up,t("td",Rp,[t("a",Wp,[o("查找两棵二叉搜索树之和"),e(s)])]),Gp,t("td",Yp,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Qp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Sp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Dp]),_:1}),o(),Zp]),t("td",Ap,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Fp,t("td",Jp,[t("a",Xp,[o("在受污染的二叉树中查找元素"),e(s)])]),$p,t("td",t0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[e0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[o0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[l0]),_:1}),o(),n0]),t("td",s0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[d0,t("td",_0,[t("a",c0,[o("层数最深叶子节点的和"),e(s)])]),i0,t("td",r0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[a0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[h0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[u0]),_:1}),o(),f0]),t("td",g0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[m0,t("td",y0,[t("a",b0,[o("两棵二叉搜索树中的所有元素"),e(s)])]),x0,t("td",p0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[k0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[M0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[j0]),_:1}),o(),v0]),t("td",I0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[E0,t("td",w0,[t("a",z0,[o("祖父节点值为偶数的节点和"),e(s)])]),O0,t("td",q0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[H0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[L0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[C0]),_:1}),o(),N0]),t("td",P0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[B0,t("td",K0,[t("a",V0,[o("删除给定值的叶子节点"),e(s)])]),T0,t("td",U0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[R0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[W0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[G0]),_:1})]),t("td",Y0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Q0,t("td",S0,[t("a",D0,[o("分裂二叉树的最大乘积"),e(s)])]),Z0,t("td",A0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[F0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[J0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[X0]),_:1})]),t("td",$0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[t6,t("td",e6,[t("a",o6,[o("验证二叉树"),e(s)])]),l6,t("td",n6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[s6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[d6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[_6]),_:1}),o(),c6]),t("td",i6,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[r6,t("td",a6,[t("a",h6,[o("二叉树中的链表"),e(s)])]),u6,t("td",f6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[g6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[m6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[y6]),_:1}),o(),b6]),t("td",x6,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[p6,t("td",k6,[t("a",M6,[o("二叉树中的最长交错路径"),e(s)])]),j6,t("td",v6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[I6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[E6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[w6]),_:1}),o(),z6]),t("td",O6,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[q6,t("td",H6,[t("a",L6,[o("二叉搜索子树的最大键值和"),e(s)])]),C6,t("td",N6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[P6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[B6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[K6]),_:1}),o(),V6]),t("td",T6,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[U6,t("td",R6,[t("a",W6,[o("找出克隆二叉树中的相同节点"),e(s)])]),G6,t("td",Y6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Q6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[S6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[D6]),_:1}),o(),Z6]),t("td",A6,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[F6,t("td",J6,[t("a",X6,[o("将二叉搜索树变平衡"),e(s)])]),$6,t("td",t8,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[e8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[o8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[l8]),_:1}),o(),n8]),t("td",s8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[d8,t("td",_8,[t("a",c8,[o("判断给定的序列是否是二叉树从根到叶的路径"),e(s)])]),i8,t("td",r8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[a8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[h8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[u8]),_:1}),o(),f8]),t("td",g8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[m8,t("td",y8,[t("a",b8,[o("统计二叉树中好节点的数目"),e(s)])]),x8,t("td",p8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[k8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[M8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[j8]),_:1}),o(),v8]),t("td",I8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[E8,t("td",w8,[t("a",z8,[o("二叉树中的伪回文路径"),e(s)])]),O8,t("td",q8,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[H8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[L8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[C8]),_:1}),o(),N8]),t("td",P8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[B8,t("td",K8,[t("a",V8,[o("寻找所有的独生节点"),e(s)])]),T8,t("td",U8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[R8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[W8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[G8]),_:1}),o(),Y8]),t("td",Q8,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[S8,t("td",D8,[t("a",Z8,[o("克隆含随机指针的二叉树"),e(s)])]),A8,t("td",F8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[J8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[X8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[$8]),_:1}),o(),t3]),t("td",e3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[o3,t("td",l3,[t("a",n3,[o("好叶子节点对的数量"),e(s)])]),s3,t("td",d3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[_3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[c3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[i3]),_:1})]),t("td",r3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[a3,t("td",h3,[t("a",u3,[o("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),f3,t("td",g3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[m3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[y3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[b3]),_:1}),o(),x3]),t("td",p3,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[k3,t("td",M3,[t("a",j3,[o("二叉搜索树迭代器 II"),e(s)])]),v3,t("td",I3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[E3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[w3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[z3]),_:1}),o(),O3]),t("td",q3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[H3,t("td",L3,[t("a",C3,[o("根据中缀表达式构造二叉表达式树"),e(s)])]),N3,t("td",P3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[B3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[K3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[V3]),_:1}),o(),T3]),t("td",U3,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[R3,t("td",W3,[t("a",G3,[o("找到二叉树中最近的右侧节点"),e(s)])]),Y3,t("td",Q3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[S3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[D3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Z3]),_:1})]),t("td",A3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[F3,t("td",J3,[t("a",X3,[o("奇偶树"),e(s)])]),$3,t("td",t5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[e5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[o5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[l5]),_:1})]),t("td",n5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[s5,t("td",d5,[t("a",_5,[o("检查两棵二叉表达式树是否等价"),e(s)])]),c5,t("td",i5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[r5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[a5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[h5]),_:1}),o(),u5]),t("td",f5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[g5,t("td",m5,[t("a",y5,[o("设计带解析函数的表达式树"),e(s)])]),b5,t("td",x5,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[p5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[k5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[M5]),_:1}),o(),j5]),t("td",v5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[I5,t("td",E5,[t("a",w5,[o("二叉树的最近公共祖先 II"),e(s)])]),z5,t("td",O5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[q5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[H5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[L5]),_:1})]),t("td",C5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[N5,t("td",P5,[t("a",B5,[o("二叉树的最近公共祖先 III"),e(s)])]),K5,t("td",V5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[T5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[U5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[R5]),_:1}),o(),W5]),t("td",G5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Y5,t("td",Q5,[t("a",S5,[o("纠正二叉树"),e(s)])]),D5,t("td",Z5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[A5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[F5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[J5]),_:1}),o(),X5]),t("td",$5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[t4,t("td",e4,[t("a",o4,[o("改变二叉树的根节点"),e(s)])]),l4,t("td",n4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[s4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[d4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[_4]),_:1})]),t("td",c4,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[i4,t("td",r4,[t("a",a4,[o("二叉树的最近公共祖先 IV"),e(s)])]),h4,t("td",u4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[f4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[g4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[m4]),_:1}),o(),y4]),t("td",b4,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[x4,t("td",p4,[t("a",k4,[o("找到二叉树中的距离"),e(s)])]),M4,t("td",j4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[v4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[I4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[E4]),_:1}),o(),w4]),t("td",z4,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[O4,t("td",q4,[t("a",H4,[o("给定二叉搜索树的插入顺序求深度"),e(s)])]),L4,t("td",C4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[N4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[P4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[B4]),_:1}),o(),K4]),t("td",V4,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[T4,t("td",U4,[t("a",R4,[o("合并多棵二叉搜索树"),e(s)])]),W4,t("td",G4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Y4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Q4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[S4]),_:1}),o(),D4]),t("td",Z4,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[A4,t("td",F4,[t("a",J4,[o("值等于子节点值之和的节点数量"),e(s)])]),X4,t("td",$4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[t7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[e7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[o7]),_:1})]),t("td",l7,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[n7,t("td",s7,[t("a",d7,[o("斐波那契树的移除子树游戏"),e(s)])]),_7,t("td",c7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[i7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[r7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[a7]),_:1}),o(),h7]),t("td",u7,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[f7,t("td",g7,[t("a",m7,[o("统计最高分的节点数目"),e(s)])]),y7,t("td",b7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[x7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[p7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[k7]),_:1}),o(),M7]),t("td",j7,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[v7,t("td",I7,[t("a",E7,[o("从二叉树一个节点到另一个节点每一步的方向"),e(s)])]),w7,t("td",z7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[O7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[q7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[H7]),_:1}),o(),L7]),t("td",C7,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[N7,t("td",P7,[t("a",B7,[o("根据描述创建二叉树"),e(s)])]),t("td",K7,[t("a",V7,[o("[✓]"),e(s)])]),t("td",T7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[U7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[R7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[W7]),_:1}),o(),G7]),t("td",Y7,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Q7,t("td",S7,[t("a",D7,[o("判断根结点是否等于子结点之和"),e(s)])]),Z7,t("td",A7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[F7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[J7]),_:1})]),t("td",X7,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[$7,t("td",t9,[t("a",e9,[o("统计值等于子树平均值的节点数"),e(s)])]),o9,t("td",l9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[n9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[s9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[d9]),_:1})]),t("td",_9,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[c9,t("td",i9,[t("a",r9,[o("二叉树中得到结果所需的最少翻转次数"),e(s)])]),a9,t("td",h9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[u9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[f9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[g9]),_:1}),o(),m9]),t("td",y9,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[b9,t("td",x9,[t("a",p9,[o("计算布尔二叉树的值"),e(s)])]),k9,t("td",M9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[j9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[v9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[I9]),_:1})]),t("td",E9,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[w9,t("td",z9,[t("a",O9,[o("感染二叉树需要的总时间"),e(s)])]),q9,t("td",H9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[L9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[C9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[N9]),_:1}),o(),P9]),t("td",B9,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[K9,t("td",V9,[t("a",T9,[o("反转二叉树的奇数层"),e(s)])]),U9,t("td",R9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[W9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[G9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Y9]),_:1}),o(),Q9]),t("td",S9,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[D9,t("td",Z9,[t("a",A9,[o("值为 1 的节点数"),e(s)])]),F9,t("td",J9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[X9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[$9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[tk]),_:1}),o(),ek]),t("td",ok,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[lk,t("td",nk,[t("a",sk,[o("移除子树后的二叉树高度"),e(s)])]),dk,t("td",_k,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ck]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ik]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[rk]),_:1}),o(),ak]),t("td",hk,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[uk,t("td",fk,[t("a",gk,[o("逐层排序二叉树所需的最少操作数目"),e(s)])]),mk,t("td",yk,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[bk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[xk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[pk]),_:1})]),t("td",kk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Mk,t("td",jk,[t("a",vk,[o("二叉搜索树最近节点查询"),e(s)])]),Ik,t("td",Ek,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[wk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[zk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Ok]),_:1}),o(),qk]),t("td",Hk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Lk,t("td",Ck,[t("a",Nk,[o("查询树中环的长度"),e(s)])]),Pk,t("td",Bk,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Kk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Vk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Tk]),_:1})]),t("td",Uk,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Rk,t("td",Wk,[t("a",Gk,[o("二叉树中的第 K 大层和"),e(s)])]),Yk,t("td",Qk,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Sk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Dk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Zk]),_:1}),o(),Ak]),t("td",Fk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Jk,t("td",Xk,[t("a",$k,[o("二叉树的堂兄弟节点 II"),e(s)])]),tM,t("td",eM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[oM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[lM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[nM]),_:1}),o(),sM]),t("td",dM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_M,t("td",cM,[t("a",iM,[o("使二叉树所有路径值相等的最小代价"),e(s)])]),rM,t("td",aM,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[hM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[uM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[fM]),_:1}),o(),gM]),t("td",mM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yM,t("td",bM,[t("a",xM,[o("从 Rope 树中提取第 K 个字符"),e(s)])]),pM,t("td",kM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[MM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[jM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[vM]),_:1})]),t("td",IM,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[EM,t("td",wM,[t("a",zM,[o("数组是否表示某二叉树的前序遍历"),e(s)])]),OM,t("td",qM,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[HM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[LM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[CM]),_:1}),o(),NM]),t("td",PM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[BM,t("td",KM,[t("a",VM,[o("特殊二叉树的高度"),e(s)])]),TM,t("td",UM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[RM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[WM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[GM]),_:1}),o(),YM]),t("td",QM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[SM,t("td",DM,[t("a",ZM,[o("计算足够大的节点数"),e(s)])]),AM,t("td",FM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[JM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[XM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[$M]),_:1}),o(),tj]),t("td",ej,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[oj,t("td",lj,[t("a",nj,[o("找到具有最小和的树的层数"),e(s)])]),sj,t("td",dj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[_j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[cj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ij]),_:1}),o(),rj]),t("td",aj,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[hj,t("td",uj,[t("a",fj,[o("二叉树任务调度"),e(s)])]),gj,t("td",mj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[yj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[bj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[xj]),_:1}),o(),pj]),t("td",kj,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Mj,t("td",jj,[t("a",vj,[o("导航装置"),e(s)])]),Ij,t("td",Ej,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[wj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[zj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Oj]),_:1})]),t("td",qj,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Hj,t("td",Lj,[t("a",Cj,[o("二叉树染色"),e(s)])]),Nj,t("td",Pj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Bj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Kj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Vj]),_:1})]),t("td",Tj,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Uj,t("td",Rj,[t("a",Wj,[o("开幕式焰火"),e(s)])]),Gj,t("td",Yj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Qj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Sj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Dj]),_:1}),o(),Zj]),t("td",Aj,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Fj,t("td",Jj,[t("a",Xj,[o("二叉搜索树染色"),e(s)])]),$j,t("td",tv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ev]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[ov]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[lv]),_:1}),o(),nv]),t("td",sv,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[dv,t("td",_v,[t("a",cv,[o("力扣泡泡龙"),e(s)])]),iv,t("td",rv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[av]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[hv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[uv]),_:1})]),t("td",fv,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gv,t("td",mv,[t("a",yv,[o("二叉树灯饰"),e(s)])]),bv,t("td",xv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[pv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[kv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Mv]),_:1}),o(),jv]),t("td",vv,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Iv,t("td",Ev,[t("a",wv,[o("装饰树"),e(s)])]),zv,t("td",Ov,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[qv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Hv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Lv]),_:1}),o(),Cv]),t("td",Nv,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Pv,t("td",Bv,[t("a",Kv,[o("重建二叉树"),e(s)])]),t("td",Vv,[t("a",Tv,[o("[✓]"),e(s)])]),t("td",Uv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Rv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Wv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Gv]),_:1}),o(),Yv]),t("td",Qv,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Sv,t("td",Dv,[t("a",Zv,[o("树的子结构"),e(s)])]),t("td",Av,[t("a",Fv,[o("[✓]"),e(s)])]),t("td",Jv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Xv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[$v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[tI]),_:1})]),t("td",eI,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[oI,t("td",lI,[t("a",nI,[o("二叉树的镜像"),e(s)])]),t("td",sI,[t("a",dI,[o("[✓]"),e(s)])]),t("td",_I,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[cI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[iI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[rI]),_:1}),o(),aI]),t("td",hI,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[uI,t("td",fI,[t("a",gI,[o("对称的二叉树"),e(s)])]),t("td",mI,[t("a",yI,[o("[✓]"),e(s)])]),t("td",bI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[xI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[pI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[kI]),_:1}),o(),MI]),t("td",jI,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[vI,t("td",II,[t("a",EI,[o("从上到下打印二叉树"),e(s)])]),t("td",wI,[t("a",zI,[o("[✓]"),e(s)])]),t("td",OI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[qI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[HI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[LI]),_:1})]),t("td",CI,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[NI,t("td",PI,[t("a",BI,[o("从上到下打印二叉树 II"),e(s)])]),t("td",KI,[t("a",VI,[o("[✓]"),e(s)])]),t("td",TI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[UI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[RI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[WI]),_:1})]),t("td",GI,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[YI,t("td",QI,[t("a",SI,[o("从上到下打印二叉树 III"),e(s)])]),t("td",DI,[t("a",ZI,[o("[✓]"),e(s)])]),t("td",AI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[FI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[JI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[XI]),_:1})]),t("td",$I,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[tE,t("td",eE,[t("a",oE,[o("二叉搜索树的后序遍历序列"),e(s)])]),t("td",lE,[t("a",nE,[o("[✓]"),e(s)])]),t("td",sE,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[dE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[_E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[cE]),_:1}),o(),iE]),t("td",rE,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[aE,t("td",hE,[t("a",uE,[o("二叉树中和为某一值的路径"),e(s)])]),t("td",fE,[t("a",gE,[o("[✓]"),e(s)])]),t("td",mE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[yE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[bE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[xE]),_:1}),o(),pE]),t("td",kE,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ME,t("td",jE,[t("a",vE,[o("二叉搜索树与双向链表"),e(s)])]),t("td",IE,[t("a",EE,[o("[✓]"),e(s)])]),t("td",wE,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[zE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[OE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[qE]),_:1}),o(),HE]),t("td",LE,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[CE,t("td",NE,[t("a",PE,[o("序列化二叉树"),e(s)])]),t("td",BE,[t("a",KE,[o("[✓]"),e(s)])]),t("td",VE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[TE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[UE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[RE]),_:1}),o(),WE]),t("td",GE,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[YE,t("td",QE,[t("a",SE,[o("二叉搜索树的第k大节点"),e(s)])]),t("td",DE,[t("a",ZE,[o("[✓]"),e(s)])]),t("td",AE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[FE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[JE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[XE]),_:1}),o(),$E]),t("td",tw,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ew,t("td",ow,[t("a",lw,[o("二叉树的深度"),e(s)])]),t("td",nw,[t("a",sw,[o("[✓]"),e(s)])]),t("td",dw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[_w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[cw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[iw]),_:1}),o(),rw]),t("td",aw,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[hw,t("td",uw,[t("a",fw,[o("平衡二叉树"),e(s)])]),gw,t("td",mw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[yw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[bw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[xw]),_:1})]),t("td",pw,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[kw,t("td",Mw,[t("a",jw,[o("二叉搜索树的最近公共祖先"),e(s)])]),vw,t("td",Iw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ew]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ww]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[zw]),_:1}),o(),Ow]),t("td",qw,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Hw,t("td",Lw,[t("a",Cw,[o("二叉树的最近公共祖先"),e(s)])]),Nw,t("td",Pw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Bw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Kw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Vw]),_:1})]),t("td",Tw,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Uw,t("td",Rw,[t("a",Ww,[o("往完全二叉树添加节点"),e(s)])]),Gw,t("td",Yw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Qw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Sw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Dw]),_:1}),o(),Zw]),t("td",Aw,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Fw,t("td",Jw,[t("a",Xw,[o("二叉树每层的最大值"),e(s)])]),$w,t("td",tz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ez]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[oz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[lz]),_:1}),o(),nz]),t("td",sz,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[dz,t("td",_z,[t("a",cz,[o("二叉树最底层最左边的值"),e(s)])]),iz,t("td",rz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[az]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[hz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[uz]),_:1}),o(),fz]),t("td",gz,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[mz,t("td",yz,[t("a",bz,[o("二叉树的右侧视图"),e(s)])]),xz,t("td",pz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[kz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Mz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[jz]),_:1}),o(),vz]),t("td",Iz,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ez,t("td",wz,[t("a",zz,[o("二叉树剪枝"),e(s)])]),Oz,t("td",qz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Hz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Lz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Cz]),_:1})]),t("td",Nz,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Pz,t("td",Bz,[t("a",Kz,[o("序列化与反序列化二叉树"),e(s)])]),Vz,t("td",Tz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Uz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Rz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Wz]),_:1}),o(),Gz]),t("td",Yz,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Qz,t("td",Sz,[t("a",Dz,[o("从根节点到叶节点的路径数字之和"),e(s)])]),Zz,t("td",Az,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Fz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Jz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Xz]),_:1})]),t("td",$z,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[tO,t("td",eO,[t("a",oO,[o("向下的路径节点之和"),e(s)])]),lO,t("td",nO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[sO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[dO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[_O]),_:1})]),t("td",cO,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[iO,t("td",rO,[t("a",aO,[o("节点之和最大的路径"),e(s)])]),hO,t("td",uO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[fO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[gO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[mO]),_:1}),o(),yO]),t("td",bO,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[xO,t("td",pO,[t("a",kO,[o("展平二叉搜索树"),e(s)])]),MO,t("td",jO,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[vO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[IO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[EO]),_:1}),o(),wO]),t("td",zO,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[OO,t("td",qO,[t("a",HO,[o("二叉搜索树中的中序后继"),e(s)])]),LO,t("td",CO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[NO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[PO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[BO]),_:1}),o(),KO]),t("td",VO,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[TO,t("td",UO,[t("a",RO,[o("所有大于等于节点的值之和"),e(s)])]),WO,t("td",GO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[YO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[QO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[SO]),_:1}),o(),DO]),t("td",ZO,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[AO,t("td",FO,[t("a",JO,[o("二叉搜索树迭代器"),e(s)])]),XO,t("td",$O,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[tq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[eq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[oq]),_:1}),o(),lq]),t("td",nq,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[sq,t("td",dq,[t("a",_q,[o("数据流的第 K 大数值"),e(s)])]),cq,t("td",iq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[rq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[aq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[hq]),_:1}),o(),uq]),t("td",fq,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[gq,t("td",mq,[t("a",yq,[o("最小高度树"),e(s)])]),bq,t("td",xq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[pq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[kq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Mq]),_:1}),o(),jq]),t("td",vq,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Iq,t("td",Eq,[t("a",wq,[o("特定深度节点链表"),e(s)])]),zq,t("td",Oq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[qq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Hq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Lq]),_:1}),o(),Cq]),t("td",Nq,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Pq,t("td",Bq,[t("a",Kq,[o("检查平衡性"),e(s)])]),Vq,t("td",Tq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Uq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Rq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Wq]),_:1})]),t("td",Gq,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Yq,t("td",Qq,[t("a",Sq,[o("合法二叉搜索树"),e(s)])]),Dq,t("td",Zq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Aq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Fq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Jq]),_:1}),o(),Xq]),t("td",$q,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[tH,t("td",eH,[t("a",oH,[o("后继者"),e(s)])]),lH,t("td",nH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[sH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[dH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[_H]),_:1}),o(),cH]),t("td",iH,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[rH,t("td",aH,[t("a",hH,[o("首个共同祖先"),e(s)])]),uH,t("td",fH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[gH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[mH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[yH]),_:1})]),t("td",bH,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xH,t("td",pH,[t("a",kH,[o("二叉搜索树序列"),e(s)])]),MH,t("td",jH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[vH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[IH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[EH]),_:1}),o(),wH]),t("td",zH,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[OH,t("td",qH,[t("a",HH,[o("检查子树"),e(s)])]),LH,t("td",CH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[NH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[PH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[BH]),_:1}),o(),KH]),t("td",VH,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[TH,t("td",UH,[t("a",RH,[o("求和路径"),e(s)])]),WH,t("td",GH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[YH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[QH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[SH]),_:1})]),t("td",DH,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ZH,t("td",AH,[t("a",FH,[o("BiNode"),e(s)])]),JH,t("td",XH,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[$H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[tL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[eL]),_:1}),o(),oL]),t("td",lL,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])])])])])}const cL=c(h,[["render",nL],["__file","binary-tree.html.vue"]]);export{cL as default};
