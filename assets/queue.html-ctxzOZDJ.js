import{_ as c,r as _,o as i,c as a,a as t,d as e,w as l,b as o,f as u}from"./app-mvY9N9Pc.js";const r={},h=t("h1",{id:"队列",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#队列","aria-hidden":"true"},"#"),o(" 队列")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),q=t("code",null,"单调栈",-1),M=t("span",{class:"blue"},"队列",-1),w=t("code",null,"单调队列",-1),H=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),E=t("code",null,"字符串",-1),I=t("code",null,"字符串匹配",-1),j=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),O=t("code",null,"二叉搜索树",-1),K=t("code",null,"最小生成树",-1),L=t("code",null,"图",-1),V=t("code",null,"有序集合",-1),C=t("code",null,"拓扑排序",-1),N=t("code",null,"最短路",-1),B=t("code",null,"强连通分量",-1),R=t("code",null,"欧拉回路",-1),D=t("code",null,"双连通分量",-1),P=t("code",null,"并查集",-1),Q=t("code",null,"字典树",-1),T=t("code",null,"线段树",-1),U=t("code",null,"树状数组",-1),A=t("code",null,"后缀数组",-1),F=t("p",null,[t("strong",null,"算法")],-1),G=t("code",null,"枚举",-1),J=t("code",null,"递归",-1),S=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),qt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),wt=t("code",null,"随机化",-1),Ht=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),Et=t("code",null,"拒绝采样",-1),It=t("code",null,"数据库",-1),jt=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Ot=t("code",null,"脑筋急转弯",-1),Kt=t("code",null,"交互",-1),Lt=t("code",null,"迭代器",-1),Vt=t("code",null,"多线程",-1),Ct=t("hr",null,null,-1),Nt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Bt=t("td",{style:{"text-align":"center"}},"225",-1),Rt={style:{"text-align":"left"}},Dt={href:"https://leetcode.com/problems/implement-stack-using-queues",target:"_blank",rel:"noopener noreferrer"},Pt={style:{"text-align":"center"}},Qt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0225",target:"_blank",rel:"noopener noreferrer"},Tt={style:{"text-align":"left"}},Ut=t("code",null,"栈",-1),At=t("code",null,"设计",-1),Ft=t("code",null,"队列",-1),Gt={style:{"text-align":"left"}},Jt=t("td",{style:{"text-align":"center"}},"232",-1),St={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/implement-queue-using-stacks",target:"_blank",rel:"noopener noreferrer"},Xt={style:{"text-align":"center"}},Yt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0232",target:"_blank",rel:"noopener noreferrer"},Zt={style:{"text-align":"left"}},$t=t("code",null,"栈",-1),te=t("code",null,"设计",-1),ee=t("code",null,"队列",-1),oe={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"239",-1),ne={style:{"text-align":"left"}},de={href:"https://leetcode.com/problems/sliding-window-maximum",target:"_blank",rel:"noopener noreferrer"},se={style:{"text-align":"center"}},_e={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0239",target:"_blank",rel:"noopener noreferrer"},ce={style:{"text-align":"left"}},ie=t("code",null,"队列",-1),ae=t("code",null,"数组",-1),ue=t("code",null,"滑动窗口",-1),re=t("code",null,"2+",-1),he={style:{"text-align":"left"}},fe=t("td",{style:{"text-align":"center"}},"281",-1),ge={style:{"text-align":"left"}},me={href:"https://leetcode.com/problems/zigzag-iterator",target:"_blank",rel:"noopener noreferrer"},ye=t("td",{style:{"text-align":"center"}},null,-1),xe={style:{"text-align":"left"}},be=t("code",null,"设计",-1),pe=t("code",null,"队列",-1),ke=t("code",null,"数组",-1),qe=t("code",null,"1+",-1),Me={style:{"text-align":"left"}},we=t("td",{style:{"text-align":"center"}},"341",-1),He={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},Ee=t("td",{style:{"text-align":"center"}},null,-1),Ie={style:{"text-align":"left"}},je=t("code",null,"栈",-1),ze=t("code",null,"树",-1),Oe=t("code",null,"深度优先搜索",-1),Ke=t("code",null,"3+",-1),Le={style:{"text-align":"left"}},Ve=t("td",{style:{"text-align":"center"}},"346",-1),Ce={style:{"text-align":"left"}},Ne={href:"https://leetcode.com/problems/moving-average-from-data-stream",target:"_blank",rel:"noopener noreferrer"},Be={style:{"text-align":"center"}},Re={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0346",target:"_blank",rel:"noopener noreferrer"},De={style:{"text-align":"left"}},Pe=t("code",null,"设计",-1),Qe=t("code",null,"队列",-1),Te=t("code",null,"数组",-1),Ue=t("code",null,"1+",-1),Ae={style:{"text-align":"left"}},Fe=t("td",{style:{"text-align":"center"}},"353",-1),Ge={style:{"text-align":"left"}},Je={href:"https://leetcode.com/problems/design-snake-game",target:"_blank",rel:"noopener noreferrer"},Se=t("td",{style:{"text-align":"center"}},null,-1),We={style:{"text-align":"left"}},Xe=t("code",null,"设计",-1),Ye=t("code",null,"队列",-1),Ze=t("code",null,"数组",-1),$e=t("code",null,"2+",-1),to={style:{"text-align":"left"}},eo=t("td",{style:{"text-align":"center"}},"362",-1),oo={style:{"text-align":"left"}},lo={href:"https://leetcode.com/problems/design-hit-counter",target:"_blank",rel:"noopener noreferrer"},no=t("td",{style:{"text-align":"center"}},null,-1),so={style:{"text-align":"left"}},_o=t("code",null,"设计",-1),co=t("code",null,"队列",-1),io=t("code",null,"数组",-1),ao=t("code",null,"2+",-1),uo={style:{"text-align":"left"}},ro=t("td",{style:{"text-align":"center"}},"379",-1),ho={style:{"text-align":"left"}},fo={href:"https://leetcode.com/problems/design-phone-directory",target:"_blank",rel:"noopener noreferrer"},go={style:{"text-align":"center"}},mo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0379",target:"_blank",rel:"noopener noreferrer"},yo={style:{"text-align":"left"}},xo=t("code",null,"设计",-1),bo=t("code",null,"队列",-1),po=t("code",null,"数组",-1),ko=t("code",null,"2+",-1),qo={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"center"}},"387",-1),wo={style:{"text-align":"left"}},Ho={href:"https://leetcode.com/problems/first-unique-character-in-a-string",target:"_blank",rel:"noopener noreferrer"},vo=t("td",{style:{"text-align":"center"}},null,-1),Eo={style:{"text-align":"left"}},Io=t("code",null,"队列",-1),jo=t("code",null,"哈希表",-1),zo=t("code",null,"字符串",-1),Oo=t("code",null,"1+",-1),Ko={style:{"text-align":"left"}},Lo=t("td",{style:{"text-align":"center"}},"622",-1),Vo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/design-circular-queue",target:"_blank",rel:"noopener noreferrer"},No={style:{"text-align":"center"}},Bo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0622",target:"_blank",rel:"noopener noreferrer"},Ro={style:{"text-align":"left"}},Do=t("code",null,"设计",-1),Po=t("code",null,"队列",-1),Qo=t("code",null,"数组",-1),To=t("code",null,"1+",-1),Uo={style:{"text-align":"left"}},Ao=t("td",{style:{"text-align":"center"}},"641",-1),Fo={style:{"text-align":"left"}},Go={href:"https://leetcode.com/problems/design-circular-deque",target:"_blank",rel:"noopener noreferrer"},Jo={style:{"text-align":"center"}},So={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0641",target:"_blank",rel:"noopener noreferrer"},Wo={style:{"text-align":"left"}},Xo=t("code",null,"设计",-1),Yo=t("code",null,"队列",-1),Zo=t("code",null,"数组",-1),$o=t("code",null,"1+",-1),tl={style:{"text-align":"left"}},el=t("td",{style:{"text-align":"center"}},"649",-1),ol={style:{"text-align":"left"}},ll={href:"https://leetcode.com/problems/dota2-senate",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},null,-1),dl={style:{"text-align":"left"}},sl=t("code",null,"贪心",-1),_l=t("code",null,"队列",-1),cl=t("code",null,"字符串",-1),il={style:{"text-align":"left"}},al=t("td",{style:{"text-align":"center"}},"683",-1),ul={style:{"text-align":"left"}},rl={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},hl=t("td",{style:{"text-align":"center"}},null,-1),fl={style:{"text-align":"left"}},gl=t("code",null,"树状数组",-1),ml=t("code",null,"线段树",-1),yl=t("code",null,"队列",-1),xl=t("code",null,"5+",-1),bl={style:{"text-align":"left"}},pl=t("td",{style:{"text-align":"center"}},"862",-1),kl={style:{"text-align":"left"}},ql={href:"https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k",target:"_blank",rel:"noopener noreferrer"},Ml=t("td",{style:{"text-align":"center"}},null,-1),wl={style:{"text-align":"left"}},Hl=t("code",null,"队列",-1),vl=t("code",null,"数组",-1),El=t("code",null,"二分查找",-1),Il=t("code",null,"4+",-1),jl={style:{"text-align":"left"}},zl=t("td",{style:{"text-align":"center"}},"918",-1),Ol={style:{"text-align":"left"}},Kl={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},Ll={style:{"text-align":"center"}},Vl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0918",target:"_blank",rel:"noopener noreferrer"},Cl={style:{"text-align":"left"}},Nl=t("code",null,"队列",-1),Bl=t("code",null,"数组",-1),Rl=t("code",null,"分治",-1),Dl=t("code",null,"2+",-1),Pl={style:{"text-align":"left"}},Ql=t("td",{style:{"text-align":"center"}},"933",-1),Tl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/number-of-recent-calls",target:"_blank",rel:"noopener noreferrer"},Al=t("td",{style:{"text-align":"center"}},null,-1),Fl={style:{"text-align":"left"}},Gl=t("code",null,"设计",-1),Jl=t("code",null,"队列",-1),Sl=t("code",null,"数据流",-1),Wl={style:{"text-align":"left"}},Xl=t("td",{style:{"text-align":"center"}},"936",-1),Yl={style:{"text-align":"left"}},Zl={href:"https://leetcode.com/problems/stamping-the-sequence",target:"_blank",rel:"noopener noreferrer"},$l=t("td",{style:{"text-align":"center"}},null,-1),tn={style:{"text-align":"left"}},en=t("code",null,"栈",-1),on=t("code",null,"贪心",-1),ln=t("code",null,"队列",-1),nn=t("code",null,"1+",-1),dn={style:{"text-align":"left"}},sn=t("td",{style:{"text-align":"center"}},"950",-1),_n={style:{"text-align":"left"}},cn={href:"https://leetcode.com/problems/reveal-cards-in-increasing-order",target:"_blank",rel:"noopener noreferrer"},an=t("td",{style:{"text-align":"center"}},null,-1),un={style:{"text-align":"left"}},rn=t("code",null,"队列",-1),hn=t("code",null,"数组",-1),fn=t("code",null,"排序",-1),gn=t("code",null,"1+",-1),mn={style:{"text-align":"left"}},yn=t("td",{style:{"text-align":"center"}},"995",-1),xn={style:{"text-align":"left"}},bn={href:"https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips",target:"_blank",rel:"noopener noreferrer"},pn=t("td",{style:{"text-align":"center"}},null,-1),kn={style:{"text-align":"left"}},qn=t("code",null,"位运算",-1),Mn=t("code",null,"队列",-1),wn=t("code",null,"数组",-1),Hn=t("code",null,"2+",-1),vn={style:{"text-align":"left"}},En=t("td",{style:{"text-align":"center"}},"1352",-1),In={style:{"text-align":"left"}},jn={href:"https://leetcode.com/problems/product-of-the-last-k-numbers",target:"_blank",rel:"noopener noreferrer"},zn=t("td",{style:{"text-align":"center"}},null,-1),On={style:{"text-align":"left"}},Kn=t("code",null,"设计",-1),Ln=t("code",null,"队列",-1),Vn=t("code",null,"数组",-1),Cn=t("code",null,"2+",-1),Nn={style:{"text-align":"left"}},Bn=t("td",{style:{"text-align":"center"}},"1425",-1),Rn={style:{"text-align":"left"}},Dn={href:"https://leetcode.com/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},Pn=t("td",{style:{"text-align":"center"}},null,-1),Qn={style:{"text-align":"left"}},Tn=t("code",null,"队列",-1),Un=t("code",null,"数组",-1),An=t("code",null,"动态规划",-1),Fn=t("code",null,"3+",-1),Gn={style:{"text-align":"left"}},Jn=t("td",{style:{"text-align":"center"}},"1429",-1),Sn={style:{"text-align":"left"}},Wn={href:"https://leetcode.com/problems/first-unique-number",target:"_blank",rel:"noopener noreferrer"},Xn=t("td",{style:{"text-align":"center"}},null,-1),Yn={style:{"text-align":"left"}},Zn=t("code",null,"设计",-1),$n=t("code",null,"队列",-1),td=t("code",null,"数组",-1),ed=t("code",null,"2+",-1),od={style:{"text-align":"left"}},ld=t("td",{style:{"text-align":"center"}},"1438",-1),nd={style:{"text-align":"left"}},dd={href:"https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",target:"_blank",rel:"noopener noreferrer"},sd=t("td",{style:{"text-align":"center"}},null,-1),_d={style:{"text-align":"left"}},cd=t("code",null,"队列",-1),id=t("code",null,"数组",-1),ad=t("code",null,"有序集合",-1),ud=t("code",null,"3+",-1),rd={style:{"text-align":"left"}},hd=t("td",{style:{"text-align":"center"}},"1499",-1),fd={style:{"text-align":"left"}},gd={href:"https://leetcode.com/problems/max-value-of-equation",target:"_blank",rel:"noopener noreferrer"},md=t("td",{style:{"text-align":"center"}},null,-1),yd={style:{"text-align":"left"}},xd=t("code",null,"队列",-1),bd=t("code",null,"数组",-1),pd=t("code",null,"滑动窗口",-1),kd=t("code",null,"2+",-1),qd={style:{"text-align":"left"}},Md=t("td",{style:{"text-align":"center"}},"1670",-1),wd={style:{"text-align":"left"}},Hd={href:"https://leetcode.com/problems/design-front-middle-back-queue",target:"_blank",rel:"noopener noreferrer"},vd=t("td",{style:{"text-align":"center"}},null,-1),Ed={style:{"text-align":"left"}},Id=t("code",null,"设计",-1),jd=t("code",null,"队列",-1),zd=t("code",null,"数组",-1),Od=t("code",null,"2+",-1),Kd={style:{"text-align":"left"}},Ld=t("td",{style:{"text-align":"center"}},"1687",-1),Vd={style:{"text-align":"left"}},Cd={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},Nd=t("td",{style:{"text-align":"center"}},null,-1),Bd={style:{"text-align":"left"}},Rd=t("code",null,"线段树",-1),Dd=t("code",null,"队列",-1),Pd=t("code",null,"数组",-1),Qd=t("code",null,"4+",-1),Td={style:{"text-align":"left"}},Ud=t("td",{style:{"text-align":"center"}},"1696",-1),Ad={style:{"text-align":"left"}},Fd={href:"https://leetcode.com/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},Gd=t("td",{style:{"text-align":"center"}},null,-1),Jd={style:{"text-align":"left"}},Sd=t("code",null,"队列",-1),Wd=t("code",null,"数组",-1),Xd=t("code",null,"动态规划",-1),Yd=t("code",null,"2+",-1),Zd={style:{"text-align":"left"}},$d=t("td",{style:{"text-align":"center"}},"1700",-1),ts={style:{"text-align":"left"}},es={href:"https://leetcode.com/problems/number-of-students-unable-to-eat-lunch",target:"_blank",rel:"noopener noreferrer"},os=t("td",{style:{"text-align":"center"}},null,-1),ls={style:{"text-align":"left"}},ns=t("code",null,"栈",-1),ds=t("code",null,"队列",-1),ss=t("code",null,"数组",-1),_s=t("code",null,"1+",-1),cs={style:{"text-align":"left"}},is=t("td",{style:{"text-align":"center"}},"1823",-1),as={style:{"text-align":"left"}},us={href:"https://leetcode.com/problems/find-the-winner-of-the-circular-game",target:"_blank",rel:"noopener noreferrer"},rs=t("td",{style:{"text-align":"center"}},null,-1),hs={style:{"text-align":"left"}},fs=t("code",null,"递归",-1),gs=t("code",null,"队列",-1),ms=t("code",null,"数组",-1),ys=t("code",null,"2+",-1),xs={style:{"text-align":"left"}},bs=t("td",{style:{"text-align":"center"}},"1825",-1),ps={style:{"text-align":"left"}},ks={href:"https://leetcode.com/problems/finding-mk-average",target:"_blank",rel:"noopener noreferrer"},qs=t("td",{style:{"text-align":"center"}},null,-1),Ms={style:{"text-align":"left"}},ws=t("code",null,"设计",-1),Hs=t("code",null,"队列",-1),vs=t("code",null,"数据流",-1),Es=t("code",null,"2+",-1),Is={style:{"text-align":"left"}},js=t("td",{style:{"text-align":"center"}},"2071",-1),zs={style:{"text-align":"left"}},Os={href:"https://leetcode.com/problems/maximum-number-of-tasks-you-can-assign",target:"_blank",rel:"noopener noreferrer"},Ks=t("td",{style:{"text-align":"center"}},null,-1),Ls={style:{"text-align":"left"}},Vs=t("code",null,"贪心",-1),Cs=t("code",null,"队列",-1),Ns=t("code",null,"数组",-1),Bs=t("code",null,"3+",-1),Rs={style:{"text-align":"left"}},Ds=t("td",{style:{"text-align":"center"}},"2073",-1),Ps={style:{"text-align":"left"}},Qs={href:"https://leetcode.com/problems/time-needed-to-buy-tickets",target:"_blank",rel:"noopener noreferrer"},Ts=t("td",{style:{"text-align":"center"}},null,-1),Us={style:{"text-align":"left"}},As=t("code",null,"队列",-1),Fs=t("code",null,"数组",-1),Gs=t("code",null,"模拟",-1),Js={style:{"text-align":"left"}},Ss=t("td",{style:{"text-align":"center"}},"2327",-1),Ws={style:{"text-align":"left"}},Xs={href:"https://leetcode.com/problems/number-of-people-aware-of-a-secret",target:"_blank",rel:"noopener noreferrer"},Ys=t("td",{style:{"text-align":"center"}},null,-1),Zs={style:{"text-align":"left"}},$s=t("code",null,"队列",-1),t_=t("code",null,"动态规划",-1),e_=t("code",null,"模拟",-1),o_={style:{"text-align":"left"}},l_=t("td",{style:{"text-align":"center"}},"2398",-1),n_={style:{"text-align":"left"}},d_={href:"https://leetcode.com/problems/maximum-number-of-robots-within-budget",target:"_blank",rel:"noopener noreferrer"},s_=t("td",{style:{"text-align":"center"}},null,-1),__={style:{"text-align":"left"}},c_=t("code",null,"队列",-1),i_=t("code",null,"数组",-1),a_=t("code",null,"二分查找",-1),u_=t("code",null,"4+",-1),r_={style:{"text-align":"left"}},h_=t("td",{style:{"text-align":"center"}},"2407",-1),f_={style:{"text-align":"left"}},g_={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},m_=t("td",{style:{"text-align":"center"}},null,-1),y_={style:{"text-align":"left"}},x_=t("code",null,"树状数组",-1),b_=t("code",null,"线段树",-1),p_=t("code",null,"队列",-1),k_=t("code",null,"4+",-1),q_={style:{"text-align":"left"}},M_=t("td",{style:{"text-align":"center"}},"2444",-1),w_={style:{"text-align":"left"}},H_={href:"https://leetcode.com/problems/count-subarrays-with-fixed-bounds",target:"_blank",rel:"noopener noreferrer"},v_=t("td",{style:{"text-align":"center"}},null,-1),E_={style:{"text-align":"left"}},I_=t("code",null,"队列",-1),j_=t("code",null,"数组",-1),z_=t("code",null,"滑动窗口",-1),O_=t("code",null,"1+",-1),K_={style:{"text-align":"left"}},L_=t("td",{style:{"text-align":"center"}},"2526",-1),V_={style:{"text-align":"left"}},C_={href:"https://leetcode.com/problems/find-consecutive-integers-from-a-data-stream",target:"_blank",rel:"noopener noreferrer"},N_=t("td",{style:{"text-align":"center"}},null,-1),B_={style:{"text-align":"left"}},R_=t("code",null,"设计",-1),D_=t("code",null,"队列",-1),P_=t("code",null,"哈希表",-1),Q_=t("code",null,"2+",-1),T_={style:{"text-align":"left"}},U_=t("td",{style:{"text-align":"center"}},"2528",-1),A_={style:{"text-align":"left"}},F_={href:"https://leetcode.com/problems/maximize-the-minimum-powered-city",target:"_blank",rel:"noopener noreferrer"},G_=t("td",{style:{"text-align":"center"}},null,-1),J_={style:{"text-align":"left"}},S_=t("code",null,"贪心",-1),W_=t("code",null,"队列",-1),X_=t("code",null,"数组",-1),Y_=t("code",null,"3+",-1),Z_={style:{"text-align":"left"}},$_=t("td",{style:{"text-align":"center"}},"2534",-1),tc={style:{"text-align":"left"}},ec={href:"https://leetcode.com/problems/time-taken-to-cross-the-door",target:"_blank",rel:"noopener noreferrer"},oc=t("td",{style:{"text-align":"center"}},null,-1),lc={style:{"text-align":"left"}},nc=t("code",null,"队列",-1),dc=t("code",null,"数组",-1),sc=t("code",null,"模拟",-1),_c={style:{"text-align":"left"}},cc=t("td",{style:{"text-align":"center"}},"2762",-1),ic={style:{"text-align":"left"}},ac={href:"https://leetcode.com/problems/continuous-subarrays",target:"_blank",rel:"noopener noreferrer"},uc=t("td",{style:{"text-align":"center"}},null,-1),rc={style:{"text-align":"left"}},hc=t("code",null,"队列",-1),fc=t("code",null,"数组",-1),gc=t("code",null,"有序集合",-1),mc=t("code",null,"3+",-1),yc={style:{"text-align":"left"}},xc=t("td",{style:{"text-align":"center"}},"2944",-1),bc={style:{"text-align":"left"}},pc={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},kc=t("td",{style:{"text-align":"center"}},null,-1),qc={style:{"text-align":"left"}},Mc=t("code",null,"队列",-1),wc=t("code",null,"数组",-1),Hc=t("code",null,"动态规划",-1),vc=t("code",null,"2+",-1),Ec={style:{"text-align":"left"}},Ic=t("td",{style:{"text-align":"center"}},"2945",-1),jc={style:{"text-align":"left"}},zc={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},Oc=t("td",{style:{"text-align":"center"}},null,-1),Kc={style:{"text-align":"left"}},Lc=t("code",null,"栈",-1),Vc=t("code",null,"队列",-1),Cc=t("code",null,"数组",-1),Nc=t("code",null,"4+",-1),Bc={style:{"text-align":"left"}},Rc=t("td",{style:{"text-align":"center"}},"2969",-1),Dc={style:{"text-align":"left"}},Pc={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},Qc=t("td",{style:{"text-align":"center"}},null,-1),Tc={style:{"text-align":"left"}},Uc=t("code",null,"队列",-1),Ac=t("code",null,"数组",-1),Fc=t("code",null,"动态规划",-1),Gc=t("code",null,"2+",-1),Jc={style:{"text-align":"left"}},Sc=t("td",{style:{"text-align":"center"}},"3117",-1),Wc={style:{"text-align":"left"}},Xc={href:"https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},Yc=t("td",{style:{"text-align":"center"}},null,-1),Zc={style:{"text-align":"left"}},$c=t("code",null,"位运算",-1),ti=t("code",null,"线段树",-1),ei=t("code",null,"队列",-1),oi=t("code",null,"3+",-1),li={style:{"text-align":"left"}},ni=t("td",{style:{"text-align":"center"}},"3191",-1),di={style:{"text-align":"left"}},si={href:"https://leetcode.com/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-i",target:"_blank",rel:"noopener noreferrer"},_i=t("td",{style:{"text-align":"center"}},null,-1),ci={style:{"text-align":"left"}},ii=t("code",null,"位运算",-1),ai=t("code",null,"队列",-1),ui=t("code",null,"数组",-1),ri=t("code",null,"2+",-1),hi={style:{"text-align":"left"}},fi=t("td",{style:{"text-align":"center"}},"LCP 23",-1),gi={style:{"text-align":"left"}},mi={href:"https://leetcode.cn/problems/er94lq",target:"_blank",rel:"noopener noreferrer"},yi=t("td",{style:{"text-align":"center"}},null,-1),xi={style:{"text-align":"left"}},bi=t("code",null,"队列",-1),pi=t("code",null,"数组",-1),ki=t("code",null,"模拟",-1),qi={style:{"text-align":"left"}},Mi=t("td",{style:{"text-align":"center"}},"剑指 Offer 09",-1),wi={style:{"text-align":"left"}},Hi={href:"https://leetcode.cn/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof",target:"_blank",rel:"noopener noreferrer"},vi={style:{"text-align":"center"}},Ei={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_09_1",target:"_blank",rel:"noopener noreferrer"},Ii={style:{"text-align":"left"}},ji=t("code",null,"栈",-1),zi=t("code",null,"设计",-1),Oi=t("code",null,"队列",-1),Ki={style:{"text-align":"left"}},Li=t("td",{style:{"text-align":"center"}},"剑指 Offer 50",-1),Vi={style:{"text-align":"left"}},Ci={href:"https://leetcode.cn/problems/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",target:"_blank",rel:"noopener noreferrer"},Ni={style:{"text-align":"center"}},Bi={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_50_1",target:"_blank",rel:"noopener noreferrer"},Ri={style:{"text-align":"left"}},Di=t("code",null,"队列",-1),Pi=t("code",null,"哈希表",-1),Qi=t("code",null,"字符串",-1),Ti=t("code",null,"1+",-1),Ui={style:{"text-align":"left"}},Ai=t("td",{style:{"text-align":"center"}},"剑指 Offer 59 - I",-1),Fi={style:{"text-align":"left"}},Gi={href:"https://leetcode.cn/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},Ji=t("td",{style:{"text-align":"center"}},null,-1),Si={style:{"text-align":"left"}},Wi=t("code",null,"队列",-1),Xi=t("code",null,"数组",-1),Yi=t("code",null,"滑动窗口",-1),Zi=t("code",null,"2+",-1),$i={style:{"text-align":"left"}},ta=t("td",{style:{"text-align":"center"}},"剑指 Offer 59 - II",-1),ea={style:{"text-align":"left"}},oa={href:"https://leetcode.cn/problems/dui-lie-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},la=t("td",{style:{"text-align":"center"}},null,-1),na={style:{"text-align":"left"}},da=t("code",null,"设计",-1),sa=t("code",null,"队列",-1),_a=t("code",null,"单调队列",-1),ca={style:{"text-align":"left"}},ia=t("td",{style:{"text-align":"center"}},"剑指 Offer II 41",-1),aa={style:{"text-align":"left"}},ua={href:"https://leetcode.cn/problems/qIsx9U",target:"_blank",rel:"noopener noreferrer"},ra=t("td",{style:{"text-align":"center"}},null,-1),ha={style:{"text-align":"left"}},fa=t("code",null,"设计",-1),ga=t("code",null,"队列",-1),ma=t("code",null,"数组",-1),ya=t("code",null,"1+",-1),xa={style:{"text-align":"left"}},ba=t("td",{style:{"text-align":"center"}},"剑指 Offer II 42",-1),pa={style:{"text-align":"left"}},ka={href:"https://leetcode.cn/problems/H8086Q",target:"_blank",rel:"noopener noreferrer"},qa=t("td",{style:{"text-align":"center"}},null,-1),Ma={style:{"text-align":"left"}},wa=t("code",null,"设计",-1),Ha=t("code",null,"队列",-1),va=t("code",null,"数据流",-1),Ea={style:{"text-align":"left"}},Ia=t("td",{style:{"text-align":"center"}},"面试题 03.04",-1),ja={style:{"text-align":"left"}},za={href:"https://leetcode.cn/problems/implement-queue-using-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},Oa=t("td",{style:{"text-align":"center"}},null,-1),Ka={style:{"text-align":"left"}},La=t("code",null,"栈",-1),Va=t("code",null,"设计",-1),Ca=t("code",null,"队列",-1),Na={style:{"text-align":"left"}},Ba=t("td",{style:{"text-align":"center"}},"面试题 03.06",-1),Ra={style:{"text-align":"left"}},Da={href:"https://leetcode.cn/problems/animal-shelter-lcci",target:"_blank",rel:"noopener noreferrer"},Pa=t("td",{style:{"text-align":"center"}},null,-1),Qa={style:{"text-align":"left"}},Ta=t("code",null,"设计",-1),Ua=t("code",null,"队列",-1),Aa={style:{"text-align":"left"}};function Fa(Ga,Ja){const n=_("RouterLink"),d=_("ExternalLinkIcon"),s=_("font");return i(),a("div",null,[h,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[q]),_:1}),o(),M,o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[A]),_:1})]),F,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Vt]),_:1})])]),Ct,u(" prettier-ignore "),t("table",null,[Nt,t("tbody",null,[t("tr",null,[Bt,t("td",Rt,[t("a",Dt,[o("用队列实现栈"),e(d)])]),t("td",Pt,[t("a",Qt,[o("[✓]"),e(d)])]),t("td",Tt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[At]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Ft]),_:1})]),t("td",Gt,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Jt,t("td",St,[t("a",Wt,[o("用栈实现队列"),e(d)])]),t("td",Xt,[t("a",Yt,[o("[✓]"),e(d)])]),t("td",Zt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[te]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[ee]),_:1})]),t("td",oe,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[le,t("td",ne,[t("a",de,[o("滑动窗口最大值"),e(d)])]),t("td",se,[t("a",_e,[o("[✓]"),e(d)])]),t("td",ce,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[ie]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ue]),_:1}),o(),re]),t("td",he,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[fe,t("td",ge,[t("a",me,[o("锯齿迭代器"),e(d)])]),ye,t("td",xe,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[be]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[pe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ke]),_:1}),o(),qe]),t("td",Me,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[we,t("td",He,[t("a",ve,[o("扁平化嵌套列表迭代器"),e(d)])]),Ee,t("td",Ie,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[je]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ze]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Oe]),_:1}),o(),Ke]),t("td",Le,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ve,t("td",Ce,[t("a",Ne,[o("数据流中的移动平均值"),e(d)])]),t("td",Be,[t("a",Re,[o("[✓]"),e(d)])]),t("td",De,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Pe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Qe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Te]),_:1}),o(),Ue]),t("td",Ae,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Fe,t("td",Ge,[t("a",Je,[o("贪吃蛇"),e(d)])]),Se,t("td",We,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Xe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Ye]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ze]),_:1}),o(),$e]),t("td",to,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[eo,t("td",oo,[t("a",lo,[o("敲击计数器"),e(d)])]),no,t("td",so,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[_o]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[co]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[io]),_:1}),o(),ao]),t("td",uo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ro,t("td",ho,[t("a",fo,[o("电话目录管理系统"),e(d)])]),t("td",go,[t("a",mo,[o("[✓]"),e(d)])]),t("td",yo,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[xo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[bo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[po]),_:1}),o(),ko]),t("td",qo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Mo,t("td",wo,[t("a",Ho,[o("字符串中的第一个唯一字符"),e(d)])]),vo,t("td",Eo,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Io]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[jo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[zo]),_:1}),o(),Oo]),t("td",Ko,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Lo,t("td",Vo,[t("a",Co,[o("设计循环队列"),e(d)])]),t("td",No,[t("a",Bo,[o("[✓]"),e(d)])]),t("td",Ro,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Do]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Po]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Qo]),_:1}),o(),To]),t("td",Uo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ao,t("td",Fo,[t("a",Go,[o("设计循环双端队列"),e(d)])]),t("td",Jo,[t("a",So,[o("[✓]"),e(d)])]),t("td",Wo,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Xo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Yo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Zo]),_:1}),o(),$o]),t("td",tl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[el,t("td",ol,[t("a",ll,[o("Dota2 参议院"),e(d)])]),nl,t("td",dl,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[sl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[_l]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[cl]),_:1})]),t("td",il,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[al,t("td",ul,[t("a",rl,[o("K 个关闭的灯泡"),e(d)])]),hl,t("td",fl,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[gl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[ml]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[yl]),_:1}),o(),xl]),t("td",bl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[pl,t("td",kl,[t("a",ql,[o("和至少为 K 的最短子数组"),e(d)])]),Ml,t("td",wl,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Hl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[vl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[El]),_:1}),o(),Il]),t("td",jl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[zl,t("td",Ol,[t("a",Kl,[o("环形子数组的最大和"),e(d)])]),t("td",Ll,[t("a",Vl,[o("[✓]"),e(d)])]),t("td",Cl,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Nl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Bl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Rl]),_:1}),o(),Dl]),t("td",Pl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ql,t("td",Tl,[t("a",Ul,[o("最近的请求次数"),e(d)])]),Al,t("td",Fl,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Gl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Jl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[Sl]),_:1})]),t("td",Wl,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Xl,t("td",Yl,[t("a",Zl,[o("戳印序列"),e(d)])]),$l,t("td",tn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[en]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[on]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[ln]),_:1}),o(),nn]),t("td",dn,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[sn,t("td",_n,[t("a",cn,[o("按递增顺序显示卡牌"),e(d)])]),an,t("td",un,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[rn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[fn]),_:1}),o(),gn]),t("td",mn,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yn,t("td",xn,[t("a",bn,[o("K 连续位的最小翻转次数"),e(d)])]),pn,t("td",kn,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[qn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Mn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[wn]),_:1}),o(),Hn]),t("td",vn,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[En,t("td",In,[t("a",jn,[o("最后 K 个数的乘积"),e(d)])]),zn,t("td",On,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Kn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Ln]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Vn]),_:1}),o(),Cn]),t("td",Nn,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Bn,t("td",Rn,[t("a",Dn,[o("带限制的子序列和"),e(d)])]),Pn,t("td",Qn,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Tn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Un]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[An]),_:1}),o(),Fn]),t("td",Gn,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Jn,t("td",Sn,[t("a",Wn,[o("第一个唯一数字"),e(d)])]),Xn,t("td",Yn,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Zn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[$n]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[td]),_:1}),o(),ed]),t("td",od,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ld,t("td",nd,[t("a",dd,[o("绝对差不超过限制的最长连续子数组"),e(d)])]),sd,t("td",_d,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[cd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[id]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[ad]),_:1}),o(),ud]),t("td",rd,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[hd,t("td",fd,[t("a",gd,[o("满足不等式的最大值"),e(d)])]),md,t("td",yd,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[xd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[bd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[pd]),_:1}),o(),kd]),t("td",qd,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Md,t("td",wd,[t("a",Hd,[o("设计前中后队列"),e(d)])]),vd,t("td",Ed,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Id]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[jd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[zd]),_:1}),o(),Od]),t("td",Kd,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ld,t("td",Vd,[t("a",Cd,[o("从仓库到码头运输箱子"),e(d)])]),Nd,t("td",Bd,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Rd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Dd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Pd]),_:1}),o(),Qd]),t("td",Td,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ud,t("td",Ad,[t("a",Fd,[o("跳跃游戏 VI"),e(d)])]),Gd,t("td",Jd,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Sd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Wd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Xd]),_:1}),o(),Yd]),t("td",Zd,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[$d,t("td",ts,[t("a",es,[o("无法吃午餐的学生数量"),e(d)])]),os,t("td",ls,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ns]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[ds]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ss]),_:1}),o(),_s]),t("td",cs,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[is,t("td",as,[t("a",us,[o("找出游戏的获胜者"),e(d)])]),rs,t("td",hs,[e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[fs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[gs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ms]),_:1}),o(),ys]),t("td",xs,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[bs,t("td",ps,[t("a",ks,[o("求出 MK 平均值"),e(d)])]),qs,t("td",Ms,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[ws]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Hs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[vs]),_:1}),o(),Es]),t("td",Is,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[js,t("td",zs,[t("a",Os,[o("你可以安排的最多任务数目"),e(d)])]),Ks,t("td",Ls,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Vs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Cs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ns]),_:1}),o(),Bs]),t("td",Rs,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ds,t("td",Ps,[t("a",Qs,[o("买票需要的时间"),e(d)])]),Ts,t("td",Us,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[As]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Fs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[Gs]),_:1})]),t("td",Js,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ss,t("td",Ws,[t("a",Xs,[o("知道秘密的人数"),e(d)])]),Ys,t("td",Zs,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[$s]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[t_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[e_]),_:1})]),t("td",o_,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[l_,t("td",n_,[t("a",d_,[o("预算内的最多机器人数目"),e(d)])]),s_,t("td",__,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[c_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[i_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[a_]),_:1}),o(),u_]),t("td",r_,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[h_,t("td",f_,[t("a",g_,[o("最长递增子序列 II"),e(d)])]),m_,t("td",y_,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[x_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[b_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[p_]),_:1}),o(),k_]),t("td",q_,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[M_,t("td",w_,[t("a",H_,[o("统计定界子数组的数目"),e(d)])]),v_,t("td",E_,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[I_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[j_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[z_]),_:1}),o(),O_]),t("td",K_,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[L_,t("td",V_,[t("a",C_,[o("找到数据流中的连续整数"),e(d)])]),N_,t("td",B_,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[R_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[D_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[P_]),_:1}),o(),Q_]),t("td",T_,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[U_,t("td",A_,[t("a",F_,[o("最大化城市的最小电量"),e(d)])]),G_,t("td",J_,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[S_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[W_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[X_]),_:1}),o(),Y_]),t("td",Z_,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$_,t("td",tc,[t("a",ec,[o("通过门的时间"),e(d)])]),oc,t("td",lc,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[nc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[dc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[sc]),_:1})]),t("td",_c,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[cc,t("td",ic,[t("a",ac,[o("不间断子数组"),e(d)])]),uc,t("td",rc,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[hc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[fc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[gc]),_:1}),o(),mc]),t("td",yc,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xc,t("td",bc,[t("a",pc,[o("购买水果需要的最少金币数"),e(d)])]),kc,t("td",qc,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Mc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[wc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Hc]),_:1}),o(),vc]),t("td",Ec,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ic,t("td",jc,[t("a",zc,[o("找到最大非递减数组的长度"),e(d)])]),Oc,t("td",Kc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Lc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Vc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Cc]),_:1}),o(),Nc]),t("td",Bc,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Rc,t("td",Dc,[t("a",Pc,[o("购买水果需要的最少金币数 II"),e(d)])]),Qc,t("td",Tc,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Uc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ac]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Fc]),_:1}),o(),Gc]),t("td",Jc,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Sc,t("td",Wc,[t("a",Xc,[o("划分数组得到最小的值之和"),e(d)])]),Yc,t("td",Zc,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[$c]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[ti]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[ei]),_:1}),o(),oi]),t("td",li,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ni,t("td",di,[t("a",si,[o("使二进制数组全部等于 1 的最少操作次数 I"),e(d)])]),_i,t("td",ci,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[ii]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[ai]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ui]),_:1}),o(),ri]),t("td",hi,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fi,t("td",gi,[t("a",mi,[o("魔术排列"),e(d)])]),yi,t("td",xi,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[bi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[pi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[ki]),_:1})]),t("td",qi,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Mi,t("td",wi,[t("a",Hi,[o("用两个栈实现队列"),e(d)])]),t("td",vi,[t("a",Ei,[o("[✓]"),e(d)])]),t("td",Ii,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ji]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[zi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Oi]),_:1})]),t("td",Ki,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Li,t("td",Vi,[t("a",Ci,[o("第一个只出现一次的字符"),e(d)])]),t("td",Ni,[t("a",Bi,[o("[✓]"),e(d)])]),t("td",Ri,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Di]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Pi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Qi]),_:1}),o(),Ti]),t("td",Ui,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ai,t("td",Fi,[t("a",Gi,[o("滑动窗口的最大值"),e(d)])]),Ji,t("td",Si,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Wi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Xi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[Yi]),_:1}),o(),Zi]),t("td",$i,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ta,t("td",ea,[t("a",oa,[o("队列的最大值"),e(d)])]),la,t("td",na,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[da]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[sa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[_a]),_:1})]),t("td",ca,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ia,t("td",aa,[t("a",ua,[o("滑动窗口的平均值"),e(d)])]),ra,t("td",ha,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[fa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[ga]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ma]),_:1}),o(),ya]),t("td",xa,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ba,t("td",pa,[t("a",ka,[o("最近请求次数"),e(d)])]),qa,t("td",Ma,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[wa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Ha]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[va]),_:1})]),t("td",Ea,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ia,t("td",ja,[t("a",za,[o("化栈为队"),e(d)])]),Oa,t("td",Ka,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[La]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Va]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Ca]),_:1})]),t("td",Na,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ba,t("td",Ra,[t("a",Da,[o("动物收容所"),e(d)])]),Pa,t("td",Qa,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Ta]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Ua]),_:1})]),t("td",Aa,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])])])])])}const Wa=c(r,[["render",Fa],["__file","queue.html.vue"]]);export{Wa as default};
