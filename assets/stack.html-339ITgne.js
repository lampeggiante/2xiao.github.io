import{_ as c,r as _,o as i,c as a,a as t,d as e,w as o,b as l,f as r}from"./app-5VBZs9Uu.js";const h={},u=t("h1",{id:"栈",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#栈","aria-hidden":"true"},"#"),l(" 栈")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),j=t("span",{class:"blue"},"栈",-1),k=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),H=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),E=t("code",null,"字符串匹配",-1),q=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),O=t("code",null,"二叉搜索树",-1),N=t("code",null,"最小生成树",-1),L=t("code",null,"图",-1),B=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),C=t("code",null,"最短路",-1),Q=t("code",null,"强连通分量",-1),R=t("code",null,"欧拉回路",-1),Z=t("code",null,"双连通分量",-1),G=t("code",null,"并查集",-1),K=t("code",null,"字典树",-1),S=t("code",null,"线段树",-1),T=t("code",null,"树状数组",-1),U=t("code",null,"后缀数组",-1),X=t("p",null,[t("strong",null,"算法")],-1),Y=t("code",null,"枚举",-1),A=t("code",null,"递归",-1),P=t("code",null,"分治",-1),D=t("code",null,"回溯",-1),F=t("code",null,"贪心",-1),J=t("code",null,"动态规划",-1),W=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),st=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),jt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),Ht=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),Et=t("code",null,"数据库",-1),qt=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Ot=t("code",null,"脑筋急转弯",-1),Nt=t("code",null,"交互",-1),Lt=t("code",null,"迭代器",-1),Bt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Ct=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Qt=t("td",{style:{"text-align":"center"}},"20",-1),Rt={style:{"text-align":"left"}},Zt={href:"https://leetcode.com/problems/valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Gt={style:{"text-align":"center"}},Kt={style:{"text-align":"left"}},St=t("code",null,"栈",-1),Tt=t("code",null,"字符串",-1),Ut={style:{"text-align":"left"}},Xt=t("td",{style:{"text-align":"center"}},"32",-1),Yt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/longest-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Pt={style:{"text-align":"center"}},Dt={style:{"text-align":"left"}},Ft=t("code",null,"栈",-1),Jt=t("code",null,"字符串",-1),Wt=t("code",null,"动态规划",-1),$t={style:{"text-align":"left"}},te=t("td",{style:{"text-align":"center"}},"42",-1),ee={style:{"text-align":"left"}},le={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},oe={style:{"text-align":"center"}},se={style:{"text-align":"left"}},ne=t("code",null,"栈",-1),de=t("code",null,"数组",-1),_e=t("code",null,"双指针",-1),ce=t("code",null,"2+",-1),ie={style:{"text-align":"left"}},ae=t("td",{style:{"text-align":"center"}},"71",-1),re={style:{"text-align":"left"}},he={href:"https://leetcode.com/problems/simplify-path",target:"_blank",rel:"noopener noreferrer"},ue={style:{"text-align":"center"}},fe={style:{"text-align":"left"}},ge=t("code",null,"栈",-1),me=t("code",null,"字符串",-1),ye={style:{"text-align":"left"}},xe=t("td",{style:{"text-align":"center"}},"84",-1),pe={style:{"text-align":"left"}},be={href:"https://leetcode.com/problems/largest-rectangle-in-histogram",target:"_blank",rel:"noopener noreferrer"},je={style:{"text-align":"center"}},ke={style:{"text-align":"left"}},Me=t("code",null,"栈",-1),ve=t("code",null,"数组",-1),Ie=t("code",null,"单调栈",-1),He={style:{"text-align":"left"}},we=t("td",{style:{"text-align":"center"}},"85",-1),Ee={style:{"text-align":"left"}},qe={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},ze={style:{"text-align":"center"}},Oe={style:{"text-align":"left"}},Ne=t("code",null,"栈",-1),Le=t("code",null,"数组",-1),Be=t("code",null,"动态规划",-1),Ve=t("code",null,"2+",-1),Ce={style:{"text-align":"left"}},Qe=t("td",{style:{"text-align":"center"}},"94",-1),Re={style:{"text-align":"left"}},Ze={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ge={style:{"text-align":"center"}},Ke={style:{"text-align":"left"}},Se=t("code",null,"栈",-1),Te=t("code",null,"树",-1),Ue=t("code",null,"深度优先搜索",-1),Xe=t("code",null,"1+",-1),Ye={style:{"text-align":"left"}},Ae=t("td",{style:{"text-align":"center"}},"114",-1),Pe={style:{"text-align":"left"}},De={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},Fe={style:{"text-align":"center"}},Je={style:{"text-align":"left"}},We=t("code",null,"栈",-1),$e=t("code",null,"树",-1),tl=t("code",null,"深度优先搜索",-1),el=t("code",null,"2+",-1),ll={style:{"text-align":"left"}},ol=t("td",{style:{"text-align":"center"}},"143",-1),sl={style:{"text-align":"left"}},nl={href:"https://leetcode.com/problems/reorder-list",target:"_blank",rel:"noopener noreferrer"},dl={style:{"text-align":"center"}},_l={style:{"text-align":"left"}},cl=t("code",null,"栈",-1),il=t("code",null,"递归",-1),al=t("code",null,"链表",-1),rl=t("code",null,"1+",-1),hl={style:{"text-align":"left"}},ul=t("td",{style:{"text-align":"center"}},"144",-1),fl={style:{"text-align":"left"}},gl={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},ml={style:{"text-align":"center"}},yl={style:{"text-align":"left"}},xl=t("code",null,"栈",-1),pl=t("code",null,"树",-1),bl=t("code",null,"深度优先搜索",-1),jl=t("code",null,"1+",-1),kl={style:{"text-align":"left"}},Ml=t("td",{style:{"text-align":"center"}},"145",-1),vl={style:{"text-align":"left"}},Il={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Hl={style:{"text-align":"center"}},wl={style:{"text-align":"left"}},El=t("code",null,"栈",-1),ql=t("code",null,"树",-1),zl=t("code",null,"深度优先搜索",-1),Ol=t("code",null,"1+",-1),Nl={style:{"text-align":"left"}},Ll=t("td",{style:{"text-align":"center"}},"150",-1),Bl={style:{"text-align":"left"}},Vl={href:"https://leetcode.com/problems/evaluate-reverse-polish-notation",target:"_blank",rel:"noopener noreferrer"},Cl={style:{"text-align":"center"}},Ql={style:{"text-align":"left"}},Rl=t("code",null,"栈",-1),Zl=t("code",null,"数组",-1),Gl=t("code",null,"数学",-1),Kl={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"155",-1),Tl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/min-stack",target:"_blank",rel:"noopener noreferrer"},Xl={style:{"text-align":"center"}},Yl={style:{"text-align":"left"}},Al=t("code",null,"栈",-1),Pl=t("code",null,"设计",-1),Dl={style:{"text-align":"left"}},Fl=t("td",{style:{"text-align":"center"}},"173",-1),Jl={style:{"text-align":"left"}},Wl={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},$l={style:{"text-align":"center"}},to={style:{"text-align":"left"}},eo=t("code",null,"栈",-1),lo=t("code",null,"树",-1),oo=t("code",null,"设计",-1),so=t("code",null,"3+",-1),no={style:{"text-align":"left"}},_o=t("td",{style:{"text-align":"center"}},"224",-1),co={style:{"text-align":"left"}},io={href:"https://leetcode.com/problems/basic-calculator",target:"_blank",rel:"noopener noreferrer"},ao={style:{"text-align":"center"}},ro={style:{"text-align":"left"}},ho=t("code",null,"栈",-1),uo=t("code",null,"递归",-1),fo=t("code",null,"数学",-1),go=t("code",null,"1+",-1),mo={style:{"text-align":"left"}},yo=t("td",{style:{"text-align":"center"}},"225",-1),xo={style:{"text-align":"left"}},po={href:"https://leetcode.com/problems/implement-stack-using-queues",target:"_blank",rel:"noopener noreferrer"},bo={style:{"text-align":"center"}},jo={style:{"text-align":"left"}},ko=t("code",null,"栈",-1),Mo=t("code",null,"设计",-1),vo=t("code",null,"队列",-1),Io={style:{"text-align":"left"}},Ho=t("td",{style:{"text-align":"center"}},"227",-1),wo={style:{"text-align":"left"}},Eo={href:"https://leetcode.com/problems/basic-calculator-ii",target:"_blank",rel:"noopener noreferrer"},qo={style:{"text-align":"center"}},zo={style:{"text-align":"left"}},Oo=t("code",null,"栈",-1),No=t("code",null,"数学",-1),Lo=t("code",null,"字符串",-1),Bo={style:{"text-align":"left"}},Vo=t("td",{style:{"text-align":"center"}},"232",-1),Co={style:{"text-align":"left"}},Qo={href:"https://leetcode.com/problems/implement-queue-using-stacks",target:"_blank",rel:"noopener noreferrer"},Ro={style:{"text-align":"center"}},Zo={style:{"text-align":"left"}},Go=t("code",null,"栈",-1),Ko=t("code",null,"设计",-1),So=t("code",null,"队列",-1),To={style:{"text-align":"left"}},Uo=t("td",{style:{"text-align":"center"}},"234",-1),Xo={style:{"text-align":"left"}},Yo={href:"https://leetcode.com/problems/palindrome-linked-list",target:"_blank",rel:"noopener noreferrer"},Ao={style:{"text-align":"center"}},Po={style:{"text-align":"left"}},Do=t("code",null,"栈",-1),Fo=t("code",null,"递归",-1),Jo=t("code",null,"链表",-1),Wo=t("code",null,"1+",-1),$o={style:{"text-align":"left"}},ts=t("td",{style:{"text-align":"center"}},"255",-1),es={style:{"text-align":"left"}},ls={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},os=t("td",{style:{"text-align":"center"}},null,-1),ss={style:{"text-align":"left"}},ns=t("code",null,"栈",-1),ds=t("code",null,"树",-1),_s=t("code",null,"二叉搜索树",-1),cs=t("code",null,"4+",-1),is={style:{"text-align":"left"}},as=t("td",{style:{"text-align":"center"}},"272",-1),rs={style:{"text-align":"left"}},hs={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},us=t("td",{style:{"text-align":"center"}},null,-1),fs={style:{"text-align":"left"}},gs=t("code",null,"栈",-1),ms=t("code",null,"树",-1),ys=t("code",null,"深度优先搜索",-1),xs=t("code",null,"4+",-1),ps={style:{"text-align":"left"}},bs=t("td",{style:{"text-align":"center"}},"316",-1),js={style:{"text-align":"left"}},ks={href:"https://leetcode.com/problems/remove-duplicate-letters",target:"_blank",rel:"noopener noreferrer"},Ms={style:{"text-align":"center"}},vs={style:{"text-align":"left"}},Is=t("code",null,"栈",-1),Hs=t("code",null,"贪心",-1),ws=t("code",null,"字符串",-1),Es=t("code",null,"1+",-1),qs={style:{"text-align":"left"}},zs=t("td",{style:{"text-align":"center"}},"321",-1),Os={style:{"text-align":"left"}},Ns={href:"https://leetcode.com/problems/create-maximum-number",target:"_blank",rel:"noopener noreferrer"},Ls=t("td",{style:{"text-align":"center"}},null,-1),Bs={style:{"text-align":"left"}},Vs=t("code",null,"栈",-1),Cs=t("code",null,"贪心",-1),Qs=t("code",null,"数组",-1),Rs=t("code",null,"2+",-1),Zs={style:{"text-align":"left"}},Gs=t("td",{style:{"text-align":"center"}},"331",-1),Ks={style:{"text-align":"left"}},Ss={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ts=t("td",{style:{"text-align":"center"}},null,-1),Us={style:{"text-align":"left"}},Xs=t("code",null,"栈",-1),Ys=t("code",null,"树",-1),As=t("code",null,"字符串",-1),Ps=t("code",null,"1+",-1),Ds={style:{"text-align":"left"}},Fs=t("td",{style:{"text-align":"center"}},"341",-1),Js={style:{"text-align":"left"}},Ws={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},$s=t("td",{style:{"text-align":"center"}},null,-1),tn={style:{"text-align":"left"}},en=t("code",null,"栈",-1),ln=t("code",null,"树",-1),on=t("code",null,"深度优先搜索",-1),sn=t("code",null,"3+",-1),nn={style:{"text-align":"left"}},dn=t("td",{style:{"text-align":"center"}},"364",-1),_n={style:{"text-align":"left"}},cn={href:"https://leetcode.com/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},an=t("td",{style:{"text-align":"center"}},null,-1),rn={style:{"text-align":"left"}},hn=t("code",null,"栈",-1),un=t("code",null,"深度优先搜索",-1),fn=t("code",null,"广度优先搜索",-1),gn={style:{"text-align":"left"}},mn=t("td",{style:{"text-align":"center"}},"385",-1),yn={style:{"text-align":"left"}},xn={href:"https://leetcode.com/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},pn=t("td",{style:{"text-align":"center"}},null,-1),bn={style:{"text-align":"left"}},jn=t("code",null,"栈",-1),kn=t("code",null,"深度优先搜索",-1),Mn=t("code",null,"字符串",-1),vn={style:{"text-align":"left"}},In=t("td",{style:{"text-align":"center"}},"388",-1),Hn={style:{"text-align":"left"}},wn={href:"https://leetcode.com/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},En=t("td",{style:{"text-align":"center"}},null,-1),qn={style:{"text-align":"left"}},zn=t("code",null,"栈",-1),On=t("code",null,"深度优先搜索",-1),Nn=t("code",null,"字符串",-1),Ln={style:{"text-align":"left"}},Bn=t("td",{style:{"text-align":"center"}},"394",-1),Vn={style:{"text-align":"left"}},Cn={href:"https://leetcode.com/problems/decode-string",target:"_blank",rel:"noopener noreferrer"},Qn={style:{"text-align":"center"}},Rn={style:{"text-align":"left"}},Zn=t("code",null,"栈",-1),Gn=t("code",null,"递归",-1),Kn=t("code",null,"字符串",-1),Sn={style:{"text-align":"left"}},Tn=t("td",{style:{"text-align":"center"}},"402",-1),Un={style:{"text-align":"left"}},Xn={href:"https://leetcode.com/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},Yn=t("td",{style:{"text-align":"center"}},null,-1),An={style:{"text-align":"left"}},Pn=t("code",null,"栈",-1),Dn=t("code",null,"贪心",-1),Fn=t("code",null,"字符串",-1),Jn=t("code",null,"1+",-1),Wn={style:{"text-align":"left"}},$n=t("td",{style:{"text-align":"center"}},"426",-1),td={style:{"text-align":"left"}},ed={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},ld={style:{"text-align":"center"}},od={style:{"text-align":"left"}},sd=t("code",null,"栈",-1),nd=t("code",null,"树",-1),dd=t("code",null,"深度优先搜索",-1),_d=t("code",null,"4+",-1),cd={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"439",-1),ad={style:{"text-align":"left"}},rd={href:"https://leetcode.com/problems/ternary-expression-parser",target:"_blank",rel:"noopener noreferrer"},hd=t("td",{style:{"text-align":"center"}},null,-1),ud={style:{"text-align":"left"}},fd=t("code",null,"栈",-1),gd=t("code",null,"递归",-1),md=t("code",null,"字符串",-1),yd={style:{"text-align":"left"}},xd=t("td",{style:{"text-align":"center"}},"445",-1),pd={style:{"text-align":"left"}},bd={href:"https://leetcode.com/problems/add-two-numbers-ii",target:"_blank",rel:"noopener noreferrer"},jd={style:{"text-align":"center"}},kd={style:{"text-align":"left"}},Md=t("code",null,"栈",-1),vd=t("code",null,"链表",-1),Id=t("code",null,"数学",-1),Hd={style:{"text-align":"left"}},wd=t("td",{style:{"text-align":"center"}},"456",-1),Ed={style:{"text-align":"left"}},qd={href:"https://leetcode.com/problems/132-pattern",target:"_blank",rel:"noopener noreferrer"},zd=t("td",{style:{"text-align":"center"}},null,-1),Od={style:{"text-align":"left"}},Nd=t("code",null,"栈",-1),Ld=t("code",null,"数组",-1),Bd=t("code",null,"二分查找",-1),Vd=t("code",null,"2+",-1),Cd={style:{"text-align":"left"}},Qd=t("td",{style:{"text-align":"center"}},"484",-1),Rd={style:{"text-align":"left"}},Zd={href:"https://leetcode.com/problems/find-permutation",target:"_blank",rel:"noopener noreferrer"},Gd=t("td",{style:{"text-align":"center"}},null,-1),Kd={style:{"text-align":"left"}},Sd=t("code",null,"栈",-1),Td=t("code",null,"贪心",-1),Ud=t("code",null,"数组",-1),Xd=t("code",null,"1+",-1),Yd={style:{"text-align":"left"}},Ad=t("td",{style:{"text-align":"center"}},"488",-1),Pd={style:{"text-align":"left"}},Dd={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},null,-1),Jd={style:{"text-align":"left"}},Wd=t("code",null,"栈",-1),$d=t("code",null,"广度优先搜索",-1),t_=t("code",null,"记忆化搜索",-1),e_=t("code",null,"2+",-1),l_={style:{"text-align":"left"}},o_=t("td",{style:{"text-align":"center"}},"496",-1),s_={style:{"text-align":"left"}},n_={href:"https://leetcode.com/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},d_={style:{"text-align":"center"}},__={style:{"text-align":"left"}},c_=t("code",null,"栈",-1),i_=t("code",null,"数组",-1),a_=t("code",null,"哈希表",-1),r_=t("code",null,"1+",-1),h_={style:{"text-align":"left"}},u_=t("td",{style:{"text-align":"center"}},"503",-1),f_={style:{"text-align":"left"}},g_={href:"https://leetcode.com/problems/next-greater-element-ii",target:"_blank",rel:"noopener noreferrer"},m_={style:{"text-align":"center"}},y_={style:{"text-align":"left"}},x_=t("code",null,"栈",-1),p_=t("code",null,"数组",-1),b_=t("code",null,"单调栈",-1),j_={style:{"text-align":"left"}},k_=t("td",{style:{"text-align":"center"}},"536",-1),M_={style:{"text-align":"left"}},v_={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},I_=t("td",{style:{"text-align":"center"}},null,-1),H_={style:{"text-align":"left"}},w_=t("code",null,"栈",-1),E_=t("code",null,"树",-1),q_=t("code",null,"深度优先搜索",-1),z_=t("code",null,"2+",-1),O_={style:{"text-align":"left"}},N_=t("td",{style:{"text-align":"center"}},"581",-1),L_={style:{"text-align":"left"}},B_={href:"https://leetcode.com/problems/shortest-unsorted-continuous-subarray",target:"_blank",rel:"noopener noreferrer"},V_=t("td",{style:{"text-align":"center"}},null,-1),C_={style:{"text-align":"left"}},Q_=t("code",null,"栈",-1),R_=t("code",null,"贪心",-1),Z_=t("code",null,"数组",-1),G_=t("code",null,"3+",-1),K_={style:{"text-align":"left"}},S_=t("td",{style:{"text-align":"center"}},"589",-1),T_={style:{"text-align":"left"}},U_={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},X_={style:{"text-align":"center"}},Y_={style:{"text-align":"left"}},A_=t("code",null,"栈",-1),P_=t("code",null,"树",-1),D_=t("code",null,"深度优先搜索",-1),F_={style:{"text-align":"left"}},J_=t("td",{style:{"text-align":"center"}},"590",-1),W_={style:{"text-align":"left"}},$_={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},tc={style:{"text-align":"center"}},ec={style:{"text-align":"left"}},lc=t("code",null,"栈",-1),oc=t("code",null,"树",-1),sc=t("code",null,"深度优先搜索",-1),nc={style:{"text-align":"left"}},dc=t("td",{style:{"text-align":"center"}},"591",-1),_c={style:{"text-align":"left"}},cc={href:"https://leetcode.com/problems/tag-validator",target:"_blank",rel:"noopener noreferrer"},ic=t("td",{style:{"text-align":"center"}},null,-1),ac={style:{"text-align":"left"}},rc=t("code",null,"栈",-1),hc=t("code",null,"字符串",-1),uc={style:{"text-align":"left"}},fc=t("td",{style:{"text-align":"center"}},"636",-1),gc={style:{"text-align":"left"}},mc={href:"https://leetcode.com/problems/exclusive-time-of-functions",target:"_blank",rel:"noopener noreferrer"},yc=t("td",{style:{"text-align":"center"}},null,-1),xc={style:{"text-align":"left"}},pc=t("code",null,"栈",-1),bc=t("code",null,"数组",-1),jc={style:{"text-align":"left"}},kc=t("td",{style:{"text-align":"center"}},"654",-1),Mc={style:{"text-align":"left"}},vc={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ic={style:{"text-align":"center"}},Hc={style:{"text-align":"left"}},wc=t("code",null,"栈",-1),Ec=t("code",null,"树",-1),qc=t("code",null,"数组",-1),zc=t("code",null,"3+",-1),Oc={style:{"text-align":"left"}},Nc=t("td",{style:{"text-align":"center"}},"678",-1),Lc={style:{"text-align":"left"}},Bc={href:"https://leetcode.com/problems/valid-parenthesis-string",target:"_blank",rel:"noopener noreferrer"},Vc={style:{"text-align":"center"}},Cc={style:{"text-align":"left"}},Qc=t("code",null,"栈",-1),Rc=t("code",null,"贪心",-1),Zc=t("code",null,"字符串",-1),Gc=t("code",null,"1+",-1),Kc={style:{"text-align":"left"}},Sc=t("td",{style:{"text-align":"center"}},"682",-1),Tc={style:{"text-align":"left"}},Uc={href:"https://leetcode.com/problems/baseball-game",target:"_blank",rel:"noopener noreferrer"},Xc={style:{"text-align":"center"}},Yc={style:{"text-align":"left"}},Ac=t("code",null,"栈",-1),Pc=t("code",null,"数组",-1),Dc=t("code",null,"模拟",-1),Fc={style:{"text-align":"left"}},Jc=t("td",{style:{"text-align":"center"}},"716",-1),Wc={style:{"text-align":"left"}},$c={href:"https://leetcode.com/problems/max-stack",target:"_blank",rel:"noopener noreferrer"},ti=t("td",{style:{"text-align":"center"}},null,-1),ei={style:{"text-align":"left"}},li=t("code",null,"栈",-1),oi=t("code",null,"设计",-1),si=t("code",null,"链表",-1),ni=t("code",null,"2+",-1),di={style:{"text-align":"left"}},_i=t("td",{style:{"text-align":"center"}},"726",-1),ci={style:{"text-align":"left"}},ii={href:"https://leetcode.com/problems/number-of-atoms",target:"_blank",rel:"noopener noreferrer"},ai=t("td",{style:{"text-align":"center"}},null,-1),ri={style:{"text-align":"left"}},hi=t("code",null,"栈",-1),ui=t("code",null,"哈希表",-1),fi=t("code",null,"字符串",-1),gi=t("code",null,"1+",-1),mi={style:{"text-align":"left"}},yi=t("td",{style:{"text-align":"center"}},"735",-1),xi={style:{"text-align":"left"}},pi={href:"https://leetcode.com/problems/asteroid-collision",target:"_blank",rel:"noopener noreferrer"},bi=t("td",{style:{"text-align":"center"}},null,-1),ji={style:{"text-align":"left"}},ki=t("code",null,"栈",-1),Mi=t("code",null,"数组",-1),vi=t("code",null,"模拟",-1),Ii={style:{"text-align":"left"}},Hi=t("td",{style:{"text-align":"center"}},"736",-1),wi={style:{"text-align":"left"}},Ei={href:"https://leetcode.com/problems/parse-lisp-expression",target:"_blank",rel:"noopener noreferrer"},qi=t("td",{style:{"text-align":"center"}},null,-1),zi={style:{"text-align":"left"}},Oi=t("code",null,"栈",-1),Ni=t("code",null,"递归",-1),Li=t("code",null,"哈希表",-1),Bi=t("code",null,"1+",-1),Vi={style:{"text-align":"left"}},Ci=t("td",{style:{"text-align":"center"}},"739",-1),Qi={style:{"text-align":"left"}},Ri={href:"https://leetcode.com/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},Zi={style:{"text-align":"center"}},Gi={style:{"text-align":"left"}},Ki=t("code",null,"栈",-1),Si=t("code",null,"数组",-1),Ti=t("code",null,"单调栈",-1),Ui={style:{"text-align":"left"}},Xi=t("td",{style:{"text-align":"center"}},"768",-1),Yi={style:{"text-align":"left"}},Ai={href:"https://leetcode.com/problems/max-chunks-to-make-sorted-ii",target:"_blank",rel:"noopener noreferrer"},Pi=t("td",{style:{"text-align":"center"}},null,-1),Di={style:{"text-align":"left"}},Fi=t("code",null,"栈",-1),Ji=t("code",null,"贪心",-1),Wi=t("code",null,"数组",-1),$i=t("code",null,"2+",-1),ta={style:{"text-align":"left"}},ea=t("td",{style:{"text-align":"center"}},"769",-1),la={style:{"text-align":"left"}},oa={href:"https://leetcode.com/problems/max-chunks-to-make-sorted",target:"_blank",rel:"noopener noreferrer"},sa=t("td",{style:{"text-align":"center"}},null,-1),na={style:{"text-align":"left"}},da=t("code",null,"栈",-1),_a=t("code",null,"贪心",-1),ca=t("code",null,"数组",-1),ia=t("code",null,"2+",-1),aa={style:{"text-align":"left"}},ra=t("td",{style:{"text-align":"center"}},"770",-1),ha={style:{"text-align":"left"}},ua={href:"https://leetcode.com/problems/basic-calculator-iv",target:"_blank",rel:"noopener noreferrer"},fa=t("td",{style:{"text-align":"center"}},null,-1),ga={style:{"text-align":"left"}},ma=t("code",null,"栈",-1),ya=t("code",null,"递归",-1),xa=t("code",null,"哈希表",-1),pa=t("code",null,"2+",-1),ba={style:{"text-align":"left"}},ja=t("td",{style:{"text-align":"center"}},"772",-1),ka={style:{"text-align":"left"}},Ma={href:"https://leetcode.com/problems/basic-calculator-iii",target:"_blank",rel:"noopener noreferrer"},va={style:{"text-align":"center"}},Ia={style:{"text-align":"left"}},Ha=t("code",null,"栈",-1),wa=t("code",null,"递归",-1),Ea=t("code",null,"数学",-1),qa=t("code",null,"1+",-1),za={style:{"text-align":"left"}},Oa=t("td",{style:{"text-align":"center"}},"844",-1),Na={style:{"text-align":"left"}},La={href:"https://leetcode.com/problems/backspace-string-compare",target:"_blank",rel:"noopener noreferrer"},Ba={style:{"text-align":"center"}},Va={style:{"text-align":"left"}},Ca=t("code",null,"栈",-1),Qa=t("code",null,"双指针",-1),Ra=t("code",null,"字符串",-1),Za=t("code",null,"1+",-1),Ga={style:{"text-align":"left"}},Ka=t("td",{style:{"text-align":"center"}},"853",-1),Sa={style:{"text-align":"left"}},Ta={href:"https://leetcode.com/problems/car-fleet",target:"_blank",rel:"noopener noreferrer"},Ua=t("td",{style:{"text-align":"center"}},null,-1),Xa={style:{"text-align":"left"}},Ya=t("code",null,"栈",-1),Aa=t("code",null,"数组",-1),Pa=t("code",null,"排序",-1),Da=t("code",null,"1+",-1),Fa={style:{"text-align":"left"}},Ja=t("td",{style:{"text-align":"center"}},"856",-1),Wa={style:{"text-align":"left"}},$a={href:"https://leetcode.com/problems/score-of-parentheses",target:"_blank",rel:"noopener noreferrer"},t1=t("td",{style:{"text-align":"center"}},null,-1),e1={style:{"text-align":"left"}},l1=t("code",null,"栈",-1),o1=t("code",null,"字符串",-1),s1={style:{"text-align":"left"}},n1=t("td",{style:{"text-align":"center"}},"880",-1),d1={style:{"text-align":"left"}},_1={href:"https://leetcode.com/problems/decoded-string-at-index",target:"_blank",rel:"noopener noreferrer"},c1={style:{"text-align":"center"}},i1={style:{"text-align":"left"}},a1=t("code",null,"栈",-1),r1=t("code",null,"字符串",-1),h1={style:{"text-align":"left"}},u1=t("td",{style:{"text-align":"center"}},"895",-1),f1={style:{"text-align":"left"}},g1={href:"https://leetcode.com/problems/maximum-frequency-stack",target:"_blank",rel:"noopener noreferrer"},m1=t("td",{style:{"text-align":"center"}},null,-1),y1={style:{"text-align":"left"}},x1=t("code",null,"栈",-1),p1=t("code",null,"设计",-1),b1=t("code",null,"哈希表",-1),j1=t("code",null,"1+",-1),k1={style:{"text-align":"left"}},M1=t("td",{style:{"text-align":"center"}},"897",-1),v1={style:{"text-align":"left"}},I1={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},H1=t("td",{style:{"text-align":"center"}},null,-1),w1={style:{"text-align":"left"}},E1=t("code",null,"栈",-1),q1=t("code",null,"树",-1),z1=t("code",null,"深度优先搜索",-1),O1=t("code",null,"2+",-1),N1={style:{"text-align":"left"}},L1=t("td",{style:{"text-align":"center"}},"901",-1),B1={style:{"text-align":"left"}},V1={href:"https://leetcode.com/problems/online-stock-span",target:"_blank",rel:"noopener noreferrer"},C1=t("td",{style:{"text-align":"center"}},null,-1),Q1={style:{"text-align":"left"}},R1=t("code",null,"栈",-1),Z1=t("code",null,"设计",-1),G1=t("code",null,"数据流",-1),K1=t("code",null,"1+",-1),S1={style:{"text-align":"left"}},T1=t("td",{style:{"text-align":"center"}},"907",-1),U1={style:{"text-align":"left"}},X1={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},Y1=t("td",{style:{"text-align":"center"}},null,-1),A1={style:{"text-align":"left"}},P1=t("code",null,"栈",-1),D1=t("code",null,"数组",-1),F1=t("code",null,"动态规划",-1),J1=t("code",null,"1+",-1),W1={style:{"text-align":"left"}},$1=t("td",{style:{"text-align":"center"}},"921",-1),tr={style:{"text-align":"left"}},er={href:"https://leetcode.com/problems/minimum-add-to-make-parentheses-valid",target:"_blank",rel:"noopener noreferrer"},lr={style:{"text-align":"center"}},or={style:{"text-align":"left"}},sr=t("code",null,"栈",-1),nr=t("code",null,"贪心",-1),dr=t("code",null,"字符串",-1),_r={style:{"text-align":"left"}},cr=t("td",{style:{"text-align":"center"}},"936",-1),ir={style:{"text-align":"left"}},ar={href:"https://leetcode.com/problems/stamping-the-sequence",target:"_blank",rel:"noopener noreferrer"},rr=t("td",{style:{"text-align":"center"}},null,-1),hr={style:{"text-align":"left"}},ur=t("code",null,"栈",-1),fr=t("code",null,"贪心",-1),gr=t("code",null,"队列",-1),mr=t("code",null,"1+",-1),yr={style:{"text-align":"left"}},xr=t("td",{style:{"text-align":"center"}},"946",-1),pr={style:{"text-align":"left"}},br={href:"https://leetcode.com/problems/validate-stack-sequences",target:"_blank",rel:"noopener noreferrer"},jr={style:{"text-align":"center"}},kr={style:{"text-align":"left"}},Mr=t("code",null,"栈",-1),vr=t("code",null,"数组",-1),Ir=t("code",null,"模拟",-1),Hr={style:{"text-align":"left"}},wr=t("td",{style:{"text-align":"center"}},"962",-1),Er={style:{"text-align":"left"}},qr={href:"https://leetcode.com/problems/maximum-width-ramp",target:"_blank",rel:"noopener noreferrer"},zr={style:{"text-align":"center"}},Or={style:{"text-align":"left"}},Nr=t("code",null,"栈",-1),Lr=t("code",null,"数组",-1),Br=t("code",null,"单调栈",-1),Vr={style:{"text-align":"left"}},Cr=t("td",{style:{"text-align":"center"}},"975",-1),Qr={style:{"text-align":"left"}},Rr={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},Zr=t("td",{style:{"text-align":"center"}},null,-1),Gr={style:{"text-align":"left"}},Kr=t("code",null,"栈",-1),Sr=t("code",null,"数组",-1),Tr=t("code",null,"动态规划",-1),Ur=t("code",null,"2+",-1),Xr={style:{"text-align":"left"}},Yr=t("td",{style:{"text-align":"center"}},"1003",-1),Ar={style:{"text-align":"left"}},Pr={href:"https://leetcode.com/problems/check-if-word-is-valid-after-substitutions",target:"_blank",rel:"noopener noreferrer"},Dr=t("td",{style:{"text-align":"center"}},null,-1),Fr={style:{"text-align":"left"}},Jr=t("code",null,"栈",-1),Wr=t("code",null,"字符串",-1),$r={style:{"text-align":"left"}},th=t("td",{style:{"text-align":"center"}},"1006",-1),eh={style:{"text-align":"left"}},lh={href:"https://leetcode.com/problems/clumsy-factorial",target:"_blank",rel:"noopener noreferrer"},oh=t("td",{style:{"text-align":"center"}},null,-1),sh={style:{"text-align":"left"}},nh=t("code",null,"栈",-1),dh=t("code",null,"数学",-1),_h=t("code",null,"模拟",-1),ch={style:{"text-align":"left"}},ih=t("td",{style:{"text-align":"center"}},"1008",-1),ah={style:{"text-align":"left"}},rh={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},hh={style:{"text-align":"center"}},uh={style:{"text-align":"left"}},fh=t("code",null,"栈",-1),gh=t("code",null,"树",-1),mh=t("code",null,"二叉搜索树",-1),yh=t("code",null,"3+",-1),xh={style:{"text-align":"left"}},ph=t("td",{style:{"text-align":"center"}},"1019",-1),bh={style:{"text-align":"left"}},jh={href:"https://leetcode.com/problems/next-greater-node-in-linked-list",target:"_blank",rel:"noopener noreferrer"},kh=t("td",{style:{"text-align":"center"}},null,-1),Mh={style:{"text-align":"left"}},vh=t("code",null,"栈",-1),Ih=t("code",null,"数组",-1),Hh=t("code",null,"链表",-1),wh=t("code",null,"1+",-1),Eh={style:{"text-align":"left"}},qh=t("td",{style:{"text-align":"center"}},"1021",-1),zh={style:{"text-align":"left"}},Oh={href:"https://leetcode.com/problems/remove-outermost-parentheses",target:"_blank",rel:"noopener noreferrer"},Nh={style:{"text-align":"center"}},Lh={style:{"text-align":"left"}},Bh=t("code",null,"栈",-1),Vh=t("code",null,"字符串",-1),Ch={style:{"text-align":"left"}},Qh=t("td",{style:{"text-align":"center"}},"1047",-1),Rh={style:{"text-align":"left"}},Zh={href:"https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string",target:"_blank",rel:"noopener noreferrer"},Gh={style:{"text-align":"center"}},Kh={style:{"text-align":"left"}},Sh=t("code",null,"栈",-1),Th=t("code",null,"字符串",-1),Uh={style:{"text-align":"left"}},Xh=t("td",{style:{"text-align":"center"}},"1063",-1),Yh={style:{"text-align":"left"}},Ah={href:"https://leetcode.com/problems/number-of-valid-subarrays",target:"_blank",rel:"noopener noreferrer"},Ph=t("td",{style:{"text-align":"center"}},null,-1),Dh={style:{"text-align":"left"}},Fh=t("code",null,"栈",-1),Jh=t("code",null,"数组",-1),Wh=t("code",null,"单调栈",-1),$h={style:{"text-align":"left"}},tu=t("td",{style:{"text-align":"center"}},"1081",-1),eu={style:{"text-align":"left"}},lu={href:"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters",target:"_blank",rel:"noopener noreferrer"},ou={style:{"text-align":"center"}},su={style:{"text-align":"left"}},nu=t("code",null,"栈",-1),du=t("code",null,"贪心",-1),_u=t("code",null,"字符串",-1),cu=t("code",null,"1+",-1),iu={style:{"text-align":"left"}},au=t("td",{style:{"text-align":"center"}},"1096",-1),ru={style:{"text-align":"left"}},hu={href:"https://leetcode.com/problems/brace-expansion-ii",target:"_blank",rel:"noopener noreferrer"},uu=t("td",{style:{"text-align":"center"}},null,-1),fu={style:{"text-align":"left"}},gu=t("code",null,"栈",-1),mu=t("code",null,"广度优先搜索",-1),yu=t("code",null,"字符串",-1),xu=t("code",null,"1+",-1),pu={style:{"text-align":"left"}},bu=t("td",{style:{"text-align":"center"}},"1106",-1),ju={style:{"text-align":"left"}},ku={href:"https://leetcode.com/problems/parsing-a-boolean-expression",target:"_blank",rel:"noopener noreferrer"},Mu=t("td",{style:{"text-align":"center"}},null,-1),vu={style:{"text-align":"left"}},Iu=t("code",null,"栈",-1),Hu=t("code",null,"递归",-1),wu=t("code",null,"字符串",-1),Eu={style:{"text-align":"left"}},qu=t("td",{style:{"text-align":"center"}},"1111",-1),zu={style:{"text-align":"left"}},Ou={href:"https://leetcode.com/problems/maximum-nesting-depth-of-two-valid-parentheses-strings",target:"_blank",rel:"noopener noreferrer"},Nu=t("td",{style:{"text-align":"center"}},null,-1),Lu={style:{"text-align":"left"}},Bu=t("code",null,"栈",-1),Vu=t("code",null,"字符串",-1),Cu={style:{"text-align":"left"}},Qu=t("td",{style:{"text-align":"center"}},"1124",-1),Ru={style:{"text-align":"left"}},Zu={href:"https://leetcode.com/problems/longest-well-performing-interval",target:"_blank",rel:"noopener noreferrer"},Gu=t("td",{style:{"text-align":"center"}},null,-1),Ku={style:{"text-align":"left"}},Su=t("code",null,"栈",-1),Tu=t("code",null,"数组",-1),Uu=t("code",null,"哈希表",-1),Xu=t("code",null,"2+",-1),Yu={style:{"text-align":"left"}},Au=t("td",{style:{"text-align":"center"}},"1130",-1),Pu={style:{"text-align":"left"}},Du={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},Fu=t("td",{style:{"text-align":"center"}},null,-1),Ju={style:{"text-align":"left"}},Wu=t("code",null,"栈",-1),$u=t("code",null,"贪心",-1),tf=t("code",null,"数组",-1),ef=t("code",null,"2+",-1),lf={style:{"text-align":"left"}},of=t("td",{style:{"text-align":"center"}},"1172",-1),sf={style:{"text-align":"left"}},nf={href:"https://leetcode.com/problems/dinner-plate-stacks",target:"_blank",rel:"noopener noreferrer"},df=t("td",{style:{"text-align":"center"}},null,-1),_f={style:{"text-align":"left"}},cf=t("code",null,"栈",-1),af=t("code",null,"设计",-1),rf=t("code",null,"哈希表",-1),hf=t("code",null,"1+",-1),uf={style:{"text-align":"left"}},ff=t("td",{style:{"text-align":"center"}},"1190",-1),gf={style:{"text-align":"left"}},mf={href:"https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses",target:"_blank",rel:"noopener noreferrer"},yf={style:{"text-align":"center"}},xf={style:{"text-align":"left"}},pf=t("code",null,"栈",-1),bf=t("code",null,"字符串",-1),jf={style:{"text-align":"left"}},kf=t("td",{style:{"text-align":"center"}},"1209",-1),Mf={style:{"text-align":"left"}},vf={href:"https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii",target:"_blank",rel:"noopener noreferrer"},If=t("td",{style:{"text-align":"center"}},null,-1),Hf={style:{"text-align":"left"}},wf=t("code",null,"栈",-1),Ef=t("code",null,"字符串",-1),qf={style:{"text-align":"left"}},zf=t("td",{style:{"text-align":"center"}},"1214",-1),Of={style:{"text-align":"left"}},Nf={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},Lf=t("td",{style:{"text-align":"center"}},null,-1),Bf={style:{"text-align":"left"}},Vf=t("code",null,"栈",-1),Cf=t("code",null,"树",-1),Qf=t("code",null,"深度优先搜索",-1),Rf=t("code",null,"4+",-1),Zf={style:{"text-align":"left"}},Gf=t("td",{style:{"text-align":"center"}},"1249",-1),Kf={style:{"text-align":"left"}},Sf={href:"https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Tf=t("td",{style:{"text-align":"center"}},null,-1),Uf={style:{"text-align":"left"}},Xf=t("code",null,"栈",-1),Yf=t("code",null,"字符串",-1),Af={style:{"text-align":"left"}},Pf=t("td",{style:{"text-align":"center"}},"1265",-1),Df={style:{"text-align":"left"}},Ff={href:"https://leetcode.com/problems/print-immutable-linked-list-in-reverse",target:"_blank",rel:"noopener noreferrer"},Jf=t("td",{style:{"text-align":"center"}},null,-1),Wf={style:{"text-align":"left"}},$f=t("code",null,"栈",-1),tg=t("code",null,"递归",-1),eg=t("code",null,"链表",-1),lg=t("code",null,"1+",-1),og={style:{"text-align":"left"}},sg=t("td",{style:{"text-align":"center"}},"1381",-1),ng={style:{"text-align":"left"}},dg={href:"https://leetcode.com/problems/design-a-stack-with-increment-operation",target:"_blank",rel:"noopener noreferrer"},_g={style:{"text-align":"center"}},cg={style:{"text-align":"left"}},ig=t("code",null,"栈",-1),ag=t("code",null,"设计",-1),rg=t("code",null,"数组",-1),hg={style:{"text-align":"left"}},ug=t("td",{style:{"text-align":"center"}},"1441",-1),fg={style:{"text-align":"left"}},gg={href:"https://leetcode.com/problems/build-an-array-with-stack-operations",target:"_blank",rel:"noopener noreferrer"},mg={style:{"text-align":"center"}},yg={style:{"text-align":"left"}},xg=t("code",null,"栈",-1),pg=t("code",null,"数组",-1),bg=t("code",null,"模拟",-1),jg={style:{"text-align":"left"}},kg=t("td",{style:{"text-align":"center"}},"1472",-1),Mg={style:{"text-align":"left"}},vg={href:"https://leetcode.com/problems/design-browser-history",target:"_blank",rel:"noopener noreferrer"},Ig={style:{"text-align":"center"}},Hg={style:{"text-align":"left"}},wg=t("code",null,"栈",-1),Eg=t("code",null,"设计",-1),qg=t("code",null,"数组",-1),zg=t("code",null,"3+",-1),Og={style:{"text-align":"left"}},Ng=t("td",{style:{"text-align":"center"}},"1475",-1),Lg={style:{"text-align":"left"}},Bg={href:"https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop",target:"_blank",rel:"noopener noreferrer"},Vg={style:{"text-align":"center"}},Cg={style:{"text-align":"left"}},Qg=t("code",null,"栈",-1),Rg=t("code",null,"数组",-1),Zg=t("code",null,"单调栈",-1),Gg={style:{"text-align":"left"}},Kg=t("td",{style:{"text-align":"center"}},"1504",-1),Sg={style:{"text-align":"left"}},Tg={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},Ug=t("td",{style:{"text-align":"center"}},null,-1),Xg={style:{"text-align":"left"}},Yg=t("code",null,"栈",-1),Ag=t("code",null,"数组",-1),Pg=t("code",null,"动态规划",-1),Dg=t("code",null,"2+",-1),Fg={style:{"text-align":"left"}},Jg=t("td",{style:{"text-align":"center"}},"1526",-1),Wg={style:{"text-align":"left"}},$g={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},tm=t("td",{style:{"text-align":"center"}},null,-1),em={style:{"text-align":"left"}},lm=t("code",null,"栈",-1),om=t("code",null,"贪心",-1),sm=t("code",null,"数组",-1),nm=t("code",null,"2+",-1),dm={style:{"text-align":"left"}},_m=t("td",{style:{"text-align":"center"}},"1541",-1),cm={style:{"text-align":"left"}},im={href:"https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string",target:"_blank",rel:"noopener noreferrer"},am=t("td",{style:{"text-align":"center"}},null,-1),rm={style:{"text-align":"left"}},hm=t("code",null,"栈",-1),um=t("code",null,"贪心",-1),fm=t("code",null,"字符串",-1),gm={style:{"text-align":"left"}},mm=t("td",{style:{"text-align":"center"}},"1544",-1),ym={style:{"text-align":"left"}},xm={href:"https://leetcode.com/problems/make-the-string-great",target:"_blank",rel:"noopener noreferrer"},pm=t("td",{style:{"text-align":"center"}},null,-1),bm={style:{"text-align":"left"}},jm=t("code",null,"栈",-1),km=t("code",null,"字符串",-1),Mm={style:{"text-align":"left"}},vm=t("td",{style:{"text-align":"center"}},"1574",-1),Im={style:{"text-align":"left"}},Hm={href:"https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted",target:"_blank",rel:"noopener noreferrer"},wm=t("td",{style:{"text-align":"center"}},null,-1),Em={style:{"text-align":"left"}},qm=t("code",null,"栈",-1),zm=t("code",null,"数组",-1),Om=t("code",null,"双指针",-1),Nm=t("code",null,"2+",-1),Lm={style:{"text-align":"left"}},Bm=t("td",{style:{"text-align":"center"}},"1586",-1),Vm={style:{"text-align":"left"}},Cm={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},Qm=t("td",{style:{"text-align":"center"}},null,-1),Rm={style:{"text-align":"left"}},Zm=t("code",null,"栈",-1),Gm=t("code",null,"树",-1),Km=t("code",null,"设计",-1),Sm=t("code",null,"3+",-1),Tm={style:{"text-align":"left"}},Um=t("td",{style:{"text-align":"center"}},"1597",-1),Xm={style:{"text-align":"left"}},Ym={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},Am=t("td",{style:{"text-align":"center"}},null,-1),Pm={style:{"text-align":"left"}},Dm=t("code",null,"栈",-1),Fm=t("code",null,"树",-1),Jm=t("code",null,"字符串",-1),Wm=t("code",null,"1+",-1),$m={style:{"text-align":"left"}},ty=t("td",{style:{"text-align":"center"}},"1598",-1),ey={style:{"text-align":"left"}},ly={href:"https://leetcode.com/problems/crawler-log-folder",target:"_blank",rel:"noopener noreferrer"},oy=t("td",{style:{"text-align":"center"}},null,-1),sy={style:{"text-align":"left"}},ny=t("code",null,"栈",-1),dy=t("code",null,"数组",-1),_y=t("code",null,"字符串",-1),cy={style:{"text-align":"left"}},iy=t("td",{style:{"text-align":"center"}},"1614",-1),ay={style:{"text-align":"left"}},ry={href:"https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses",target:"_blank",rel:"noopener noreferrer"},hy=t("td",{style:{"text-align":"center"}},null,-1),uy={style:{"text-align":"left"}},fy=t("code",null,"栈",-1),gy=t("code",null,"字符串",-1),my={style:{"text-align":"left"}},yy=t("td",{style:{"text-align":"center"}},"1628",-1),xy={style:{"text-align":"left"}},py={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},by=t("td",{style:{"text-align":"center"}},null,-1),jy={style:{"text-align":"left"}},ky=t("code",null,"栈",-1),My=t("code",null,"树",-1),vy=t("code",null,"设计",-1),Iy=t("code",null,"3+",-1),Hy={style:{"text-align":"left"}},wy=t("td",{style:{"text-align":"center"}},"1653",-1),Ey={style:{"text-align":"left"}},qy={href:"https://leetcode.com/problems/minimum-deletions-to-make-string-balanced",target:"_blank",rel:"noopener noreferrer"},zy=t("td",{style:{"text-align":"center"}},null,-1),Oy={style:{"text-align":"left"}},Ny=t("code",null,"栈",-1),Ly=t("code",null,"字符串",-1),By=t("code",null,"动态规划",-1),Vy={style:{"text-align":"left"}},Cy=t("td",{style:{"text-align":"center"}},"1673",-1),Qy={style:{"text-align":"left"}},Ry={href:"https://leetcode.com/problems/find-the-most-competitive-subsequence",target:"_blank",rel:"noopener noreferrer"},Zy=t("td",{style:{"text-align":"center"}},null,-1),Gy={style:{"text-align":"left"}},Ky=t("code",null,"栈",-1),Sy=t("code",null,"贪心",-1),Ty=t("code",null,"数组",-1),Uy=t("code",null,"1+",-1),Xy={style:{"text-align":"left"}},Yy=t("td",{style:{"text-align":"center"}},"1700",-1),Ay={style:{"text-align":"left"}},Py={href:"https://leetcode.com/problems/number-of-students-unable-to-eat-lunch",target:"_blank",rel:"noopener noreferrer"},Dy=t("td",{style:{"text-align":"center"}},null,-1),Fy={style:{"text-align":"left"}},Jy=t("code",null,"栈",-1),Wy=t("code",null,"队列",-1),$y=t("code",null,"数组",-1),tx=t("code",null,"1+",-1),ex={style:{"text-align":"left"}},lx=t("td",{style:{"text-align":"center"}},"1717",-1),ox={style:{"text-align":"left"}},sx={href:"https://leetcode.com/problems/maximum-score-from-removing-substrings",target:"_blank",rel:"noopener noreferrer"},nx=t("td",{style:{"text-align":"center"}},null,-1),dx={style:{"text-align":"left"}},_x=t("code",null,"栈",-1),cx=t("code",null,"贪心",-1),ix=t("code",null,"字符串",-1),ax={style:{"text-align":"left"}},rx=t("td",{style:{"text-align":"center"}},"1756",-1),hx={style:{"text-align":"left"}},ux={href:"https://leetcode.com/problems/design-most-recently-used-queue",target:"_blank",rel:"noopener noreferrer"},fx=t("td",{style:{"text-align":"center"}},null,-1),gx={style:{"text-align":"left"}},mx=t("code",null,"栈",-1),yx=t("code",null,"设计",-1),xx=t("code",null,"树状数组",-1),px=t("code",null,"3+",-1),bx={style:{"text-align":"left"}},jx=t("td",{style:{"text-align":"center"}},"1762",-1),kx={style:{"text-align":"left"}},Mx={href:"https://leetcode.com/problems/buildings-with-an-ocean-view",target:"_blank",rel:"noopener noreferrer"},vx=t("td",{style:{"text-align":"center"}},null,-1),Ix={style:{"text-align":"left"}},Hx=t("code",null,"栈",-1),wx=t("code",null,"数组",-1),Ex=t("code",null,"单调栈",-1),qx={style:{"text-align":"left"}},zx=t("td",{style:{"text-align":"center"}},"1776",-1),Ox={style:{"text-align":"left"}},Nx={href:"https://leetcode.com/problems/car-fleet-ii",target:"_blank",rel:"noopener noreferrer"},Lx=t("td",{style:{"text-align":"center"}},null,-1),Bx={style:{"text-align":"left"}},Vx=t("code",null,"栈",-1),Cx=t("code",null,"数组",-1),Qx=t("code",null,"数学",-1),Rx=t("code",null,"2+",-1),Zx={style:{"text-align":"left"}},Gx=t("td",{style:{"text-align":"center"}},"1793",-1),Kx={style:{"text-align":"left"}},Sx={href:"https://leetcode.com/problems/maximum-score-of-a-good-subarray",target:"_blank",rel:"noopener noreferrer"},Tx=t("td",{style:{"text-align":"center"}},null,-1),Ux={style:{"text-align":"left"}},Xx=t("code",null,"栈",-1),Yx=t("code",null,"数组",-1),Ax=t("code",null,"双指针",-1),Px=t("code",null,"2+",-1),Dx={style:{"text-align":"left"}},Fx=t("td",{style:{"text-align":"center"}},"1856",-1),Jx={style:{"text-align":"left"}},Wx={href:"https://leetcode.com/problems/maximum-subarray-min-product",target:"_blank",rel:"noopener noreferrer"},$x=t("td",{style:{"text-align":"center"}},null,-1),t0={style:{"text-align":"left"}},e0=t("code",null,"栈",-1),l0=t("code",null,"数组",-1),o0=t("code",null,"前缀和",-1),s0=t("code",null,"1+",-1),n0={style:{"text-align":"left"}},d0=t("td",{style:{"text-align":"center"}},"1896",-1),_0={style:{"text-align":"left"}},c0={href:"https://leetcode.com/problems/minimum-cost-to-change-the-final-value-of-expression",target:"_blank",rel:"noopener noreferrer"},i0=t("td",{style:{"text-align":"center"}},null,-1),a0={style:{"text-align":"left"}},r0=t("code",null,"栈",-1),h0=t("code",null,"数学",-1),u0=t("code",null,"字符串",-1),f0=t("code",null,"1+",-1),g0={style:{"text-align":"left"}},m0=t("td",{style:{"text-align":"center"}},"1910",-1),y0={style:{"text-align":"left"}},x0={href:"https://leetcode.com/problems/remove-all-occurrences-of-a-substring",target:"_blank",rel:"noopener noreferrer"},p0=t("td",{style:{"text-align":"center"}},null,-1),b0={style:{"text-align":"left"}},j0=t("code",null,"栈",-1),k0=t("code",null,"字符串",-1),M0=t("code",null,"模拟",-1),v0={style:{"text-align":"left"}},I0=t("td",{style:{"text-align":"center"}},"1944",-1),H0={style:{"text-align":"left"}},w0={href:"https://leetcode.com/problems/number-of-visible-people-in-a-queue",target:"_blank",rel:"noopener noreferrer"},E0=t("td",{style:{"text-align":"center"}},null,-1),q0={style:{"text-align":"left"}},z0=t("code",null,"栈",-1),O0=t("code",null,"数组",-1),N0=t("code",null,"单调栈",-1),L0={style:{"text-align":"left"}},B0=t("td",{style:{"text-align":"center"}},"1950",-1),V0={style:{"text-align":"left"}},C0={href:"https://leetcode.com/problems/maximum-of-minimum-values-in-all-subarrays",target:"_blank",rel:"noopener noreferrer"},Q0=t("td",{style:{"text-align":"center"}},null,-1),R0={style:{"text-align":"left"}},Z0=t("code",null,"栈",-1),G0=t("code",null,"数组",-1),K0=t("code",null,"单调栈",-1),S0={style:{"text-align":"left"}},T0=t("td",{style:{"text-align":"center"}},"1963",-1),U0={style:{"text-align":"left"}},X0={href:"https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-string-balanced",target:"_blank",rel:"noopener noreferrer"},Y0={style:{"text-align":"center"}},A0={style:{"text-align":"left"}},P0=t("code",null,"栈",-1),D0=t("code",null,"贪心",-1),F0=t("code",null,"双指针",-1),J0=t("code",null,"1+",-1),W0={style:{"text-align":"left"}},$0=t("td",{style:{"text-align":"center"}},"1996",-1),tp={style:{"text-align":"left"}},ep={href:"https://leetcode.com/problems/the-number-of-weak-characters-in-the-game",target:"_blank",rel:"noopener noreferrer"},lp=t("td",{style:{"text-align":"center"}},null,-1),op={style:{"text-align":"left"}},sp=t("code",null,"栈",-1),np=t("code",null,"贪心",-1),dp=t("code",null,"数组",-1),_p=t("code",null,"2+",-1),cp={style:{"text-align":"left"}},ip=t("td",{style:{"text-align":"center"}},"2000",-1),ap={style:{"text-align":"left"}},rp={href:"https://leetcode.com/problems/reverse-prefix-of-word",target:"_blank",rel:"noopener noreferrer"},hp=t("td",{style:{"text-align":"center"}},null,-1),up={style:{"text-align":"left"}},fp=t("code",null,"栈",-1),gp=t("code",null,"双指针",-1),mp=t("code",null,"字符串",-1),yp={style:{"text-align":"left"}},xp=t("td",{style:{"text-align":"center"}},"2019",-1),pp={style:{"text-align":"left"}},bp={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},jp=t("td",{style:{"text-align":"center"}},null,-1),kp={style:{"text-align":"left"}},Mp=t("code",null,"栈",-1),vp=t("code",null,"记忆化搜索",-1),Ip=t("code",null,"数组",-1),Hp=t("code",null,"3+",-1),wp={style:{"text-align":"left"}},Ep=t("td",{style:{"text-align":"center"}},"2030",-1),qp={style:{"text-align":"left"}},zp={href:"https://leetcode.com/problems/smallest-k-length-subsequence-with-occurrences-of-a-letter",target:"_blank",rel:"noopener noreferrer"},Op=t("td",{style:{"text-align":"center"}},null,-1),Np={style:{"text-align":"left"}},Lp=t("code",null,"栈",-1),Bp=t("code",null,"贪心",-1),Vp=t("code",null,"字符串",-1),Cp=t("code",null,"1+",-1),Qp={style:{"text-align":"left"}},Rp=t("td",{style:{"text-align":"center"}},"2104",-1),Zp={style:{"text-align":"left"}},Gp={href:"https://leetcode.com/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},Kp=t("td",{style:{"text-align":"center"}},null,-1),Sp={style:{"text-align":"left"}},Tp=t("code",null,"栈",-1),Up=t("code",null,"数组",-1),Xp=t("code",null,"单调栈",-1),Yp={style:{"text-align":"left"}},Ap=t("td",{style:{"text-align":"center"}},"2116",-1),Pp={style:{"text-align":"left"}},Dp={href:"https://leetcode.com/problems/check-if-a-parentheses-string-can-be-valid",target:"_blank",rel:"noopener noreferrer"},Fp=t("td",{style:{"text-align":"center"}},null,-1),Jp={style:{"text-align":"left"}},Wp=t("code",null,"栈",-1),$p=t("code",null,"贪心",-1),t3=t("code",null,"字符串",-1),e3={style:{"text-align":"left"}},l3=t("td",{style:{"text-align":"center"}},"2130",-1),o3={style:{"text-align":"left"}},s3={href:"https://leetcode.com/problems/maximum-twin-sum-of-a-linked-list",target:"_blank",rel:"noopener noreferrer"},n3=t("td",{style:{"text-align":"center"}},null,-1),d3={style:{"text-align":"left"}},_3=t("code",null,"栈",-1),c3=t("code",null,"链表",-1),i3=t("code",null,"双指针",-1),a3={style:{"text-align":"left"}},r3=t("td",{style:{"text-align":"center"}},"2197",-1),h3={style:{"text-align":"left"}},u3={href:"https://leetcode.com/problems/replace-non-coprime-numbers-in-array",target:"_blank",rel:"noopener noreferrer"},f3=t("td",{style:{"text-align":"center"}},null,-1),g3={style:{"text-align":"left"}},m3=t("code",null,"栈",-1),y3=t("code",null,"数组",-1),x3=t("code",null,"数学",-1),p3=t("code",null,"1+",-1),b3={style:{"text-align":"left"}},j3=t("td",{style:{"text-align":"center"}},"2211",-1),k3={style:{"text-align":"left"}},M3={href:"https://leetcode.com/problems/count-collisions-on-a-road",target:"_blank",rel:"noopener noreferrer"},v3=t("td",{style:{"text-align":"center"}},null,-1),I3={style:{"text-align":"left"}},H3=t("code",null,"栈",-1),w3=t("code",null,"字符串",-1),E3=t("code",null,"模拟",-1),q3={style:{"text-align":"left"}},z3=t("td",{style:{"text-align":"center"}},"2216",-1),O3={style:{"text-align":"left"}},N3={href:"https://leetcode.com/problems/minimum-deletions-to-make-array-beautiful",target:"_blank",rel:"noopener noreferrer"},L3=t("td",{style:{"text-align":"center"}},null,-1),B3={style:{"text-align":"left"}},V3=t("code",null,"栈",-1),C3=t("code",null,"贪心",-1),Q3=t("code",null,"数组",-1),R3={style:{"text-align":"left"}},Z3=t("td",{style:{"text-align":"center"}},"2254",-1),G3={style:{"text-align":"left"}},K3={href:"https://leetcode.com/problems/design-video-sharing-platform",target:"_blank",rel:"noopener noreferrer"},S3=t("td",{style:{"text-align":"center"}},null,-1),T3={style:{"text-align":"left"}},U3=t("code",null,"栈",-1),X3=t("code",null,"设计",-1),Y3=t("code",null,"哈希表",-1),A3=t("code",null,"1+",-1),P3={style:{"text-align":"left"}},D3=t("td",{style:{"text-align":"center"}},"2281",-1),F3={style:{"text-align":"left"}},J3={href:"https://leetcode.com/problems/sum-of-total-strength-of-wizards",target:"_blank",rel:"noopener noreferrer"},W3=t("td",{style:{"text-align":"center"}},null,-1),$3={style:{"text-align":"left"}},tb=t("code",null,"栈",-1),eb=t("code",null,"数组",-1),lb=t("code",null,"前缀和",-1),ob=t("code",null,"1+",-1),sb={style:{"text-align":"left"}},nb=t("td",{style:{"text-align":"center"}},"2282",-1),db={style:{"text-align":"left"}},_b={href:"https://leetcode.com/problems/number-of-people-that-can-be-seen-in-a-grid",target:"_blank",rel:"noopener noreferrer"},cb=t("td",{style:{"text-align":"center"}},null,-1),ib={style:{"text-align":"left"}},ab=t("code",null,"栈",-1),rb=t("code",null,"数组",-1),hb=t("code",null,"矩阵",-1),ub=t("code",null,"1+",-1),fb={style:{"text-align":"left"}},gb=t("td",{style:{"text-align":"center"}},"2289",-1),mb={style:{"text-align":"left"}},yb={href:"https://leetcode.com/problems/steps-to-make-array-non-decreasing",target:"_blank",rel:"noopener noreferrer"},xb=t("td",{style:{"text-align":"center"}},null,-1),pb={style:{"text-align":"left"}},bb=t("code",null,"栈",-1),jb=t("code",null,"数组",-1),kb=t("code",null,"链表",-1),Mb=t("code",null,"1+",-1),vb={style:{"text-align":"left"}},Ib=t("td",{style:{"text-align":"center"}},"2296",-1),Hb={style:{"text-align":"left"}},wb={href:"https://leetcode.com/problems/design-a-text-editor",target:"_blank",rel:"noopener noreferrer"},Eb=t("td",{style:{"text-align":"center"}},null,-1),qb={style:{"text-align":"left"}},zb=t("code",null,"栈",-1),Ob=t("code",null,"设计",-1),Nb=t("code",null,"链表",-1),Lb=t("code",null,"3+",-1),Bb={style:{"text-align":"left"}},Vb=t("td",{style:{"text-align":"center"}},"2297",-1),Cb={style:{"text-align":"left"}},Qb={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},Rb=t("td",{style:{"text-align":"center"}},null,-1),Zb={style:{"text-align":"left"}},Gb=t("code",null,"栈",-1),Kb=t("code",null,"图",-1),Sb=t("code",null,"数组",-1),Tb=t("code",null,"3+",-1),Ub={style:{"text-align":"left"}},Xb=t("td",{style:{"text-align":"center"}},"2334",-1),Yb={style:{"text-align":"left"}},Ab={href:"https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},Pb=t("td",{style:{"text-align":"center"}},null,-1),Db={style:{"text-align":"left"}},Fb=t("code",null,"栈",-1),Jb=t("code",null,"并查集",-1),Wb=t("code",null,"数组",-1),$b=t("code",null,"1+",-1),t2={style:{"text-align":"left"}},e2=t("td",{style:{"text-align":"center"}},"2345",-1),l2={style:{"text-align":"left"}},o2={href:"https://leetcode.com/problems/finding-the-number-of-visible-mountains",target:"_blank",rel:"noopener noreferrer"},s2=t("td",{style:{"text-align":"center"}},null,-1),n2={style:{"text-align":"left"}},d2=t("code",null,"栈",-1),_2=t("code",null,"数组",-1),c2=t("code",null,"排序",-1),i2=t("code",null,"1+",-1),a2={style:{"text-align":"left"}},r2=t("td",{style:{"text-align":"center"}},"2355",-1),h2={style:{"text-align":"left"}},u2={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},f2=t("td",{style:{"text-align":"center"}},null,-1),g2={style:{"text-align":"left"}},m2=t("code",null,"栈",-1),y2=t("code",null,"数组",-1),x2=t("code",null,"动态规划",-1),p2=t("code",null,"1+",-1),b2={style:{"text-align":"left"}},j2=t("td",{style:{"text-align":"center"}},"2375",-1),k2={style:{"text-align":"left"}},M2={href:"https://leetcode.com/problems/construct-smallest-number-from-di-string",target:"_blank",rel:"noopener noreferrer"},v2=t("td",{style:{"text-align":"center"}},null,-1),I2={style:{"text-align":"left"}},H2=t("code",null,"栈",-1),w2=t("code",null,"贪心",-1),E2=t("code",null,"字符串",-1),q2=t("code",null,"1+",-1),z2={style:{"text-align":"left"}},O2=t("td",{style:{"text-align":"center"}},"2390",-1),N2={style:{"text-align":"left"}},L2={href:"https://leetcode.com/problems/removing-stars-from-a-string",target:"_blank",rel:"noopener noreferrer"},B2=t("td",{style:{"text-align":"center"}},null,-1),V2={style:{"text-align":"left"}},C2=t("code",null,"栈",-1),Q2=t("code",null,"字符串",-1),R2=t("code",null,"模拟",-1),Z2={style:{"text-align":"left"}},G2=t("td",{style:{"text-align":"center"}},"2434",-1),K2={style:{"text-align":"left"}},S2={href:"https://leetcode.com/problems/using-a-robot-to-print-the-lexicographically-smallest-string",target:"_blank",rel:"noopener noreferrer"},T2=t("td",{style:{"text-align":"center"}},null,-1),U2={style:{"text-align":"left"}},X2=t("code",null,"栈",-1),Y2=t("code",null,"贪心",-1),A2=t("code",null,"哈希表",-1),P2=t("code",null,"1+",-1),D2={style:{"text-align":"left"}},F2=t("td",{style:{"text-align":"center"}},"2454",-1),J2={style:{"text-align":"left"}},W2={href:"https://leetcode.com/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},$2=t("td",{style:{"text-align":"center"}},null,-1),t4={style:{"text-align":"left"}},e4=t("code",null,"栈",-1),l4=t("code",null,"数组",-1),o4=t("code",null,"二分查找",-1),s4=t("code",null,"3+",-1),n4={style:{"text-align":"left"}},d4=t("td",{style:{"text-align":"center"}},"2487",-1),_4={style:{"text-align":"left"}},c4={href:"https://leetcode.com/problems/remove-nodes-from-linked-list",target:"_blank",rel:"noopener noreferrer"},i4=t("td",{style:{"text-align":"center"}},null,-1),a4={style:{"text-align":"left"}},r4=t("code",null,"栈",-1),h4=t("code",null,"递归",-1),u4=t("code",null,"链表",-1),f4=t("code",null,"1+",-1),g4={style:{"text-align":"left"}},m4=t("td",{style:{"text-align":"center"}},"2589",-1),y4={style:{"text-align":"left"}},x4={href:"https://leetcode.com/problems/minimum-time-to-complete-all-tasks",target:"_blank",rel:"noopener noreferrer"},p4=t("td",{style:{"text-align":"center"}},null,-1),b4={style:{"text-align":"left"}},j4=t("code",null,"栈",-1),k4=t("code",null,"贪心",-1),M4=t("code",null,"数组",-1),v4=t("code",null,"2+",-1),I4={style:{"text-align":"left"}},H4=t("td",{style:{"text-align":"center"}},"2617",-1),w4={style:{"text-align":"left"}},E4={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},q4=t("td",{style:{"text-align":"center"}},null,-1),z4={style:{"text-align":"left"}},O4=t("code",null,"栈",-1),N4=t("code",null,"广度优先搜索",-1),L4=t("code",null,"并查集",-1),B4=t("code",null,"5+",-1),V4={style:{"text-align":"left"}},C4=t("td",{style:{"text-align":"center"}},"2645",-1),Q4={style:{"text-align":"left"}},R4={href:"https://leetcode.com/problems/minimum-additions-to-make-valid-string",target:"_blank",rel:"noopener noreferrer"},Z4=t("td",{style:{"text-align":"center"}},null,-1),G4={style:{"text-align":"left"}},K4=t("code",null,"栈",-1),S4=t("code",null,"贪心",-1),T4=t("code",null,"字符串",-1),U4=t("code",null,"1+",-1),X4={style:{"text-align":"left"}},Y4=t("td",{style:{"text-align":"center"}},"2696",-1),A4={style:{"text-align":"left"}},P4={href:"https://leetcode.com/problems/minimum-string-length-after-removing-substrings",target:"_blank",rel:"noopener noreferrer"},D4={style:{"text-align":"center"}},F4={style:{"text-align":"left"}},J4=t("code",null,"栈",-1),W4=t("code",null,"字符串",-1),$4=t("code",null,"模拟",-1),t6={style:{"text-align":"left"}},e6=t("td",{style:{"text-align":"center"}},"2736",-1),l6={style:{"text-align":"left"}},o6={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},s6=t("td",{style:{"text-align":"center"}},null,-1),n6={style:{"text-align":"left"}},d6=t("code",null,"栈",-1),_6=t("code",null,"树状数组",-1),c6=t("code",null,"线段树",-1),i6=t("code",null,"4+",-1),a6={style:{"text-align":"left"}},r6=t("td",{style:{"text-align":"center"}},"2751",-1),h6={style:{"text-align":"left"}},u6={href:"https://leetcode.com/problems/robot-collisions",target:"_blank",rel:"noopener noreferrer"},f6=t("td",{style:{"text-align":"center"}},null,-1),g6={style:{"text-align":"left"}},m6=t("code",null,"栈",-1),y6=t("code",null,"数组",-1),x6=t("code",null,"排序",-1),p6=t("code",null,"1+",-1),b6={style:{"text-align":"left"}},j6=t("td",{style:{"text-align":"center"}},"2764",-1),k6={style:{"text-align":"left"}},M6={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},v6=t("td",{style:{"text-align":"center"}},null,-1),I6={style:{"text-align":"left"}},H6=t("code",null,"栈",-1),w6=t("code",null,"树",-1),E6=t("code",null,"深度优先搜索",-1),q6=t("code",null,"1+",-1),z6={style:{"text-align":"left"}},O6=t("td",{style:{"text-align":"center"}},"2813",-1),N6={style:{"text-align":"left"}},L6={href:"https://leetcode.com/problems/maximum-elegance-of-a-k-length-subsequence",target:"_blank",rel:"noopener noreferrer"},B6=t("td",{style:{"text-align":"center"}},null,-1),V6={style:{"text-align":"left"}},C6=t("code",null,"栈",-1),Q6=t("code",null,"贪心",-1),R6=t("code",null,"数组",-1),Z6=t("code",null,"3+",-1),G6={style:{"text-align":"left"}},K6=t("td",{style:{"text-align":"center"}},"2816",-1),S6={style:{"text-align":"left"}},T6={href:"https://leetcode.com/problems/double-a-number-represented-as-a-linked-list",target:"_blank",rel:"noopener noreferrer"},U6=t("td",{style:{"text-align":"center"}},null,-1),X6={style:{"text-align":"left"}},Y6=t("code",null,"栈",-1),A6=t("code",null,"链表",-1),P6=t("code",null,"数学",-1),D6={style:{"text-align":"left"}},F6=t("td",{style:{"text-align":"center"}},"2818",-1),J6={style:{"text-align":"left"}},W6={href:"https://leetcode.com/problems/apply-operations-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},$6=t("td",{style:{"text-align":"center"}},null,-1),t8={style:{"text-align":"left"}},e8=t("code",null,"栈",-1),l8=t("code",null,"贪心",-1),o8=t("code",null,"数组",-1),s8=t("code",null,"3+",-1),n8={style:{"text-align":"left"}},d8=t("td",{style:{"text-align":"center"}},"2832",-1),_8={style:{"text-align":"left"}},c8={href:"https://leetcode.com/problems/maximal-range-that-each-element-is-maximum-in-it",target:"_blank",rel:"noopener noreferrer"},i8=t("td",{style:{"text-align":"center"}},null,-1),a8={style:{"text-align":"left"}},r8=t("code",null,"栈",-1),h8=t("code",null,"数组",-1),u8=t("code",null,"单调栈",-1),f8={style:{"text-align":"left"}},g8=t("td",{style:{"text-align":"center"}},"2863",-1),m8={style:{"text-align":"left"}},y8={href:"https://leetcode.com/problems/maximum-length-of-semi-decreasing-subarrays",target:"_blank",rel:"noopener noreferrer"},x8=t("td",{style:{"text-align":"center"}},null,-1),p8={style:{"text-align":"left"}},b8=t("code",null,"栈",-1),j8=t("code",null,"数组",-1),k8=t("code",null,"排序",-1),M8=t("code",null,"1+",-1),v8={style:{"text-align":"left"}},I8=t("td",{style:{"text-align":"center"}},"2865",-1),H8={style:{"text-align":"left"}},w8={href:"https://leetcode.com/problems/beautiful-towers-i",target:"_blank",rel:"noopener noreferrer"},E8=t("td",{style:{"text-align":"center"}},null,-1),q8={style:{"text-align":"left"}},z8=t("code",null,"栈",-1),O8=t("code",null,"数组",-1),N8=t("code",null,"单调栈",-1),L8={style:{"text-align":"left"}},B8=t("td",{style:{"text-align":"center"}},"2866",-1),V8={style:{"text-align":"left"}},C8={href:"https://leetcode.com/problems/beautiful-towers-ii",target:"_blank",rel:"noopener noreferrer"},Q8=t("td",{style:{"text-align":"center"}},null,-1),R8={style:{"text-align":"left"}},Z8=t("code",null,"栈",-1),G8=t("code",null,"数组",-1),K8=t("code",null,"单调栈",-1),S8={style:{"text-align":"left"}},T8=t("td",{style:{"text-align":"center"}},"2940",-1),U8={style:{"text-align":"left"}},X8={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},Y8=t("td",{style:{"text-align":"center"}},null,-1),A8={style:{"text-align":"left"}},P8=t("code",null,"栈",-1),D8=t("code",null,"树状数组",-1),F8=t("code",null,"线段树",-1),J8=t("code",null,"4+",-1),W8={style:{"text-align":"left"}},$8=t("td",{style:{"text-align":"center"}},"2945",-1),tj={style:{"text-align":"left"}},ej={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},lj=t("td",{style:{"text-align":"center"}},null,-1),oj={style:{"text-align":"left"}},sj=t("code",null,"栈",-1),nj=t("code",null,"队列",-1),dj=t("code",null,"数组",-1),_j=t("code",null,"4+",-1),cj={style:{"text-align":"left"}},ij=t("td",{style:{"text-align":"center"}},"3113",-1),aj={style:{"text-align":"left"}},rj={href:"https://leetcode.com/problems/find-the-number-of-subarrays-where-boundary-elements-are-maximum",target:"_blank",rel:"noopener noreferrer"},hj=t("td",{style:{"text-align":"center"}},null,-1),uj={style:{"text-align":"left"}},fj=t("code",null,"栈",-1),gj=t("code",null,"数组",-1),mj=t("code",null,"二分查找",-1),yj=t("code",null,"1+",-1),xj={style:{"text-align":"left"}},pj=t("td",{style:{"text-align":"center"}},"3170",-1),bj={style:{"text-align":"left"}},jj={href:"https://leetcode.com/problems/lexicographically-minimum-string-after-removing-stars",target:"_blank",rel:"noopener noreferrer"},kj=t("td",{style:{"text-align":"center"}},null,-1),Mj={style:{"text-align":"left"}},vj=t("code",null,"栈",-1),Ij=t("code",null,"贪心",-1),Hj=t("code",null,"哈希表",-1),wj=t("code",null,"2+",-1),Ej={style:{"text-align":"left"}},qj=t("td",{style:{"text-align":"center"}},"3174",-1),zj={style:{"text-align":"left"}},Oj={href:"https://leetcode.com/problems/clear-digits",target:"_blank",rel:"noopener noreferrer"},Nj=t("td",{style:{"text-align":"center"}},null,-1),Lj={style:{"text-align":"left"}},Bj=t("code",null,"栈",-1),Vj=t("code",null,"字符串",-1),Cj=t("code",null,"模拟",-1),Qj={style:{"text-align":"left"}},Rj=t("td",{style:{"text-align":"center"}},"3205",-1),Zj={style:{"text-align":"left"}},Gj={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},Kj=t("td",{style:{"text-align":"center"}},null,-1),Sj={style:{"text-align":"left"}},Tj=t("code",null,"栈",-1),Uj=t("code",null,"贪心",-1),Xj=t("code",null,"数组",-1),Yj=t("code",null,"2+",-1),Aj={style:{"text-align":"left"}},Pj=t("td",{style:{"text-align":"center"}},"3221",-1),Dj={style:{"text-align":"left"}},Fj={href:"https://leetcode.com/problems/maximum-array-hopping-score-ii",target:"_blank",rel:"noopener noreferrer"},Jj=t("td",{style:{"text-align":"center"}},null,-1),Wj={style:{"text-align":"left"}},$j=t("code",null,"栈",-1),t5=t("code",null,"贪心",-1),e5=t("code",null,"数组",-1),l5=t("code",null,"1+",-1),o5={style:{"text-align":"left"}},s5=t("td",{style:{"text-align":"center"}},"3229",-1),n5={style:{"text-align":"left"}},d5={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},_5=t("td",{style:{"text-align":"center"}},null,-1),c5={style:{"text-align":"left"}},i5=t("code",null,"栈",-1),a5=t("code",null,"贪心",-1),r5=t("code",null,"数组",-1),h5=t("code",null,"2+",-1),u5={style:{"text-align":"left"}},f5=t("td",{style:{"text-align":"center"}},"剑指 Offer 06",-1),g5={style:{"text-align":"left"}},m5={href:"https://leetcode.cn/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},y5={style:{"text-align":"center"}},x5={style:{"text-align":"left"}},p5=t("code",null,"栈",-1),b5=t("code",null,"递归",-1),j5=t("code",null,"链表",-1),k5=t("code",null,"1+",-1),M5={style:{"text-align":"left"}},v5=t("td",{style:{"text-align":"center"}},"剑指 Offer 09",-1),I5={style:{"text-align":"left"}},H5={href:"https://leetcode.cn/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof",target:"_blank",rel:"noopener noreferrer"},w5={style:{"text-align":"center"}},E5={style:{"text-align":"left"}},q5=t("code",null,"栈",-1),z5=t("code",null,"设计",-1),O5=t("code",null,"队列",-1),N5={style:{"text-align":"left"}},L5=t("td",{style:{"text-align":"center"}},"剑指 Offer 30",-1),B5={style:{"text-align":"left"}},V5={href:"https://leetcode.cn/problems/bao-han-minhan-shu-de-zhan-lcof",target:"_blank",rel:"noopener noreferrer"},C5={style:{"text-align":"center"}},Q5={style:{"text-align":"left"}},R5=t("code",null,"栈",-1),Z5=t("code",null,"设计",-1),G5={style:{"text-align":"left"}},K5=t("td",{style:{"text-align":"center"}},"剑指 Offer 31",-1),S5={style:{"text-align":"left"}},T5={href:"https://leetcode.cn/problems/zhan-de-ya-ru-dan-chu-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},U5={style:{"text-align":"center"}},X5={style:{"text-align":"left"}},Y5=t("code",null,"栈",-1),A5=t("code",null,"数组",-1),P5=t("code",null,"模拟",-1),D5={style:{"text-align":"left"}},F5=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),J5={style:{"text-align":"left"}},W5={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},$5={style:{"text-align":"center"}},t7={style:{"text-align":"left"}},e7=t("code",null,"栈",-1),l7=t("code",null,"树",-1),o7=t("code",null,"二叉搜索树",-1),s7=t("code",null,"4+",-1),n7={style:{"text-align":"left"}},d7=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),_7={style:{"text-align":"left"}},c7={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},i7={style:{"text-align":"center"}},a7={style:{"text-align":"left"}},r7=t("code",null,"栈",-1),h7=t("code",null,"树",-1),u7=t("code",null,"深度优先搜索",-1),f7=t("code",null,"4+",-1),g7={style:{"text-align":"left"}},m7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 25",-1),y7={style:{"text-align":"left"}},x7={href:"https://leetcode.cn/problems/lMSNwu",target:"_blank",rel:"noopener noreferrer"},p7=t("td",{style:{"text-align":"center"}},null,-1),b7={style:{"text-align":"left"}},j7=t("code",null,"栈",-1),k7=t("code",null,"链表",-1),M7=t("code",null,"数学",-1),v7={style:{"text-align":"left"}},I7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 26",-1),H7={style:{"text-align":"left"}},w7={href:"https://leetcode.cn/problems/LGjMqU",target:"_blank",rel:"noopener noreferrer"},E7=t("td",{style:{"text-align":"center"}},null,-1),q7={style:{"text-align":"left"}},z7=t("code",null,"栈",-1),O7=t("code",null,"递归",-1),N7=t("code",null,"链表",-1),L7=t("code",null,"1+",-1),B7={style:{"text-align":"left"}},V7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 27",-1),C7={style:{"text-align":"left"}},Q7={href:"https://leetcode.cn/problems/aMhZSa",target:"_blank",rel:"noopener noreferrer"},R7={style:{"text-align":"center"}},Z7={style:{"text-align":"left"}},G7=t("code",null,"栈",-1),K7=t("code",null,"递归",-1),S7=t("code",null,"链表",-1),T7=t("code",null,"1+",-1),U7={style:{"text-align":"left"}},X7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 36",-1),Y7={style:{"text-align":"left"}},A7={href:"https://leetcode.cn/problems/8Zf90G",target:"_blank",rel:"noopener noreferrer"},P7=t("td",{style:{"text-align":"center"}},null,-1),D7={style:{"text-align":"left"}},F7=t("code",null,"栈",-1),J7=t("code",null,"数组",-1),W7=t("code",null,"数学",-1),$7={style:{"text-align":"left"}},t9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 37",-1),e9={style:{"text-align":"left"}},l9={href:"https://leetcode.cn/problems/XagZNi",target:"_blank",rel:"noopener noreferrer"},o9=t("td",{style:{"text-align":"center"}},null,-1),s9={style:{"text-align":"left"}},n9=t("code",null,"栈",-1),d9=t("code",null,"数组",-1),_9=t("code",null,"模拟",-1),c9={style:{"text-align":"left"}},i9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 38",-1),a9={style:{"text-align":"left"}},r9={href:"https://leetcode.cn/problems/iIQa4I",target:"_blank",rel:"noopener noreferrer"},h9=t("td",{style:{"text-align":"center"}},null,-1),u9={style:{"text-align":"left"}},f9=t("code",null,"栈",-1),g9=t("code",null,"数组",-1),m9=t("code",null,"单调栈",-1),y9={style:{"text-align":"left"}},x9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 39",-1),p9={style:{"text-align":"left"}},b9={href:"https://leetcode.cn/problems/0ynMMM",target:"_blank",rel:"noopener noreferrer"},j9=t("td",{style:{"text-align":"center"}},null,-1),k9={style:{"text-align":"left"}},M9=t("code",null,"栈",-1),v9=t("code",null,"数组",-1),I9=t("code",null,"单调栈",-1),H9={style:{"text-align":"left"}},w9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),E9={style:{"text-align":"left"}},q9={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},z9=t("td",{style:{"text-align":"center"}},null,-1),O9={style:{"text-align":"left"}},N9=t("code",null,"栈",-1),L9=t("code",null,"数组",-1),B9=t("code",null,"动态规划",-1),V9=t("code",null,"2+",-1),C9={style:{"text-align":"left"}},Q9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),R9={style:{"text-align":"left"}},Z9={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},G9=t("td",{style:{"text-align":"center"}},null,-1),K9={style:{"text-align":"left"}},S9=t("code",null,"栈",-1),T9=t("code",null,"树",-1),U9=t("code",null,"深度优先搜索",-1),X9=t("code",null,"2+",-1),Y9={style:{"text-align":"left"}},A9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),P9={style:{"text-align":"left"}},D9={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},F9=t("td",{style:{"text-align":"center"}},null,-1),J9={style:{"text-align":"left"}},W9=t("code",null,"栈",-1),$9=t("code",null,"树",-1),tk=t("code",null,"设计",-1),ek=t("code",null,"3+",-1),lk={style:{"text-align":"left"}},ok=t("td",{style:{"text-align":"center"}},"面试题 02.06",-1),sk={style:{"text-align":"left"}},nk={href:"https://leetcode.cn/problems/palindrome-linked-list-lcci",target:"_blank",rel:"noopener noreferrer"},dk=t("td",{style:{"text-align":"center"}},null,-1),_k={style:{"text-align":"left"}},ck=t("code",null,"栈",-1),ik=t("code",null,"递归",-1),ak=t("code",null,"链表",-1),rk=t("code",null,"1+",-1),hk={style:{"text-align":"left"}},uk=t("td",{style:{"text-align":"center"}},"面试题 03.01",-1),fk={style:{"text-align":"left"}},gk={href:"https://leetcode.cn/problems/three-in-one-lcci",target:"_blank",rel:"noopener noreferrer"},mk=t("td",{style:{"text-align":"center"}},null,-1),yk={style:{"text-align":"left"}},xk=t("code",null,"栈",-1),pk=t("code",null,"设计",-1),bk=t("code",null,"数组",-1),jk={style:{"text-align":"left"}},kk=t("td",{style:{"text-align":"center"}},"面试题 03.02",-1),Mk={style:{"text-align":"left"}},vk={href:"https://leetcode.cn/problems/min-stack-lcci",target:"_blank",rel:"noopener noreferrer"},Ik=t("td",{style:{"text-align":"center"}},null,-1),Hk={style:{"text-align":"left"}},wk=t("code",null,"栈",-1),Ek=t("code",null,"设计",-1),qk={style:{"text-align":"left"}},zk=t("td",{style:{"text-align":"center"}},"面试题 03.03",-1),Ok={style:{"text-align":"left"}},Nk={href:"https://leetcode.cn/problems/stack-of-plates-lcci",target:"_blank",rel:"noopener noreferrer"},Lk=t("td",{style:{"text-align":"center"}},null,-1),Bk={style:{"text-align":"left"}},Vk=t("code",null,"栈",-1),Ck=t("code",null,"设计",-1),Qk=t("code",null,"链表",-1),Rk={style:{"text-align":"left"}},Zk=t("td",{style:{"text-align":"center"}},"面试题 03.04",-1),Gk={style:{"text-align":"left"}},Kk={href:"https://leetcode.cn/problems/implement-queue-using-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},Sk=t("td",{style:{"text-align":"center"}},null,-1),Tk={style:{"text-align":"left"}},Uk=t("code",null,"栈",-1),Xk=t("code",null,"设计",-1),Yk=t("code",null,"队列",-1),Ak={style:{"text-align":"left"}},Pk=t("td",{style:{"text-align":"center"}},"面试题 03.05",-1),Dk={style:{"text-align":"left"}},Fk={href:"https://leetcode.cn/problems/sort-of-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},Jk=t("td",{style:{"text-align":"center"}},null,-1),Wk={style:{"text-align":"left"}},$k=t("code",null,"栈",-1),tM=t("code",null,"设计",-1),eM=t("code",null,"单调栈",-1),lM={style:{"text-align":"left"}},oM=t("td",{style:{"text-align":"center"}},"面试题 16.16",-1),sM={style:{"text-align":"left"}},nM={href:"https://leetcode.cn/problems/sub-sort-lcci",target:"_blank",rel:"noopener noreferrer"},dM=t("td",{style:{"text-align":"center"}},null,-1),_M={style:{"text-align":"left"}},cM=t("code",null,"栈",-1),iM=t("code",null,"贪心",-1),aM=t("code",null,"数组",-1),rM=t("code",null,"3+",-1),hM={style:{"text-align":"left"}},uM=t("td",{style:{"text-align":"center"}},"面试题 16.26",-1),fM={style:{"text-align":"left"}},gM={href:"https://leetcode.cn/problems/calculator-lcci",target:"_blank",rel:"noopener noreferrer"},mM=t("td",{style:{"text-align":"center"}},null,-1),yM={style:{"text-align":"left"}},xM=t("code",null,"栈",-1),pM=t("code",null,"数学",-1),bM=t("code",null,"字符串",-1),jM={style:{"text-align":"left"}},kM=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),MM={style:{"text-align":"left"}},vM={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},IM=t("td",{style:{"text-align":"center"}},null,-1),HM={style:{"text-align":"left"}},wM=t("code",null,"栈",-1),EM=t("code",null,"树",-1),qM=t("code",null,"深度优先搜索",-1),zM=t("code",null,"3+",-1),OM={style:{"text-align":"left"}},NM=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),LM={style:{"text-align":"left"}},BM={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"},VM=t("td",{style:{"text-align":"center"}},null,-1),CM={style:{"text-align":"left"}},QM=t("code",null,"栈",-1),RM=t("code",null,"数组",-1),ZM=t("code",null,"双指针",-1),GM=t("code",null,"2+",-1),KM={style:{"text-align":"left"}};function SM(TM,UM){const s=_("RouterLink"),n=_("ExternalLinkIcon"),d=_("font");return i(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),j,l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[I]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[H]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[w]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[E]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[q]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[z]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[O]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[N]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[L]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[B]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[V]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[C]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/strongly-connected-component.html"},{default:o(()=>[Q]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[R]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:o(()=>[Z]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[G]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[K]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[S]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[T]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[U]),_:1})]),X,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[Y]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[A]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[P]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[D]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[F]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[J]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[W]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[st]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[nt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:o(()=>[jt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:o(()=>[It]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/reservoir-sampling.html"},{default:o(()=>[Ht]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/rejection-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/database.html"},{default:o(()=>[Et]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[qt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:o(()=>[zt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[Ot]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/interactive.html"},{default:o(()=>[Nt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/iterator.html"},{default:o(()=>[Lt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/concurrency.html"},{default:o(()=>[Bt]),_:1})])]),Vt,r(" prettier-ignore "),t("table",null,[Ct,t("tbody",null,[t("tr",null,[Qt,t("td",Rt,[t("a",Zt,[l("有效的括号"),e(n)])]),t("td",Gt,[e(s,{to:"/leetcode-js/problem/0020.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Kt,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[St]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Tt]),_:1})]),t("td",Ut,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xt,t("td",Yt,[t("a",At,[l("最长有效括号"),e(n)])]),t("td",Pt,[e(s,{to:"/leetcode-js/problem/0032.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Dt,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Ft]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Jt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Wt]),_:1})]),t("td",$t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[te,t("td",ee,[t("a",le,[l("接雨水"),e(n)])]),t("td",oe,[e(s,{to:"/leetcode-js/problem/0042.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",se,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ne]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[de]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[_e]),_:1}),l(),ce]),t("td",ie,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ae,t("td",re,[t("a",he,[l("简化路径"),e(n)])]),t("td",ue,[e(s,{to:"/leetcode-js/problem/0071.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fe,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ge]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[me]),_:1})]),t("td",ye,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xe,t("td",pe,[t("a",be,[l("柱状图中最大的矩形"),e(n)])]),t("td",je,[e(s,{to:"/leetcode-js/problem/0084.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ke,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Me]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ve]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[Ie]),_:1})]),t("td",He,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[we,t("td",Ee,[t("a",qe,[l("最大矩形"),e(n)])]),t("td",ze,[e(s,{to:"/leetcode-js/problem/0085.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Oe,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Ne]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Le]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Be]),_:1}),l(),Ve]),t("td",Ce,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qe,t("td",Re,[t("a",Ze,[l("二叉树的中序遍历"),e(n)])]),t("td",Ge,[e(s,{to:"/leetcode-js/problem/0094.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ke,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Se]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Te]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ue]),_:1}),l(),Xe]),t("td",Ye,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ae,t("td",Pe,[t("a",De,[l("二叉树展开为链表"),e(n)])]),t("td",Fe,[e(s,{to:"/leetcode-js/problem/0114.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Je,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[We]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$e]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[tl]),_:1}),l(),el]),t("td",ll,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ol,t("td",sl,[t("a",nl,[l("重排链表"),e(n)])]),t("td",dl,[e(s,{to:"/leetcode-js/problem/0143.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_l,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[cl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[il]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[al]),_:1}),l(),rl]),t("td",hl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ul,t("td",fl,[t("a",gl,[l("二叉树的前序遍历"),e(n)])]),t("td",ml,[e(s,{to:"/leetcode-js/problem/0144.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yl,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[xl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[pl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[bl]),_:1}),l(),jl]),t("td",kl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ml,t("td",vl,[t("a",Il,[l("二叉树的后序遍历"),e(n)])]),t("td",Hl,[e(s,{to:"/leetcode-js/problem/0145.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wl,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[El]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ql]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[zl]),_:1}),l(),Ol]),t("td",Nl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ll,t("td",Bl,[t("a",Vl,[l("逆波兰表达式求值"),e(n)])]),t("td",Cl,[e(s,{to:"/leetcode-js/problem/0150.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ql,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Rl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Zl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Gl]),_:1})]),t("td",Kl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sl,t("td",Tl,[t("a",Ul,[l("最小栈"),e(n)])]),t("td",Xl,[e(s,{to:"/leetcode-js/problem/0155.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yl,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Al]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Pl]),_:1})]),t("td",Dl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fl,t("td",Jl,[t("a",Wl,[l("二叉搜索树迭代器"),e(n)])]),t("td",$l,[e(s,{to:"/leetcode-js/problem/0173.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",to,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[eo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[lo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[oo]),_:1}),l(),so]),t("td",no,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_o,t("td",co,[t("a",io,[l("基本计算器"),e(n)])]),t("td",ao,[e(s,{to:"/leetcode-js/problem/0224.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ro,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ho]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[uo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[fo]),_:1}),l(),go]),t("td",mo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yo,t("td",xo,[t("a",po,[l("用队列实现栈"),e(n)])]),t("td",bo,[e(s,{to:"/leetcode-js/problem/0225.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",jo,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ko]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Mo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[vo]),_:1})]),t("td",Io,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ho,t("td",wo,[t("a",Eo,[l("基本计算器 II"),e(n)])]),t("td",qo,[e(s,{to:"/leetcode-js/problem/0227.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",zo,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Oo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[No]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Lo]),_:1})]),t("td",Bo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vo,t("td",Co,[t("a",Qo,[l("用栈实现队列"),e(n)])]),t("td",Ro,[e(s,{to:"/leetcode-js/problem/0232.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Zo,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Go]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Ko]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[So]),_:1})]),t("td",To,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Uo,t("td",Xo,[t("a",Yo,[l("回文链表"),e(n)])]),t("td",Ao,[e(s,{to:"/leetcode-js/problem/0234.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Po,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Do]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[Fo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[Jo]),_:1}),l(),Wo]),t("td",$o,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ts,t("td",es,[t("a",ls,[l("验证二叉搜索树的前序遍历序列"),e(n)])]),os,t("td",ss,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ns]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ds]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[_s]),_:1}),l(),cs]),t("td",is,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[as,t("td",rs,[t("a",hs,[l("最接近的二叉搜索树值 II"),e(n)])]),us,t("td",fs,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[gs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ms]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ys]),_:1}),l(),xs]),t("td",ps,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bs,t("td",js,[t("a",ks,[l("去除重复字母"),e(n)])]),t("td",Ms,[e(s,{to:"/leetcode-js/problem/0316.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vs,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Is]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Hs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[ws]),_:1}),l(),Es]),t("td",qs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zs,t("td",Os,[t("a",Ns,[l("拼接最大数"),e(n)])]),Ls,t("td",Bs,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Vs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Cs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Qs]),_:1}),l(),Rs]),t("td",Zs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gs,t("td",Ks,[t("a",Ss,[l("验证二叉树的前序序列化"),e(n)])]),Ts,t("td",Us,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Xs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ys]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[As]),_:1}),l(),Ps]),t("td",Ds,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fs,t("td",Js,[t("a",Ws,[l("扁平化嵌套列表迭代器"),e(n)])]),$s,t("td",tn,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[en]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ln]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[on]),_:1}),l(),sn]),t("td",nn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dn,t("td",_n,[t("a",cn,[l("嵌套列表加权和 II"),e(n)])]),an,t("td",rn,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[hn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[un]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[fn]),_:1})]),t("td",gn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mn,t("td",yn,[t("a",xn,[l("迷你语法分析器"),e(n)])]),pn,t("td",bn,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[jn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[kn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Mn]),_:1})]),t("td",vn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[In,t("td",Hn,[t("a",wn,[l("文件的最长绝对路径"),e(n)])]),En,t("td",qn,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[zn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[On]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Nn]),_:1})]),t("td",Ln,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bn,t("td",Vn,[t("a",Cn,[l("字符串解码"),e(n)])]),t("td",Qn,[e(s,{to:"/leetcode-js/problem/0394.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Rn,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Zn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[Gn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Kn]),_:1})]),t("td",Sn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tn,t("td",Un,[t("a",Xn,[l("移掉 K 位数字"),e(n)])]),Yn,t("td",An,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Pn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Dn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Fn]),_:1}),l(),Jn]),t("td",Wn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$n,t("td",td,[t("a",ed,[l("将二叉搜索树转化为排序的双向链表"),e(n)])]),t("td",ld,[e(s,{to:"/leetcode-js/problem/0426.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",od,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[sd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[nd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dd]),_:1}),l(),_d]),t("td",cd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[id,t("td",ad,[t("a",rd,[l("三元表达式解析器"),e(n)])]),hd,t("td",ud,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[fd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[gd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[md]),_:1})]),t("td",yd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xd,t("td",pd,[t("a",bd,[l("两数相加 II"),e(n)])]),t("td",jd,[e(s,{to:"/leetcode-js/problem/0445.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",kd,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Md]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[vd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Id]),_:1})]),t("td",Hd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wd,t("td",Ed,[t("a",qd,[l("132 模式"),e(n)])]),zd,t("td",Od,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Nd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ld]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[Bd]),_:1}),l(),Vd]),t("td",Cd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qd,t("td",Rd,[t("a",Zd,[l("寻找排列"),e(n)])]),Gd,t("td",Kd,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Sd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Td]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ud]),_:1}),l(),Xd]),t("td",Yd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ad,t("td",Pd,[t("a",Dd,[l("祖玛游戏"),e(n)])]),Fd,t("td",Jd,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Wd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$d]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[t_]),_:1}),l(),e_]),t("td",l_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o_,t("td",s_,[t("a",n_,[l("下一个更大元素 I"),e(n)])]),t("td",d_,[e(s,{to:"/leetcode-js/problem/0496.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",__,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[c_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[i_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[a_]),_:1}),l(),r_]),t("td",h_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[u_,t("td",f_,[t("a",g_,[l("下一个更大元素 II"),e(n)])]),t("td",m_,[e(s,{to:"/leetcode-js/problem/0503.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",y_,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[x_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[p_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[b_]),_:1})]),t("td",j_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[k_,t("td",M_,[t("a",v_,[l("从字符串生成二叉树"),e(n)])]),I_,t("td",H_,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[w_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[E_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[q_]),_:1}),l(),z_]),t("td",O_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N_,t("td",L_,[t("a",B_,[l("最短无序连续子数组"),e(n)])]),V_,t("td",C_,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Q_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[R_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Z_]),_:1}),l(),G_]),t("td",K_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S_,t("td",T_,[t("a",U_,[l("N 叉树的前序遍历"),e(n)])]),t("td",X_,[e(s,{to:"/leetcode-js/problem/0589.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Y_,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[A_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[P_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[D_]),_:1})]),t("td",F_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[J_,t("td",W_,[t("a",$_,[l("N 叉树的后序遍历"),e(n)])]),t("td",tc,[e(s,{to:"/leetcode-js/problem/0590.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ec,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[lc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[oc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[sc]),_:1})]),t("td",nc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[dc,t("td",_c,[t("a",cc,[l("标签验证器"),e(n)])]),ic,t("td",ac,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[rc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[hc]),_:1})]),t("td",uc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fc,t("td",gc,[t("a",mc,[l("函数的独占时间"),e(n)])]),yc,t("td",xc,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[pc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[bc]),_:1})]),t("td",jc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kc,t("td",Mc,[t("a",vc,[l("最大二叉树"),e(n)])]),t("td",Ic,[e(s,{to:"/leetcode-js/problem/0654.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Hc,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[wc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ec]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[qc]),_:1}),l(),zc]),t("td",Oc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nc,t("td",Lc,[t("a",Bc,[l("有效的括号字符串"),e(n)])]),t("td",Vc,[e(s,{to:"/leetcode-js/problem/0678.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Cc,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Qc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Rc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Zc]),_:1}),l(),Gc]),t("td",Kc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sc,t("td",Tc,[t("a",Uc,[l("棒球比赛"),e(n)])]),t("td",Xc,[e(s,{to:"/leetcode-js/problem/0682.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yc,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Ac]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Pc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[Dc]),_:1})]),t("td",Fc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Jc,t("td",Wc,[t("a",$c,[l("最大栈"),e(n)])]),ti,t("td",ei,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[li]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[oi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[si]),_:1}),l(),ni]),t("td",di,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_i,t("td",ci,[t("a",ii,[l("原子的数量"),e(n)])]),ai,t("td",ri,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[hi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[ui]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[fi]),_:1}),l(),gi]),t("td",mi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yi,t("td",xi,[t("a",pi,[l("小行星碰撞"),e(n)])]),bi,t("td",ji,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ki]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Mi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[vi]),_:1})]),t("td",Ii,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hi,t("td",wi,[t("a",Ei,[l("Lisp 语法解析"),e(n)])]),qi,t("td",zi,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Oi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[Ni]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Li]),_:1}),l(),Bi]),t("td",Vi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ci,t("td",Qi,[t("a",Ri,[l("每日温度"),e(n)])]),t("td",Zi,[e(s,{to:"/leetcode-js/problem/0739.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gi,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Ki]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Si]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[Ti]),_:1})]),t("td",Ui,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xi,t("td",Yi,[t("a",Ai,[l("最多能完成排序的块 II"),e(n)])]),Pi,t("td",Di,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Fi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Ji]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Wi]),_:1}),l(),$i]),t("td",ta,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ea,t("td",la,[t("a",oa,[l("最多能完成排序的块"),e(n)])]),sa,t("td",na,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[da]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[_a]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ca]),_:1}),l(),ia]),t("td",aa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ra,t("td",ha,[t("a",ua,[l("基本计算器 IV"),e(n)])]),fa,t("td",ga,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ma]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[ya]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[xa]),_:1}),l(),pa]),t("td",ba,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ja,t("td",ka,[t("a",Ma,[l("基本计算器 III"),e(n)])]),t("td",va,[e(s,{to:"/leetcode-js/problem/0772.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ia,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Ha]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[wa]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Ea]),_:1}),l(),qa]),t("td",za,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oa,t("td",Na,[t("a",La,[l("比较含退格的字符串"),e(n)])]),t("td",Ba,[e(s,{to:"/leetcode-js/problem/0844.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Va,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Ca]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[Qa]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Ra]),_:1}),l(),Za]),t("td",Ga,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ka,t("td",Sa,[t("a",Ta,[l("车队"),e(n)])]),Ua,t("td",Xa,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Ya]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Aa]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[Pa]),_:1}),l(),Da]),t("td",Fa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ja,t("td",Wa,[t("a",$a,[l("括号的分数"),e(n)])]),t1,t("td",e1,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[l1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[o1]),_:1})]),t("td",s1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n1,t("td",d1,[t("a",_1,[l("索引处的解码字符串"),e(n)])]),t("td",c1,[e(s,{to:"/leetcode-js/problem/0880.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",i1,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[a1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[r1]),_:1})]),t("td",h1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u1,t("td",f1,[t("a",g1,[l("最大频率栈"),e(n)])]),m1,t("td",y1,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[x1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[p1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[b1]),_:1}),l(),j1]),t("td",k1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[M1,t("td",v1,[t("a",I1,[l("递增顺序搜索树"),e(n)])]),H1,t("td",w1,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[E1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[q1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[z1]),_:1}),l(),O1]),t("td",N1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[L1,t("td",B1,[t("a",V1,[l("股票价格跨度"),e(n)])]),C1,t("td",Q1,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[R1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Z1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:o(()=>[G1]),_:1}),l(),K1]),t("td",S1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T1,t("td",U1,[t("a",X1,[l("子数组的最小值之和"),e(n)])]),Y1,t("td",A1,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[P1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[D1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[F1]),_:1}),l(),J1]),t("td",W1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$1,t("td",tr,[t("a",er,[l("使括号有效的最少添加"),e(n)])]),t("td",lr,[e(s,{to:"/leetcode-js/problem/0921.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",or,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[sr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[nr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[dr]),_:1})]),t("td",_r,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cr,t("td",ir,[t("a",ar,[l("戳印序列"),e(n)])]),rr,t("td",hr,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ur]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[fr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[gr]),_:1}),l(),mr]),t("td",yr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xr,t("td",pr,[t("a",br,[l("验证栈序列"),e(n)])]),t("td",jr,[e(s,{to:"/leetcode-js/problem/0946.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",kr,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Mr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[Ir]),_:1})]),t("td",Hr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wr,t("td",Er,[t("a",qr,[l("最大宽度坡"),e(n)])]),t("td",zr,[e(s,{to:"/leetcode-js/problem/0962.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Or,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Nr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Lr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[Br]),_:1})]),t("td",Vr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cr,t("td",Qr,[t("a",Rr,[l("奇偶跳"),e(n)])]),Zr,t("td",Gr,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Kr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Sr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Tr]),_:1}),l(),Ur]),t("td",Xr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yr,t("td",Ar,[t("a",Pr,[l("检查替换后的词是否有效"),e(n)])]),Dr,t("td",Fr,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Jr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Wr]),_:1})]),t("td",$r,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[th,t("td",eh,[t("a",lh,[l("笨阶乘"),e(n)])]),oh,t("td",sh,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[nh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[dh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[_h]),_:1})]),t("td",ch,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ih,t("td",ah,[t("a",rh,[l("前序遍历构造二叉搜索树"),e(n)])]),t("td",hh,[e(s,{to:"/leetcode-js/problem/1008.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",uh,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[fh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[gh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[mh]),_:1}),l(),yh]),t("td",xh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ph,t("td",bh,[t("a",jh,[l("链表中的下一个更大节点"),e(n)])]),kh,t("td",Mh,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[vh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ih]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[Hh]),_:1}),l(),wh]),t("td",Eh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qh,t("td",zh,[t("a",Oh,[l("删除最外层的括号"),e(n)])]),t("td",Nh,[e(s,{to:"/leetcode-js/problem/1021.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Lh,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Bh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Vh]),_:1})]),t("td",Ch,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Qh,t("td",Rh,[t("a",Zh,[l("删除字符串中的所有相邻重复项"),e(n)])]),t("td",Gh,[e(s,{to:"/leetcode-js/problem/1047.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Kh,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Sh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Th]),_:1})]),t("td",Uh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xh,t("td",Yh,[t("a",Ah,[l("有效子数组的数目"),e(n)])]),Ph,t("td",Dh,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Fh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Jh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[Wh]),_:1})]),t("td",$h,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tu,t("td",eu,[t("a",lu,[l("不同字符的最小子序列"),e(n)])]),t("td",ou,[e(s,{to:"/leetcode-js/problem/1081.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",su,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[nu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[du]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[_u]),_:1}),l(),cu]),t("td",iu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[au,t("td",ru,[t("a",hu,[l("花括号展开 II"),e(n)])]),uu,t("td",fu,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[gu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[mu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[yu]),_:1}),l(),xu]),t("td",pu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bu,t("td",ju,[t("a",ku,[l("解析布尔表达式"),e(n)])]),Mu,t("td",vu,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Iu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[Hu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[wu]),_:1})]),t("td",Eu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qu,t("td",zu,[t("a",Ou,[l("有效括号的嵌套深度"),e(n)])]),Nu,t("td",Lu,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Bu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Vu]),_:1})]),t("td",Cu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qu,t("td",Ru,[t("a",Zu,[l("表现良好的最长时间段"),e(n)])]),Gu,t("td",Ku,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Su]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Tu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Uu]),_:1}),l(),Xu]),t("td",Yu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Au,t("td",Pu,[t("a",Du,[l("叶值的最小代价生成树"),e(n)])]),Fu,t("td",Ju,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Wu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[$u]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[tf]),_:1}),l(),ef]),t("td",lf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[of,t("td",sf,[t("a",nf,[l("餐盘栈"),e(n)])]),df,t("td",_f,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[cf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[af]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[rf]),_:1}),l(),hf]),t("td",uf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ff,t("td",gf,[t("a",mf,[l("反转每对括号间的子串"),e(n)])]),t("td",yf,[e(s,{to:"/leetcode-js/problem/1190.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xf,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[pf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[bf]),_:1})]),t("td",jf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kf,t("td",Mf,[t("a",vf,[l("删除字符串中的所有相邻重复项 II"),e(n)])]),If,t("td",Hf,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[wf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Ef]),_:1})]),t("td",qf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zf,t("td",Of,[t("a",Nf,[l("查找两棵二叉搜索树之和"),e(n)])]),Lf,t("td",Bf,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Vf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Cf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Qf]),_:1}),l(),Rf]),t("td",Zf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gf,t("td",Kf,[t("a",Sf,[l("移除无效的括号"),e(n)])]),Tf,t("td",Uf,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Xf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Yf]),_:1})]),t("td",Af,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pf,t("td",Df,[t("a",Ff,[l("逆序打印不可变链表"),e(n)])]),Jf,t("td",Wf,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[$f]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[tg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[eg]),_:1}),l(),lg]),t("td",og,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sg,t("td",ng,[t("a",dg,[l("设计一个支持增量操作的栈"),e(n)])]),t("td",_g,[e(s,{to:"/leetcode-js/problem/1381.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",cg,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ig]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[ag]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[rg]),_:1})]),t("td",hg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ug,t("td",fg,[t("a",gg,[l("用栈操作构建数组"),e(n)])]),t("td",mg,[e(s,{to:"/leetcode-js/problem/1441.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yg,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[xg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[pg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[bg]),_:1})]),t("td",jg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kg,t("td",Mg,[t("a",vg,[l("设计浏览器历史记录"),e(n)])]),t("td",Ig,[e(s,{to:"/leetcode-js/problem/1472.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Hg,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[wg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Eg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[qg]),_:1}),l(),zg]),t("td",Og,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ng,t("td",Lg,[t("a",Bg,[l("商品折扣后的最终价格"),e(n)])]),t("td",Vg,[e(s,{to:"/leetcode-js/problem/1475.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Cg,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Qg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Rg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[Zg]),_:1})]),t("td",Gg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Kg,t("td",Sg,[t("a",Tg,[l("统计全 1 子矩形"),e(n)])]),Ug,t("td",Xg,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Yg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ag]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Pg]),_:1}),l(),Dg]),t("td",Fg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jg,t("td",Wg,[t("a",$g,[l("形成目标数组的子数组最少增加次数"),e(n)])]),tm,t("td",em,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[lm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[om]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[sm]),_:1}),l(),nm]),t("td",dm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_m,t("td",cm,[t("a",im,[l("平衡括号字符串的最少插入次数"),e(n)])]),am,t("td",rm,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[hm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[um]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[fm]),_:1})]),t("td",gm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mm,t("td",ym,[t("a",xm,[l("整理字符串"),e(n)])]),pm,t("td",bm,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[jm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[km]),_:1})]),t("td",Mm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vm,t("td",Im,[t("a",Hm,[l("删除最短的子数组使剩余数组有序"),e(n)])]),wm,t("td",Em,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[qm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[zm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[Om]),_:1}),l(),Nm]),t("td",Lm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bm,t("td",Vm,[t("a",Cm,[l("二叉搜索树迭代器 II"),e(n)])]),Qm,t("td",Rm,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Zm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Gm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Km]),_:1}),l(),Sm]),t("td",Tm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Um,t("td",Xm,[t("a",Ym,[l("根据中缀表达式构造二叉表达式树"),e(n)])]),Am,t("td",Pm,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Dm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Fm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Jm]),_:1}),l(),Wm]),t("td",$m,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ty,t("td",ey,[t("a",ly,[l("文件夹操作日志搜集器"),e(n)])]),oy,t("td",sy,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ny]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[dy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[_y]),_:1})]),t("td",cy,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[iy,t("td",ay,[t("a",ry,[l("括号的最大嵌套深度"),e(n)])]),hy,t("td",uy,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[fy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[gy]),_:1})]),t("td",my,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yy,t("td",xy,[t("a",py,[l("设计带解析函数的表达式树"),e(n)])]),by,t("td",jy,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ky]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[My]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[vy]),_:1}),l(),Iy]),t("td",Hy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wy,t("td",Ey,[t("a",qy,[l("使字符串平衡的最少删除次数"),e(n)])]),zy,t("td",Oy,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Ny]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Ly]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[By]),_:1})]),t("td",Vy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cy,t("td",Qy,[t("a",Ry,[l("找出最具竞争力的子序列"),e(n)])]),Zy,t("td",Gy,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Ky]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Sy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ty]),_:1}),l(),Uy]),t("td",Xy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yy,t("td",Ay,[t("a",Py,[l("无法吃午餐的学生数量"),e(n)])]),Dy,t("td",Fy,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Jy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[Wy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[$y]),_:1}),l(),tx]),t("td",ex,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[lx,t("td",ox,[t("a",sx,[l("删除子字符串的最大得分"),e(n)])]),nx,t("td",dx,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[_x]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[cx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[ix]),_:1})]),t("td",ax,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rx,t("td",hx,[t("a",ux,[l("设计最近使用（MRU）队列"),e(n)])]),fx,t("td",gx,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[mx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[yx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[xx]),_:1}),l(),px]),t("td",bx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jx,t("td",kx,[t("a",Mx,[l("能看到海景的建筑物"),e(n)])]),vx,t("td",Ix,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Hx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[wx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[Ex]),_:1})]),t("td",qx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zx,t("td",Ox,[t("a",Nx,[l("车队 II"),e(n)])]),Lx,t("td",Bx,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Vx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Cx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Qx]),_:1}),l(),Rx]),t("td",Zx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gx,t("td",Kx,[t("a",Sx,[l("好子数组的最大分数"),e(n)])]),Tx,t("td",Ux,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Xx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Yx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[Ax]),_:1}),l(),Px]),t("td",Dx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fx,t("td",Jx,[t("a",Wx,[l("子数组最小乘积的最大值"),e(n)])]),$x,t("td",t0,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[e0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[l0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[o0]),_:1}),l(),s0]),t("td",n0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d0,t("td",_0,[t("a",c0,[l("反转表达式值的最少操作次数"),e(n)])]),i0,t("td",a0,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[r0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[h0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[u0]),_:1}),l(),f0]),t("td",g0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[m0,t("td",y0,[t("a",x0,[l("删除一个字符串中所有出现的给定子字符串"),e(n)])]),p0,t("td",b0,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[j0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[k0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[M0]),_:1})]),t("td",v0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I0,t("td",H0,[t("a",w0,[l("队列中可以看到的人数"),e(n)])]),E0,t("td",q0,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[z0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[O0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[N0]),_:1})]),t("td",L0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B0,t("td",V0,[t("a",C0,[l("所有子数组最小值中的最大值"),e(n)])]),Q0,t("td",R0,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Z0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[G0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[K0]),_:1})]),t("td",S0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T0,t("td",U0,[t("a",X0,[l("使字符串平衡的最小交换次数"),e(n)])]),t("td",Y0,[e(s,{to:"/leetcode-js/problem/1963.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",A0,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[P0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[D0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[F0]),_:1}),l(),J0]),t("td",W0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$0,t("td",tp,[t("a",ep,[l("游戏中弱角色的数量"),e(n)])]),lp,t("td",op,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[sp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[np]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[dp]),_:1}),l(),_p]),t("td",cp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ip,t("td",ap,[t("a",rp,[l("反转单词前缀"),e(n)])]),hp,t("td",up,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[fp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[gp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[mp]),_:1})]),t("td",yp,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xp,t("td",pp,[t("a",bp,[l("解出数学表达式的学生分数"),e(n)])]),jp,t("td",kp,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Mp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[vp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ip]),_:1}),l(),Hp]),t("td",wp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ep,t("td",qp,[t("a",zp,[l("含特定字母的最小子序列"),e(n)])]),Op,t("td",Np,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Lp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Bp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Vp]),_:1}),l(),Cp]),t("td",Qp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rp,t("td",Zp,[t("a",Gp,[l("子数组范围和"),e(n)])]),Kp,t("td",Sp,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Tp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Up]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[Xp]),_:1})]),t("td",Yp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ap,t("td",Pp,[t("a",Dp,[l("判断一个括号字符串是否有效"),e(n)])]),Fp,t("td",Jp,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Wp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[$p]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[t3]),_:1})]),t("td",e3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l3,t("td",o3,[t("a",s3,[l("链表最大孪生和"),e(n)])]),n3,t("td",d3,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[_3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[c3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[i3]),_:1})]),t("td",a3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r3,t("td",h3,[t("a",u3,[l("替换数组中的非互质数"),e(n)])]),f3,t("td",g3,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[m3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[x3]),_:1}),l(),p3]),t("td",b3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[j3,t("td",k3,[t("a",M3,[l("统计道路上的碰撞次数"),e(n)])]),v3,t("td",I3,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[H3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[w3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[E3]),_:1})]),t("td",q3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z3,t("td",O3,[t("a",N3,[l("美化数组的最少删除数"),e(n)])]),L3,t("td",B3,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[V3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[C3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Q3]),_:1})]),t("td",R3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z3,t("td",G3,[t("a",K3,[l("设计视频共享平台"),e(n)])]),S3,t("td",T3,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[U3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[X3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Y3]),_:1}),l(),A3]),t("td",P3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[D3,t("td",F3,[t("a",J3,[l("巫师的总力量和"),e(n)])]),W3,t("td",$3,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[tb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[eb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[lb]),_:1}),l(),ob]),t("td",sb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nb,t("td",db,[t("a",_b,[l("在一个网格中可以看到的人数"),e(n)])]),cb,t("td",ib,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ab]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[rb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[hb]),_:1}),l(),ub]),t("td",fb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gb,t("td",mb,[t("a",yb,[l("使数组按非递减顺序排列"),e(n)])]),xb,t("td",pb,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[bb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[jb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[kb]),_:1}),l(),Mb]),t("td",vb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ib,t("td",Hb,[t("a",wb,[l("设计一个文本编辑器"),e(n)])]),Eb,t("td",qb,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[zb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Ob]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[Nb]),_:1}),l(),Lb]),t("td",Bb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vb,t("td",Cb,[t("a",Qb,[l("跳跃游戏 VIII"),e(n)])]),Rb,t("td",Zb,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Gb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Kb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Sb]),_:1}),l(),Tb]),t("td",Ub,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xb,t("td",Yb,[t("a",Ab,[l("元素值大于变化阈值的子数组"),e(n)])]),Pb,t("td",Db,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Fb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Jb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Wb]),_:1}),l(),$b]),t("td",t2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e2,t("td",l2,[t("a",o2,[l("寻找可见山的数量"),e(n)])]),s2,t("td",n2,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[d2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[_2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[c2]),_:1}),l(),i2]),t("td",a2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r2,t("td",h2,[t("a",u2,[l("你能拿走的最大图书数量"),e(n)])]),f2,t("td",g2,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[m2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[x2]),_:1}),l(),p2]),t("td",b2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[j2,t("td",k2,[t("a",M2,[l("根据模式串构造最小数字"),e(n)])]),v2,t("td",I2,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[H2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[w2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[E2]),_:1}),l(),q2]),t("td",z2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O2,t("td",N2,[t("a",L2,[l("从字符串中移除星号"),e(n)])]),B2,t("td",V2,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[C2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Q2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[R2]),_:1})]),t("td",Z2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G2,t("td",K2,[t("a",S2,[l("使用机器人打印字典序最小的字符串"),e(n)])]),T2,t("td",U2,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[X2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Y2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[A2]),_:1}),l(),P2]),t("td",D2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F2,t("td",J2,[t("a",W2,[l("下一个更大元素 IV"),e(n)])]),$2,t("td",t4,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[e4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[l4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[o4]),_:1}),l(),s4]),t("td",n4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d4,t("td",_4,[t("a",c4,[l("从链表中移除节点"),e(n)])]),i4,t("td",a4,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[r4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[h4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[u4]),_:1}),l(),f4]),t("td",g4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m4,t("td",y4,[t("a",x4,[l("完成所有任务的最少时间"),e(n)])]),p4,t("td",b4,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[j4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[k4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[M4]),_:1}),l(),v4]),t("td",I4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H4,t("td",w4,[t("a",E4,[l("网格图中最少访问的格子数"),e(n)])]),q4,t("td",z4,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[O4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[N4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[L4]),_:1}),l(),B4]),t("td",V4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[C4,t("td",Q4,[t("a",R4,[l("构造有效字符串的最少插入数"),e(n)])]),Z4,t("td",G4,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[K4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[S4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[T4]),_:1}),l(),U4]),t("td",X4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y4,t("td",A4,[t("a",P4,[l("删除子串后的字符串最小长度"),e(n)])]),t("td",D4,[e(s,{to:"/leetcode-js/problem/2696.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",F4,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[J4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[W4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[$4]),_:1})]),t("td",t6,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[e6,t("td",l6,[t("a",o6,[l("最大和查询"),e(n)])]),s6,t("td",n6,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[d6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[_6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[c6]),_:1}),l(),i6]),t("td",a6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[r6,t("td",h6,[t("a",u6,[l("机器人碰撞"),e(n)])]),f6,t("td",g6,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[m6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[x6]),_:1}),l(),p6]),t("td",b6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[j6,t("td",k6,[t("a",M6,[l("数组是否表示某二叉树的前序遍历"),e(n)])]),v6,t("td",I6,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[H6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[w6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[E6]),_:1}),l(),q6]),t("td",z6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O6,t("td",N6,[t("a",L6,[l("子序列最大优雅度"),e(n)])]),B6,t("td",V6,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[C6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Q6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[R6]),_:1}),l(),Z6]),t("td",G6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K6,t("td",S6,[t("a",T6,[l("翻倍以链表形式表示的数字"),e(n)])]),U6,t("td",X6,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Y6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[A6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[P6]),_:1})]),t("td",D6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F6,t("td",J6,[t("a",W6,[l("操作使得分最大"),e(n)])]),$6,t("td",t8,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[e8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[l8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[o8]),_:1}),l(),s8]),t("td",n8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d8,t("td",_8,[t("a",c8,[l("每个元素为最大值的最大范围"),e(n)])]),i8,t("td",a8,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[r8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[h8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[u8]),_:1})]),t("td",f8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g8,t("td",m8,[t("a",y8,[l("最长半递减子数组的长度"),e(n)])]),x8,t("td",p8,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[b8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[j8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[k8]),_:1}),l(),M8]),t("td",v8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I8,t("td",H8,[t("a",w8,[l("美丽塔 I"),e(n)])]),E8,t("td",q8,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[z8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[O8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[N8]),_:1})]),t("td",L8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B8,t("td",V8,[t("a",C8,[l("美丽塔 II"),e(n)])]),Q8,t("td",R8,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Z8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[G8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[K8]),_:1})]),t("td",S8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T8,t("td",U8,[t("a",X8,[l("找到 Alice 和 Bob 可以相遇的建筑"),e(n)])]),Y8,t("td",A8,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[P8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[D8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[F8]),_:1}),l(),J8]),t("td",W8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$8,t("td",tj,[t("a",ej,[l("找到最大非递减数组的长度"),e(n)])]),lj,t("td",oj,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[sj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[nj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[dj]),_:1}),l(),_j]),t("td",cj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ij,t("td",aj,[t("a",rj,[l("边界元素是最大值的子数组数目"),e(n)])]),hj,t("td",uj,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[fj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[gj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[mj]),_:1}),l(),yj]),t("td",xj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pj,t("td",bj,[t("a",jj,[l("删除星号以后字典序最小的字符串"),e(n)])]),kj,t("td",Mj,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[vj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Ij]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Hj]),_:1}),l(),wj]),t("td",Ej,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qj,t("td",zj,[t("a",Oj,[l("清除数字"),e(n)])]),Nj,t("td",Lj,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Bj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Vj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[Cj]),_:1})]),t("td",Qj,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Rj,t("td",Zj,[t("a",Gj,[l("最大数组跳跃得分 I"),e(n)])]),Kj,t("td",Sj,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Tj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Uj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Xj]),_:1}),l(),Yj]),t("td",Aj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pj,t("td",Dj,[t("a",Fj,[l("最大数组跳跃得分 II"),e(n)])]),Jj,t("td",Wj,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[$j]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[t5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[e5]),_:1}),l(),l5]),t("td",o5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s5,t("td",n5,[t("a",d5,[l("使数组等于目标数组所需的最少操作次数"),e(n)])]),_5,t("td",c5,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[i5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[a5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[r5]),_:1}),l(),h5]),t("td",u5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f5,t("td",g5,[t("a",m5,[l("从尾到头打印链表"),e(n)])]),t("td",y5,[e(s,{to:"/leetcode-js/problem/jz_offer_06_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",x5,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[p5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[b5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[j5]),_:1}),l(),k5]),t("td",M5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[v5,t("td",I5,[t("a",H5,[l("用两个栈实现队列"),e(n)])]),t("td",w5,[e(s,{to:"/leetcode-js/problem/jz_offer_09_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",E5,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[q5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[z5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[O5]),_:1})]),t("td",N5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[L5,t("td",B5,[t("a",V5,[l("包含min函数的栈"),e(n)])]),t("td",C5,[e(s,{to:"/leetcode-js/problem/jz_offer_30_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Q5,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[R5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Z5]),_:1})]),t("td",G5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[K5,t("td",S5,[t("a",T5,[l("栈的压入、弹出序列"),e(n)])]),t("td",U5,[e(s,{to:"/leetcode-js/problem/jz_offer_31_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",X5,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Y5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[A5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[P5]),_:1})]),t("td",D5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F5,t("td",J5,[t("a",W5,[l("二叉搜索树的后序遍历序列"),e(n)])]),t("td",$5,[e(s,{to:"/leetcode-js/problem/jz_offer_33_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",t7,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[e7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[l7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[o7]),_:1}),l(),s7]),t("td",n7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d7,t("td",_7,[t("a",c7,[l("二叉搜索树与双向链表"),e(n)])]),t("td",i7,[e(s,{to:"/leetcode-js/problem/jz_offer_36_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",a7,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[r7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[h7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[u7]),_:1}),l(),f7]),t("td",g7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m7,t("td",y7,[t("a",x7,[l("链表中的两数相加"),e(n)])]),p7,t("td",b7,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[j7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[k7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[M7]),_:1})]),t("td",v7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I7,t("td",H7,[t("a",w7,[l("重排链表"),e(n)])]),E7,t("td",q7,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[z7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[O7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[N7]),_:1}),l(),L7]),t("td",B7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[V7,t("td",C7,[t("a",Q7,[l("回文链表"),e(n)])]),t("td",R7,[e(s,{to:"/leetcode-js/problem/jz_offer_II_027.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Z7,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[G7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[K7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[S7]),_:1}),l(),T7]),t("td",U7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[X7,t("td",Y7,[t("a",A7,[l("后缀表达式"),e(n)])]),P7,t("td",D7,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[F7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[J7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[W7]),_:1})]),t("td",$7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t9,t("td",e9,[t("a",l9,[l("小行星碰撞"),e(n)])]),o9,t("td",s9,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[n9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[d9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[_9]),_:1})]),t("td",c9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i9,t("td",a9,[t("a",r9,[l("每日温度"),e(n)])]),h9,t("td",u9,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[f9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[g9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[m9]),_:1})]),t("td",y9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[x9,t("td",p9,[t("a",b9,[l("直方图最大矩形面积"),e(n)])]),j9,t("td",k9,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[M9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[v9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[I9]),_:1})]),t("td",H9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[w9,t("td",E9,[t("a",q9,[l("矩阵中最大的矩形"),e(n)])]),z9,t("td",O9,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[N9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[L9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[B9]),_:1}),l(),V9]),t("td",C9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Q9,t("td",R9,[t("a",Z9,[l("展平二叉搜索树"),e(n)])]),G9,t("td",K9,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[S9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[T9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[U9]),_:1}),l(),X9]),t("td",Y9,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[A9,t("td",P9,[t("a",D9,[l("二叉搜索树迭代器"),e(n)])]),F9,t("td",J9,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[W9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[tk]),_:1}),l(),ek]),t("td",lk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ok,t("td",sk,[t("a",nk,[l("回文链表"),e(n)])]),dk,t("td",_k,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ck]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[ik]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[ak]),_:1}),l(),rk]),t("td",hk,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[uk,t("td",fk,[t("a",gk,[l("三合一"),e(n)])]),mk,t("td",yk,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[xk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[pk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[bk]),_:1})]),t("td",jk,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[kk,t("td",Mk,[t("a",vk,[l("栈的最小值"),e(n)])]),Ik,t("td",Hk,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[wk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Ek]),_:1})]),t("td",qk,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zk,t("td",Ok,[t("a",Nk,[l("堆盘子"),e(n)])]),Lk,t("td",Bk,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Vk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Ck]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[Qk]),_:1})]),t("td",Rk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zk,t("td",Gk,[t("a",Kk,[l("化栈为队"),e(n)])]),Sk,t("td",Tk,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Uk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Xk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[Yk]),_:1})]),t("td",Ak,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Pk,t("td",Dk,[t("a",Fk,[l("栈排序"),e(n)])]),Jk,t("td",Wk,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[$k]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[tM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[eM]),_:1})]),t("td",lM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oM,t("td",sM,[t("a",nM,[l("部分排序"),e(n)])]),dM,t("td",_M,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[cM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[iM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[aM]),_:1}),l(),rM]),t("td",hM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uM,t("td",fM,[t("a",gM,[l("计算器"),e(n)])]),mM,t("td",yM,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[xM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[pM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[bM]),_:1})]),t("td",jM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kM,t("td",MM,[t("a",vM,[l("BiNode"),e(n)])]),IM,t("td",HM,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[wM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[EM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[qM]),_:1}),l(),zM]),t("td",OM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[NM,t("td",LM,[t("a",BM,[l("直方图的水量"),e(n)])]),VM,t("td",CM,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[QM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[RM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[ZM]),_:1}),l(),GM]),t("td",KM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])])])}const YM=c(h,[["render",SM],["__file","stack.html.vue"]]);export{YM as default};
