import{_ as c,r as _,o as i,c as a,a as t,d as e,w as o,b as l,f as r}from"./app-mvY9N9Pc.js";const u={},h=t("h1",{id:"线段树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#线段树","aria-hidden":"true"},"#"),l(" 线段树")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),H=t("code",null,"单调栈",-1),q=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),M=t("code",null,"字符串",-1),L=t("code",null,"字符串匹配",-1),C=t("code",null,"树",-1),j=t("code",null,"二叉树",-1),z=t("code",null,"二叉搜索树",-1),K=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),E=t("code",null,"强连通分量",-1),O=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),Q=t("code",null,"并查集",-1),T=t("code",null,"字典树",-1),A=t("span",{class:"blue"},"线段树",-1),G=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),D=t("p",null,[t("strong",null,"算法")],-1),F=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ut=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Ht=t("code",null,"模拟",-1),qt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),Mt=t("code",null,"拒绝采样",-1),Lt=t("code",null,"数据库",-1),Ct=t("code",null,"设计",-1),jt=t("code",null,"数据流",-1),zt=t("code",null,"脑筋急转弯",-1),Kt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Et=t("td",{style:{"text-align":"center"}},"218",-1),Ot={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},Qt=t("td",{style:{"text-align":"center"}},null,-1),Tt={style:{"text-align":"left"}},At=t("code",null,"树状数组",-1),Gt=t("code",null,"线段树",-1),Jt=t("code",null,"数组",-1),Dt=t("code",null,"4+",-1),Ft={style:{"text-align":"left"}},St=t("td",{style:{"text-align":"center"}},"307",-1),Ut={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/range-sum-query-mutable",target:"_blank",rel:"noopener noreferrer"},Xt={style:{"text-align":"center"}},Yt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0307",target:"_blank",rel:"noopener noreferrer"},Zt={style:{"text-align":"left"}},$t=t("code",null,"设计",-1),te=t("code",null,"树状数组",-1),ee=t("code",null,"线段树",-1),le=t("code",null,"1+",-1),oe={style:{"text-align":"left"}},ne=t("td",{style:{"text-align":"center"}},"308",-1),de={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/range-sum-query-2d-mutable",target:"_blank",rel:"noopener noreferrer"},_e=t("td",{style:{"text-align":"center"}},null,-1),ce={style:{"text-align":"left"}},ie=t("code",null,"设计",-1),ae=t("code",null,"树状数组",-1),re=t("code",null,"线段树",-1),ue=t("code",null,"2+",-1),he={style:{"text-align":"left"}},fe=t("td",{style:{"text-align":"center"}},"315",-1),ge={style:{"text-align":"left"}},me={href:"https://leetcode.com/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},ye=t("td",{style:{"text-align":"center"}},null,-1),xe={style:{"text-align":"left"}},be=t("code",null,"树状数组",-1),pe=t("code",null,"线段树",-1),ke=t("code",null,"数组",-1),He=t("code",null,"4+",-1),qe={style:{"text-align":"left"}},Ie=t("td",{style:{"text-align":"center"}},"327",-1),ve={style:{"text-align":"left"}},we={href:"https://leetcode.com/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},Me=t("td",{style:{"text-align":"center"}},null,-1),Le={style:{"text-align":"left"}},Ce=t("code",null,"树状数组",-1),je=t("code",null,"线段树",-1),ze=t("code",null,"数组",-1),Ke=t("code",null,"4+",-1),Be={style:{"text-align":"left"}},Ne=t("td",{style:{"text-align":"center"}},"406",-1),Pe={style:{"text-align":"left"}},Ve={href:"https://leetcode.com/problems/queue-reconstruction-by-height",target:"_blank",rel:"noopener noreferrer"},Ee=t("td",{style:{"text-align":"center"}},null,-1),Oe={style:{"text-align":"left"}},Re=t("code",null,"树状数组",-1),Qe=t("code",null,"线段树",-1),Te=t("code",null,"数组",-1),Ae=t("code",null,"1+",-1),Ge={style:{"text-align":"left"}},Je=t("td",{style:{"text-align":"center"}},"493",-1),De={style:{"text-align":"left"}},Fe={href:"https://leetcode.com/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},Se=t("td",{style:{"text-align":"center"}},null,-1),Ue={style:{"text-align":"left"}},We=t("code",null,"树状数组",-1),Xe=t("code",null,"线段树",-1),Ye=t("code",null,"数组",-1),Ze=t("code",null,"4+",-1),$e={style:{"text-align":"left"}},tl=t("td",{style:{"text-align":"center"}},"673",-1),el={style:{"text-align":"left"}},ll={href:"https://leetcode.com/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},ol=t("td",{style:{"text-align":"center"}},null,-1),nl={style:{"text-align":"left"}},dl=t("code",null,"树状数组",-1),sl=t("code",null,"线段树",-1),_l=t("code",null,"数组",-1),cl=t("code",null,"1+",-1),il={style:{"text-align":"left"}},al=t("td",{style:{"text-align":"center"}},"683",-1),rl={style:{"text-align":"left"}},ul={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},hl=t("td",{style:{"text-align":"center"}},null,-1),fl={style:{"text-align":"left"}},gl=t("code",null,"树状数组",-1),ml=t("code",null,"线段树",-1),yl=t("code",null,"队列",-1),xl=t("code",null,"5+",-1),bl={style:{"text-align":"left"}},pl=t("td",{style:{"text-align":"center"}},"699",-1),kl={style:{"text-align":"left"}},Hl={href:"https://leetcode.com/problems/falling-squares",target:"_blank",rel:"noopener noreferrer"},ql=t("td",{style:{"text-align":"center"}},null,-1),Il={style:{"text-align":"left"}},vl=t("code",null,"线段树",-1),wl=t("code",null,"数组",-1),Ml=t("code",null,"有序集合",-1),Ll={style:{"text-align":"left"}},Cl=t("td",{style:{"text-align":"center"}},"715",-1),jl={style:{"text-align":"left"}},zl={href:"https://leetcode.com/problems/range-module",target:"_blank",rel:"noopener noreferrer"},Kl=t("td",{style:{"text-align":"center"}},null,-1),Bl={style:{"text-align":"left"}},Nl=t("code",null,"设计",-1),Pl=t("code",null,"线段树",-1),Vl=t("code",null,"有序集合",-1),El={style:{"text-align":"left"}},Ol=t("td",{style:{"text-align":"center"}},"729",-1),Rl={style:{"text-align":"left"}},Ql={href:"https://leetcode.com/problems/my-calendar-i",target:"_blank",rel:"noopener noreferrer"},Tl={style:{"text-align":"center"}},Al={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0729",target:"_blank",rel:"noopener noreferrer"},Gl={style:{"text-align":"left"}},Jl=t("code",null,"设计",-1),Dl=t("code",null,"线段树",-1),Fl=t("code",null,"数组",-1),Sl=t("code",null,"2+",-1),Ul={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"731",-1),Xl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/my-calendar-ii",target:"_blank",rel:"noopener noreferrer"},Zl={style:{"text-align":"center"}},$l={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0731",target:"_blank",rel:"noopener noreferrer"},to={style:{"text-align":"left"}},eo=t("code",null,"设计",-1),lo=t("code",null,"线段树",-1),oo=t("code",null,"数组",-1),no=t("code",null,"3+",-1),so={style:{"text-align":"left"}},_o=t("td",{style:{"text-align":"center"}},"732",-1),co={style:{"text-align":"left"}},io={href:"https://leetcode.com/problems/my-calendar-iii",target:"_blank",rel:"noopener noreferrer"},ao=t("td",{style:{"text-align":"center"}},null,-1),ro={style:{"text-align":"left"}},uo=t("code",null,"设计",-1),ho=t("code",null,"线段树",-1),fo=t("code",null,"二分查找",-1),go=t("code",null,"2+",-1),mo={style:{"text-align":"left"}},yo=t("td",{style:{"text-align":"center"}},"850",-1),xo={style:{"text-align":"left"}},bo={href:"https://leetcode.com/problems/rectangle-area-ii",target:"_blank",rel:"noopener noreferrer"},po=t("td",{style:{"text-align":"center"}},null,-1),ko={style:{"text-align":"left"}},Ho=t("code",null,"线段树",-1),qo=t("code",null,"数组",-1),Io=t("code",null,"有序集合",-1),vo=t("code",null,"1+",-1),wo={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"center"}},"1157",-1),Lo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/online-majority-element-in-subarray",target:"_blank",rel:"noopener noreferrer"},jo=t("td",{style:{"text-align":"center"}},null,-1),zo={style:{"text-align":"left"}},Ko=t("code",null,"设计",-1),Bo=t("code",null,"树状数组",-1),No=t("code",null,"线段树",-1),Po=t("code",null,"2+",-1),Vo={style:{"text-align":"left"}},Eo=t("td",{style:{"text-align":"center"}},"1395",-1),Oo={style:{"text-align":"left"}},Ro={href:"https://leetcode.com/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},Qo=t("td",{style:{"text-align":"center"}},null,-1),To={style:{"text-align":"left"}},Ao=t("code",null,"树状数组",-1),Go=t("code",null,"线段树",-1),Jo=t("code",null,"数组",-1),Do=t("code",null,"1+",-1),Fo={style:{"text-align":"left"}},So=t("td",{style:{"text-align":"center"}},"1505",-1),Uo={style:{"text-align":"left"}},Wo={href:"https://leetcode.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",target:"_blank",rel:"noopener noreferrer"},Xo=t("td",{style:{"text-align":"center"}},null,-1),Yo={style:{"text-align":"left"}},Zo=t("code",null,"贪心",-1),$o=t("code",null,"树状数组",-1),tn=t("code",null,"线段树",-1),en=t("code",null,"1+",-1),ln={style:{"text-align":"left"}},on=t("td",{style:{"text-align":"center"}},"1521",-1),nn={style:{"text-align":"left"}},dn={href:"https://leetcode.com/problems/find-a-value-of-a-mysterious-function-closest-to-target",target:"_blank",rel:"noopener noreferrer"},sn=t("td",{style:{"text-align":"center"}},null,-1),_n={style:{"text-align":"left"}},cn=t("code",null,"位运算",-1),an=t("code",null,"线段树",-1),rn=t("code",null,"数组",-1),un=t("code",null,"1+",-1),hn={style:{"text-align":"left"}},fn=t("td",{style:{"text-align":"center"}},"1622",-1),gn={style:{"text-align":"left"}},mn={href:"https://leetcode.com/problems/fancy-sequence",target:"_blank",rel:"noopener noreferrer"},yn=t("td",{style:{"text-align":"center"}},null,-1),xn={style:{"text-align":"left"}},bn=t("code",null,"设计",-1),pn=t("code",null,"线段树",-1),kn=t("code",null,"数学",-1),Hn={style:{"text-align":"left"}},qn=t("td",{style:{"text-align":"center"}},"1649",-1),In={style:{"text-align":"left"}},vn={href:"https://leetcode.com/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},wn=t("td",{style:{"text-align":"center"}},null,-1),Mn={style:{"text-align":"left"}},Ln=t("code",null,"树状数组",-1),Cn=t("code",null,"线段树",-1),jn=t("code",null,"数组",-1),zn=t("code",null,"4+",-1),Kn={style:{"text-align":"left"}},Bn=t("td",{style:{"text-align":"center"}},"1687",-1),Nn={style:{"text-align":"left"}},Pn={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},Vn=t("td",{style:{"text-align":"center"}},null,-1),En={style:{"text-align":"left"}},On=t("code",null,"线段树",-1),Rn=t("code",null,"队列",-1),Qn=t("code",null,"数组",-1),Tn=t("code",null,"4+",-1),An={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"2031",-1),Jn={style:{"text-align":"left"}},Dn={href:"https://leetcode.com/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},Fn=t("td",{style:{"text-align":"center"}},null,-1),Sn={style:{"text-align":"left"}},Un=t("code",null,"树状数组",-1),Wn=t("code",null,"线段树",-1),Xn=t("code",null,"数组",-1),Yn=t("code",null,"4+",-1),Zn={style:{"text-align":"left"}},$n=t("td",{style:{"text-align":"center"}},"2080",-1),td={style:{"text-align":"left"}},ed={href:"https://leetcode.com/problems/range-frequency-queries",target:"_blank",rel:"noopener noreferrer"},ld=t("td",{style:{"text-align":"center"}},null,-1),od={style:{"text-align":"left"}},nd=t("code",null,"设计",-1),dd=t("code",null,"线段树",-1),sd=t("code",null,"数组",-1),_d=t("code",null,"2+",-1),cd={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"2158",-1),ad={style:{"text-align":"left"}},rd={href:"https://leetcode.com/problems/amount-of-new-area-painted-each-day",target:"_blank",rel:"noopener noreferrer"},ud=t("td",{style:{"text-align":"center"}},null,-1),hd={style:{"text-align":"left"}},fd=t("code",null,"线段树",-1),gd=t("code",null,"数组",-1),md=t("code",null,"有序集合",-1),yd={style:{"text-align":"left"}},xd=t("td",{style:{"text-align":"center"}},"2179",-1),bd={style:{"text-align":"left"}},pd={href:"https://leetcode.com/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},kd=t("td",{style:{"text-align":"center"}},null,-1),Hd={style:{"text-align":"left"}},qd=t("code",null,"树状数组",-1),Id=t("code",null,"线段树",-1),vd=t("code",null,"数组",-1),wd=t("code",null,"4+",-1),Md={style:{"text-align":"left"}},Ld=t("td",{style:{"text-align":"center"}},"2213",-1),Cd={style:{"text-align":"left"}},jd={href:"https://leetcode.com/problems/longest-substring-of-one-repeating-character",target:"_blank",rel:"noopener noreferrer"},zd=t("td",{style:{"text-align":"center"}},null,-1),Kd={style:{"text-align":"left"}},Bd=t("code",null,"线段树",-1),Nd=t("code",null,"数组",-1),Pd=t("code",null,"字符串",-1),Vd=t("code",null,"1+",-1),Ed={style:{"text-align":"left"}},Od=t("td",{style:{"text-align":"center"}},"2276",-1),Rd={style:{"text-align":"left"}},Qd={href:"https://leetcode.com/problems/count-integers-in-intervals",target:"_blank",rel:"noopener noreferrer"},Td=t("td",{style:{"text-align":"center"}},null,-1),Ad={style:{"text-align":"left"}},Gd=t("code",null,"设计",-1),Jd=t("code",null,"线段树",-1),Dd=t("code",null,"有序集合",-1),Fd={style:{"text-align":"left"}},Sd=t("td",{style:{"text-align":"center"}},"2286",-1),Ud={style:{"text-align":"left"}},Wd={href:"https://leetcode.com/problems/booking-concert-tickets-in-groups",target:"_blank",rel:"noopener noreferrer"},Xd=t("td",{style:{"text-align":"center"}},null,-1),Yd={style:{"text-align":"left"}},Zd=t("code",null,"设计",-1),$d=t("code",null,"树状数组",-1),ts=t("code",null,"线段树",-1),es=t("code",null,"1+",-1),ls={style:{"text-align":"left"}},os=t("td",{style:{"text-align":"center"}},"2407",-1),ns={style:{"text-align":"left"}},ds={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},ss=t("td",{style:{"text-align":"center"}},null,-1),_s={style:{"text-align":"left"}},cs=t("code",null,"树状数组",-1),is=t("code",null,"线段树",-1),as=t("code",null,"队列",-1),rs=t("code",null,"4+",-1),us={style:{"text-align":"left"}},hs=t("td",{style:{"text-align":"center"}},"2424",-1),fs={style:{"text-align":"left"}},gs={href:"https://leetcode.com/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},ms=t("td",{style:{"text-align":"center"}},null,-1),ys={style:{"text-align":"left"}},xs=t("code",null,"并查集",-1),bs=t("code",null,"设计",-1),ps=t("code",null,"树状数组",-1),ks=t("code",null,"4+",-1),Hs={style:{"text-align":"left"}},qs=t("td",{style:{"text-align":"center"}},"2426",-1),Is={style:{"text-align":"left"}},vs={href:"https://leetcode.com/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},ws=t("td",{style:{"text-align":"center"}},null,-1),Ms={style:{"text-align":"left"}},Ls=t("code",null,"树状数组",-1),Cs=t("code",null,"线段树",-1),js=t("code",null,"数组",-1),zs=t("code",null,"4+",-1),Ks={style:{"text-align":"left"}},Bs=t("td",{style:{"text-align":"center"}},"2519",-1),Ns={style:{"text-align":"left"}},Ps={href:"https://leetcode.com/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},Vs=t("td",{style:{"text-align":"center"}},null,-1),Es={style:{"text-align":"left"}},Os=t("code",null,"树状数组",-1),Rs=t("code",null,"线段树",-1),Qs=t("code",null,"数组",-1),Ts=t("code",null,"4+",-1),As={style:{"text-align":"left"}},Gs=t("td",{style:{"text-align":"center"}},"2569",-1),Js={style:{"text-align":"left"}},Ds={href:"https://leetcode.com/problems/handling-sum-queries-after-update",target:"_blank",rel:"noopener noreferrer"},Fs=t("td",{style:{"text-align":"center"}},null,-1),Ss={style:{"text-align":"left"}},Us=t("code",null,"线段树",-1),Ws=t("code",null,"数组",-1),Xs={style:{"text-align":"left"}},Ys=t("td",{style:{"text-align":"center"}},"2659",-1),Zs={style:{"text-align":"left"}},$s={href:"https://leetcode.com/problems/make-array-empty",target:"_blank",rel:"noopener noreferrer"},t_=t("td",{style:{"text-align":"center"}},null,-1),e_={style:{"text-align":"left"}},l_=t("code",null,"贪心",-1),o_=t("code",null,"树状数组",-1),n_=t("code",null,"线段树",-1),d_=t("code",null,"4+",-1),s_={style:{"text-align":"left"}},__=t("td",{style:{"text-align":"center"}},"2736",-1),c_={style:{"text-align":"left"}},i_={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},a_=t("td",{style:{"text-align":"center"}},null,-1),r_={style:{"text-align":"left"}},u_=t("code",null,"栈",-1),h_=t("code",null,"树状数组",-1),f_=t("code",null,"线段树",-1),g_=t("code",null,"4+",-1),m_={style:{"text-align":"left"}},y_=t("td",{style:{"text-align":"center"}},"2907",-1),x_={style:{"text-align":"left"}},b_={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-i",target:"_blank",rel:"noopener noreferrer"},p_=t("td",{style:{"text-align":"center"}},null,-1),k_={style:{"text-align":"left"}},H_=t("code",null,"树状数组",-1),q_=t("code",null,"线段树",-1),I_=t("code",null,"数组",-1),v_={style:{"text-align":"left"}},w_=t("td",{style:{"text-align":"center"}},"2916",-1),M_={style:{"text-align":"left"}},L_={href:"https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},C_=t("td",{style:{"text-align":"center"}},null,-1),j_={style:{"text-align":"left"}},z_=t("code",null,"树状数组",-1),K_=t("code",null,"线段树",-1),B_=t("code",null,"数组",-1),N_=t("code",null,"1+",-1),P_={style:{"text-align":"left"}},V_=t("td",{style:{"text-align":"center"}},"2921",-1),E_={style:{"text-align":"left"}},O_={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-ii",target:"_blank",rel:"noopener noreferrer"},R_=t("td",{style:{"text-align":"center"}},null,-1),Q_={style:{"text-align":"left"}},T_=t("code",null,"树状数组",-1),A_=t("code",null,"线段树",-1),G_=t("code",null,"数组",-1),J_={style:{"text-align":"left"}},D_=t("td",{style:{"text-align":"center"}},"2926",-1),F_={style:{"text-align":"left"}},S_={href:"https://leetcode.com/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},U_=t("td",{style:{"text-align":"center"}},null,-1),W_={style:{"text-align":"left"}},X_=t("code",null,"树状数组",-1),Y_=t("code",null,"线段树",-1),Z_=t("code",null,"数组",-1),$_=t("code",null,"2+",-1),tc={style:{"text-align":"left"}},ec=t("td",{style:{"text-align":"center"}},"2940",-1),lc={style:{"text-align":"left"}},oc={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},nc=t("td",{style:{"text-align":"center"}},null,-1),dc={style:{"text-align":"left"}},sc=t("code",null,"栈",-1),_c=t("code",null,"树状数组",-1),cc=t("code",null,"线段树",-1),ic=t("code",null,"4+",-1),ac={style:{"text-align":"left"}},rc=t("td",{style:{"text-align":"center"}},"3072",-1),uc={style:{"text-align":"left"}},hc={href:"https://leetcode.com/problems/distribute-elements-into-two-arrays-ii",target:"_blank",rel:"noopener noreferrer"},fc=t("td",{style:{"text-align":"center"}},null,-1),gc={style:{"text-align":"left"}},mc=t("code",null,"树状数组",-1),yc=t("code",null,"线段树",-1),xc=t("code",null,"数组",-1),bc=t("code",null,"1+",-1),pc={style:{"text-align":"left"}},kc=t("td",{style:{"text-align":"center"}},"3109",-1),Hc={style:{"text-align":"left"}},qc={href:"https://leetcode.com/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},Ic=t("td",{style:{"text-align":"center"}},null,-1),vc={style:{"text-align":"left"}},wc=t("code",null,"树状数组",-1),Mc=t("code",null,"线段树",-1),Lc=t("code",null,"数组",-1),Cc=t("code",null,"4+",-1),jc={style:{"text-align":"left"}},zc=t("td",{style:{"text-align":"center"}},"3117",-1),Kc={style:{"text-align":"left"}},Bc={href:"https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},Nc=t("td",{style:{"text-align":"center"}},null,-1),Pc={style:{"text-align":"left"}},Vc=t("code",null,"位运算",-1),Ec=t("code",null,"线段树",-1),Oc=t("code",null,"队列",-1),Rc=t("code",null,"3+",-1),Qc={style:{"text-align":"left"}},Tc=t("td",{style:{"text-align":"center"}},"3161",-1),Ac={style:{"text-align":"left"}},Gc={href:"https://leetcode.com/problems/block-placement-queries",target:"_blank",rel:"noopener noreferrer"},Jc=t("td",{style:{"text-align":"center"}},null,-1),Dc={style:{"text-align":"left"}},Fc=t("code",null,"树状数组",-1),Sc=t("code",null,"线段树",-1),Uc=t("code",null,"数组",-1),Wc=t("code",null,"1+",-1),Xc={style:{"text-align":"left"}},Yc=t("td",{style:{"text-align":"center"}},"3165",-1),Zc={style:{"text-align":"left"}},$c={href:"https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},ti=t("td",{style:{"text-align":"center"}},null,-1),ei={style:{"text-align":"left"}},li=t("code",null,"线段树",-1),oi=t("code",null,"数组",-1),ni=t("code",null,"分治",-1),di=t("code",null,"1+",-1),si={style:{"text-align":"left"}},_i=t("td",{style:{"text-align":"center"}},"3171",-1),ci={style:{"text-align":"left"}},ii={href:"https://leetcode.com/problems/find-subarray-with-bitwise-or-closest-to-k",target:"_blank",rel:"noopener noreferrer"},ai=t("td",{style:{"text-align":"center"}},null,-1),ri={style:{"text-align":"left"}},ui=t("code",null,"位运算",-1),hi=t("code",null,"线段树",-1),fi=t("code",null,"数组",-1),gi=t("code",null,"1+",-1),mi={style:{"text-align":"left"}},yi=t("td",{style:{"text-align":"center"}},"3187",-1),xi={style:{"text-align":"left"}},bi={href:"https://leetcode.com/problems/peaks-in-array",target:"_blank",rel:"noopener noreferrer"},pi=t("td",{style:{"text-align":"center"}},null,-1),ki={style:{"text-align":"left"}},Hi=t("code",null,"树状数组",-1),qi=t("code",null,"线段树",-1),Ii=t("code",null,"数组",-1),vi={style:{"text-align":"left"}},wi=t("td",{style:{"text-align":"center"}},"3209",-1),Mi={style:{"text-align":"left"}},Li={href:"https://leetcode.com/problems/number-of-subarrays-with-and-value-of-k",target:"_blank",rel:"noopener noreferrer"},Ci=t("td",{style:{"text-align":"center"}},null,-1),ji={style:{"text-align":"left"}},zi=t("code",null,"位运算",-1),Ki=t("code",null,"线段树",-1),Bi=t("code",null,"数组",-1),Ni=t("code",null,"1+",-1),Pi={style:{"text-align":"left"}},Vi=t("td",{style:{"text-align":"center"}},"3291",-1),Ei={style:{"text-align":"left"}},Oi={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Ri=t("td",{style:{"text-align":"center"}},null,-1),Qi={style:{"text-align":"left"}},Ti=t("code",null,"字典树",-1),Ai=t("code",null,"线段树",-1),Gi=t("code",null,"数组",-1),Ji=t("code",null,"6+",-1),Di={style:{"text-align":"left"}},Fi=t("td",{style:{"text-align":"center"}},"3292",-1),Si={style:{"text-align":"left"}},Ui={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},Wi=t("td",{style:{"text-align":"center"}},null,-1),Xi={style:{"text-align":"left"}},Yi=t("code",null,"线段树",-1),Zi=t("code",null,"数组",-1),$i=t("code",null,"字符串",-1),ta=t("code",null,"5+",-1),ea={style:{"text-align":"left"}},la=t("td",{style:{"text-align":"center"}},"LCP 05",-1),oa={style:{"text-align":"left"}},na={href:"https://leetcode.cn/problems/coin-bonus",target:"_blank",rel:"noopener noreferrer"},da=t("td",{style:{"text-align":"center"}},null,-1),sa={style:{"text-align":"left"}},_a=t("code",null,"树状数组",-1),ca=t("code",null,"线段树",-1),ia=t("code",null,"数组",-1),aa={style:{"text-align":"left"}},ra=t("td",{style:{"text-align":"center"}},"LCP 09",-1),ua={style:{"text-align":"left"}},ha={href:"https://leetcode.cn/problems/zui-xiao-tiao-yue-ci-shu",target:"_blank",rel:"noopener noreferrer"},fa=t("td",{style:{"text-align":"center"}},null,-1),ga={style:{"text-align":"left"}},ma=t("code",null,"广度优先搜索",-1),ya=t("code",null,"线段树",-1),xa=t("code",null,"数组",-1),ba=t("code",null,"1+",-1),pa={style:{"text-align":"left"}},ka=t("td",{style:{"text-align":"center"}},"LCP 27",-1),Ha={style:{"text-align":"left"}},qa={href:"https://leetcode.cn/problems/IQvJ9i",target:"_blank",rel:"noopener noreferrer"},Ia=t("td",{style:{"text-align":"center"}},null,-1),va={style:{"text-align":"left"}},wa=t("code",null,"设计",-1),Ma=t("code",null,"线段树",-1),La=t("code",null,"数学",-1),Ca=t("code",null,"1+",-1),ja={style:{"text-align":"left"}},za=t("td",{style:{"text-align":"center"}},"LCP 52",-1),Ka={style:{"text-align":"left"}},Ba={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},Na=t("td",{style:{"text-align":"center"}},null,-1),Pa={style:{"text-align":"left"}},Va=t("code",null,"树",-1),Ea=t("code",null,"线段树",-1),Oa=t("code",null,"二叉搜索树",-1),Ra=t("code",null,"4+",-1),Qa={style:{"text-align":"left"}},Ta=t("td",{style:{"text-align":"center"}},"剑指 Offer 51",-1),Aa={style:{"text-align":"left"}},Ga={href:"https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof",target:"_blank",rel:"noopener noreferrer"},Ja=t("td",{style:{"text-align":"center"}},null,-1),Da={style:{"text-align":"left"}},Fa=t("code",null,"树状数组",-1),Sa=t("code",null,"线段树",-1),Ua=t("code",null,"数组",-1),Wa=t("code",null,"4+",-1),Xa={style:{"text-align":"left"}},Ya=t("td",{style:{"text-align":"center"}},"剑指 Offer II 58",-1),Za={style:{"text-align":"left"}},$a={href:"https://leetcode.cn/problems/fi9suh",target:"_blank",rel:"noopener noreferrer"},tr=t("td",{style:{"text-align":"center"}},null,-1),er={style:{"text-align":"left"}},lr=t("code",null,"设计",-1),or=t("code",null,"线段树",-1),nr=t("code",null,"二分查找",-1),dr=t("code",null,"1+",-1),sr={style:{"text-align":"left"}};function _r(cr,ir){const n=_("RouterLink"),d=_("ExternalLinkIcon"),s=_("font");return i(),a("div",null,[h,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[T]),_:1}),l(),A,l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[J]),_:1})]),D,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[Kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Nt]),_:1})])]),Pt,r(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Et,t("td",Ot,[t("a",Rt,[l("天际线问题"),e(d)])]),Qt,t("td",Tt,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[At]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Jt]),_:1}),l(),Dt]),t("td",Ft,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[St,t("td",Ut,[t("a",Wt,[l("区域和检索 - 数组可修改"),e(d)])]),t("td",Xt,[t("a",Yt,[l("[✓]"),e(d)])]),t("td",Zt,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[te]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[ee]),_:1}),l(),le]),t("td",oe,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ne,t("td",de,[t("a",se,[l("二维区域和检索 - 矩阵可修改"),e(d)])]),_e,t("td",ce,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[ie]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ae]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[re]),_:1}),l(),ue]),t("td",he,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fe,t("td",ge,[t("a",me,[l("计算右侧小于当前元素的个数"),e(d)])]),ye,t("td",xe,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[be]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[pe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ke]),_:1}),l(),He]),t("td",qe,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ie,t("td",ve,[t("a",we,[l("区间和的个数"),e(d)])]),Me,t("td",Le,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ce]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[je]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ze]),_:1}),l(),Ke]),t("td",Be,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ne,t("td",Pe,[t("a",Ve,[l("根据身高重建队列"),e(d)])]),Ee,t("td",Oe,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Re]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Qe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Te]),_:1}),l(),Ae]),t("td",Ge,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Je,t("td",De,[t("a",Fe,[l("翻转对"),e(d)])]),Se,t("td",Ue,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[We]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Xe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ye]),_:1}),l(),Ze]),t("td",$e,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tl,t("td",el,[t("a",ll,[l("最长递增子序列的个数"),e(d)])]),ol,t("td",nl,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[dl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[sl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[_l]),_:1}),l(),cl]),t("td",il,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[al,t("td",rl,[t("a",ul,[l("K 个关闭的灯泡"),e(d)])]),hl,t("td",fl,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[gl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[ml]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[yl]),_:1}),l(),xl]),t("td",bl,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pl,t("td",kl,[t("a",Hl,[l("掉落的方块"),e(d)])]),ql,t("td",Il,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[vl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[wl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[Ml]),_:1})]),t("td",Ll,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cl,t("td",jl,[t("a",zl,[l("Range 模块"),e(d)])]),Kl,t("td",Bl,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Nl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Pl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[Vl]),_:1})]),t("td",El,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ol,t("td",Rl,[t("a",Ql,[l("我的日程安排表 I"),e(d)])]),t("td",Tl,[t("a",Al,[l("[✓]"),e(d)])]),t("td",Gl,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Jl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Dl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Fl]),_:1}),l(),Sl]),t("td",Ul,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wl,t("td",Xl,[t("a",Yl,[l("我的日程安排表 II"),e(d)])]),t("td",Zl,[t("a",$l,[l("[✓]"),e(d)])]),t("td",to,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[eo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[lo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[oo]),_:1}),l(),no]),t("td",so,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_o,t("td",co,[t("a",io,[l("我的日程安排表 III"),e(d)])]),ao,t("td",ro,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[uo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[ho]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[fo]),_:1}),l(),go]),t("td",mo,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yo,t("td",xo,[t("a",bo,[l("矩形面积 II"),e(d)])]),po,t("td",ko,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Ho]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[qo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[Io]),_:1}),l(),vo]),t("td",wo,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mo,t("td",Lo,[t("a",Co,[l("子数组中占绝大多数的元素"),e(d)])]),jo,t("td",zo,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Ko]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Bo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[No]),_:1}),l(),Po]),t("td",Vo,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Eo,t("td",Oo,[t("a",Ro,[l("统计作战单位数"),e(d)])]),Qo,t("td",To,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ao]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Go]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Jo]),_:1}),l(),Do]),t("td",Fo,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[So,t("td",Uo,[t("a",Wo,[l("最多 K 次交换相邻数位后得到的最小整数"),e(d)])]),Xo,t("td",Yo,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Zo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[$o]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[tn]),_:1}),l(),en]),t("td",ln,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[on,t("td",nn,[t("a",dn,[l("找到最接近目标值的函数值"),e(d)])]),sn,t("td",_n,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[cn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[an]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[rn]),_:1}),l(),un]),t("td",hn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fn,t("td",gn,[t("a",mn,[l("奇妙序列"),e(d)])]),yn,t("td",xn,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[bn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[pn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[kn]),_:1})]),t("td",Hn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qn,t("td",In,[t("a",vn,[l("通过指令创建有序数组"),e(d)])]),wn,t("td",Mn,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ln]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Cn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[jn]),_:1}),l(),zn]),t("td",Kn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bn,t("td",Nn,[t("a",Pn,[l("从仓库到码头运输箱子"),e(d)])]),Vn,t("td",En,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[On]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Rn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Qn]),_:1}),l(),Tn]),t("td",An,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gn,t("td",Jn,[t("a",Dn,[l("1 比 0 多的子数组个数"),e(d)])]),Fn,t("td",Sn,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Un]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Wn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Xn]),_:1}),l(),Yn]),t("td",Zn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$n,t("td",td,[t("a",ed,[l("区间内查询数字的频率"),e(d)])]),ld,t("td",od,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[nd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[dd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[sd]),_:1}),l(),_d]),t("td",cd,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[id,t("td",ad,[t("a",rd,[l("每天绘制新区域的数量"),e(d)])]),ud,t("td",hd,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[fd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[gd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[md]),_:1})]),t("td",yd,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xd,t("td",bd,[t("a",pd,[l("统计数组中好三元组数目"),e(d)])]),kd,t("td",Hd,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[qd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Id]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[vd]),_:1}),l(),wd]),t("td",Md,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ld,t("td",Cd,[t("a",jd,[l("由单个字符重复的最长子字符串"),e(d)])]),zd,t("td",Kd,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Bd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Nd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Pd]),_:1}),l(),Vd]),t("td",Ed,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Od,t("td",Rd,[t("a",Qd,[l("统计区间中的整数数目"),e(d)])]),Td,t("td",Ad,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Gd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Jd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[Dd]),_:1})]),t("td",Fd,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sd,t("td",Ud,[t("a",Wd,[l("以组为单位订音乐会的门票"),e(d)])]),Xd,t("td",Yd,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Zd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[$d]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[ts]),_:1}),l(),es]),t("td",ls,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[os,t("td",ns,[t("a",ds,[l("最长递增子序列 II"),e(d)])]),ss,t("td",_s,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[cs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[is]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[as]),_:1}),l(),rs]),t("td",us,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hs,t("td",fs,[t("a",gs,[l("最长上传前缀"),e(d)])]),ms,t("td",ys,[e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[xs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[bs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ps]),_:1}),l(),ks]),t("td",Hs,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qs,t("td",Is,[t("a",vs,[l("满足不等式的数对数目"),e(d)])]),ws,t("td",Ms,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ls]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Cs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[js]),_:1}),l(),zs]),t("td",Ks,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bs,t("td",Ns,[t("a",Ps,[l("统计 K-Big 索引的数量"),e(d)])]),Vs,t("td",Es,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Os]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Rs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Qs]),_:1}),l(),Ts]),t("td",As,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gs,t("td",Js,[t("a",Ds,[l("更新数组后处理求和查询"),e(d)])]),Fs,t("td",Ss,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Us]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ws]),_:1})]),t("td",Xs,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ys,t("td",Zs,[t("a",$s,[l("将数组清空"),e(d)])]),t_,t("td",e_,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[l_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[o_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[n_]),_:1}),l(),d_]),t("td",s_,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[__,t("td",c_,[t("a",i_,[l("最大和查询"),e(d)])]),a_,t("td",r_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[u_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[h_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[f_]),_:1}),l(),g_]),t("td",m_,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[y_,t("td",x_,[t("a",b_,[l("价格递增的最大利润三元组 I"),e(d)])]),p_,t("td",k_,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[H_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[q_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[I_]),_:1})]),t("td",v_,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w_,t("td",M_,[t("a",L_,[l("子数组不同元素数目的平方和 II"),e(d)])]),C_,t("td",j_,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[z_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[K_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[B_]),_:1}),l(),N_]),t("td",P_,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[V_,t("td",E_,[t("a",O_,[l("价格递增的最大利润三元组 II"),e(d)])]),R_,t("td",Q_,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[T_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[A_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[G_]),_:1})]),t("td",J_,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[D_,t("td",F_,[t("a",S_,[l("平衡子序列的最大和"),e(d)])]),U_,t("td",W_,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[X_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Y_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Z_]),_:1}),l(),$_]),t("td",tc,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ec,t("td",lc,[t("a",oc,[l("找到 Alice 和 Bob 可以相遇的建筑"),e(d)])]),nc,t("td",dc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[sc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[_c]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[cc]),_:1}),l(),ic]),t("td",ac,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rc,t("td",uc,[t("a",hc,[l("将元素分配到两个数组中 II"),e(d)])]),fc,t("td",gc,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[mc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[yc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[xc]),_:1}),l(),bc]),t("td",pc,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kc,t("td",Hc,[t("a",qc,[l("查找排列的下标"),e(d)])]),Ic,t("td",vc,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[wc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Mc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Lc]),_:1}),l(),Cc]),t("td",jc,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zc,t("td",Kc,[t("a",Bc,[l("划分数组得到最小的值之和"),e(d)])]),Nc,t("td",Pc,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[Vc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Ec]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Oc]),_:1}),l(),Rc]),t("td",Qc,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Tc,t("td",Ac,[t("a",Gc,[l("物块放置查询"),e(d)])]),Jc,t("td",Dc,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Fc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Sc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Uc]),_:1}),l(),Wc]),t("td",Xc,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yc,t("td",Zc,[t("a",$c,[l("不包含相邻元素的子序列的最大和"),e(d)])]),ti,t("td",ei,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[li]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[oi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[ni]),_:1}),l(),di]),t("td",si,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_i,t("td",ci,[t("a",ii,[l("找到按位或最接近 K 的子数组"),e(d)])]),ai,t("td",ri,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[ui]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[hi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[fi]),_:1}),l(),gi]),t("td",mi,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yi,t("td",xi,[t("a",bi,[l("数组中的峰值"),e(d)])]),pi,t("td",ki,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Hi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[qi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ii]),_:1})]),t("td",vi,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wi,t("td",Mi,[t("a",Li,[l("子数组按位与值为 K 的数目"),e(d)])]),Ci,t("td",ji,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[zi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Ki]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Bi]),_:1}),l(),Ni]),t("td",Pi,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vi,t("td",Ei,[t("a",Oi,[l("形成目标字符串需要的最少字符串数 I"),e(d)])]),Ri,t("td",Qi,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Ti]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Ai]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Gi]),_:1}),l(),Ji]),t("td",Di,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fi,t("td",Si,[t("a",Ui,[l("形成目标字符串需要的最少字符串数 II"),e(d)])]),Wi,t("td",Xi,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Yi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Zi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[$i]),_:1}),l(),ta]),t("td",ea,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[la,t("td",oa,[t("a",na,[l("发 LeetCoin"),e(d)])]),da,t("td",sa,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[_a]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[ca]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ia]),_:1})]),t("td",aa,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ra,t("td",ua,[t("a",ha,[l("最小跳跃次数"),e(d)])]),fa,t("td",ga,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ma]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[ya]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[xa]),_:1}),l(),ba]),t("td",pa,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ka,t("td",Ha,[t("a",qa,[l("黑盒光线反射"),e(d)])]),Ia,t("td",va,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[wa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Ma]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[La]),_:1}),l(),Ca]),t("td",ja,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[za,t("td",Ka,[t("a",Ba,[l("二叉搜索树染色"),e(d)])]),Na,t("td",Pa,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Va]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Ea]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Oa]),_:1}),l(),Ra]),t("td",Qa,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ta,t("td",Aa,[t("a",Ga,[l("数组中的逆序对"),e(d)])]),Ja,t("td",Da,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Fa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Sa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ua]),_:1}),l(),Wa]),t("td",Xa,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ya,t("td",Za,[t("a",$a,[l("日程表"),e(d)])]),tr,t("td",er,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[lr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[or]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[nr]),_:1}),l(),dr]),t("td",sr,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const rr=c(u,[["render",_r],["__file","segment-tree.html.vue"]]);export{rr as default};
