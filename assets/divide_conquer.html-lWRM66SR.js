import{_ as c,r as _,o as i,c as a,f as r,a as e,b as o,d as t,w as l}from"./app-mvY9N9Pc.js";const h={},u=e("h1",{id:"_3-3-分治算法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-3-分治算法","aria-hidden":"true"},"#"),o(" 3.3 分治算法")],-1),f=e("h2",{id:"相关题目",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),o(" 相关题目")],-1),g=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"center"}},"题号"),e("th",{style:{"text-align":"left"}},"标题"),e("th",{style:{"text-align":"center"}},"题解"),e("th",{style:{"text-align":"left"}},"标签"),e("th",{style:{"text-align":"left"}},"难度")])],-1),m=e("td",{style:{"text-align":"center"}},"4",-1),x={style:{"text-align":"left"}},p={href:"https://leetcode.com/problems/median-of-two-sorted-arrays",target:"_blank",rel:"noopener noreferrer"},y={style:{"text-align":"center"}},b={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0004",target:"_blank",rel:"noopener noreferrer"},k={style:{"text-align":"left"}},E=e("code",null,"数组",-1),T=e("code",null,"二分查找",-1),j=e("code",null,"分治",-1),v={style:{"text-align":"left"}},N=e("td",{style:{"text-align":"center"}},"23",-1),q={style:{"text-align":"left"}},w={href:"https://leetcode.com/problems/merge-k-sorted-lists",target:"_blank",rel:"noopener noreferrer"},I={style:{"text-align":"center"}},L={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0023",target:"_blank",rel:"noopener noreferrer"},R={style:{"text-align":"left"}},A=e("code",null,"链表",-1),B=e("code",null,"分治",-1),C=e("code",null,"堆（优先队列）",-1),D=e("code",null,"1+",-1),M={style:{"text-align":"left"}},O=e("td",{style:{"text-align":"center"}},"53",-1),S={style:{"text-align":"left"}},V={href:"https://leetcode.com/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},H={style:{"text-align":"center"}},P={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0053",target:"_blank",rel:"noopener noreferrer"},z={style:{"text-align":"left"}},U=e("code",null,"数组",-1),K=e("code",null,"分治",-1),F=e("code",null,"动态规划",-1),G={style:{"text-align":"left"}},J=e("td",{style:{"text-align":"center"}},"241",-1),Q={style:{"text-align":"left"}},W={href:"https://leetcode.com/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},X=e("td",{style:{"text-align":"center"}},null,-1),Y={style:{"text-align":"left"}},Z=e("code",null,"递归",-1),$=e("code",null,"记忆化搜索",-1),ee=e("code",null,"数学",-1),te=e("code",null,"2+",-1),oe={style:{"text-align":"left"}},le=e("td",{style:{"text-align":"center"}},"169",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/majority-element",target:"_blank",rel:"noopener noreferrer"},de={style:{"text-align":"center"}},re={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0169",target:"_blank",rel:"noopener noreferrer"},_e={style:{"text-align":"left"}},ce=e("code",null,"数组",-1),ie=e("code",null,"哈希表",-1),ae=e("code",null,"分治",-1),he=e("code",null,"2+",-1),ue={style:{"text-align":"left"}},fe=e("td",{style:{"text-align":"center"}},"50",-1),ge={style:{"text-align":"left"}},me={href:"https://leetcode.com/problems/powx-n",target:"_blank",rel:"noopener noreferrer"},xe={style:{"text-align":"center"}},pe={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0050",target:"_blank",rel:"noopener noreferrer"},ye={style:{"text-align":"left"}},be=e("code",null,"递归",-1),ke=e("code",null,"数学",-1),Ee={style:{"text-align":"left"}},Te=e("td",{style:{"text-align":"center"}},"14",-1),je={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/longest-common-prefix",target:"_blank",rel:"noopener noreferrer"},Ne={style:{"text-align":"center"}},qe={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0014",target:"_blank",rel:"noopener noreferrer"},we={style:{"text-align":"left"}},Ie=e("code",null,"字典树",-1),Le=e("code",null,"字符串",-1),Re={style:{"text-align":"left"}},Ae=e("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),Be={style:{"text-align":"left"}},Ce={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},De={style:{"text-align":"center"}},Me={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_33_1",target:"_blank",rel:"noopener noreferrer"},Oe={style:{"text-align":"left"}},Se=e("code",null,"栈",-1),Ve=e("code",null,"树",-1),He=e("code",null,"二叉搜索树",-1),Pe=e("code",null,"4+",-1),ze={style:{"text-align":"left"}};function Ue(Ke,Fe){const s=_("ExternalLinkIcon"),n=_("RouterLink"),d=_("font");return i(),a("div",null,[u,r(" START TABLE "),r(" Please keep comment here to allow auto update "),r(" DON'T EDIT THIS SECTION, INSTEAD RE-RUN `npm run lc` TO UPDATE "),f,r(" prettier-ignore "),e("table",null,[g,e("tbody",null,[e("tr",null,[m,e("td",x,[e("a",p,[o("寻找两个正序数组的中位数"),t(s)])]),e("td",y,[e("a",b,[o("[✓]"),t(s)])]),e("td",k,[t(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[E]),_:1}),o(),t(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[T]),_:1}),o(),t(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[j]),_:1})]),e("td",v,[t(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),e("tr",null,[N,e("td",q,[e("a",w,[o("合并 K 个升序链表"),t(s)])]),e("td",I,[e("a",L,[o("[✓]"),t(s)])]),e("td",R,[t(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[A]),_:1}),o(),t(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[B]),_:1}),o(),t(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[C]),_:1}),o(),D]),e("td",M,[t(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),e("tr",null,[O,e("td",S,[e("a",V,[o("最大子数组和"),t(s)])]),e("td",H,[e("a",P,[o("[✓]"),t(s)])]),e("td",z,[t(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[U]),_:1}),o(),t(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[K]),_:1}),o(),t(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[F]),_:1})]),e("td",G,[t(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),e("tr",null,[J,e("td",Q,[e("a",W,[o("为运算表达式设计优先级"),t(s)])]),X,e("td",Y,[t(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[Z]),_:1}),o(),t(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[$]),_:1}),o(),t(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[ee]),_:1}),o(),te]),e("td",oe,[t(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),e("tr",null,[le,e("td",ne,[e("a",se,[o("多数元素"),t(s)])]),e("td",de,[e("a",re,[o("[✓]"),t(s)])]),e("td",_e,[t(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ce]),_:1}),o(),t(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ie]),_:1}),o(),t(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[ae]),_:1}),o(),he]),e("td",ue,[t(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),e("tr",null,[fe,e("td",ge,[e("a",me,[o("Pow(x, n)"),t(s)])]),e("td",xe,[e("a",pe,[o("[✓]"),t(s)])]),e("td",ye,[t(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[be]),_:1}),o(),t(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[ke]),_:1})]),e("td",Ee,[t(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),e("tr",null,[Te,e("td",je,[e("a",ve,[o("最长公共前缀"),t(s)])]),e("td",Ne,[e("a",qe,[o("[✓]"),t(s)])]),e("td",we,[t(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[Ie]),_:1}),o(),t(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Le]),_:1})]),e("td",Re,[t(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),e("tr",null,[Ae,e("td",Be,[e("a",Ce,[o("二叉搜索树的后序遍历序列"),t(s)])]),e("td",De,[e("a",Me,[o("[✓]"),t(s)])]),e("td",Oe,[t(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Se]),_:1}),o(),t(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ve]),_:1}),o(),t(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[He]),_:1}),o(),Pe]),e("td",ze,[t(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const Je=c(h,[["render",Ue],["__file","divide_conquer.html.vue"]]);export{Je as default};
