import{_ as c,r as _,o as i,c as r,a as t,d as e,w as o,b as l,f as a}from"./app-mvY9N9Pc.js";const h={},u=t("h1",{id:"深度优先搜索",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#深度优先搜索","aria-hidden":"true"},"#"),l(" 深度优先搜索")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("code",null,"单调栈",-1),I=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),j=t("code",null,"哈希表",-1),H=t("code",null,"字符串",-1),E=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),O=t("code",null,"二叉树",-1),L=t("code",null,"二叉搜索树",-1),q=t("code",null,"最小生成树",-1),N=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),T=t("code",null,"最短路",-1),V=t("code",null,"强连通分量",-1),B=t("code",null,"欧拉回路",-1),K=t("code",null,"双连通分量",-1),U=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),W=t("code",null,"线段树",-1),D=t("code",null,"树状数组",-1),Y=t("code",null,"后缀数组",-1),F=t("p",null,[t("strong",null,"算法")],-1),J=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),R=t("code",null,"分治",-1),S=t("code",null,"回溯",-1),Z=t("code",null,"贪心",-1),G=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("span",{class:"blue"},"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),jt=t("code",null,"水塘抽样",-1),Ht=t("code",null,"拒绝采样",-1),Et=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),Lt=t("code",null,"脑筋急转弯",-1),qt=t("code",null,"交互",-1),Nt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Tt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Vt=t("td",{style:{"text-align":"center"}},"94",-1),Bt={style:{"text-align":"left"}},Kt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},At={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0094",target:"_blank",rel:"noopener noreferrer"},Wt={style:{"text-align":"left"}},Dt=t("code",null,"栈",-1),Yt=t("code",null,"树",-1),Ft=t("code",null,"深度优先搜索",-1),Jt=t("code",null,"1+",-1),Qt={style:{"text-align":"left"}},Rt=t("td",{style:{"text-align":"center"}},"98",-1),St={style:{"text-align":"left"}},Zt={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Gt={style:{"text-align":"center"}},Xt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0098",target:"_blank",rel:"noopener noreferrer"},$t={style:{"text-align":"left"}},te=t("code",null,"树",-1),ee=t("code",null,"深度优先搜索",-1),le=t("code",null,"二叉搜索树",-1),oe=t("code",null,"1+",-1),ne={style:{"text-align":"left"}},se=t("td",{style:{"text-align":"center"}},"99",-1),de={style:{"text-align":"left"}},_e={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ce={style:{"text-align":"center"}},ie={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0099",target:"_blank",rel:"noopener noreferrer"},re={style:{"text-align":"left"}},ae=t("code",null,"树",-1),he=t("code",null,"深度优先搜索",-1),ue=t("code",null,"二叉搜索树",-1),fe=t("code",null,"1+",-1),ge={style:{"text-align":"left"}},me=t("td",{style:{"text-align":"center"}},"100",-1),ye={style:{"text-align":"left"}},xe={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},pe={style:{"text-align":"center"}},be={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0100",target:"_blank",rel:"noopener noreferrer"},ke={style:{"text-align":"left"}},Me=t("code",null,"树",-1),Ie=t("code",null,"深度优先搜索",-1),ve=t("code",null,"广度优先搜索",-1),we=t("code",null,"1+",-1),je={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"101",-1),Ee={style:{"text-align":"left"}},ze={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},Oe={style:{"text-align":"center"}},Le={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0101",target:"_blank",rel:"noopener noreferrer"},qe={style:{"text-align":"left"}},Ne=t("code",null,"树",-1),Ce=t("code",null,"深度优先搜索",-1),Pe=t("code",null,"广度优先搜索",-1),Te=t("code",null,"1+",-1),Ve={style:{"text-align":"left"}},Be=t("td",{style:{"text-align":"center"}},"104",-1),Ke={style:{"text-align":"left"}},Ue={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ae={style:{"text-align":"center"}},We={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0104",target:"_blank",rel:"noopener noreferrer"},De={style:{"text-align":"left"}},Ye=t("code",null,"树",-1),Fe=t("code",null,"深度优先搜索",-1),Je=t("code",null,"广度优先搜索",-1),Qe=t("code",null,"1+",-1),Re={style:{"text-align":"left"}},Se=t("td",{style:{"text-align":"center"}},"110",-1),Ze={style:{"text-align":"left"}},Ge={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},Xe={style:{"text-align":"center"}},$e={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0110",target:"_blank",rel:"noopener noreferrer"},tl={style:{"text-align":"left"}},el=t("code",null,"树",-1),ll=t("code",null,"深度优先搜索",-1),ol=t("code",null,"二叉树",-1),nl={style:{"text-align":"left"}},sl=t("td",{style:{"text-align":"center"}},"111",-1),dl={style:{"text-align":"left"}},_l={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},cl={style:{"text-align":"center"}},il={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0111",target:"_blank",rel:"noopener noreferrer"},rl={style:{"text-align":"left"}},al=t("code",null,"树",-1),hl=t("code",null,"深度优先搜索",-1),ul=t("code",null,"广度优先搜索",-1),fl=t("code",null,"1+",-1),gl={style:{"text-align":"left"}},ml=t("td",{style:{"text-align":"center"}},"112",-1),yl={style:{"text-align":"left"}},xl={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},pl={style:{"text-align":"center"}},bl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0112",target:"_blank",rel:"noopener noreferrer"},kl={style:{"text-align":"left"}},Ml=t("code",null,"树",-1),Il=t("code",null,"深度优先搜索",-1),vl=t("code",null,"广度优先搜索",-1),wl=t("code",null,"1+",-1),jl={style:{"text-align":"left"}},Hl=t("td",{style:{"text-align":"center"}},"113",-1),El={style:{"text-align":"left"}},zl={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},Ol={style:{"text-align":"center"}},Ll={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0113",target:"_blank",rel:"noopener noreferrer"},ql={style:{"text-align":"left"}},Nl=t("code",null,"树",-1),Cl=t("code",null,"深度优先搜索",-1),Pl=t("code",null,"回溯",-1),Tl=t("code",null,"1+",-1),Vl={style:{"text-align":"left"}},Bl=t("td",{style:{"text-align":"center"}},"114",-1),Kl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},Al={style:{"text-align":"center"}},Wl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0114",target:"_blank",rel:"noopener noreferrer"},Dl={style:{"text-align":"left"}},Yl=t("code",null,"栈",-1),Fl=t("code",null,"树",-1),Jl=t("code",null,"深度优先搜索",-1),Ql=t("code",null,"2+",-1),Rl={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"116",-1),Zl={style:{"text-align":"left"}},Gl={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},Xl={style:{"text-align":"center"}},$l={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0116",target:"_blank",rel:"noopener noreferrer"},to={style:{"text-align":"left"}},eo=t("code",null,"树",-1),lo=t("code",null,"深度优先搜索",-1),oo=t("code",null,"广度优先搜索",-1),no=t("code",null,"2+",-1),so={style:{"text-align":"left"}},_o=t("td",{style:{"text-align":"center"}},"117",-1),co={style:{"text-align":"left"}},io={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},ro={style:{"text-align":"center"}},ao={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0117",target:"_blank",rel:"noopener noreferrer"},ho={style:{"text-align":"left"}},uo=t("code",null,"树",-1),fo=t("code",null,"深度优先搜索",-1),go=t("code",null,"广度优先搜索",-1),mo=t("code",null,"2+",-1),yo={style:{"text-align":"left"}},xo=t("td",{style:{"text-align":"center"}},"124",-1),po={style:{"text-align":"left"}},bo={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},ko={style:{"text-align":"center"}},Mo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0124",target:"_blank",rel:"noopener noreferrer"},Io={style:{"text-align":"left"}},vo=t("code",null,"树",-1),wo=t("code",null,"深度优先搜索",-1),jo=t("code",null,"动态规划",-1),Ho=t("code",null,"1+",-1),Eo={style:{"text-align":"left"}},zo=t("td",{style:{"text-align":"center"}},"129",-1),Oo={style:{"text-align":"left"}},Lo={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},qo={style:{"text-align":"center"}},No={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0129",target:"_blank",rel:"noopener noreferrer"},Co={style:{"text-align":"left"}},Po=t("code",null,"树",-1),To=t("code",null,"深度优先搜索",-1),Vo=t("code",null,"二叉树",-1),Bo={style:{"text-align":"left"}},Ko=t("td",{style:{"text-align":"center"}},"130",-1),Uo={style:{"text-align":"left"}},Ao={href:"https://leetcode.com/problems/surrounded-regions",target:"_blank",rel:"noopener noreferrer"},Wo={style:{"text-align":"center"}},Do={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0130",target:"_blank",rel:"noopener noreferrer"},Yo={style:{"text-align":"left"}},Fo=t("code",null,"深度优先搜索",-1),Jo=t("code",null,"广度优先搜索",-1),Qo=t("code",null,"并查集",-1),Ro=t("code",null,"2+",-1),So={style:{"text-align":"left"}},Zo=t("td",{style:{"text-align":"center"}},"133",-1),Go={style:{"text-align":"left"}},Xo={href:"https://leetcode.com/problems/clone-graph",target:"_blank",rel:"noopener noreferrer"},$o={style:{"text-align":"center"}},tn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0133",target:"_blank",rel:"noopener noreferrer"},en={style:{"text-align":"left"}},ln=t("code",null,"深度优先搜索",-1),on=t("code",null,"广度优先搜索",-1),nn=t("code",null,"图",-1),sn=t("code",null,"1+",-1),dn={style:{"text-align":"left"}},_n=t("td",{style:{"text-align":"center"}},"144",-1),cn={style:{"text-align":"left"}},rn={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},an={style:{"text-align":"center"}},hn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0144",target:"_blank",rel:"noopener noreferrer"},un={style:{"text-align":"left"}},fn=t("code",null,"栈",-1),gn=t("code",null,"树",-1),mn=t("code",null,"深度优先搜索",-1),yn=t("code",null,"1+",-1),xn={style:{"text-align":"left"}},pn=t("td",{style:{"text-align":"center"}},"145",-1),bn={style:{"text-align":"left"}},kn={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Mn={style:{"text-align":"center"}},In={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0145",target:"_blank",rel:"noopener noreferrer"},vn={style:{"text-align":"left"}},wn=t("code",null,"栈",-1),jn=t("code",null,"树",-1),Hn=t("code",null,"深度优先搜索",-1),En=t("code",null,"1+",-1),zn={style:{"text-align":"left"}},On=t("td",{style:{"text-align":"center"}},"156",-1),Ln={style:{"text-align":"left"}},qn={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},Nn={style:{"text-align":"center"}},Cn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0156",target:"_blank",rel:"noopener noreferrer"},Pn={style:{"text-align":"left"}},Tn=t("code",null,"树",-1),Vn=t("code",null,"深度优先搜索",-1),Bn=t("code",null,"二叉树",-1),Kn={style:{"text-align":"left"}},Un=t("td",{style:{"text-align":"center"}},"199",-1),An={style:{"text-align":"left"}},Wn={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},Dn={style:{"text-align":"center"}},Yn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0199",target:"_blank",rel:"noopener noreferrer"},Fn={style:{"text-align":"left"}},Jn=t("code",null,"树",-1),Qn=t("code",null,"深度优先搜索",-1),Rn=t("code",null,"广度优先搜索",-1),Sn=t("code",null,"1+",-1),Zn={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"200",-1),Xn={style:{"text-align":"left"}},$n={href:"https://leetcode.com/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},ts={style:{"text-align":"center"}},es={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0200",target:"_blank",rel:"noopener noreferrer"},ls={style:{"text-align":"left"}},os=t("code",null,"深度优先搜索",-1),ns=t("code",null,"广度优先搜索",-1),ss=t("code",null,"并查集",-1),ds=t("code",null,"2+",-1),_s={style:{"text-align":"left"}},cs=t("td",{style:{"text-align":"center"}},"207",-1),is={style:{"text-align":"left"}},rs={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},as={style:{"text-align":"center"}},hs={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0207",target:"_blank",rel:"noopener noreferrer"},us={style:{"text-align":"left"}},fs=t("code",null,"深度优先搜索",-1),gs=t("code",null,"广度优先搜索",-1),ms=t("code",null,"图",-1),ys=t("code",null,"1+",-1),xs={style:{"text-align":"left"}},ps=t("td",{style:{"text-align":"center"}},"210",-1),bs={style:{"text-align":"left"}},ks={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},Ms={style:{"text-align":"center"}},Is={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0210",target:"_blank",rel:"noopener noreferrer"},vs={style:{"text-align":"left"}},ws=t("code",null,"深度优先搜索",-1),js=t("code",null,"广度优先搜索",-1),Hs=t("code",null,"图",-1),Es=t("code",null,"1+",-1),zs={style:{"text-align":"left"}},Os=t("td",{style:{"text-align":"center"}},"211",-1),Ls={style:{"text-align":"left"}},qs={href:"https://leetcode.com/problems/design-add-and-search-words-data-structure",target:"_blank",rel:"noopener noreferrer"},Ns={style:{"text-align":"center"}},Cs={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0211",target:"_blank",rel:"noopener noreferrer"},Ps={style:{"text-align":"left"}},Ts=t("code",null,"深度优先搜索",-1),Vs=t("code",null,"设计",-1),Bs=t("code",null,"字典树",-1),Ks=t("code",null,"1+",-1),Us={style:{"text-align":"left"}},As=t("td",{style:{"text-align":"center"}},"226",-1),Ws={style:{"text-align":"left"}},Ds={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ys={style:{"text-align":"center"}},Fs={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0226",target:"_blank",rel:"noopener noreferrer"},Js={style:{"text-align":"left"}},Qs=t("code",null,"树",-1),Rs=t("code",null,"深度优先搜索",-1),Ss=t("code",null,"广度优先搜索",-1),Zs=t("code",null,"1+",-1),Gs={style:{"text-align":"left"}},Xs=t("td",{style:{"text-align":"center"}},"230",-1),$s={style:{"text-align":"left"}},td={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},ed={style:{"text-align":"center"}},ld={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0230",target:"_blank",rel:"noopener noreferrer"},od={style:{"text-align":"left"}},nd=t("code",null,"树",-1),sd=t("code",null,"深度优先搜索",-1),dd=t("code",null,"二叉搜索树",-1),_d=t("code",null,"1+",-1),cd={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"235",-1),rd={style:{"text-align":"left"}},ad={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},hd={style:{"text-align":"center"}},ud={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0235",target:"_blank",rel:"noopener noreferrer"},fd={style:{"text-align":"left"}},gd=t("code",null,"树",-1),md=t("code",null,"深度优先搜索",-1),yd=t("code",null,"二叉搜索树",-1),xd=t("code",null,"1+",-1),pd={style:{"text-align":"left"}},bd=t("td",{style:{"text-align":"center"}},"236",-1),kd={style:{"text-align":"left"}},Md={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Id={style:{"text-align":"center"}},vd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0236",target:"_blank",rel:"noopener noreferrer"},wd={style:{"text-align":"left"}},jd=t("code",null,"树",-1),Hd=t("code",null,"深度优先搜索",-1),Ed=t("code",null,"二叉树",-1),zd={style:{"text-align":"left"}},Od=t("td",{style:{"text-align":"center"}},"250",-1),Ld={style:{"text-align":"left"}},qd={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},Nd=t("td",{style:{"text-align":"center"}},null,-1),Cd={style:{"text-align":"left"}},Pd=t("code",null,"树",-1),Td=t("code",null,"深度优先搜索",-1),Vd=t("code",null,"二叉树",-1),Bd={style:{"text-align":"left"}},Kd=t("td",{style:{"text-align":"center"}},"257",-1),Ud={style:{"text-align":"left"}},Ad={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},Wd={style:{"text-align":"center"}},Dd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0257",target:"_blank",rel:"noopener noreferrer"},Yd={style:{"text-align":"left"}},Fd=t("code",null,"树",-1),Jd=t("code",null,"深度优先搜索",-1),Qd=t("code",null,"字符串",-1),Rd=t("code",null,"2+",-1),Sd={style:{"text-align":"left"}},Zd=t("td",{style:{"text-align":"center"}},"261",-1),Gd={style:{"text-align":"left"}},Xd={href:"https://leetcode.com/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},$d=t("td",{style:{"text-align":"center"}},null,-1),t_={style:{"text-align":"left"}},e_=t("code",null,"深度优先搜索",-1),l_=t("code",null,"广度优先搜索",-1),o_=t("code",null,"并查集",-1),n_=t("code",null,"1+",-1),s_={style:{"text-align":"left"}},d_=t("td",{style:{"text-align":"center"}},"269",-1),__={style:{"text-align":"left"}},c_={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},i_=t("td",{style:{"text-align":"center"}},null,-1),r_={style:{"text-align":"left"}},a_=t("code",null,"深度优先搜索",-1),h_=t("code",null,"广度优先搜索",-1),u_=t("code",null,"图",-1),f_=t("code",null,"3+",-1),g_={style:{"text-align":"left"}},m_=t("td",{style:{"text-align":"center"}},"270",-1),y_={style:{"text-align":"left"}},x_={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},p_=t("td",{style:{"text-align":"center"}},null,-1),b_={style:{"text-align":"left"}},k_=t("code",null,"树",-1),M_=t("code",null,"深度优先搜索",-1),I_=t("code",null,"二叉搜索树",-1),v_=t("code",null,"2+",-1),w_={style:{"text-align":"left"}},j_=t("td",{style:{"text-align":"center"}},"272",-1),H_={style:{"text-align":"left"}},E_={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},z_=t("td",{style:{"text-align":"center"}},null,-1),O_={style:{"text-align":"left"}},L_=t("code",null,"栈",-1),q_=t("code",null,"树",-1),N_=t("code",null,"深度优先搜索",-1),C_=t("code",null,"4+",-1),P_={style:{"text-align":"left"}},T_=t("td",{style:{"text-align":"center"}},"285",-1),V_={style:{"text-align":"left"}},B_={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},K_=t("td",{style:{"text-align":"center"}},null,-1),U_={style:{"text-align":"left"}},A_=t("code",null,"树",-1),W_=t("code",null,"深度优先搜索",-1),D_=t("code",null,"二叉搜索树",-1),Y_=t("code",null,"1+",-1),F_={style:{"text-align":"left"}},J_=t("td",{style:{"text-align":"center"}},"297",-1),Q_={style:{"text-align":"left"}},R_={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},S_={style:{"text-align":"center"}},Z_={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0297",target:"_blank",rel:"noopener noreferrer"},G_={style:{"text-align":"left"}},X_=t("code",null,"树",-1),$_=t("code",null,"深度优先搜索",-1),tc=t("code",null,"广度优先搜索",-1),ec=t("code",null,"3+",-1),lc={style:{"text-align":"left"}},oc=t("td",{style:{"text-align":"center"}},"298",-1),nc={style:{"text-align":"left"}},sc={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},dc=t("td",{style:{"text-align":"center"}},null,-1),_c={style:{"text-align":"left"}},cc=t("code",null,"树",-1),ic=t("code",null,"深度优先搜索",-1),rc=t("code",null,"二叉树",-1),ac={style:{"text-align":"left"}},hc=t("td",{style:{"text-align":"center"}},"302",-1),uc={style:{"text-align":"left"}},fc={href:"https://leetcode.com/problems/smallest-rectangle-enclosing-black-pixels",target:"_blank",rel:"noopener noreferrer"},gc=t("td",{style:{"text-align":"center"}},null,-1),mc={style:{"text-align":"left"}},yc=t("code",null,"深度优先搜索",-1),xc=t("code",null,"广度优先搜索",-1),pc=t("code",null,"数组",-1),bc=t("code",null,"2+",-1),kc={style:{"text-align":"left"}},Mc=t("td",{style:{"text-align":"center"}},"310",-1),Ic={style:{"text-align":"left"}},vc={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},wc=t("td",{style:{"text-align":"center"}},null,-1),jc={style:{"text-align":"left"}},Hc=t("code",null,"深度优先搜索",-1),Ec=t("code",null,"广度优先搜索",-1),zc=t("code",null,"图",-1),Oc=t("code",null,"1+",-1),Lc={style:{"text-align":"left"}},qc=t("td",{style:{"text-align":"center"}},"314",-1),Nc={style:{"text-align":"left"}},Cc={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},Pc=t("td",{style:{"text-align":"center"}},null,-1),Tc={style:{"text-align":"left"}},Vc=t("code",null,"树",-1),Bc=t("code",null,"深度优先搜索",-1),Kc=t("code",null,"广度优先搜索",-1),Uc=t("code",null,"3+",-1),Ac={style:{"text-align":"left"}},Wc=t("td",{style:{"text-align":"center"}},"323",-1),Dc={style:{"text-align":"left"}},Yc={href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Fc=t("td",{style:{"text-align":"center"}},null,-1),Jc={style:{"text-align":"left"}},Qc=t("code",null,"深度优先搜索",-1),Rc=t("code",null,"广度优先搜索",-1),Sc=t("code",null,"并查集",-1),Zc=t("code",null,"1+",-1),Gc={style:{"text-align":"left"}},Xc=t("td",{style:{"text-align":"center"}},"329",-1),$c={style:{"text-align":"left"}},ti={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},ei=t("td",{style:{"text-align":"center"}},null,-1),li={style:{"text-align":"left"}},oi=t("code",null,"深度优先搜索",-1),ni=t("code",null,"广度优先搜索",-1),si=t("code",null,"图",-1),di=t("code",null,"5+",-1),_i={style:{"text-align":"left"}},ci=t("td",{style:{"text-align":"center"}},"332",-1),ii={style:{"text-align":"left"}},ri={href:"https://leetcode.com/problems/reconstruct-itinerary",target:"_blank",rel:"noopener noreferrer"},ai=t("td",{style:{"text-align":"center"}},null,-1),hi={style:{"text-align":"left"}},ui=t("code",null,"深度优先搜索",-1),fi=t("code",null,"图",-1),gi=t("code",null,"欧拉回路",-1),mi={style:{"text-align":"left"}},yi=t("td",{style:{"text-align":"center"}},"333",-1),xi={style:{"text-align":"left"}},pi={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},bi=t("td",{style:{"text-align":"center"}},null,-1),ki={style:{"text-align":"left"}},Mi=t("code",null,"树",-1),Ii=t("code",null,"深度优先搜索",-1),vi=t("code",null,"二叉搜索树",-1),wi=t("code",null,"2+",-1),ji={style:{"text-align":"left"}},Hi=t("td",{style:{"text-align":"center"}},"337",-1),Ei={style:{"text-align":"left"}},zi={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Oi=t("td",{style:{"text-align":"center"}},null,-1),Li={style:{"text-align":"left"}},qi=t("code",null,"树",-1),Ni=t("code",null,"深度优先搜索",-1),Ci=t("code",null,"动态规划",-1),Pi=t("code",null,"1+",-1),Ti={style:{"text-align":"left"}},Vi=t("td",{style:{"text-align":"center"}},"339",-1),Bi={style:{"text-align":"left"}},Ki={href:"https://leetcode.com/problems/nested-list-weight-sum",target:"_blank",rel:"noopener noreferrer"},Ui=t("td",{style:{"text-align":"center"}},null,-1),Ai={style:{"text-align":"left"}},Wi=t("code",null,"深度优先搜索",-1),Di=t("code",null,"广度优先搜索",-1),Yi={style:{"text-align":"left"}},Fi=t("td",{style:{"text-align":"center"}},"341",-1),Ji={style:{"text-align":"left"}},Qi={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},Ri=t("td",{style:{"text-align":"center"}},null,-1),Si={style:{"text-align":"left"}},Zi=t("code",null,"栈",-1),Gi=t("code",null,"树",-1),Xi=t("code",null,"深度优先搜索",-1),$i=t("code",null,"3+",-1),tr={style:{"text-align":"left"}},er=t("td",{style:{"text-align":"center"}},"364",-1),lr={style:{"text-align":"left"}},or={href:"https://leetcode.com/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},nr=t("td",{style:{"text-align":"center"}},null,-1),sr={style:{"text-align":"left"}},dr=t("code",null,"栈",-1),_r=t("code",null,"深度优先搜索",-1),cr=t("code",null,"广度优先搜索",-1),ir={style:{"text-align":"left"}},rr=t("td",{style:{"text-align":"center"}},"365",-1),ar={style:{"text-align":"left"}},hr={href:"https://leetcode.com/problems/water-and-jug-problem",target:"_blank",rel:"noopener noreferrer"},ur=t("td",{style:{"text-align":"center"}},null,-1),fr={style:{"text-align":"left"}},gr=t("code",null,"深度优先搜索",-1),mr=t("code",null,"广度优先搜索",-1),yr=t("code",null,"数学",-1),xr={style:{"text-align":"left"}},pr=t("td",{style:{"text-align":"center"}},"366",-1),br={style:{"text-align":"left"}},kr={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Mr={style:{"text-align":"center"}},Ir={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0366",target:"_blank",rel:"noopener noreferrer"},vr={style:{"text-align":"left"}},wr=t("code",null,"树",-1),jr=t("code",null,"深度优先搜索",-1),Hr=t("code",null,"二叉树",-1),Er={style:{"text-align":"left"}},zr=t("td",{style:{"text-align":"center"}},"385",-1),Or={style:{"text-align":"left"}},Lr={href:"https://leetcode.com/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},qr=t("td",{style:{"text-align":"center"}},null,-1),Nr={style:{"text-align":"left"}},Cr=t("code",null,"栈",-1),Pr=t("code",null,"深度优先搜索",-1),Tr=t("code",null,"字符串",-1),Vr={style:{"text-align":"left"}},Br=t("td",{style:{"text-align":"center"}},"386",-1),Kr={style:{"text-align":"left"}},Ur={href:"https://leetcode.com/problems/lexicographical-numbers",target:"_blank",rel:"noopener noreferrer"},Ar=t("td",{style:{"text-align":"center"}},null,-1),Wr={style:{"text-align":"left"}},Dr=t("code",null,"深度优先搜索",-1),Yr=t("code",null,"字典树",-1),Fr={style:{"text-align":"left"}},Jr=t("td",{style:{"text-align":"center"}},"388",-1),Qr={style:{"text-align":"left"}},Rr={href:"https://leetcode.com/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},Sr=t("td",{style:{"text-align":"center"}},null,-1),Zr={style:{"text-align":"left"}},Gr=t("code",null,"栈",-1),Xr=t("code",null,"深度优先搜索",-1),$r=t("code",null,"字符串",-1),ta={style:{"text-align":"left"}},ea=t("td",{style:{"text-align":"center"}},"399",-1),la={style:{"text-align":"left"}},oa={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},na={style:{"text-align":"center"}},sa={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0399",target:"_blank",rel:"noopener noreferrer"},da={style:{"text-align":"left"}},_a=t("code",null,"深度优先搜索",-1),ca=t("code",null,"广度优先搜索",-1),ia=t("code",null,"并查集",-1),ra=t("code",null,"4+",-1),aa={style:{"text-align":"left"}},ha=t("td",{style:{"text-align":"center"}},"404",-1),ua={style:{"text-align":"left"}},fa={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},ga=t("td",{style:{"text-align":"center"}},null,-1),ma={style:{"text-align":"left"}},ya=t("code",null,"树",-1),xa=t("code",null,"深度优先搜索",-1),pa=t("code",null,"广度优先搜索",-1),ba=t("code",null,"1+",-1),ka={style:{"text-align":"left"}},Ma=t("td",{style:{"text-align":"center"}},"417",-1),Ia={style:{"text-align":"left"}},va={href:"https://leetcode.com/problems/pacific-atlantic-water-flow",target:"_blank",rel:"noopener noreferrer"},wa=t("td",{style:{"text-align":"center"}},null,-1),ja={style:{"text-align":"left"}},Ha=t("code",null,"深度优先搜索",-1),Ea=t("code",null,"广度优先搜索",-1),za=t("code",null,"数组",-1),Oa=t("code",null,"1+",-1),La={style:{"text-align":"left"}},qa=t("td",{style:{"text-align":"center"}},"419",-1),Na={style:{"text-align":"left"}},Ca={href:"https://leetcode.com/problems/battleships-in-a-board",target:"_blank",rel:"noopener noreferrer"},Pa=t("td",{style:{"text-align":"center"}},null,-1),Ta={style:{"text-align":"left"}},Va=t("code",null,"深度优先搜索",-1),Ba=t("code",null,"数组",-1),Ka=t("code",null,"矩阵",-1),Ua={style:{"text-align":"left"}},Aa=t("td",{style:{"text-align":"center"}},"426",-1),Wa={style:{"text-align":"left"}},Da={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},Ya={style:{"text-align":"center"}},Fa={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0426",target:"_blank",rel:"noopener noreferrer"},Ja={style:{"text-align":"left"}},Qa=t("code",null,"栈",-1),Ra=t("code",null,"树",-1),Sa=t("code",null,"深度优先搜索",-1),Za=t("code",null,"4+",-1),Ga={style:{"text-align":"left"}},Xa=t("td",{style:{"text-align":"center"}},"428",-1),$a={style:{"text-align":"left"}},th={href:"https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},eh=t("td",{style:{"text-align":"center"}},null,-1),lh={style:{"text-align":"left"}},oh=t("code",null,"树",-1),nh=t("code",null,"深度优先搜索",-1),sh=t("code",null,"广度优先搜索",-1),dh=t("code",null,"1+",-1),_h={style:{"text-align":"left"}},ch=t("td",{style:{"text-align":"center"}},"430",-1),ih={style:{"text-align":"left"}},rh={href:"https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},ah={style:{"text-align":"center"}},hh={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0430",target:"_blank",rel:"noopener noreferrer"},uh={style:{"text-align":"left"}},fh=t("code",null,"深度优先搜索",-1),gh=t("code",null,"链表",-1),mh=t("code",null,"双向链表",-1),yh={style:{"text-align":"left"}},xh=t("td",{style:{"text-align":"center"}},"431",-1),ph={style:{"text-align":"left"}},bh={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},kh=t("td",{style:{"text-align":"center"}},null,-1),Mh={style:{"text-align":"left"}},Ih=t("code",null,"树",-1),vh=t("code",null,"深度优先搜索",-1),wh=t("code",null,"广度优先搜索",-1),jh=t("code",null,"2+",-1),Hh={style:{"text-align":"left"}},Eh=t("td",{style:{"text-align":"center"}},"437",-1),zh={style:{"text-align":"left"}},Oh={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Lh={style:{"text-align":"center"}},qh={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0437",target:"_blank",rel:"noopener noreferrer"},Nh={style:{"text-align":"left"}},Ch=t("code",null,"树",-1),Ph=t("code",null,"深度优先搜索",-1),Th=t("code",null,"二叉树",-1),Vh={style:{"text-align":"left"}},Bh=t("td",{style:{"text-align":"center"}},"449",-1),Kh={style:{"text-align":"left"}},Uh={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Ah=t("td",{style:{"text-align":"center"}},null,-1),Wh={style:{"text-align":"left"}},Dh=t("code",null,"树",-1),Yh=t("code",null,"深度优先搜索",-1),Fh=t("code",null,"广度优先搜索",-1),Jh=t("code",null,"4+",-1),Qh={style:{"text-align":"left"}},Rh=t("td",{style:{"text-align":"center"}},"463",-1),Sh={style:{"text-align":"left"}},Zh={href:"https://leetcode.com/problems/island-perimeter",target:"_blank",rel:"noopener noreferrer"},Gh=t("td",{style:{"text-align":"center"}},null,-1),Xh={style:{"text-align":"left"}},$h=t("code",null,"深度优先搜索",-1),t1=t("code",null,"广度优先搜索",-1),e1=t("code",null,"数组",-1),l1=t("code",null,"1+",-1),o1={style:{"text-align":"left"}},n1=t("td",{style:{"text-align":"center"}},"472",-1),s1={style:{"text-align":"left"}},d1={href:"https://leetcode.com/problems/concatenated-words",target:"_blank",rel:"noopener noreferrer"},_1=t("td",{style:{"text-align":"center"}},null,-1),c1={style:{"text-align":"left"}},i1=t("code",null,"深度优先搜索",-1),r1=t("code",null,"字典树",-1),a1=t("code",null,"数组",-1),h1=t("code",null,"2+",-1),u1={style:{"text-align":"left"}},f1=t("td",{style:{"text-align":"center"}},"490",-1),g1={style:{"text-align":"left"}},m1={href:"https://leetcode.com/problems/the-maze",target:"_blank",rel:"noopener noreferrer"},y1=t("td",{style:{"text-align":"center"}},null,-1),x1={style:{"text-align":"left"}},p1=t("code",null,"深度优先搜索",-1),b1=t("code",null,"广度优先搜索",-1),k1=t("code",null,"数组",-1),M1=t("code",null,"1+",-1),I1={style:{"text-align":"left"}},v1=t("td",{style:{"text-align":"center"}},"499",-1),w1={style:{"text-align":"left"}},j1={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},H1=t("td",{style:{"text-align":"center"}},null,-1),E1={style:{"text-align":"left"}},z1=t("code",null,"深度优先搜索",-1),O1=t("code",null,"广度优先搜索",-1),L1=t("code",null,"图",-1),q1=t("code",null,"5+",-1),N1={style:{"text-align":"left"}},C1=t("td",{style:{"text-align":"center"}},"501",-1),P1={style:{"text-align":"left"}},T1={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},V1=t("td",{style:{"text-align":"center"}},null,-1),B1={style:{"text-align":"left"}},K1=t("code",null,"树",-1),U1=t("code",null,"深度优先搜索",-1),A1=t("code",null,"二叉搜索树",-1),W1=t("code",null,"1+",-1),D1={style:{"text-align":"left"}},Y1=t("td",{style:{"text-align":"center"}},"505",-1),F1={style:{"text-align":"left"}},J1={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},Q1=t("td",{style:{"text-align":"center"}},null,-1),R1={style:{"text-align":"left"}},S1=t("code",null,"深度优先搜索",-1),Z1=t("code",null,"广度优先搜索",-1),G1=t("code",null,"图",-1),X1=t("code",null,"4+",-1),$1={style:{"text-align":"left"}},tu=t("td",{style:{"text-align":"center"}},"508",-1),eu={style:{"text-align":"left"}},lu={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},ou=t("td",{style:{"text-align":"center"}},null,-1),nu={style:{"text-align":"left"}},su=t("code",null,"树",-1),du=t("code",null,"深度优先搜索",-1),_u=t("code",null,"哈希表",-1),cu=t("code",null,"1+",-1),iu={style:{"text-align":"left"}},ru=t("td",{style:{"text-align":"center"}},"513",-1),au={style:{"text-align":"left"}},hu={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},uu=t("td",{style:{"text-align":"center"}},null,-1),fu={style:{"text-align":"left"}},gu=t("code",null,"树",-1),mu=t("code",null,"深度优先搜索",-1),yu=t("code",null,"广度优先搜索",-1),xu=t("code",null,"1+",-1),pu={style:{"text-align":"left"}},bu=t("td",{style:{"text-align":"center"}},"514",-1),ku={style:{"text-align":"left"}},Mu={href:"https://leetcode.com/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},Iu={style:{"text-align":"center"}},vu={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0514",target:"_blank",rel:"noopener noreferrer"},wu={style:{"text-align":"left"}},ju=t("code",null,"深度优先搜索",-1),Hu=t("code",null,"广度优先搜索",-1),Eu=t("code",null,"字符串",-1),zu=t("code",null,"1+",-1),Ou={style:{"text-align":"left"}},Lu=t("td",{style:{"text-align":"center"}},"515",-1),qu={style:{"text-align":"left"}},Nu={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},Cu=t("td",{style:{"text-align":"center"}},null,-1),Pu={style:{"text-align":"left"}},Tu=t("code",null,"树",-1),Vu=t("code",null,"深度优先搜索",-1),Bu=t("code",null,"广度优先搜索",-1),Ku=t("code",null,"1+",-1),Uu={style:{"text-align":"left"}},Au=t("td",{style:{"text-align":"center"}},"529",-1),Wu={style:{"text-align":"left"}},Du={href:"https://leetcode.com/problems/minesweeper",target:"_blank",rel:"noopener noreferrer"},Yu=t("td",{style:{"text-align":"center"}},null,-1),Fu={style:{"text-align":"left"}},Ju=t("code",null,"深度优先搜索",-1),Qu=t("code",null,"广度优先搜索",-1),Ru=t("code",null,"数组",-1),Su=t("code",null,"1+",-1),Zu={style:{"text-align":"left"}},Gu=t("td",{style:{"text-align":"center"}},"530",-1),Xu={style:{"text-align":"left"}},$u={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},tf={style:{"text-align":"center"}},ef={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0530",target:"_blank",rel:"noopener noreferrer"},lf={style:{"text-align":"left"}},of=t("code",null,"树",-1),nf=t("code",null,"深度优先搜索",-1),sf=t("code",null,"广度优先搜索",-1),df=t("code",null,"2+",-1),_f={style:{"text-align":"left"}},cf=t("td",{style:{"text-align":"center"}},"536",-1),rf={style:{"text-align":"left"}},af={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},hf=t("td",{style:{"text-align":"center"}},null,-1),uf={style:{"text-align":"left"}},ff=t("code",null,"栈",-1),gf=t("code",null,"树",-1),mf=t("code",null,"深度优先搜索",-1),yf=t("code",null,"2+",-1),xf={style:{"text-align":"left"}},pf=t("td",{style:{"text-align":"center"}},"538",-1),bf={style:{"text-align":"left"}},kf={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Mf=t("td",{style:{"text-align":"center"}},null,-1),If={style:{"text-align":"left"}},vf=t("code",null,"树",-1),wf=t("code",null,"深度优先搜索",-1),jf=t("code",null,"二叉搜索树",-1),Hf=t("code",null,"1+",-1),Ef={style:{"text-align":"left"}},zf=t("td",{style:{"text-align":"center"}},"543",-1),Of={style:{"text-align":"left"}},Lf={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},qf={style:{"text-align":"center"}},Nf={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0543",target:"_blank",rel:"noopener noreferrer"},Cf={style:{"text-align":"left"}},Pf=t("code",null,"树",-1),Tf=t("code",null,"深度优先搜索",-1),Vf=t("code",null,"二叉树",-1),Bf={style:{"text-align":"left"}},Kf=t("td",{style:{"text-align":"center"}},"545",-1),Uf={style:{"text-align":"left"}},Af={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wf=t("td",{style:{"text-align":"center"}},null,-1),Df={style:{"text-align":"left"}},Yf=t("code",null,"树",-1),Ff=t("code",null,"深度优先搜索",-1),Jf=t("code",null,"二叉树",-1),Qf={style:{"text-align":"left"}},Rf=t("td",{style:{"text-align":"center"}},"547",-1),Sf={style:{"text-align":"left"}},Zf={href:"https://leetcode.com/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},Gf=t("td",{style:{"text-align":"center"}},null,-1),Xf={style:{"text-align":"left"}},$f=t("code",null,"深度优先搜索",-1),tg=t("code",null,"广度优先搜索",-1),eg=t("code",null,"并查集",-1),lg=t("code",null,"1+",-1),og={style:{"text-align":"left"}},ng=t("td",{style:{"text-align":"center"}},"549",-1),sg={style:{"text-align":"left"}},dg={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},_g=t("td",{style:{"text-align":"center"}},null,-1),cg={style:{"text-align":"left"}},ig=t("code",null,"树",-1),rg=t("code",null,"深度优先搜索",-1),ag=t("code",null,"二叉树",-1),hg={style:{"text-align":"left"}},ug=t("td",{style:{"text-align":"center"}},"559",-1),fg={style:{"text-align":"left"}},gg={href:"https://leetcode.com/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},mg={style:{"text-align":"center"}},yg={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0559",target:"_blank",rel:"noopener noreferrer"},xg={style:{"text-align":"left"}},pg=t("code",null,"树",-1),bg=t("code",null,"深度优先搜索",-1),kg=t("code",null,"广度优先搜索",-1),Mg={style:{"text-align":"left"}},Ig=t("td",{style:{"text-align":"center"}},"563",-1),vg={style:{"text-align":"left"}},wg={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},jg=t("td",{style:{"text-align":"center"}},null,-1),Hg={style:{"text-align":"left"}},Eg=t("code",null,"树",-1),zg=t("code",null,"深度优先搜索",-1),Og=t("code",null,"二叉树",-1),Lg={style:{"text-align":"left"}},qg=t("td",{style:{"text-align":"center"}},"565",-1),Ng={style:{"text-align":"left"}},Cg={href:"https://leetcode.com/problems/array-nesting",target:"_blank",rel:"noopener noreferrer"},Pg=t("td",{style:{"text-align":"center"}},null,-1),Tg={style:{"text-align":"left"}},Vg=t("code",null,"深度优先搜索",-1),Bg=t("code",null,"数组",-1),Kg={style:{"text-align":"left"}},Ug=t("td",{style:{"text-align":"center"}},"572",-1),Ag={style:{"text-align":"left"}},Wg={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},Dg={style:{"text-align":"center"}},Yg={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0572",target:"_blank",rel:"noopener noreferrer"},Fg={style:{"text-align":"left"}},Jg=t("code",null,"树",-1),Qg=t("code",null,"深度优先搜索",-1),Rg=t("code",null,"二叉树",-1),Sg=t("code",null,"2+",-1),Zg={style:{"text-align":"left"}},Gg=t("td",{style:{"text-align":"center"}},"582",-1),Xg={style:{"text-align":"left"}},$g={href:"https://leetcode.com/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},tm=t("td",{style:{"text-align":"center"}},null,-1),em={style:{"text-align":"left"}},lm=t("code",null,"树",-1),om=t("code",null,"深度优先搜索",-1),nm=t("code",null,"广度优先搜索",-1),sm=t("code",null,"2+",-1),dm={style:{"text-align":"left"}},_m=t("td",{style:{"text-align":"center"}},"589",-1),cm={style:{"text-align":"left"}},im={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},rm={style:{"text-align":"center"}},am={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0589",target:"_blank",rel:"noopener noreferrer"},hm={style:{"text-align":"left"}},um=t("code",null,"栈",-1),fm=t("code",null,"树",-1),gm=t("code",null,"深度优先搜索",-1),mm={style:{"text-align":"left"}},ym=t("td",{style:{"text-align":"center"}},"590",-1),xm={style:{"text-align":"left"}},pm={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},bm={style:{"text-align":"center"}},km={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0590",target:"_blank",rel:"noopener noreferrer"},Mm={style:{"text-align":"left"}},Im=t("code",null,"栈",-1),vm=t("code",null,"树",-1),wm=t("code",null,"深度优先搜索",-1),jm={style:{"text-align":"left"}},Hm=t("td",{style:{"text-align":"center"}},"606",-1),Em={style:{"text-align":"left"}},zm={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},Om=t("td",{style:{"text-align":"center"}},null,-1),Lm={style:{"text-align":"left"}},qm=t("code",null,"树",-1),Nm=t("code",null,"深度优先搜索",-1),Cm=t("code",null,"字符串",-1),Pm=t("code",null,"1+",-1),Tm={style:{"text-align":"left"}},Vm=t("td",{style:{"text-align":"center"}},"617",-1),Bm={style:{"text-align":"left"}},Km={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},Um={style:{"text-align":"center"}},Am={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0617",target:"_blank",rel:"noopener noreferrer"},Wm={style:{"text-align":"left"}},Dm=t("code",null,"树",-1),Ym=t("code",null,"深度优先搜索",-1),Fm=t("code",null,"广度优先搜索",-1),Jm=t("code",null,"1+",-1),Qm={style:{"text-align":"left"}},Rm=t("td",{style:{"text-align":"center"}},"623",-1),Sm={style:{"text-align":"left"}},Zm={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},Gm=t("td",{style:{"text-align":"center"}},null,-1),Xm={style:{"text-align":"left"}},$m=t("code",null,"树",-1),t2=t("code",null,"深度优先搜索",-1),e2=t("code",null,"广度优先搜索",-1),l2=t("code",null,"1+",-1),o2={style:{"text-align":"left"}},n2=t("td",{style:{"text-align":"center"}},"637",-1),s2={style:{"text-align":"left"}},d2={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},_2={style:{"text-align":"center"}},c2={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0637",target:"_blank",rel:"noopener noreferrer"},i2={style:{"text-align":"left"}},r2=t("code",null,"树",-1),a2=t("code",null,"深度优先搜索",-1),h2=t("code",null,"广度优先搜索",-1),u2=t("code",null,"1+",-1),f2={style:{"text-align":"left"}},g2=t("td",{style:{"text-align":"center"}},"642",-1),m2={style:{"text-align":"left"}},y2={href:"https://leetcode.com/problems/design-search-autocomplete-system",target:"_blank",rel:"noopener noreferrer"},x2=t("td",{style:{"text-align":"center"}},null,-1),p2={style:{"text-align":"left"}},b2=t("code",null,"深度优先搜索",-1),k2=t("code",null,"设计",-1),M2=t("code",null,"字典树",-1),I2=t("code",null,"4+",-1),v2={style:{"text-align":"left"}},w2=t("td",{style:{"text-align":"center"}},"652",-1),j2={style:{"text-align":"left"}},H2={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},E2=t("td",{style:{"text-align":"center"}},null,-1),z2={style:{"text-align":"left"}},O2=t("code",null,"树",-1),L2=t("code",null,"深度优先搜索",-1),q2=t("code",null,"哈希表",-1),N2=t("code",null,"1+",-1),C2={style:{"text-align":"left"}},P2=t("td",{style:{"text-align":"center"}},"653",-1),T2={style:{"text-align":"left"}},V2={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},B2=t("td",{style:{"text-align":"center"}},null,-1),K2={style:{"text-align":"left"}},U2=t("code",null,"树",-1),A2=t("code",null,"深度优先搜索",-1),W2=t("code",null,"广度优先搜索",-1),D2=t("code",null,"4+",-1),Y2={style:{"text-align":"left"}},F2=t("td",{style:{"text-align":"center"}},"655",-1),J2={style:{"text-align":"left"}},Q2={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},R2=t("td",{style:{"text-align":"center"}},null,-1),S2={style:{"text-align":"left"}},Z2=t("code",null,"树",-1),G2=t("code",null,"深度优先搜索",-1),X2=t("code",null,"广度优先搜索",-1),$2=t("code",null,"1+",-1),ty={style:{"text-align":"left"}},ey=t("td",{style:{"text-align":"center"}},"662",-1),ly={style:{"text-align":"left"}},oy={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},ny={style:{"text-align":"center"}},sy={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0662",target:"_blank",rel:"noopener noreferrer"},dy={style:{"text-align":"left"}},_y=t("code",null,"树",-1),cy=t("code",null,"深度优先搜索",-1),iy=t("code",null,"广度优先搜索",-1),ry=t("code",null,"1+",-1),ay={style:{"text-align":"left"}},hy=t("td",{style:{"text-align":"center"}},"663",-1),uy={style:{"text-align":"left"}},fy={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},gy=t("td",{style:{"text-align":"center"}},null,-1),my={style:{"text-align":"left"}},yy=t("code",null,"树",-1),xy=t("code",null,"深度优先搜索",-1),py=t("code",null,"二叉树",-1),by={style:{"text-align":"left"}},ky=t("td",{style:{"text-align":"center"}},"666",-1),My={style:{"text-align":"left"}},Iy={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},vy=t("td",{style:{"text-align":"center"}},null,-1),wy={style:{"text-align":"left"}},jy=t("code",null,"树",-1),Hy=t("code",null,"深度优先搜索",-1),Ey=t("code",null,"数组",-1),zy=t("code",null,"2+",-1),Oy={style:{"text-align":"left"}},Ly=t("td",{style:{"text-align":"center"}},"669",-1),qy={style:{"text-align":"left"}},Ny={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Cy=t("td",{style:{"text-align":"center"}},null,-1),Py={style:{"text-align":"left"}},Ty=t("code",null,"树",-1),Vy=t("code",null,"深度优先搜索",-1),By=t("code",null,"二叉搜索树",-1),Ky=t("code",null,"1+",-1),Uy={style:{"text-align":"left"}},Ay=t("td",{style:{"text-align":"center"}},"671",-1),Wy={style:{"text-align":"left"}},Dy={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yy=t("td",{style:{"text-align":"center"}},null,-1),Fy={style:{"text-align":"left"}},Jy=t("code",null,"树",-1),Qy=t("code",null,"深度优先搜索",-1),Ry=t("code",null,"二叉树",-1),Sy={style:{"text-align":"left"}},Zy=t("td",{style:{"text-align":"center"}},"672",-1),Gy={style:{"text-align":"left"}},Xy={href:"https://leetcode.com/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},$y=t("td",{style:{"text-align":"center"}},null,-1),t3={style:{"text-align":"left"}},e3=t("code",null,"位运算",-1),l3=t("code",null,"深度优先搜索",-1),o3=t("code",null,"广度优先搜索",-1),n3=t("code",null,"1+",-1),s3={style:{"text-align":"left"}},d3=t("td",{style:{"text-align":"center"}},"676",-1),_3={style:{"text-align":"left"}},c3={href:"https://leetcode.com/problems/implement-magic-dictionary",target:"_blank",rel:"noopener noreferrer"},i3=t("td",{style:{"text-align":"center"}},null,-1),r3={style:{"text-align":"left"}},a3=t("code",null,"深度优先搜索",-1),h3=t("code",null,"设计",-1),u3=t("code",null,"字典树",-1),f3=t("code",null,"2+",-1),g3={style:{"text-align":"left"}},m3=t("td",{style:{"text-align":"center"}},"684",-1),y3={style:{"text-align":"left"}},x3={href:"https://leetcode.com/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},p3=t("td",{style:{"text-align":"center"}},null,-1),b3={style:{"text-align":"left"}},k3=t("code",null,"深度优先搜索",-1),M3=t("code",null,"广度优先搜索",-1),I3=t("code",null,"并查集",-1),v3=t("code",null,"1+",-1),w3={style:{"text-align":"left"}},j3=t("td",{style:{"text-align":"center"}},"685",-1),H3={style:{"text-align":"left"}},E3={href:"https://leetcode.com/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},z3=t("td",{style:{"text-align":"center"}},null,-1),O3={style:{"text-align":"left"}},L3=t("code",null,"深度优先搜索",-1),q3=t("code",null,"广度优先搜索",-1),N3=t("code",null,"并查集",-1),C3=t("code",null,"1+",-1),P3={style:{"text-align":"left"}},T3=t("td",{style:{"text-align":"center"}},"687",-1),V3={style:{"text-align":"left"}},B3={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},K3=t("td",{style:{"text-align":"center"}},null,-1),U3={style:{"text-align":"left"}},A3=t("code",null,"树",-1),W3=t("code",null,"深度优先搜索",-1),D3=t("code",null,"二叉树",-1),Y3={style:{"text-align":"left"}},F3=t("td",{style:{"text-align":"center"}},"690",-1),J3={style:{"text-align":"left"}},Q3={href:"https://leetcode.com/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},R3=t("td",{style:{"text-align":"center"}},null,-1),S3={style:{"text-align":"left"}},Z3=t("code",null,"树",-1),G3=t("code",null,"深度优先搜索",-1),X3=t("code",null,"广度优先搜索",-1),$3=t("code",null,"2+",-1),tx={style:{"text-align":"left"}},ex=t("td",{style:{"text-align":"center"}},"694",-1),lx={style:{"text-align":"left"}},ox={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},nx=t("td",{style:{"text-align":"center"}},null,-1),sx={style:{"text-align":"left"}},dx=t("code",null,"深度优先搜索",-1),_x=t("code",null,"广度优先搜索",-1),cx=t("code",null,"并查集",-1),ix=t("code",null,"2+",-1),rx={style:{"text-align":"left"}},ax=t("td",{style:{"text-align":"center"}},"695",-1),hx={style:{"text-align":"left"}},ux={href:"https://leetcode.com/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},fx={style:{"text-align":"center"}},gx={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0695",target:"_blank",rel:"noopener noreferrer"},mx={style:{"text-align":"left"}},yx=t("code",null,"深度优先搜索",-1),xx=t("code",null,"广度优先搜索",-1),px=t("code",null,"并查集",-1),bx=t("code",null,"2+",-1),kx={style:{"text-align":"left"}},Mx=t("td",{style:{"text-align":"center"}},"711",-1),Ix={style:{"text-align":"left"}},vx={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},wx=t("td",{style:{"text-align":"center"}},null,-1),jx={style:{"text-align":"left"}},Hx=t("code",null,"深度优先搜索",-1),Ex=t("code",null,"广度优先搜索",-1),zx=t("code",null,"并查集",-1),Ox=t("code",null,"2+",-1),Lx={style:{"text-align":"left"}},qx=t("td",{style:{"text-align":"center"}},"721",-1),Nx={style:{"text-align":"left"}},Cx={href:"https://leetcode.com/problems/accounts-merge",target:"_blank",rel:"noopener noreferrer"},Px=t("td",{style:{"text-align":"center"}},null,-1),Tx={style:{"text-align":"left"}},Vx=t("code",null,"深度优先搜索",-1),Bx=t("code",null,"广度优先搜索",-1),Kx=t("code",null,"并查集",-1),Ux=t("code",null,"4+",-1),Ax={style:{"text-align":"left"}},Wx=t("td",{style:{"text-align":"center"}},"733",-1),Dx={style:{"text-align":"left"}},Yx={href:"https://leetcode.com/problems/flood-fill",target:"_blank",rel:"noopener noreferrer"},Fx=t("td",{style:{"text-align":"center"}},null,-1),Jx={style:{"text-align":"left"}},Qx=t("code",null,"深度优先搜索",-1),Rx=t("code",null,"广度优先搜索",-1),Sx=t("code",null,"数组",-1),Zx=t("code",null,"1+",-1),Gx={style:{"text-align":"left"}},Xx=t("td",{style:{"text-align":"center"}},"737",-1),$x={style:{"text-align":"left"}},tp={href:"https://leetcode.com/problems/sentence-similarity-ii",target:"_blank",rel:"noopener noreferrer"},ep=t("td",{style:{"text-align":"center"}},null,-1),lp={style:{"text-align":"left"}},op=t("code",null,"深度优先搜索",-1),np=t("code",null,"广度优先搜索",-1),sp=t("code",null,"并查集",-1),dp=t("code",null,"3+",-1),_p={style:{"text-align":"left"}},cp=t("td",{style:{"text-align":"center"}},"742",-1),ip={style:{"text-align":"left"}},rp={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ap=t("td",{style:{"text-align":"center"}},null,-1),hp={style:{"text-align":"left"}},up=t("code",null,"树",-1),fp=t("code",null,"深度优先搜索",-1),gp=t("code",null,"广度优先搜索",-1),mp=t("code",null,"1+",-1),yp={style:{"text-align":"left"}},xp=t("td",{style:{"text-align":"center"}},"743",-1),pp={style:{"text-align":"left"}},bp={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},kp=t("td",{style:{"text-align":"center"}},null,-1),Mp={style:{"text-align":"left"}},Ip=t("code",null,"深度优先搜索",-1),vp=t("code",null,"广度优先搜索",-1),wp=t("code",null,"图",-1),jp=t("code",null,"2+",-1),Hp={style:{"text-align":"left"}},Ep=t("td",{style:{"text-align":"center"}},"749",-1),zp={style:{"text-align":"left"}},Op={href:"https://leetcode.com/problems/contain-virus",target:"_blank",rel:"noopener noreferrer"},Lp=t("td",{style:{"text-align":"center"}},null,-1),qp={style:{"text-align":"left"}},Np=t("code",null,"深度优先搜索",-1),Cp=t("code",null,"广度优先搜索",-1),Pp=t("code",null,"数组",-1),Tp=t("code",null,"2+",-1),Vp={style:{"text-align":"left"}},Bp=t("td",{style:{"text-align":"center"}},"753",-1),Kp={style:{"text-align":"left"}},Up={href:"https://leetcode.com/problems/cracking-the-safe",target:"_blank",rel:"noopener noreferrer"},Ap=t("td",{style:{"text-align":"center"}},null,-1),Wp={style:{"text-align":"left"}},Dp=t("code",null,"深度优先搜索",-1),Yp=t("code",null,"图",-1),Fp=t("code",null,"欧拉回路",-1),Jp={style:{"text-align":"left"}},Qp=t("td",{style:{"text-align":"center"}},"756",-1),Rp={style:{"text-align":"left"}},Sp={href:"https://leetcode.com/problems/pyramid-transition-matrix",target:"_blank",rel:"noopener noreferrer"},Zp=t("td",{style:{"text-align":"center"}},null,-1),Gp={style:{"text-align":"left"}},Xp=t("code",null,"位运算",-1),$p=t("code",null,"深度优先搜索",-1),tb=t("code",null,"广度优先搜索",-1),eb={style:{"text-align":"left"}},lb=t("td",{style:{"text-align":"center"}},"765",-1),ob={style:{"text-align":"left"}},nb={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},sb=t("td",{style:{"text-align":"center"}},null,-1),db={style:{"text-align":"left"}},_b=t("code",null,"贪心",-1),cb=t("code",null,"深度优先搜索",-1),ib=t("code",null,"广度优先搜索",-1),rb=t("code",null,"2+",-1),ab={style:{"text-align":"left"}},hb=t("td",{style:{"text-align":"center"}},"778",-1),ub={style:{"text-align":"left"}},fb={href:"https://leetcode.com/problems/swim-in-rising-water",target:"_blank",rel:"noopener noreferrer"},gb=t("td",{style:{"text-align":"center"}},null,-1),mb={style:{"text-align":"left"}},yb=t("code",null,"深度优先搜索",-1),xb=t("code",null,"广度优先搜索",-1),pb=t("code",null,"并查集",-1),bb=t("code",null,"4+",-1),kb={style:{"text-align":"left"}},Mb=t("td",{style:{"text-align":"center"}},"783",-1),Ib={style:{"text-align":"left"}},vb={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},wb={style:{"text-align":"center"}},jb={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0783",target:"_blank",rel:"noopener noreferrer"},Hb={style:{"text-align":"left"}},Eb=t("code",null,"树",-1),zb=t("code",null,"深度优先搜索",-1),Ob=t("code",null,"广度优先搜索",-1),Lb=t("code",null,"2+",-1),qb={style:{"text-align":"left"}},Nb=t("td",{style:{"text-align":"center"}},"785",-1),Cb={style:{"text-align":"left"}},Pb={href:"https://leetcode.com/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},Tb=t("td",{style:{"text-align":"center"}},null,-1),Vb={style:{"text-align":"left"}},Bb=t("code",null,"深度优先搜索",-1),Kb=t("code",null,"广度优先搜索",-1),Ub=t("code",null,"并查集",-1),Ab=t("code",null,"1+",-1),Wb={style:{"text-align":"left"}},Db=t("td",{style:{"text-align":"center"}},"787",-1),Yb={style:{"text-align":"left"}},Fb={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},Jb=t("td",{style:{"text-align":"center"}},null,-1),Qb={style:{"text-align":"left"}},Rb=t("code",null,"深度优先搜索",-1),Sb=t("code",null,"广度优先搜索",-1),Zb=t("code",null,"图",-1),Gb=t("code",null,"3+",-1),Xb={style:{"text-align":"left"}},$b=t("td",{style:{"text-align":"center"}},"797",-1),t0={style:{"text-align":"left"}},e0={href:"https://leetcode.com/problems/all-paths-from-source-to-target",target:"_blank",rel:"noopener noreferrer"},l0=t("td",{style:{"text-align":"center"}},null,-1),o0={style:{"text-align":"left"}},n0=t("code",null,"深度优先搜索",-1),s0=t("code",null,"广度优先搜索",-1),d0=t("code",null,"图",-1),_0=t("code",null,"1+",-1),c0={style:{"text-align":"left"}},i0=t("td",{style:{"text-align":"center"}},"802",-1),r0={style:{"text-align":"left"}},a0={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},h0=t("td",{style:{"text-align":"center"}},null,-1),u0={style:{"text-align":"left"}},f0=t("code",null,"深度优先搜索",-1),g0=t("code",null,"广度优先搜索",-1),m0=t("code",null,"图",-1),y0=t("code",null,"1+",-1),x0={style:{"text-align":"left"}},p0=t("td",{style:{"text-align":"center"}},"814",-1),b0={style:{"text-align":"left"}},k0={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},M0=t("td",{style:{"text-align":"center"}},null,-1),I0={style:{"text-align":"left"}},v0=t("code",null,"树",-1),w0=t("code",null,"深度优先搜索",-1),j0=t("code",null,"二叉树",-1),H0={style:{"text-align":"left"}},E0=t("td",{style:{"text-align":"center"}},"827",-1),z0={style:{"text-align":"left"}},O0={href:"https://leetcode.com/problems/making-a-large-island",target:"_blank",rel:"noopener noreferrer"},L0=t("td",{style:{"text-align":"center"}},null,-1),q0={style:{"text-align":"left"}},N0=t("code",null,"深度优先搜索",-1),C0=t("code",null,"广度优先搜索",-1),P0=t("code",null,"并查集",-1),T0=t("code",null,"2+",-1),V0={style:{"text-align":"left"}},B0=t("td",{style:{"text-align":"center"}},"834",-1),K0={style:{"text-align":"left"}},U0={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},A0=t("td",{style:{"text-align":"center"}},null,-1),W0={style:{"text-align":"left"}},D0=t("code",null,"树",-1),Y0=t("code",null,"深度优先搜索",-1),F0=t("code",null,"图",-1),J0=t("code",null,"1+",-1),Q0={style:{"text-align":"left"}},R0=t("td",{style:{"text-align":"center"}},"839",-1),S0={style:{"text-align":"left"}},Z0={href:"https://leetcode.com/problems/similar-string-groups",target:"_blank",rel:"noopener noreferrer"},G0=t("td",{style:{"text-align":"center"}},null,-1),X0={style:{"text-align":"left"}},$0=t("code",null,"深度优先搜索",-1),t4=t("code",null,"广度优先搜索",-1),e4=t("code",null,"并查集",-1),l4=t("code",null,"3+",-1),o4={style:{"text-align":"left"}},n4=t("td",{style:{"text-align":"center"}},"841",-1),s4={style:{"text-align":"left"}},d4={href:"https://leetcode.com/problems/keys-and-rooms",target:"_blank",rel:"noopener noreferrer"},_4=t("td",{style:{"text-align":"center"}},null,-1),c4={style:{"text-align":"left"}},i4=t("code",null,"深度优先搜索",-1),r4=t("code",null,"广度优先搜索",-1),a4=t("code",null,"图",-1),h4={style:{"text-align":"left"}},u4=t("td",{style:{"text-align":"center"}},"851",-1),f4={style:{"text-align":"left"}},g4={href:"https://leetcode.com/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},m4=t("td",{style:{"text-align":"center"}},null,-1),y4={style:{"text-align":"left"}},x4=t("code",null,"深度优先搜索",-1),p4=t("code",null,"图",-1),b4=t("code",null,"拓扑排序",-1),k4=t("code",null,"1+",-1),M4={style:{"text-align":"left"}},I4=t("td",{style:{"text-align":"center"}},"863",-1),v4={style:{"text-align":"left"}},w4={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},j4=t("td",{style:{"text-align":"center"}},null,-1),H4={style:{"text-align":"left"}},E4=t("code",null,"树",-1),z4=t("code",null,"深度优先搜索",-1),O4=t("code",null,"广度优先搜索",-1),L4=t("code",null,"2+",-1),q4={style:{"text-align":"left"}},N4=t("td",{style:{"text-align":"center"}},"865",-1),C4={style:{"text-align":"left"}},P4={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},T4=t("td",{style:{"text-align":"center"}},null,-1),V4={style:{"text-align":"left"}},B4=t("code",null,"树",-1),K4=t("code",null,"深度优先搜索",-1),U4=t("code",null,"广度优先搜索",-1),A4=t("code",null,"2+",-1),W4={style:{"text-align":"left"}},D4=t("td",{style:{"text-align":"center"}},"872",-1),Y4={style:{"text-align":"left"}},F4={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},J4=t("td",{style:{"text-align":"center"}},null,-1),Q4={style:{"text-align":"left"}},R4=t("code",null,"树",-1),S4=t("code",null,"深度优先搜索",-1),Z4=t("code",null,"二叉树",-1),G4={style:{"text-align":"left"}},X4=t("td",{style:{"text-align":"center"}},"886",-1),$4={style:{"text-align":"left"}},t8={href:"https://leetcode.com/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},e8=t("td",{style:{"text-align":"center"}},null,-1),l8={style:{"text-align":"left"}},o8=t("code",null,"深度优先搜索",-1),n8=t("code",null,"广度优先搜索",-1),s8=t("code",null,"并查集",-1),d8=t("code",null,"1+",-1),_8={style:{"text-align":"left"}},c8=t("td",{style:{"text-align":"center"}},"897",-1),i8={style:{"text-align":"left"}},r8={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},a8=t("td",{style:{"text-align":"center"}},null,-1),h8={style:{"text-align":"left"}},u8=t("code",null,"栈",-1),f8=t("code",null,"树",-1),g8=t("code",null,"深度优先搜索",-1),m8=t("code",null,"2+",-1),y8={style:{"text-align":"left"}},x8=t("td",{style:{"text-align":"center"}},"924",-1),p8={style:{"text-align":"left"}},b8={href:"https://leetcode.com/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},k8=t("td",{style:{"text-align":"center"}},null,-1),M8={style:{"text-align":"left"}},I8=t("code",null,"深度优先搜索",-1),v8=t("code",null,"广度优先搜索",-1),w8=t("code",null,"并查集",-1),j8=t("code",null,"3+",-1),H8={style:{"text-align":"left"}},E8=t("td",{style:{"text-align":"center"}},"928",-1),z8={style:{"text-align":"left"}},O8={href:"https://leetcode.com/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},L8=t("td",{style:{"text-align":"center"}},null,-1),q8={style:{"text-align":"left"}},N8=t("code",null,"深度优先搜索",-1),C8=t("code",null,"广度优先搜索",-1),P8=t("code",null,"并查集",-1),T8=t("code",null,"3+",-1),V8={style:{"text-align":"left"}},B8=t("td",{style:{"text-align":"center"}},"934",-1),K8={style:{"text-align":"left"}},U8={href:"https://leetcode.com/problems/shortest-bridge",target:"_blank",rel:"noopener noreferrer"},A8=t("td",{style:{"text-align":"center"}},null,-1),W8={style:{"text-align":"left"}},D8=t("code",null,"深度优先搜索",-1),Y8=t("code",null,"广度优先搜索",-1),F8=t("code",null,"数组",-1),J8=t("code",null,"1+",-1),Q8={style:{"text-align":"left"}},R8=t("td",{style:{"text-align":"center"}},"938",-1),S8={style:{"text-align":"left"}},Z8={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},G8=t("td",{style:{"text-align":"center"}},null,-1),X8={style:{"text-align":"left"}},$8=t("code",null,"树",-1),t5=t("code",null,"深度优先搜索",-1),e5=t("code",null,"二叉搜索树",-1),l5=t("code",null,"1+",-1),o5={style:{"text-align":"left"}},n5=t("td",{style:{"text-align":"center"}},"947",-1),s5={style:{"text-align":"left"}},d5={href:"https://leetcode.com/problems/most-stones-removed-with-same-row-or-column",target:"_blank",rel:"noopener noreferrer"},_5=t("td",{style:{"text-align":"center"}},null,-1),c5={style:{"text-align":"left"}},i5=t("code",null,"深度优先搜索",-1),r5=t("code",null,"并查集",-1),a5=t("code",null,"图",-1),h5=t("code",null,"1+",-1),u5={style:{"text-align":"left"}},f5=t("td",{style:{"text-align":"center"}},"951",-1),g5={style:{"text-align":"left"}},m5={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},y5=t("td",{style:{"text-align":"center"}},null,-1),x5={style:{"text-align":"left"}},p5=t("code",null,"树",-1),b5=t("code",null,"深度优先搜索",-1),k5=t("code",null,"二叉树",-1),M5={style:{"text-align":"left"}},I5=t("td",{style:{"text-align":"center"}},"959",-1),v5={style:{"text-align":"left"}},w5={href:"https://leetcode.com/problems/regions-cut-by-slashes",target:"_blank",rel:"noopener noreferrer"},j5=t("td",{style:{"text-align":"center"}},null,-1),H5={style:{"text-align":"left"}},E5=t("code",null,"深度优先搜索",-1),z5=t("code",null,"广度优先搜索",-1),O5=t("code",null,"并查集",-1),L5=t("code",null,"3+",-1),q5={style:{"text-align":"left"}},N5=t("td",{style:{"text-align":"center"}},"965",-1),C5={style:{"text-align":"left"}},P5={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},T5=t("td",{style:{"text-align":"center"}},null,-1),V5={style:{"text-align":"left"}},B5=t("code",null,"树",-1),K5=t("code",null,"深度优先搜索",-1),U5=t("code",null,"广度优先搜索",-1),A5=t("code",null,"1+",-1),W5={style:{"text-align":"left"}},D5=t("td",{style:{"text-align":"center"}},"968",-1),Y5={style:{"text-align":"left"}},F5={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},J5=t("td",{style:{"text-align":"center"}},null,-1),Q5={style:{"text-align":"left"}},R5=t("code",null,"树",-1),S5=t("code",null,"深度优先搜索",-1),Z5=t("code",null,"动态规划",-1),G5=t("code",null,"1+",-1),X5={style:{"text-align":"left"}},$5=t("td",{style:{"text-align":"center"}},"971",-1),t6={style:{"text-align":"left"}},e6={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},l6=t("td",{style:{"text-align":"center"}},null,-1),o6={style:{"text-align":"left"}},n6=t("code",null,"树",-1),s6=t("code",null,"深度优先搜索",-1),d6=t("code",null,"二叉树",-1),_6={style:{"text-align":"left"}},c6=t("td",{style:{"text-align":"center"}},"979",-1),i6={style:{"text-align":"left"}},r6={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},a6=t("td",{style:{"text-align":"center"}},null,-1),h6={style:{"text-align":"left"}},u6=t("code",null,"树",-1),f6=t("code",null,"深度优先搜索",-1),g6=t("code",null,"二叉树",-1),m6={style:{"text-align":"left"}},y6=t("td",{style:{"text-align":"center"}},"987",-1),x6={style:{"text-align":"left"}},p6={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},b6=t("td",{style:{"text-align":"center"}},null,-1),k6={style:{"text-align":"left"}},M6=t("code",null,"树",-1),I6=t("code",null,"深度优先搜索",-1),v6=t("code",null,"广度优先搜索",-1),w6=t("code",null,"3+",-1),j6={style:{"text-align":"left"}},H6=t("td",{style:{"text-align":"center"}},"988",-1),E6={style:{"text-align":"left"}},z6={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},O6=t("td",{style:{"text-align":"center"}},null,-1),L6={style:{"text-align":"left"}},q6=t("code",null,"树",-1),N6=t("code",null,"深度优先搜索",-1),C6=t("code",null,"字符串",-1),P6=t("code",null,"2+",-1),T6={style:{"text-align":"left"}},V6=t("td",{style:{"text-align":"center"}},"993",-1),B6={style:{"text-align":"left"}},K6={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},U6=t("td",{style:{"text-align":"center"}},null,-1),A6={style:{"text-align":"left"}},W6=t("code",null,"树",-1),D6=t("code",null,"深度优先搜索",-1),Y6=t("code",null,"广度优先搜索",-1),F6=t("code",null,"1+",-1),J6={style:{"text-align":"left"}},Q6=t("td",{style:{"text-align":"center"}},"1020",-1),R6={style:{"text-align":"left"}},S6={href:"https://leetcode.com/problems/number-of-enclaves",target:"_blank",rel:"noopener noreferrer"},Z6=t("td",{style:{"text-align":"center"}},null,-1),G6={style:{"text-align":"left"}},X6=t("code",null,"深度优先搜索",-1),$6=t("code",null,"广度优先搜索",-1),t7=t("code",null,"并查集",-1),e7=t("code",null,"2+",-1),l7={style:{"text-align":"left"}},o7=t("td",{style:{"text-align":"center"}},"1022",-1),n7={style:{"text-align":"left"}},s7={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},d7=t("td",{style:{"text-align":"center"}},null,-1),_7={style:{"text-align":"left"}},c7=t("code",null,"树",-1),i7=t("code",null,"深度优先搜索",-1),r7=t("code",null,"二叉树",-1),a7={style:{"text-align":"left"}},h7=t("td",{style:{"text-align":"center"}},"1026",-1),u7={style:{"text-align":"left"}},f7={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},g7=t("td",{style:{"text-align":"center"}},null,-1),m7={style:{"text-align":"left"}},y7=t("code",null,"树",-1),x7=t("code",null,"深度优先搜索",-1),p7=t("code",null,"二叉树",-1),b7={style:{"text-align":"left"}},k7=t("td",{style:{"text-align":"center"}},"1028",-1),M7={style:{"text-align":"left"}},I7={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},v7=t("td",{style:{"text-align":"center"}},null,-1),w7={style:{"text-align":"left"}},j7=t("code",null,"树",-1),H7=t("code",null,"深度优先搜索",-1),E7=t("code",null,"字符串",-1),z7=t("code",null,"1+",-1),O7={style:{"text-align":"left"}},L7=t("td",{style:{"text-align":"center"}},"1034",-1),q7={style:{"text-align":"left"}},N7={href:"https://leetcode.com/problems/coloring-a-border",target:"_blank",rel:"noopener noreferrer"},C7=t("td",{style:{"text-align":"center"}},null,-1),P7={style:{"text-align":"left"}},T7=t("code",null,"深度优先搜索",-1),V7=t("code",null,"广度优先搜索",-1),B7=t("code",null,"数组",-1),K7=t("code",null,"1+",-1),U7={style:{"text-align":"left"}},A7=t("td",{style:{"text-align":"center"}},"1036",-1),W7={style:{"text-align":"left"}},D7={href:"https://leetcode.com/problems/escape-a-large-maze",target:"_blank",rel:"noopener noreferrer"},Y7=t("td",{style:{"text-align":"center"}},null,-1),F7={style:{"text-align":"left"}},J7=t("code",null,"深度优先搜索",-1),Q7=t("code",null,"广度优先搜索",-1),R7=t("code",null,"数组",-1),S7=t("code",null,"1+",-1),Z7={style:{"text-align":"left"}},G7=t("td",{style:{"text-align":"center"}},"1038",-1),X7={style:{"text-align":"left"}},$7={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},t9=t("td",{style:{"text-align":"center"}},null,-1),e9={style:{"text-align":"left"}},l9=t("code",null,"树",-1),o9=t("code",null,"深度优先搜索",-1),n9=t("code",null,"二叉搜索树",-1),s9=t("code",null,"1+",-1),d9={style:{"text-align":"left"}},_9=t("td",{style:{"text-align":"center"}},"1042",-1),c9={style:{"text-align":"left"}},i9={href:"https://leetcode.com/problems/flower-planting-with-no-adjacent",target:"_blank",rel:"noopener noreferrer"},r9=t("td",{style:{"text-align":"center"}},null,-1),a9={style:{"text-align":"left"}},h9=t("code",null,"深度优先搜索",-1),u9=t("code",null,"广度优先搜索",-1),f9=t("code",null,"图",-1),g9={style:{"text-align":"left"}},m9=t("td",{style:{"text-align":"center"}},"1080",-1),y9={style:{"text-align":"left"}},x9={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},p9=t("td",{style:{"text-align":"center"}},null,-1),b9={style:{"text-align":"left"}},k9=t("code",null,"树",-1),M9=t("code",null,"深度优先搜索",-1),I9=t("code",null,"二叉树",-1),v9={style:{"text-align":"left"}},w9=t("td",{style:{"text-align":"center"}},"1102",-1),j9={style:{"text-align":"left"}},H9={href:"https://leetcode.com/problems/path-with-maximum-minimum-value",target:"_blank",rel:"noopener noreferrer"},E9=t("td",{style:{"text-align":"center"}},null,-1),z9={style:{"text-align":"left"}},O9=t("code",null,"深度优先搜索",-1),L9=t("code",null,"广度优先搜索",-1),q9=t("code",null,"并查集",-1),N9=t("code",null,"4+",-1),C9={style:{"text-align":"left"}},P9=t("td",{style:{"text-align":"center"}},"1110",-1),T9={style:{"text-align":"left"}},V9={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},B9=t("td",{style:{"text-align":"center"}},null,-1),K9={style:{"text-align":"left"}},U9=t("code",null,"树",-1),A9=t("code",null,"深度优先搜索",-1),W9=t("code",null,"数组",-1),D9=t("code",null,"2+",-1),Y9={style:{"text-align":"left"}},F9=t("td",{style:{"text-align":"center"}},"1120",-1),J9={style:{"text-align":"left"}},Q9={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},R9=t("td",{style:{"text-align":"center"}},null,-1),S9={style:{"text-align":"left"}},Z9=t("code",null,"树",-1),G9=t("code",null,"深度优先搜索",-1),X9=t("code",null,"二叉树",-1),$9={style:{"text-align":"left"}},tk=t("td",{style:{"text-align":"center"}},"1123",-1),ek={style:{"text-align":"left"}},lk={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},ok=t("td",{style:{"text-align":"center"}},null,-1),nk={style:{"text-align":"left"}},sk=t("code",null,"树",-1),dk=t("code",null,"深度优先搜索",-1),_k=t("code",null,"广度优先搜索",-1),ck=t("code",null,"2+",-1),ik={style:{"text-align":"left"}},rk=t("td",{style:{"text-align":"center"}},"1145",-1),ak={style:{"text-align":"left"}},hk={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},uk=t("td",{style:{"text-align":"center"}},null,-1),fk={style:{"text-align":"left"}},gk=t("code",null,"树",-1),mk=t("code",null,"深度优先搜索",-1),yk=t("code",null,"二叉树",-1),xk={style:{"text-align":"left"}},pk=t("td",{style:{"text-align":"center"}},"1161",-1),bk={style:{"text-align":"left"}},kk={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Mk=t("td",{style:{"text-align":"center"}},null,-1),Ik={style:{"text-align":"left"}},vk=t("code",null,"树",-1),wk=t("code",null,"深度优先搜索",-1),jk=t("code",null,"广度优先搜索",-1),Hk=t("code",null,"1+",-1),Ek={style:{"text-align":"left"}},zk=t("td",{style:{"text-align":"center"}},"1192",-1),Ok={style:{"text-align":"left"}},Lk={href:"https://leetcode.com/problems/critical-connections-in-a-network",target:"_blank",rel:"noopener noreferrer"},qk=t("td",{style:{"text-align":"center"}},null,-1),Nk={style:{"text-align":"left"}},Ck=t("code",null,"深度优先搜索",-1),Pk=t("code",null,"图",-1),Tk=t("code",null,"双连通分量",-1),Vk={style:{"text-align":"left"}},Bk=t("td",{style:{"text-align":"center"}},"1202",-1),Kk={style:{"text-align":"left"}},Uk={href:"https://leetcode.com/problems/smallest-string-with-swaps",target:"_blank",rel:"noopener noreferrer"},Ak=t("td",{style:{"text-align":"center"}},null,-1),Wk={style:{"text-align":"left"}},Dk=t("code",null,"深度优先搜索",-1),Yk=t("code",null,"广度优先搜索",-1),Fk=t("code",null,"并查集",-1),Jk=t("code",null,"4+",-1),Qk={style:{"text-align":"left"}},Rk=t("td",{style:{"text-align":"center"}},"1203",-1),Sk={style:{"text-align":"left"}},Zk={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},Gk=t("td",{style:{"text-align":"center"}},null,-1),Xk={style:{"text-align":"left"}},$k=t("code",null,"深度优先搜索",-1),tM=t("code",null,"广度优先搜索",-1),eM=t("code",null,"图",-1),lM=t("code",null,"1+",-1),oM={style:{"text-align":"left"}},nM=t("td",{style:{"text-align":"center"}},"1214",-1),sM={style:{"text-align":"left"}},dM={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},_M=t("td",{style:{"text-align":"center"}},null,-1),cM={style:{"text-align":"left"}},iM=t("code",null,"栈",-1),rM=t("code",null,"树",-1),aM=t("code",null,"深度优先搜索",-1),hM=t("code",null,"4+",-1),uM={style:{"text-align":"left"}},fM=t("td",{style:{"text-align":"center"}},"1233",-1),gM={style:{"text-align":"left"}},mM={href:"https://leetcode.com/problems/remove-sub-folders-from-the-filesystem",target:"_blank",rel:"noopener noreferrer"},yM=t("td",{style:{"text-align":"center"}},null,-1),xM={style:{"text-align":"left"}},pM=t("code",null,"深度优先搜索",-1),bM=t("code",null,"字典树",-1),kM=t("code",null,"数组",-1),MM=t("code",null,"1+",-1),IM={style:{"text-align":"left"}},vM=t("td",{style:{"text-align":"center"}},"1236",-1),wM={style:{"text-align":"left"}},jM={href:"https://leetcode.com/problems/web-crawler",target:"_blank",rel:"noopener noreferrer"},HM=t("td",{style:{"text-align":"center"}},null,-1),EM={style:{"text-align":"left"}},zM=t("code",null,"深度优先搜索",-1),OM=t("code",null,"广度优先搜索",-1),LM=t("code",null,"字符串",-1),qM=t("code",null,"1+",-1),NM={style:{"text-align":"left"}},CM=t("td",{style:{"text-align":"center"}},"1242",-1),PM={style:{"text-align":"left"}},TM={href:"https://leetcode.com/problems/web-crawler-multithreaded",target:"_blank",rel:"noopener noreferrer"},VM=t("td",{style:{"text-align":"center"}},null,-1),BM={style:{"text-align":"left"}},KM=t("code",null,"深度优先搜索",-1),UM=t("code",null,"广度优先搜索",-1),AM=t("code",null,"多线程",-1),WM={style:{"text-align":"left"}},DM=t("td",{style:{"text-align":"center"}},"1245",-1),YM={style:{"text-align":"left"}},FM={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},JM=t("td",{style:{"text-align":"center"}},null,-1),QM={style:{"text-align":"left"}},RM=t("code",null,"树",-1),SM=t("code",null,"深度优先搜索",-1),ZM=t("code",null,"广度优先搜索",-1),GM=t("code",null,"2+",-1),XM={style:{"text-align":"left"}},$M=t("td",{style:{"text-align":"center"}},"1254",-1),tI={style:{"text-align":"left"}},eI={href:"https://leetcode.com/problems/number-of-closed-islands",target:"_blank",rel:"noopener noreferrer"},lI=t("td",{style:{"text-align":"center"}},null,-1),oI={style:{"text-align":"left"}},nI=t("code",null,"深度优先搜索",-1),sI=t("code",null,"广度优先搜索",-1),dI=t("code",null,"并查集",-1),_I=t("code",null,"2+",-1),cI={style:{"text-align":"left"}},iI=t("td",{style:{"text-align":"center"}},"1257",-1),rI={style:{"text-align":"left"}},aI={href:"https://leetcode.com/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},hI=t("td",{style:{"text-align":"center"}},null,-1),uI={style:{"text-align":"left"}},fI=t("code",null,"树",-1),gI=t("code",null,"深度优先搜索",-1),mI=t("code",null,"广度优先搜索",-1),yI=t("code",null,"3+",-1),xI={style:{"text-align":"left"}},pI=t("td",{style:{"text-align":"center"}},"1261",-1),bI={style:{"text-align":"left"}},kI={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},MI=t("td",{style:{"text-align":"center"}},null,-1),II={style:{"text-align":"left"}},vI=t("code",null,"树",-1),wI=t("code",null,"深度优先搜索",-1),jI=t("code",null,"广度优先搜索",-1),HI=t("code",null,"3+",-1),EI={style:{"text-align":"left"}},zI=t("td",{style:{"text-align":"center"}},"1267",-1),OI={style:{"text-align":"left"}},LI={href:"https://leetcode.com/problems/count-servers-that-communicate",target:"_blank",rel:"noopener noreferrer"},qI=t("td",{style:{"text-align":"center"}},null,-1),NI={style:{"text-align":"left"}},CI=t("code",null,"深度优先搜索",-1),PI=t("code",null,"广度优先搜索",-1),TI=t("code",null,"并查集",-1),VI=t("code",null,"3+",-1),BI={style:{"text-align":"left"}},KI=t("td",{style:{"text-align":"center"}},"1273",-1),UI={style:{"text-align":"left"}},AI={href:"https://leetcode.com/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},WI=t("td",{style:{"text-align":"center"}},null,-1),DI={style:{"text-align":"left"}},YI=t("code",null,"树",-1),FI=t("code",null,"深度优先搜索",-1),JI=t("code",null,"广度优先搜索",-1),QI=t("code",null,"1+",-1),RI={style:{"text-align":"left"}},SI=t("td",{style:{"text-align":"center"}},"1302",-1),ZI={style:{"text-align":"left"}},GI={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},XI=t("td",{style:{"text-align":"center"}},null,-1),$I={style:{"text-align":"left"}},tv=t("code",null,"树",-1),ev=t("code",null,"深度优先搜索",-1),lv=t("code",null,"广度优先搜索",-1),ov=t("code",null,"1+",-1),nv={style:{"text-align":"left"}},sv=t("td",{style:{"text-align":"center"}},"1305",-1),dv={style:{"text-align":"left"}},_v={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},cv=t("td",{style:{"text-align":"center"}},null,-1),iv={style:{"text-align":"left"}},rv=t("code",null,"树",-1),av=t("code",null,"深度优先搜索",-1),hv=t("code",null,"二叉搜索树",-1),uv=t("code",null,"2+",-1),fv={style:{"text-align":"left"}},gv=t("td",{style:{"text-align":"center"}},"1306",-1),mv={style:{"text-align":"left"}},yv={href:"https://leetcode.com/problems/jump-game-iii",target:"_blank",rel:"noopener noreferrer"},xv=t("td",{style:{"text-align":"center"}},null,-1),pv={style:{"text-align":"left"}},bv=t("code",null,"深度优先搜索",-1),kv=t("code",null,"广度优先搜索",-1),Mv=t("code",null,"数组",-1),Iv={style:{"text-align":"left"}},vv=t("td",{style:{"text-align":"center"}},"1315",-1),wv={style:{"text-align":"left"}},jv={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},Hv=t("td",{style:{"text-align":"center"}},null,-1),Ev={style:{"text-align":"left"}},zv=t("code",null,"树",-1),Ov=t("code",null,"深度优先搜索",-1),Lv=t("code",null,"广度优先搜索",-1),qv=t("code",null,"1+",-1),Nv={style:{"text-align":"left"}},Cv=t("td",{style:{"text-align":"center"}},"1319",-1),Pv={style:{"text-align":"left"}},Tv={href:"https://leetcode.com/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},Vv=t("td",{style:{"text-align":"center"}},null,-1),Bv={style:{"text-align":"left"}},Kv=t("code",null,"深度优先搜索",-1),Uv=t("code",null,"广度优先搜索",-1),Av=t("code",null,"并查集",-1),Wv=t("code",null,"1+",-1),Dv={style:{"text-align":"left"}},Yv=t("td",{style:{"text-align":"center"}},"1325",-1),Fv={style:{"text-align":"left"}},Jv={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},Qv=t("td",{style:{"text-align":"center"}},null,-1),Rv={style:{"text-align":"left"}},Sv=t("code",null,"树",-1),Zv=t("code",null,"深度优先搜索",-1),Gv=t("code",null,"二叉树",-1),Xv={style:{"text-align":"left"}},$v=t("td",{style:{"text-align":"center"}},"1339",-1),tw={style:{"text-align":"left"}},ew={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},lw=t("td",{style:{"text-align":"center"}},null,-1),ow={style:{"text-align":"left"}},nw=t("code",null,"树",-1),sw=t("code",null,"深度优先搜索",-1),dw=t("code",null,"二叉树",-1),_w={style:{"text-align":"left"}},cw=t("td",{style:{"text-align":"center"}},"1361",-1),iw={style:{"text-align":"left"}},rw={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},aw=t("td",{style:{"text-align":"center"}},null,-1),hw={style:{"text-align":"left"}},uw=t("code",null,"树",-1),fw=t("code",null,"深度优先搜索",-1),gw=t("code",null,"广度优先搜索",-1),mw=t("code",null,"3+",-1),yw={style:{"text-align":"left"}},xw=t("td",{style:{"text-align":"center"}},"1367",-1),pw={style:{"text-align":"left"}},bw={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},kw=t("td",{style:{"text-align":"center"}},null,-1),Mw={style:{"text-align":"left"}},Iw=t("code",null,"树",-1),vw=t("code",null,"深度优先搜索",-1),ww=t("code",null,"链表",-1),jw=t("code",null,"1+",-1),Hw={style:{"text-align":"left"}},Ew=t("td",{style:{"text-align":"center"}},"1372",-1),zw={style:{"text-align":"left"}},Ow={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Lw=t("td",{style:{"text-align":"center"}},null,-1),qw={style:{"text-align":"left"}},Nw=t("code",null,"树",-1),Cw=t("code",null,"深度优先搜索",-1),Pw=t("code",null,"动态规划",-1),Tw=t("code",null,"1+",-1),Vw={style:{"text-align":"left"}},Bw=t("td",{style:{"text-align":"center"}},"1373",-1),Kw={style:{"text-align":"left"}},Uw={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Aw=t("td",{style:{"text-align":"center"}},null,-1),Ww={style:{"text-align":"left"}},Dw=t("code",null,"树",-1),Yw=t("code",null,"深度优先搜索",-1),Fw=t("code",null,"二叉搜索树",-1),Jw=t("code",null,"2+",-1),Qw={style:{"text-align":"left"}},Rw=t("td",{style:{"text-align":"center"}},"1376",-1),Sw={style:{"text-align":"left"}},Zw={href:"https://leetcode.com/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},Gw=t("td",{style:{"text-align":"center"}},null,-1),Xw={style:{"text-align":"left"}},$w=t("code",null,"树",-1),tj=t("code",null,"深度优先搜索",-1),ej=t("code",null,"广度优先搜索",-1),lj={style:{"text-align":"left"}},oj=t("td",{style:{"text-align":"center"}},"1377",-1),nj={style:{"text-align":"left"}},sj={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},dj=t("td",{style:{"text-align":"center"}},null,-1),_j={style:{"text-align":"left"}},cj=t("code",null,"树",-1),ij=t("code",null,"深度优先搜索",-1),rj=t("code",null,"广度优先搜索",-1),aj=t("code",null,"1+",-1),hj={style:{"text-align":"left"}},uj=t("td",{style:{"text-align":"center"}},"1379",-1),fj={style:{"text-align":"left"}},gj={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},mj=t("td",{style:{"text-align":"center"}},null,-1),yj={style:{"text-align":"left"}},xj=t("code",null,"树",-1),pj=t("code",null,"深度优先搜索",-1),bj=t("code",null,"广度优先搜索",-1),kj=t("code",null,"1+",-1),Mj={style:{"text-align":"left"}},Ij=t("td",{style:{"text-align":"center"}},"1382",-1),vj={style:{"text-align":"left"}},wj={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},jj=t("td",{style:{"text-align":"center"}},null,-1),Hj={style:{"text-align":"left"}},Ej=t("code",null,"贪心",-1),zj=t("code",null,"树",-1),Oj=t("code",null,"深度优先搜索",-1),Lj=t("code",null,"3+",-1),qj={style:{"text-align":"left"}},Nj=t("td",{style:{"text-align":"center"}},"1391",-1),Cj={style:{"text-align":"left"}},Pj={href:"https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Tj=t("td",{style:{"text-align":"center"}},null,-1),Vj={style:{"text-align":"left"}},Bj=t("code",null,"深度优先搜索",-1),Kj=t("code",null,"广度优先搜索",-1),Uj=t("code",null,"并查集",-1),Aj=t("code",null,"2+",-1),Wj={style:{"text-align":"left"}},Dj=t("td",{style:{"text-align":"center"}},"1430",-1),Yj={style:{"text-align":"left"}},Fj={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Jj=t("td",{style:{"text-align":"center"}},null,-1),Qj={style:{"text-align":"left"}},Rj=t("code",null,"树",-1),Sj=t("code",null,"深度优先搜索",-1),Zj=t("code",null,"广度优先搜索",-1),Gj=t("code",null,"1+",-1),Xj={style:{"text-align":"left"}},$j=t("td",{style:{"text-align":"center"}},"1443",-1),tH={style:{"text-align":"left"}},eH={href:"https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},lH=t("td",{style:{"text-align":"center"}},null,-1),oH={style:{"text-align":"left"}},nH=t("code",null,"树",-1),sH=t("code",null,"深度优先搜索",-1),dH=t("code",null,"广度优先搜索",-1),_H=t("code",null,"1+",-1),cH={style:{"text-align":"left"}},iH=t("td",{style:{"text-align":"center"}},"1448",-1),rH={style:{"text-align":"left"}},aH={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},hH=t("td",{style:{"text-align":"center"}},null,-1),uH={style:{"text-align":"left"}},fH=t("code",null,"树",-1),gH=t("code",null,"深度优先搜索",-1),mH=t("code",null,"广度优先搜索",-1),yH=t("code",null,"1+",-1),xH={style:{"text-align":"left"}},pH=t("td",{style:{"text-align":"center"}},"1457",-1),bH={style:{"text-align":"left"}},kH={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},MH=t("td",{style:{"text-align":"center"}},null,-1),IH={style:{"text-align":"left"}},vH=t("code",null,"位运算",-1),wH=t("code",null,"树",-1),jH=t("code",null,"深度优先搜索",-1),HH=t("code",null,"2+",-1),EH={style:{"text-align":"left"}},zH=t("td",{style:{"text-align":"center"}},"1462",-1),OH={style:{"text-align":"left"}},LH={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},qH=t("td",{style:{"text-align":"center"}},null,-1),NH={style:{"text-align":"left"}},CH=t("code",null,"深度优先搜索",-1),PH=t("code",null,"广度优先搜索",-1),TH=t("code",null,"图",-1),VH=t("code",null,"1+",-1),BH={style:{"text-align":"left"}},KH=t("td",{style:{"text-align":"center"}},"1466",-1),UH={style:{"text-align":"left"}},AH={href:"https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero",target:"_blank",rel:"noopener noreferrer"},WH=t("td",{style:{"text-align":"center"}},null,-1),DH={style:{"text-align":"left"}},YH=t("code",null,"深度优先搜索",-1),FH=t("code",null,"广度优先搜索",-1),JH=t("code",null,"图",-1),QH={style:{"text-align":"left"}},RH=t("td",{style:{"text-align":"center"}},"1469",-1),SH={style:{"text-align":"left"}},ZH={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},GH=t("td",{style:{"text-align":"center"}},null,-1),XH={style:{"text-align":"left"}},$H=t("code",null,"树",-1),tE=t("code",null,"深度优先搜索",-1),eE=t("code",null,"广度优先搜索",-1),lE=t("code",null,"1+",-1),oE={style:{"text-align":"left"}},nE=t("td",{style:{"text-align":"center"}},"1483",-1),sE={style:{"text-align":"left"}},dE={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},_E=t("td",{style:{"text-align":"center"}},null,-1),cE={style:{"text-align":"left"}},iE=t("code",null,"树",-1),rE=t("code",null,"深度优先搜索",-1),aE=t("code",null,"广度优先搜索",-1),hE=t("code",null,"3+",-1),uE={style:{"text-align":"left"}},fE=t("td",{style:{"text-align":"center"}},"1485",-1),gE={style:{"text-align":"left"}},mE={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},yE=t("td",{style:{"text-align":"center"}},null,-1),xE={style:{"text-align":"left"}},pE=t("code",null,"树",-1),bE=t("code",null,"深度优先搜索",-1),kE=t("code",null,"广度优先搜索",-1),ME=t("code",null,"2+",-1),IE={style:{"text-align":"left"}},vE=t("td",{style:{"text-align":"center"}},"1490",-1),wE={style:{"text-align":"left"}},jE={href:"https://leetcode.com/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},HE=t("td",{style:{"text-align":"center"}},null,-1),EE={style:{"text-align":"left"}},zE=t("code",null,"树",-1),OE=t("code",null,"深度优先搜索",-1),LE=t("code",null,"广度优先搜索",-1),qE=t("code",null,"1+",-1),NE={style:{"text-align":"left"}},CE=t("td",{style:{"text-align":"center"}},"1506",-1),PE={style:{"text-align":"left"}},TE={href:"https://leetcode.com/problems/find-root-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},VE=t("td",{style:{"text-align":"center"}},null,-1),BE={style:{"text-align":"left"}},KE=t("code",null,"位运算",-1),UE=t("code",null,"树",-1),AE=t("code",null,"深度优先搜索",-1),WE=t("code",null,"1+",-1),DE={style:{"text-align":"left"}},YE=t("td",{style:{"text-align":"center"}},"1516",-1),FE={style:{"text-align":"left"}},JE={href:"https://leetcode.com/problems/move-sub-tree-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},QE=t("td",{style:{"text-align":"center"}},null,-1),RE={style:{"text-align":"left"}},SE=t("code",null,"树",-1),ZE=t("code",null,"深度优先搜索",-1),GE={style:{"text-align":"left"}},XE=t("td",{style:{"text-align":"center"}},"1519",-1),$E={style:{"text-align":"left"}},tz={href:"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},ez=t("td",{style:{"text-align":"center"}},null,-1),lz={style:{"text-align":"left"}},oz=t("code",null,"树",-1),nz=t("code",null,"深度优先搜索",-1),sz=t("code",null,"广度优先搜索",-1),dz=t("code",null,"2+",-1),_z={style:{"text-align":"left"}},cz=t("td",{style:{"text-align":"center"}},"1522",-1),iz={style:{"text-align":"left"}},rz={href:"https://leetcode.com/problems/diameter-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},az={style:{"text-align":"center"}},hz={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1522",target:"_blank",rel:"noopener noreferrer"},uz={style:{"text-align":"left"}},fz=t("code",null,"树",-1),gz=t("code",null,"深度优先搜索",-1),mz={style:{"text-align":"left"}},yz=t("td",{style:{"text-align":"center"}},"1530",-1),xz={style:{"text-align":"left"}},pz={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},bz=t("td",{style:{"text-align":"center"}},null,-1),kz={style:{"text-align":"left"}},Mz=t("code",null,"树",-1),Iz=t("code",null,"深度优先搜索",-1),vz=t("code",null,"二叉树",-1),wz={style:{"text-align":"left"}},jz=t("td",{style:{"text-align":"center"}},"1559",-1),Hz={style:{"text-align":"left"}},Ez={href:"https://leetcode.com/problems/detect-cycles-in-2d-grid",target:"_blank",rel:"noopener noreferrer"},zz=t("td",{style:{"text-align":"center"}},null,-1),Oz={style:{"text-align":"left"}},Lz=t("code",null,"深度优先搜索",-1),qz=t("code",null,"广度优先搜索",-1),Nz=t("code",null,"并查集",-1),Cz=t("code",null,"2+",-1),Pz={style:{"text-align":"left"}},Tz=t("td",{style:{"text-align":"center"}},"1568",-1),Vz={style:{"text-align":"left"}},Bz={href:"https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island",target:"_blank",rel:"noopener noreferrer"},Kz=t("td",{style:{"text-align":"center"}},null,-1),Uz={style:{"text-align":"left"}},Az=t("code",null,"深度优先搜索",-1),Wz=t("code",null,"广度优先搜索",-1),Dz=t("code",null,"数组",-1),Yz=t("code",null,"2+",-1),Fz={style:{"text-align":"left"}},Jz=t("td",{style:{"text-align":"center"}},"1600",-1),Qz={style:{"text-align":"left"}},Rz={href:"https://leetcode.com/problems/throne-inheritance",target:"_blank",rel:"noopener noreferrer"},Sz=t("td",{style:{"text-align":"center"}},null,-1),Zz={style:{"text-align":"left"}},Gz=t("code",null,"树",-1),Xz=t("code",null,"深度优先搜索",-1),$z=t("code",null,"设计",-1),tO=t("code",null,"1+",-1),eO={style:{"text-align":"left"}},lO=t("td",{style:{"text-align":"center"}},"1612",-1),oO={style:{"text-align":"left"}},nO={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},sO=t("td",{style:{"text-align":"center"}},null,-1),dO={style:{"text-align":"left"}},_O=t("code",null,"树",-1),cO=t("code",null,"深度优先搜索",-1),iO=t("code",null,"哈希表",-1),rO=t("code",null,"2+",-1),aO={style:{"text-align":"left"}},hO=t("td",{style:{"text-align":"center"}},"1625",-1),uO={style:{"text-align":"left"}},fO={href:"https://leetcode.com/problems/lexicographically-smallest-string-after-applying-operations",target:"_blank",rel:"noopener noreferrer"},gO=t("td",{style:{"text-align":"center"}},null,-1),mO={style:{"text-align":"left"}},yO=t("code",null,"深度优先搜索",-1),xO=t("code",null,"广度优先搜索",-1),pO=t("code",null,"字符串",-1),bO=t("code",null,"1+",-1),kO={style:{"text-align":"left"}},MO=t("td",{style:{"text-align":"center"}},"1631",-1),IO={style:{"text-align":"left"}},vO={href:"https://leetcode.com/problems/path-with-minimum-effort",target:"_blank",rel:"noopener noreferrer"},wO=t("td",{style:{"text-align":"center"}},null,-1),jO={style:{"text-align":"left"}},HO=t("code",null,"深度优先搜索",-1),EO=t("code",null,"广度优先搜索",-1),zO=t("code",null,"并查集",-1),OO=t("code",null,"4+",-1),LO={style:{"text-align":"left"}},qO=t("td",{style:{"text-align":"center"}},"1644",-1),NO={style:{"text-align":"left"}},CO={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},PO=t("td",{style:{"text-align":"center"}},null,-1),TO={style:{"text-align":"left"}},VO=t("code",null,"树",-1),BO=t("code",null,"深度优先搜索",-1),KO=t("code",null,"二叉树",-1),UO={style:{"text-align":"left"}},AO=t("td",{style:{"text-align":"center"}},"1660",-1),WO={style:{"text-align":"left"}},DO={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},YO=t("td",{style:{"text-align":"center"}},null,-1),FO={style:{"text-align":"left"}},JO=t("code",null,"树",-1),QO=t("code",null,"深度优先搜索",-1),RO=t("code",null,"广度优先搜索",-1),SO=t("code",null,"2+",-1),ZO={style:{"text-align":"left"}},GO=t("td",{style:{"text-align":"center"}},"1666",-1),XO={style:{"text-align":"left"}},$O={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},tL=t("td",{style:{"text-align":"center"}},null,-1),eL={style:{"text-align":"left"}},lL=t("code",null,"树",-1),oL=t("code",null,"深度优先搜索",-1),nL=t("code",null,"二叉树",-1),sL={style:{"text-align":"left"}},dL=t("td",{style:{"text-align":"center"}},"1676",-1),_L={style:{"text-align":"left"}},cL={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},iL=t("td",{style:{"text-align":"center"}},null,-1),rL={style:{"text-align":"left"}},aL=t("code",null,"树",-1),hL=t("code",null,"深度优先搜索",-1),uL=t("code",null,"哈希表",-1),fL=t("code",null,"1+",-1),gL={style:{"text-align":"left"}},mL=t("td",{style:{"text-align":"center"}},"1722",-1),yL={style:{"text-align":"left"}},xL={href:"https://leetcode.com/problems/minimize-hamming-distance-after-swap-operations",target:"_blank",rel:"noopener noreferrer"},pL=t("td",{style:{"text-align":"center"}},null,-1),bL={style:{"text-align":"left"}},kL=t("code",null,"深度优先搜索",-1),ML=t("code",null,"并查集",-1),IL=t("code",null,"数组",-1),vL={style:{"text-align":"left"}},wL=t("td",{style:{"text-align":"center"}},"1740",-1),jL={style:{"text-align":"left"}},HL={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},EL=t("td",{style:{"text-align":"center"}},null,-1),zL={style:{"text-align":"left"}},OL=t("code",null,"树",-1),LL=t("code",null,"深度优先搜索",-1),qL=t("code",null,"广度优先搜索",-1),NL=t("code",null,"2+",-1),CL={style:{"text-align":"left"}},PL=t("td",{style:{"text-align":"center"}},"1743",-1),TL={style:{"text-align":"left"}},VL={href:"https://leetcode.com/problems/restore-the-array-from-adjacent-pairs",target:"_blank",rel:"noopener noreferrer"},BL=t("td",{style:{"text-align":"center"}},null,-1),KL={style:{"text-align":"left"}},UL=t("code",null,"深度优先搜索",-1),AL=t("code",null,"数组",-1),WL=t("code",null,"哈希表",-1),DL={style:{"text-align":"left"}},YL=t("td",{style:{"text-align":"center"}},"1766",-1),FL={style:{"text-align":"left"}},JL={href:"https://leetcode.com/problems/tree-of-coprimes",target:"_blank",rel:"noopener noreferrer"},QL=t("td",{style:{"text-align":"center"}},null,-1),RL={style:{"text-align":"left"}},SL=t("code",null,"树",-1),ZL=t("code",null,"深度优先搜索",-1),GL=t("code",null,"数组",-1),XL=t("code",null,"2+",-1),$L={style:{"text-align":"left"}},tq=t("td",{style:{"text-align":"center"}},"1778",-1),eq={style:{"text-align":"left"}},lq={href:"https://leetcode.com/problems/shortest-path-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},oq=t("td",{style:{"text-align":"center"}},null,-1),nq={style:{"text-align":"left"}},sq=t("code",null,"深度优先搜索",-1),dq=t("code",null,"广度优先搜索",-1),_q=t("code",null,"图",-1),cq=t("code",null,"1+",-1),iq={style:{"text-align":"left"}},rq=t("td",{style:{"text-align":"center"}},"1810",-1),aq={style:{"text-align":"left"}},hq={href:"https://leetcode.com/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},uq=t("td",{style:{"text-align":"center"}},null,-1),fq={style:{"text-align":"left"}},gq=t("code",null,"深度优先搜索",-1),mq=t("code",null,"广度优先搜索",-1),yq=t("code",null,"图",-1),xq=t("code",null,"2+",-1),pq={style:{"text-align":"left"}},bq=t("td",{style:{"text-align":"center"}},"1820",-1),kq={style:{"text-align":"left"}},Mq={href:"https://leetcode.com/problems/maximum-number-of-accepted-invitations",target:"_blank",rel:"noopener noreferrer"},Iq=t("td",{style:{"text-align":"center"}},null,-1),vq={style:{"text-align":"left"}},wq=t("code",null,"深度优先搜索",-1),jq=t("code",null,"图",-1),Hq=t("code",null,"数组",-1),Eq=t("code",null,"1+",-1),zq={style:{"text-align":"left"}},Oq=t("td",{style:{"text-align":"center"}},"1858",-1),Lq={style:{"text-align":"left"}},qq={href:"https://leetcode.com/problems/longest-word-with-all-prefixes",target:"_blank",rel:"noopener noreferrer"},Nq=t("td",{style:{"text-align":"center"}},null,-1),Cq={style:{"text-align":"left"}},Pq=t("code",null,"深度优先搜索",-1),Tq=t("code",null,"字典树",-1),Vq={style:{"text-align":"left"}},Bq=t("td",{style:{"text-align":"center"}},"1905",-1),Kq={style:{"text-align":"left"}},Uq={href:"https://leetcode.com/problems/count-sub-islands",target:"_blank",rel:"noopener noreferrer"},Aq=t("td",{style:{"text-align":"center"}},null,-1),Wq={style:{"text-align":"left"}},Dq=t("code",null,"深度优先搜索",-1),Yq=t("code",null,"广度优先搜索",-1),Fq=t("code",null,"并查集",-1),Jq=t("code",null,"2+",-1),Qq={style:{"text-align":"left"}},Rq=t("td",{style:{"text-align":"center"}},"1932",-1),Sq={style:{"text-align":"left"}},Zq={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},Gq=t("td",{style:{"text-align":"center"}},null,-1),Xq={style:{"text-align":"left"}},$q=t("code",null,"树",-1),tN=t("code",null,"深度优先搜索",-1),eN=t("code",null,"哈希表",-1),lN=t("code",null,"2+",-1),oN={style:{"text-align":"left"}},nN=t("td",{style:{"text-align":"center"}},"1938",-1),sN={style:{"text-align":"left"}},dN={href:"https://leetcode.com/problems/maximum-genetic-difference-query",target:"_blank",rel:"noopener noreferrer"},_N=t("td",{style:{"text-align":"center"}},null,-1),cN={style:{"text-align":"left"}},iN=t("code",null,"位运算",-1),rN=t("code",null,"深度优先搜索",-1),aN=t("code",null,"字典树",-1),hN=t("code",null,"2+",-1),uN={style:{"text-align":"left"}},fN=t("td",{style:{"text-align":"center"}},"1970",-1),gN={style:{"text-align":"left"}},mN={href:"https://leetcode.com/problems/last-day-where-you-can-still-cross",target:"_blank",rel:"noopener noreferrer"},yN=t("td",{style:{"text-align":"center"}},null,-1),xN={style:{"text-align":"left"}},pN=t("code",null,"深度优先搜索",-1),bN=t("code",null,"广度优先搜索",-1),kN=t("code",null,"并查集",-1),MN=t("code",null,"3+",-1),IN={style:{"text-align":"left"}},vN=t("td",{style:{"text-align":"center"}},"1971",-1),wN={style:{"text-align":"left"}},jN={href:"https://leetcode.com/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},HN=t("td",{style:{"text-align":"center"}},null,-1),EN={style:{"text-align":"left"}},zN=t("code",null,"深度优先搜索",-1),ON=t("code",null,"广度优先搜索",-1),LN=t("code",null,"并查集",-1),qN=t("code",null,"1+",-1),NN={style:{"text-align":"left"}},CN=t("td",{style:{"text-align":"center"}},"1973",-1),PN={style:{"text-align":"left"}},TN={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},VN=t("td",{style:{"text-align":"center"}},null,-1),BN={style:{"text-align":"left"}},KN=t("code",null,"树",-1),UN=t("code",null,"深度优先搜索",-1),AN=t("code",null,"二叉树",-1),WN={style:{"text-align":"left"}},DN=t("td",{style:{"text-align":"center"}},"1992",-1),YN={style:{"text-align":"left"}},FN={href:"https://leetcode.com/problems/find-all-groups-of-farmland",target:"_blank",rel:"noopener noreferrer"},JN=t("td",{style:{"text-align":"center"}},null,-1),QN={style:{"text-align":"left"}},RN=t("code",null,"深度优先搜索",-1),SN=t("code",null,"广度优先搜索",-1),ZN=t("code",null,"数组",-1),GN=t("code",null,"1+",-1),XN={style:{"text-align":"left"}},$N=t("td",{style:{"text-align":"center"}},"1993",-1),tC={style:{"text-align":"left"}},eC={href:"https://leetcode.com/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},lC=t("td",{style:{"text-align":"center"}},null,-1),oC={style:{"text-align":"left"}},nC=t("code",null,"树",-1),sC=t("code",null,"深度优先搜索",-1),dC=t("code",null,"广度优先搜索",-1),_C=t("code",null,"3+",-1),cC={style:{"text-align":"left"}},iC=t("td",{style:{"text-align":"center"}},"2003",-1),rC={style:{"text-align":"left"}},aC={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},hC=t("td",{style:{"text-align":"center"}},null,-1),uC={style:{"text-align":"left"}},fC=t("code",null,"树",-1),gC=t("code",null,"深度优先搜索",-1),mC=t("code",null,"并查集",-1),yC=t("code",null,"1+",-1),xC={style:{"text-align":"left"}},pC=t("td",{style:{"text-align":"center"}},"2049",-1),bC={style:{"text-align":"left"}},kC={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},MC=t("td",{style:{"text-align":"center"}},null,-1),IC={style:{"text-align":"left"}},vC=t("code",null,"树",-1),wC=t("code",null,"深度优先搜索",-1),jC=t("code",null,"数组",-1),HC=t("code",null,"1+",-1),EC={style:{"text-align":"left"}},zC=t("td",{style:{"text-align":"center"}},"2092",-1),OC={style:{"text-align":"left"}},LC={href:"https://leetcode.com/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},qC=t("td",{style:{"text-align":"center"}},null,-1),NC={style:{"text-align":"left"}},CC=t("code",null,"深度优先搜索",-1),PC=t("code",null,"广度优先搜索",-1),TC=t("code",null,"并查集",-1),VC=t("code",null,"2+",-1),BC={style:{"text-align":"left"}},KC=t("td",{style:{"text-align":"center"}},"2096",-1),UC={style:{"text-align":"left"}},AC={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},WC=t("td",{style:{"text-align":"center"}},null,-1),DC={style:{"text-align":"left"}},YC=t("code",null,"树",-1),FC=t("code",null,"深度优先搜索",-1),JC=t("code",null,"字符串",-1),QC=t("code",null,"1+",-1),RC={style:{"text-align":"left"}},SC=t("td",{style:{"text-align":"center"}},"2097",-1),ZC={style:{"text-align":"left"}},GC={href:"https://leetcode.com/problems/valid-arrangement-of-pairs",target:"_blank",rel:"noopener noreferrer"},XC=t("td",{style:{"text-align":"center"}},null,-1),$C={style:{"text-align":"left"}},tP=t("code",null,"深度优先搜索",-1),eP=t("code",null,"图",-1),lP=t("code",null,"欧拉回路",-1),oP={style:{"text-align":"left"}},nP=t("td",{style:{"text-align":"center"}},"2101",-1),sP={style:{"text-align":"left"}},dP={href:"https://leetcode.com/problems/detonate-the-maximum-bombs",target:"_blank",rel:"noopener noreferrer"},_P=t("td",{style:{"text-align":"center"}},null,-1),cP={style:{"text-align":"left"}},iP=t("code",null,"深度优先搜索",-1),rP=t("code",null,"广度优先搜索",-1),aP=t("code",null,"图",-1),hP=t("code",null,"3+",-1),uP={style:{"text-align":"left"}},fP=t("td",{style:{"text-align":"center"}},"2127",-1),gP={style:{"text-align":"left"}},mP={href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},yP=t("td",{style:{"text-align":"center"}},null,-1),xP={style:{"text-align":"left"}},pP=t("code",null,"深度优先搜索",-1),bP=t("code",null,"图",-1),kP=t("code",null,"拓扑排序",-1),MP={style:{"text-align":"left"}},IP=t("td",{style:{"text-align":"center"}},"2192",-1),vP={style:{"text-align":"left"}},wP={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},jP=t("td",{style:{"text-align":"center"}},null,-1),HP={style:{"text-align":"left"}},EP=t("code",null,"深度优先搜索",-1),zP=t("code",null,"广度优先搜索",-1),OP=t("code",null,"图",-1),LP=t("code",null,"1+",-1),qP={style:{"text-align":"left"}},NP=t("td",{style:{"text-align":"center"}},"2204",-1),CP={style:{"text-align":"left"}},PP={href:"https://leetcode.com/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},TP=t("td",{style:{"text-align":"center"}},null,-1),VP={style:{"text-align":"left"}},BP=t("code",null,"深度优先搜索",-1),KP=t("code",null,"广度优先搜索",-1),UP=t("code",null,"并查集",-1),AP=t("code",null,"1+",-1),WP={style:{"text-align":"left"}},DP=t("td",{style:{"text-align":"center"}},"2246",-1),YP={style:{"text-align":"left"}},FP={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},JP=t("td",{style:{"text-align":"center"}},null,-1),QP={style:{"text-align":"left"}},RP=t("code",null,"树",-1),SP=t("code",null,"深度优先搜索",-1),ZP=t("code",null,"图",-1),GP=t("code",null,"3+",-1),XP={style:{"text-align":"left"}},$P=t("td",{style:{"text-align":"center"}},"2265",-1),tT={style:{"text-align":"left"}},eT={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},lT=t("td",{style:{"text-align":"center"}},null,-1),oT={style:{"text-align":"left"}},nT=t("code",null,"树",-1),sT=t("code",null,"深度优先搜索",-1),dT=t("code",null,"二叉树",-1),_T={style:{"text-align":"left"}},cT=t("td",{style:{"text-align":"center"}},"2277",-1),iT={style:{"text-align":"left"}},rT={href:"https://leetcode.com/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},aT=t("td",{style:{"text-align":"center"}},null,-1),hT={style:{"text-align":"left"}},uT=t("code",null,"树",-1),fT=t("code",null,"深度优先搜索",-1),gT=t("code",null,"广度优先搜索",-1),mT=t("code",null,"1+",-1),yT={style:{"text-align":"left"}},xT=t("td",{style:{"text-align":"center"}},"2307",-1),pT={style:{"text-align":"left"}},bT={href:"https://leetcode.com/problems/check-for-contradictions-in-equations",target:"_blank",rel:"noopener noreferrer"},kT=t("td",{style:{"text-align":"center"}},null,-1),MT={style:{"text-align":"left"}},IT=t("code",null,"深度优先搜索",-1),vT=t("code",null,"并查集",-1),wT=t("code",null,"图",-1),jT=t("code",null,"1+",-1),HT={style:{"text-align":"left"}},ET=t("td",{style:{"text-align":"center"}},"2313",-1),zT={style:{"text-align":"left"}},OT={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},LT=t("td",{style:{"text-align":"center"}},null,-1),qT={style:{"text-align":"left"}},NT=t("code",null,"树",-1),CT=t("code",null,"深度优先搜索",-1),PT=t("code",null,"动态规划",-1),TT=t("code",null,"1+",-1),VT={style:{"text-align":"left"}},BT=t("td",{style:{"text-align":"center"}},"2316",-1),KT={style:{"text-align":"left"}},UT={href:"https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},AT=t("td",{style:{"text-align":"center"}},null,-1),WT={style:{"text-align":"left"}},DT=t("code",null,"深度优先搜索",-1),YT=t("code",null,"广度优先搜索",-1),FT=t("code",null,"并查集",-1),JT=t("code",null,"1+",-1),QT={style:{"text-align":"left"}},RT=t("td",{style:{"text-align":"center"}},"2322",-1),ST={style:{"text-align":"left"}},ZT={href:"https://leetcode.com/problems/minimum-score-after-removals-on-a-tree",target:"_blank",rel:"noopener noreferrer"},GT=t("td",{style:{"text-align":"center"}},null,-1),XT={style:{"text-align":"left"}},$T=t("code",null,"位运算",-1),tV=t("code",null,"树",-1),eV=t("code",null,"深度优先搜索",-1),lV=t("code",null,"1+",-1),oV={style:{"text-align":"left"}},nV=t("td",{style:{"text-align":"center"}},"2328",-1),sV={style:{"text-align":"left"}},dV={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},_V=t("td",{style:{"text-align":"center"}},null,-1),cV={style:{"text-align":"left"}},iV=t("code",null,"深度优先搜索",-1),rV=t("code",null,"广度优先搜索",-1),aV=t("code",null,"图",-1),hV=t("code",null,"5+",-1),uV={style:{"text-align":"left"}},fV=t("td",{style:{"text-align":"center"}},"2331",-1),gV={style:{"text-align":"left"}},mV={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},yV=t("td",{style:{"text-align":"center"}},null,-1),xV={style:{"text-align":"left"}},pV=t("code",null,"树",-1),bV=t("code",null,"深度优先搜索",-1),kV=t("code",null,"二叉树",-1),MV={style:{"text-align":"left"}},IV=t("td",{style:{"text-align":"center"}},"2359",-1),vV={style:{"text-align":"left"}},wV={href:"https://leetcode.com/problems/find-closest-node-to-given-two-nodes",target:"_blank",rel:"noopener noreferrer"},jV=t("td",{style:{"text-align":"center"}},null,-1),HV={style:{"text-align":"left"}},EV=t("code",null,"深度优先搜索",-1),zV=t("code",null,"图",-1),OV={style:{"text-align":"left"}},LV=t("td",{style:{"text-align":"center"}},"2360",-1),qV={style:{"text-align":"left"}},NV={href:"https://leetcode.com/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},CV=t("td",{style:{"text-align":"center"}},null,-1),PV={style:{"text-align":"left"}},TV=t("code",null,"深度优先搜索",-1),VV=t("code",null,"图",-1),BV=t("code",null,"拓扑排序",-1),KV={style:{"text-align":"left"}},UV=t("td",{style:{"text-align":"center"}},"2368",-1),AV={style:{"text-align":"left"}},WV={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},DV=t("td",{style:{"text-align":"center"}},null,-1),YV={style:{"text-align":"left"}},FV=t("code",null,"树",-1),JV=t("code",null,"深度优先搜索",-1),QV=t("code",null,"广度优先搜索",-1),RV=t("code",null,"4+",-1),SV={style:{"text-align":"left"}},ZV=t("td",{style:{"text-align":"center"}},"2378",-1),GV={style:{"text-align":"left"}},XV={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},$V=t("td",{style:{"text-align":"center"}},null,-1),tB={style:{"text-align":"left"}},eB=t("code",null,"树",-1),lB=t("code",null,"深度优先搜索",-1),oB=t("code",null,"动态规划",-1),nB={style:{"text-align":"left"}},sB=t("td",{style:{"text-align":"center"}},"2385",-1),dB={style:{"text-align":"left"}},_B={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},cB=t("td",{style:{"text-align":"center"}},null,-1),iB={style:{"text-align":"left"}},rB=t("code",null,"树",-1),aB=t("code",null,"深度优先搜索",-1),hB=t("code",null,"广度优先搜索",-1),uB=t("code",null,"2+",-1),fB={style:{"text-align":"left"}},gB=t("td",{style:{"text-align":"center"}},"2415",-1),mB={style:{"text-align":"left"}},yB={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},xB=t("td",{style:{"text-align":"center"}},null,-1),pB={style:{"text-align":"left"}},bB=t("code",null,"树",-1),kB=t("code",null,"深度优先搜索",-1),MB=t("code",null,"广度优先搜索",-1),IB=t("code",null,"1+",-1),vB={style:{"text-align":"left"}},wB=t("td",{style:{"text-align":"center"}},"2440",-1),jB={style:{"text-align":"left"}},HB={href:"https://leetcode.com/problems/create-components-with-same-value",target:"_blank",rel:"noopener noreferrer"},EB=t("td",{style:{"text-align":"center"}},null,-1),zB={style:{"text-align":"left"}},OB=t("code",null,"树",-1),LB=t("code",null,"深度优先搜索",-1),qB=t("code",null,"数组",-1),NB=t("code",null,"2+",-1),CB={style:{"text-align":"left"}},PB=t("td",{style:{"text-align":"center"}},"2445",-1),TB={style:{"text-align":"left"}},VB={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},BB=t("td",{style:{"text-align":"center"}},null,-1),KB={style:{"text-align":"left"}},UB=t("code",null,"树",-1),AB=t("code",null,"深度优先搜索",-1),WB=t("code",null,"广度优先搜索",-1),DB=t("code",null,"1+",-1),YB={style:{"text-align":"left"}},FB=t("td",{style:{"text-align":"center"}},"2458",-1),JB={style:{"text-align":"left"}},QB={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},RB=t("td",{style:{"text-align":"center"}},null,-1),SB={style:{"text-align":"left"}},ZB=t("code",null,"树",-1),GB=t("code",null,"深度优先搜索",-1),XB=t("code",null,"广度优先搜索",-1),$B=t("code",null,"2+",-1),tK={style:{"text-align":"left"}},eK=t("td",{style:{"text-align":"center"}},"2467",-1),lK={style:{"text-align":"left"}},oK={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},nK=t("td",{style:{"text-align":"center"}},null,-1),sK={style:{"text-align":"left"}},dK=t("code",null,"树",-1),_K=t("code",null,"深度优先搜索",-1),cK=t("code",null,"广度优先搜索",-1),iK=t("code",null,"2+",-1),rK={style:{"text-align":"left"}},aK=t("td",{style:{"text-align":"center"}},"2476",-1),hK={style:{"text-align":"left"}},uK={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},fK=t("td",{style:{"text-align":"center"}},null,-1),gK={style:{"text-align":"left"}},mK=t("code",null,"树",-1),yK=t("code",null,"深度优先搜索",-1),xK=t("code",null,"二叉搜索树",-1),pK=t("code",null,"3+",-1),bK={style:{"text-align":"left"}},kK=t("td",{style:{"text-align":"center"}},"2477",-1),MK={style:{"text-align":"left"}},IK={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},vK=t("td",{style:{"text-align":"center"}},null,-1),wK={style:{"text-align":"left"}},jK=t("code",null,"树",-1),HK=t("code",null,"深度优先搜索",-1),EK=t("code",null,"广度优先搜索",-1),zK=t("code",null,"1+",-1),OK={style:{"text-align":"left"}},LK=t("td",{style:{"text-align":"center"}},"2479",-1),qK={style:{"text-align":"left"}},NK={href:"https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},CK=t("td",{style:{"text-align":"center"}},null,-1),PK={style:{"text-align":"left"}},TK=t("code",null,"树",-1),VK=t("code",null,"深度优先搜索",-1),BK=t("code",null,"图",-1),KK=t("code",null,"1+",-1),UK={style:{"text-align":"left"}},AK=t("td",{style:{"text-align":"center"}},"2492",-1),WK={style:{"text-align":"left"}},DK={href:"https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},YK=t("td",{style:{"text-align":"center"}},null,-1),FK={style:{"text-align":"left"}},JK=t("code",null,"深度优先搜索",-1),QK=t("code",null,"广度优先搜索",-1),RK=t("code",null,"并查集",-1),SK=t("code",null,"1+",-1),ZK={style:{"text-align":"left"}},GK=t("td",{style:{"text-align":"center"}},"2538",-1),XK={style:{"text-align":"left"}},$K={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},tU=t("td",{style:{"text-align":"center"}},null,-1),eU={style:{"text-align":"left"}},lU=t("code",null,"树",-1),oU=t("code",null,"深度优先搜索",-1),nU=t("code",null,"数组",-1),sU=t("code",null,"1+",-1),dU={style:{"text-align":"left"}},_U=t("td",{style:{"text-align":"center"}},"2556",-1),cU={style:{"text-align":"left"}},iU={href:"https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},rU=t("td",{style:{"text-align":"center"}},null,-1),aU={style:{"text-align":"left"}},hU=t("code",null,"深度优先搜索",-1),uU=t("code",null,"广度优先搜索",-1),fU=t("code",null,"数组",-1),gU=t("code",null,"2+",-1),mU={style:{"text-align":"left"}},yU=t("td",{style:{"text-align":"center"}},"2581",-1),xU={style:{"text-align":"left"}},pU={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},bU=t("td",{style:{"text-align":"center"}},null,-1),kU={style:{"text-align":"left"}},MU=t("code",null,"树",-1),IU=t("code",null,"深度优先搜索",-1),vU=t("code",null,"数组",-1),wU=t("code",null,"2+",-1),jU={style:{"text-align":"left"}},HU=t("td",{style:{"text-align":"center"}},"2596",-1),EU={style:{"text-align":"left"}},zU={href:"https://leetcode.com/problems/check-knight-tour-configuration",target:"_blank",rel:"noopener noreferrer"},OU=t("td",{style:{"text-align":"center"}},null,-1),LU={style:{"text-align":"left"}},qU=t("code",null,"深度优先搜索",-1),NU=t("code",null,"广度优先搜索",-1),CU=t("code",null,"数组",-1),PU=t("code",null,"2+",-1),TU={style:{"text-align":"left"}},VU=t("td",{style:{"text-align":"center"}},"2641",-1),BU={style:{"text-align":"left"}},KU={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},UU=t("td",{style:{"text-align":"center"}},null,-1),AU={style:{"text-align":"left"}},WU=t("code",null,"树",-1),DU=t("code",null,"深度优先搜索",-1),YU=t("code",null,"广度优先搜索",-1),FU=t("code",null,"2+",-1),JU={style:{"text-align":"left"}},QU=t("td",{style:{"text-align":"center"}},"2646",-1),RU={style:{"text-align":"left"}},SU={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},ZU=t("td",{style:{"text-align":"center"}},null,-1),GU={style:{"text-align":"left"}},XU=t("code",null,"树",-1),$U=t("code",null,"深度优先搜索",-1),tA=t("code",null,"图",-1),eA=t("code",null,"2+",-1),lA={style:{"text-align":"left"}},oA=t("td",{style:{"text-align":"center"}},"2658",-1),nA={style:{"text-align":"left"}},sA={href:"https://leetcode.com/problems/maximum-number-of-fish-in-a-grid",target:"_blank",rel:"noopener noreferrer"},dA=t("td",{style:{"text-align":"center"}},null,-1),_A={style:{"text-align":"left"}},cA=t("code",null,"深度优先搜索",-1),iA=t("code",null,"广度优先搜索",-1),rA=t("code",null,"并查集",-1),aA=t("code",null,"2+",-1),hA={style:{"text-align":"left"}},uA=t("td",{style:{"text-align":"center"}},"2685",-1),fA={style:{"text-align":"left"}},gA={href:"https://leetcode.com/problems/count-the-number-of-complete-components",target:"_blank",rel:"noopener noreferrer"},mA=t("td",{style:{"text-align":"center"}},null,-1),yA={style:{"text-align":"left"}},xA=t("code",null,"深度优先搜索",-1),pA=t("code",null,"广度优先搜索",-1),bA=t("code",null,"图",-1),kA={style:{"text-align":"left"}},MA=t("td",{style:{"text-align":"center"}},"2689",-1),IA={style:{"text-align":"left"}},vA={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},wA=t("td",{style:{"text-align":"center"}},null,-1),jA={style:{"text-align":"left"}},HA=t("code",null,"树",-1),EA=t("code",null,"深度优先搜索",-1),zA=t("code",null,"二叉树",-1),OA={style:{"text-align":"left"}},LA=t("td",{style:{"text-align":"center"}},"2764",-1),qA={style:{"text-align":"left"}},NA={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},CA=t("td",{style:{"text-align":"center"}},null,-1),PA={style:{"text-align":"left"}},TA=t("code",null,"栈",-1),VA=t("code",null,"树",-1),BA=t("code",null,"深度优先搜索",-1),KA=t("code",null,"1+",-1),UA={style:{"text-align":"left"}},AA=t("td",{style:{"text-align":"center"}},"2773",-1),WA={style:{"text-align":"left"}},DA={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},YA=t("td",{style:{"text-align":"center"}},null,-1),FA={style:{"text-align":"left"}},JA=t("code",null,"树",-1),QA=t("code",null,"深度优先搜索",-1),RA=t("code",null,"广度优先搜索",-1),SA=t("code",null,"1+",-1),ZA={style:{"text-align":"left"}},GA=t("td",{style:{"text-align":"center"}},"2791",-1),XA={style:{"text-align":"left"}},$A={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},tW=t("td",{style:{"text-align":"center"}},null,-1),eW={style:{"text-align":"left"}},lW=t("code",null,"位运算",-1),oW=t("code",null,"树",-1),nW=t("code",null,"深度优先搜索",-1),sW=t("code",null,"2+",-1),dW={style:{"text-align":"left"}},_W=t("td",{style:{"text-align":"center"}},"2792",-1),cW={style:{"text-align":"left"}},iW={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},rW=t("td",{style:{"text-align":"center"}},null,-1),aW={style:{"text-align":"left"}},hW=t("code",null,"树",-1),uW=t("code",null,"深度优先搜索",-1),fW=t("code",null,"分治",-1),gW=t("code",null,"1+",-1),mW={style:{"text-align":"left"}},yW=t("td",{style:{"text-align":"center"}},"2852",-1),xW={style:{"text-align":"left"}},pW={href:"https://leetcode.com/problems/sum-of-remoteness-of-all-cells",target:"_blank",rel:"noopener noreferrer"},bW=t("td",{style:{"text-align":"center"}},null,-1),kW={style:{"text-align":"left"}},MW=t("code",null,"深度优先搜索",-1),IW=t("code",null,"广度优先搜索",-1),vW=t("code",null,"并查集",-1),wW=t("code",null,"3+",-1),jW={style:{"text-align":"left"}},HW=t("td",{style:{"text-align":"center"}},"2858",-1),EW={style:{"text-align":"left"}},zW={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},OW=t("td",{style:{"text-align":"center"}},null,-1),LW={style:{"text-align":"left"}},qW=t("code",null,"深度优先搜索",-1),NW=t("code",null,"广度优先搜索",-1),CW=t("code",null,"图",-1),PW=t("code",null,"1+",-1),TW={style:{"text-align":"left"}},VW=t("td",{style:{"text-align":"center"}},"2867",-1),BW={style:{"text-align":"left"}},KW={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},UW=t("td",{style:{"text-align":"center"}},null,-1),AW={style:{"text-align":"left"}},WW=t("code",null,"树",-1),DW=t("code",null,"深度优先搜索",-1),YW=t("code",null,"数学",-1),FW=t("code",null,"2+",-1),JW={style:{"text-align":"left"}},QW=t("td",{style:{"text-align":"center"}},"2872",-1),RW={style:{"text-align":"left"}},SW={href:"https://leetcode.com/problems/maximum-number-of-k-divisible-components",target:"_blank",rel:"noopener noreferrer"},ZW=t("td",{style:{"text-align":"center"}},null,-1),GW={style:{"text-align":"left"}},XW=t("code",null,"树",-1),$W=t("code",null,"深度优先搜索",-1),tD={style:{"text-align":"left"}},eD=t("td",{style:{"text-align":"center"}},"2920",-1),lD={style:{"text-align":"left"}},oD={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},nD=t("td",{style:{"text-align":"center"}},null,-1),sD={style:{"text-align":"left"}},dD=t("code",null,"位运算",-1),_D=t("code",null,"树",-1),cD=t("code",null,"深度优先搜索",-1),iD=t("code",null,"2+",-1),rD={style:{"text-align":"left"}},aD=t("td",{style:{"text-align":"center"}},"2925",-1),hD={style:{"text-align":"left"}},uD={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},fD=t("td",{style:{"text-align":"center"}},null,-1),gD={style:{"text-align":"left"}},mD=t("code",null,"树",-1),yD=t("code",null,"深度优先搜索",-1),xD=t("code",null,"动态规划",-1),pD={style:{"text-align":"left"}},bD=t("td",{style:{"text-align":"center"}},"2973",-1),kD={style:{"text-align":"left"}},MD={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},ID=t("td",{style:{"text-align":"center"}},null,-1),vD={style:{"text-align":"left"}},wD=t("code",null,"树",-1),jD=t("code",null,"深度优先搜索",-1),HD=t("code",null,"动态规划",-1),ED=t("code",null,"2+",-1),zD={style:{"text-align":"left"}},OD=t("td",{style:{"text-align":"center"}},"3004",-1),LD={style:{"text-align":"left"}},qD={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},ND=t("td",{style:{"text-align":"center"}},null,-1),CD={style:{"text-align":"left"}},PD=t("code",null,"树",-1),TD=t("code",null,"深度优先搜索",-1),VD=t("code",null,"数组",-1),BD=t("code",null,"1+",-1),KD={style:{"text-align":"left"}},UD=t("td",{style:{"text-align":"center"}},"3067",-1),AD={style:{"text-align":"left"}},WD={href:"https://leetcode.com/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network",target:"_blank",rel:"noopener noreferrer"},DD=t("td",{style:{"text-align":"center"}},null,-1),YD={style:{"text-align":"left"}},FD=t("code",null,"树",-1),JD=t("code",null,"深度优先搜索",-1),QD=t("code",null,"数组",-1),RD={style:{"text-align":"left"}},SD=t("td",{style:{"text-align":"center"}},"3123",-1),ZD={style:{"text-align":"left"}},GD={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},XD=t("td",{style:{"text-align":"center"}},null,-1),$D={style:{"text-align":"left"}},tY=t("code",null,"深度优先搜索",-1),eY=t("code",null,"广度优先搜索",-1),lY=t("code",null,"图",-1),oY=t("code",null,"2+",-1),nY={style:{"text-align":"left"}},sY=t("td",{style:{"text-align":"center"}},"3157",-1),dY={style:{"text-align":"left"}},_Y={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},cY=t("td",{style:{"text-align":"center"}},null,-1),iY={style:{"text-align":"left"}},rY=t("code",null,"树",-1),aY=t("code",null,"深度优先搜索",-1),hY=t("code",null,"广度优先搜索",-1),uY=t("code",null,"1+",-1),fY={style:{"text-align":"left"}},gY=t("td",{style:{"text-align":"center"}},"3203",-1),mY={style:{"text-align":"left"}},yY={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},xY=t("td",{style:{"text-align":"center"}},null,-1),pY={style:{"text-align":"left"}},bY=t("code",null,"树",-1),kY=t("code",null,"深度优先搜索",-1),MY=t("code",null,"广度优先搜索",-1),IY=t("code",null,"1+",-1),vY={style:{"text-align":"left"}},wY=t("td",{style:{"text-align":"center"}},"3235",-1),jY={style:{"text-align":"left"}},HY={href:"https://leetcode.com/problems/check-if-the-rectangle-corner-is-reachable",target:"_blank",rel:"noopener noreferrer"},EY=t("td",{style:{"text-align":"center"}},null,-1),zY={style:{"text-align":"left"}},OY=t("code",null,"深度优先搜索",-1),LY=t("code",null,"广度优先搜索",-1),qY=t("code",null,"并查集",-1),NY=t("code",null,"3+",-1),CY={style:{"text-align":"left"}},PY=t("td",{style:{"text-align":"center"}},"3241",-1),TY={style:{"text-align":"left"}},VY={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},BY=t("td",{style:{"text-align":"center"}},null,-1),KY={style:{"text-align":"left"}},UY=t("code",null,"树",-1),AY=t("code",null,"深度优先搜索",-1),WY=t("code",null,"图",-1),DY=t("code",null,"1+",-1),YY={style:{"text-align":"left"}},FY=t("td",{style:{"text-align":"center"}},"3249",-1),JY={style:{"text-align":"left"}},QY={href:"https://leetcode.com/problems/count-the-number-of-good-nodes",target:"_blank",rel:"noopener noreferrer"},RY=t("td",{style:{"text-align":"center"}},null,-1),SY={style:{"text-align":"left"}},ZY=t("code",null,"树",-1),GY=t("code",null,"深度优先搜索",-1),XY={style:{"text-align":"left"}},$Y=t("td",{style:{"text-align":"center"}},"3310",-1),tF={style:{"text-align":"left"}},eF={href:"https://leetcode.com/problems/remove-methods-from-project",target:"_blank",rel:"noopener noreferrer"},lF=t("td",{style:{"text-align":"center"}},null,-1),oF={style:{"text-align":"left"}},nF=t("code",null,"深度优先搜索",-1),sF=t("code",null,"广度优先搜索",-1),dF=t("code",null,"图",-1),_F={style:{"text-align":"left"}},cF=t("td",{style:{"text-align":"center"}},"3313",-1),iF={style:{"text-align":"left"}},rF={href:"https://leetcode.com/problems/find-the-last-marked-nodes-in-tree",target:"_blank",rel:"noopener noreferrer"},aF=t("td",{style:{"text-align":"center"}},null,-1),hF={style:{"text-align":"left"}},uF=t("code",null,"树",-1),fF=t("code",null,"深度优先搜索",-1),gF={style:{"text-align":"left"}},mF=t("td",{style:{"text-align":"center"}},"LCP 07",-1),yF={style:{"text-align":"left"}},xF={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},pF=t("td",{style:{"text-align":"center"}},null,-1),bF={style:{"text-align":"left"}},kF=t("code",null,"深度优先搜索",-1),MF=t("code",null,"广度优先搜索",-1),IF=t("code",null,"图",-1),vF=t("code",null,"1+",-1),wF={style:{"text-align":"left"}},jF=t("td",{style:{"text-align":"center"}},"LCP 10",-1),HF={style:{"text-align":"left"}},EF={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},zF=t("td",{style:{"text-align":"center"}},null,-1),OF={style:{"text-align":"left"}},LF=t("code",null,"树",-1),qF=t("code",null,"深度优先搜索",-1),NF=t("code",null,"动态规划",-1),CF=t("code",null,"1+",-1),PF={style:{"text-align":"left"}},TF=t("td",{style:{"text-align":"center"}},"LCP 21",-1),VF={style:{"text-align":"left"}},BF={href:"https://leetcode.cn/problems/Za25hA",target:"_blank",rel:"noopener noreferrer"},KF=t("td",{style:{"text-align":"center"}},null,-1),UF={style:{"text-align":"left"}},AF=t("code",null,"深度优先搜索",-1),WF=t("code",null,"广度优先搜索",-1),DF=t("code",null,"图",-1),YF=t("code",null,"1+",-1),FF={style:{"text-align":"left"}},JF=t("td",{style:{"text-align":"center"}},"LCP 31",-1),QF={style:{"text-align":"left"}},RF={href:"https://leetcode.cn/problems/Db3wC1",target:"_blank",rel:"noopener noreferrer"},SF=t("td",{style:{"text-align":"center"}},null,-1),ZF={style:{"text-align":"left"}},GF=t("code",null,"深度优先搜索",-1),XF=t("code",null,"广度优先搜索",-1),$F=t("code",null,"数组",-1),tJ=t("code",null,"2+",-1),eJ={style:{"text-align":"left"}},lJ=t("td",{style:{"text-align":"center"}},"LCP 44",-1),oJ={style:{"text-align":"left"}},nJ={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},sJ=t("td",{style:{"text-align":"center"}},null,-1),dJ={style:{"text-align":"left"}},_J=t("code",null,"树",-1),cJ=t("code",null,"深度优先搜索",-1),iJ=t("code",null,"广度优先搜索",-1),rJ=t("code",null,"2+",-1),aJ={style:{"text-align":"left"}},hJ=t("td",{style:{"text-align":"center"}},"LCP 45",-1),uJ={style:{"text-align":"left"}},fJ={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},gJ=t("td",{style:{"text-align":"center"}},null,-1),mJ={style:{"text-align":"left"}},yJ=t("code",null,"深度优先搜索",-1),xJ=t("code",null,"广度优先搜索",-1),pJ=t("code",null,"记忆化搜索",-1),bJ=t("code",null,"3+",-1),kJ={style:{"text-align":"left"}},MJ=t("td",{style:{"text-align":"center"}},"LCP 63",-1),IJ={style:{"text-align":"left"}},vJ={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},wJ=t("td",{style:{"text-align":"center"}},null,-1),jJ={style:{"text-align":"left"}},HJ=t("code",null,"深度优先搜索",-1),EJ=t("code",null,"广度优先搜索",-1),zJ=t("code",null,"图",-1),OJ=t("code",null,"5+",-1),LJ={style:{"text-align":"left"}},qJ=t("td",{style:{"text-align":"center"}},"LCP 64",-1),NJ={style:{"text-align":"left"}},CJ={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},PJ=t("td",{style:{"text-align":"center"}},null,-1),TJ={style:{"text-align":"left"}},VJ=t("code",null,"树",-1),BJ=t("code",null,"深度优先搜索",-1),KJ=t("code",null,"动态规划",-1),UJ=t("code",null,"1+",-1),AJ={style:{"text-align":"left"}},WJ=t("td",{style:{"text-align":"center"}},"LCP 67",-1),DJ={style:{"text-align":"left"}},YJ={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},FJ=t("td",{style:{"text-align":"center"}},null,-1),JJ={style:{"text-align":"left"}},QJ=t("code",null,"树",-1),RJ=t("code",null,"深度优先搜索",-1),SJ=t("code",null,"广度优先搜索",-1),ZJ=t("code",null,"1+",-1),GJ={style:{"text-align":"left"}},XJ=t("td",{style:{"text-align":"center"}},"LCS 03",-1),$J={style:{"text-align":"left"}},tQ={href:"https://leetcode.cn/problems/YesdPw",target:"_blank",rel:"noopener noreferrer"},eQ=t("td",{style:{"text-align":"center"}},null,-1),lQ={style:{"text-align":"left"}},oQ=t("code",null,"深度优先搜索",-1),nQ=t("code",null,"广度优先搜索",-1),sQ=t("code",null,"并查集",-1),dQ=t("code",null,"2+",-1),_Q={style:{"text-align":"left"}},cQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 13",-1),iQ={style:{"text-align":"left"}},rQ={href:"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof",target:"_blank",rel:"noopener noreferrer"},aQ={style:{"text-align":"center"}},hQ={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_13_1",target:"_blank",rel:"noopener noreferrer"},uQ={style:{"text-align":"left"}},fQ=t("code",null,"深度优先搜索",-1),gQ=t("code",null,"广度优先搜索",-1),mQ=t("code",null,"动态规划",-1),yQ={style:{"text-align":"left"}},xQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),pQ={style:{"text-align":"left"}},bQ={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},kQ={style:{"text-align":"center"}},MQ={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_26_1",target:"_blank",rel:"noopener noreferrer"},IQ={style:{"text-align":"left"}},vQ=t("code",null,"树",-1),wQ=t("code",null,"深度优先搜索",-1),jQ=t("code",null,"二叉树",-1),HQ={style:{"text-align":"left"}},EQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),zQ={style:{"text-align":"left"}},OQ={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},LQ={style:{"text-align":"center"}},qQ={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_27_1",target:"_blank",rel:"noopener noreferrer"},NQ={style:{"text-align":"left"}},CQ=t("code",null,"树",-1),PQ=t("code",null,"深度优先搜索",-1),TQ=t("code",null,"广度优先搜索",-1),VQ=t("code",null,"1+",-1),BQ={style:{"text-align":"left"}},KQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),UQ={style:{"text-align":"left"}},AQ={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},WQ={style:{"text-align":"center"}},DQ={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_28_1",target:"_blank",rel:"noopener noreferrer"},YQ={style:{"text-align":"left"}},FQ=t("code",null,"树",-1),JQ=t("code",null,"深度优先搜索",-1),QQ=t("code",null,"广度优先搜索",-1),RQ=t("code",null,"1+",-1),SQ={style:{"text-align":"left"}},ZQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),GQ={style:{"text-align":"left"}},XQ={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},$Q={style:{"text-align":"center"}},tR={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_34_1",target:"_blank",rel:"noopener noreferrer"},eR={style:{"text-align":"left"}},lR=t("code",null,"树",-1),oR=t("code",null,"深度优先搜索",-1),nR=t("code",null,"回溯",-1),sR=t("code",null,"1+",-1),dR={style:{"text-align":"left"}},_R=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),cR={style:{"text-align":"left"}},iR={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},rR={style:{"text-align":"center"}},aR={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_36_1",target:"_blank",rel:"noopener noreferrer"},hR={style:{"text-align":"left"}},uR=t("code",null,"栈",-1),fR=t("code",null,"树",-1),gR=t("code",null,"深度优先搜索",-1),mR=t("code",null,"4+",-1),yR={style:{"text-align":"left"}},xR=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),pR={style:{"text-align":"left"}},bR={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},kR={style:{"text-align":"center"}},MR={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_37_1",target:"_blank",rel:"noopener noreferrer"},IR={style:{"text-align":"left"}},vR=t("code",null,"树",-1),wR=t("code",null,"深度优先搜索",-1),jR=t("code",null,"广度优先搜索",-1),HR=t("code",null,"3+",-1),ER={style:{"text-align":"left"}},zR=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),OR={style:{"text-align":"left"}},LR={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},qR={style:{"text-align":"center"}},NR={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_54_1",target:"_blank",rel:"noopener noreferrer"},CR={style:{"text-align":"left"}},PR=t("code",null,"树",-1),TR=t("code",null,"深度优先搜索",-1),VR=t("code",null,"二叉搜索树",-1),BR=t("code",null,"1+",-1),KR={style:{"text-align":"left"}},UR=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - I",-1),AR={style:{"text-align":"left"}},WR={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},DR={style:{"text-align":"center"}},YR={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_55_1",target:"_blank",rel:"noopener noreferrer"},FR={style:{"text-align":"left"}},JR=t("code",null,"树",-1),QR=t("code",null,"深度优先搜索",-1),RR=t("code",null,"广度优先搜索",-1),SR=t("code",null,"1+",-1),ZR={style:{"text-align":"left"}},GR=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - II",-1),XR={style:{"text-align":"left"}},$R={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},tS=t("td",{style:{"text-align":"center"}},null,-1),eS={style:{"text-align":"left"}},lS=t("code",null,"树",-1),oS=t("code",null,"深度优先搜索",-1),nS=t("code",null,"二叉树",-1),sS={style:{"text-align":"left"}},dS=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - I",-1),_S={style:{"text-align":"left"}},cS={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},iS=t("td",{style:{"text-align":"center"}},null,-1),rS={style:{"text-align":"left"}},aS=t("code",null,"树",-1),hS=t("code",null,"深度优先搜索",-1),uS=t("code",null,"二叉搜索树",-1),fS=t("code",null,"1+",-1),gS={style:{"text-align":"left"}},mS=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - II",-1),yS={style:{"text-align":"left"}},xS={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},pS=t("td",{style:{"text-align":"center"}},null,-1),bS={style:{"text-align":"left"}},kS=t("code",null,"树",-1),MS=t("code",null,"深度优先搜索",-1),IS=t("code",null,"二叉树",-1),vS={style:{"text-align":"left"}},wS=t("td",{style:{"text-align":"center"}},"剑指 Offer II 105",-1),jS={style:{"text-align":"left"}},HS={href:"https://leetcode.cn/problems/ZL6zAn",target:"_blank",rel:"noopener noreferrer"},ES=t("td",{style:{"text-align":"center"}},null,-1),zS={style:{"text-align":"left"}},OS=t("code",null,"深度优先搜索",-1),LS=t("code",null,"广度优先搜索",-1),qS=t("code",null,"并查集",-1),NS=t("code",null,"2+",-1),CS={style:{"text-align":"left"}},PS=t("td",{style:{"text-align":"center"}},"剑指 Offer II 106",-1),TS={style:{"text-align":"left"}},VS={href:"https://leetcode.cn/problems/vEAB3K",target:"_blank",rel:"noopener noreferrer"},BS=t("td",{style:{"text-align":"center"}},null,-1),KS={style:{"text-align":"left"}},US=t("code",null,"深度优先搜索",-1),AS=t("code",null,"广度优先搜索",-1),WS=t("code",null,"并查集",-1),DS=t("code",null,"1+",-1),YS={style:{"text-align":"left"}},FS=t("td",{style:{"text-align":"center"}},"剑指 Offer II 110",-1),JS={style:{"text-align":"left"}},QS={href:"https://leetcode.cn/problems/bP4bmD",target:"_blank",rel:"noopener noreferrer"},RS=t("td",{style:{"text-align":"center"}},null,-1),SS={style:{"text-align":"left"}},ZS=t("code",null,"深度优先搜索",-1),GS=t("code",null,"广度优先搜索",-1),XS=t("code",null,"图",-1),$S=t("code",null,"1+",-1),tZ={style:{"text-align":"left"}},eZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),lZ={style:{"text-align":"left"}},oZ={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},nZ=t("td",{style:{"text-align":"center"}},null,-1),sZ={style:{"text-align":"left"}},dZ=t("code",null,"深度优先搜索",-1),_Z=t("code",null,"广度优先搜索",-1),cZ=t("code",null,"并查集",-1),iZ=t("code",null,"3+",-1),rZ={style:{"text-align":"left"}},aZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),hZ={style:{"text-align":"left"}},uZ={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},fZ=t("td",{style:{"text-align":"center"}},null,-1),gZ={style:{"text-align":"left"}},mZ=t("code",null,"深度优先搜索",-1),yZ=t("code",null,"广度优先搜索",-1),xZ=t("code",null,"图",-1),pZ=t("code",null,"5+",-1),bZ={style:{"text-align":"left"}},kZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 113",-1),MZ={style:{"text-align":"left"}},IZ={href:"https://leetcode.cn/problems/QA2IGt",target:"_blank",rel:"noopener noreferrer"},vZ=t("td",{style:{"text-align":"center"}},null,-1),wZ={style:{"text-align":"left"}},jZ=t("code",null,"深度优先搜索",-1),HZ=t("code",null,"广度优先搜索",-1),EZ=t("code",null,"图",-1),zZ=t("code",null,"1+",-1),OZ={style:{"text-align":"left"}},LZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 114",-1),qZ={style:{"text-align":"left"}},NZ={href:"https://leetcode.cn/problems/Jf1JuT",target:"_blank",rel:"noopener noreferrer"},CZ=t("td",{style:{"text-align":"center"}},null,-1),PZ={style:{"text-align":"left"}},TZ=t("code",null,"深度优先搜索",-1),VZ=t("code",null,"广度优先搜索",-1),BZ=t("code",null,"图",-1),KZ=t("code",null,"3+",-1),UZ={style:{"text-align":"left"}},AZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 116",-1),WZ={style:{"text-align":"left"}},DZ={href:"https://leetcode.cn/problems/bLyHh0",target:"_blank",rel:"noopener noreferrer"},YZ=t("td",{style:{"text-align":"center"}},null,-1),FZ={style:{"text-align":"left"}},JZ=t("code",null,"深度优先搜索",-1),QZ=t("code",null,"广度优先搜索",-1),RZ=t("code",null,"并查集",-1),SZ=t("code",null,"1+",-1),ZZ={style:{"text-align":"left"}},GZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 117",-1),XZ={style:{"text-align":"left"}},$Z={href:"https://leetcode.cn/problems/H6lPxb",target:"_blank",rel:"noopener noreferrer"},tG=t("td",{style:{"text-align":"center"}},null,-1),eG={style:{"text-align":"left"}},lG=t("code",null,"深度优先搜索",-1),oG=t("code",null,"广度优先搜索",-1),nG=t("code",null,"并查集",-1),sG=t("code",null,"3+",-1),dG={style:{"text-align":"left"}},_G=t("td",{style:{"text-align":"center"}},"剑指 Offer II 118",-1),cG={style:{"text-align":"left"}},iG={href:"https://leetcode.cn/problems/7LpjUW",target:"_blank",rel:"noopener noreferrer"},rG=t("td",{style:{"text-align":"center"}},null,-1),aG={style:{"text-align":"left"}},hG=t("code",null,"深度优先搜索",-1),uG=t("code",null,"广度优先搜索",-1),fG=t("code",null,"并查集",-1),gG=t("code",null,"1+",-1),mG={style:{"text-align":"left"}},yG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 28",-1),xG={style:{"text-align":"left"}},pG={href:"https://leetcode.cn/problems/Qv1Da2",target:"_blank",rel:"noopener noreferrer"},bG=t("td",{style:{"text-align":"center"}},null,-1),kG={style:{"text-align":"left"}},MG=t("code",null,"深度优先搜索",-1),IG=t("code",null,"链表",-1),vG=t("code",null,"双向链表",-1),wG={style:{"text-align":"left"}},jG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),HG={style:{"text-align":"left"}},EG={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},zG=t("td",{style:{"text-align":"center"}},null,-1),OG={style:{"text-align":"left"}},LG=t("code",null,"树",-1),qG=t("code",null,"深度优先搜索",-1),NG=t("code",null,"广度优先搜索",-1),CG=t("code",null,"1+",-1),PG={style:{"text-align":"left"}},TG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),VG={style:{"text-align":"left"}},BG={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},KG=t("td",{style:{"text-align":"center"}},null,-1),UG={style:{"text-align":"left"}},AG=t("code",null,"树",-1),WG=t("code",null,"深度优先搜索",-1),DG=t("code",null,"广度优先搜索",-1),YG=t("code",null,"1+",-1),FG={style:{"text-align":"left"}},JG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),QG={style:{"text-align":"left"}},RG={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},SG=t("td",{style:{"text-align":"center"}},null,-1),ZG={style:{"text-align":"left"}},GG=t("code",null,"树",-1),XG=t("code",null,"深度优先搜索",-1),$G=t("code",null,"广度优先搜索",-1),tX=t("code",null,"1+",-1),eX={style:{"text-align":"left"}},lX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),oX={style:{"text-align":"left"}},nX={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},sX=t("td",{style:{"text-align":"center"}},null,-1),dX={style:{"text-align":"left"}},_X=t("code",null,"树",-1),cX=t("code",null,"深度优先搜索",-1),iX=t("code",null,"二叉树",-1),rX={style:{"text-align":"left"}},aX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),hX={style:{"text-align":"left"}},uX={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},fX=t("td",{style:{"text-align":"center"}},null,-1),gX={style:{"text-align":"left"}},mX=t("code",null,"树",-1),yX=t("code",null,"深度优先搜索",-1),xX=t("code",null,"广度优先搜索",-1),pX=t("code",null,"3+",-1),bX={style:{"text-align":"left"}},kX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),MX={style:{"text-align":"left"}},IX={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},vX=t("td",{style:{"text-align":"center"}},null,-1),wX={style:{"text-align":"left"}},jX=t("code",null,"树",-1),HX=t("code",null,"深度优先搜索",-1),EX=t("code",null,"二叉树",-1),zX={style:{"text-align":"left"}},OX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),LX={style:{"text-align":"left"}},qX={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},NX=t("td",{style:{"text-align":"center"}},null,-1),CX={style:{"text-align":"left"}},PX=t("code",null,"树",-1),TX=t("code",null,"深度优先搜索",-1),VX=t("code",null,"二叉树",-1),BX={style:{"text-align":"left"}},KX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),UX={style:{"text-align":"left"}},AX={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},WX=t("td",{style:{"text-align":"center"}},null,-1),DX={style:{"text-align":"left"}},YX=t("code",null,"树",-1),FX=t("code",null,"深度优先搜索",-1),JX=t("code",null,"动态规划",-1),QX=t("code",null,"1+",-1),RX={style:{"text-align":"left"}},SX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),ZX={style:{"text-align":"left"}},GX={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},XX=t("td",{style:{"text-align":"center"}},null,-1),$X={style:{"text-align":"left"}},t$=t("code",null,"栈",-1),e$=t("code",null,"树",-1),l$=t("code",null,"深度优先搜索",-1),o$=t("code",null,"2+",-1),n$={style:{"text-align":"left"}},s$=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),d$={style:{"text-align":"left"}},_$={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},c$=t("td",{style:{"text-align":"center"}},null,-1),i$={style:{"text-align":"left"}},r$=t("code",null,"树",-1),a$=t("code",null,"深度优先搜索",-1),h$=t("code",null,"二叉搜索树",-1),u$=t("code",null,"1+",-1),f$={style:{"text-align":"left"}},g$=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),m$={style:{"text-align":"left"}},y$={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},x$=t("td",{style:{"text-align":"center"}},null,-1),p$={style:{"text-align":"left"}},b$=t("code",null,"树",-1),k$=t("code",null,"深度优先搜索",-1),M$=t("code",null,"二叉搜索树",-1),I$=t("code",null,"1+",-1),v$={style:{"text-align":"left"}},w$=t("td",{style:{"text-align":"center"}},"剑指 Offer II 64",-1),j$={style:{"text-align":"left"}},H$={href:"https://leetcode.cn/problems/US1pGT",target:"_blank",rel:"noopener noreferrer"},E$=t("td",{style:{"text-align":"center"}},null,-1),z$={style:{"text-align":"left"}},O$=t("code",null,"深度优先搜索",-1),L$=t("code",null,"设计",-1),q$=t("code",null,"字典树",-1),N$=t("code",null,"2+",-1),C$={style:{"text-align":"left"}},P$=t("td",{style:{"text-align":"center"}},"剑指 Offer II 86",-1),T$={style:{"text-align":"left"}},V$={href:"https://leetcode.cn/problems/M99OJA",target:"_blank",rel:"noopener noreferrer"},B$=t("td",{style:{"text-align":"center"}},null,-1),K$={style:{"text-align":"left"}},U$=t("code",null,"深度优先搜索",-1),A$=t("code",null,"广度优先搜索",-1),W$=t("code",null,"图",-1),D$=t("code",null,"1+",-1),Y$={style:{"text-align":"left"}},F$=t("td",{style:{"text-align":"center"}},"面试题 04.01",-1),J$={style:{"text-align":"left"}},Q$={href:"https://leetcode.cn/problems/route-between-nodes-lcci",target:"_blank",rel:"noopener noreferrer"},R$=t("td",{style:{"text-align":"center"}},null,-1),S$={style:{"text-align":"left"}},Z$=t("code",null,"深度优先搜索",-1),G$=t("code",null,"广度优先搜索",-1),X$=t("code",null,"图",-1),$$={style:{"text-align":"left"}},ttt=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),ett={style:{"text-align":"left"}},ltt={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},ott=t("td",{style:{"text-align":"center"}},null,-1),ntt={style:{"text-align":"left"}},stt=t("code",null,"树",-1),dtt=t("code",null,"深度优先搜索",-1),_tt=t("code",null,"二叉树",-1),ctt={style:{"text-align":"left"}},itt=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),rtt={style:{"text-align":"left"}},att={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},htt=t("td",{style:{"text-align":"center"}},null,-1),utt={style:{"text-align":"left"}},ftt=t("code",null,"树",-1),gtt=t("code",null,"深度优先搜索",-1),mtt=t("code",null,"二叉搜索树",-1),ytt=t("code",null,"1+",-1),xtt={style:{"text-align":"left"}},ptt=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),btt={style:{"text-align":"left"}},ktt={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},Mtt=t("td",{style:{"text-align":"center"}},null,-1),Itt={style:{"text-align":"left"}},vtt=t("code",null,"树",-1),wtt=t("code",null,"深度优先搜索",-1),jtt=t("code",null,"二叉搜索树",-1),Htt=t("code",null,"1+",-1),Ett={style:{"text-align":"left"}},ztt=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),Ott={style:{"text-align":"left"}},Ltt={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},qtt=t("td",{style:{"text-align":"center"}},null,-1),Ntt={style:{"text-align":"left"}},Ctt=t("code",null,"树",-1),Ptt=t("code",null,"深度优先搜索",-1),Ttt=t("code",null,"二叉树",-1),Vtt={style:{"text-align":"left"}},Btt=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),Ktt={style:{"text-align":"left"}},Utt={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},Att=t("td",{style:{"text-align":"center"}},null,-1),Wtt={style:{"text-align":"left"}},Dtt=t("code",null,"树",-1),Ytt=t("code",null,"深度优先搜索",-1),Ftt=t("code",null,"二叉树",-1),Jtt=t("code",null,"2+",-1),Qtt={style:{"text-align":"left"}},Rtt=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),Stt={style:{"text-align":"left"}},Ztt={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},Gtt=t("td",{style:{"text-align":"center"}},null,-1),Xtt={style:{"text-align":"left"}},$tt=t("code",null,"树",-1),tet=t("code",null,"深度优先搜索",-1),eet=t("code",null,"二叉树",-1),oet={style:{"text-align":"left"}},net=t("td",{style:{"text-align":"center"}},"面试题 08.10",-1),set={style:{"text-align":"left"}},det={href:"https://leetcode.cn/problems/color-fill-lcci",target:"_blank",rel:"noopener noreferrer"},_et=t("td",{style:{"text-align":"center"}},null,-1),cet={style:{"text-align":"left"}},iet=t("code",null,"深度优先搜索",-1),ret=t("code",null,"广度优先搜索",-1),aet=t("code",null,"数组",-1),het=t("code",null,"1+",-1),uet={style:{"text-align":"left"}},fet=t("td",{style:{"text-align":"center"}},"面试题 16.19",-1),get={style:{"text-align":"left"}},met={href:"https://leetcode.cn/problems/pond-sizes-lcci",target:"_blank",rel:"noopener noreferrer"},yet=t("td",{style:{"text-align":"center"}},null,-1),xet={style:{"text-align":"left"}},pet=t("code",null,"深度优先搜索",-1),bet=t("code",null,"广度优先搜索",-1),ket=t("code",null,"并查集",-1),Met=t("code",null,"2+",-1),Iet={style:{"text-align":"left"}},vet=t("td",{style:{"text-align":"center"}},"面试题 17.07",-1),wet={style:{"text-align":"left"}},jet={href:"https://leetcode.cn/problems/baby-names-lcci",target:"_blank",rel:"noopener noreferrer"},Het=t("td",{style:{"text-align":"center"}},null,-1),Eet={style:{"text-align":"left"}},zet=t("code",null,"深度优先搜索",-1),Oet=t("code",null,"广度优先搜索",-1),Let=t("code",null,"并查集",-1),qet=t("code",null,"4+",-1),Net={style:{"text-align":"left"}},Cet=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),Pet={style:{"text-align":"left"}},Tet={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},Vet=t("td",{style:{"text-align":"center"}},null,-1),Bet={style:{"text-align":"left"}},Ket=t("code",null,"栈",-1),Uet=t("code",null,"树",-1),Aet=t("code",null,"深度优先搜索",-1),Wet=t("code",null,"3+",-1),Det={style:{"text-align":"left"}};function Yet(Fet,Jet){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),r("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[Y]),_:1})]),F,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),dt,l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Ct]),_:1})])]),Pt,a(" prettier-ignore "),t("table",null,[Tt,t("tbody",null,[t("tr",null,[Vt,t("td",Bt,[t("a",Kt,[l("二叉树的中序遍历"),e(s)])]),t("td",Ut,[t("a",At,[l("[✓]"),e(s)])]),t("td",Wt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Dt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ft]),_:1}),l(),Jt]),t("td",Qt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Rt,t("td",St,[t("a",Zt,[l("验证二叉搜索树"),e(s)])]),t("td",Gt,[t("a",Xt,[l("[✓]"),e(s)])]),t("td",$t,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[te]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ee]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[le]),_:1}),l(),oe]),t("td",ne,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[se,t("td",de,[t("a",_e,[l("恢复二叉搜索树"),e(s)])]),t("td",ce,[t("a",ie,[l("[✓]"),e(s)])]),t("td",re,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ae]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[he]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[ue]),_:1}),l(),fe]),t("td",ge,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[me,t("td",ye,[t("a",xe,[l("相同的树"),e(s)])]),t("td",pe,[t("a",be,[l("[✓]"),e(s)])]),t("td",ke,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Me]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ie]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ve]),_:1}),l(),we]),t("td",je,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[He,t("td",Ee,[t("a",ze,[l("对称二叉树"),e(s)])]),t("td",Oe,[t("a",Le,[l("[✓]"),e(s)])]),t("td",qe,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ne]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ce]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Pe]),_:1}),l(),Te]),t("td",Ve,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Be,t("td",Ke,[t("a",Ue,[l("二叉树的最大深度"),e(s)])]),t("td",Ae,[t("a",We,[l("[✓]"),e(s)])]),t("td",De,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ye]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Fe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Je]),_:1}),l(),Qe]),t("td",Re,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Se,t("td",Ze,[t("a",Ge,[l("平衡二叉树"),e(s)])]),t("td",Xe,[t("a",$e,[l("[✓]"),e(s)])]),t("td",tl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[el]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ll]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[ol]),_:1})]),t("td",nl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[sl,t("td",dl,[t("a",_l,[l("二叉树的最小深度"),e(s)])]),t("td",cl,[t("a",il,[l("[✓]"),e(s)])]),t("td",rl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[al]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[hl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ul]),_:1}),l(),fl]),t("td",gl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ml,t("td",yl,[t("a",xl,[l("路径总和"),e(s)])]),t("td",pl,[t("a",bl,[l("[✓]"),e(s)])]),t("td",kl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ml]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Il]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[vl]),_:1}),l(),wl]),t("td",jl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Hl,t("td",El,[t("a",zl,[l("路径总和 II"),e(s)])]),t("td",Ol,[t("a",Ll,[l("[✓]"),e(s)])]),t("td",ql,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Nl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Cl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[Pl]),_:1}),l(),Tl]),t("td",Vl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bl,t("td",Kl,[t("a",Ul,[l("二叉树展开为链表"),e(s)])]),t("td",Al,[t("a",Wl,[l("[✓]"),e(s)])]),t("td",Dl,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Yl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Fl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Jl]),_:1}),l(),Ql]),t("td",Rl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sl,t("td",Zl,[t("a",Gl,[l("填充每个节点的下一个右侧节点指针"),e(s)])]),t("td",Xl,[t("a",$l,[l("[✓]"),e(s)])]),t("td",to,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[eo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[lo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[oo]),_:1}),l(),no]),t("td",so,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_o,t("td",co,[t("a",io,[l("填充每个节点的下一个右侧节点指针 II"),e(s)])]),t("td",ro,[t("a",ao,[l("[✓]"),e(s)])]),t("td",ho,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[uo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[go]),_:1}),l(),mo]),t("td",yo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xo,t("td",po,[t("a",bo,[l("二叉树中的最大路径和"),e(s)])]),t("td",ko,[t("a",Mo,[l("[✓]"),e(s)])]),t("td",Io,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[jo]),_:1}),l(),Ho]),t("td",Eo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zo,t("td",Oo,[t("a",Lo,[l("求根节点到叶节点数字之和"),e(s)])]),t("td",qo,[t("a",No,[l("[✓]"),e(s)])]),t("td",Co,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Po]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[To]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Vo]),_:1})]),t("td",Bo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ko,t("td",Uo,[t("a",Ao,[l("被围绕的区域"),e(s)])]),t("td",Wo,[t("a",Do,[l("[✓]"),e(s)])]),t("td",Yo,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Fo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Jo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Qo]),_:1}),l(),Ro]),t("td",So,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zo,t("td",Go,[t("a",Xo,[l("克隆图"),e(s)])]),t("td",$o,[t("a",tn,[l("[✓]"),e(s)])]),t("td",en,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ln]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[on]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[nn]),_:1}),l(),sn]),t("td",dn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_n,t("td",cn,[t("a",rn,[l("二叉树的前序遍历"),e(s)])]),t("td",an,[t("a",hn,[l("[✓]"),e(s)])]),t("td",un,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[fn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[mn]),_:1}),l(),yn]),t("td",xn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[pn,t("td",bn,[t("a",kn,[l("二叉树的后序遍历"),e(s)])]),t("td",Mn,[t("a",In,[l("[✓]"),e(s)])]),t("td",vn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[wn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[jn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Hn]),_:1}),l(),En]),t("td",zn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[On,t("td",Ln,[t("a",qn,[l("上下翻转二叉树"),e(s)])]),t("td",Nn,[t("a",Cn,[l("[✓]"),e(s)])]),t("td",Pn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Tn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Vn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Bn]),_:1})]),t("td",Kn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Un,t("td",An,[t("a",Wn,[l("二叉树的右视图"),e(s)])]),t("td",Dn,[t("a",Yn,[l("[✓]"),e(s)])]),t("td",Fn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Jn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Rn]),_:1}),l(),Sn]),t("td",Zn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gn,t("td",Xn,[t("a",$n,[l("岛屿数量"),e(s)])]),t("td",ts,[t("a",es,[l("[✓]"),e(s)])]),t("td",ls,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[os]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ns]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[ss]),_:1}),l(),ds]),t("td",_s,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cs,t("td",is,[t("a",rs,[l("课程表"),e(s)])]),t("td",as,[t("a",hs,[l("[✓]"),e(s)])]),t("td",us,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[gs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[ms]),_:1}),l(),ys]),t("td",xs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ps,t("td",bs,[t("a",ks,[l("课程表 II"),e(s)])]),t("td",Ms,[t("a",Is,[l("[✓]"),e(s)])]),t("td",vs,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ws]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[js]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Hs]),_:1}),l(),Es]),t("td",zs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Os,t("td",Ls,[t("a",qs,[l("添加与搜索单词 - 数据结构设计"),e(s)])]),t("td",Ns,[t("a",Cs,[l("[✓]"),e(s)])]),t("td",Ps,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ts]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Vs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Bs]),_:1}),l(),Ks]),t("td",Us,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[As,t("td",Ws,[t("a",Ds,[l("翻转二叉树"),e(s)])]),t("td",Ys,[t("a",Fs,[l("[✓]"),e(s)])]),t("td",Js,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Qs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Rs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ss]),_:1}),l(),Zs]),t("td",Gs,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xs,t("td",$s,[t("a",td,[l("二叉搜索树中第 K 小的元素"),e(s)])]),t("td",ed,[t("a",ld,[l("[✓]"),e(s)])]),t("td",od,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[nd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[sd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[dd]),_:1}),l(),_d]),t("td",cd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[id,t("td",rd,[t("a",ad,[l("二叉搜索树的最近公共祖先"),e(s)])]),t("td",hd,[t("a",ud,[l("[✓]"),e(s)])]),t("td",fd,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[md]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[yd]),_:1}),l(),xd]),t("td",pd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bd,t("td",kd,[t("a",Md,[l("二叉树的最近公共祖先"),e(s)])]),t("td",Id,[t("a",vd,[l("[✓]"),e(s)])]),t("td",wd,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[jd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Hd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Ed]),_:1})]),t("td",zd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Od,t("td",Ld,[t("a",qd,[l("统计同值子树"),e(s)])]),Nd,t("td",Cd,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Pd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Td]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Vd]),_:1})]),t("td",Bd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kd,t("td",Ud,[t("a",Ad,[l("二叉树的所有路径"),e(s)])]),t("td",Wd,[t("a",Dd,[l("[✓]"),e(s)])]),t("td",Yd,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Fd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Jd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Qd]),_:1}),l(),Rd]),t("td",Sd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zd,t("td",Gd,[t("a",Xd,[l("以图判树"),e(s)])]),$d,t("td",t_,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[e_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[l_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[o_]),_:1}),l(),n_]),t("td",s_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d_,t("td",__,[t("a",c_,[l("火星词典"),e(s)])]),i_,t("td",r_,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[a_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[h_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[u_]),_:1}),l(),f_]),t("td",g_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[m_,t("td",y_,[t("a",x_,[l("最接近的二叉搜索树值"),e(s)])]),p_,t("td",b_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[k_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[M_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[I_]),_:1}),l(),v_]),t("td",w_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[j_,t("td",H_,[t("a",E_,[l("最接近的二叉搜索树值 II"),e(s)])]),z_,t("td",O_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[L_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[q_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[N_]),_:1}),l(),C_]),t("td",P_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[T_,t("td",V_,[t("a",B_,[l("二叉搜索树中的中序后继"),e(s)])]),K_,t("td",U_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[A_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[W_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[D_]),_:1}),l(),Y_]),t("td",F_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J_,t("td",Q_,[t("a",R_,[l("二叉树的序列化与反序列化"),e(s)])]),t("td",S_,[t("a",Z_,[l("[✓]"),e(s)])]),t("td",G_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[X_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[$_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[tc]),_:1}),l(),ec]),t("td",lc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oc,t("td",nc,[t("a",sc,[l("二叉树最长连续序列"),e(s)])]),dc,t("td",_c,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[cc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ic]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[rc]),_:1})]),t("td",ac,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hc,t("td",uc,[t("a",fc,[l("包含全部黑色像素的最小矩形"),e(s)])]),gc,t("td",mc,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[xc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[pc]),_:1}),l(),bc]),t("td",kc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mc,t("td",Ic,[t("a",vc,[l("最小高度树"),e(s)])]),wc,t("td",jc,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Hc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ec]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[zc]),_:1}),l(),Oc]),t("td",Lc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qc,t("td",Nc,[t("a",Cc,[l("二叉树的垂直遍历"),e(s)])]),Pc,t("td",Tc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Vc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Bc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Kc]),_:1}),l(),Uc]),t("td",Ac,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wc,t("td",Dc,[t("a",Yc,[l("无向图中连通分量的数目"),e(s)])]),Fc,t("td",Jc,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Qc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Rc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Sc]),_:1}),l(),Zc]),t("td",Gc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xc,t("td",$c,[t("a",ti,[l("矩阵中的最长递增路径"),e(s)])]),ei,t("td",li,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[oi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ni]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[si]),_:1}),l(),di]),t("td",_i,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ci,t("td",ii,[t("a",ri,[l("重新安排行程"),e(s)])]),ai,t("td",hi,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ui]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[fi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[gi]),_:1})]),t("td",mi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yi,t("td",xi,[t("a",pi,[l("最大二叉搜索子树"),e(s)])]),bi,t("td",ki,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Mi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ii]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[vi]),_:1}),l(),wi]),t("td",ji,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hi,t("td",Ei,[t("a",zi,[l("打家劫舍 III"),e(s)])]),Oi,t("td",Li,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[qi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ni]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Ci]),_:1}),l(),Pi]),t("td",Ti,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vi,t("td",Bi,[t("a",Ki,[l("嵌套列表加权和"),e(s)])]),Ui,t("td",Ai,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Wi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Di]),_:1})]),t("td",Yi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fi,t("td",Ji,[t("a",Qi,[l("扁平化嵌套列表迭代器"),e(s)])]),Ri,t("td",Si,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Zi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Gi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Xi]),_:1}),l(),$i]),t("td",tr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[er,t("td",lr,[t("a",or,[l("嵌套列表加权和 II"),e(s)])]),nr,t("td",sr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[dr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[_r]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[cr]),_:1})]),t("td",ir,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rr,t("td",ar,[t("a",hr,[l("水壶问题"),e(s)])]),ur,t("td",fr,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[mr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[yr]),_:1})]),t("td",xr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pr,t("td",br,[t("a",kr,[l("寻找二叉树的叶子节点"),e(s)])]),t("td",Mr,[t("a",Ir,[l("[✓]"),e(s)])]),t("td",vr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[wr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[jr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Hr]),_:1})]),t("td",Er,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zr,t("td",Or,[t("a",Lr,[l("迷你语法分析器"),e(s)])]),qr,t("td",Nr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Cr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Pr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Tr]),_:1})]),t("td",Vr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Br,t("td",Kr,[t("a",Ur,[l("字典序排数"),e(s)])]),Ar,t("td",Wr,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Dr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Yr]),_:1})]),t("td",Fr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jr,t("td",Qr,[t("a",Rr,[l("文件的最长绝对路径"),e(s)])]),Sr,t("td",Zr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Gr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Xr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[$r]),_:1})]),t("td",ta,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ea,t("td",la,[t("a",oa,[l("除法求值"),e(s)])]),t("td",na,[t("a",sa,[l("[✓]"),e(s)])]),t("td",da,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[_a]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ca]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[ia]),_:1}),l(),ra]),t("td",aa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ha,t("td",ua,[t("a",fa,[l("左叶子之和"),e(s)])]),ga,t("td",ma,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ya]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[xa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[pa]),_:1}),l(),ba]),t("td",ka,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ma,t("td",Ia,[t("a",va,[l("太平洋大西洋水流问题"),e(s)])]),wa,t("td",ja,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ha]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ea]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[za]),_:1}),l(),Oa]),t("td",La,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qa,t("td",Na,[t("a",Ca,[l("棋盘上的战舰"),e(s)])]),Pa,t("td",Ta,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Va]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ba]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[Ka]),_:1})]),t("td",Ua,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Aa,t("td",Wa,[t("a",Da,[l("将二叉搜索树转化为排序的双向链表"),e(s)])]),t("td",Ya,[t("a",Fa,[l("[✓]"),e(s)])]),t("td",Ja,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Qa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ra]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Sa]),_:1}),l(),Za]),t("td",Ga,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xa,t("td",$a,[t("a",th,[l("序列化和反序列化 N 叉树"),e(s)])]),eh,t("td",lh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[oh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[sh]),_:1}),l(),dh]),t("td",_h,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ch,t("td",ih,[t("a",rh,[l("扁平化多级双向链表"),e(s)])]),t("td",ah,[t("a",hh,[l("[✓]"),e(s)])]),t("td",uh,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[gh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[mh]),_:1})]),t("td",yh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xh,t("td",ph,[t("a",bh,[l("将 N 叉树编码为二叉树"),e(s)])]),kh,t("td",Mh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ih]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[vh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[wh]),_:1}),l(),jh]),t("td",Hh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Eh,t("td",zh,[t("a",Oh,[l("路径总和 III"),e(s)])]),t("td",Lh,[t("a",qh,[l("[✓]"),e(s)])]),t("td",Nh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ch]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ph]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Th]),_:1})]),t("td",Vh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bh,t("td",Kh,[t("a",Uh,[l("序列化和反序列化二叉搜索树"),e(s)])]),Ah,t("td",Wh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Dh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Yh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Fh]),_:1}),l(),Jh]),t("td",Qh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rh,t("td",Sh,[t("a",Zh,[l("岛屿的周长"),e(s)])]),Gh,t("td",Xh,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[$h]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[t1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[e1]),_:1}),l(),l1]),t("td",o1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[n1,t("td",s1,[t("a",d1,[l("连接词"),e(s)])]),_1,t("td",c1,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[i1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[r1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[a1]),_:1}),l(),h1]),t("td",u1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f1,t("td",g1,[t("a",m1,[l("迷宫"),e(s)])]),y1,t("td",x1,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[p1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[b1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[k1]),_:1}),l(),M1]),t("td",I1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v1,t("td",w1,[t("a",j1,[l("迷宫 III"),e(s)])]),H1,t("td",E1,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[z1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[O1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[L1]),_:1}),l(),q1]),t("td",N1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[C1,t("td",P1,[t("a",T1,[l("二叉搜索树中的众数"),e(s)])]),V1,t("td",B1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[K1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[U1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[A1]),_:1}),l(),W1]),t("td",D1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Y1,t("td",F1,[t("a",J1,[l("迷宫 II"),e(s)])]),Q1,t("td",R1,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[S1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Z1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[G1]),_:1}),l(),X1]),t("td",$1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tu,t("td",eu,[t("a",lu,[l("出现次数最多的子树元素和"),e(s)])]),ou,t("td",nu,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[su]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[du]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[_u]),_:1}),l(),cu]),t("td",iu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ru,t("td",au,[t("a",hu,[l("找树左下角的值"),e(s)])]),uu,t("td",fu,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[mu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[yu]),_:1}),l(),xu]),t("td",pu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bu,t("td",ku,[t("a",Mu,[l("自由之路"),e(s)])]),t("td",Iu,[t("a",vu,[l("[✓]"),e(s)])]),t("td",wu,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ju]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Hu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Eu]),_:1}),l(),zu]),t("td",Ou,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lu,t("td",qu,[t("a",Nu,[l("在每个树行中找最大值"),e(s)])]),Cu,t("td",Pu,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Tu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Vu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Bu]),_:1}),l(),Ku]),t("td",Uu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Au,t("td",Wu,[t("a",Du,[l("扫雷游戏"),e(s)])]),Yu,t("td",Fu,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ju]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Qu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ru]),_:1}),l(),Su]),t("td",Zu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gu,t("td",Xu,[t("a",$u,[l("二叉搜索树的最小绝对差"),e(s)])]),t("td",tf,[t("a",ef,[l("[✓]"),e(s)])]),t("td",lf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[of]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[sf]),_:1}),l(),df]),t("td",_f,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[cf,t("td",rf,[t("a",af,[l("从字符串生成二叉树"),e(s)])]),hf,t("td",uf,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ff]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[mf]),_:1}),l(),yf]),t("td",xf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pf,t("td",bf,[t("a",kf,[l("把二叉搜索树转换为累加树"),e(s)])]),Mf,t("td",If,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[jf]),_:1}),l(),Hf]),t("td",Ef,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zf,t("td",Of,[t("a",Lf,[l("二叉树的直径"),e(s)])]),t("td",qf,[t("a",Nf,[l("[✓]"),e(s)])]),t("td",Cf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Pf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Tf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Vf]),_:1})]),t("td",Bf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Kf,t("td",Uf,[t("a",Af,[l("二叉树的边界"),e(s)])]),Wf,t("td",Df,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Yf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ff]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Jf]),_:1})]),t("td",Qf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rf,t("td",Sf,[t("a",Zf,[l("省份数量"),e(s)])]),Gf,t("td",Xf,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[$f]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[tg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[eg]),_:1}),l(),lg]),t("td",og,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ng,t("td",sg,[t("a",dg,[l("二叉树最长连续序列 II"),e(s)])]),_g,t("td",cg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ig]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[rg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[ag]),_:1})]),t("td",hg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ug,t("td",fg,[t("a",gg,[l("N 叉树的最大深度"),e(s)])]),t("td",mg,[t("a",yg,[l("[✓]"),e(s)])]),t("td",xg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[pg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[bg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[kg]),_:1})]),t("td",Mg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ig,t("td",vg,[t("a",wg,[l("二叉树的坡度"),e(s)])]),jg,t("td",Hg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Eg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[zg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Og]),_:1})]),t("td",Lg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[qg,t("td",Ng,[t("a",Cg,[l("数组嵌套"),e(s)])]),Pg,t("td",Tg,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Vg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Bg]),_:1})]),t("td",Kg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ug,t("td",Ag,[t("a",Wg,[l("另一棵树的子树"),e(s)])]),t("td",Dg,[t("a",Yg,[l("[✓]"),e(s)])]),t("td",Fg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Jg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Qg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Rg]),_:1}),l(),Sg]),t("td",Zg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Gg,t("td",Xg,[t("a",$g,[l("杀掉进程"),e(s)])]),tm,t("td",em,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[lm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[om]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[nm]),_:1}),l(),sm]),t("td",dm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_m,t("td",cm,[t("a",im,[l("N 叉树的前序遍历"),e(s)])]),t("td",rm,[t("a",am,[l("[✓]"),e(s)])]),t("td",hm,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[um]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[fm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gm]),_:1})]),t("td",mm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ym,t("td",xm,[t("a",pm,[l("N 叉树的后序遍历"),e(s)])]),t("td",bm,[t("a",km,[l("[✓]"),e(s)])]),t("td",Mm,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Im]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wm]),_:1})]),t("td",jm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Hm,t("td",Em,[t("a",zm,[l("根据二叉树创建字符串"),e(s)])]),Om,t("td",Lm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[qm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Nm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Cm]),_:1}),l(),Pm]),t("td",Tm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vm,t("td",Bm,[t("a",Km,[l("合并二叉树"),e(s)])]),t("td",Um,[t("a",Am,[l("[✓]"),e(s)])]),t("td",Wm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Dm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ym]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Fm]),_:1}),l(),Jm]),t("td",Qm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Rm,t("td",Sm,[t("a",Zm,[l("在二叉树中增加一行"),e(s)])]),Gm,t("td",Xm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$m]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[t2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[e2]),_:1}),l(),l2]),t("td",o2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n2,t("td",s2,[t("a",d2,[l("二叉树的层平均值"),e(s)])]),t("td",_2,[t("a",c2,[l("[✓]"),e(s)])]),t("td",i2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[r2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[a2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[h2]),_:1}),l(),u2]),t("td",f2,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[g2,t("td",m2,[t("a",y2,[l("设计搜索自动补全系统"),e(s)])]),x2,t("td",p2,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[b2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[k2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[M2]),_:1}),l(),I2]),t("td",v2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[w2,t("td",j2,[t("a",H2,[l("寻找重复的子树"),e(s)])]),E2,t("td",z2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[O2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[L2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[q2]),_:1}),l(),N2]),t("td",C2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P2,t("td",T2,[t("a",V2,[l("两数之和 IV - 输入二叉搜索树"),e(s)])]),B2,t("td",K2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[U2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[A2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[W2]),_:1}),l(),D2]),t("td",Y2,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[F2,t("td",J2,[t("a",Q2,[l("输出二叉树"),e(s)])]),R2,t("td",S2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Z2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[G2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[X2]),_:1}),l(),$2]),t("td",ty,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ey,t("td",ly,[t("a",oy,[l("二叉树最大宽度"),e(s)])]),t("td",ny,[t("a",sy,[l("[✓]"),e(s)])]),t("td",dy,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[cy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[iy]),_:1}),l(),ry]),t("td",ay,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hy,t("td",uy,[t("a",fy,[l("均匀树划分"),e(s)])]),gy,t("td",my,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[yy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[xy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[py]),_:1})]),t("td",by,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ky,t("td",My,[t("a",Iy,[l("路径总和 IV"),e(s)])]),vy,t("td",wy,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[jy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Hy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ey]),_:1}),l(),zy]),t("td",Oy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ly,t("td",qy,[t("a",Ny,[l("修剪二叉搜索树"),e(s)])]),Cy,t("td",Py,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ty]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Vy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[By]),_:1}),l(),Ky]),t("td",Uy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ay,t("td",Wy,[t("a",Dy,[l("二叉树中第二小的节点"),e(s)])]),Yy,t("td",Fy,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Jy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Qy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Ry]),_:1})]),t("td",Sy,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zy,t("td",Gy,[t("a",Xy,[l("灯泡开关 Ⅱ"),e(s)])]),$y,t("td",t3,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[e3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[l3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[o3]),_:1}),l(),n3]),t("td",s3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d3,t("td",_3,[t("a",c3,[l("实现一个魔法字典"),e(s)])]),i3,t("td",r3,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[a3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[h3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[u3]),_:1}),l(),f3]),t("td",g3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m3,t("td",y3,[t("a",x3,[l("冗余连接"),e(s)])]),p3,t("td",b3,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[k3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[M3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[I3]),_:1}),l(),v3]),t("td",w3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j3,t("td",H3,[t("a",E3,[l("冗余连接 II"),e(s)])]),z3,t("td",O3,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[L3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[q3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[N3]),_:1}),l(),C3]),t("td",P3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[T3,t("td",V3,[t("a",B3,[l("最长同值路径"),e(s)])]),K3,t("td",U3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[A3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[W3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[D3]),_:1})]),t("td",Y3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F3,t("td",J3,[t("a",Q3,[l("员工的重要性"),e(s)])]),R3,t("td",S3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Z3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[G3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[X3]),_:1}),l(),$3]),t("td",tx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ex,t("td",lx,[t("a",ox,[l("不同岛屿的数量"),e(s)])]),nx,t("td",sx,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[cx]),_:1}),l(),ix]),t("td",rx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ax,t("td",hx,[t("a",ux,[l("岛屿的最大面积"),e(s)])]),t("td",fx,[t("a",gx,[l("[✓]"),e(s)])]),t("td",mx,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[xx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[px]),_:1}),l(),bx]),t("td",kx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mx,t("td",Ix,[t("a",vx,[l("不同岛屿的数量 II"),e(s)])]),wx,t("td",jx,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Hx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ex]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[zx]),_:1}),l(),Ox]),t("td",Lx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qx,t("td",Nx,[t("a",Cx,[l("账户合并"),e(s)])]),Px,t("td",Tx,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Vx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Bx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Kx]),_:1}),l(),Ux]),t("td",Ax,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wx,t("td",Dx,[t("a",Yx,[l("图像渲染"),e(s)])]),Fx,t("td",Jx,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Qx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Rx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Sx]),_:1}),l(),Zx]),t("td",Gx,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xx,t("td",$x,[t("a",tp,[l("句子相似性 II"),e(s)])]),ep,t("td",lp,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[op]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[np]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[sp]),_:1}),l(),dp]),t("td",_p,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cp,t("td",ip,[t("a",rp,[l("二叉树最近的叶节点"),e(s)])]),ap,t("td",hp,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[up]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[gp]),_:1}),l(),mp]),t("td",yp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xp,t("td",pp,[t("a",bp,[l("网络延迟时间"),e(s)])]),kp,t("td",Mp,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ip]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[vp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[wp]),_:1}),l(),jp]),t("td",Hp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ep,t("td",zp,[t("a",Op,[l("隔离病毒"),e(s)])]),Lp,t("td",qp,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Np]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Cp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Pp]),_:1}),l(),Tp]),t("td",Vp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bp,t("td",Kp,[t("a",Up,[l("破解保险箱"),e(s)])]),Ap,t("td",Wp,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Dp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Yp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[Fp]),_:1})]),t("td",Jp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qp,t("td",Rp,[t("a",Sp,[l("金字塔转换矩阵"),e(s)])]),Zp,t("td",Gp,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[Xp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[$p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[tb]),_:1})]),t("td",eb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lb,t("td",ob,[t("a",nb,[l("情侣牵手"),e(s)])]),sb,t("td",db,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[_b]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[cb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ib]),_:1}),l(),rb]),t("td",ab,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hb,t("td",ub,[t("a",fb,[l("水位上升的泳池中游泳"),e(s)])]),gb,t("td",mb,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[xb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[pb]),_:1}),l(),bb]),t("td",kb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mb,t("td",Ib,[t("a",vb,[l("二叉搜索树节点最小距离"),e(s)])]),t("td",wb,[t("a",jb,[l("[✓]"),e(s)])]),t("td",Hb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Eb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[zb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ob]),_:1}),l(),Lb]),t("td",qb,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Nb,t("td",Cb,[t("a",Pb,[l("判断二分图"),e(s)])]),Tb,t("td",Vb,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Bb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Kb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Ub]),_:1}),l(),Ab]),t("td",Wb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Db,t("td",Yb,[t("a",Fb,[l("K 站中转内最便宜的航班"),e(s)])]),Jb,t("td",Qb,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Rb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Sb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Zb]),_:1}),l(),Gb]),t("td",Xb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$b,t("td",t0,[t("a",e0,[l("所有可能的路径"),e(s)])]),l0,t("td",o0,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[n0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[s0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[d0]),_:1}),l(),_0]),t("td",c0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i0,t("td",r0,[t("a",a0,[l("找到最终的安全状态"),e(s)])]),h0,t("td",u0,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[f0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[g0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[m0]),_:1}),l(),y0]),t("td",x0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p0,t("td",b0,[t("a",k0,[l("二叉树剪枝"),e(s)])]),M0,t("td",I0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[v0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[w0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[j0]),_:1})]),t("td",H0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E0,t("td",z0,[t("a",O0,[l("最大人工岛"),e(s)])]),L0,t("td",q0,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[N0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[C0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[P0]),_:1}),l(),T0]),t("td",V0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B0,t("td",K0,[t("a",U0,[l("树中距离之和"),e(s)])]),A0,t("td",W0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[D0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Y0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[F0]),_:1}),l(),J0]),t("td",Q0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[R0,t("td",S0,[t("a",Z0,[l("相似字符串组"),e(s)])]),G0,t("td",X0,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[$0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[t4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[e4]),_:1}),l(),l4]),t("td",o4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n4,t("td",s4,[t("a",d4,[l("钥匙和房间"),e(s)])]),_4,t("td",c4,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[i4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[r4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[a4]),_:1})]),t("td",h4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u4,t("td",f4,[t("a",g4,[l("喧闹和富有"),e(s)])]),m4,t("td",y4,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[x4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[p4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[b4]),_:1}),l(),k4]),t("td",M4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I4,t("td",v4,[t("a",w4,[l("二叉树中所有距离为 K 的结点"),e(s)])]),j4,t("td",H4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[E4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[z4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[O4]),_:1}),l(),L4]),t("td",q4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N4,t("td",C4,[t("a",P4,[l("具有所有最深节点的最小子树"),e(s)])]),T4,t("td",V4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[B4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[K4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[U4]),_:1}),l(),A4]),t("td",W4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D4,t("td",Y4,[t("a",F4,[l("叶子相似的树"),e(s)])]),J4,t("td",Q4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[R4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[S4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Z4]),_:1})]),t("td",G4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[X4,t("td",$4,[t("a",t8,[l("可能的二分法"),e(s)])]),e8,t("td",l8,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[o8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[n8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[s8]),_:1}),l(),d8]),t("td",_8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c8,t("td",i8,[t("a",r8,[l("递增顺序搜索树"),e(s)])]),a8,t("td",h8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[u8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[f8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[g8]),_:1}),l(),m8]),t("td",y8,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[x8,t("td",p8,[t("a",b8,[l("尽量减少恶意软件的传播"),e(s)])]),k8,t("td",M8,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[I8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[v8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[w8]),_:1}),l(),j8]),t("td",H8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E8,t("td",z8,[t("a",O8,[l("尽量减少恶意软件的传播 II"),e(s)])]),L8,t("td",q8,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[N8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[C8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[P8]),_:1}),l(),T8]),t("td",V8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B8,t("td",K8,[t("a",U8,[l("最短的桥"),e(s)])]),A8,t("td",W8,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[D8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Y8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[F8]),_:1}),l(),J8]),t("td",Q8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R8,t("td",S8,[t("a",Z8,[l("二叉搜索树的范围和"),e(s)])]),G8,t("td",X8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[t5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[e5]),_:1}),l(),l5]),t("td",o5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[n5,t("td",s5,[t("a",d5,[l("移除最多的同行或同列石头"),e(s)])]),_5,t("td",c5,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[i5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[r5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[a5]),_:1}),l(),h5]),t("td",u5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f5,t("td",g5,[t("a",m5,[l("翻转等价二叉树"),e(s)])]),y5,t("td",x5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[p5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[b5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[k5]),_:1})]),t("td",M5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I5,t("td",v5,[t("a",w5,[l("由斜杠划分区域"),e(s)])]),j5,t("td",H5,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[E5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[z5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[O5]),_:1}),l(),L5]),t("td",q5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N5,t("td",C5,[t("a",P5,[l("单值二叉树"),e(s)])]),T5,t("td",V5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[B5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[K5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[U5]),_:1}),l(),A5]),t("td",W5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[D5,t("td",Y5,[t("a",F5,[l("监控二叉树"),e(s)])]),J5,t("td",Q5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[R5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[S5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Z5]),_:1}),l(),G5]),t("td",X5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$5,t("td",t6,[t("a",e6,[l("翻转二叉树以匹配先序遍历"),e(s)])]),l6,t("td",o6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[n6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[s6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[d6]),_:1})]),t("td",_6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c6,t("td",i6,[t("a",r6,[l("在二叉树中分配硬币"),e(s)])]),a6,t("td",h6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[u6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[f6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[g6]),_:1})]),t("td",m6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y6,t("td",x6,[t("a",p6,[l("二叉树的垂序遍历"),e(s)])]),b6,t("td",k6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[M6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[I6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[v6]),_:1}),l(),w6]),t("td",j6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H6,t("td",E6,[t("a",z6,[l("从叶结点开始的最小字符串"),e(s)])]),O6,t("td",L6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[q6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[N6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[C6]),_:1}),l(),P6]),t("td",T6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[V6,t("td",B6,[t("a",K6,[l("二叉树的堂兄弟节点"),e(s)])]),U6,t("td",A6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[W6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[D6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Y6]),_:1}),l(),F6]),t("td",J6,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Q6,t("td",R6,[t("a",S6,[l("飞地的数量"),e(s)])]),Z6,t("td",G6,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[X6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[t7]),_:1}),l(),e7]),t("td",l7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o7,t("td",n7,[t("a",s7,[l("从根到叶的二进制数之和"),e(s)])]),d7,t("td",_7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[c7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[i7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[r7]),_:1})]),t("td",a7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[h7,t("td",u7,[t("a",f7,[l("节点与其祖先之间的最大差值"),e(s)])]),g7,t("td",m7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[y7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[x7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[p7]),_:1})]),t("td",b7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[k7,t("td",M7,[t("a",I7,[l("从先序遍历还原二叉树"),e(s)])]),v7,t("td",w7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[j7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[H7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[E7]),_:1}),l(),z7]),t("td",O7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[L7,t("td",q7,[t("a",N7,[l("边界着色"),e(s)])]),C7,t("td",P7,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[T7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[V7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[B7]),_:1}),l(),K7]),t("td",U7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A7,t("td",W7,[t("a",D7,[l("逃离大迷宫"),e(s)])]),Y7,t("td",F7,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[J7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Q7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[R7]),_:1}),l(),S7]),t("td",Z7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[G7,t("td",X7,[t("a",$7,[l("从二叉搜索树到更大和树"),e(s)])]),t9,t("td",e9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[l9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[o9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[n9]),_:1}),l(),s9]),t("td",d9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_9,t("td",c9,[t("a",i9,[l("不邻接植花"),e(s)])]),r9,t("td",a9,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[h9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[u9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[f9]),_:1})]),t("td",g9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m9,t("td",y9,[t("a",x9,[l("根到叶路径上的不足节点"),e(s)])]),p9,t("td",b9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[k9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[M9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[I9]),_:1})]),t("td",v9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w9,t("td",j9,[t("a",H9,[l("得分最高的路径"),e(s)])]),E9,t("td",z9,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[O9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[L9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[q9]),_:1}),l(),N9]),t("td",C9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P9,t("td",T9,[t("a",V9,[l("删点成林"),e(s)])]),B9,t("td",K9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[U9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[A9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[W9]),_:1}),l(),D9]),t("td",Y9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F9,t("td",J9,[t("a",Q9,[l("子树的最大平均值"),e(s)])]),R9,t("td",S9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Z9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[G9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[X9]),_:1})]),t("td",$9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tk,t("td",ek,[t("a",lk,[l("最深叶节点的最近公共祖先"),e(s)])]),ok,t("td",nk,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[sk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_k]),_:1}),l(),ck]),t("td",ik,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rk,t("td",ak,[t("a",hk,[l("二叉树着色游戏"),e(s)])]),uk,t("td",fk,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[mk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[yk]),_:1})]),t("td",xk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pk,t("td",bk,[t("a",kk,[l("最大层内元素和"),e(s)])]),Mk,t("td",Ik,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[jk]),_:1}),l(),Hk]),t("td",Ek,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zk,t("td",Ok,[t("a",Lk,[l("查找集群内的关键连接"),e(s)])]),qk,t("td",Nk,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ck]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Pk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[Tk]),_:1})]),t("td",Vk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bk,t("td",Kk,[t("a",Uk,[l("交换字符串中的元素"),e(s)])]),Ak,t("td",Wk,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Dk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Yk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Fk]),_:1}),l(),Jk]),t("td",Qk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rk,t("td",Sk,[t("a",Zk,[l("项目管理"),e(s)])]),Gk,t("td",Xk,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[$k]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[tM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[eM]),_:1}),l(),lM]),t("td",oM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nM,t("td",sM,[t("a",dM,[l("查找两棵二叉搜索树之和"),e(s)])]),_M,t("td",cM,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[iM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[rM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[aM]),_:1}),l(),hM]),t("td",uM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fM,t("td",gM,[t("a",mM,[l("删除子文件夹"),e(s)])]),yM,t("td",xM,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[pM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[bM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[kM]),_:1}),l(),MM]),t("td",IM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vM,t("td",wM,[t("a",jM,[l("网络爬虫"),e(s)])]),HM,t("td",EM,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[zM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[OM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[LM]),_:1}),l(),qM]),t("td",NM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CM,t("td",PM,[t("a",TM,[l("多线程网页爬虫"),e(s)])]),VM,t("td",BM,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[KM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[UM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[AM]),_:1})]),t("td",WM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DM,t("td",YM,[t("a",FM,[l("树的直径"),e(s)])]),JM,t("td",QM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[RM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[SM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ZM]),_:1}),l(),GM]),t("td",XM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$M,t("td",tI,[t("a",eI,[l("统计封闭岛屿的数目"),e(s)])]),lI,t("td",oI,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[sI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[dI]),_:1}),l(),_I]),t("td",cI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iI,t("td",rI,[t("a",aI,[l("最小公共区域"),e(s)])]),hI,t("td",uI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[fI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[mI]),_:1}),l(),yI]),t("td",xI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pI,t("td",bI,[t("a",kI,[l("在受污染的二叉树中查找元素"),e(s)])]),MI,t("td",II,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[jI]),_:1}),l(),HI]),t("td",EI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zI,t("td",OI,[t("a",LI,[l("统计参与通信的服务器"),e(s)])]),qI,t("td",NI,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[CI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[PI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[TI]),_:1}),l(),VI]),t("td",BI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KI,t("td",UI,[t("a",AI,[l("删除树节点"),e(s)])]),WI,t("td",DI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[YI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[FI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[JI]),_:1}),l(),QI]),t("td",RI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SI,t("td",ZI,[t("a",GI,[l("层数最深叶子节点的和"),e(s)])]),XI,t("td",$I,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[tv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ev]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[lv]),_:1}),l(),ov]),t("td",nv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sv,t("td",dv,[t("a",_v,[l("两棵二叉搜索树中的所有元素"),e(s)])]),cv,t("td",iv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[rv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[av]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[hv]),_:1}),l(),uv]),t("td",fv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gv,t("td",mv,[t("a",yv,[l("跳跃游戏 III"),e(s)])]),xv,t("td",pv,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[bv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[kv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Mv]),_:1})]),t("td",Iv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vv,t("td",wv,[t("a",jv,[l("祖父节点值为偶数的节点和"),e(s)])]),Hv,t("td",Ev,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[zv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ov]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Lv]),_:1}),l(),qv]),t("td",Nv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cv,t("td",Pv,[t("a",Tv,[l("连通网络的操作次数"),e(s)])]),Vv,t("td",Bv,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Kv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Uv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Av]),_:1}),l(),Wv]),t("td",Dv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yv,t("td",Fv,[t("a",Jv,[l("删除给定值的叶子节点"),e(s)])]),Qv,t("td",Rv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Sv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Zv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Gv]),_:1})]),t("td",Xv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$v,t("td",tw,[t("a",ew,[l("分裂二叉树的最大乘积"),e(s)])]),lw,t("td",ow,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[nw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[sw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[dw]),_:1})]),t("td",_w,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cw,t("td",iw,[t("a",rw,[l("验证二叉树"),e(s)])]),aw,t("td",hw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[uw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[gw]),_:1}),l(),mw]),t("td",yw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xw,t("td",pw,[t("a",bw,[l("二叉树中的链表"),e(s)])]),kw,t("td",Mw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Iw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[vw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[ww]),_:1}),l(),jw]),t("td",Hw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ew,t("td",zw,[t("a",Ow,[l("二叉树中的最长交错路径"),e(s)])]),Lw,t("td",qw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Nw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Cw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Pw]),_:1}),l(),Tw]),t("td",Vw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bw,t("td",Kw,[t("a",Uw,[l("二叉搜索子树的最大键值和"),e(s)])]),Aw,t("td",Ww,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Dw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Yw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Fw]),_:1}),l(),Jw]),t("td",Qw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rw,t("td",Sw,[t("a",Zw,[l("通知所有员工所需的时间"),e(s)])]),Gw,t("td",Xw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$w]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[tj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ej]),_:1})]),t("td",lj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oj,t("td",nj,[t("a",sj,[l("T 秒后青蛙的位置"),e(s)])]),dj,t("td",_j,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[cj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ij]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[rj]),_:1}),l(),aj]),t("td",hj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uj,t("td",fj,[t("a",gj,[l("找出克隆二叉树中的相同节点"),e(s)])]),mj,t("td",yj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[xj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[pj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[bj]),_:1}),l(),kj]),t("td",Mj,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ij,t("td",vj,[t("a",wj,[l("将二叉搜索树变平衡"),e(s)])]),jj,t("td",Hj,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Ej]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[zj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Oj]),_:1}),l(),Lj]),t("td",qj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nj,t("td",Cj,[t("a",Pj,[l("检查网格中是否存在有效路径"),e(s)])]),Tj,t("td",Vj,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Bj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Kj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Uj]),_:1}),l(),Aj]),t("td",Wj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dj,t("td",Yj,[t("a",Fj,[l("判断给定的序列是否是二叉树从根到叶的路径"),e(s)])]),Jj,t("td",Qj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Rj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Sj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Zj]),_:1}),l(),Gj]),t("td",Xj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$j,t("td",tH,[t("a",eH,[l("收集树上所有苹果的最少时间"),e(s)])]),lH,t("td",oH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[nH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[sH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[dH]),_:1}),l(),_H]),t("td",cH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iH,t("td",rH,[t("a",aH,[l("统计二叉树中好节点的数目"),e(s)])]),hH,t("td",uH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[fH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[mH]),_:1}),l(),yH]),t("td",xH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pH,t("td",bH,[t("a",kH,[l("二叉树中的伪回文路径"),e(s)])]),MH,t("td",IH,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[vH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[wH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[jH]),_:1}),l(),HH]),t("td",EH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zH,t("td",OH,[t("a",LH,[l("课程表 IV"),e(s)])]),qH,t("td",NH,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[CH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[PH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[TH]),_:1}),l(),VH]),t("td",BH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KH,t("td",UH,[t("a",AH,[l("重新规划路线"),e(s)])]),WH,t("td",DH,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[YH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[FH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[JH]),_:1})]),t("td",QH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[RH,t("td",SH,[t("a",ZH,[l("寻找所有的独生节点"),e(s)])]),GH,t("td",XH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$H]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[tE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[eE]),_:1}),l(),lE]),t("td",oE,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[nE,t("td",sE,[t("a",dE,[l("树节点的第 K 个祖先"),e(s)])]),_E,t("td",cE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[iE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[rE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[aE]),_:1}),l(),hE]),t("td",uE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fE,t("td",gE,[t("a",mE,[l("克隆含随机指针的二叉树"),e(s)])]),yE,t("td",xE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[pE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[bE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[kE]),_:1}),l(),ME]),t("td",IE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vE,t("td",wE,[t("a",jE,[l("克隆 N 叉树"),e(s)])]),HE,t("td",EE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[zE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[OE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[LE]),_:1}),l(),qE]),t("td",NE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CE,t("td",PE,[t("a",TE,[l("找到 N 叉树的根节点"),e(s)])]),VE,t("td",BE,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[KE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[UE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[AE]),_:1}),l(),WE]),t("td",DE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YE,t("td",FE,[t("a",JE,[l("移动 N 叉树的子树"),e(s)])]),QE,t("td",RE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[SE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ZE]),_:1})]),t("td",GE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XE,t("td",$E,[t("a",tz,[l("子树中标签相同的节点数"),e(s)])]),ez,t("td",lz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[oz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[sz]),_:1}),l(),dz]),t("td",_z,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cz,t("td",iz,[t("a",rz,[l("N 叉树的直径"),e(s)])]),t("td",az,[t("a",hz,[l("[✓]"),e(s)])]),t("td",uz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[fz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gz]),_:1})]),t("td",mz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yz,t("td",xz,[t("a",pz,[l("好叶子节点对的数量"),e(s)])]),bz,t("td",kz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Mz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Iz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[vz]),_:1})]),t("td",wz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jz,t("td",Hz,[t("a",Ez,[l("二维网格图中探测环"),e(s)])]),zz,t("td",Oz,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Lz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[qz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Nz]),_:1}),l(),Cz]),t("td",Pz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tz,t("td",Vz,[t("a",Bz,[l("使陆地分离的最少天数"),e(s)])]),Kz,t("td",Uz,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Az]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Wz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Dz]),_:1}),l(),Yz]),t("td",Fz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jz,t("td",Qz,[t("a",Rz,[l("王位继承顺序"),e(s)])]),Sz,t("td",Zz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Gz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Xz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[$z]),_:1}),l(),tO]),t("td",eO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lO,t("td",oO,[t("a",nO,[l("检查两棵二叉表达式树是否等价"),e(s)])]),sO,t("td",dO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_O]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[cO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[iO]),_:1}),l(),rO]),t("td",aO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hO,t("td",uO,[t("a",fO,[l("执行操作后字典序最小的字符串"),e(s)])]),gO,t("td",mO,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[xO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[pO]),_:1}),l(),bO]),t("td",kO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MO,t("td",IO,[t("a",vO,[l("最小体力消耗路径"),e(s)])]),wO,t("td",jO,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[HO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[EO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[zO]),_:1}),l(),OO]),t("td",LO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qO,t("td",NO,[t("a",CO,[l("二叉树的最近公共祖先 II"),e(s)])]),PO,t("td",TO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[VO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[BO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[KO]),_:1})]),t("td",UO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AO,t("td",WO,[t("a",DO,[l("纠正二叉树"),e(s)])]),YO,t("td",FO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[JO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[QO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[RO]),_:1}),l(),SO]),t("td",ZO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GO,t("td",XO,[t("a",$O,[l("改变二叉树的根节点"),e(s)])]),tL,t("td",eL,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[lL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[oL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[nL]),_:1})]),t("td",sL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dL,t("td",_L,[t("a",cL,[l("二叉树的最近公共祖先 IV"),e(s)])]),iL,t("td",rL,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[aL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[hL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[uL]),_:1}),l(),fL]),t("td",gL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mL,t("td",yL,[t("a",xL,[l("执行交换操作后的最小汉明距离"),e(s)])]),pL,t("td",bL,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[kL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[ML]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[IL]),_:1})]),t("td",vL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wL,t("td",jL,[t("a",HL,[l("找到二叉树中的距离"),e(s)])]),EL,t("td",zL,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[OL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[LL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[qL]),_:1}),l(),NL]),t("td",CL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PL,t("td",TL,[t("a",VL,[l("从相邻元素对还原数组"),e(s)])]),BL,t("td",KL,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[UL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[AL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[WL]),_:1})]),t("td",DL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YL,t("td",FL,[t("a",JL,[l("互质树"),e(s)])]),QL,t("td",RL,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[SL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ZL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[GL]),_:1}),l(),XL]),t("td",$L,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tq,t("td",eq,[t("a",lq,[l("未知网格中的最短路径"),e(s)])]),oq,t("td",nq,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[sq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[dq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[_q]),_:1}),l(),cq]),t("td",iq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rq,t("td",aq,[t("a",hq,[l("隐藏网格下的最小消耗路径"),e(s)])]),uq,t("td",fq,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[mq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[yq]),_:1}),l(),xq]),t("td",pq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bq,t("td",kq,[t("a",Mq,[l("最多邀请的个数"),e(s)])]),Iq,t("td",vq,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[jq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Hq]),_:1}),l(),Eq]),t("td",zq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oq,t("td",Lq,[t("a",qq,[l("包含所有前缀的最长单词"),e(s)])]),Nq,t("td",Cq,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Pq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Tq]),_:1})]),t("td",Vq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bq,t("td",Kq,[t("a",Uq,[l("统计子岛屿"),e(s)])]),Aq,t("td",Wq,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Dq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Yq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Fq]),_:1}),l(),Jq]),t("td",Qq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rq,t("td",Sq,[t("a",Zq,[l("合并多棵二叉搜索树"),e(s)])]),Gq,t("td",Xq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[tN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[eN]),_:1}),l(),lN]),t("td",oN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nN,t("td",sN,[t("a",dN,[l("查询最大基因差"),e(s)])]),_N,t("td",cN,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[iN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[rN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[aN]),_:1}),l(),hN]),t("td",uN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fN,t("td",gN,[t("a",mN,[l("你能穿过矩阵的最后一天"),e(s)])]),yN,t("td",xN,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[pN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[bN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[kN]),_:1}),l(),MN]),t("td",IN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vN,t("td",wN,[t("a",jN,[l("寻找图中是否存在路径"),e(s)])]),HN,t("td",EN,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[zN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ON]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[LN]),_:1}),l(),qN]),t("td",NN,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[CN,t("td",PN,[t("a",TN,[l("值等于子节点值之和的节点数量"),e(s)])]),VN,t("td",BN,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[KN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[UN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[AN]),_:1})]),t("td",WN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DN,t("td",YN,[t("a",FN,[l("找到所有的农场组"),e(s)])]),JN,t("td",QN,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[RN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[SN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ZN]),_:1}),l(),GN]),t("td",XN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$N,t("td",tC,[t("a",eC,[l("树上的操作"),e(s)])]),lC,t("td",oC,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[nC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[sC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[dC]),_:1}),l(),_C]),t("td",cC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iC,t("td",rC,[t("a",aC,[l("每棵子树内缺失的最小基因值"),e(s)])]),hC,t("td",uC,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[fC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[mC]),_:1}),l(),yC]),t("td",xC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pC,t("td",bC,[t("a",kC,[l("统计最高分的节点数目"),e(s)])]),MC,t("td",IC,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[jC]),_:1}),l(),HC]),t("td",EC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zC,t("td",OC,[t("a",LC,[l("找出知晓秘密的所有专家"),e(s)])]),qC,t("td",NC,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[CC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[PC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[TC]),_:1}),l(),VC]),t("td",BC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[KC,t("td",UC,[t("a",AC,[l("从二叉树一个节点到另一个节点每一步的方向"),e(s)])]),WC,t("td",DC,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[YC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[FC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[JC]),_:1}),l(),QC]),t("td",RC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SC,t("td",ZC,[t("a",GC,[l("合法重新排列数对"),e(s)])]),XC,t("td",$C,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[tP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[eP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[lP]),_:1})]),t("td",oP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nP,t("td",sP,[t("a",dP,[l("引爆最多的炸弹"),e(s)])]),_P,t("td",cP,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[iP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[rP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[aP]),_:1}),l(),hP]),t("td",uP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fP,t("td",gP,[t("a",mP,[l("参加会议的最多员工数"),e(s)])]),yP,t("td",xP,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[pP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[bP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[kP]),_:1})]),t("td",MP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[IP,t("td",vP,[t("a",wP,[l("有向无环图中一个节点的所有祖先"),e(s)])]),jP,t("td",HP,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[EP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[zP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[OP]),_:1}),l(),LP]),t("td",qP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NP,t("td",CP,[t("a",PP,[l("无向图中到环的距离"),e(s)])]),TP,t("td",VP,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[BP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[KP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[UP]),_:1}),l(),AP]),t("td",WP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[DP,t("td",YP,[t("a",FP,[l("相邻字符不同的最长路径"),e(s)])]),JP,t("td",QP,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[RP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[SP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[ZP]),_:1}),l(),GP]),t("td",XP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$P,t("td",tT,[t("a",eT,[l("统计值等于子树平均值的节点数"),e(s)])]),lT,t("td",oT,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[nT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[sT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[dT]),_:1})]),t("td",_T,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cT,t("td",iT,[t("a",rT,[l("树中最接近路径的节点"),e(s)])]),aT,t("td",hT,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[uT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[gT]),_:1}),l(),mT]),t("td",yT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xT,t("td",pT,[t("a",bT,[l("检查方程中的矛盾之处"),e(s)])]),kT,t("td",MT,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[IT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[vT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[wT]),_:1}),l(),jT]),t("td",HT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ET,t("td",zT,[t("a",OT,[l("二叉树中得到结果所需的最少翻转次数"),e(s)])]),LT,t("td",qT,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[NT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[CT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[PT]),_:1}),l(),TT]),t("td",VT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[BT,t("td",KT,[t("a",UT,[l("统计无向图中无法互相到达点对数"),e(s)])]),AT,t("td",WT,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[DT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[YT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[FT]),_:1}),l(),JT]),t("td",QT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[RT,t("td",ST,[t("a",ZT,[l("从树中删除边的最小分数"),e(s)])]),GT,t("td",XT,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[$T]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[tV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[eV]),_:1}),l(),lV]),t("td",oV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nV,t("td",sV,[t("a",dV,[l("网格图中递增路径的数目"),e(s)])]),_V,t("td",cV,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[iV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[rV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[aV]),_:1}),l(),hV]),t("td",uV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fV,t("td",gV,[t("a",mV,[l("计算布尔二叉树的值"),e(s)])]),yV,t("td",xV,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[pV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[bV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[kV]),_:1})]),t("td",MV,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[IV,t("td",vV,[t("a",wV,[l("找到离给定两个节点最近的节点"),e(s)])]),jV,t("td",HV,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[EV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[zV]),_:1})]),t("td",OV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LV,t("td",qV,[t("a",NV,[l("图中的最长环"),e(s)])]),CV,t("td",PV,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[TV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[VV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[BV]),_:1})]),t("td",KV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[UV,t("td",AV,[t("a",WV,[l("受限条件下可到达节点的数目"),e(s)])]),DV,t("td",YV,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[FV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[JV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[QV]),_:1}),l(),RV]),t("td",SV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZV,t("td",GV,[t("a",XV,[l("选择边来最大化树的得分"),e(s)])]),$V,t("td",tB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[eB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[lB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[oB]),_:1})]),t("td",nB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sB,t("td",dB,[t("a",_B,[l("感染二叉树需要的总时间"),e(s)])]),cB,t("td",iB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[rB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[aB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[hB]),_:1}),l(),uB]),t("td",fB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gB,t("td",mB,[t("a",yB,[l("反转二叉树的奇数层"),e(s)])]),xB,t("td",pB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[bB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[kB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[MB]),_:1}),l(),IB]),t("td",vB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wB,t("td",jB,[t("a",HB,[l("创建价值相同的连通块"),e(s)])]),EB,t("td",zB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[OB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[LB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[qB]),_:1}),l(),NB]),t("td",CB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[PB,t("td",TB,[t("a",VB,[l("值为 1 的节点数"),e(s)])]),BB,t("td",KB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[UB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[AB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[WB]),_:1}),l(),DB]),t("td",YB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FB,t("td",JB,[t("a",QB,[l("移除子树后的二叉树高度"),e(s)])]),RB,t("td",SB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ZB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[GB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[XB]),_:1}),l(),$B]),t("td",tK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eK,t("td",lK,[t("a",oK,[l("树上最大得分和路径"),e(s)])]),nK,t("td",sK,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[dK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[_K]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[cK]),_:1}),l(),iK]),t("td",rK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aK,t("td",hK,[t("a",uK,[l("二叉搜索树最近节点查询"),e(s)])]),fK,t("td",gK,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[mK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[xK]),_:1}),l(),pK]),t("td",bK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kK,t("td",MK,[t("a",IK,[l("到达首都的最少油耗"),e(s)])]),vK,t("td",wK,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[jK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[HK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[EK]),_:1}),l(),zK]),t("td",OK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LK,t("td",qK,[t("a",NK,[l("两个不重叠子树的最大异或值"),e(s)])]),CK,t("td",PK,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[TK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[VK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[BK]),_:1}),l(),KK]),t("td",UK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[AK,t("td",WK,[t("a",DK,[l("两个城市间路径的最小分数"),e(s)])]),YK,t("td",FK,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[JK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[QK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[RK]),_:1}),l(),SK]),t("td",ZK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GK,t("td",XK,[t("a",$K,[l("最大价值和与最小价值和的差值"),e(s)])]),tU,t("td",eU,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[lU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[oU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[nU]),_:1}),l(),sU]),t("td",dU,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_U,t("td",cU,[t("a",iU,[l("二进制矩阵中翻转最多一次使路径不连通"),e(s)])]),rU,t("td",aU,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[hU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[uU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[fU]),_:1}),l(),gU]),t("td",mU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yU,t("td",xU,[t("a",pU,[l("统计可能的树根数目"),e(s)])]),bU,t("td",kU,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[MU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[IU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[vU]),_:1}),l(),wU]),t("td",jU,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[HU,t("td",EU,[t("a",zU,[l("检查骑士巡视方案"),e(s)])]),OU,t("td",LU,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[NU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[CU]),_:1}),l(),PU]),t("td",TU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VU,t("td",BU,[t("a",KU,[l("二叉树的堂兄弟节点 II"),e(s)])]),UU,t("td",AU,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[WU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[DU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[YU]),_:1}),l(),FU]),t("td",JU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[QU,t("td",RU,[t("a",SU,[l("最小化旅行的价格总和"),e(s)])]),ZU,t("td",GU,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[XU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[$U]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[tA]),_:1}),l(),eA]),t("td",lA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oA,t("td",nA,[t("a",sA,[l("网格图中鱼的最大数目"),e(s)])]),dA,t("td",_A,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[cA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[iA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[rA]),_:1}),l(),aA]),t("td",hA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uA,t("td",fA,[t("a",gA,[l("统计完全连通分量的数量"),e(s)])]),mA,t("td",yA,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[xA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[pA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[bA]),_:1})]),t("td",kA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MA,t("td",IA,[t("a",vA,[l("从 Rope 树中提取第 K 个字符"),e(s)])]),wA,t("td",jA,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[HA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[EA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[zA]),_:1})]),t("td",OA,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[LA,t("td",qA,[t("a",NA,[l("数组是否表示某二叉树的前序遍历"),e(s)])]),CA,t("td",PA,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[TA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[VA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[BA]),_:1}),l(),KA]),t("td",UA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AA,t("td",WA,[t("a",DA,[l("特殊二叉树的高度"),e(s)])]),YA,t("td",FA,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[JA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[QA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[RA]),_:1}),l(),SA]),t("td",ZA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GA,t("td",XA,[t("a",$A,[l("树中可以形成回文的路径数"),e(s)])]),tW,t("td",eW,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[lW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[oW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nW]),_:1}),l(),sW]),t("td",dW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_W,t("td",cW,[t("a",iW,[l("计算足够大的节点数"),e(s)])]),rW,t("td",aW,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[hW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[uW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[fW]),_:1}),l(),gW]),t("td",mW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yW,t("td",xW,[t("a",pW,[l("所有单元格的远离程度之和"),e(s)])]),bW,t("td",kW,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[MW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[IW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[vW]),_:1}),l(),wW]),t("td",jW,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HW,t("td",EW,[t("a",zW,[l("可以到达每一个节点的最少边反转次数"),e(s)])]),OW,t("td",LW,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[NW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[CW]),_:1}),l(),PW]),t("td",TW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[VW,t("td",BW,[t("a",KW,[l("统计树中的合法路径数目"),e(s)])]),UW,t("td",AW,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[WW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[DW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[YW]),_:1}),l(),FW]),t("td",JW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QW,t("td",RW,[t("a",SW,[l("可以被 K 整除连通块的最大数目"),e(s)])]),ZW,t("td",GW,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[XW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[$W]),_:1})]),t("td",tD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eD,t("td",lD,[t("a",oD,[l("收集所有金币可获得的最大积分"),e(s)])]),nD,t("td",sD,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[dD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_D]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[cD]),_:1}),l(),iD]),t("td",rD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[aD,t("td",hD,[t("a",uD,[l("在树上执行操作以后得到的最大分数"),e(s)])]),fD,t("td",gD,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[mD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[xD]),_:1})]),t("td",pD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bD,t("td",kD,[t("a",MD,[l("树中每个节点放置的金币数目"),e(s)])]),ID,t("td",vD,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[wD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[jD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[HD]),_:1}),l(),ED]),t("td",zD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[OD,t("td",LD,[t("a",qD,[l("相同颜色的最大子树"),e(s)])]),ND,t("td",CD,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[PD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[TD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[VD]),_:1}),l(),BD]),t("td",KD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[UD,t("td",AD,[t("a",WD,[l("在带权树网络中统计可连接服务器对数目"),e(s)])]),DD,t("td",YD,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[FD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[JD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[QD]),_:1})]),t("td",RD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SD,t("td",ZD,[t("a",GD,[l("最短路径中的边"),e(s)])]),XD,t("td",$D,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[tY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[eY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[lY]),_:1}),l(),oY]),t("td",nY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sY,t("td",dY,[t("a",_Y,[l("找到具有最小和的树的层数"),e(s)])]),cY,t("td",iY,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[rY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[aY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[hY]),_:1}),l(),uY]),t("td",fY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gY,t("td",mY,[t("a",yY,[l("合并两棵树后的最小直径"),e(s)])]),xY,t("td",pY,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[bY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[kY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[MY]),_:1}),l(),IY]),t("td",vY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wY,t("td",jY,[t("a",HY,[l("判断矩形的两个角落是否可达"),e(s)])]),EY,t("td",zY,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[OY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[LY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[qY]),_:1}),l(),NY]),t("td",CY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[PY,t("td",TY,[t("a",VY,[l("标记所有节点需要的时间"),e(s)])]),BY,t("td",KY,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[UY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[AY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[WY]),_:1}),l(),DY]),t("td",YY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[FY,t("td",JY,[t("a",QY,[l("统计好节点的数目"),e(s)])]),RY,t("td",SY,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ZY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[GY]),_:1})]),t("td",XY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$Y,t("td",tF,[t("a",eF,[l("移除可疑的方法"),e(s)])]),lF,t("td",oF,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[sF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[dF]),_:1})]),t("td",_F,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cF,t("td",iF,[t("a",rF,[l("Find the Last Marked Nodes in Tree"),e(s)])]),aF,t("td",hF,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[uF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fF]),_:1})]),t("td",gF,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mF,t("td",yF,[t("a",xF,[l("传递信息"),e(s)])]),pF,t("td",bF,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[kF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[MF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[IF]),_:1}),l(),vF]),t("td",wF,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[jF,t("td",HF,[t("a",EF,[l("二叉树任务调度"),e(s)])]),zF,t("td",OF,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[LF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[NF]),_:1}),l(),CF]),t("td",PF,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[TF,t("td",VF,[t("a",BF,[l("追逐游戏"),e(s)])]),KF,t("td",UF,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[AF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[WF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[DF]),_:1}),l(),YF]),t("td",FF,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[JF,t("td",QF,[t("a",RF,[l("变换的迷宫"),e(s)])]),SF,t("td",ZF,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[GF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[XF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[$F]),_:1}),l(),tJ]),t("td",eJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lJ,t("td",oJ,[t("a",nJ,[l("开幕式焰火"),e(s)])]),sJ,t("td",dJ,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_J]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[cJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[iJ]),_:1}),l(),rJ]),t("td",aJ,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[hJ,t("td",uJ,[t("a",fJ,[l("自行车炫技赛场"),e(s)])]),gJ,t("td",mJ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[xJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[pJ]),_:1}),l(),bJ]),t("td",kJ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MJ,t("td",IJ,[t("a",vJ,[l("弹珠游戏"),e(s)])]),wJ,t("td",jJ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[HJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[EJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[zJ]),_:1}),l(),OJ]),t("td",LJ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qJ,t("td",NJ,[t("a",CJ,[l("二叉树灯饰"),e(s)])]),PJ,t("td",TJ,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[VJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[BJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[KJ]),_:1}),l(),UJ]),t("td",AJ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[WJ,t("td",DJ,[t("a",YJ,[l("装饰树"),e(s)])]),FJ,t("td",JJ,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[QJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[RJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[SJ]),_:1}),l(),ZJ]),t("td",GJ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[XJ,t("td",$J,[t("a",tQ,[l("主题空间"),e(s)])]),eQ,t("td",lQ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[oQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[nQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[sQ]),_:1}),l(),dQ]),t("td",_Q,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cQ,t("td",iQ,[t("a",rQ,[l("机器人的运动范围"),e(s)])]),t("td",aQ,[t("a",hQ,[l("[✓]"),e(s)])]),t("td",uQ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[gQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[mQ]),_:1})]),t("td",yQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xQ,t("td",pQ,[t("a",bQ,[l("树的子结构"),e(s)])]),t("td",kQ,[t("a",MQ,[l("[✓]"),e(s)])]),t("td",IQ,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[jQ]),_:1})]),t("td",HQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EQ,t("td",zQ,[t("a",OQ,[l("二叉树的镜像"),e(s)])]),t("td",LQ,[t("a",qQ,[l("[✓]"),e(s)])]),t("td",NQ,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[CQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[PQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[TQ]),_:1}),l(),VQ]),t("td",BQ,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[KQ,t("td",UQ,[t("a",AQ,[l("对称的二叉树"),e(s)])]),t("td",WQ,[t("a",DQ,[l("[✓]"),e(s)])]),t("td",YQ,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[FQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[JQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[QQ]),_:1}),l(),RQ]),t("td",SQ,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ZQ,t("td",GQ,[t("a",XQ,[l("二叉树中和为某一值的路径"),e(s)])]),t("td",$Q,[t("a",tR,[l("[✓]"),e(s)])]),t("td",eR,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[lR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[oR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[nR]),_:1}),l(),sR]),t("td",dR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_R,t("td",cR,[t("a",iR,[l("二叉搜索树与双向链表"),e(s)])]),t("td",rR,[t("a",aR,[l("[✓]"),e(s)])]),t("td",hR,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[uR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[fR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gR]),_:1}),l(),mR]),t("td",yR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xR,t("td",pR,[t("a",bR,[l("序列化二叉树"),e(s)])]),t("td",kR,[t("a",MR,[l("[✓]"),e(s)])]),t("td",IR,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[jR]),_:1}),l(),HR]),t("td",ER,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zR,t("td",OR,[t("a",LR,[l("二叉搜索树的第k大节点"),e(s)])]),t("td",qR,[t("a",NR,[l("[✓]"),e(s)])]),t("td",CR,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[PR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[TR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[VR]),_:1}),l(),BR]),t("td",KR,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[UR,t("td",AR,[t("a",WR,[l("二叉树的深度"),e(s)])]),t("td",DR,[t("a",YR,[l("[✓]"),e(s)])]),t("td",FR,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[JR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[QR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[RR]),_:1}),l(),SR]),t("td",ZR,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[GR,t("td",XR,[t("a",$R,[l("平衡二叉树"),e(s)])]),tS,t("td",eS,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[lS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[oS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[nS]),_:1})]),t("td",sS,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[dS,t("td",_S,[t("a",cS,[l("二叉搜索树的最近公共祖先"),e(s)])]),iS,t("td",rS,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[aS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[hS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[uS]),_:1}),l(),fS]),t("td",gS,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[mS,t("td",yS,[t("a",xS,[l("二叉树的最近公共祖先"),e(s)])]),pS,t("td",bS,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[kS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[MS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[IS]),_:1})]),t("td",vS,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wS,t("td",jS,[t("a",HS,[l("岛屿的最大面积"),e(s)])]),ES,t("td",zS,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[OS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[LS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[qS]),_:1}),l(),NS]),t("td",CS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PS,t("td",TS,[t("a",VS,[l("二分图"),e(s)])]),BS,t("td",KS,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[US]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[AS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[WS]),_:1}),l(),DS]),t("td",YS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FS,t("td",JS,[t("a",QS,[l("所有路径"),e(s)])]),RS,t("td",SS,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ZS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[GS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[XS]),_:1}),l(),$S]),t("td",tZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eZ,t("td",lZ,[t("a",oZ,[l("计算除法"),e(s)])]),nZ,t("td",sZ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[cZ]),_:1}),l(),iZ]),t("td",rZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aZ,t("td",hZ,[t("a",uZ,[l("最长递增路径"),e(s)])]),fZ,t("td",gZ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[mZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[yZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[xZ]),_:1}),l(),pZ]),t("td",bZ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kZ,t("td",MZ,[t("a",IZ,[l("课程顺序"),e(s)])]),vZ,t("td",wZ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[jZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[HZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[EZ]),_:1}),l(),zZ]),t("td",OZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LZ,t("td",qZ,[t("a",NZ,[l("外星文字典"),e(s)])]),CZ,t("td",PZ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[TZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[VZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[BZ]),_:1}),l(),KZ]),t("td",UZ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[AZ,t("td",WZ,[t("a",DZ,[l("省份数量"),e(s)])]),YZ,t("td",FZ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[JZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[QZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[RZ]),_:1}),l(),SZ]),t("td",ZZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GZ,t("td",XZ,[t("a",$Z,[l("相似的字符串"),e(s)])]),tG,t("td",eG,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[lG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[oG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[nG]),_:1}),l(),sG]),t("td",dG,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_G,t("td",cG,[t("a",iG,[l("多余的边"),e(s)])]),rG,t("td",aG,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[hG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[uG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[fG]),_:1}),l(),gG]),t("td",mG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yG,t("td",xG,[t("a",pG,[l("展平多级双向链表"),e(s)])]),bG,t("td",kG,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[MG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[IG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[vG]),_:1})]),t("td",wG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jG,t("td",HG,[t("a",EG,[l("二叉树每层的最大值"),e(s)])]),zG,t("td",OG,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[LG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[NG]),_:1}),l(),CG]),t("td",PG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[TG,t("td",VG,[t("a",BG,[l("二叉树最底层最左边的值"),e(s)])]),KG,t("td",UG,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[AG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[WG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[DG]),_:1}),l(),YG]),t("td",FG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JG,t("td",QG,[t("a",RG,[l("二叉树的右侧视图"),e(s)])]),SG,t("td",ZG,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[GG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[XG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$G]),_:1}),l(),tX]),t("td",eX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lX,t("td",oX,[t("a",nX,[l("二叉树剪枝"),e(s)])]),sX,t("td",dX,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_X]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[cX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[iX]),_:1})]),t("td",rX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aX,t("td",hX,[t("a",uX,[l("序列化与反序列化二叉树"),e(s)])]),fX,t("td",gX,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[mX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[xX]),_:1}),l(),pX]),t("td",bX,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kX,t("td",MX,[t("a",IX,[l("从根节点到叶节点的路径数字之和"),e(s)])]),vX,t("td",wX,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[jX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[HX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[EX]),_:1})]),t("td",zX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[OX,t("td",LX,[t("a",qX,[l("向下的路径节点之和"),e(s)])]),NX,t("td",CX,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[PX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[TX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[VX]),_:1})]),t("td",BX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KX,t("td",UX,[t("a",AX,[l("节点之和最大的路径"),e(s)])]),WX,t("td",DX,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[YX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[FX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[JX]),_:1}),l(),QX]),t("td",RX,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[SX,t("td",ZX,[t("a",GX,[l("展平二叉搜索树"),e(s)])]),XX,t("td",$X,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[t$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[e$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[l$]),_:1}),l(),o$]),t("td",n$,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[s$,t("td",d$,[t("a",_$,[l("二叉搜索树中的中序后继"),e(s)])]),c$,t("td",i$,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[r$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[a$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[h$]),_:1}),l(),u$]),t("td",f$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g$,t("td",m$,[t("a",y$,[l("所有大于等于节点的值之和"),e(s)])]),x$,t("td",p$,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[b$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[k$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[M$]),_:1}),l(),I$]),t("td",v$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w$,t("td",j$,[t("a",H$,[l("神奇的字典"),e(s)])]),E$,t("td",z$,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[O$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[L$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[q$]),_:1}),l(),N$]),t("td",C$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P$,t("td",T$,[t("a",V$,[l("分割回文子字符串"),e(s)])]),B$,t("td",K$,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[U$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[A$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[W$]),_:1}),l(),D$]),t("td",Y$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F$,t("td",J$,[t("a",Q$,[l("节点间通路"),e(s)])]),R$,t("td",S$,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Z$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[G$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[X$]),_:1})]),t("td",$$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ttt,t("td",ett,[t("a",ltt,[l("检查平衡性"),e(s)])]),ott,t("td",ntt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[stt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dtt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[_tt]),_:1})]),t("td",ctt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[itt,t("td",rtt,[t("a",att,[l("合法二叉搜索树"),e(s)])]),htt,t("td",utt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ftt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gtt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[mtt]),_:1}),l(),ytt]),t("td",xtt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ptt,t("td",btt,[t("a",ktt,[l("后继者"),e(s)])]),Mtt,t("td",Itt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vtt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wtt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[jtt]),_:1}),l(),Htt]),t("td",Ett,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ztt,t("td",Ott,[t("a",Ltt,[l("首个共同祖先"),e(s)])]),qtt,t("td",Ntt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ctt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ptt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Ttt]),_:1})]),t("td",Vtt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Btt,t("td",Ktt,[t("a",Utt,[l("检查子树"),e(s)])]),Att,t("td",Wtt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Dtt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ytt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Ftt]),_:1}),l(),Jtt]),t("td",Qtt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rtt,t("td",Stt,[t("a",Ztt,[l("求和路径"),e(s)])]),Gtt,t("td",Xtt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[tet]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[eet]),_:1})]),t("td",oet,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[net,t("td",set,[t("a",det,[l("颜色填充"),e(s)])]),_et,t("td",cet,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[iet]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ret]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[aet]),_:1}),l(),het]),t("td",uet,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fet,t("td",get,[t("a",met,[l("水域大小"),e(s)])]),yet,t("td",xet,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[pet]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[bet]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[ket]),_:1}),l(),Met]),t("td",Iet,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vet,t("td",wet,[t("a",jet,[l("婴儿名字"),e(s)])]),Het,t("td",Eet,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[zet]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Oet]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Let]),_:1}),l(),qet]),t("td",Net,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cet,t("td",Pet,[t("a",Tet,[l("BiNode"),e(s)])]),Vet,t("td",Bet,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ket]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Uet]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Aet]),_:1}),l(),Wet]),t("td",Det,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const Ret=c(h,[["render",Yet],["__file","depth-first-search.html.vue"]]);export{Ret as default};
