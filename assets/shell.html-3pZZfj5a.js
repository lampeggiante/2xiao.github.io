import{_,r as s,o as i,c as a,a as t,d as e,w as l,b as o,f as u}from"./app-GnK0vSxb.js";const h={},r=t("h1",{id:"shell",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#shell","aria-hidden":"true"},"#"),o(" Shell")],-1),g={class:"hint-container details"},m=t("summary",null,"全部标签",-1),f=t("p",null,[t("strong",null,"数据结构")],-1),p=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),w=t("code",null,"单调栈",-1),q=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),S=t("code",null,"堆（优先队列）",-1),E=t("code",null,"哈希表",-1),L=t("code",null,"字符串",-1),N=t("code",null,"字符串匹配",-1),V=t("code",null,"树",-1),B=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),z=t("code",null,"最小生成树",-1),I=t("code",null,"图",-1),M=t("code",null,"有序集合",-1),R=t("code",null,"拓扑排序",-1),j=t("code",null,"最短路",-1),T=t("code",null,"强连通分量",-1),A=t("code",null,"欧拉回路",-1),D=t("code",null,"双连通分量",-1),F=t("code",null,"并查集",-1),G=t("code",null,"字典树",-1),H=t("code",null,"线段树",-1),J=t("code",null,"树状数组",-1),K=t("code",null,"后缀数组",-1),O=t("p",null,[t("strong",null,"算法")],-1),P=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),ct=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),gt=t("code",null,"哈希函数",-1),mt=t("code",null,"滚动哈希",-1),ft=t("code",null,"扫描线",-1),pt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),wt=t("code",null,"模拟",-1),qt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),St=t("code",null,"概率与统计",-1),Et=t("span",{class:"blue"},"Shell",-1),Lt=t("code",null,"拒绝采样",-1),Nt=t("code",null,"数据库",-1),Vt=t("code",null,"设计",-1),Bt=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),zt=t("code",null,"交互",-1),It=t("code",null,"迭代器",-1),Mt=t("code",null,"多线程",-1),Rt=t("hr",null,null,-1),jt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Tt=t("td",{style:{"text-align":"center"}},"192",-1),At={style:{"text-align":"left"}},Dt={href:"https://leetcode.com/problems/word-frequency",target:"_blank",rel:"noopener noreferrer"},Ft=t("td",{style:{"text-align":"center"}},null,-1),Gt={style:{"text-align":"left"}},Ht=t("code",null,"Shell",-1),Jt={style:{"text-align":"left"}},Kt=t("td",{style:{"text-align":"center"}},"193",-1),Ot={style:{"text-align":"left"}},Pt={href:"https://leetcode.com/problems/valid-phone-numbers",target:"_blank",rel:"noopener noreferrer"},Qt=t("td",{style:{"text-align":"center"}},null,-1),Ut={style:{"text-align":"left"}},Wt=t("code",null,"Shell",-1),Xt={style:{"text-align":"left"}},Yt=t("td",{style:{"text-align":"center"}},"194",-1),Zt={style:{"text-align":"left"}},$t={href:"https://leetcode.com/problems/transpose-file",target:"_blank",rel:"noopener noreferrer"},te=t("td",{style:{"text-align":"center"}},null,-1),ee={style:{"text-align":"left"}},le=t("code",null,"Shell",-1),oe={style:{"text-align":"left"}},ne=t("td",{style:{"text-align":"center"}},"195",-1),de={style:{"text-align":"left"}},ce={href:"https://leetcode.com/problems/tenth-line",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},null,-1),_e={style:{"text-align":"left"}},ie=t("code",null,"Shell",-1),ae={style:{"text-align":"left"}};function ue(he,re){const n=s("RouterLink"),d=s("ExternalLinkIcon"),c=s("font");return i(),a("div",null,[r,t("details",g,[m,f,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[K]),_:1})]),O,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[ft]),_:1})]),pt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[yt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[St]),_:1}),o(),Et,o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[Bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Mt]),_:1})])]),Rt,u(" prettier-ignore "),t("table",null,[jt,t("tbody",null,[t("tr",null,[Tt,t("td",At,[t("a",Dt,[o("统计词频"),e(d)])]),Ft,t("td",Gt,[e(n,{to:"/leetcode/outline/tag/shell.html"},{default:l(()=>[Ht]),_:1})]),t("td",Jt,[e(c,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Kt,t("td",Ot,[t("a",Pt,[o("有效电话号码"),e(d)])]),Qt,t("td",Ut,[e(n,{to:"/leetcode/outline/tag/shell.html"},{default:l(()=>[Wt]),_:1})]),t("td",Xt,[e(c,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Yt,t("td",Zt,[t("a",$t,[o("转置文件"),e(d)])]),te,t("td",ee,[e(n,{to:"/leetcode/outline/tag/shell.html"},{default:l(()=>[le]),_:1})]),t("td",oe,[e(c,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ne,t("td",de,[t("a",ce,[o("第十行"),e(d)])]),se,t("td",_e,[e(n,{to:"/leetcode/outline/tag/shell.html"},{default:l(()=>[ie]),_:1})]),t("td",ae,[e(c,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])])])])])}const me=_(h,[["render",ue],["__file","shell.html.vue"]]);export{me as default};
