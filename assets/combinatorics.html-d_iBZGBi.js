import{_,r as c,o as i,c as a,a as t,d as e,w as l,b as o,f as h}from"./app-GnK0vSxb.js";const r={},u=t("h1",{id:"组合数学",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#组合数学","aria-hidden":"true"},"#"),o(" 组合数学")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),H=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),M=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),K=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),C=t("code",null,"二叉树",-1),E=t("code",null,"二叉搜索树",-1),N=t("code",null,"最小生成树",-1),z=t("code",null,"图",-1),V=t("code",null,"有序集合",-1),j=t("code",null,"拓扑排序",-1),B=t("code",null,"最短路",-1),F=t("code",null,"强连通分量",-1),O=t("code",null,"欧拉回路",-1),P=t("code",null,"双连通分量",-1),R=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),T=t("code",null,"线段树",-1),U=t("code",null,"树状数组",-1),D=t("code",null,"后缀数组",-1),G=t("p",null,[t("strong",null,"算法")],-1),J=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),S=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ht=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Ht=t("code",null,"模拟",-1),wt=t("span",{class:"blue"},"组合数学",-1),It=t("code",null,"随机化",-1),Mt=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Kt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Ct=t("code",null,"数据流",-1),Et=t("code",null,"脑筋急转弯",-1),Nt=t("code",null,"交互",-1),zt=t("code",null,"迭代器",-1),Vt=t("code",null,"多线程",-1),jt=t("hr",null,null,-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ft=t("td",{style:{"text-align":"center"}},"62",-1),Ot={style:{"text-align":"left"}},Pt={href:"https://leetcode.com/problems/unique-paths",target:"_blank",rel:"noopener noreferrer"},Rt={style:{"text-align":"center"}},At={style:{"text-align":"left"}},Tt=t("code",null,"数学",-1),Ut=t("code",null,"动态规划",-1),Dt=t("code",null,"组合数学",-1),Gt={style:{"text-align":"left"}},Jt=t("td",{style:{"text-align":"center"}},"458",-1),Qt={style:{"text-align":"left"}},St={href:"https://leetcode.com/problems/poor-pigs",target:"_blank",rel:"noopener noreferrer"},Wt=t("td",{style:{"text-align":"center"}},null,-1),Xt={style:{"text-align":"left"}},Yt=t("code",null,"数学",-1),Zt=t("code",null,"动态规划",-1),$t=t("code",null,"组合数学",-1),te={style:{"text-align":"left"}},ee=t("td",{style:{"text-align":"center"}},"920",-1),oe={style:{"text-align":"left"}},le={href:"https://leetcode.com/problems/number-of-music-playlists",target:"_blank",rel:"noopener noreferrer"},ne=t("td",{style:{"text-align":"center"}},null,-1),de={style:{"text-align":"left"}},se=t("code",null,"数学",-1),ce=t("code",null,"动态规划",-1),_e=t("code",null,"组合数学",-1),ie={style:{"text-align":"left"}},ae=t("td",{style:{"text-align":"center"}},"1201",-1),he={style:{"text-align":"left"}},re={href:"https://leetcode.com/problems/ugly-number-iii",target:"_blank",rel:"noopener noreferrer"},ue=t("td",{style:{"text-align":"center"}},null,-1),fe={style:{"text-align":"left"}},ge=t("code",null,"数学",-1),me=t("code",null,"二分查找",-1),ye=t("code",null,"组合数学",-1),xe=t("code",null,"1+",-1),be={style:{"text-align":"left"}},pe=t("td",{style:{"text-align":"center"}},"1359",-1),ke={style:{"text-align":"left"}},He={href:"https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options",target:"_blank",rel:"noopener noreferrer"},we=t("td",{style:{"text-align":"center"}},null,-1),Ie={style:{"text-align":"left"}},Me=t("code",null,"数学",-1),ve=t("code",null,"动态规划",-1),qe=t("code",null,"组合数学",-1),Ke={style:{"text-align":"left"}},Le=t("td",{style:{"text-align":"center"}},"1467",-1),Ce={style:{"text-align":"left"}},Ee={href:"https://leetcode.com/problems/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",target:"_blank",rel:"noopener noreferrer"},Ne=t("td",{style:{"text-align":"center"}},null,-1),ze={style:{"text-align":"left"}},Ve=t("code",null,"数组",-1),je=t("code",null,"数学",-1),Be=t("code",null,"动态规划",-1),Fe=t("code",null,"3+",-1),Oe={style:{"text-align":"left"}},Pe=t("td",{style:{"text-align":"center"}},"1569",-1),Re={style:{"text-align":"left"}},Ae={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},Te=t("td",{style:{"text-align":"center"}},null,-1),Ue={style:{"text-align":"left"}},De=t("code",null,"树",-1),Ge=t("code",null,"并查集",-1),Je=t("code",null,"二叉搜索树",-1),Qe=t("code",null,"7+",-1),Se={style:{"text-align":"left"}},We=t("td",{style:{"text-align":"center"}},"1621",-1),Xe={style:{"text-align":"left"}},Ye={href:"https://leetcode.com/problems/number-of-sets-of-k-non-overlapping-line-segments",target:"_blank",rel:"noopener noreferrer"},Ze=t("td",{style:{"text-align":"center"}},null,-1),$e={style:{"text-align":"left"}},to=t("code",null,"数学",-1),eo=t("code",null,"动态规划",-1),oo=t("code",null,"组合数学",-1),lo={style:{"text-align":"left"}},no=t("td",{style:{"text-align":"center"}},"1641",-1),so={style:{"text-align":"left"}},co={href:"https://leetcode.com/problems/count-sorted-vowel-strings",target:"_blank",rel:"noopener noreferrer"},_o=t("td",{style:{"text-align":"center"}},null,-1),io={style:{"text-align":"left"}},ao=t("code",null,"数学",-1),ho=t("code",null,"动态规划",-1),ro=t("code",null,"组合数学",-1),uo={style:{"text-align":"left"}},fo=t("td",{style:{"text-align":"center"}},"1643",-1),go={style:{"text-align":"left"}},mo={href:"https://leetcode.com/problems/kth-smallest-instructions",target:"_blank",rel:"noopener noreferrer"},yo=t("td",{style:{"text-align":"center"}},null,-1),xo={style:{"text-align":"left"}},bo=t("code",null,"数组",-1),po=t("code",null,"数学",-1),ko=t("code",null,"动态规划",-1),Ho=t("code",null,"1+",-1),wo={style:{"text-align":"left"}},Io=t("td",{style:{"text-align":"center"}},"1735",-1),Mo={style:{"text-align":"left"}},vo={href:"https://leetcode.com/problems/count-ways-to-make-array-with-product",target:"_blank",rel:"noopener noreferrer"},qo=t("td",{style:{"text-align":"center"}},null,-1),Ko={style:{"text-align":"left"}},Lo=t("code",null,"数组",-1),Co=t("code",null,"数学",-1),Eo=t("code",null,"动态规划",-1),No=t("code",null,"2+",-1),zo={style:{"text-align":"left"}},Vo=t("td",{style:{"text-align":"center"}},"1830",-1),jo={style:{"text-align":"left"}},Bo={href:"https://leetcode.com/problems/minimum-number-of-operations-to-make-string-sorted",target:"_blank",rel:"noopener noreferrer"},Fo=t("td",{style:{"text-align":"center"}},null,-1),Oo={style:{"text-align":"left"}},Po=t("code",null,"数学",-1),Ro=t("code",null,"字符串",-1),Ao=t("code",null,"组合数学",-1),To={style:{"text-align":"left"}},Uo=t("td",{style:{"text-align":"center"}},"1863",-1),Do={style:{"text-align":"left"}},Go={href:"https://leetcode.com/problems/sum-of-all-subset-xor-totals",target:"_blank",rel:"noopener noreferrer"},Jo=t("td",{style:{"text-align":"center"}},null,-1),Qo={style:{"text-align":"left"}},So=t("code",null,"位运算",-1),Wo=t("code",null,"数组",-1),Xo=t("code",null,"数学",-1),Yo=t("code",null,"3+",-1),Zo={style:{"text-align":"left"}},$o=t("td",{style:{"text-align":"center"}},"1866",-1),tl={style:{"text-align":"left"}},el={href:"https://leetcode.com/problems/number-of-ways-to-rearrange-sticks-with-k-sticks-visible",target:"_blank",rel:"noopener noreferrer"},ol=t("td",{style:{"text-align":"center"}},null,-1),ll={style:{"text-align":"left"}},nl=t("code",null,"数学",-1),dl=t("code",null,"动态规划",-1),sl=t("code",null,"组合数学",-1),cl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"1916",-1),il={style:{"text-align":"left"}},al={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},hl=t("td",{style:{"text-align":"center"}},null,-1),rl={style:{"text-align":"left"}},ul=t("code",null,"树",-1),fl=t("code",null,"图",-1),gl=t("code",null,"拓扑排序",-1),ml=t("code",null,"3+",-1),yl={style:{"text-align":"left"}},xl=t("td",{style:{"text-align":"center"}},"2063",-1),bl={style:{"text-align":"left"}},pl={href:"https://leetcode.com/problems/vowels-of-all-substrings",target:"_blank",rel:"noopener noreferrer"},kl=t("td",{style:{"text-align":"center"}},null,-1),Hl={style:{"text-align":"left"}},wl=t("code",null,"数学",-1),Il=t("code",null,"字符串",-1),Ml=t("code",null,"动态规划",-1),vl=t("code",null,"1+",-1),ql={style:{"text-align":"left"}},Kl=t("td",{style:{"text-align":"center"}},"2221",-1),Ll={style:{"text-align":"left"}},Cl={href:"https://leetcode.com/problems/find-triangular-sum-of-an-array",target:"_blank",rel:"noopener noreferrer"},El=t("td",{style:{"text-align":"center"}},null,-1),Nl={style:{"text-align":"left"}},zl=t("code",null,"数组",-1),Vl=t("code",null,"数学",-1),jl=t("code",null,"组合数学",-1),Bl=t("code",null,"1+",-1),Fl={style:{"text-align":"left"}},Ol=t("td",{style:{"text-align":"center"}},"2338",-1),Pl={style:{"text-align":"left"}},Rl={href:"https://leetcode.com/problems/count-the-number-of-ideal-arrays",target:"_blank",rel:"noopener noreferrer"},Al=t("td",{style:{"text-align":"center"}},null,-1),Tl={style:{"text-align":"left"}},Ul=t("code",null,"数学",-1),Dl=t("code",null,"动态规划",-1),Gl=t("code",null,"组合数学",-1),Jl=t("code",null,"1+",-1),Ql={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"2400",-1),Wl={style:{"text-align":"left"}},Xl={href:"https://leetcode.com/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps",target:"_blank",rel:"noopener noreferrer"},Yl=t("td",{style:{"text-align":"center"}},null,-1),Zl={style:{"text-align":"left"}},$l=t("code",null,"数学",-1),tn=t("code",null,"动态规划",-1),en=t("code",null,"组合数学",-1),on={style:{"text-align":"left"}},ln=t("td",{style:{"text-align":"center"}},"2514",-1),nn={style:{"text-align":"left"}},dn={href:"https://leetcode.com/problems/count-anagrams",target:"_blank",rel:"noopener noreferrer"},sn=t("td",{style:{"text-align":"center"}},null,-1),cn={style:{"text-align":"left"}},_n=t("code",null,"哈希表",-1),an=t("code",null,"数学",-1),hn=t("code",null,"字符串",-1),rn=t("code",null,"2+",-1),un={style:{"text-align":"left"}},fn=t("td",{style:{"text-align":"center"}},"2539",-1),gn={style:{"text-align":"left"}},mn={href:"https://leetcode.com/problems/count-the-number-of-good-subsequences",target:"_blank",rel:"noopener noreferrer"},yn=t("td",{style:{"text-align":"center"}},null,-1),xn={style:{"text-align":"left"}},bn=t("code",null,"哈希表",-1),pn=t("code",null,"数学",-1),kn=t("code",null,"字符串",-1),Hn=t("code",null,"2+",-1),wn={style:{"text-align":"left"}},In=t("td",{style:{"text-align":"center"}},"2597",-1),Mn={style:{"text-align":"left"}},vn={href:"https://leetcode.com/problems/the-number-of-beautiful-subsets",target:"_blank",rel:"noopener noreferrer"},qn=t("td",{style:{"text-align":"center"}},null,-1),Kn={style:{"text-align":"left"}},Ln=t("code",null,"数组",-1),Cn=t("code",null,"哈希表",-1),En=t("code",null,"数学",-1),Nn=t("code",null,"4+",-1),zn={style:{"text-align":"left"}},Vn=t("td",{style:{"text-align":"center"}},"2638",-1),jn={style:{"text-align":"left"}},Bn={href:"https://leetcode.com/problems/count-the-number-of-k-free-subsets",target:"_blank",rel:"noopener noreferrer"},Fn=t("td",{style:{"text-align":"center"}},null,-1),On={style:{"text-align":"left"}},Pn=t("code",null,"数组",-1),Rn=t("code",null,"数学",-1),An=t("code",null,"动态规划",-1),Tn=t("code",null,"2+",-1),Un={style:{"text-align":"left"}},Dn=t("td",{style:{"text-align":"center"}},"2842",-1),Gn={style:{"text-align":"left"}},Jn={href:"https://leetcode.com/problems/count-k-subsequences-of-a-string-with-maximum-beauty",target:"_blank",rel:"noopener noreferrer"},Qn=t("td",{style:{"text-align":"center"}},null,-1),Sn={style:{"text-align":"left"}},Wn=t("code",null,"贪心",-1),Xn=t("code",null,"哈希表",-1),Yn=t("code",null,"数学",-1),Zn=t("code",null,"2+",-1),$n={style:{"text-align":"left"}},td=t("td",{style:{"text-align":"center"}},"2912",-1),ed={style:{"text-align":"left"}},od={href:"https://leetcode.com/problems/number-of-ways-to-reach-destination-in-the-grid",target:"_blank",rel:"noopener noreferrer"},ld=t("td",{style:{"text-align":"center"}},null,-1),nd={style:{"text-align":"left"}},dd=t("code",null,"数学",-1),sd=t("code",null,"动态规划",-1),cd=t("code",null,"组合数学",-1),_d={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"2927",-1),ad={style:{"text-align":"left"}},hd={href:"https://leetcode.com/problems/distribute-candies-among-children-iii",target:"_blank",rel:"noopener noreferrer"},rd=t("td",{style:{"text-align":"center"}},null,-1),ud={style:{"text-align":"left"}},fd=t("code",null,"数学",-1),gd=t("code",null,"组合数学",-1),md={style:{"text-align":"left"}},yd=t("td",{style:{"text-align":"center"}},"2928",-1),xd={style:{"text-align":"left"}},bd={href:"https://leetcode.com/problems/distribute-candies-among-children-i",target:"_blank",rel:"noopener noreferrer"},pd=t("td",{style:{"text-align":"center"}},null,-1),kd={style:{"text-align":"left"}},Hd=t("code",null,"数学",-1),wd=t("code",null,"组合数学",-1),Id=t("code",null,"枚举",-1),Md={style:{"text-align":"left"}},vd=t("td",{style:{"text-align":"center"}},"2929",-1),qd={style:{"text-align":"left"}},Kd={href:"https://leetcode.com/problems/distribute-candies-among-children-ii",target:"_blank",rel:"noopener noreferrer"},Ld=t("td",{style:{"text-align":"center"}},null,-1),Cd={style:{"text-align":"left"}},Ed=t("code",null,"数学",-1),Nd=t("code",null,"组合数学",-1),zd=t("code",null,"枚举",-1),Vd={style:{"text-align":"left"}},jd=t("td",{style:{"text-align":"center"}},"2930",-1),Bd={style:{"text-align":"left"}},Fd={href:"https://leetcode.com/problems/number-of-strings-which-can-be-rearranged-to-contain-substring",target:"_blank",rel:"noopener noreferrer"},Od=t("td",{style:{"text-align":"center"}},null,-1),Pd={style:{"text-align":"left"}},Rd=t("code",null,"数学",-1),Ad=t("code",null,"动态规划",-1),Td=t("code",null,"组合数学",-1),Ud={style:{"text-align":"left"}},Dd=t("td",{style:{"text-align":"center"}},"2954",-1),Gd={style:{"text-align":"left"}},Jd={href:"https://leetcode.com/problems/count-the-number-of-infection-sequences",target:"_blank",rel:"noopener noreferrer"},Qd=t("td",{style:{"text-align":"center"}},null,-1),Sd={style:{"text-align":"left"}},Wd=t("code",null,"数组",-1),Xd=t("code",null,"数学",-1),Yd=t("code",null,"组合数学",-1),Zd={style:{"text-align":"left"}},$d=t("td",{style:{"text-align":"center"}},"2963",-1),ts={style:{"text-align":"left"}},es={href:"https://leetcode.com/problems/count-the-number-of-good-partitions",target:"_blank",rel:"noopener noreferrer"},os=t("td",{style:{"text-align":"center"}},null,-1),ls={style:{"text-align":"left"}},ns=t("code",null,"数组",-1),ds=t("code",null,"哈希表",-1),ss=t("code",null,"数学",-1),cs=t("code",null,"1+",-1),_s={style:{"text-align":"left"}},is=t("td",{style:{"text-align":"center"}},"3116",-1),as={style:{"text-align":"left"}},hs={href:"https://leetcode.com/problems/kth-smallest-amount-with-single-denomination-combination",target:"_blank",rel:"noopener noreferrer"},rs=t("td",{style:{"text-align":"center"}},null,-1),us={style:{"text-align":"left"}},fs=t("code",null,"位运算",-1),gs=t("code",null,"数组",-1),ms=t("code",null,"数学",-1),ys=t("code",null,"3+",-1),xs={style:{"text-align":"left"}},bs=t("td",{style:{"text-align":"center"}},"3128",-1),ps={style:{"text-align":"left"}},ks={href:"https://leetcode.com/problems/right-triangles",target:"_blank",rel:"noopener noreferrer"},Hs=t("td",{style:{"text-align":"center"}},null,-1),ws={style:{"text-align":"left"}},Is=t("code",null,"数组",-1),Ms=t("code",null,"哈希表",-1),vs=t("code",null,"数学",-1),qs=t("code",null,"2+",-1),Ks={style:{"text-align":"left"}},Ls=t("td",{style:{"text-align":"center"}},"3154",-1),Cs={style:{"text-align":"left"}},Es={href:"https://leetcode.com/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},Ns=t("td",{style:{"text-align":"center"}},null,-1),zs={style:{"text-align":"left"}},Vs=t("code",null,"位运算",-1),js=t("code",null,"记忆化搜索",-1),Bs=t("code",null,"数学",-1),Fs=t("code",null,"2+",-1),Os={style:{"text-align":"left"}},Ps=t("td",{style:{"text-align":"center"}},"3179",-1),Rs={style:{"text-align":"left"}},As={href:"https://leetcode.com/problems/find-the-n-th-value-after-k-seconds",target:"_blank",rel:"noopener noreferrer"},Ts=t("td",{style:{"text-align":"center"}},null,-1),Us={style:{"text-align":"left"}},Ds=t("code",null,"数组",-1),Gs=t("code",null,"数学",-1),Js=t("code",null,"组合数学",-1),Qs=t("code",null,"2+",-1),Ss={style:{"text-align":"left"}},Ws=t("td",{style:{"text-align":"center"}},"3247",-1),Xs={style:{"text-align":"left"}},Ys={href:"https://leetcode.com/problems/number-of-subsequences-with-odd-sum",target:"_blank",rel:"noopener noreferrer"},Zs=t("td",{style:{"text-align":"center"}},null,-1),$s={style:{"text-align":"left"}},tc=t("code",null,"数组",-1),ec=t("code",null,"数学",-1),oc=t("code",null,"动态规划",-1),lc=t("code",null,"1+",-1),nc={style:{"text-align":"left"}},dc=t("td",{style:{"text-align":"center"}},"3250",-1),sc={style:{"text-align":"left"}},cc={href:"https://leetcode.com/problems/find-the-count-of-monotonic-pairs-i",target:"_blank",rel:"noopener noreferrer"},_c=t("td",{style:{"text-align":"center"}},null,-1),ic={style:{"text-align":"left"}},ac=t("code",null,"数组",-1),hc=t("code",null,"数学",-1),rc=t("code",null,"动态规划",-1),uc=t("code",null,"2+",-1),fc={style:{"text-align":"left"}},gc=t("td",{style:{"text-align":"center"}},"3251",-1),mc={style:{"text-align":"left"}},yc={href:"https://leetcode.com/problems/find-the-count-of-monotonic-pairs-ii",target:"_blank",rel:"noopener noreferrer"},xc=t("td",{style:{"text-align":"center"}},null,-1),bc={style:{"text-align":"left"}},pc=t("code",null,"数组",-1),kc=t("code",null,"数学",-1),Hc=t("code",null,"动态规划",-1),wc=t("code",null,"2+",-1),Ic={style:{"text-align":"left"}},Mc=t("td",{style:{"text-align":"center"}},"3272",-1),vc={style:{"text-align":"left"}},qc={href:"https://leetcode.com/problems/find-the-count-of-good-integers",target:"_blank",rel:"noopener noreferrer"},Kc=t("td",{style:{"text-align":"center"}},null,-1),Lc={style:{"text-align":"left"}},Cc=t("code",null,"哈希表",-1),Ec=t("code",null,"数学",-1),Nc=t("code",null,"组合数学",-1),zc=t("code",null,"1+",-1),Vc={style:{"text-align":"left"}},jc=t("td",{style:{"text-align":"center"}},"3312",-1),Bc={style:{"text-align":"left"}},Fc={href:"https://leetcode.com/problems/sorted-gcd-pair-queries",target:"_blank",rel:"noopener noreferrer"},Oc=t("td",{style:{"text-align":"center"}},null,-1),Pc={style:{"text-align":"left"}},Rc=t("code",null,"数组",-1),Ac=t("code",null,"哈希表",-1),Tc=t("code",null,"数学",-1),Uc=t("code",null,"5+",-1),Dc={style:{"text-align":"left"}},Gc=t("td",{style:{"text-align":"center"}},"3317",-1),Jc={style:{"text-align":"left"}},Qc={href:"https://leetcode.com/problems/find-the-number-of-possible-ways-for-an-event",target:"_blank",rel:"noopener noreferrer"},Sc=t("td",{style:{"text-align":"center"}},null,-1),Wc={style:{"text-align":"left"}},Xc=t("code",null,"数学",-1),Yc=t("code",null,"动态规划",-1),Zc=t("code",null,"组合数学",-1),$c={style:{"text-align":"left"}},t_=t("td",{style:{"text-align":"center"}},"LCP 25",-1),e_={style:{"text-align":"left"}},o_={href:"https://leetcode.cn/problems/Uh984O",target:"_blank",rel:"noopener noreferrer"},l_=t("td",{style:{"text-align":"center"}},null,-1),n_={style:{"text-align":"left"}},d_=t("code",null,"数学",-1),s_=t("code",null,"动态规划",-1),c_=t("code",null,"组合数学",-1),__={style:{"text-align":"left"}},i_=t("td",{style:{"text-align":"center"}},"LCP 37",-1),a_={style:{"text-align":"left"}},h_={href:"https://leetcode.cn/problems/zui-xiao-ju-xing-mian-ji",target:"_blank",rel:"noopener noreferrer"},r_=t("td",{style:{"text-align":"center"}},null,-1),u_={style:{"text-align":"left"}},f_=t("code",null,"贪心",-1),g_=t("code",null,"几何",-1),m_=t("code",null,"数组",-1),y_=t("code",null,"3+",-1),x_={style:{"text-align":"left"}},b_=t("td",{style:{"text-align":"center"}},"剑指 Offer II 98",-1),p_={style:{"text-align":"left"}},k_={href:"https://leetcode.cn/problems/2AoeFn",target:"_blank",rel:"noopener noreferrer"},H_=t("td",{style:{"text-align":"center"}},null,-1),w_={style:{"text-align":"left"}},I_=t("code",null,"数学",-1),M_=t("code",null,"动态规划",-1),v_=t("code",null,"组合数学",-1),q_={style:{"text-align":"left"}};function K_(L_,C_){const n=c("RouterLink"),d=c("ExternalLinkIcon"),s=c("font");return i(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[D]),_:1})]),G,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[Ht]),_:1}),o(),wt,o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[Kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Vt]),_:1})])]),jt,h(" prettier-ignore "),t("table",null,[Bt,t("tbody",null,[t("tr",null,[Ft,t("td",Ot,[t("a",Pt,[o("不同路径"),e(d)])]),t("td",Rt,[e(n,{to:"/leetcode/problem/0062.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",At,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Dt]),_:1})]),t("td",Gt,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Jt,t("td",Qt,[t("a",St,[o("可怜的小猪"),e(d)])]),Wt,t("td",Xt,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Yt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[$t]),_:1})]),t("td",te,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ee,t("td",oe,[t("a",le,[o("播放列表的数量"),e(d)])]),ne,t("td",de,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[se]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ce]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[_e]),_:1})]),t("td",ie,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ae,t("td",he,[t("a",re,[o("丑数 III"),e(d)])]),ue,t("td",fe,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[ge]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[me]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[ye]),_:1}),o(),xe]),t("td",be,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[pe,t("td",ke,[t("a",He,[o("有效的快递序列数目"),e(d)])]),we,t("td",Ie,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Me]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ve]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[qe]),_:1})]),t("td",Ke,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Le,t("td",Ce,[t("a",Ee,[o("两个盒子中球的颜色数相同的概率"),e(d)])]),Ne,t("td",ze,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ve]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[je]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Be]),_:1}),o(),Fe]),t("td",Oe,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Pe,t("td",Re,[t("a",Ae,[o("将子数组重新排序得到同一个二叉搜索树的方案数"),e(d)])]),Te,t("td",Ue,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[De]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[Ge]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Je]),_:1}),o(),Qe]),t("td",Se,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[We,t("td",Xe,[t("a",Ye,[o("大小为 K 的不重叠线段的数目"),e(d)])]),Ze,t("td",$e,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[to]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[eo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[oo]),_:1})]),t("td",lo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[no,t("td",so,[t("a",co,[o("统计字典序元音字符串的数目"),e(d)])]),_o,t("td",io,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[ao]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ho]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[ro]),_:1})]),t("td",uo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fo,t("td",go,[t("a",mo,[o("第 K 条最小指令"),e(d)])]),yo,t("td",xo,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[bo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[po]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ko]),_:1}),o(),Ho]),t("td",wo,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Io,t("td",Mo,[t("a",vo,[o("生成乘积数组的方案数"),e(d)])]),qo,t("td",Ko,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Lo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Co]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Eo]),_:1}),o(),No]),t("td",zo,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Vo,t("td",jo,[t("a",Bo,[o("使字符串有序的最少操作次数"),e(d)])]),Fo,t("td",Oo,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Po]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ro]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Ao]),_:1})]),t("td",To,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Uo,t("td",Do,[t("a",Go,[o("找出所有子集的异或总和再求和"),e(d)])]),Jo,t("td",Qo,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[So]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Wo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Xo]),_:1}),o(),Yo]),t("td",Zo,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[$o,t("td",tl,[t("a",el,[o("恰有 K 根木棍可以看到的排列数目"),e(d)])]),ol,t("td",ll,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[nl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[dl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[sl]),_:1})]),t("td",cl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_l,t("td",il,[t("a",al,[o("统计为蚁群构筑房间的不同顺序"),e(d)])]),hl,t("td",rl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ul]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[fl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[gl]),_:1}),o(),ml]),t("td",yl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[xl,t("td",bl,[t("a",pl,[o("所有子字符串中的元音"),e(d)])]),kl,t("td",Hl,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[wl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Il]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ml]),_:1}),o(),vl]),t("td",ql,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Kl,t("td",Ll,[t("a",Cl,[o("数组的三角和"),e(d)])]),El,t("td",Nl,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[zl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Vl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[jl]),_:1}),o(),Bl]),t("td",Fl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ol,t("td",Pl,[t("a",Rl,[o("统计理想数组的数目"),e(d)])]),Al,t("td",Tl,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Ul]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Dl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Gl]),_:1}),o(),Jl]),t("td",Ql,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Sl,t("td",Wl,[t("a",Xl,[o("恰好移动 k 步到达某一位置的方法数目"),e(d)])]),Yl,t("td",Zl,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[$l]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[tn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[en]),_:1})]),t("td",on,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ln,t("td",nn,[t("a",dn,[o("统计同位异构字符串数目"),e(d)])]),sn,t("td",cn,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[_n]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[an]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[hn]),_:1}),o(),rn]),t("td",un,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[fn,t("td",gn,[t("a",mn,[o("好子序列的个数"),e(d)])]),yn,t("td",xn,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[bn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[pn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[kn]),_:1}),o(),Hn]),t("td",wn,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[In,t("td",Mn,[t("a",vn,[o("美丽子集的数目"),e(d)])]),qn,t("td",Kn,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ln]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Cn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[En]),_:1}),o(),Nn]),t("td",zn,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Vn,t("td",jn,[t("a",Bn,[o("统计 K-Free 子集的总数"),e(d)])]),Fn,t("td",On,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Pn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Rn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[An]),_:1}),o(),Tn]),t("td",Un,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Dn,t("td",Gn,[t("a",Jn,[o("统计一个字符串的 k 子序列美丽值最大的数目"),e(d)])]),Qn,t("td",Sn,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Wn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Xn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Yn]),_:1}),o(),Zn]),t("td",$n,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[td,t("td",ed,[t("a",od,[o("在网格上移动到目的地的方法数"),e(d)])]),ld,t("td",nd,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[dd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[sd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[cd]),_:1})]),t("td",_d,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[id,t("td",ad,[t("a",hd,[o("给小朋友们分糖果 III"),e(d)])]),rd,t("td",ud,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[fd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[gd]),_:1})]),t("td",md,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[yd,t("td",xd,[t("a",bd,[o("给小朋友们分糖果 I"),e(d)])]),pd,t("td",kd,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Hd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[wd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[Id]),_:1})]),t("td",Md,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[vd,t("td",qd,[t("a",Kd,[o("给小朋友们分糖果 II"),e(d)])]),Ld,t("td",Cd,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Ed]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Nd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[zd]),_:1})]),t("td",Vd,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jd,t("td",Bd,[t("a",Fd,[o("重新排列后包含指定子字符串的字符串数目"),e(d)])]),Od,t("td",Pd,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Rd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ad]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Td]),_:1})]),t("td",Ud,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Dd,t("td",Gd,[t("a",Jd,[o("统计感冒序列的数目"),e(d)])]),Qd,t("td",Sd,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Wd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Xd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Yd]),_:1})]),t("td",Zd,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$d,t("td",ts,[t("a",es,[o("统计好分割方案的数目"),e(d)])]),os,t("td",ls,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ns]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ds]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[ss]),_:1}),o(),cs]),t("td",_s,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[is,t("td",as,[t("a",hs,[o("单面值组合的第 K 小金额"),e(d)])]),rs,t("td",us,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[fs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[gs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[ms]),_:1}),o(),ys]),t("td",xs,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bs,t("td",ps,[t("a",ks,[o("直角三角形"),e(d)])]),Hs,t("td",ws,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Is]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Ms]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[vs]),_:1}),o(),qs]),t("td",Ks,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ls,t("td",Cs,[t("a",Es,[o("到达第 K 级台阶的方案数"),e(d)])]),Ns,t("td",zs,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Vs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[js]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Bs]),_:1}),o(),Fs]),t("td",Os,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ps,t("td",Rs,[t("a",As,[o("K 秒后第 N 个元素的值"),e(d)])]),Ts,t("td",Us,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ds]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Gs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Js]),_:1}),o(),Qs]),t("td",Ss,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ws,t("td",Xs,[t("a",Ys,[o("奇数和子序列的数量"),e(d)])]),Zs,t("td",$s,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[tc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[ec]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[oc]),_:1}),o(),lc]),t("td",nc,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[dc,t("td",sc,[t("a",cc,[o("单调数组对的数目 I"),e(d)])]),_c,t("td",ic,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ac]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[hc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[rc]),_:1}),o(),uc]),t("td",fc,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gc,t("td",mc,[t("a",yc,[o("单调数组对的数目 II"),e(d)])]),xc,t("td",bc,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[pc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[kc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Hc]),_:1}),o(),wc]),t("td",Ic,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Mc,t("td",vc,[t("a",qc,[o("统计好整数的数目"),e(d)])]),Kc,t("td",Lc,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Cc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Ec]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Nc]),_:1}),o(),zc]),t("td",Vc,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[jc,t("td",Bc,[t("a",Fc,[o("查询排序后的最大公约数"),e(d)])]),Oc,t("td",Pc,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Rc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Ac]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Tc]),_:1}),o(),Uc]),t("td",Dc,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Gc,t("td",Jc,[t("a",Qc,[o("安排活动的方案数"),e(d)])]),Sc,t("td",Wc,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Xc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Yc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Zc]),_:1})]),t("td",$c,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[t_,t("td",e_,[t("a",o_,[o("古董键盘"),e(d)])]),l_,t("td",n_,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[d_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[s_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[c_]),_:1})]),t("td",__,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[i_,t("td",a_,[t("a",h_,[o("最小矩形面积"),e(d)])]),r_,t("td",u_,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[f_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[g_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[m_]),_:1}),o(),y_]),t("td",x_,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[b_,t("td",p_,[t("a",k_,[o("路径的数目"),e(d)])]),H_,t("td",w_,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[I_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[M_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[v_]),_:1})]),t("td",q_,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const N_=_(r,[["render",K_],["__file","combinatorics.html.vue"]]);export{N_ as default};
