import{_,r as s,o as i,c as a,a as t,d as e,w as o,b as l,f as u}from"./app-GnK0vSxb.js";const h={},r=t("h1",{id:"多线程",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#多线程","aria-hidden":"true"},"#"),l(" 多线程")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),p=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),w=t("code",null,"单调栈",-1),v=t("code",null,"队列",-1),z=t("code",null,"单调队列",-1),M=t("code",null,"堆（优先队列）",-1),q=t("code",null,"哈希表",-1),E=t("code",null,"字符串",-1),B=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),N=t("code",null,"二叉树",-1),V=t("code",null,"二叉搜索树",-1),C=t("code",null,"最小生成树",-1),I=t("code",null,"图",-1),R=t("code",null,"有序集合",-1),j=t("code",null,"拓扑排序",-1),F=t("code",null,"最短路",-1),H=t("code",null,"强连通分量",-1),O=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),A=t("code",null,"并查集",-1),D=t("code",null,"字典树",-1),G=t("code",null,"线段树",-1),J=t("code",null,"树状数组",-1),K=t("code",null,"后缀数组",-1),P=t("p",null,[t("strong",null,"算法")],-1),Q=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),ct=t("code",null,"深度优先搜索",-1),st=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),pt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),wt=t("code",null,"模拟",-1),vt=t("code",null,"组合数学",-1),zt=t("code",null,"随机化",-1),Mt=t("code",null,"概率与统计",-1),qt=t("code",null,"水塘抽样",-1),Et=t("code",null,"拒绝采样",-1),Bt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Nt=t("code",null,"数据流",-1),Vt=t("code",null,"脑筋急转弯",-1),Ct=t("code",null,"交互",-1),It=t("code",null,"迭代器",-1),Rt=t("span",{class:"blue"},"多线程",-1),jt=t("hr",null,null,-1),Ft=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ht=t("td",{style:{"text-align":"center"}},"1114",-1),Ot={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/print-in-order",target:"_blank",rel:"noopener noreferrer"},At=t("td",{style:{"text-align":"center"}},null,-1),Dt={style:{"text-align":"left"}},Gt=t("code",null,"多线程",-1),Jt={style:{"text-align":"left"}},Kt=t("td",{style:{"text-align":"center"}},"1115",-1),Pt={style:{"text-align":"left"}},Qt={href:"https://leetcode.com/problems/print-foobar-alternately",target:"_blank",rel:"noopener noreferrer"},St=t("td",{style:{"text-align":"center"}},null,-1),Ut={style:{"text-align":"left"}},Wt=t("code",null,"多线程",-1),Xt={style:{"text-align":"left"}},Yt=t("td",{style:{"text-align":"center"}},"1116",-1),Zt={style:{"text-align":"left"}},$t={href:"https://leetcode.com/problems/print-zero-even-odd",target:"_blank",rel:"noopener noreferrer"},te=t("td",{style:{"text-align":"center"}},null,-1),ee={style:{"text-align":"left"}},oe=t("code",null,"多线程",-1),le={style:{"text-align":"left"}},ne=t("td",{style:{"text-align":"center"}},"1117",-1),de={style:{"text-align":"left"}},ce={href:"https://leetcode.com/problems/building-h2o",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},null,-1),_e={style:{"text-align":"left"}},ie=t("code",null,"多线程",-1),ae={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"1188",-1),he={style:{"text-align":"left"}},re={href:"https://leetcode.com/problems/design-bounded-blocking-queue",target:"_blank",rel:"noopener noreferrer"},fe=t("td",{style:{"text-align":"center"}},null,-1),ge={style:{"text-align":"left"}},me=t("code",null,"多线程",-1),ye={style:{"text-align":"left"}},pe=t("td",{style:{"text-align":"center"}},"1195",-1),xe={style:{"text-align":"left"}},be={href:"https://leetcode.com/problems/fizz-buzz-multithreaded",target:"_blank",rel:"noopener noreferrer"},ke=t("td",{style:{"text-align":"center"}},null,-1),we={style:{"text-align":"left"}},ve=t("code",null,"多线程",-1),ze={style:{"text-align":"left"}},Me=t("td",{style:{"text-align":"center"}},"1226",-1),qe={style:{"text-align":"left"}},Ee={href:"https://leetcode.com/problems/the-dining-philosophers",target:"_blank",rel:"noopener noreferrer"},Be=t("td",{style:{"text-align":"center"}},null,-1),Le={style:{"text-align":"left"}},Ne=t("code",null,"多线程",-1),Ve={style:{"text-align":"left"}},Ce=t("td",{style:{"text-align":"center"}},"1242",-1),Ie={style:{"text-align":"left"}},Re={href:"https://leetcode.com/problems/web-crawler-multithreaded",target:"_blank",rel:"noopener noreferrer"},je=t("td",{style:{"text-align":"center"}},null,-1),Fe={style:{"text-align":"left"}},He=t("code",null,"深度优先搜索",-1),Oe=t("code",null,"广度优先搜索",-1),Te=t("code",null,"多线程",-1),Ae={style:{"text-align":"left"}},De=t("td",{style:{"text-align":"center"}},"1279",-1),Ge={style:{"text-align":"left"}},Je={href:"https://leetcode.com/problems/traffic-light-controlled-intersection",target:"_blank",rel:"noopener noreferrer"},Ke=t("td",{style:{"text-align":"center"}},null,-1),Pe={style:{"text-align":"left"}},Qe=t("code",null,"多线程",-1),Se={style:{"text-align":"left"}};function Ue(We,Xe){const n=s("RouterLink"),d=s("ExternalLinkIcon"),c=s("font");return i(),a("div",null,[r,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[K]),_:1})]),P,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:o(()=>[Vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:o(()=>[It]),_:1}),l(),Rt])]),jt,u(" prettier-ignore "),t("table",null,[Ft,t("tbody",null,[t("tr",null,[Ht,t("td",Ot,[t("a",Tt,[l("按序打印"),e(d)])]),At,t("td",Dt,[e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Gt]),_:1})]),t("td",Jt,[e(c,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Kt,t("td",Pt,[t("a",Qt,[l("交替打印 FooBar"),e(d)])]),St,t("td",Ut,[e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Wt]),_:1})]),t("td",Xt,[e(c,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yt,t("td",Zt,[t("a",$t,[l("打印零与奇偶数"),e(d)])]),te,t("td",ee,[e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[oe]),_:1})]),t("td",le,[e(c,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ne,t("td",de,[t("a",ce,[l("H2O 生成"),e(d)])]),se,t("td",_e,[e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[ie]),_:1})]),t("td",ae,[e(c,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ue,t("td",he,[t("a",re,[l("设计有限阻塞队列"),e(d)])]),fe,t("td",ge,[e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[me]),_:1})]),t("td",ye,[e(c,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pe,t("td",xe,[t("a",be,[l("交替打印字符串"),e(d)])]),ke,t("td",we,[e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[ve]),_:1})]),t("td",ze,[e(c,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Me,t("td",qe,[t("a",Ee,[l("哲学家进餐"),e(d)])]),Be,t("td",Le,[e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Ne]),_:1})]),t("td",Ve,[e(c,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ce,t("td",Ie,[t("a",Re,[l("多线程网页爬虫"),e(d)])]),je,t("td",Fe,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[He]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Oe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Te]),_:1})]),t("td",Ae,[e(c,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[De,t("td",Ge,[t("a",Je,[l("红绿灯路口"),e(d)])]),Ke,t("td",Pe,[e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Qe]),_:1})]),t("td",Se,[e(c,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const Ze=_(h,[["render",Ue],["__file","concurrency.html.vue"]]);export{Ze as default};
