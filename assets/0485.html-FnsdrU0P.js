import{_ as i,r as c,o as r,c as d,a as t,b as n,d as e,w as s,f as p,e as u}from"./app-qrCIIj1V.js";const _={},h={id:"_485-最大连续-1-的个数",tabindex:"-1"},m=t("a",{class:"header-anchor",href:"#_485-最大连续-1-的个数","aria-hidden":"true"},"#",-1),k={href:"https://leetcode.com/problems/max-consecutive-ones",target:"_blank",rel:"noopener noreferrer"},f=t("code",null,"数组",-1),g={href:"https://leetcode.com/problems/max-consecutive-ones",target:"_blank",rel:"noopener noreferrer"},b=t("code",null,"LeetCode",-1),x=u(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given a binary array <code>nums</code>, return <em>the maximum number of consecutive</em><code>1</code> <em>&#39; s in the array</em>.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: nums = [1,1,0,1,1,1]</p><p>Output: 3</p><p>Explanation: The first two digits or the last three digits are consecutive 1s. The maximum number of consecutive 1s is 3.</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: nums = [1,0,1,1,0,1]</p><p>Output: 2</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 10^5</code></li><li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给定一个二进制数组， 计算其中最大连续 1 的个数。</p><p>注意：</p><ul><li>输入的数组只包含 0 和 1。</li><li>输入数组的长度是正整数，且不超过 10,000。</li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ul><li>给定一个二进制数组， 计算其中最大连续 1 的个数。</li><li>简单题。扫一遍数组，累计 1 的个数，动态维护最大的计数，最终输出即可。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">findMaxConsecutiveOnes</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			count<span class="token operator">++</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> max<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,17),y=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),v=t("td",{style:{"text-align":"center"}},"487",-1),w={style:{"text-align":"left"}},j={href:"https://leetcode.com/problems/max-consecutive-ones-ii",target:"_blank",rel:"noopener noreferrer"},E=t("td",{style:{"text-align":"center"}},null,-1),I={style:{"text-align":"left"}},C=t("code",null,"数组",-1),L=t("code",null,"动态规划",-1),M=t("code",null,"滑动窗口",-1),N={style:{"text-align":"left"}},V=t("td",{style:{"text-align":"center"}},"1004",-1),q={style:{"text-align":"left"}},B={href:"https://leetcode.com/problems/max-consecutive-ones-iii",target:"_blank",rel:"noopener noreferrer"},O=t("td",{style:{"text-align":"center"}},null,-1),T={style:{"text-align":"left"}},R=t("code",null,"数组",-1),z=t("code",null,"二分查找",-1),G=t("code",null,"前缀和",-1),S=t("code",null,"1+",-1),A={style:{"text-align":"left"}},D=t("td",{style:{"text-align":"center"}},"1446",-1),F={style:{"text-align":"left"}},H={href:"https://leetcode.com/problems/consecutive-characters",target:"_blank",rel:"noopener noreferrer"},J=t("td",{style:{"text-align":"center"}},null,-1),K={style:{"text-align":"left"}},P=t("code",null,"字符串",-1),Q={style:{"text-align":"left"}},U=t("td",{style:{"text-align":"center"}},"1869",-1),W={style:{"text-align":"left"}},X={href:"https://leetcode.com/problems/longer-contiguous-segments-of-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},Y=t("td",{style:{"text-align":"center"}},null,-1),Z={style:{"text-align":"left"}},$=t("code",null,"字符串",-1),tt={style:{"text-align":"left"}},et=t("td",{style:{"text-align":"center"}},"2414",-1),nt={style:{"text-align":"left"}},st={href:"https://leetcode.com/problems/length-of-the-longest-alphabetical-continuous-substring",target:"_blank",rel:"noopener noreferrer"},at=t("td",{style:{"text-align":"center"}},null,-1),ot={style:{"text-align":"left"}},lt=t("code",null,"字符串",-1),ct={style:{"text-align":"left"}},it=t("td",{style:{"text-align":"center"}},"2511",-1),rt={style:{"text-align":"left"}},dt={href:"https://leetcode.com/problems/maximum-enemy-forts-that-can-be-captured",target:"_blank",rel:"noopener noreferrer"},pt=t("td",{style:{"text-align":"center"}},null,-1),ut={style:{"text-align":"left"}},_t=t("code",null,"数组",-1),ht=t("code",null,"双指针",-1),mt={style:{"text-align":"left"}};function kt(ft,gt){const o=c("ExternalLinkIcon"),l=c("font"),a=c("RouterLink");return r(),d("div",null,[t("h1",h,[m,n(),t("a",k,[n("485. 最大连续 1 的个数"),e(o)])]),t("p",null,[n("🟢 "),e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1}),n("  🔖  "),e(a,{to:"/leetcode-js/outline/tag/array.html"},{default:s(()=>[f]),_:1}),n("  🔗 "),t("a",g,[b,e(o)])]),x,p(" prettier-ignore "),t("table",null,[y,t("tbody",null,[t("tr",null,[v,t("td",w,[t("a",j,[n("最大连续1的个数 II"),e(o)])]),E,t("td",I,[e(a,{to:"/leetcode-js/outline/tag/array.html"},{default:s(()=>[C]),_:1}),n(),e(a,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:s(()=>[L]),_:1}),n(),e(a,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:s(()=>[M]),_:1})]),t("td",N,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[V,t("td",q,[t("a",B,[n("最大连续1的个数 III"),e(o)])]),O,t("td",T,[e(a,{to:"/leetcode-js/outline/tag/array.html"},{default:s(()=>[R]),_:1}),n(),e(a,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:s(()=>[z]),_:1}),n(),e(a,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:s(()=>[G]),_:1}),n(),S]),t("td",A,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[D,t("td",F,[t("a",H,[n("连续字符"),e(o)])]),J,t("td",K,[e(a,{to:"/leetcode-js/outline/tag/string.html"},{default:s(()=>[P]),_:1})]),t("td",Q,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])]),t("tr",null,[U,t("td",W,[t("a",X,[n("哪种连续子字符串更长"),e(o)])]),Y,t("td",Z,[e(a,{to:"/leetcode-js/outline/tag/string.html"},{default:s(()=>[$]),_:1})]),t("td",tt,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])]),t("tr",null,[et,t("td",nt,[t("a",st,[n("最长的字母序连续子字符串的长度"),e(o)])]),at,t("td",ot,[e(a,{to:"/leetcode-js/outline/tag/string.html"},{default:s(()=>[lt]),_:1})]),t("td",ct,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[it,t("td",rt,[t("a",dt,[n("最多可以摧毁的敌人城堡数目"),e(o)])]),pt,t("td",ut,[e(a,{to:"/leetcode-js/outline/tag/array.html"},{default:s(()=>[_t]),_:1}),n(),e(a,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:s(()=>[ht]),_:1})]),t("td",mt,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])])])])])}const xt=i(_,[["render",kt],["__file","0485.html.vue"]]);export{xt as default};
