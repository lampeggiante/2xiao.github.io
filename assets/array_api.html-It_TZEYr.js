import{_ as e,o,c as d,e as c}from"./app-b4s7f53x.js";const a={},r=c('<h1 id="数组方法中哪些会改变原数组-哪些不会" tabindex="-1"><a class="header-anchor" href="#数组方法中哪些会改变原数组-哪些不会" aria-hidden="true">#</a> 数组方法中哪些会改变原数组，哪些不会？</h1><h2 id="会改变原数组的方法" tabindex="-1"><a class="header-anchor" href="#会改变原数组的方法" aria-hidden="true">#</a> 会改变原数组的方法：</h2><h3 id="增删改操作" tabindex="-1"><a class="header-anchor" href="#增删改操作" aria-hidden="true">#</a> 增删改操作</h3><ul><li><strong>增</strong>：<code>push</code>、<code>unshift</code>、<code>splice</code></li><li><strong>删</strong>：<code>pop</code>、<code>shift</code>、<code>splice</code></li><li><strong>改</strong>：<code>splice</code>、<code>copyWithin</code>、<code>fill</code></li></ul><h3 id="重新排序" tabindex="-1"><a class="header-anchor" href="#重新排序" aria-hidden="true">#</a> 重新排序</h3><ul><li><code>reverse</code>、<code>sort</code></li></ul><h2 id="不改变原数组的方法" tabindex="-1"><a class="header-anchor" href="#不改变原数组的方法" aria-hidden="true">#</a> 不改变原数组的方法：</h2><h3 id="创建新数组" tabindex="-1"><a class="header-anchor" href="#创建新数组" aria-hidden="true">#</a> 创建新数组</h3><ul><li><strong>部分选取</strong>：<code>slice</code>、<code>filter</code></li><li><strong>合并</strong>：<code>concat</code></li></ul><h3 id="迭代-转换" tabindex="-1"><a class="header-anchor" href="#迭代-转换" aria-hidden="true">#</a> 迭代/转换</h3><ul><li><strong>无副作用迭代</strong>：<code>map</code>、<code>forEach</code></li><li><strong>返回单值或布尔值</strong>：<code>reduce</code>、<code>some</code>、<code>every</code>、<code>includes</code></li><li><strong>转换字符串</strong>：<code>join</code></li></ul><h3 id="数组操作" tabindex="-1"><a class="header-anchor" href="#数组操作" aria-hidden="true">#</a> 数组操作</h3><ul><li><strong>展开</strong>：<code>flat</code></li><li><strong>获取迭代器</strong>：<code>keys</code>、<code>entries</code></li></ul><h2 id="特别注意" tabindex="-1"><a class="header-anchor" href="#特别注意" aria-hidden="true">#</a> 特别注意：</h2><ol><li><code>splice</code> 是一个灵活的增删改方法，视参数不同决定行为。</li><li><code>map</code> 在基本类型和引用类型上的区别：基本类型不会改变原数组，但如果数组元素是对象，修改对象属性会影响原数组。</li><li>排序和颠倒顺序的方法 (<code>sort</code>, <code>reverse</code>) 都会直接修改原数组，需要注意其不可逆性。</li></ol>',15),i=[r];function l(s,t){return o(),d("div",null,i)}const h=e(a,[["render",l],["__file","array_api.html.vue"]]);export{h as default};
