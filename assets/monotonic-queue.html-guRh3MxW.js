import{_,r as c,o as i,c as a,a as t,d as e,w as l,b as o,f as u}from"./app-GnK0vSxb.js";const h={},r=t("h1",{id:"单调队列",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#单调队列","aria-hidden":"true"},"#"),o(" 单调队列")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),q=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),H=t("span",{class:"blue"},"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),z=t("code",null,"字符串",-1),M=t("code",null,"字符串匹配",-1),V=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),N=t("code",null,"二叉搜索树",-1),B=t("code",null,"最小生成树",-1),C=t("code",null,"图",-1),E=t("code",null,"有序集合",-1),j=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),O=t("code",null,"强连通分量",-1),R=t("code",null,"欧拉回路",-1),Q=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),F=t("code",null,"树状数组",-1),G=t("code",null,"后缀数组",-1),J=t("p",null,[t("strong",null,"算法")],-1),P=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),qt=t("code",null,"模拟",-1),wt=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),zt=t("code",null,"拒绝采样",-1),Mt=t("code",null,"数据库",-1),Vt=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Nt=t("code",null,"脑筋急转弯",-1),Bt=t("code",null,"交互",-1),Ct=t("code",null,"迭代器",-1),Et=t("code",null,"多线程",-1),jt=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ot=t("td",{style:{"text-align":"center"}},"239",-1),Rt={style:{"text-align":"left"}},Qt={href:"https://leetcode.com/problems/sliding-window-maximum",target:"_blank",rel:"noopener noreferrer"},Tt={style:{"text-align":"center"}},At={style:{"text-align":"left"}},Dt=t("code",null,"队列",-1),Ft=t("code",null,"数组",-1),Gt=t("code",null,"滑动窗口",-1),Jt=t("code",null,"2+",-1),Pt={style:{"text-align":"left"}},St=t("td",{style:{"text-align":"center"}},"683",-1),Ut={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",{style:{"text-align":"center"}},null,-1),Yt={style:{"text-align":"left"}},Zt=t("code",null,"树状数组",-1),$t=t("code",null,"线段树",-1),te=t("code",null,"队列",-1),ee=t("code",null,"5+",-1),oe={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"862",-1),ne={style:{"text-align":"left"}},de={href:"https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},null,-1),ce={style:{"text-align":"left"}},_e=t("code",null,"队列",-1),ie=t("code",null,"数组",-1),ae=t("code",null,"二分查找",-1),ue=t("code",null,"4+",-1),he={style:{"text-align":"left"}},re=t("td",{style:{"text-align":"center"}},"918",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},me={style:{"text-align":"center"}},ye={style:{"text-align":"left"}},xe=t("code",null,"队列",-1),be=t("code",null,"数组",-1),pe=t("code",null,"分治",-1),ke=t("code",null,"2+",-1),qe={style:{"text-align":"left"}},we=t("td",{style:{"text-align":"center"}},"1425",-1),He={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},Ie=t("td",{style:{"text-align":"center"}},null,-1),ze={style:{"text-align":"left"}},Me=t("code",null,"队列",-1),Ve=t("code",null,"数组",-1),Le=t("code",null,"动态规划",-1),Ne=t("code",null,"3+",-1),Be={style:{"text-align":"left"}},Ce=t("td",{style:{"text-align":"center"}},"1438",-1),Ee={style:{"text-align":"left"}},je={href:"https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",target:"_blank",rel:"noopener noreferrer"},Ke=t("td",{style:{"text-align":"center"}},null,-1),Oe={style:{"text-align":"left"}},Re=t("code",null,"队列",-1),Qe=t("code",null,"数组",-1),Te=t("code",null,"有序集合",-1),Ae=t("code",null,"3+",-1),De={style:{"text-align":"left"}},Fe=t("td",{style:{"text-align":"center"}},"1499",-1),Ge={style:{"text-align":"left"}},Je={href:"https://leetcode.com/problems/max-value-of-equation",target:"_blank",rel:"noopener noreferrer"},Pe=t("td",{style:{"text-align":"center"}},null,-1),Se={style:{"text-align":"left"}},Ue=t("code",null,"队列",-1),We=t("code",null,"数组",-1),Xe=t("code",null,"滑动窗口",-1),Ye=t("code",null,"2+",-1),Ze={style:{"text-align":"left"}},$e=t("td",{style:{"text-align":"center"}},"1687",-1),to={style:{"text-align":"left"}},eo={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},oo=t("td",{style:{"text-align":"center"}},null,-1),lo={style:{"text-align":"left"}},no=t("code",null,"线段树",-1),so=t("code",null,"队列",-1),co=t("code",null,"数组",-1),_o=t("code",null,"4+",-1),io={style:{"text-align":"left"}},ao=t("td",{style:{"text-align":"center"}},"1696",-1),uo={style:{"text-align":"left"}},ho={href:"https://leetcode.com/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},ro=t("td",{style:{"text-align":"center"}},null,-1),fo={style:{"text-align":"left"}},go=t("code",null,"队列",-1),mo=t("code",null,"数组",-1),yo=t("code",null,"动态规划",-1),xo=t("code",null,"2+",-1),bo={style:{"text-align":"left"}},po=t("td",{style:{"text-align":"center"}},"2071",-1),ko={style:{"text-align":"left"}},qo={href:"https://leetcode.com/problems/maximum-number-of-tasks-you-can-assign",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},null,-1),Ho={style:{"text-align":"left"}},vo=t("code",null,"贪心",-1),Io=t("code",null,"队列",-1),zo=t("code",null,"数组",-1),Mo=t("code",null,"3+",-1),Vo={style:{"text-align":"left"}},Lo=t("td",{style:{"text-align":"center"}},"2398",-1),No={style:{"text-align":"left"}},Bo={href:"https://leetcode.com/problems/maximum-number-of-robots-within-budget",target:"_blank",rel:"noopener noreferrer"},Co=t("td",{style:{"text-align":"center"}},null,-1),Eo={style:{"text-align":"left"}},jo=t("code",null,"队列",-1),Ko=t("code",null,"数组",-1),Oo=t("code",null,"二分查找",-1),Ro=t("code",null,"4+",-1),Qo={style:{"text-align":"left"}},To=t("td",{style:{"text-align":"center"}},"2407",-1),Ao={style:{"text-align":"left"}},Do={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},Fo=t("td",{style:{"text-align":"center"}},null,-1),Go={style:{"text-align":"left"}},Jo=t("code",null,"树状数组",-1),Po=t("code",null,"线段树",-1),So=t("code",null,"队列",-1),Uo=t("code",null,"4+",-1),Wo={style:{"text-align":"left"}},Xo=t("td",{style:{"text-align":"center"}},"2444",-1),Yo={style:{"text-align":"left"}},Zo={href:"https://leetcode.com/problems/count-subarrays-with-fixed-bounds",target:"_blank",rel:"noopener noreferrer"},$o=t("td",{style:{"text-align":"center"}},null,-1),tl={style:{"text-align":"left"}},el=t("code",null,"队列",-1),ol=t("code",null,"数组",-1),ll=t("code",null,"滑动窗口",-1),nl=t("code",null,"1+",-1),dl={style:{"text-align":"left"}},sl=t("td",{style:{"text-align":"center"}},"2762",-1),cl={style:{"text-align":"left"}},_l={href:"https://leetcode.com/problems/continuous-subarrays",target:"_blank",rel:"noopener noreferrer"},il=t("td",{style:{"text-align":"center"}},null,-1),al={style:{"text-align":"left"}},ul=t("code",null,"队列",-1),hl=t("code",null,"数组",-1),rl=t("code",null,"有序集合",-1),fl=t("code",null,"3+",-1),gl={style:{"text-align":"left"}},ml=t("td",{style:{"text-align":"center"}},"2944",-1),yl={style:{"text-align":"left"}},xl={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},bl=t("td",{style:{"text-align":"center"}},null,-1),pl={style:{"text-align":"left"}},kl=t("code",null,"队列",-1),ql=t("code",null,"数组",-1),wl=t("code",null,"动态规划",-1),Hl=t("code",null,"2+",-1),vl={style:{"text-align":"left"}},Il=t("td",{style:{"text-align":"center"}},"2945",-1),zl={style:{"text-align":"left"}},Ml={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},Vl=t("td",{style:{"text-align":"center"}},null,-1),Ll={style:{"text-align":"left"}},Nl=t("code",null,"栈",-1),Bl=t("code",null,"队列",-1),Cl=t("code",null,"数组",-1),El=t("code",null,"4+",-1),jl={style:{"text-align":"left"}},Kl=t("td",{style:{"text-align":"center"}},"2969",-1),Ol={style:{"text-align":"left"}},Rl={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},Ql=t("td",{style:{"text-align":"center"}},null,-1),Tl={style:{"text-align":"left"}},Al=t("code",null,"队列",-1),Dl=t("code",null,"数组",-1),Fl=t("code",null,"动态规划",-1),Gl=t("code",null,"2+",-1),Jl={style:{"text-align":"left"}},Pl=t("td",{style:{"text-align":"center"}},"剑指 Offer 59 - I",-1),Sl={style:{"text-align":"left"}},Ul={href:"https://leetcode.cn/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},Wl=t("td",{style:{"text-align":"center"}},null,-1),Xl={style:{"text-align":"left"}},Yl=t("code",null,"队列",-1),Zl=t("code",null,"数组",-1),$l=t("code",null,"滑动窗口",-1),tn=t("code",null,"2+",-1),en={style:{"text-align":"left"}},on=t("td",{style:{"text-align":"center"}},"剑指 Offer 59 - II",-1),ln={style:{"text-align":"left"}},nn={href:"https://leetcode.cn/problems/dui-lie-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},dn=t("td",{style:{"text-align":"center"}},null,-1),sn={style:{"text-align":"left"}},cn=t("code",null,"设计",-1),_n=t("code",null,"队列",-1),an=t("code",null,"单调队列",-1),un={style:{"text-align":"left"}};function hn(rn,fn){const n=c("RouterLink"),d=c("ExternalLinkIcon"),s=c("font");return i(),a("div",null,[r,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[w]),_:1}),o(),H,o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[G]),_:1})]),J,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Et]),_:1})])]),jt,u(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Ot,t("td",Rt,[t("a",Qt,[o("滑动窗口最大值"),e(d)])]),t("td",Tt,[e(n,{to:"/leetcode/problem/0239.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",At,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[Gt]),_:1}),o(),Jt]),t("td",Pt,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[St,t("td",Ut,[t("a",Wt,[o("K 个关闭的灯泡"),e(d)])]),Xt,t("td",Yt,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[te]),_:1}),o(),ee]),t("td",oe,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[le,t("td",ne,[t("a",de,[o("和至少为 K 的最短子数组"),e(d)])]),se,t("td",ce,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[_e]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ie]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[ae]),_:1}),o(),ue]),t("td",he,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[re,t("td",fe,[t("a",ge,[o("环形子数组的最大和"),e(d)])]),t("td",me,[e(n,{to:"/leetcode/problem/0918.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",ye,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[xe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[be]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[pe]),_:1}),o(),ke]),t("td",qe,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[we,t("td",He,[t("a",ve,[o("带限制的子序列和"),e(d)])]),Ie,t("td",ze,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Me]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ve]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Le]),_:1}),o(),Ne]),t("td",Be,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ce,t("td",Ee,[t("a",je,[o("绝对差不超过限制的最长连续子数组"),e(d)])]),Ke,t("td",Oe,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Re]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Qe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[Te]),_:1}),o(),Ae]),t("td",De,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Fe,t("td",Ge,[t("a",Je,[o("满足不等式的最大值"),e(d)])]),Pe,t("td",Se,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Ue]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[We]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[Xe]),_:1}),o(),Ye]),t("td",Ze,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$e,t("td",to,[t("a",eo,[o("从仓库到码头运输箱子"),e(d)])]),oo,t("td",lo,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[no]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[so]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[co]),_:1}),o(),_o]),t("td",io,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ao,t("td",uo,[t("a",ho,[o("跳跃游戏 VI"),e(d)])]),ro,t("td",fo,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[go]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[mo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[yo]),_:1}),o(),xo]),t("td",bo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[po,t("td",ko,[t("a",qo,[o("你可以安排的最多任务数目"),e(d)])]),wo,t("td",Ho,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[vo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Io]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[zo]),_:1}),o(),Mo]),t("td",Vo,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Lo,t("td",No,[t("a",Bo,[o("预算内的最多机器人数目"),e(d)])]),Co,t("td",Eo,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[jo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ko]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Oo]),_:1}),o(),Ro]),t("td",Qo,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[To,t("td",Ao,[t("a",Do,[o("最长递增子序列 II"),e(d)])]),Fo,t("td",Go,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Jo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Po]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[So]),_:1}),o(),Uo]),t("td",Wo,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Xo,t("td",Yo,[t("a",Zo,[o("统计定界子数组的数目"),e(d)])]),$o,t("td",tl,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[el]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ol]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ll]),_:1}),o(),nl]),t("td",dl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[sl,t("td",cl,[t("a",_l,[o("不间断子数组"),e(d)])]),il,t("td",al,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[ul]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[rl]),_:1}),o(),fl]),t("td",gl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ml,t("td",yl,[t("a",xl,[o("购买水果需要的最少金币数"),e(d)])]),bl,t("td",pl,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[kl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ql]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[wl]),_:1}),o(),Hl]),t("td",vl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Il,t("td",zl,[t("a",Ml,[o("找到最大非递减数组的长度"),e(d)])]),Vl,t("td",Ll,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Nl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Bl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Cl]),_:1}),o(),El]),t("td",jl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Kl,t("td",Ol,[t("a",Rl,[o("购买水果需要的最少金币数 II"),e(d)])]),Ql,t("td",Tl,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Al]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Dl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Fl]),_:1}),o(),Gl]),t("td",Jl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Pl,t("td",Sl,[t("a",Ul,[o("滑动窗口的最大值"),e(d)])]),Wl,t("td",Xl,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Yl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Zl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[$l]),_:1}),o(),tn]),t("td",en,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[on,t("td",ln,[t("a",nn,[o("队列的最大值"),e(d)])]),dn,t("td",sn,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[cn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[_n]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[an]),_:1})]),t("td",un,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const mn=_(h,[["render",hn],["__file","monotonic-queue.html.vue"]]);export{mn as default};
