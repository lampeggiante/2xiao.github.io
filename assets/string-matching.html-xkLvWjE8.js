import{_,r as c,o as i,c as a,a as t,d as e,w as o,b as l,f as r}from"./app-GnK0vSxb.js";const h={},u=t("h1",{id:"字符串匹配",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#字符串匹配","aria-hidden":"true"},"#"),l(" 字符串匹配")],-1),g={class:"hint-container details"},f=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),w=t("code",null,"单调栈",-1),I=t("code",null,"队列",-1),H=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),E=t("code",null,"哈希表",-1),M=t("code",null,"字符串",-1),q=t("span",{class:"blue"},"字符串匹配",-1),L=t("code",null,"树",-1),N=t("code",null,"二叉树",-1),V=t("code",null,"二叉搜索树",-1),B=t("code",null,"最小生成树",-1),C=t("code",null,"图",-1),z=t("code",null,"有序集合",-1),R=t("code",null,"拓扑排序",-1),j=t("code",null,"最短路",-1),T=t("code",null,"强连通分量",-1),A=t("code",null,"欧拉回路",-1),D=t("code",null,"双连通分量",-1),F=t("code",null,"并查集",-1),G=t("code",null,"字典树",-1),J=t("code",null,"线段树",-1),K=t("code",null,"树状数组",-1),O=t("code",null,"后缀数组",-1),P=t("p",null,[t("strong",null,"算法")],-1),Q=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),gt=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),wt=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),Et=t("code",null,"水塘抽样",-1),Mt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Nt=t("code",null,"数据流",-1),Vt=t("code",null,"脑筋急转弯",-1),Bt=t("code",null,"交互",-1),Ct=t("code",null,"迭代器",-1),zt=t("code",null,"多线程",-1),Rt=t("hr",null,null,-1),jt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Tt=t("td",{style:{"text-align":"center"}},"28",-1),At={style:{"text-align":"left"}},Dt={href:"https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string",target:"_blank",rel:"noopener noreferrer"},Ft={style:{"text-align":"center"}},Gt={style:{"text-align":"left"}},Jt=t("code",null,"双指针",-1),Kt=t("code",null,"字符串",-1),Ot=t("code",null,"字符串匹配",-1),Pt={style:{"text-align":"left"}},Qt=t("td",{style:{"text-align":"center"}},"214",-1),St={style:{"text-align":"left"}},Ut={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},Wt=t("td",{style:{"text-align":"center"}},null,-1),Xt={style:{"text-align":"left"}},Yt=t("code",null,"字符串",-1),Zt=t("code",null,"字符串匹配",-1),$t=t("code",null,"哈希函数",-1),te=t("code",null,"1+",-1),ee={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"459",-1),oe={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/repeated-substring-pattern",target:"_blank",rel:"noopener noreferrer"},de={style:{"text-align":"center"}},se={style:{"text-align":"left"}},ce=t("code",null,"字符串",-1),_e=t("code",null,"字符串匹配",-1),ie={style:{"text-align":"left"}},ae=t("td",{style:{"text-align":"center"}},"572",-1),re={style:{"text-align":"left"}},he={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},ue={style:{"text-align":"center"}},ge={style:{"text-align":"left"}},fe=t("code",null,"树",-1),me=t("code",null,"深度优先搜索",-1),ye=t("code",null,"二叉树",-1),xe=t("code",null,"2+",-1),pe={style:{"text-align":"left"}},be=t("td",{style:{"text-align":"center"}},"616",-1),ke={style:{"text-align":"left"}},we={href:"https://leetcode.com/problems/add-bold-tag-in-string",target:"_blank",rel:"noopener noreferrer"},Ie=t("td",{style:{"text-align":"center"}},null,-1),He={style:{"text-align":"left"}},ve=t("code",null,"字典树",-1),Ee=t("code",null,"数组",-1),Me=t("code",null,"哈希表",-1),qe=t("code",null,"2+",-1),Le={style:{"text-align":"left"}},Ne=t("td",{style:{"text-align":"center"}},"686",-1),Ve={style:{"text-align":"left"}},Be={href:"https://leetcode.com/problems/repeated-string-match",target:"_blank",rel:"noopener noreferrer"},Ce=t("td",{style:{"text-align":"center"}},null,-1),ze={style:{"text-align":"left"}},Re=t("code",null,"字符串",-1),je=t("code",null,"字符串匹配",-1),Te={style:{"text-align":"left"}},Ae=t("td",{style:{"text-align":"center"}},"758",-1),De={style:{"text-align":"left"}},Fe={href:"https://leetcode.com/problems/bold-words-in-string",target:"_blank",rel:"noopener noreferrer"},Ge=t("td",{style:{"text-align":"center"}},null,-1),Je={style:{"text-align":"left"}},Ke=t("code",null,"字典树",-1),Oe=t("code",null,"数组",-1),Pe=t("code",null,"哈希表",-1),Qe=t("code",null,"2+",-1),Se={style:{"text-align":"left"}},Ue=t("td",{style:{"text-align":"center"}},"796",-1),We={style:{"text-align":"left"}},Xe={href:"https://leetcode.com/problems/rotate-string",target:"_blank",rel:"noopener noreferrer"},Ye=t("td",{style:{"text-align":"center"}},null,-1),Ze={style:{"text-align":"left"}},$e=t("code",null,"字符串",-1),tl=t("code",null,"字符串匹配",-1),el={style:{"text-align":"left"}},ll=t("td",{style:{"text-align":"center"}},"1023",-1),ol={style:{"text-align":"left"}},nl={href:"https://leetcode.com/problems/camelcase-matching",target:"_blank",rel:"noopener noreferrer"},dl=t("td",{style:{"text-align":"center"}},null,-1),sl={style:{"text-align":"left"}},cl=t("code",null,"字典树",-1),_l=t("code",null,"数组",-1),il=t("code",null,"双指针",-1),al=t("code",null,"2+",-1),rl={style:{"text-align":"left"}},hl=t("td",{style:{"text-align":"center"}},"1392",-1),ul={style:{"text-align":"left"}},gl={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},fl=t("td",{style:{"text-align":"center"}},null,-1),ml={style:{"text-align":"left"}},yl=t("code",null,"字符串",-1),xl=t("code",null,"字符串匹配",-1),pl=t("code",null,"哈希函数",-1),bl=t("code",null,"1+",-1),kl={style:{"text-align":"left"}},wl=t("td",{style:{"text-align":"center"}},"1397",-1),Il={style:{"text-align":"left"}},Hl={href:"https://leetcode.com/problems/find-all-good-strings",target:"_blank",rel:"noopener noreferrer"},vl=t("td",{style:{"text-align":"center"}},null,-1),El={style:{"text-align":"left"}},Ml=t("code",null,"字符串",-1),ql=t("code",null,"动态规划",-1),Ll=t("code",null,"字符串匹配",-1),Nl={style:{"text-align":"left"}},Vl=t("td",{style:{"text-align":"center"}},"1408",-1),Bl={style:{"text-align":"left"}},Cl={href:"https://leetcode.com/problems/string-matching-in-an-array",target:"_blank",rel:"noopener noreferrer"},zl=t("td",{style:{"text-align":"center"}},null,-1),Rl={style:{"text-align":"left"}},jl=t("code",null,"数组",-1),Tl=t("code",null,"字符串",-1),Al=t("code",null,"字符串匹配",-1),Dl={style:{"text-align":"left"}},Fl=t("td",{style:{"text-align":"center"}},"1455",-1),Gl={style:{"text-align":"left"}},Jl={href:"https://leetcode.com/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",target:"_blank",rel:"noopener noreferrer"},Kl=t("td",{style:{"text-align":"center"}},null,-1),Ol={style:{"text-align":"left"}},Pl=t("code",null,"双指针",-1),Ql=t("code",null,"字符串",-1),Sl=t("code",null,"字符串匹配",-1),Ul={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"1668",-1),Xl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},Zl=t("td",{style:{"text-align":"center"}},null,-1),$l={style:{"text-align":"left"}},to=t("code",null,"字符串",-1),eo=t("code",null,"动态规划",-1),lo=t("code",null,"字符串匹配",-1),oo={style:{"text-align":"left"}},no=t("td",{style:{"text-align":"center"}},"1764",-1),so={style:{"text-align":"left"}},co={href:"https://leetcode.com/problems/form-array-by-concatenating-subarrays-of-another-array",target:"_blank",rel:"noopener noreferrer"},_o=t("td",{style:{"text-align":"center"}},null,-1),io={style:{"text-align":"left"}},ao=t("code",null,"贪心",-1),ro=t("code",null,"数组",-1),ho=t("code",null,"双指针",-1),uo=t("code",null,"1+",-1),go={style:{"text-align":"left"}},fo=t("td",{style:{"text-align":"center"}},"2185",-1),mo={style:{"text-align":"left"}},yo={href:"https://leetcode.com/problems/counting-words-with-a-given-prefix",target:"_blank",rel:"noopener noreferrer"},xo=t("td",{style:{"text-align":"center"}},null,-1),po={style:{"text-align":"left"}},bo=t("code",null,"数组",-1),ko=t("code",null,"字符串",-1),wo=t("code",null,"字符串匹配",-1),Io={style:{"text-align":"left"}},Ho=t("td",{style:{"text-align":"center"}},"2223",-1),vo={style:{"text-align":"left"}},Eo={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},Mo=t("td",{style:{"text-align":"center"}},null,-1),qo={style:{"text-align":"left"}},Lo=t("code",null,"字符串",-1),No=t("code",null,"二分查找",-1),Vo=t("code",null,"字符串匹配",-1),Bo=t("code",null,"3+",-1),Co={style:{"text-align":"left"}},zo=t("td",{style:{"text-align":"center"}},"2301",-1),Ro={style:{"text-align":"left"}},jo={href:"https://leetcode.com/problems/match-substring-after-replacement",target:"_blank",rel:"noopener noreferrer"},To=t("td",{style:{"text-align":"center"}},null,-1),Ao={style:{"text-align":"left"}},Do=t("code",null,"数组",-1),Fo=t("code",null,"哈希表",-1),Go=t("code",null,"字符串",-1),Jo=t("code",null,"1+",-1),Ko={style:{"text-align":"left"}},Oo=t("td",{style:{"text-align":"center"}},"2430",-1),Po={style:{"text-align":"left"}},Qo={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},So=t("td",{style:{"text-align":"center"}},null,-1),Uo={style:{"text-align":"left"}},Wo=t("code",null,"字符串",-1),Xo=t("code",null,"动态规划",-1),Yo=t("code",null,"字符串匹配",-1),Zo=t("code",null,"2+",-1),$o={style:{"text-align":"left"}},tn=t("td",{style:{"text-align":"center"}},"2851",-1),en={style:{"text-align":"left"}},ln={href:"https://leetcode.com/problems/string-transformation",target:"_blank",rel:"noopener noreferrer"},on=t("td",{style:{"text-align":"center"}},null,-1),nn={style:{"text-align":"left"}},dn=t("code",null,"数学",-1),sn=t("code",null,"字符串",-1),cn=t("code",null,"动态规划",-1),_n=t("code",null,"1+",-1),an={style:{"text-align":"left"}},rn=t("td",{style:{"text-align":"center"}},"3006",-1),hn={style:{"text-align":"left"}},un={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},gn=t("td",{style:{"text-align":"center"}},null,-1),fn={style:{"text-align":"left"}},mn=t("code",null,"双指针",-1),yn=t("code",null,"字符串",-1),xn=t("code",null,"二分查找",-1),pn=t("code",null,"3+",-1),bn={style:{"text-align":"left"}},kn=t("td",{style:{"text-align":"center"}},"3008",-1),wn={style:{"text-align":"left"}},In={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},Hn=t("td",{style:{"text-align":"center"}},null,-1),vn={style:{"text-align":"left"}},En=t("code",null,"双指针",-1),Mn=t("code",null,"字符串",-1),qn=t("code",null,"二分查找",-1),Ln=t("code",null,"3+",-1),Nn={style:{"text-align":"left"}},Vn=t("td",{style:{"text-align":"center"}},"3023",-1),Bn={style:{"text-align":"left"}},Cn={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},zn=t("td",{style:{"text-align":"center"}},null,-1),Rn={style:{"text-align":"left"}},jn=t("code",null,"数组",-1),Tn=t("code",null,"字符串匹配",-1),An=t("code",null,"滑动窗口",-1),Dn=t("code",null,"2+",-1),Fn={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"3029",-1),Jn={style:{"text-align":"left"}},Kn={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},On=t("td",{style:{"text-align":"center"}},null,-1),Pn={style:{"text-align":"left"}},Qn=t("code",null,"字符串",-1),Sn=t("code",null,"字符串匹配",-1),Un=t("code",null,"哈希函数",-1),Wn=t("code",null,"1+",-1),Xn={style:{"text-align":"left"}},Yn=t("td",{style:{"text-align":"center"}},"3031",-1),Zn={style:{"text-align":"left"}},$n={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},td=t("td",{style:{"text-align":"center"}},null,-1),ed={style:{"text-align":"left"}},ld=t("code",null,"字符串",-1),od=t("code",null,"字符串匹配",-1),nd=t("code",null,"哈希函数",-1),dd=t("code",null,"1+",-1),sd={style:{"text-align":"left"}},cd=t("td",{style:{"text-align":"center"}},"3034",-1),_d={style:{"text-align":"left"}},id={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},ad=t("td",{style:{"text-align":"center"}},null,-1),rd={style:{"text-align":"left"}},hd=t("code",null,"数组",-1),ud=t("code",null,"字符串匹配",-1),gd=t("code",null,"哈希函数",-1),fd=t("code",null,"1+",-1),md={style:{"text-align":"left"}},yd=t("td",{style:{"text-align":"center"}},"3036",-1),xd={style:{"text-align":"left"}},pd={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},bd=t("td",{style:{"text-align":"center"}},null,-1),kd={style:{"text-align":"left"}},wd=t("code",null,"数组",-1),Id=t("code",null,"字符串匹配",-1),Hd=t("code",null,"哈希函数",-1),vd=t("code",null,"1+",-1),Ed={style:{"text-align":"left"}},Md=t("td",{style:{"text-align":"center"}},"3037",-1),qd={style:{"text-align":"left"}},Ld={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},Nd=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},Bd=t("code",null,"数组",-1),Cd=t("code",null,"字符串匹配",-1),zd=t("code",null,"滑动窗口",-1),Rd=t("code",null,"2+",-1),jd={style:{"text-align":"left"}},Td=t("td",{style:{"text-align":"center"}},"3042",-1),Ad={style:{"text-align":"left"}},Dd={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},null,-1),Gd={style:{"text-align":"left"}},Jd=t("code",null,"字典树",-1),Kd=t("code",null,"数组",-1),Od=t("code",null,"字符串",-1),Pd=t("code",null,"3+",-1),Qd={style:{"text-align":"left"}},Sd=t("td",{style:{"text-align":"center"}},"3045",-1),Ud={style:{"text-align":"left"}},Wd={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},Xd=t("td",{style:{"text-align":"center"}},null,-1),Yd={style:{"text-align":"left"}},Zd=t("code",null,"字典树",-1),$d=t("code",null,"数组",-1),ts=t("code",null,"字符串",-1),es=t("code",null,"3+",-1),ls={style:{"text-align":"left"}},os=t("td",{style:{"text-align":"center"}},"3291",-1),ns={style:{"text-align":"left"}},ds={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},ss=t("td",{style:{"text-align":"center"}},null,-1),cs={style:{"text-align":"left"}},_s=t("code",null,"字典树",-1),is=t("code",null,"线段树",-1),as=t("code",null,"数组",-1),rs=t("code",null,"6+",-1),hs={style:{"text-align":"left"}},us=t("td",{style:{"text-align":"center"}},"3292",-1),gs={style:{"text-align":"left"}},fs={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},ms=t("td",{style:{"text-align":"center"}},null,-1),ys={style:{"text-align":"left"}},xs=t("code",null,"线段树",-1),ps=t("code",null,"数组",-1),bs=t("code",null,"字符串",-1),ks=t("code",null,"5+",-1),ws={style:{"text-align":"left"}},Is=t("td",{style:{"text-align":"center"}},"3303",-1),Hs={style:{"text-align":"left"}},vs={href:"https://leetcode.com/problems/find-the-occurrence-of-first-almost-equal-substring",target:"_blank",rel:"noopener noreferrer"},Es=t("td",{style:{"text-align":"center"}},null,-1),Ms={style:{"text-align":"left"}},qs=t("code",null,"字符串",-1),Ls=t("code",null,"字符串匹配",-1),Ns={style:{"text-align":"left"}},Vs=t("td",{style:{"text-align":"center"}},"面试题 01.09",-1),Bs={style:{"text-align":"left"}},Cs={href:"https://leetcode.cn/problems/string-rotation-lcci",target:"_blank",rel:"noopener noreferrer"},zs=t("td",{style:{"text-align":"center"}},null,-1),Rs={style:{"text-align":"left"}},js=t("code",null,"字符串",-1),Ts=t("code",null,"字符串匹配",-1),As={style:{"text-align":"left"}},Ds=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),Fs={style:{"text-align":"left"}},Gs={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},Js=t("td",{style:{"text-align":"center"}},null,-1),Ks={style:{"text-align":"left"}},Os=t("code",null,"树",-1),Ps=t("code",null,"深度优先搜索",-1),Qs=t("code",null,"二叉树",-1),Ss=t("code",null,"2+",-1),Us={style:{"text-align":"left"}},Ws=t("td",{style:{"text-align":"center"}},"面试题 17.17",-1),Xs={style:{"text-align":"left"}},Ys={href:"https://leetcode.cn/problems/multi-search-lcci",target:"_blank",rel:"noopener noreferrer"},Zs=t("td",{style:{"text-align":"center"}},null,-1),$s={style:{"text-align":"left"}},tc=t("code",null,"字典树",-1),ec=t("code",null,"数组",-1),lc=t("code",null,"哈希表",-1),oc=t("code",null,"3+",-1),nc={style:{"text-align":"left"}};function dc(sc,cc){const n=c("RouterLink"),d=c("ExternalLinkIcon"),s=c("font");return i(),a("div",null,[u,t("details",g,[f,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[M]),_:1}),l(),q,l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[O]),_:1})]),P,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:o(()=>[Vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[zt]),_:1})])]),Rt,r(" prettier-ignore "),t("table",null,[jt,t("tbody",null,[t("tr",null,[Tt,t("td",At,[t("a",Dt,[l("找出字符串中第一个匹配项的下标"),e(d)])]),t("td",Ft,[e(n,{to:"/leetcode/problem/0028.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gt,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[Jt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Ot]),_:1})]),t("td",Pt,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Qt,t("td",St,[t("a",Ut,[l("最短回文串"),e(d)])]),Wt,t("td",Xt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[$t]),_:1}),l(),te]),t("td",ee,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[le,t("td",oe,[t("a",ne,[l("重复的子字符串"),e(d)])]),t("td",de,[e(n,{to:"/leetcode/problem/0459.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",se,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[_e]),_:1})]),t("td",ie,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ae,t("td",re,[t("a",he,[l("另一棵树的子树"),e(d)])]),t("td",ue,[e(n,{to:"/leetcode/problem/0572.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ge,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[fe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[me]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[ye]),_:1}),l(),xe]),t("td",pe,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[be,t("td",ke,[t("a",we,[l("给字符串添加加粗标签"),e(d)])]),Ie,t("td",He,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[ve]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ee]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Me]),_:1}),l(),qe]),t("td",Le,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ne,t("td",Ve,[t("a",Be,[l("重复叠加字符串匹配"),e(d)])]),Ce,t("td",ze,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Re]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[je]),_:1})]),t("td",Te,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ae,t("td",De,[t("a",Fe,[l("字符串中的加粗单词"),e(d)])]),Ge,t("td",Je,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Ke]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Oe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Pe]),_:1}),l(),Qe]),t("td",Se,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ue,t("td",We,[t("a",Xe,[l("旋转字符串"),e(d)])]),Ye,t("td",Ze,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[$e]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[tl]),_:1})]),t("td",el,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ll,t("td",ol,[t("a",nl,[l("驼峰式匹配"),e(d)])]),dl,t("td",sl,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[cl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[_l]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[il]),_:1}),l(),al]),t("td",rl,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hl,t("td",ul,[t("a",gl,[l("最长快乐前缀"),e(d)])]),fl,t("td",ml,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[yl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[xl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[pl]),_:1}),l(),bl]),t("td",kl,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wl,t("td",Il,[t("a",Hl,[l("找到所有好字符串"),e(d)])]),vl,t("td",El,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Ml]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[ql]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Ll]),_:1})]),t("td",Nl,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vl,t("td",Bl,[t("a",Cl,[l("数组中的字符串匹配"),e(d)])]),zl,t("td",Rl,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[jl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Tl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Al]),_:1})]),t("td",Dl,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fl,t("td",Gl,[t("a",Jl,[l("检查单词是否为句中其他单词的前缀"),e(d)])]),Kl,t("td",Ol,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[Pl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Ql]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Sl]),_:1})]),t("td",Ul,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Wl,t("td",Xl,[t("a",Yl,[l("最大重复子字符串"),e(d)])]),Zl,t("td",$l,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[to]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[eo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[lo]),_:1})]),t("td",oo,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[no,t("td",so,[t("a",co,[l("通过连接另一个数组的子数组得到一个数组"),e(d)])]),_o,t("td",io,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[ao]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ro]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[ho]),_:1}),l(),uo]),t("td",go,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fo,t("td",mo,[t("a",yo,[l("统计包含给定前缀的字符串"),e(d)])]),xo,t("td",po,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[bo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[ko]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[wo]),_:1})]),t("td",Io,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ho,t("td",vo,[t("a",Eo,[l("构造字符串的总得分和"),e(d)])]),Mo,t("td",qo,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Lo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[No]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Vo]),_:1}),l(),Bo]),t("td",Co,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zo,t("td",Ro,[t("a",jo,[l("替换字符后匹配"),e(d)])]),To,t("td",Ao,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Do]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Fo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Go]),_:1}),l(),Jo]),t("td",Ko,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oo,t("td",Po,[t("a",Qo,[l("对字母串可执行的最大删除数"),e(d)])]),So,t("td",Uo,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Wo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Xo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Yo]),_:1}),l(),Zo]),t("td",$o,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tn,t("td",en,[t("a",ln,[l("字符串转换"),e(d)])]),on,t("td",nn,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[dn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[cn]),_:1}),l(),_n]),t("td",an,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rn,t("td",hn,[t("a",un,[l("找出数组中的美丽下标 I"),e(d)])]),gn,t("td",fn,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[yn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[xn]),_:1}),l(),pn]),t("td",bn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kn,t("td",wn,[t("a",In,[l("找出数组中的美丽下标 II"),e(d)])]),Hn,t("td",vn,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[En]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Mn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[qn]),_:1}),l(),Ln]),t("td",Nn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vn,t("td",Bn,[t("a",Cn,[l("在无限流中寻找模式 I"),e(d)])]),zn,t("td",Rn,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[jn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Tn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[An]),_:1}),l(),Dn]),t("td",Fn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gn,t("td",Jn,[t("a",Kn,[l("将单词恢复初始状态所需的最短时间 I"),e(d)])]),On,t("td",Pn,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Sn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[Un]),_:1}),l(),Wn]),t("td",Xn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yn,t("td",Zn,[t("a",$n,[l("将单词恢复初始状态所需的最短时间 II"),e(d)])]),td,t("td",ed,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[ld]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[od]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[nd]),_:1}),l(),dd]),t("td",sd,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cd,t("td",_d,[t("a",id,[l("匹配模式数组的子数组数目 I"),e(d)])]),ad,t("td",rd,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[hd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[ud]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[gd]),_:1}),l(),fd]),t("td",md,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yd,t("td",xd,[t("a",pd,[l("匹配模式数组的子数组数目 II"),e(d)])]),bd,t("td",kd,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[wd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Id]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[Hd]),_:1}),l(),vd]),t("td",Ed,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Md,t("td",qd,[t("a",Ld,[l("在无限流中寻找模式 II"),e(d)])]),Nd,t("td",Vd,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Bd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Cd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[zd]),_:1}),l(),Rd]),t("td",jd,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Td,t("td",Ad,[t("a",Dd,[l("统计前后缀下标对 I"),e(d)])]),Fd,t("td",Gd,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Jd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Kd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Od]),_:1}),l(),Pd]),t("td",Qd,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Sd,t("td",Ud,[t("a",Wd,[l("统计前后缀下标对 II"),e(d)])]),Xd,t("td",Yd,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Zd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[$d]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[ts]),_:1}),l(),es]),t("td",ls,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[os,t("td",ns,[t("a",ds,[l("形成目标字符串需要的最少字符串数 I"),e(d)])]),ss,t("td",cs,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[_s]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[is]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[as]),_:1}),l(),rs]),t("td",hs,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[us,t("td",gs,[t("a",fs,[l("形成目标字符串需要的最少字符串数 II"),e(d)])]),ms,t("td",ys,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[xs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ps]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[bs]),_:1}),l(),ks]),t("td",ws,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Is,t("td",Hs,[t("a",vs,[l("第一个几乎相等子字符串的下标"),e(d)])]),Es,t("td",Ms,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[qs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Ls]),_:1})]),t("td",Ns,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vs,t("td",Bs,[t("a",Cs,[l("字符串轮转"),e(d)])]),zs,t("td",Rs,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[js]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Ts]),_:1})]),t("td",As,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ds,t("td",Fs,[t("a",Gs,[l("检查子树"),e(d)])]),Js,t("td",Ks,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Os]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ps]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Qs]),_:1}),l(),Ss]),t("td",Us,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ws,t("td",Xs,[t("a",Ys,[l("多次搜索"),e(d)])]),Zs,t("td",$s,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[tc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ec]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[lc]),_:1}),l(),oc]),t("td",nc,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const ic=_(h,[["render",dc],["__file","string-matching.html.vue"]]);export{ic as default};
