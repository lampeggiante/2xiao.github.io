import{_,r as c,o as i,c as a,a as t,d as e,w as o,b as l,f as h}from"./app-GnK0vSxb.js";const u={},r=t("h1",{id:"哈希函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#哈希函数","aria-hidden":"true"},"#"),l(" 哈希函数")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),I=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),H=t("code",null,"单调队列",-1),M=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),E=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),N=t("code",null,"二叉树",-1),z=t("code",null,"二叉搜索树",-1),V=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),R=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),T=t("code",null,"强连通分量",-1),j=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),D=t("code",null,"并查集",-1),F=t("code",null,"字典树",-1),U=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),O=t("p",null,[t("strong",null,"算法")],-1),P=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),S=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ht=t("code",null,"计数",-1),ut=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ft=t("span",{class:"blue"},"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),It=t("code",null,"模拟",-1),wt=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),Mt=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Et=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Nt=t("code",null,"数据流",-1),zt=t("code",null,"脑筋急转弯",-1),Vt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Rt=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Tt=t("td",{style:{"text-align":"center"}},"187",-1),jt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/repeated-dna-sequences",target:"_blank",rel:"noopener noreferrer"},Dt=t("td",{style:{"text-align":"center"}},null,-1),Ft={style:{"text-align":"left"}},Ut=t("code",null,"位运算",-1),Gt=t("code",null,"哈希表",-1),Jt=t("code",null,"字符串",-1),Ot=t("code",null,"3+",-1),Pt={style:{"text-align":"left"}},Qt=t("td",{style:{"text-align":"center"}},"214",-1),St={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",{style:{"text-align":"center"}},null,-1),Yt={style:{"text-align":"left"}},Zt=t("code",null,"字符串",-1),$t=t("code",null,"字符串匹配",-1),te=t("code",null,"哈希函数",-1),ee=t("code",null,"1+",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"535",-1),ne={style:{"text-align":"left"}},de={href:"https://leetcode.com/problems/encode-and-decode-tinyurl",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},null,-1),ce={style:{"text-align":"left"}},_e=t("code",null,"设计",-1),ie=t("code",null,"哈希表",-1),ae=t("code",null,"字符串",-1),he=t("code",null,"1+",-1),ue={style:{"text-align":"left"}},re=t("td",{style:{"text-align":"center"}},"572",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},me={style:{"text-align":"center"}},ye={style:{"text-align":"left"}},xe=t("code",null,"树",-1),be=t("code",null,"深度优先搜索",-1),pe=t("code",null,"二叉树",-1),ke=t("code",null,"2+",-1),Ie={style:{"text-align":"left"}},we=t("td",{style:{"text-align":"center"}},"694",-1),He={style:{"text-align":"left"}},Me={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},ve=t("td",{style:{"text-align":"center"}},null,-1),qe={style:{"text-align":"left"}},Ee=t("code",null,"深度优先搜索",-1),Le=t("code",null,"广度优先搜索",-1),Ne=t("code",null,"并查集",-1),ze=t("code",null,"2+",-1),Ve={style:{"text-align":"left"}},Be=t("td",{style:{"text-align":"center"}},"705",-1),Ce={style:{"text-align":"left"}},Re={href:"https://leetcode.com/problems/design-hashset",target:"_blank",rel:"noopener noreferrer"},Ke={style:{"text-align":"center"}},Te={style:{"text-align":"left"}},je=t("code",null,"设计",-1),Ae=t("code",null,"数组",-1),De=t("code",null,"哈希表",-1),Fe=t("code",null,"2+",-1),Ue={style:{"text-align":"left"}},Ge=t("td",{style:{"text-align":"center"}},"706",-1),Je={style:{"text-align":"left"}},Oe={href:"https://leetcode.com/problems/design-hashmap",target:"_blank",rel:"noopener noreferrer"},Pe={style:{"text-align":"center"}},Qe={style:{"text-align":"left"}},Se=t("code",null,"设计",-1),We=t("code",null,"数组",-1),Xe=t("code",null,"哈希表",-1),Ye=t("code",null,"2+",-1),Ze={style:{"text-align":"left"}},$e=t("td",{style:{"text-align":"center"}},"711",-1),tl={style:{"text-align":"left"}},el={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},ll=t("td",{style:{"text-align":"center"}},null,-1),ol={style:{"text-align":"left"}},nl=t("code",null,"深度优先搜索",-1),dl=t("code",null,"广度优先搜索",-1),sl=t("code",null,"并查集",-1),cl=t("code",null,"2+",-1),_l={style:{"text-align":"left"}},il=t("td",{style:{"text-align":"center"}},"718",-1),al={style:{"text-align":"left"}},hl={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},ul=t("td",{style:{"text-align":"center"}},null,-1),rl={style:{"text-align":"left"}},fl=t("code",null,"数组",-1),gl=t("code",null,"二分查找",-1),ml=t("code",null,"动态规划",-1),yl=t("code",null,"3+",-1),xl={style:{"text-align":"left"}},bl=t("td",{style:{"text-align":"center"}},"1044",-1),pl={style:{"text-align":"left"}},kl={href:"https://leetcode.com/problems/longest-duplicate-substring",target:"_blank",rel:"noopener noreferrer"},Il=t("td",{style:{"text-align":"center"}},null,-1),wl={style:{"text-align":"left"}},Hl=t("code",null,"字符串",-1),Ml=t("code",null,"二分查找",-1),vl=t("code",null,"后缀数组",-1),ql=t("code",null,"3+",-1),El={style:{"text-align":"left"}},Ll=t("td",{style:{"text-align":"center"}},"1062",-1),Nl={style:{"text-align":"left"}},zl={href:"https://leetcode.com/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},Vl=t("td",{style:{"text-align":"center"}},null,-1),Bl={style:{"text-align":"left"}},Cl=t("code",null,"字符串",-1),Rl=t("code",null,"二分查找",-1),Kl=t("code",null,"动态规划",-1),Tl=t("code",null,"3+",-1),jl={style:{"text-align":"left"}},Al=t("td",{style:{"text-align":"center"}},"1147",-1),Dl={style:{"text-align":"left"}},Fl={href:"https://leetcode.com/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},Ul=t("td",{style:{"text-align":"center"}},null,-1),Gl={style:{"text-align":"left"}},Jl=t("code",null,"贪心",-1),Ol=t("code",null,"双指针",-1),Pl=t("code",null,"字符串",-1),Ql=t("code",null,"3+",-1),Sl={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"1316",-1),Xl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/distinct-echo-substrings",target:"_blank",rel:"noopener noreferrer"},Zl=t("td",{style:{"text-align":"center"}},null,-1),$l={style:{"text-align":"left"}},to=t("code",null,"字典树",-1),eo=t("code",null,"字符串",-1),lo=t("code",null,"哈希函数",-1),oo=t("code",null,"1+",-1),no={style:{"text-align":"left"}},so=t("td",{style:{"text-align":"center"}},"1392",-1),co={style:{"text-align":"left"}},_o={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},io=t("td",{style:{"text-align":"center"}},null,-1),ao={style:{"text-align":"left"}},ho=t("code",null,"字符串",-1),uo=t("code",null,"字符串匹配",-1),ro=t("code",null,"哈希函数",-1),fo=t("code",null,"1+",-1),go={style:{"text-align":"left"}},mo=t("td",{style:{"text-align":"center"}},"1461",-1),yo={style:{"text-align":"left"}},xo={href:"https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k",target:"_blank",rel:"noopener noreferrer"},bo=t("td",{style:{"text-align":"center"}},null,-1),po={style:{"text-align":"left"}},ko=t("code",null,"位运算",-1),Io=t("code",null,"哈希表",-1),wo=t("code",null,"字符串",-1),Ho=t("code",null,"2+",-1),Mo={style:{"text-align":"left"}},vo=t("td",{style:{"text-align":"center"}},"1554",-1),qo={style:{"text-align":"left"}},Eo={href:"https://leetcode.com/problems/strings-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},Lo=t("td",{style:{"text-align":"center"}},null,-1),No={style:{"text-align":"left"}},zo=t("code",null,"哈希表",-1),Vo=t("code",null,"字符串",-1),Bo=t("code",null,"哈希函数",-1),Co=t("code",null,"1+",-1),Ro={style:{"text-align":"left"}},Ko=t("td",{style:{"text-align":"center"}},"1698",-1),To={style:{"text-align":"left"}},jo={href:"https://leetcode.com/problems/number-of-distinct-substrings-in-a-string",target:"_blank",rel:"noopener noreferrer"},Ao=t("td",{style:{"text-align":"center"}},null,-1),Do={style:{"text-align":"left"}},Fo=t("code",null,"字典树",-1),Uo=t("code",null,"字符串",-1),Go=t("code",null,"后缀数组",-1),Jo=t("code",null,"2+",-1),Oo={style:{"text-align":"left"}},Po=t("td",{style:{"text-align":"center"}},"1923",-1),Qo={style:{"text-align":"left"}},So={href:"https://leetcode.com/problems/longest-common-subpath",target:"_blank",rel:"noopener noreferrer"},Wo=t("td",{style:{"text-align":"center"}},null,-1),Xo={style:{"text-align":"left"}},Yo=t("code",null,"数组",-1),Zo=t("code",null,"二分查找",-1),$o=t("code",null,"后缀数组",-1),tn=t("code",null,"2+",-1),en={style:{"text-align":"left"}},ln=t("td",{style:{"text-align":"center"}},"1948",-1),on={style:{"text-align":"left"}},nn={href:"https://leetcode.com/problems/delete-duplicate-folders-in-system",target:"_blank",rel:"noopener noreferrer"},dn=t("td",{style:{"text-align":"center"}},null,-1),sn={style:{"text-align":"left"}},cn=t("code",null,"字典树",-1),_n=t("code",null,"数组",-1),an=t("code",null,"哈希表",-1),hn=t("code",null,"2+",-1),un={style:{"text-align":"left"}},rn=t("td",{style:{"text-align":"center"}},"1960",-1),fn={style:{"text-align":"left"}},gn={href:"https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},mn=t("td",{style:{"text-align":"center"}},null,-1),yn={style:{"text-align":"left"}},xn=t("code",null,"字符串",-1),bn=t("code",null,"哈希函数",-1),pn=t("code",null,"滚动哈希",-1),kn={style:{"text-align":"left"}},In=t("td",{style:{"text-align":"center"}},"2156",-1),wn={style:{"text-align":"left"}},Hn={href:"https://leetcode.com/problems/find-substring-with-given-hash-value",target:"_blank",rel:"noopener noreferrer"},Mn=t("td",{style:{"text-align":"center"}},null,-1),vn={style:{"text-align":"left"}},qn=t("code",null,"字符串",-1),En=t("code",null,"滑动窗口",-1),Ln=t("code",null,"哈希函数",-1),Nn=t("code",null,"1+",-1),zn={style:{"text-align":"left"}},Vn=t("td",{style:{"text-align":"center"}},"2168",-1),Bn={style:{"text-align":"left"}},Cn={href:"https://leetcode.com/problems/unique-substrings-with-equal-digit-frequency",target:"_blank",rel:"noopener noreferrer"},Rn=t("td",{style:{"text-align":"center"}},null,-1),Kn={style:{"text-align":"left"}},Tn=t("code",null,"哈希表",-1),jn=t("code",null,"字符串",-1),An=t("code",null,"计数",-1),Dn=t("code",null,"2+",-1),Fn={style:{"text-align":"left"}},Un=t("td",{style:{"text-align":"center"}},"2223",-1),Gn={style:{"text-align":"left"}},Jn={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},On=t("td",{style:{"text-align":"center"}},null,-1),Pn={style:{"text-align":"left"}},Qn=t("code",null,"字符串",-1),Sn=t("code",null,"二分查找",-1),Wn=t("code",null,"字符串匹配",-1),Xn=t("code",null,"3+",-1),Yn={style:{"text-align":"left"}},Zn=t("td",{style:{"text-align":"center"}},"2261",-1),$n={style:{"text-align":"left"}},td={href:"https://leetcode.com/problems/k-divisible-elements-subarrays",target:"_blank",rel:"noopener noreferrer"},ed={style:{"text-align":"center"}},ld={style:{"text-align":"left"}},od=t("code",null,"字典树",-1),nd=t("code",null,"数组",-1),dd=t("code",null,"哈希表",-1),sd=t("code",null,"3+",-1),cd={style:{"text-align":"left"}},_d=t("td",{style:{"text-align":"center"}},"2430",-1),id={style:{"text-align":"left"}},ad={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},hd=t("td",{style:{"text-align":"center"}},null,-1),ud={style:{"text-align":"left"}},rd=t("code",null,"字符串",-1),fd=t("code",null,"动态规划",-1),gd=t("code",null,"字符串匹配",-1),md=t("code",null,"2+",-1),yd={style:{"text-align":"left"}},xd=t("td",{style:{"text-align":"center"}},"3006",-1),bd={style:{"text-align":"left"}},pd={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},kd=t("td",{style:{"text-align":"center"}},null,-1),Id={style:{"text-align":"left"}},wd=t("code",null,"双指针",-1),Hd=t("code",null,"字符串",-1),Md=t("code",null,"二分查找",-1),vd=t("code",null,"3+",-1),qd={style:{"text-align":"left"}},Ed=t("td",{style:{"text-align":"center"}},"3008",-1),Ld={style:{"text-align":"left"}},Nd={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},zd=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},Bd=t("code",null,"双指针",-1),Cd=t("code",null,"字符串",-1),Rd=t("code",null,"二分查找",-1),Kd=t("code",null,"3+",-1),Td={style:{"text-align":"left"}},jd=t("td",{style:{"text-align":"center"}},"3023",-1),Ad={style:{"text-align":"left"}},Dd={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},null,-1),Ud={style:{"text-align":"left"}},Gd=t("code",null,"数组",-1),Jd=t("code",null,"字符串匹配",-1),Od=t("code",null,"滑动窗口",-1),Pd=t("code",null,"2+",-1),Qd={style:{"text-align":"left"}},Sd=t("td",{style:{"text-align":"center"}},"3029",-1),Wd={style:{"text-align":"left"}},Xd={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},Yd=t("td",{style:{"text-align":"center"}},null,-1),Zd={style:{"text-align":"left"}},$d=t("code",null,"字符串",-1),ts=t("code",null,"字符串匹配",-1),es=t("code",null,"哈希函数",-1),ls=t("code",null,"1+",-1),os={style:{"text-align":"left"}},ns=t("td",{style:{"text-align":"center"}},"3031",-1),ds={style:{"text-align":"left"}},ss={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},cs=t("td",{style:{"text-align":"center"}},null,-1),_s={style:{"text-align":"left"}},is=t("code",null,"字符串",-1),as=t("code",null,"字符串匹配",-1),hs=t("code",null,"哈希函数",-1),us=t("code",null,"1+",-1),rs={style:{"text-align":"left"}},fs=t("td",{style:{"text-align":"center"}},"3034",-1),gs={style:{"text-align":"left"}},ms={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},ys=t("td",{style:{"text-align":"center"}},null,-1),xs={style:{"text-align":"left"}},bs=t("code",null,"数组",-1),ps=t("code",null,"字符串匹配",-1),ks=t("code",null,"哈希函数",-1),Is=t("code",null,"1+",-1),ws={style:{"text-align":"left"}},Hs=t("td",{style:{"text-align":"center"}},"3036",-1),Ms={style:{"text-align":"left"}},vs={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},qs=t("td",{style:{"text-align":"center"}},null,-1),Es={style:{"text-align":"left"}},Ls=t("code",null,"数组",-1),Ns=t("code",null,"字符串匹配",-1),zs=t("code",null,"哈希函数",-1),Vs=t("code",null,"1+",-1),Bs={style:{"text-align":"left"}},Cs=t("td",{style:{"text-align":"center"}},"3037",-1),Rs={style:{"text-align":"left"}},Ks={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},Ts=t("td",{style:{"text-align":"center"}},null,-1),js={style:{"text-align":"left"}},As=t("code",null,"数组",-1),Ds=t("code",null,"字符串匹配",-1),Fs=t("code",null,"滑动窗口",-1),Us=t("code",null,"2+",-1),Gs={style:{"text-align":"left"}},Js=t("td",{style:{"text-align":"center"}},"3042",-1),Os={style:{"text-align":"left"}},Ps={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},Qs=t("td",{style:{"text-align":"center"}},null,-1),Ss={style:{"text-align":"left"}},Ws=t("code",null,"字典树",-1),Xs=t("code",null,"数组",-1),Ys=t("code",null,"字符串",-1),Zs=t("code",null,"3+",-1),$s={style:{"text-align":"left"}},tc=t("td",{style:{"text-align":"center"}},"3045",-1),ec={style:{"text-align":"left"}},lc={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},oc=t("td",{style:{"text-align":"center"}},null,-1),nc={style:{"text-align":"left"}},dc=t("code",null,"字典树",-1),sc=t("code",null,"数组",-1),cc=t("code",null,"字符串",-1),_c=t("code",null,"3+",-1),ic={style:{"text-align":"left"}},ac=t("td",{style:{"text-align":"center"}},"3135",-1),hc={style:{"text-align":"left"}},uc={href:"https://leetcode.com/problems/equalize-strings-by-adding-or-removing-characters-at-ends",target:"_blank",rel:"noopener noreferrer"},rc=t("td",{style:{"text-align":"center"}},null,-1),fc={style:{"text-align":"left"}},gc=t("code",null,"字符串",-1),mc=t("code",null,"二分查找",-1),yc=t("code",null,"动态规划",-1),xc=t("code",null,"2+",-1),bc={style:{"text-align":"left"}},pc=t("td",{style:{"text-align":"center"}},"3291",-1),kc={style:{"text-align":"left"}},Ic={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},wc=t("td",{style:{"text-align":"center"}},null,-1),Hc={style:{"text-align":"left"}},Mc=t("code",null,"字典树",-1),vc=t("code",null,"线段树",-1),qc=t("code",null,"数组",-1),Ec=t("code",null,"6+",-1),Lc={style:{"text-align":"left"}},Nc=t("td",{style:{"text-align":"center"}},"3292",-1),zc={style:{"text-align":"left"}},Vc={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},Bc=t("td",{style:{"text-align":"center"}},null,-1),Cc={style:{"text-align":"left"}},Rc=t("code",null,"线段树",-1),Kc=t("code",null,"数组",-1),Tc=t("code",null,"字符串",-1),jc=t("code",null,"5+",-1),Ac={style:{"text-align":"left"}},Dc=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),Fc={style:{"text-align":"left"}},Uc={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},Gc=t("td",{style:{"text-align":"center"}},null,-1),Jc={style:{"text-align":"left"}},Oc=t("code",null,"树",-1),Pc=t("code",null,"深度优先搜索",-1),Qc=t("code",null,"二叉树",-1),Sc=t("code",null,"2+",-1),Wc={style:{"text-align":"left"}},Xc=t("td",{style:{"text-align":"center"}},"面试题 17.13",-1),Yc={style:{"text-align":"left"}},Zc={href:"https://leetcode.cn/problems/re-space-lcci",target:"_blank",rel:"noopener noreferrer"},$c=t("td",{style:{"text-align":"center"}},null,-1),t_={style:{"text-align":"left"}},e_=t("code",null,"字典树",-1),l_=t("code",null,"数组",-1),o_=t("code",null,"哈希表",-1),n_=t("code",null,"4+",-1),d_={style:{"text-align":"left"}};function s_(c_,__){const n=c("RouterLink"),d=c("ExternalLinkIcon"),s=c("font");return i(),a("div",null,[r,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[J]),_:1})]),O,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:o(()=>[rt]),_:1}),l(),ft,l(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[Vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Ct]),_:1})])]),Rt,h(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Tt,t("td",jt,[t("a",At,[l("重复的DNA序列"),e(d)])]),Dt,t("td",Ft,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[Ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Jt]),_:1}),l(),Ot]),t("td",Pt,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qt,t("td",St,[t("a",Wt,[l("最短回文串"),e(d)])]),Xt,t("td",Yt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[te]),_:1}),l(),ee]),t("td",le,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oe,t("td",ne,[t("a",de,[l("TinyURL 的加密与解密"),e(d)])]),se,t("td",ce,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[_e]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[ie]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[ae]),_:1}),l(),he]),t("td",ue,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[re,t("td",fe,[t("a",ge,[l("另一棵树的子树"),e(d)])]),t("td",me,[e(n,{to:"/leetcode/problem/0572.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ye,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[xe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[be]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[pe]),_:1}),l(),ke]),t("td",Ie,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[we,t("td",He,[t("a",Me,[l("不同岛屿的数量"),e(d)])]),ve,t("td",qe,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ee]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Le]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Ne]),_:1}),l(),ze]),t("td",Ve,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Be,t("td",Ce,[t("a",Re,[l("设计哈希集合"),e(d)])]),t("td",Ke,[e(n,{to:"/leetcode/problem/0705.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Te,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[je]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ae]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[De]),_:1}),l(),Fe]),t("td",Ue,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ge,t("td",Je,[t("a",Oe,[l("设计哈希映射"),e(d)])]),t("td",Pe,[e(n,{to:"/leetcode/problem/0706.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qe,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Se]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[We]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Xe]),_:1}),l(),Ye]),t("td",Ze,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$e,t("td",tl,[t("a",el,[l("不同岛屿的数量 II"),e(d)])]),ll,t("td",ol,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[dl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[sl]),_:1}),l(),cl]),t("td",_l,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[il,t("td",al,[t("a",hl,[l("最长重复子数组"),e(d)])]),ul,t("td",rl,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[fl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[gl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[ml]),_:1}),l(),yl]),t("td",xl,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bl,t("td",pl,[t("a",kl,[l("最长重复子串"),e(d)])]),Il,t("td",wl,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Hl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[Ml]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[vl]),_:1}),l(),ql]),t("td",El,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ll,t("td",Nl,[t("a",zl,[l("最长重复子串"),e(d)])]),Vl,t("td",Bl,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Cl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[Rl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Kl]),_:1}),l(),Tl]),t("td",jl,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Al,t("td",Dl,[t("a",Fl,[l("段式回文"),e(d)])]),Ul,t("td",Gl,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Jl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[Ol]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Pl]),_:1}),l(),Ql]),t("td",Sl,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wl,t("td",Xl,[t("a",Yl,[l("不同的循环子字符串"),e(d)])]),Zl,t("td",$l,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[to]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[eo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[lo]),_:1}),l(),oo]),t("td",no,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[so,t("td",co,[t("a",_o,[l("最长快乐前缀"),e(d)])]),io,t("td",ao,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[ho]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[uo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[ro]),_:1}),l(),fo]),t("td",go,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mo,t("td",yo,[t("a",xo,[l("检查一个字符串是否包含所有长度为 K 的二进制子串"),e(d)])]),bo,t("td",po,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[ko]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Io]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[wo]),_:1}),l(),Ho]),t("td",Mo,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vo,t("td",qo,[t("a",Eo,[l("只有一个不同字符的字符串"),e(d)])]),Lo,t("td",No,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[zo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Vo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[Bo]),_:1}),l(),Co]),t("td",Ro,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ko,t("td",To,[t("a",jo,[l("字符串的不同子字符串个数"),e(d)])]),Ao,t("td",Do,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Fo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Uo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[Go]),_:1}),l(),Jo]),t("td",Oo,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Po,t("td",Qo,[t("a",So,[l("最长公共子路径"),e(d)])]),Wo,t("td",Xo,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Yo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[Zo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[$o]),_:1}),l(),tn]),t("td",en,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ln,t("td",on,[t("a",nn,[l("删除系统中的重复文件夹"),e(d)])]),dn,t("td",sn,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[cn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[_n]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[an]),_:1}),l(),hn]),t("td",un,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rn,t("td",fn,[t("a",gn,[l("两个回文子字符串长度的最大乘积"),e(d)])]),mn,t("td",yn,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[xn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[bn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:o(()=>[pn]),_:1})]),t("td",kn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[In,t("td",wn,[t("a",Hn,[l("查找给定哈希值的子串"),e(d)])]),Mn,t("td",vn,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[qn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[En]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[Ln]),_:1}),l(),Nn]),t("td",zn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vn,t("td",Bn,[t("a",Cn,[l("每个数字的频率都相同的独特子字符串的数量"),e(d)])]),Rn,t("td",Kn,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Tn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[jn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[An]),_:1}),l(),Dn]),t("td",Fn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Un,t("td",Gn,[t("a",Jn,[l("构造字符串的总得分和"),e(d)])]),On,t("td",Pn,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[Sn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Wn]),_:1}),l(),Xn]),t("td",Yn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zn,t("td",$n,[t("a",td,[l("含最多 K 个可整除元素的子数组"),e(d)])]),t("td",ed,[e(n,{to:"/leetcode/problem/2261.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ld,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[od]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[nd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[dd]),_:1}),l(),sd]),t("td",cd,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_d,t("td",id,[t("a",ad,[l("对字母串可执行的最大删除数"),e(d)])]),hd,t("td",ud,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[rd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[fd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[gd]),_:1}),l(),md]),t("td",yd,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xd,t("td",bd,[t("a",pd,[l("找出数组中的美丽下标 I"),e(d)])]),kd,t("td",Id,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[wd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Hd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[Md]),_:1}),l(),vd]),t("td",qd,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ed,t("td",Ld,[t("a",Nd,[l("找出数组中的美丽下标 II"),e(d)])]),zd,t("td",Vd,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[Bd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Cd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[Rd]),_:1}),l(),Kd]),t("td",Td,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jd,t("td",Ad,[t("a",Dd,[l("在无限流中寻找模式 I"),e(d)])]),Fd,t("td",Ud,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Gd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Jd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[Od]),_:1}),l(),Pd]),t("td",Qd,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sd,t("td",Wd,[t("a",Xd,[l("将单词恢复初始状态所需的最短时间 I"),e(d)])]),Yd,t("td",Zd,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[$d]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[ts]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[es]),_:1}),l(),ls]),t("td",os,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ns,t("td",ds,[t("a",ss,[l("将单词恢复初始状态所需的最短时间 II"),e(d)])]),cs,t("td",_s,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[is]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[as]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[hs]),_:1}),l(),us]),t("td",rs,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fs,t("td",gs,[t("a",ms,[l("匹配模式数组的子数组数目 I"),e(d)])]),ys,t("td",xs,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[bs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[ps]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[ks]),_:1}),l(),Is]),t("td",ws,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hs,t("td",Ms,[t("a",vs,[l("匹配模式数组的子数组数目 II"),e(d)])]),qs,t("td",Es,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ls]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Ns]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[zs]),_:1}),l(),Vs]),t("td",Bs,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cs,t("td",Rs,[t("a",Ks,[l("在无限流中寻找模式 II"),e(d)])]),Ts,t("td",js,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[As]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Ds]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[Fs]),_:1}),l(),Us]),t("td",Gs,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Js,t("td",Os,[t("a",Ps,[l("统计前后缀下标对 I"),e(d)])]),Qs,t("td",Ss,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Ws]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Xs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Ys]),_:1}),l(),Zs]),t("td",$s,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[tc,t("td",ec,[t("a",lc,[l("统计前后缀下标对 II"),e(d)])]),oc,t("td",nc,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[dc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[sc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[cc]),_:1}),l(),_c]),t("td",ic,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ac,t("td",hc,[t("a",uc,[l("通过添加或删除结尾字符来同化字符串"),e(d)])]),rc,t("td",fc,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[gc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[mc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[yc]),_:1}),l(),xc]),t("td",bc,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pc,t("td",kc,[t("a",Ic,[l("形成目标字符串需要的最少字符串数 I"),e(d)])]),wc,t("td",Hc,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Mc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[vc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[qc]),_:1}),l(),Ec]),t("td",Lc,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nc,t("td",zc,[t("a",Vc,[l("形成目标字符串需要的最少字符串数 II"),e(d)])]),Bc,t("td",Cc,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Rc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Kc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Tc]),_:1}),l(),jc]),t("td",Ac,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dc,t("td",Fc,[t("a",Uc,[l("检查子树"),e(d)])]),Gc,t("td",Jc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Oc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Pc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Qc]),_:1}),l(),Sc]),t("td",Wc,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xc,t("td",Yc,[t("a",Zc,[l("恢复空格"),e(d)])]),$c,t("td",t_,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[e_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[l_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[o_]),_:1}),l(),n_]),t("td",d_,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const a_=_(u,[["render",s_],["__file","hash-function.html.vue"]]);export{a_ as default};
