import{_,r as c,o as i,c as a,a as t,d as e,w as l,b as o,f as u}from"./app-mvY9N9Pc.js";const h={},r=t("h1",{id:"双向链表",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#双向链表","aria-hidden":"true"},"#"),o(" 双向链表")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),b=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),x=t("span",{class:"blue"},"双向链表",-1),k=t("code",null,"栈",-1),I=t("code",null,"单调栈",-1),j=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),M=t("code",null,"堆（优先队列）",-1),L=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),O=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),E=t("code",null,"二叉搜索树",-1),H=t("code",null,"最小生成树",-1),N=t("code",null,"图",-1),R=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),B=t("code",null,"最短路",-1),C=t("code",null,"强连通分量",-1),U=t("code",null,"欧拉回路",-1),D=t("code",null,"双连通分量",-1),F=t("code",null,"并查集",-1),Q=t("code",null,"字典树",-1),T=t("code",null,"线段树",-1),X=t("code",null,"树状数组",-1),A=t("code",null,"后缀数组",-1),G=t("p",null,[t("strong",null,"算法")],-1),J=t("code",null,"枚举",-1),K=t("code",null,"递归",-1),P=t("code",null,"分治",-1),S=t("code",null,"回溯",-1),W=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),bt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),xt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),It=t("code",null,"模拟",-1),jt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),Mt=t("code",null,"概率与统计",-1),Lt=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),Ot=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Et=t("code",null,"脑筋急转弯",-1),Ht=t("code",null,"交互",-1),Nt=t("code",null,"迭代器",-1),Rt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ct=t("td",{style:{"text-align":"center"}},"146",-1),Ut={style:{"text-align":"left"}},Dt={href:"https://leetcode.com/problems/lru-cache",target:"_blank",rel:"noopener noreferrer"},Ft={style:{"text-align":"center"}},Qt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0146",target:"_blank",rel:"noopener noreferrer"},Tt={style:{"text-align":"left"}},Xt=t("code",null,"设计",-1),At=t("code",null,"哈希表",-1),Gt=t("code",null,"链表",-1),Jt=t("code",null,"1+",-1),Kt={style:{"text-align":"left"}},Pt=t("td",{style:{"text-align":"center"}},"426",-1),St={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},Yt={style:{"text-align":"center"}},Zt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0426",target:"_blank",rel:"noopener noreferrer"},$t={style:{"text-align":"left"}},te=t("code",null,"栈",-1),ee=t("code",null,"树",-1),oe=t("code",null,"深度优先搜索",-1),le=t("code",null,"4+",-1),ne={style:{"text-align":"left"}},de=t("td",{style:{"text-align":"center"}},"430",-1),se={style:{"text-align":"left"}},ce={href:"https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},_e={style:{"text-align":"center"}},ie={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0430",target:"_blank",rel:"noopener noreferrer"},ae={style:{"text-align":"left"}},ue=t("code",null,"深度优先搜索",-1),he=t("code",null,"链表",-1),re=t("code",null,"双向链表",-1),fe={style:{"text-align":"left"}},ge=t("td",{style:{"text-align":"center"}},"432",-1),me={style:{"text-align":"left"}},ye={href:"https://leetcode.com/problems/all-oone-data-structure",target:"_blank",rel:"noopener noreferrer"},be={style:{"text-align":"center"}},pe={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0432",target:"_blank",rel:"noopener noreferrer"},xe={style:{"text-align":"left"}},ke=t("code",null,"设计",-1),Ie=t("code",null,"哈希表",-1),je=t("code",null,"链表",-1),ve=t("code",null,"1+",-1),Me={style:{"text-align":"left"}},Le=t("td",{style:{"text-align":"center"}},"460",-1),we={style:{"text-align":"left"}},qe={href:"https://leetcode.com/problems/lfu-cache",target:"_blank",rel:"noopener noreferrer"},Oe=t("td",{style:{"text-align":"center"}},null,-1),ze={style:{"text-align":"left"}},Ee=t("code",null,"设计",-1),He=t("code",null,"哈希表",-1),Ne=t("code",null,"链表",-1),Re=t("code",null,"1+",-1),Ve={style:{"text-align":"left"}},Be=t("td",{style:{"text-align":"center"}},"716",-1),Ce={style:{"text-align":"left"}},Ue={href:"https://leetcode.com/problems/max-stack",target:"_blank",rel:"noopener noreferrer"},De=t("td",{style:{"text-align":"center"}},null,-1),Fe={style:{"text-align":"left"}},Qe=t("code",null,"栈",-1),Te=t("code",null,"设计",-1),Xe=t("code",null,"链表",-1),Ae=t("code",null,"2+",-1),Ge={style:{"text-align":"left"}},Je=t("td",{style:{"text-align":"center"}},"1472",-1),Ke={style:{"text-align":"left"}},Pe={href:"https://leetcode.com/problems/design-browser-history",target:"_blank",rel:"noopener noreferrer"},Se={style:{"text-align":"center"}},We={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1472",target:"_blank",rel:"noopener noreferrer"},Ye={style:{"text-align":"left"}},Ze=t("code",null,"栈",-1),$e=t("code",null,"设计",-1),to=t("code",null,"数组",-1),eo=t("code",null,"3+",-1),oo={style:{"text-align":"left"}},lo=t("td",{style:{"text-align":"center"}},"1797",-1),no={style:{"text-align":"left"}},so={href:"https://leetcode.com/problems/design-authentication-manager",target:"_blank",rel:"noopener noreferrer"},co=t("td",{style:{"text-align":"center"}},null,-1),_o={style:{"text-align":"left"}},io=t("code",null,"设计",-1),ao=t("code",null,"哈希表",-1),uo=t("code",null,"链表",-1),ho=t("code",null,"1+",-1),ro={style:{"text-align":"left"}},fo=t("td",{style:{"text-align":"center"}},"2296",-1),go={style:{"text-align":"left"}},mo={href:"https://leetcode.com/problems/design-a-text-editor",target:"_blank",rel:"noopener noreferrer"},yo=t("td",{style:{"text-align":"center"}},null,-1),bo={style:{"text-align":"left"}},po=t("code",null,"栈",-1),xo=t("code",null,"设计",-1),ko=t("code",null,"链表",-1),Io=t("code",null,"3+",-1),jo={style:{"text-align":"left"}},vo=t("td",{style:{"text-align":"center"}},"3263",-1),Mo={style:{"text-align":"left"}},Lo={href:"https://leetcode.com/problems/convert-doubly-linked-list-to-array-i",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},null,-1),qo={style:{"text-align":"left"}},Oo=t("code",null,"数组",-1),zo=t("code",null,"链表",-1),Eo=t("code",null,"双向链表",-1),Ho={style:{"text-align":"left"}},No=t("td",{style:{"text-align":"center"}},"3294",-1),Ro={style:{"text-align":"left"}},Vo={href:"https://leetcode.com/problems/convert-doubly-linked-list-to-array-ii",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},null,-1),Co={style:{"text-align":"left"}},Uo=t("code",null,"数组",-1),Do=t("code",null,"链表",-1),Fo=t("code",null,"双向链表",-1),Qo={style:{"text-align":"left"}},To=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),Xo={style:{"text-align":"left"}},Ao={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},Go={style:{"text-align":"center"}},Jo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_36_1",target:"_blank",rel:"noopener noreferrer"},Ko={style:{"text-align":"left"}},Po=t("code",null,"栈",-1),So=t("code",null,"树",-1),Wo=t("code",null,"深度优先搜索",-1),Yo=t("code",null,"4+",-1),Zo={style:{"text-align":"left"}},$o=t("td",{style:{"text-align":"center"}},"剑指 Offer II 28",-1),tl={style:{"text-align":"left"}},el={href:"https://leetcode.cn/problems/Qv1Da2",target:"_blank",rel:"noopener noreferrer"},ol=t("td",{style:{"text-align":"center"}},null,-1),ll={style:{"text-align":"left"}},nl=t("code",null,"深度优先搜索",-1),dl=t("code",null,"链表",-1),sl=t("code",null,"双向链表",-1),cl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"剑指 Offer II 31",-1),il={style:{"text-align":"left"}},al={href:"https://leetcode.cn/problems/OrIXps",target:"_blank",rel:"noopener noreferrer"},ul={style:{"text-align":"center"}},hl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_II_031",target:"_blank",rel:"noopener noreferrer"},rl={style:{"text-align":"left"}},fl=t("code",null,"设计",-1),gl=t("code",null,"哈希表",-1),ml=t("code",null,"链表",-1),yl=t("code",null,"1+",-1),bl={style:{"text-align":"left"}},pl=t("td",{style:{"text-align":"center"}},"面试题 16.25",-1),xl={style:{"text-align":"left"}},kl={href:"https://leetcode.cn/problems/lru-cache-lcci",target:"_blank",rel:"noopener noreferrer"},Il={style:{"text-align":"center"}},jl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/i_16.25",target:"_blank",rel:"noopener noreferrer"},vl={style:{"text-align":"left"}},Ml=t("code",null,"设计",-1),Ll=t("code",null,"哈希表",-1),wl=t("code",null,"链表",-1),ql=t("code",null,"1+",-1),Ol={style:{"text-align":"left"}};function zl(El,Hl){const n=c("RouterLink"),d=c("ExternalLinkIcon"),s=c("font");return i(),a("div",null,[r,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[p]),_:1}),o(),x,o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[A]),_:1})]),G,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Rt]),_:1})])]),Vt,u(" prettier-ignore "),t("table",null,[Bt,t("tbody",null,[t("tr",null,[Ct,t("td",Ut,[t("a",Dt,[o("LRU 缓存"),e(d)])]),t("td",Ft,[t("a",Qt,[o("[✓]"),e(d)])]),t("td",Tt,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[At]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Gt]),_:1}),o(),Jt]),t("td",Kt,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Pt,t("td",St,[t("a",Wt,[o("将二叉搜索树转化为排序的双向链表"),e(d)])]),t("td",Yt,[t("a",Zt,[o("[✓]"),e(d)])]),t("td",$t,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[te]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ee]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[oe]),_:1}),o(),le]),t("td",ne,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[de,t("td",se,[t("a",ce,[o("扁平化多级双向链表"),e(d)])]),t("td",_e,[t("a",ie,[o("[✓]"),e(d)])]),t("td",ae,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ue]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[he]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[re]),_:1})]),t("td",fe,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ge,t("td",me,[t("a",ye,[o("全 O(1) 的数据结构"),e(d)])]),t("td",be,[t("a",pe,[o("[✓]"),e(d)])]),t("td",xe,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[ke]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Ie]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[je]),_:1}),o(),ve]),t("td",Me,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Le,t("td",we,[t("a",qe,[o("LFU 缓存"),e(d)])]),Oe,t("td",ze,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Ee]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[He]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Ne]),_:1}),o(),Re]),t("td",Ve,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Be,t("td",Ce,[t("a",Ue,[o("最大栈"),e(d)])]),De,t("td",Fe,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Qe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Te]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Xe]),_:1}),o(),Ae]),t("td",Ge,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Je,t("td",Ke,[t("a",Pe,[o("设计浏览器历史记录"),e(d)])]),t("td",Se,[t("a",We,[o("[✓]"),e(d)])]),t("td",Ye,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ze]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[$e]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[to]),_:1}),o(),eo]),t("td",oo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[lo,t("td",no,[t("a",so,[o("设计一个验证系统"),e(d)])]),co,t("td",_o,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[io]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ao]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[uo]),_:1}),o(),ho]),t("td",ro,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fo,t("td",go,[t("a",mo,[o("设计一个文本编辑器"),e(d)])]),yo,t("td",bo,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[po]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[xo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[ko]),_:1}),o(),Io]),t("td",jo,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[vo,t("td",Mo,[t("a",Lo,[o("将双链表转换为数组 I"),e(d)])]),wo,t("td",qo,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Oo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[zo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[Eo]),_:1})]),t("td",Ho,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[No,t("td",Ro,[t("a",Vo,[o("将双链表转换为数组 II"),e(d)])]),Bo,t("td",Co,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Uo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Do]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[Fo]),_:1})]),t("td",Qo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[To,t("td",Xo,[t("a",Ao,[o("二叉搜索树与双向链表"),e(d)])]),t("td",Go,[t("a",Jo,[o("[✓]"),e(d)])]),t("td",Ko,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Po]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[So]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Wo]),_:1}),o(),Yo]),t("td",Zo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[$o,t("td",tl,[t("a",el,[o("展平多级双向链表"),e(d)])]),ol,t("td",ll,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[nl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[dl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[sl]),_:1})]),t("td",cl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_l,t("td",il,[t("a",al,[o("最近最少使用缓存"),e(d)])]),t("td",ul,[t("a",hl,[o("[✓]"),e(d)])]),t("td",rl,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[fl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[gl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[ml]),_:1}),o(),yl]),t("td",bl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[pl,t("td",xl,[t("a",kl,[o("LRU 缓存"),e(d)])]),t("td",Il,[t("a",jl,[o("[✓]"),e(d)])]),t("td",vl,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Ml]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Ll]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[wl]),_:1}),o(),ql]),t("td",Ol,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const Rl=_(h,[["render",zl],["__file","doubly-linked-list.html.vue"]]);export{Rl as default};
