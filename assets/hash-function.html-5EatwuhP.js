import{_,r as c,o as i,c as a,a as t,d as e,w as o,b as l,f as h}from"./app-qrCIIj1V.js";const u={},r=t("h1",{id:"哈希函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#哈希函数","aria-hidden":"true"},"#"),l(" 哈希函数")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),j=t("code",null,"双向链表",-1),p=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),I=t("code",null,"队列",-1),w=t("code",null,"单调队列",-1),H=t("code",null,"堆（优先队列）",-1),M=t("code",null,"哈希表",-1),v=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),E=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),N=t("code",null,"二叉搜索树",-1),z=t("code",null,"最小生成树",-1),V=t("code",null,"图",-1),B=t("code",null,"有序集合",-1),C=t("code",null,"拓扑排序",-1),R=t("code",null,"最短路",-1),K=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),D=t("code",null,"并查集",-1),F=t("code",null,"字典树",-1),U=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),O=t("p",null,[t("strong",null,"算法")],-1),P=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),S=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ht=t("code",null,"计数",-1),ut=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ft=t("span",{class:"blue"},"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),jt=t("code",null,"几何",-1),pt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),wt=t("code",null,"随机化",-1),Ht=t("code",null,"概率与统计",-1),Mt=t("code",null,"水塘抽样",-1),vt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),Et=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Nt=t("code",null,"脑筋急转弯",-1),zt=t("code",null,"交互",-1),Vt=t("code",null,"迭代器",-1),Bt=t("code",null,"多线程",-1),Ct=t("hr",null,null,-1),Rt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Kt=t("td",{style:{"text-align":"center"}},"187",-1),Tt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/repeated-dna-sequences",target:"_blank",rel:"noopener noreferrer"},Dt=t("td",{style:{"text-align":"center"}},null,-1),Ft={style:{"text-align":"left"}},Ut=t("code",null,"位运算",-1),Gt=t("code",null,"哈希表",-1),Jt=t("code",null,"字符串",-1),Ot=t("code",null,"3+",-1),Pt={style:{"text-align":"left"}},Qt=t("td",{style:{"text-align":"center"}},"214",-1),St={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",{style:{"text-align":"center"}},null,-1),Yt={style:{"text-align":"left"}},Zt=t("code",null,"字符串",-1),$t=t("code",null,"字符串匹配",-1),te=t("code",null,"哈希函数",-1),ee=t("code",null,"1+",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"535",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/encode-and-decode-tinyurl",target:"_blank",rel:"noopener noreferrer"},de=t("td",{style:{"text-align":"center"}},null,-1),ce={style:{"text-align":"left"}},_e=t("code",null,"设计",-1),ie=t("code",null,"哈希表",-1),ae=t("code",null,"字符串",-1),he=t("code",null,"1+",-1),ue={style:{"text-align":"left"}},re=t("td",{style:{"text-align":"center"}},"572",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},me={style:{"text-align":"center"}},ye={style:{"text-align":"left"}},xe=t("code",null,"树",-1),be=t("code",null,"深度优先搜索",-1),je=t("code",null,"二叉树",-1),pe=t("code",null,"2+",-1),ke={style:{"text-align":"left"}},Ie=t("td",{style:{"text-align":"center"}},"694",-1),we={style:{"text-align":"left"}},He={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},Me=t("td",{style:{"text-align":"center"}},null,-1),ve={style:{"text-align":"left"}},qe=t("code",null,"深度优先搜索",-1),Ee=t("code",null,"广度优先搜索",-1),Le=t("code",null,"并查集",-1),Ne=t("code",null,"2+",-1),ze={style:{"text-align":"left"}},Ve=t("td",{style:{"text-align":"center"}},"705",-1),Be={style:{"text-align":"left"}},Ce={href:"https://leetcode.com/problems/design-hashset",target:"_blank",rel:"noopener noreferrer"},Re={style:{"text-align":"center"}},Ke={style:{"text-align":"left"}},Te=t("code",null,"设计",-1),Ae=t("code",null,"数组",-1),De=t("code",null,"哈希表",-1),Fe=t("code",null,"2+",-1),Ue={style:{"text-align":"left"}},Ge=t("td",{style:{"text-align":"center"}},"706",-1),Je={style:{"text-align":"left"}},Oe={href:"https://leetcode.com/problems/design-hashmap",target:"_blank",rel:"noopener noreferrer"},Pe={style:{"text-align":"center"}},Qe={style:{"text-align":"left"}},Se=t("code",null,"设计",-1),We=t("code",null,"数组",-1),Xe=t("code",null,"哈希表",-1),Ye=t("code",null,"2+",-1),Ze={style:{"text-align":"left"}},$e=t("td",{style:{"text-align":"center"}},"711",-1),tl={style:{"text-align":"left"}},el={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},ll=t("td",{style:{"text-align":"center"}},null,-1),ol={style:{"text-align":"left"}},nl=t("code",null,"深度优先搜索",-1),sl=t("code",null,"广度优先搜索",-1),dl=t("code",null,"并查集",-1),cl=t("code",null,"2+",-1),_l={style:{"text-align":"left"}},il=t("td",{style:{"text-align":"center"}},"718",-1),al={style:{"text-align":"left"}},hl={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},ul=t("td",{style:{"text-align":"center"}},null,-1),rl={style:{"text-align":"left"}},fl=t("code",null,"数组",-1),gl=t("code",null,"二分查找",-1),ml=t("code",null,"动态规划",-1),yl=t("code",null,"3+",-1),xl={style:{"text-align":"left"}},bl=t("td",{style:{"text-align":"center"}},"1044",-1),jl={style:{"text-align":"left"}},pl={href:"https://leetcode.com/problems/longest-duplicate-substring",target:"_blank",rel:"noopener noreferrer"},kl=t("td",{style:{"text-align":"center"}},null,-1),Il={style:{"text-align":"left"}},wl=t("code",null,"字符串",-1),Hl=t("code",null,"二分查找",-1),Ml=t("code",null,"后缀数组",-1),vl=t("code",null,"3+",-1),ql={style:{"text-align":"left"}},El=t("td",{style:{"text-align":"center"}},"1062",-1),Ll={style:{"text-align":"left"}},Nl={href:"https://leetcode.com/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},zl=t("td",{style:{"text-align":"center"}},null,-1),Vl={style:{"text-align":"left"}},Bl=t("code",null,"字符串",-1),Cl=t("code",null,"二分查找",-1),Rl=t("code",null,"动态规划",-1),Kl=t("code",null,"3+",-1),Tl={style:{"text-align":"left"}},Al=t("td",{style:{"text-align":"center"}},"1147",-1),Dl={style:{"text-align":"left"}},Fl={href:"https://leetcode.com/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},Ul=t("td",{style:{"text-align":"center"}},null,-1),Gl={style:{"text-align":"left"}},Jl=t("code",null,"贪心",-1),Ol=t("code",null,"双指针",-1),Pl=t("code",null,"字符串",-1),Ql=t("code",null,"3+",-1),Sl={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"1316",-1),Xl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/distinct-echo-substrings",target:"_blank",rel:"noopener noreferrer"},Zl=t("td",{style:{"text-align":"center"}},null,-1),$l={style:{"text-align":"left"}},to=t("code",null,"字典树",-1),eo=t("code",null,"字符串",-1),lo=t("code",null,"哈希函数",-1),oo=t("code",null,"1+",-1),no={style:{"text-align":"left"}},so=t("td",{style:{"text-align":"center"}},"1392",-1),co={style:{"text-align":"left"}},_o={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},io=t("td",{style:{"text-align":"center"}},null,-1),ao={style:{"text-align":"left"}},ho=t("code",null,"字符串",-1),uo=t("code",null,"字符串匹配",-1),ro=t("code",null,"哈希函数",-1),fo=t("code",null,"1+",-1),go={style:{"text-align":"left"}},mo=t("td",{style:{"text-align":"center"}},"1461",-1),yo={style:{"text-align":"left"}},xo={href:"https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k",target:"_blank",rel:"noopener noreferrer"},bo=t("td",{style:{"text-align":"center"}},null,-1),jo={style:{"text-align":"left"}},po=t("code",null,"位运算",-1),ko=t("code",null,"哈希表",-1),Io=t("code",null,"字符串",-1),wo=t("code",null,"2+",-1),Ho={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"center"}},"1554",-1),vo={style:{"text-align":"left"}},qo={href:"https://leetcode.com/problems/strings-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},Eo=t("td",{style:{"text-align":"center"}},null,-1),Lo={style:{"text-align":"left"}},No=t("code",null,"哈希表",-1),zo=t("code",null,"字符串",-1),Vo=t("code",null,"哈希函数",-1),Bo=t("code",null,"1+",-1),Co={style:{"text-align":"left"}},Ro=t("td",{style:{"text-align":"center"}},"1698",-1),Ko={style:{"text-align":"left"}},To={href:"https://leetcode.com/problems/number-of-distinct-substrings-in-a-string",target:"_blank",rel:"noopener noreferrer"},Ao=t("td",{style:{"text-align":"center"}},null,-1),Do={style:{"text-align":"left"}},Fo=t("code",null,"字典树",-1),Uo=t("code",null,"字符串",-1),Go=t("code",null,"后缀数组",-1),Jo=t("code",null,"2+",-1),Oo={style:{"text-align":"left"}},Po=t("td",{style:{"text-align":"center"}},"1923",-1),Qo={style:{"text-align":"left"}},So={href:"https://leetcode.com/problems/longest-common-subpath",target:"_blank",rel:"noopener noreferrer"},Wo=t("td",{style:{"text-align":"center"}},null,-1),Xo={style:{"text-align":"left"}},Yo=t("code",null,"数组",-1),Zo=t("code",null,"二分查找",-1),$o=t("code",null,"后缀数组",-1),tn=t("code",null,"2+",-1),en={style:{"text-align":"left"}},ln=t("td",{style:{"text-align":"center"}},"1948",-1),on={style:{"text-align":"left"}},nn={href:"https://leetcode.com/problems/delete-duplicate-folders-in-system",target:"_blank",rel:"noopener noreferrer"},sn=t("td",{style:{"text-align":"center"}},null,-1),dn={style:{"text-align":"left"}},cn=t("code",null,"字典树",-1),_n=t("code",null,"数组",-1),an=t("code",null,"哈希表",-1),hn=t("code",null,"2+",-1),un={style:{"text-align":"left"}},rn=t("td",{style:{"text-align":"center"}},"1960",-1),fn={style:{"text-align":"left"}},gn={href:"https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},mn=t("td",{style:{"text-align":"center"}},null,-1),yn={style:{"text-align":"left"}},xn=t("code",null,"字符串",-1),bn=t("code",null,"哈希函数",-1),jn=t("code",null,"滚动哈希",-1),pn={style:{"text-align":"left"}},kn=t("td",{style:{"text-align":"center"}},"2156",-1),In={style:{"text-align":"left"}},wn={href:"https://leetcode.com/problems/find-substring-with-given-hash-value",target:"_blank",rel:"noopener noreferrer"},Hn=t("td",{style:{"text-align":"center"}},null,-1),Mn={style:{"text-align":"left"}},vn=t("code",null,"字符串",-1),qn=t("code",null,"滑动窗口",-1),En=t("code",null,"哈希函数",-1),Ln=t("code",null,"1+",-1),Nn={style:{"text-align":"left"}},zn=t("td",{style:{"text-align":"center"}},"2168",-1),Vn={style:{"text-align":"left"}},Bn={href:"https://leetcode.com/problems/unique-substrings-with-equal-digit-frequency",target:"_blank",rel:"noopener noreferrer"},Cn=t("td",{style:{"text-align":"center"}},null,-1),Rn={style:{"text-align":"left"}},Kn=t("code",null,"哈希表",-1),Tn=t("code",null,"字符串",-1),An=t("code",null,"计数",-1),Dn=t("code",null,"2+",-1),Fn={style:{"text-align":"left"}},Un=t("td",{style:{"text-align":"center"}},"2223",-1),Gn={style:{"text-align":"left"}},Jn={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},On=t("td",{style:{"text-align":"center"}},null,-1),Pn={style:{"text-align":"left"}},Qn=t("code",null,"字符串",-1),Sn=t("code",null,"二分查找",-1),Wn=t("code",null,"字符串匹配",-1),Xn=t("code",null,"3+",-1),Yn={style:{"text-align":"left"}},Zn=t("td",{style:{"text-align":"center"}},"2261",-1),$n={style:{"text-align":"left"}},ts={href:"https://leetcode.com/problems/k-divisible-elements-subarrays",target:"_blank",rel:"noopener noreferrer"},es={style:{"text-align":"center"}},ls={style:{"text-align":"left"}},os=t("code",null,"字典树",-1),ns=t("code",null,"数组",-1),ss=t("code",null,"哈希表",-1),ds=t("code",null,"3+",-1),cs={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"2430",-1),is={style:{"text-align":"left"}},as={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},hs=t("td",{style:{"text-align":"center"}},null,-1),us={style:{"text-align":"left"}},rs=t("code",null,"字符串",-1),fs=t("code",null,"动态规划",-1),gs=t("code",null,"字符串匹配",-1),ms=t("code",null,"2+",-1),ys={style:{"text-align":"left"}},xs=t("td",{style:{"text-align":"center"}},"3006",-1),bs={style:{"text-align":"left"}},js={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},ps=t("td",{style:{"text-align":"center"}},null,-1),ks={style:{"text-align":"left"}},Is=t("code",null,"双指针",-1),ws=t("code",null,"字符串",-1),Hs=t("code",null,"二分查找",-1),Ms=t("code",null,"3+",-1),vs={style:{"text-align":"left"}},qs=t("td",{style:{"text-align":"center"}},"3008",-1),Es={style:{"text-align":"left"}},Ls={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},Ns=t("td",{style:{"text-align":"center"}},null,-1),zs={style:{"text-align":"left"}},Vs=t("code",null,"双指针",-1),Bs=t("code",null,"字符串",-1),Cs=t("code",null,"二分查找",-1),Rs=t("code",null,"3+",-1),Ks={style:{"text-align":"left"}},Ts=t("td",{style:{"text-align":"center"}},"3023",-1),As={style:{"text-align":"left"}},Ds={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Fs=t("td",{style:{"text-align":"center"}},null,-1),Us={style:{"text-align":"left"}},Gs=t("code",null,"数组",-1),Js=t("code",null,"字符串匹配",-1),Os=t("code",null,"滑动窗口",-1),Ps=t("code",null,"2+",-1),Qs={style:{"text-align":"left"}},Ss=t("td",{style:{"text-align":"center"}},"3029",-1),Ws={style:{"text-align":"left"}},Xs={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},Ys=t("td",{style:{"text-align":"center"}},null,-1),Zs={style:{"text-align":"left"}},$s=t("code",null,"字符串",-1),td=t("code",null,"字符串匹配",-1),ed=t("code",null,"哈希函数",-1),ld=t("code",null,"1+",-1),od={style:{"text-align":"left"}},nd=t("td",{style:{"text-align":"center"}},"3031",-1),sd={style:{"text-align":"left"}},dd={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},cd=t("td",{style:{"text-align":"center"}},null,-1),_d={style:{"text-align":"left"}},id=t("code",null,"字符串",-1),ad=t("code",null,"字符串匹配",-1),hd=t("code",null,"哈希函数",-1),ud=t("code",null,"1+",-1),rd={style:{"text-align":"left"}},fd=t("td",{style:{"text-align":"center"}},"3034",-1),gd={style:{"text-align":"left"}},md={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},yd=t("td",{style:{"text-align":"center"}},null,-1),xd={style:{"text-align":"left"}},bd=t("code",null,"数组",-1),jd=t("code",null,"字符串匹配",-1),pd=t("code",null,"哈希函数",-1),kd=t("code",null,"1+",-1),Id={style:{"text-align":"left"}},wd=t("td",{style:{"text-align":"center"}},"3036",-1),Hd={style:{"text-align":"left"}},Md={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},vd=t("td",{style:{"text-align":"center"}},null,-1),qd={style:{"text-align":"left"}},Ed=t("code",null,"数组",-1),Ld=t("code",null,"字符串匹配",-1),Nd=t("code",null,"哈希函数",-1),zd=t("code",null,"1+",-1),Vd={style:{"text-align":"left"}},Bd=t("td",{style:{"text-align":"center"}},"3037",-1),Cd={style:{"text-align":"left"}},Rd={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},Kd=t("td",{style:{"text-align":"center"}},null,-1),Td={style:{"text-align":"left"}},Ad=t("code",null,"数组",-1),Dd=t("code",null,"字符串匹配",-1),Fd=t("code",null,"滑动窗口",-1),Ud=t("code",null,"2+",-1),Gd={style:{"text-align":"left"}},Jd=t("td",{style:{"text-align":"center"}},"3042",-1),Od={style:{"text-align":"left"}},Pd={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},Qd=t("td",{style:{"text-align":"center"}},null,-1),Sd={style:{"text-align":"left"}},Wd=t("code",null,"字典树",-1),Xd=t("code",null,"数组",-1),Yd=t("code",null,"字符串",-1),Zd=t("code",null,"3+",-1),$d={style:{"text-align":"left"}},tc=t("td",{style:{"text-align":"center"}},"3045",-1),ec={style:{"text-align":"left"}},lc={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},oc=t("td",{style:{"text-align":"center"}},null,-1),nc={style:{"text-align":"left"}},sc=t("code",null,"字典树",-1),dc=t("code",null,"数组",-1),cc=t("code",null,"字符串",-1),_c=t("code",null,"3+",-1),ic={style:{"text-align":"left"}},ac=t("td",{style:{"text-align":"center"}},"3135",-1),hc={style:{"text-align":"left"}},uc={href:"https://leetcode.com/problems/equalize-strings-by-adding-or-removing-characters-at-ends",target:"_blank",rel:"noopener noreferrer"},rc=t("td",{style:{"text-align":"center"}},null,-1),fc={style:{"text-align":"left"}},gc=t("code",null,"字符串",-1),mc=t("code",null,"二分查找",-1),yc=t("code",null,"动态规划",-1),xc=t("code",null,"2+",-1),bc={style:{"text-align":"left"}},jc=t("td",{style:{"text-align":"center"}},"3291",-1),pc={style:{"text-align":"left"}},kc={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Ic=t("td",{style:{"text-align":"center"}},null,-1),wc={style:{"text-align":"left"}},Hc=t("code",null,"字典树",-1),Mc=t("code",null,"线段树",-1),vc=t("code",null,"数组",-1),qc=t("code",null,"6+",-1),Ec={style:{"text-align":"left"}},Lc=t("td",{style:{"text-align":"center"}},"3292",-1),Nc={style:{"text-align":"left"}},zc={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},Vc=t("td",{style:{"text-align":"center"}},null,-1),Bc={style:{"text-align":"left"}},Cc=t("code",null,"线段树",-1),Rc=t("code",null,"数组",-1),Kc=t("code",null,"字符串",-1),Tc=t("code",null,"5+",-1),Ac={style:{"text-align":"left"}},Dc=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),Fc={style:{"text-align":"left"}},Uc={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},Gc=t("td",{style:{"text-align":"center"}},null,-1),Jc={style:{"text-align":"left"}},Oc=t("code",null,"树",-1),Pc=t("code",null,"深度优先搜索",-1),Qc=t("code",null,"二叉树",-1),Sc=t("code",null,"2+",-1),Wc={style:{"text-align":"left"}},Xc=t("td",{style:{"text-align":"center"}},"面试题 17.13",-1),Yc={style:{"text-align":"left"}},Zc={href:"https://leetcode.cn/problems/re-space-lcci",target:"_blank",rel:"noopener noreferrer"},$c=t("td",{style:{"text-align":"center"}},null,-1),t_={style:{"text-align":"left"}},e_=t("code",null,"字典树",-1),l_=t("code",null,"数组",-1),o_=t("code",null,"哈希表",-1),n_=t("code",null,"4+",-1),s_={style:{"text-align":"left"}};function d_(c_,__){const n=c("RouterLink"),s=c("ExternalLinkIcon"),d=c("font");return i(),a("div",null,[r,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/strongly-connected-component.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[J]),_:1})]),O,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bitmask.html"},{default:o(()=>[rt]),_:1}),l(),ft,l(),e(n,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/randomized.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/reservoir-sampling.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rejection-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/database.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/interactive.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/iterator.html"},{default:o(()=>[Vt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/concurrency.html"},{default:o(()=>[Bt]),_:1})])]),Ct,h(" prettier-ignore "),t("table",null,[Rt,t("tbody",null,[t("tr",null,[Kt,t("td",Tt,[t("a",At,[l("重复的DNA序列"),e(s)])]),Dt,t("td",Ft,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Ut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Gt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Jt]),_:1}),l(),Ot]),t("td",Pt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qt,t("td",St,[t("a",Wt,[l("最短回文串"),e(s)])]),Xt,t("td",Yt,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[te]),_:1}),l(),ee]),t("td",le,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oe,t("td",ne,[t("a",se,[l("TinyURL 的加密与解密"),e(s)])]),de,t("td",ce,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[_e]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[ie]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[ae]),_:1}),l(),he]),t("td",ue,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[re,t("td",fe,[t("a",ge,[l("另一棵树的子树"),e(s)])]),t("td",me,[e(n,{to:"/leetcode-js/problem/0572.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ye,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[xe]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[be]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[je]),_:1}),l(),pe]),t("td",ke,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ie,t("td",we,[t("a",He,[l("不同岛屿的数量"),e(s)])]),Me,t("td",ve,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[qe]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ee]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Le]),_:1}),l(),Ne]),t("td",ze,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ve,t("td",Be,[t("a",Ce,[l("设计哈希集合"),e(s)])]),t("td",Re,[e(n,{to:"/leetcode-js/problem/0705.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ke,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Te]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ae]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[De]),_:1}),l(),Fe]),t("td",Ue,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ge,t("td",Je,[t("a",Oe,[l("设计哈希映射"),e(s)])]),t("td",Pe,[e(n,{to:"/leetcode-js/problem/0706.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qe,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Se]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[We]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Xe]),_:1}),l(),Ye]),t("td",Ze,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$e,t("td",tl,[t("a",el,[l("不同岛屿的数量 II"),e(s)])]),ll,t("td",ol,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[nl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[sl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[dl]),_:1}),l(),cl]),t("td",_l,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[il,t("td",al,[t("a",hl,[l("最长重复子数组"),e(s)])]),ul,t("td",rl,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[fl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[gl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ml]),_:1}),l(),yl]),t("td",xl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bl,t("td",jl,[t("a",pl,[l("最长重复子串"),e(s)])]),kl,t("td",Il,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[wl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[Hl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[Ml]),_:1}),l(),vl]),t("td",ql,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[El,t("td",Ll,[t("a",Nl,[l("最长重复子串"),e(s)])]),zl,t("td",Vl,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Bl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[Cl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Rl]),_:1}),l(),Kl]),t("td",Tl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Al,t("td",Dl,[t("a",Fl,[l("段式回文"),e(s)])]),Ul,t("td",Gl,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Jl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[Ol]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Pl]),_:1}),l(),Ql]),t("td",Sl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wl,t("td",Xl,[t("a",Yl,[l("不同的循环子字符串"),e(s)])]),Zl,t("td",$l,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[to]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[eo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[lo]),_:1}),l(),oo]),t("td",no,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[so,t("td",co,[t("a",_o,[l("最长快乐前缀"),e(s)])]),io,t("td",ao,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[ho]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[uo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[ro]),_:1}),l(),fo]),t("td",go,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mo,t("td",yo,[t("a",xo,[l("检查一个字符串是否包含所有长度为 K 的二进制子串"),e(s)])]),bo,t("td",jo,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[po]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[ko]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Io]),_:1}),l(),wo]),t("td",Ho,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mo,t("td",vo,[t("a",qo,[l("只有一个不同字符的字符串"),e(s)])]),Eo,t("td",Lo,[e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[No]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[zo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[Vo]),_:1}),l(),Bo]),t("td",Co,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ro,t("td",Ko,[t("a",To,[l("字符串的不同子字符串个数"),e(s)])]),Ao,t("td",Do,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[Fo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Uo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[Go]),_:1}),l(),Jo]),t("td",Oo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Po,t("td",Qo,[t("a",So,[l("最长公共子路径"),e(s)])]),Wo,t("td",Xo,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Yo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[Zo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[$o]),_:1}),l(),tn]),t("td",en,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ln,t("td",on,[t("a",nn,[l("删除系统中的重复文件夹"),e(s)])]),sn,t("td",dn,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[cn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[_n]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[an]),_:1}),l(),hn]),t("td",un,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rn,t("td",fn,[t("a",gn,[l("两个回文子字符串长度的最大乘积"),e(s)])]),mn,t("td",yn,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[xn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[bn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:o(()=>[jn]),_:1})]),t("td",pn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kn,t("td",In,[t("a",wn,[l("查找给定哈希值的子串"),e(s)])]),Hn,t("td",Mn,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[vn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[qn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[En]),_:1}),l(),Ln]),t("td",Nn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zn,t("td",Vn,[t("a",Bn,[l("每个数字的频率都相同的独特子字符串的数量"),e(s)])]),Cn,t("td",Rn,[e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Kn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Tn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting.html"},{default:o(()=>[An]),_:1}),l(),Dn]),t("td",Fn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Un,t("td",Gn,[t("a",Jn,[l("构造字符串的总得分和"),e(s)])]),On,t("td",Pn,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[Sn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Wn]),_:1}),l(),Xn]),t("td",Yn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zn,t("td",$n,[t("a",ts,[l("含最多 K 个可整除元素的子数组"),e(s)])]),t("td",es,[e(n,{to:"/leetcode-js/problem/2261.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ls,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[os]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ns]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[ss]),_:1}),l(),ds]),t("td",cs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_s,t("td",is,[t("a",as,[l("对字母串可执行的最大删除数"),e(s)])]),hs,t("td",us,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[rs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[fs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[gs]),_:1}),l(),ms]),t("td",ys,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xs,t("td",bs,[t("a",js,[l("找出数组中的美丽下标 I"),e(s)])]),ps,t("td",ks,[e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[Is]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[ws]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[Hs]),_:1}),l(),Ms]),t("td",vs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qs,t("td",Es,[t("a",Ls,[l("找出数组中的美丽下标 II"),e(s)])]),Ns,t("td",zs,[e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[Vs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Bs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[Cs]),_:1}),l(),Rs]),t("td",Ks,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ts,t("td",As,[t("a",Ds,[l("在无限流中寻找模式 I"),e(s)])]),Fs,t("td",Us,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Gs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Js]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[Os]),_:1}),l(),Ps]),t("td",Qs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ss,t("td",Ws,[t("a",Xs,[l("将单词恢复初始状态所需的最短时间 I"),e(s)])]),Ys,t("td",Zs,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[$s]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[td]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[ed]),_:1}),l(),ld]),t("td",od,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nd,t("td",sd,[t("a",dd,[l("将单词恢复初始状态所需的最短时间 II"),e(s)])]),cd,t("td",_d,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[id]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[ad]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[hd]),_:1}),l(),ud]),t("td",rd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fd,t("td",gd,[t("a",md,[l("匹配模式数组的子数组数目 I"),e(s)])]),yd,t("td",xd,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[bd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[jd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[pd]),_:1}),l(),kd]),t("td",Id,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wd,t("td",Hd,[t("a",Md,[l("匹配模式数组的子数组数目 II"),e(s)])]),vd,t("td",qd,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ed]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Ld]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[Nd]),_:1}),l(),zd]),t("td",Vd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bd,t("td",Cd,[t("a",Rd,[l("在无限流中寻找模式 II"),e(s)])]),Kd,t("td",Td,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ad]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Dd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[Fd]),_:1}),l(),Ud]),t("td",Gd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jd,t("td",Od,[t("a",Pd,[l("统计前后缀下标对 I"),e(s)])]),Qd,t("td",Sd,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[Wd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Xd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Yd]),_:1}),l(),Zd]),t("td",$d,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[tc,t("td",ec,[t("a",lc,[l("统计前后缀下标对 II"),e(s)])]),oc,t("td",nc,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[sc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[dc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[cc]),_:1}),l(),_c]),t("td",ic,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ac,t("td",hc,[t("a",uc,[l("通过添加或删除结尾字符来同化字符串"),e(s)])]),rc,t("td",fc,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[gc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[mc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[yc]),_:1}),l(),xc]),t("td",bc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jc,t("td",pc,[t("a",kc,[l("形成目标字符串需要的最少字符串数 I"),e(s)])]),Ic,t("td",wc,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[Hc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Mc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vc]),_:1}),l(),qc]),t("td",Ec,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lc,t("td",Nc,[t("a",zc,[l("形成目标字符串需要的最少字符串数 II"),e(s)])]),Vc,t("td",Bc,[e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Cc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Rc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Kc]),_:1}),l(),Tc]),t("td",Ac,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dc,t("td",Fc,[t("a",Uc,[l("检查子树"),e(s)])]),Gc,t("td",Jc,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Oc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Pc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Qc]),_:1}),l(),Sc]),t("td",Wc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xc,t("td",Yc,[t("a",Zc,[l("恢复空格"),e(s)])]),$c,t("td",t_,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[e_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[l_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[o_]),_:1}),l(),n_]),t("td",s_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const a_=_(u,[["render",d_],["__file","hash-function.html.vue"]]);export{a_ as default};
