import{_,r as c,o as i,c as a,a as t,d as e,w as o,b as l,f as r}from"./app-GnK0vSxb.js";const u={},h=t("h1",{id:"单调栈",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#单调栈","aria-hidden":"true"},"#"),l(" 单调栈")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("span",{class:"blue"},"单调栈",-1),I=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),H=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),V=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),E=t("code",null,"二叉树",-1),L=t("code",null,"二叉搜索树",-1),j=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),O=t("code",null,"拓扑排序",-1),C=t("code",null,"最短路",-1),K=t("code",null,"强连通分量",-1),Q=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),A=t("code",null,"并查集",-1),P=t("code",null,"字典树",-1),S=t("code",null,"线段树",-1),T=t("code",null,"树状数组",-1),X=t("code",null,"后缀数组",-1),Y=t("p",null,[t("strong",null,"算法")],-1),D=t("code",null,"枚举",-1),F=t("code",null,"递归",-1),G=t("code",null,"分治",-1),J=t("code",null,"回溯",-1),U=t("code",null,"贪心",-1),W=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ut=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),Ht=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Vt=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Et=t("code",null,"数据流",-1),Lt=t("code",null,"脑筋急转弯",-1),jt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Ot=t("hr",null,null,-1),Ct=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Kt=t("td",{style:{"text-align":"center"}},"42",-1),Qt={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},At={style:{"text-align":"center"}},Pt={style:{"text-align":"left"}},St=t("code",null,"栈",-1),Tt=t("code",null,"数组",-1),Xt=t("code",null,"双指针",-1),Yt=t("code",null,"2+",-1),Dt={style:{"text-align":"left"}},Ft=t("td",{style:{"text-align":"center"}},"84",-1),Gt={style:{"text-align":"left"}},Jt={href:"https://leetcode.com/problems/largest-rectangle-in-histogram",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},Wt={style:{"text-align":"left"}},Zt=t("code",null,"栈",-1),$t=t("code",null,"数组",-1),te=t("code",null,"单调栈",-1),ee={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"85",-1),oe={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},de={style:{"text-align":"center"}},se={style:{"text-align":"left"}},ce=t("code",null,"栈",-1),_e=t("code",null,"数组",-1),ie=t("code",null,"动态规划",-1),ae=t("code",null,"2+",-1),re={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"255",-1),he={style:{"text-align":"left"}},fe={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ge=t("td",{style:{"text-align":"center"}},null,-1),me={style:{"text-align":"left"}},ye=t("code",null,"栈",-1),xe=t("code",null,"树",-1),be=t("code",null,"二叉搜索树",-1),pe=t("code",null,"4+",-1),ke={style:{"text-align":"left"}},Me=t("td",{style:{"text-align":"center"}},"316",-1),Ie={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/remove-duplicate-letters",target:"_blank",rel:"noopener noreferrer"},He={style:{"text-align":"center"}},we={style:{"text-align":"left"}},qe=t("code",null,"栈",-1),Ve=t("code",null,"贪心",-1),ze=t("code",null,"字符串",-1),Ee=t("code",null,"1+",-1),Le={style:{"text-align":"left"}},je=t("td",{style:{"text-align":"center"}},"321",-1),Be={style:{"text-align":"left"}},Ne={href:"https://leetcode.com/problems/create-maximum-number",target:"_blank",rel:"noopener noreferrer"},Oe=t("td",{style:{"text-align":"center"}},null,-1),Ce={style:{"text-align":"left"}},Ke=t("code",null,"栈",-1),Qe=t("code",null,"贪心",-1),Re=t("code",null,"数组",-1),Ae=t("code",null,"2+",-1),Pe={style:{"text-align":"left"}},Se=t("td",{style:{"text-align":"center"}},"402",-1),Te={style:{"text-align":"left"}},Xe={href:"https://leetcode.com/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},Ye=t("td",{style:{"text-align":"center"}},null,-1),De={style:{"text-align":"left"}},Fe=t("code",null,"栈",-1),Ge=t("code",null,"贪心",-1),Je=t("code",null,"字符串",-1),Ue=t("code",null,"1+",-1),We={style:{"text-align":"left"}},Ze=t("td",{style:{"text-align":"center"}},"456",-1),$e={style:{"text-align":"left"}},tl={href:"https://leetcode.com/problems/132-pattern",target:"_blank",rel:"noopener noreferrer"},el=t("td",{style:{"text-align":"center"}},null,-1),ll={style:{"text-align":"left"}},ol=t("code",null,"栈",-1),nl=t("code",null,"数组",-1),dl=t("code",null,"二分查找",-1),sl=t("code",null,"2+",-1),cl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"496",-1),il={style:{"text-align":"left"}},al={href:"https://leetcode.com/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},rl={style:{"text-align":"center"}},ul={style:{"text-align":"left"}},hl=t("code",null,"栈",-1),fl=t("code",null,"数组",-1),gl=t("code",null,"哈希表",-1),ml=t("code",null,"1+",-1),yl={style:{"text-align":"left"}},xl=t("td",{style:{"text-align":"center"}},"503",-1),bl={style:{"text-align":"left"}},pl={href:"https://leetcode.com/problems/next-greater-element-ii",target:"_blank",rel:"noopener noreferrer"},kl={style:{"text-align":"center"}},Ml={style:{"text-align":"left"}},Il=t("code",null,"栈",-1),vl=t("code",null,"数组",-1),Hl=t("code",null,"单调栈",-1),wl={style:{"text-align":"left"}},ql=t("td",{style:{"text-align":"center"}},"581",-1),Vl={style:{"text-align":"left"}},zl={href:"https://leetcode.com/problems/shortest-unsorted-continuous-subarray",target:"_blank",rel:"noopener noreferrer"},El=t("td",{style:{"text-align":"center"}},null,-1),Ll={style:{"text-align":"left"}},jl=t("code",null,"栈",-1),Bl=t("code",null,"贪心",-1),Nl=t("code",null,"数组",-1),Ol=t("code",null,"3+",-1),Cl={style:{"text-align":"left"}},Kl=t("td",{style:{"text-align":"center"}},"654",-1),Ql={style:{"text-align":"left"}},Rl={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Al={style:{"text-align":"center"}},Pl={style:{"text-align":"left"}},Sl=t("code",null,"栈",-1),Tl=t("code",null,"树",-1),Xl=t("code",null,"数组",-1),Yl=t("code",null,"3+",-1),Dl={style:{"text-align":"left"}},Fl=t("td",{style:{"text-align":"center"}},"739",-1),Gl={style:{"text-align":"left"}},Jl={href:"https://leetcode.com/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},Ul={style:{"text-align":"center"}},Wl={style:{"text-align":"left"}},Zl=t("code",null,"栈",-1),$l=t("code",null,"数组",-1),to=t("code",null,"单调栈",-1),eo={style:{"text-align":"left"}},lo=t("td",{style:{"text-align":"center"}},"768",-1),oo={style:{"text-align":"left"}},no={href:"https://leetcode.com/problems/max-chunks-to-make-sorted-ii",target:"_blank",rel:"noopener noreferrer"},so=t("td",{style:{"text-align":"center"}},null,-1),co={style:{"text-align":"left"}},_o=t("code",null,"栈",-1),io=t("code",null,"贪心",-1),ao=t("code",null,"数组",-1),ro=t("code",null,"2+",-1),uo={style:{"text-align":"left"}},ho=t("td",{style:{"text-align":"center"}},"769",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/max-chunks-to-make-sorted",target:"_blank",rel:"noopener noreferrer"},mo=t("td",{style:{"text-align":"center"}},null,-1),yo={style:{"text-align":"left"}},xo=t("code",null,"栈",-1),bo=t("code",null,"贪心",-1),po=t("code",null,"数组",-1),ko=t("code",null,"2+",-1),Mo={style:{"text-align":"left"}},Io=t("td",{style:{"text-align":"center"}},"853",-1),vo={style:{"text-align":"left"}},Ho={href:"https://leetcode.com/problems/car-fleet",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},null,-1),qo={style:{"text-align":"left"}},Vo=t("code",null,"栈",-1),zo=t("code",null,"数组",-1),Eo=t("code",null,"排序",-1),Lo=t("code",null,"1+",-1),jo={style:{"text-align":"left"}},Bo=t("td",{style:{"text-align":"center"}},"901",-1),No={style:{"text-align":"left"}},Oo={href:"https://leetcode.com/problems/online-stock-span",target:"_blank",rel:"noopener noreferrer"},Co=t("td",{style:{"text-align":"center"}},null,-1),Ko={style:{"text-align":"left"}},Qo=t("code",null,"栈",-1),Ro=t("code",null,"设计",-1),Ao=t("code",null,"数据流",-1),Po=t("code",null,"1+",-1),So={style:{"text-align":"left"}},To=t("td",{style:{"text-align":"center"}},"907",-1),Xo={style:{"text-align":"left"}},Yo={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},Do=t("td",{style:{"text-align":"center"}},null,-1),Fo={style:{"text-align":"left"}},Go=t("code",null,"栈",-1),Jo=t("code",null,"数组",-1),Uo=t("code",null,"动态规划",-1),Wo=t("code",null,"1+",-1),Zo={style:{"text-align":"left"}},$o=t("td",{style:{"text-align":"center"}},"962",-1),tn={style:{"text-align":"left"}},en={href:"https://leetcode.com/problems/maximum-width-ramp",target:"_blank",rel:"noopener noreferrer"},ln={style:{"text-align":"center"}},on={style:{"text-align":"left"}},nn=t("code",null,"栈",-1),dn=t("code",null,"数组",-1),sn=t("code",null,"单调栈",-1),cn={style:{"text-align":"left"}},_n=t("td",{style:{"text-align":"center"}},"975",-1),an={style:{"text-align":"left"}},rn={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},un=t("td",{style:{"text-align":"center"}},null,-1),hn={style:{"text-align":"left"}},fn=t("code",null,"栈",-1),gn=t("code",null,"数组",-1),mn=t("code",null,"动态规划",-1),yn=t("code",null,"2+",-1),xn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"1008",-1),pn={style:{"text-align":"left"}},kn={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Mn={style:{"text-align":"center"}},In={style:{"text-align":"left"}},vn=t("code",null,"栈",-1),Hn=t("code",null,"树",-1),wn=t("code",null,"二叉搜索树",-1),qn=t("code",null,"3+",-1),Vn={style:{"text-align":"left"}},zn=t("td",{style:{"text-align":"center"}},"1019",-1),En={style:{"text-align":"left"}},Ln={href:"https://leetcode.com/problems/next-greater-node-in-linked-list",target:"_blank",rel:"noopener noreferrer"},jn=t("td",{style:{"text-align":"center"}},null,-1),Bn={style:{"text-align":"left"}},Nn=t("code",null,"栈",-1),On=t("code",null,"数组",-1),Cn=t("code",null,"链表",-1),Kn=t("code",null,"1+",-1),Qn={style:{"text-align":"left"}},Rn=t("td",{style:{"text-align":"center"}},"1063",-1),An={style:{"text-align":"left"}},Pn={href:"https://leetcode.com/problems/number-of-valid-subarrays",target:"_blank",rel:"noopener noreferrer"},Sn=t("td",{style:{"text-align":"center"}},null,-1),Tn={style:{"text-align":"left"}},Xn=t("code",null,"栈",-1),Yn=t("code",null,"数组",-1),Dn=t("code",null,"单调栈",-1),Fn={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"1081",-1),Jn={style:{"text-align":"left"}},Un={href:"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters",target:"_blank",rel:"noopener noreferrer"},Wn={style:{"text-align":"center"}},Zn={style:{"text-align":"left"}},$n=t("code",null,"栈",-1),td=t("code",null,"贪心",-1),ed=t("code",null,"字符串",-1),ld=t("code",null,"1+",-1),od={style:{"text-align":"left"}},nd=t("td",{style:{"text-align":"center"}},"1124",-1),dd={style:{"text-align":"left"}},sd={href:"https://leetcode.com/problems/longest-well-performing-interval",target:"_blank",rel:"noopener noreferrer"},cd=t("td",{style:{"text-align":"center"}},null,-1),_d={style:{"text-align":"left"}},id=t("code",null,"栈",-1),ad=t("code",null,"数组",-1),rd=t("code",null,"哈希表",-1),ud=t("code",null,"2+",-1),hd={style:{"text-align":"left"}},fd=t("td",{style:{"text-align":"center"}},"1130",-1),gd={style:{"text-align":"left"}},md={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},yd=t("td",{style:{"text-align":"center"}},null,-1),xd={style:{"text-align":"left"}},bd=t("code",null,"栈",-1),pd=t("code",null,"贪心",-1),kd=t("code",null,"数组",-1),Md=t("code",null,"2+",-1),Id={style:{"text-align":"left"}},vd=t("td",{style:{"text-align":"center"}},"1475",-1),Hd={style:{"text-align":"left"}},wd={href:"https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop",target:"_blank",rel:"noopener noreferrer"},qd={style:{"text-align":"center"}},Vd={style:{"text-align":"left"}},zd=t("code",null,"栈",-1),Ed=t("code",null,"数组",-1),Ld=t("code",null,"单调栈",-1),jd={style:{"text-align":"left"}},Bd=t("td",{style:{"text-align":"center"}},"1504",-1),Nd={style:{"text-align":"left"}},Od={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},Cd=t("td",{style:{"text-align":"center"}},null,-1),Kd={style:{"text-align":"left"}},Qd=t("code",null,"栈",-1),Rd=t("code",null,"数组",-1),Ad=t("code",null,"动态规划",-1),Pd=t("code",null,"2+",-1),Sd={style:{"text-align":"left"}},Td=t("td",{style:{"text-align":"center"}},"1526",-1),Xd={style:{"text-align":"left"}},Yd={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},Dd=t("td",{style:{"text-align":"center"}},null,-1),Fd={style:{"text-align":"left"}},Gd=t("code",null,"栈",-1),Jd=t("code",null,"贪心",-1),Ud=t("code",null,"数组",-1),Wd=t("code",null,"2+",-1),Zd={style:{"text-align":"left"}},$d=t("td",{style:{"text-align":"center"}},"1574",-1),ts={style:{"text-align":"left"}},es={href:"https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted",target:"_blank",rel:"noopener noreferrer"},ls=t("td",{style:{"text-align":"center"}},null,-1),os={style:{"text-align":"left"}},ns=t("code",null,"栈",-1),ds=t("code",null,"数组",-1),ss=t("code",null,"双指针",-1),cs=t("code",null,"2+",-1),_s={style:{"text-align":"left"}},is=t("td",{style:{"text-align":"center"}},"1673",-1),as={style:{"text-align":"left"}},rs={href:"https://leetcode.com/problems/find-the-most-competitive-subsequence",target:"_blank",rel:"noopener noreferrer"},us=t("td",{style:{"text-align":"center"}},null,-1),hs={style:{"text-align":"left"}},fs=t("code",null,"栈",-1),gs=t("code",null,"贪心",-1),ms=t("code",null,"数组",-1),ys=t("code",null,"1+",-1),xs={style:{"text-align":"left"}},bs=t("td",{style:{"text-align":"center"}},"1762",-1),ps={style:{"text-align":"left"}},ks={href:"https://leetcode.com/problems/buildings-with-an-ocean-view",target:"_blank",rel:"noopener noreferrer"},Ms=t("td",{style:{"text-align":"center"}},null,-1),Is={style:{"text-align":"left"}},vs=t("code",null,"栈",-1),Hs=t("code",null,"数组",-1),ws=t("code",null,"单调栈",-1),qs={style:{"text-align":"left"}},Vs=t("td",{style:{"text-align":"center"}},"1776",-1),zs={style:{"text-align":"left"}},Es={href:"https://leetcode.com/problems/car-fleet-ii",target:"_blank",rel:"noopener noreferrer"},Ls=t("td",{style:{"text-align":"center"}},null,-1),js={style:{"text-align":"left"}},Bs=t("code",null,"栈",-1),Ns=t("code",null,"数组",-1),Os=t("code",null,"数学",-1),Cs=t("code",null,"2+",-1),Ks={style:{"text-align":"left"}},Qs=t("td",{style:{"text-align":"center"}},"1793",-1),Rs={style:{"text-align":"left"}},As={href:"https://leetcode.com/problems/maximum-score-of-a-good-subarray",target:"_blank",rel:"noopener noreferrer"},Ps=t("td",{style:{"text-align":"center"}},null,-1),Ss={style:{"text-align":"left"}},Ts=t("code",null,"栈",-1),Xs=t("code",null,"数组",-1),Ys=t("code",null,"双指针",-1),Ds=t("code",null,"2+",-1),Fs={style:{"text-align":"left"}},Gs=t("td",{style:{"text-align":"center"}},"1856",-1),Js={style:{"text-align":"left"}},Us={href:"https://leetcode.com/problems/maximum-subarray-min-product",target:"_blank",rel:"noopener noreferrer"},Ws=t("td",{style:{"text-align":"center"}},null,-1),Zs={style:{"text-align":"left"}},$s=t("code",null,"栈",-1),tc=t("code",null,"数组",-1),ec=t("code",null,"前缀和",-1),lc=t("code",null,"1+",-1),oc={style:{"text-align":"left"}},nc=t("td",{style:{"text-align":"center"}},"1944",-1),dc={style:{"text-align":"left"}},sc={href:"https://leetcode.com/problems/number-of-visible-people-in-a-queue",target:"_blank",rel:"noopener noreferrer"},cc=t("td",{style:{"text-align":"center"}},null,-1),_c={style:{"text-align":"left"}},ic=t("code",null,"栈",-1),ac=t("code",null,"数组",-1),rc=t("code",null,"单调栈",-1),uc={style:{"text-align":"left"}},hc=t("td",{style:{"text-align":"center"}},"1950",-1),fc={style:{"text-align":"left"}},gc={href:"https://leetcode.com/problems/maximum-of-minimum-values-in-all-subarrays",target:"_blank",rel:"noopener noreferrer"},mc=t("td",{style:{"text-align":"center"}},null,-1),yc={style:{"text-align":"left"}},xc=t("code",null,"栈",-1),bc=t("code",null,"数组",-1),pc=t("code",null,"单调栈",-1),kc={style:{"text-align":"left"}},Mc=t("td",{style:{"text-align":"center"}},"1996",-1),Ic={style:{"text-align":"left"}},vc={href:"https://leetcode.com/problems/the-number-of-weak-characters-in-the-game",target:"_blank",rel:"noopener noreferrer"},Hc=t("td",{style:{"text-align":"center"}},null,-1),wc={style:{"text-align":"left"}},qc=t("code",null,"栈",-1),Vc=t("code",null,"贪心",-1),zc=t("code",null,"数组",-1),Ec=t("code",null,"2+",-1),Lc={style:{"text-align":"left"}},jc=t("td",{style:{"text-align":"center"}},"2030",-1),Bc={style:{"text-align":"left"}},Nc={href:"https://leetcode.com/problems/smallest-k-length-subsequence-with-occurrences-of-a-letter",target:"_blank",rel:"noopener noreferrer"},Oc=t("td",{style:{"text-align":"center"}},null,-1),Cc={style:{"text-align":"left"}},Kc=t("code",null,"栈",-1),Qc=t("code",null,"贪心",-1),Rc=t("code",null,"字符串",-1),Ac=t("code",null,"1+",-1),Pc={style:{"text-align":"left"}},Sc=t("td",{style:{"text-align":"center"}},"2104",-1),Tc={style:{"text-align":"left"}},Xc={href:"https://leetcode.com/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},Yc=t("td",{style:{"text-align":"center"}},null,-1),Dc={style:{"text-align":"left"}},Fc=t("code",null,"栈",-1),Gc=t("code",null,"数组",-1),Jc=t("code",null,"单调栈",-1),Uc={style:{"text-align":"left"}},Wc=t("td",{style:{"text-align":"center"}},"2281",-1),Zc={style:{"text-align":"left"}},$c={href:"https://leetcode.com/problems/sum-of-total-strength-of-wizards",target:"_blank",rel:"noopener noreferrer"},t_=t("td",{style:{"text-align":"center"}},null,-1),e_={style:{"text-align":"left"}},l_=t("code",null,"栈",-1),o_=t("code",null,"数组",-1),n_=t("code",null,"前缀和",-1),d_=t("code",null,"1+",-1),s_={style:{"text-align":"left"}},c_=t("td",{style:{"text-align":"center"}},"2282",-1),__={style:{"text-align":"left"}},i_={href:"https://leetcode.com/problems/number-of-people-that-can-be-seen-in-a-grid",target:"_blank",rel:"noopener noreferrer"},a_=t("td",{style:{"text-align":"center"}},null,-1),r_={style:{"text-align":"left"}},u_=t("code",null,"栈",-1),h_=t("code",null,"数组",-1),f_=t("code",null,"矩阵",-1),g_=t("code",null,"1+",-1),m_={style:{"text-align":"left"}},y_=t("td",{style:{"text-align":"center"}},"2289",-1),x_={style:{"text-align":"left"}},b_={href:"https://leetcode.com/problems/steps-to-make-array-non-decreasing",target:"_blank",rel:"noopener noreferrer"},p_=t("td",{style:{"text-align":"center"}},null,-1),k_={style:{"text-align":"left"}},M_=t("code",null,"栈",-1),I_=t("code",null,"数组",-1),v_=t("code",null,"链表",-1),H_=t("code",null,"1+",-1),w_={style:{"text-align":"left"}},q_=t("td",{style:{"text-align":"center"}},"2297",-1),V_={style:{"text-align":"left"}},z_={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},E_=t("td",{style:{"text-align":"center"}},null,-1),L_={style:{"text-align":"left"}},j_=t("code",null,"栈",-1),B_=t("code",null,"图",-1),N_=t("code",null,"数组",-1),O_=t("code",null,"3+",-1),C_={style:{"text-align":"left"}},K_=t("td",{style:{"text-align":"center"}},"2334",-1),Q_={style:{"text-align":"left"}},R_={href:"https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},A_=t("td",{style:{"text-align":"center"}},null,-1),P_={style:{"text-align":"left"}},S_=t("code",null,"栈",-1),T_=t("code",null,"并查集",-1),X_=t("code",null,"数组",-1),Y_=t("code",null,"1+",-1),D_={style:{"text-align":"left"}},F_=t("td",{style:{"text-align":"center"}},"2345",-1),G_={style:{"text-align":"left"}},J_={href:"https://leetcode.com/problems/finding-the-number-of-visible-mountains",target:"_blank",rel:"noopener noreferrer"},U_=t("td",{style:{"text-align":"center"}},null,-1),W_={style:{"text-align":"left"}},Z_=t("code",null,"栈",-1),$_=t("code",null,"数组",-1),ti=t("code",null,"排序",-1),ei=t("code",null,"1+",-1),li={style:{"text-align":"left"}},oi=t("td",{style:{"text-align":"center"}},"2355",-1),ni={style:{"text-align":"left"}},di={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},si=t("td",{style:{"text-align":"center"}},null,-1),ci={style:{"text-align":"left"}},_i=t("code",null,"栈",-1),ii=t("code",null,"数组",-1),ai=t("code",null,"动态规划",-1),ri=t("code",null,"1+",-1),ui={style:{"text-align":"left"}},hi=t("td",{style:{"text-align":"center"}},"2454",-1),fi={style:{"text-align":"left"}},gi={href:"https://leetcode.com/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},mi=t("td",{style:{"text-align":"center"}},null,-1),yi={style:{"text-align":"left"}},xi=t("code",null,"栈",-1),bi=t("code",null,"数组",-1),pi=t("code",null,"二分查找",-1),ki=t("code",null,"3+",-1),Mi={style:{"text-align":"left"}},Ii=t("td",{style:{"text-align":"center"}},"2487",-1),vi={style:{"text-align":"left"}},Hi={href:"https://leetcode.com/problems/remove-nodes-from-linked-list",target:"_blank",rel:"noopener noreferrer"},wi=t("td",{style:{"text-align":"center"}},null,-1),qi={style:{"text-align":"left"}},Vi=t("code",null,"栈",-1),zi=t("code",null,"递归",-1),Ei=t("code",null,"链表",-1),Li=t("code",null,"1+",-1),ji={style:{"text-align":"left"}},Bi=t("td",{style:{"text-align":"center"}},"2617",-1),Ni={style:{"text-align":"left"}},Oi={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Ci=t("td",{style:{"text-align":"center"}},null,-1),Ki={style:{"text-align":"left"}},Qi=t("code",null,"栈",-1),Ri=t("code",null,"广度优先搜索",-1),Ai=t("code",null,"并查集",-1),Pi=t("code",null,"5+",-1),Si={style:{"text-align":"left"}},Ti=t("td",{style:{"text-align":"center"}},"2736",-1),Xi={style:{"text-align":"left"}},Yi={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},Di=t("td",{style:{"text-align":"center"}},null,-1),Fi={style:{"text-align":"left"}},Gi=t("code",null,"栈",-1),Ji=t("code",null,"树状数组",-1),Ui=t("code",null,"线段树",-1),Wi=t("code",null,"4+",-1),Zi={style:{"text-align":"left"}},$i=t("td",{style:{"text-align":"center"}},"2818",-1),ta={style:{"text-align":"left"}},ea={href:"https://leetcode.com/problems/apply-operations-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},la=t("td",{style:{"text-align":"center"}},null,-1),oa={style:{"text-align":"left"}},na=t("code",null,"栈",-1),da=t("code",null,"贪心",-1),sa=t("code",null,"数组",-1),ca=t("code",null,"3+",-1),_a={style:{"text-align":"left"}},ia=t("td",{style:{"text-align":"center"}},"2832",-1),aa={style:{"text-align":"left"}},ra={href:"https://leetcode.com/problems/maximal-range-that-each-element-is-maximum-in-it",target:"_blank",rel:"noopener noreferrer"},ua=t("td",{style:{"text-align":"center"}},null,-1),ha={style:{"text-align":"left"}},fa=t("code",null,"栈",-1),ga=t("code",null,"数组",-1),ma=t("code",null,"单调栈",-1),ya={style:{"text-align":"left"}},xa=t("td",{style:{"text-align":"center"}},"2863",-1),ba={style:{"text-align":"left"}},pa={href:"https://leetcode.com/problems/maximum-length-of-semi-decreasing-subarrays",target:"_blank",rel:"noopener noreferrer"},ka=t("td",{style:{"text-align":"center"}},null,-1),Ma={style:{"text-align":"left"}},Ia=t("code",null,"栈",-1),va=t("code",null,"数组",-1),Ha=t("code",null,"排序",-1),wa=t("code",null,"1+",-1),qa={style:{"text-align":"left"}},Va=t("td",{style:{"text-align":"center"}},"2865",-1),za={style:{"text-align":"left"}},Ea={href:"https://leetcode.com/problems/beautiful-towers-i",target:"_blank",rel:"noopener noreferrer"},La=t("td",{style:{"text-align":"center"}},null,-1),ja={style:{"text-align":"left"}},Ba=t("code",null,"栈",-1),Na=t("code",null,"数组",-1),Oa=t("code",null,"单调栈",-1),Ca={style:{"text-align":"left"}},Ka=t("td",{style:{"text-align":"center"}},"2866",-1),Qa={style:{"text-align":"left"}},Ra={href:"https://leetcode.com/problems/beautiful-towers-ii",target:"_blank",rel:"noopener noreferrer"},Aa=t("td",{style:{"text-align":"center"}},null,-1),Pa={style:{"text-align":"left"}},Sa=t("code",null,"栈",-1),Ta=t("code",null,"数组",-1),Xa=t("code",null,"单调栈",-1),Ya={style:{"text-align":"left"}},Da=t("td",{style:{"text-align":"center"}},"2940",-1),Fa={style:{"text-align":"left"}},Ga={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},Ja=t("td",{style:{"text-align":"center"}},null,-1),Ua={style:{"text-align":"left"}},Wa=t("code",null,"栈",-1),Za=t("code",null,"树状数组",-1),$a=t("code",null,"线段树",-1),tr=t("code",null,"4+",-1),er={style:{"text-align":"left"}},lr=t("td",{style:{"text-align":"center"}},"2945",-1),or={style:{"text-align":"left"}},nr={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},dr=t("td",{style:{"text-align":"center"}},null,-1),sr={style:{"text-align":"left"}},cr=t("code",null,"栈",-1),_r=t("code",null,"队列",-1),ir=t("code",null,"数组",-1),ar=t("code",null,"4+",-1),rr={style:{"text-align":"left"}},ur=t("td",{style:{"text-align":"center"}},"3113",-1),hr={style:{"text-align":"left"}},fr={href:"https://leetcode.com/problems/find-the-number-of-subarrays-where-boundary-elements-are-maximum",target:"_blank",rel:"noopener noreferrer"},gr=t("td",{style:{"text-align":"center"}},null,-1),mr={style:{"text-align":"left"}},yr=t("code",null,"栈",-1),xr=t("code",null,"数组",-1),br=t("code",null,"二分查找",-1),pr=t("code",null,"1+",-1),kr={style:{"text-align":"left"}},Mr=t("td",{style:{"text-align":"center"}},"3205",-1),Ir={style:{"text-align":"left"}},vr={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},Hr=t("td",{style:{"text-align":"center"}},null,-1),wr={style:{"text-align":"left"}},qr=t("code",null,"栈",-1),Vr=t("code",null,"贪心",-1),zr=t("code",null,"数组",-1),Er=t("code",null,"2+",-1),Lr={style:{"text-align":"left"}},jr=t("td",{style:{"text-align":"center"}},"3221",-1),Br={style:{"text-align":"left"}},Nr={href:"https://leetcode.com/problems/maximum-array-hopping-score-ii",target:"_blank",rel:"noopener noreferrer"},Or=t("td",{style:{"text-align":"center"}},null,-1),Cr={style:{"text-align":"left"}},Kr=t("code",null,"栈",-1),Qr=t("code",null,"贪心",-1),Rr=t("code",null,"数组",-1),Ar=t("code",null,"1+",-1),Pr={style:{"text-align":"left"}},Sr=t("td",{style:{"text-align":"center"}},"3229",-1),Tr={style:{"text-align":"left"}},Xr={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},Yr=t("td",{style:{"text-align":"center"}},null,-1),Dr={style:{"text-align":"left"}},Fr=t("code",null,"栈",-1),Gr=t("code",null,"贪心",-1),Jr=t("code",null,"数组",-1),Ur=t("code",null,"2+",-1),Wr={style:{"text-align":"left"}},Zr=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),$r={style:{"text-align":"left"}},tu={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},eu={style:{"text-align":"center"}},lu={style:{"text-align":"left"}},ou=t("code",null,"栈",-1),nu=t("code",null,"树",-1),du=t("code",null,"二叉搜索树",-1),su=t("code",null,"4+",-1),cu={style:{"text-align":"left"}},_u=t("td",{style:{"text-align":"center"}},"剑指 Offer II 38",-1),iu={style:{"text-align":"left"}},au={href:"https://leetcode.cn/problems/iIQa4I",target:"_blank",rel:"noopener noreferrer"},ru=t("td",{style:{"text-align":"center"}},null,-1),uu={style:{"text-align":"left"}},hu=t("code",null,"栈",-1),fu=t("code",null,"数组",-1),gu=t("code",null,"单调栈",-1),mu={style:{"text-align":"left"}},yu=t("td",{style:{"text-align":"center"}},"剑指 Offer II 39",-1),xu={style:{"text-align":"left"}},bu={href:"https://leetcode.cn/problems/0ynMMM",target:"_blank",rel:"noopener noreferrer"},pu=t("td",{style:{"text-align":"center"}},null,-1),ku={style:{"text-align":"left"}},Mu=t("code",null,"栈",-1),Iu=t("code",null,"数组",-1),vu=t("code",null,"单调栈",-1),Hu={style:{"text-align":"left"}},wu=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),qu={style:{"text-align":"left"}},Vu={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},zu=t("td",{style:{"text-align":"center"}},null,-1),Eu={style:{"text-align":"left"}},Lu=t("code",null,"栈",-1),ju=t("code",null,"数组",-1),Bu=t("code",null,"动态规划",-1),Nu=t("code",null,"2+",-1),Ou={style:{"text-align":"left"}},Cu=t("td",{style:{"text-align":"center"}},"面试题 03.05",-1),Ku={style:{"text-align":"left"}},Qu={href:"https://leetcode.cn/problems/sort-of-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},Ru=t("td",{style:{"text-align":"center"}},null,-1),Au={style:{"text-align":"left"}},Pu=t("code",null,"栈",-1),Su=t("code",null,"设计",-1),Tu=t("code",null,"单调栈",-1),Xu={style:{"text-align":"left"}},Yu=t("td",{style:{"text-align":"center"}},"面试题 16.16",-1),Du={style:{"text-align":"left"}},Fu={href:"https://leetcode.cn/problems/sub-sort-lcci",target:"_blank",rel:"noopener noreferrer"},Gu=t("td",{style:{"text-align":"center"}},null,-1),Ju={style:{"text-align":"left"}},Uu=t("code",null,"栈",-1),Wu=t("code",null,"贪心",-1),Zu=t("code",null,"数组",-1),$u=t("code",null,"3+",-1),th={style:{"text-align":"left"}},eh=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),lh={style:{"text-align":"left"}},oh={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"},nh=t("td",{style:{"text-align":"center"}},null,-1),dh={style:{"text-align":"left"}},sh=t("code",null,"栈",-1),ch=t("code",null,"数组",-1),_h=t("code",null,"双指针",-1),ih=t("code",null,"2+",-1),ah={style:{"text-align":"left"}};function rh(uh,hh){const n=c("RouterLink"),d=c("ExternalLinkIcon"),s=c("font");return i(),a("div",null,[h,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),M,l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[X]),_:1})]),Y,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:o(()=>[Vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Nt]),_:1})])]),Ot,r(" prettier-ignore "),t("table",null,[Ct,t("tbody",null,[t("tr",null,[Kt,t("td",Qt,[t("a",Rt,[l("接雨水"),e(d)])]),t("td",At,[e(n,{to:"/leetcode/problem/0042.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Pt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[St]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[Xt]),_:1}),l(),Yt]),t("td",Dt,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ft,t("td",Gt,[t("a",Jt,[l("柱状图中最大的矩形"),e(d)])]),t("td",Ut,[e(n,{to:"/leetcode/problem/0084.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Wt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[te]),_:1})]),t("td",ee,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[le,t("td",oe,[t("a",ne,[l("最大矩形"),e(d)])]),t("td",de,[e(n,{to:"/leetcode/problem/0085.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",se,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[_e]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[ie]),_:1}),l(),ae]),t("td",re,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ue,t("td",he,[t("a",fe,[l("验证二叉搜索树的前序遍历序列"),e(d)])]),ge,t("td",me,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ye]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[xe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[be]),_:1}),l(),pe]),t("td",ke,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Me,t("td",Ie,[t("a",ve,[l("去除重复字母"),e(d)])]),t("td",He,[e(n,{to:"/leetcode/problem/0316.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",we,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[qe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Ve]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[ze]),_:1}),l(),Ee]),t("td",Le,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[je,t("td",Be,[t("a",Ne,[l("拼接最大数"),e(d)])]),Oe,t("td",Ce,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ke]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Qe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Re]),_:1}),l(),Ae]),t("td",Pe,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Se,t("td",Te,[t("a",Xe,[l("移掉 K 位数字"),e(d)])]),Ye,t("td",De,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Fe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Ge]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Je]),_:1}),l(),Ue]),t("td",We,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ze,t("td",$e,[t("a",tl,[l("132 模式"),e(d)])]),el,t("td",ll,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ol]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[nl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[dl]),_:1}),l(),sl]),t("td",cl,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_l,t("td",il,[t("a",al,[l("下一个更大元素 I"),e(d)])]),t("td",rl,[e(n,{to:"/leetcode/problem/0496.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ul,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[hl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[fl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[gl]),_:1}),l(),ml]),t("td",yl,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xl,t("td",bl,[t("a",pl,[l("下一个更大元素 II"),e(d)])]),t("td",kl,[e(n,{to:"/leetcode/problem/0503.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ml,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Il]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[vl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[Hl]),_:1})]),t("td",wl,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ql,t("td",Vl,[t("a",zl,[l("最短无序连续子数组"),e(d)])]),El,t("td",Ll,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[jl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Bl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Nl]),_:1}),l(),Ol]),t("td",Cl,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kl,t("td",Ql,[t("a",Rl,[l("最大二叉树"),e(d)])]),t("td",Al,[e(n,{to:"/leetcode/problem/0654.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Pl,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Sl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Tl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Xl]),_:1}),l(),Yl]),t("td",Dl,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fl,t("td",Gl,[t("a",Jl,[l("每日温度"),e(d)])]),t("td",Ul,[e(n,{to:"/leetcode/problem/0739.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Wl,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Zl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[$l]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[to]),_:1})]),t("td",eo,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lo,t("td",oo,[t("a",no,[l("最多能完成排序的块 II"),e(d)])]),so,t("td",co,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[_o]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[io]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ao]),_:1}),l(),ro]),t("td",uo,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ho,t("td",fo,[t("a",go,[l("最多能完成排序的块"),e(d)])]),mo,t("td",yo,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[xo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[bo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[po]),_:1}),l(),ko]),t("td",Mo,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Io,t("td",vo,[t("a",Ho,[l("车队"),e(d)])]),wo,t("td",qo,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Vo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[zo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[Eo]),_:1}),l(),Lo]),t("td",jo,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bo,t("td",No,[t("a",Oo,[l("股票价格跨度"),e(d)])]),Co,t("td",Ko,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Qo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Ro]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[Ao]),_:1}),l(),Po]),t("td",So,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[To,t("td",Xo,[t("a",Yo,[l("子数组的最小值之和"),e(d)])]),Do,t("td",Fo,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Go]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Jo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Uo]),_:1}),l(),Wo]),t("td",Zo,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$o,t("td",tn,[t("a",en,[l("最大宽度坡"),e(d)])]),t("td",ln,[e(n,{to:"/leetcode/problem/0962.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",on,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[nn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[dn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[sn]),_:1})]),t("td",cn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_n,t("td",an,[t("a",rn,[l("奇偶跳"),e(d)])]),un,t("td",hn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[fn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[gn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[mn]),_:1}),l(),yn]),t("td",xn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bn,t("td",pn,[t("a",kn,[l("前序遍历构造二叉搜索树"),e(d)])]),t("td",Mn,[e(n,{to:"/leetcode/problem/1008.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",In,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[vn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Hn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[wn]),_:1}),l(),qn]),t("td",Vn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zn,t("td",En,[t("a",Ln,[l("链表中的下一个更大节点"),e(d)])]),jn,t("td",Bn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Nn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[On]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[Cn]),_:1}),l(),Kn]),t("td",Qn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rn,t("td",An,[t("a",Pn,[l("有效子数组的数目"),e(d)])]),Sn,t("td",Tn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Xn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Yn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[Dn]),_:1})]),t("td",Fn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gn,t("td",Jn,[t("a",Un,[l("不同字符的最小子序列"),e(d)])]),t("td",Wn,[e(n,{to:"/leetcode/problem/1081.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Zn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[$n]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[td]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[ed]),_:1}),l(),ld]),t("td",od,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nd,t("td",dd,[t("a",sd,[l("表现良好的最长时间段"),e(d)])]),cd,t("td",_d,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[id]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ad]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[rd]),_:1}),l(),ud]),t("td",hd,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fd,t("td",gd,[t("a",md,[l("叶值的最小代价生成树"),e(d)])]),yd,t("td",xd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[bd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[pd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[kd]),_:1}),l(),Md]),t("td",Id,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vd,t("td",Hd,[t("a",wd,[l("商品折扣后的最终价格"),e(d)])]),t("td",qd,[e(n,{to:"/leetcode/problem/1475.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Vd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[zd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ed]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[Ld]),_:1})]),t("td",jd,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Bd,t("td",Nd,[t("a",Od,[l("统计全 1 子矩形"),e(d)])]),Cd,t("td",Kd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Qd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Rd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Ad]),_:1}),l(),Pd]),t("td",Sd,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Td,t("td",Xd,[t("a",Yd,[l("形成目标数组的子数组最少增加次数"),e(d)])]),Dd,t("td",Fd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Gd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Jd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ud]),_:1}),l(),Wd]),t("td",Zd,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$d,t("td",ts,[t("a",es,[l("删除最短的子数组使剩余数组有序"),e(d)])]),ls,t("td",os,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ns]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ds]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[ss]),_:1}),l(),cs]),t("td",_s,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[is,t("td",as,[t("a",rs,[l("找出最具竞争力的子序列"),e(d)])]),us,t("td",hs,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[fs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[gs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ms]),_:1}),l(),ys]),t("td",xs,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bs,t("td",ps,[t("a",ks,[l("能看到海景的建筑物"),e(d)])]),Ms,t("td",Is,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[vs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Hs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[ws]),_:1})]),t("td",qs,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vs,t("td",zs,[t("a",Es,[l("车队 II"),e(d)])]),Ls,t("td",js,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Bs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ns]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[Os]),_:1}),l(),Cs]),t("td",Ks,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qs,t("td",Rs,[t("a",As,[l("好子数组的最大分数"),e(d)])]),Ps,t("td",Ss,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ts]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Xs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[Ys]),_:1}),l(),Ds]),t("td",Fs,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gs,t("td",Js,[t("a",Us,[l("子数组最小乘积的最大值"),e(d)])]),Ws,t("td",Zs,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[$s]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[tc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[ec]),_:1}),l(),lc]),t("td",oc,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nc,t("td",dc,[t("a",sc,[l("队列中可以看到的人数"),e(d)])]),cc,t("td",_c,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ic]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ac]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[rc]),_:1})]),t("td",uc,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hc,t("td",fc,[t("a",gc,[l("所有子数组最小值中的最大值"),e(d)])]),mc,t("td",yc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[xc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[bc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[pc]),_:1})]),t("td",kc,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mc,t("td",Ic,[t("a",vc,[l("游戏中弱角色的数量"),e(d)])]),Hc,t("td",wc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[qc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Vc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[zc]),_:1}),l(),Ec]),t("td",Lc,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jc,t("td",Bc,[t("a",Nc,[l("含特定字母的最小子序列"),e(d)])]),Oc,t("td",Cc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Kc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Qc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Rc]),_:1}),l(),Ac]),t("td",Pc,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sc,t("td",Tc,[t("a",Xc,[l("子数组范围和"),e(d)])]),Yc,t("td",Dc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Fc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Gc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[Jc]),_:1})]),t("td",Uc,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wc,t("td",Zc,[t("a",$c,[l("巫师的总力量和"),e(d)])]),t_,t("td",e_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[l_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[o_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[n_]),_:1}),l(),d_]),t("td",s_,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[c_,t("td",__,[t("a",i_,[l("在一个网格中可以看到的人数"),e(d)])]),a_,t("td",r_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[u_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[h_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[f_]),_:1}),l(),g_]),t("td",m_,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y_,t("td",x_,[t("a",b_,[l("使数组按非递减顺序排列"),e(d)])]),p_,t("td",k_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[M_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[I_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[v_]),_:1}),l(),H_]),t("td",w_,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q_,t("td",V_,[t("a",z_,[l("跳跃游戏 VIII"),e(d)])]),E_,t("td",L_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[j_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[B_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[N_]),_:1}),l(),O_]),t("td",C_,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K_,t("td",Q_,[t("a",R_,[l("元素值大于变化阈值的子数组"),e(d)])]),A_,t("td",P_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[S_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[T_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[X_]),_:1}),l(),Y_]),t("td",D_,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[F_,t("td",G_,[t("a",J_,[l("寻找可见山的数量"),e(d)])]),U_,t("td",W_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Z_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[$_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[ti]),_:1}),l(),ei]),t("td",li,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oi,t("td",ni,[t("a",di,[l("你能拿走的最大图书数量"),e(d)])]),si,t("td",ci,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[_i]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ii]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[ai]),_:1}),l(),ri]),t("td",ui,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hi,t("td",fi,[t("a",gi,[l("下一个更大元素 IV"),e(d)])]),mi,t("td",yi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[xi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[bi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[pi]),_:1}),l(),ki]),t("td",Mi,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ii,t("td",vi,[t("a",Hi,[l("从链表中移除节点"),e(d)])]),wi,t("td",qi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Vi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[zi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[Ei]),_:1}),l(),Li]),t("td",ji,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bi,t("td",Ni,[t("a",Oi,[l("网格图中最少访问的格子数"),e(d)])]),Ci,t("td",Ki,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Qi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ri]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Ai]),_:1}),l(),Pi]),t("td",Si,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ti,t("td",Xi,[t("a",Yi,[l("最大和查询"),e(d)])]),Di,t("td",Fi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Gi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ji]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Ui]),_:1}),l(),Wi]),t("td",Zi,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$i,t("td",ta,[t("a",ea,[l("操作使得分最大"),e(d)])]),la,t("td",oa,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[na]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[da]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[sa]),_:1}),l(),ca]),t("td",_a,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ia,t("td",aa,[t("a",ra,[l("每个元素为最大值的最大范围"),e(d)])]),ua,t("td",ha,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[fa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ga]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[ma]),_:1})]),t("td",ya,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xa,t("td",ba,[t("a",pa,[l("最长半递减子数组的长度"),e(d)])]),ka,t("td",Ma,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ia]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[va]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[Ha]),_:1}),l(),wa]),t("td",qa,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Va,t("td",za,[t("a",Ea,[l("美丽塔 I"),e(d)])]),La,t("td",ja,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ba]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Na]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[Oa]),_:1})]),t("td",Ca,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ka,t("td",Qa,[t("a",Ra,[l("美丽塔 II"),e(d)])]),Aa,t("td",Pa,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Sa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ta]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[Xa]),_:1})]),t("td",Ya,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Da,t("td",Fa,[t("a",Ga,[l("找到 Alice 和 Bob 可以相遇的建筑"),e(d)])]),Ja,t("td",Ua,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Wa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Za]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[$a]),_:1}),l(),tr]),t("td",er,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lr,t("td",or,[t("a",nr,[l("找到最大非递减数组的长度"),e(d)])]),dr,t("td",sr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[cr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[_r]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ir]),_:1}),l(),ar]),t("td",rr,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ur,t("td",hr,[t("a",fr,[l("边界元素是最大值的子数组数目"),e(d)])]),gr,t("td",mr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[yr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[xr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[br]),_:1}),l(),pr]),t("td",kr,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mr,t("td",Ir,[t("a",vr,[l("最大数组跳跃得分 I"),e(d)])]),Hr,t("td",wr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[qr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Vr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[zr]),_:1}),l(),Er]),t("td",Lr,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jr,t("td",Br,[t("a",Nr,[l("最大数组跳跃得分 II"),e(d)])]),Or,t("td",Cr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Kr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Qr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Rr]),_:1}),l(),Ar]),t("td",Pr,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sr,t("td",Tr,[t("a",Xr,[l("使数组等于目标数组所需的最少操作次数"),e(d)])]),Yr,t("td",Dr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Fr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Gr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Jr]),_:1}),l(),Ur]),t("td",Wr,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zr,t("td",$r,[t("a",tu,[l("二叉搜索树的后序遍历序列"),e(d)])]),t("td",eu,[e(n,{to:"/leetcode/problem/jz_offer_33_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",lu,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ou]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[nu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[du]),_:1}),l(),su]),t("td",cu,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_u,t("td",iu,[t("a",au,[l("每日温度"),e(d)])]),ru,t("td",uu,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[hu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[fu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[gu]),_:1})]),t("td",mu,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yu,t("td",xu,[t("a",bu,[l("直方图最大矩形面积"),e(d)])]),pu,t("td",ku,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Mu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Iu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[vu]),_:1})]),t("td",Hu,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wu,t("td",qu,[t("a",Vu,[l("矩阵中最大的矩形"),e(d)])]),zu,t("td",Eu,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Lu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ju]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Bu]),_:1}),l(),Nu]),t("td",Ou,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cu,t("td",Ku,[t("a",Qu,[l("栈排序"),e(d)])]),Ru,t("td",Au,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Pu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Su]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[Tu]),_:1})]),t("td",Xu,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yu,t("td",Du,[t("a",Fu,[l("部分排序"),e(d)])]),Gu,t("td",Ju,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Uu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Wu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Zu]),_:1}),l(),$u]),t("td",th,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eh,t("td",lh,[t("a",oh,[l("直方图的水量"),e(d)])]),nh,t("td",dh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[sh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ch]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[_h]),_:1}),l(),ih]),t("td",ah,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])])])}const gh=_(u,[["render",rh],["__file","monotonic-stack.html.vue"]]);export{gh as default};
