import{_ as c,r as _,o as i,c as a,a as t,d as e,w as l,b as o,f as r}from"./app-qrCIIj1V.js";const h={},u=t("h1",{id:"记忆化搜索",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#记忆化搜索","aria-hidden":"true"},"#"),o(" 记忆化搜索")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),j=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),z=t("code",null,"队列",-1),H=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),M=t("code",null,"字符串",-1),v=t("code",null,"字符串匹配",-1),q=t("code",null,"树",-1),E=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),N=t("code",null,"图",-1),P=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),B=t("code",null,"最短路",-1),O=t("code",null,"强连通分量",-1),K=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),X=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),F=t("code",null,"树状数组",-1),W=t("code",null,"后缀数组",-1),Y=t("p",null,[t("strong",null,"算法")],-1),Z=t("code",null,"枚举",-1),A=t("code",null,"递归",-1),G=t("code",null,"分治",-1),J=t("code",null,"回溯",-1),Q=t("code",null,"贪心",-1),S=t("code",null,"动态规划",-1),U=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("span",{class:"blue"},"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),jt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),zt=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),Mt=t("code",null,"拒绝采样",-1),vt=t("code",null,"数据库",-1),qt=t("code",null,"设计",-1),Et=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Nt=t("code",null,"迭代器",-1),Pt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ot=t("td",{style:{"text-align":"center"}},"70",-1),Kt={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},Tt={style:{"text-align":"center"}},Xt={style:{"text-align":"left"}},Dt=t("code",null,"记忆化搜索",-1),Ft=t("code",null,"数学",-1),Wt=t("code",null,"动态规划",-1),Yt={style:{"text-align":"left"}},Zt=t("td",{style:{"text-align":"center"}},"139",-1),At={style:{"text-align":"left"}},Gt={href:"https://leetcode.com/problems/word-break",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"center"}},Qt={style:{"text-align":"left"}},St=t("code",null,"字典树",-1),Ut=t("code",null,"记忆化搜索",-1),$t=t("code",null,"数组",-1),te=t("code",null,"3+",-1),ee={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"140",-1),le={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/word-break-ii",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},null,-1),de={style:{"text-align":"left"}},_e=t("code",null,"字典树",-1),ce=t("code",null,"记忆化搜索",-1),ie=t("code",null,"数组",-1),ae=t("code",null,"4+",-1),re={style:{"text-align":"left"}},he=t("td",{style:{"text-align":"center"}},"241",-1),ue={style:{"text-align":"left"}},fe={href:"https://leetcode.com/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},ge=t("td",{style:{"text-align":"center"}},null,-1),me={style:{"text-align":"left"}},ye=t("code",null,"递归",-1),xe=t("code",null,"记忆化搜索",-1),pe=t("code",null,"数学",-1),be=t("code",null,"2+",-1),je={style:{"text-align":"left"}},ke=t("td",{style:{"text-align":"center"}},"294",-1),ze={style:{"text-align":"left"}},He={href:"https://leetcode.com/problems/flip-game-ii",target:"_blank",rel:"noopener noreferrer"},we=t("td",{style:{"text-align":"center"}},null,-1),Ie={style:{"text-align":"left"}},Me=t("code",null,"记忆化搜索",-1),ve=t("code",null,"数学",-1),qe=t("code",null,"动态规划",-1),Ee=t("code",null,"2+",-1),Ce={style:{"text-align":"left"}},Le=t("td",{style:{"text-align":"center"}},"329",-1),Ne={style:{"text-align":"left"}},Pe={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Ve=t("td",{style:{"text-align":"center"}},null,-1),Be={style:{"text-align":"left"}},Oe=t("code",null,"深度优先搜索",-1),Ke=t("code",null,"广度优先搜索",-1),Re=t("code",null,"图",-1),Te=t("code",null,"5+",-1),Xe={style:{"text-align":"left"}},De=t("td",{style:{"text-align":"center"}},"397",-1),Fe={style:{"text-align":"left"}},We={href:"https://leetcode.com/problems/integer-replacement",target:"_blank",rel:"noopener noreferrer"},Ye=t("td",{style:{"text-align":"center"}},null,-1),Ze={style:{"text-align":"left"}},Ae=t("code",null,"贪心",-1),Ge=t("code",null,"位运算",-1),Je=t("code",null,"记忆化搜索",-1),Qe=t("code",null,"1+",-1),Se={style:{"text-align":"left"}},Ue=t("td",{style:{"text-align":"center"}},"464",-1),$e={style:{"text-align":"left"}},to={href:"https://leetcode.com/problems/can-i-win",target:"_blank",rel:"noopener noreferrer"},eo=t("td",{style:{"text-align":"center"}},null,-1),oo={style:{"text-align":"left"}},lo=t("code",null,"位运算",-1),no=t("code",null,"记忆化搜索",-1),so=t("code",null,"数学",-1),_o=t("code",null,"3+",-1),co={style:{"text-align":"left"}},io=t("td",{style:{"text-align":"center"}},"488",-1),ao={style:{"text-align":"left"}},ro={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},null,-1),uo={style:{"text-align":"left"}},fo=t("code",null,"栈",-1),go=t("code",null,"广度优先搜索",-1),mo=t("code",null,"记忆化搜索",-1),yo=t("code",null,"2+",-1),xo={style:{"text-align":"left"}},po=t("td",{style:{"text-align":"center"}},"509",-1),bo={style:{"text-align":"left"}},jo={href:"https://leetcode.com/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},ko={style:{"text-align":"center"}},zo={style:{"text-align":"left"}},Ho=t("code",null,"递归",-1),wo=t("code",null,"记忆化搜索",-1),Io=t("code",null,"数学",-1),Mo=t("code",null,"1+",-1),vo={style:{"text-align":"left"}},qo=t("td",{style:{"text-align":"center"}},"546",-1),Eo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/remove-boxes",target:"_blank",rel:"noopener noreferrer"},Lo=t("td",{style:{"text-align":"center"}},null,-1),No={style:{"text-align":"left"}},Po=t("code",null,"记忆化搜索",-1),Vo=t("code",null,"数组",-1),Bo=t("code",null,"动态规划",-1),Oo={style:{"text-align":"left"}},Ko=t("td",{style:{"text-align":"center"}},"638",-1),Ro={style:{"text-align":"left"}},To={href:"https://leetcode.com/problems/shopping-offers",target:"_blank",rel:"noopener noreferrer"},Xo=t("td",{style:{"text-align":"center"}},null,-1),Do={style:{"text-align":"left"}},Fo=t("code",null,"位运算",-1),Wo=t("code",null,"记忆化搜索",-1),Yo=t("code",null,"数组",-1),Zo=t("code",null,"3+",-1),Ao={style:{"text-align":"left"}},Go=t("td",{style:{"text-align":"center"}},"698",-1),Jo={style:{"text-align":"left"}},Qo={href:"https://leetcode.com/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},So=t("td",{style:{"text-align":"center"}},null,-1),Uo={style:{"text-align":"left"}},$o=t("code",null,"位运算",-1),tl=t("code",null,"记忆化搜索",-1),el=t("code",null,"数组",-1),ol=t("code",null,"3+",-1),ll={style:{"text-align":"left"}},nl=t("td",{style:{"text-align":"center"}},"894",-1),sl={style:{"text-align":"left"}},dl={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},_l=t("td",{style:{"text-align":"center"}},null,-1),cl={style:{"text-align":"left"}},il=t("code",null,"树",-1),al=t("code",null,"递归",-1),rl=t("code",null,"记忆化搜索",-1),hl=t("code",null,"2+",-1),ul={style:{"text-align":"left"}},fl=t("td",{style:{"text-align":"center"}},"913",-1),gl={style:{"text-align":"left"}},ml={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},yl=t("td",{style:{"text-align":"center"}},null,-1),xl={style:{"text-align":"left"}},pl=t("code",null,"图",-1),bl=t("code",null,"拓扑排序",-1),jl=t("code",null,"记忆化搜索",-1),kl=t("code",null,"3+",-1),zl={style:{"text-align":"left"}},Hl=t("td",{style:{"text-align":"center"}},"964",-1),wl={style:{"text-align":"left"}},Il={href:"https://leetcode.com/problems/least-operators-to-express-number",target:"_blank",rel:"noopener noreferrer"},Ml=t("td",{style:{"text-align":"center"}},null,-1),vl={style:{"text-align":"left"}},ql=t("code",null,"记忆化搜索",-1),El=t("code",null,"数学",-1),Cl=t("code",null,"动态规划",-1),Ll={style:{"text-align":"left"}},Nl=t("td",{style:{"text-align":"center"}},"1137",-1),Pl={style:{"text-align":"left"}},Vl={href:"https://leetcode.com/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},Bl={style:{"text-align":"center"}},Ol={style:{"text-align":"left"}},Kl=t("code",null,"记忆化搜索",-1),Rl=t("code",null,"数学",-1),Tl=t("code",null,"动态规划",-1),Xl={style:{"text-align":"left"}},Dl=t("td",{style:{"text-align":"center"}},"1387",-1),Fl={style:{"text-align":"left"}},Wl={href:"https://leetcode.com/problems/sort-integers-by-the-power-value",target:"_blank",rel:"noopener noreferrer"},Yl=t("td",{style:{"text-align":"center"}},null,-1),Zl={style:{"text-align":"left"}},Al=t("code",null,"记忆化搜索",-1),Gl=t("code",null,"动态规划",-1),Jl=t("code",null,"排序",-1),Ql={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"1444",-1),Ul={style:{"text-align":"left"}},$l={href:"https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza",target:"_blank",rel:"noopener noreferrer"},tn=t("td",{style:{"text-align":"center"}},null,-1),en={style:{"text-align":"left"}},on=t("code",null,"记忆化搜索",-1),ln=t("code",null,"数组",-1),nn=t("code",null,"动态规划",-1),sn=t("code",null,"1+",-1),dn={style:{"text-align":"left"}},_n=t("td",{style:{"text-align":"center"}},"1553",-1),cn={style:{"text-align":"left"}},an={href:"https://leetcode.com/problems/minimum-number-of-days-to-eat-n-oranges",target:"_blank",rel:"noopener noreferrer"},rn=t("td",{style:{"text-align":"center"}},null,-1),hn={style:{"text-align":"left"}},un=t("code",null,"记忆化搜索",-1),fn=t("code",null,"动态规划",-1),gn={style:{"text-align":"left"}},mn=t("td",{style:{"text-align":"center"}},"1569",-1),yn={style:{"text-align":"left"}},xn={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},pn=t("td",{style:{"text-align":"center"}},null,-1),bn={style:{"text-align":"left"}},jn=t("code",null,"树",-1),kn=t("code",null,"并查集",-1),zn=t("code",null,"二叉搜索树",-1),Hn=t("code",null,"7+",-1),wn={style:{"text-align":"left"}},In=t("td",{style:{"text-align":"center"}},"1575",-1),Mn={style:{"text-align":"left"}},vn={href:"https://leetcode.com/problems/count-all-possible-routes",target:"_blank",rel:"noopener noreferrer"},qn=t("td",{style:{"text-align":"center"}},null,-1),En={style:{"text-align":"left"}},Cn=t("code",null,"记忆化搜索",-1),Ln=t("code",null,"数组",-1),Nn=t("code",null,"动态规划",-1),Pn={style:{"text-align":"left"}},Vn=t("td",{style:{"text-align":"center"}},"1611",-1),Bn={style:{"text-align":"left"}},On={href:"https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero",target:"_blank",rel:"noopener noreferrer"},Kn=t("td",{style:{"text-align":"center"}},null,-1),Rn={style:{"text-align":"left"}},Tn=t("code",null,"位运算",-1),Xn=t("code",null,"记忆化搜索",-1),Dn=t("code",null,"动态规划",-1),Fn={style:{"text-align":"left"}},Wn=t("td",{style:{"text-align":"center"}},"1659",-1),Yn={style:{"text-align":"left"}},Zn={href:"https://leetcode.com/problems/maximize-grid-happiness",target:"_blank",rel:"noopener noreferrer"},An=t("td",{style:{"text-align":"center"}},null,-1),Gn={style:{"text-align":"left"}},Jn=t("code",null,"位运算",-1),Qn=t("code",null,"记忆化搜索",-1),Sn=t("code",null,"动态规划",-1),Un=t("code",null,"1+",-1),$n={style:{"text-align":"left"}},ts=t("td",{style:{"text-align":"center"}},"1728",-1),es={style:{"text-align":"left"}},os={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},ls=t("td",{style:{"text-align":"center"}},null,-1),ns={style:{"text-align":"left"}},ss=t("code",null,"图",-1),ds=t("code",null,"拓扑排序",-1),_s=t("code",null,"记忆化搜索",-1),cs=t("code",null,"5+",-1),is={style:{"text-align":"left"}},as=t("td",{style:{"text-align":"center"}},"1815",-1),rs={style:{"text-align":"left"}},hs={href:"https://leetcode.com/problems/maximum-number-of-groups-getting-fresh-donuts",target:"_blank",rel:"noopener noreferrer"},us=t("td",{style:{"text-align":"center"}},null,-1),fs={style:{"text-align":"left"}},gs=t("code",null,"位运算",-1),ms=t("code",null,"记忆化搜索",-1),ys=t("code",null,"数组",-1),xs=t("code",null,"2+",-1),ps={style:{"text-align":"left"}},bs=t("td",{style:{"text-align":"center"}},"1857",-1),js={style:{"text-align":"left"}},ks={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},zs=t("td",{style:{"text-align":"center"}},null,-1),Hs={style:{"text-align":"left"}},ws=t("code",null,"图",-1),Is=t("code",null,"拓扑排序",-1),Ms=t("code",null,"记忆化搜索",-1),vs=t("code",null,"3+",-1),qs={style:{"text-align":"left"}},Es=t("td",{style:{"text-align":"center"}},"1900",-1),Cs={style:{"text-align":"left"}},Ls={href:"https://leetcode.com/problems/the-earliest-and-latest-rounds-where-players-compete",target:"_blank",rel:"noopener noreferrer"},Ns=t("td",{style:{"text-align":"center"}},null,-1),Ps={style:{"text-align":"left"}},Vs=t("code",null,"记忆化搜索",-1),Bs=t("code",null,"动态规划",-1),Os={style:{"text-align":"left"}},Ks=t("td",{style:{"text-align":"center"}},"2019",-1),Rs={style:{"text-align":"left"}},Ts={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},Xs=t("td",{style:{"text-align":"center"}},null,-1),Ds={style:{"text-align":"left"}},Fs=t("code",null,"栈",-1),Ws=t("code",null,"记忆化搜索",-1),Ys=t("code",null,"数组",-1),Zs=t("code",null,"3+",-1),As={style:{"text-align":"left"}},Gs=t("td",{style:{"text-align":"center"}},"2311",-1),Js={style:{"text-align":"left"}},Qs={href:"https://leetcode.com/problems/longest-binary-subsequence-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},Ss=t("td",{style:{"text-align":"center"}},null,-1),Us={style:{"text-align":"left"}},$s=t("code",null,"贪心",-1),td=t("code",null,"记忆化搜索",-1),ed=t("code",null,"字符串",-1),od=t("code",null,"1+",-1),ld={style:{"text-align":"left"}},nd=t("td",{style:{"text-align":"center"}},"2312",-1),sd={style:{"text-align":"left"}},dd={href:"https://leetcode.com/problems/selling-pieces-of-wood",target:"_blank",rel:"noopener noreferrer"},_d=t("td",{style:{"text-align":"center"}},null,-1),cd={style:{"text-align":"left"}},id=t("code",null,"记忆化搜索",-1),ad=t("code",null,"数组",-1),rd=t("code",null,"动态规划",-1),hd={style:{"text-align":"left"}},ud=t("td",{style:{"text-align":"center"}},"2318",-1),fd={style:{"text-align":"left"}},gd={href:"https://leetcode.com/problems/number-of-distinct-roll-sequences",target:"_blank",rel:"noopener noreferrer"},md=t("td",{style:{"text-align":"center"}},null,-1),yd={style:{"text-align":"left"}},xd=t("code",null,"记忆化搜索",-1),pd=t("code",null,"动态规划",-1),bd={style:{"text-align":"left"}},jd=t("td",{style:{"text-align":"center"}},"2328",-1),kd={style:{"text-align":"left"}},zd={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Hd=t("td",{style:{"text-align":"center"}},null,-1),wd={style:{"text-align":"left"}},Id=t("code",null,"深度优先搜索",-1),Md=t("code",null,"广度优先搜索",-1),vd=t("code",null,"图",-1),qd=t("code",null,"5+",-1),Ed={style:{"text-align":"left"}},Cd=t("td",{style:{"text-align":"center"}},"2713",-1),Ld={style:{"text-align":"left"}},Nd={href:"https://leetcode.com/problems/maximum-strictly-increasing-cells-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Pd=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},Bd=t("code",null,"记忆化搜索",-1),Od=t("code",null,"数组",-1),Kd=t("code",null,"哈希表",-1),Rd=t("code",null,"5+",-1),Td={style:{"text-align":"left"}},Xd=t("td",{style:{"text-align":"center"}},"2876",-1),Dd={style:{"text-align":"left"}},Fd={href:"https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},Wd=t("td",{style:{"text-align":"center"}},null,-1),Yd={style:{"text-align":"left"}},Zd=t("code",null,"图",-1),Ad=t("code",null,"记忆化搜索",-1),Gd=t("code",null,"动态规划",-1),Jd={style:{"text-align":"left"}},Qd=t("td",{style:{"text-align":"center"}},"2998",-1),Sd={style:{"text-align":"left"}},Ud={href:"https://leetcode.com/problems/minimum-number-of-operations-to-make-x-and-y-equal",target:"_blank",rel:"noopener noreferrer"},$d=t("td",{style:{"text-align":"center"}},null,-1),t_={style:{"text-align":"left"}},e_=t("code",null,"广度优先搜索",-1),o_=t("code",null,"记忆化搜索",-1),l_=t("code",null,"动态规划",-1),n_={style:{"text-align":"left"}},s_=t("td",{style:{"text-align":"center"}},"3040",-1),d_={style:{"text-align":"left"}},__={href:"https://leetcode.com/problems/maximum-number-of-operations-with-the-same-score-ii",target:"_blank",rel:"noopener noreferrer"},c_=t("td",{style:{"text-align":"center"}},null,-1),i_={style:{"text-align":"left"}},a_=t("code",null,"记忆化搜索",-1),r_=t("code",null,"数组",-1),h_=t("code",null,"动态规划",-1),u_={style:{"text-align":"left"}},f_=t("td",{style:{"text-align":"center"}},"3154",-1),g_={style:{"text-align":"left"}},m_={href:"https://leetcode.com/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},y_=t("td",{style:{"text-align":"center"}},null,-1),x_={style:{"text-align":"left"}},p_=t("code",null,"位运算",-1),b_=t("code",null,"记忆化搜索",-1),j_=t("code",null,"数学",-1),k_=t("code",null,"2+",-1),z_={style:{"text-align":"left"}},H_=t("td",{style:{"text-align":"center"}},"LCP 20",-1),w_={style:{"text-align":"left"}},I_={href:"https://leetcode.cn/problems/meChtZ",target:"_blank",rel:"noopener noreferrer"},M_=t("td",{style:{"text-align":"center"}},null,-1),v_={style:{"text-align":"left"}},q_=t("code",null,"记忆化搜索",-1),E_=t("code",null,"数组",-1),C_=t("code",null,"动态规划",-1),L_={style:{"text-align":"left"}},N_=t("td",{style:{"text-align":"center"}},"LCP 45",-1),P_={style:{"text-align":"left"}},V_={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},B_=t("td",{style:{"text-align":"center"}},null,-1),O_={style:{"text-align":"left"}},K_=t("code",null,"深度优先搜索",-1),R_=t("code",null,"广度优先搜索",-1),T_=t("code",null,"记忆化搜索",-1),X_=t("code",null,"3+",-1),D_={style:{"text-align":"left"}},F_=t("td",{style:{"text-align":"center"}},"LCP 63",-1),W_={style:{"text-align":"left"}},Y_={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},Z_=t("td",{style:{"text-align":"center"}},null,-1),A_={style:{"text-align":"left"}},G_=t("code",null,"深度优先搜索",-1),J_=t("code",null,"广度优先搜索",-1),Q_=t("code",null,"图",-1),S_=t("code",null,"5+",-1),U_={style:{"text-align":"left"}},$_=t("td",{style:{"text-align":"center"}},"剑指 Offer 10 - I",-1),tc={style:{"text-align":"left"}},ec={href:"https://leetcode.cn/problems/fei-bo-na-qi-shu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},oc={style:{"text-align":"center"}},lc={style:{"text-align":"left"}},nc=t("code",null,"记忆化搜索",-1),sc=t("code",null,"数学",-1),dc=t("code",null,"动态规划",-1),_c={style:{"text-align":"left"}},cc=t("td",{style:{"text-align":"center"}},"剑指 Offer 10 - II",-1),ic={style:{"text-align":"left"}},ac={href:"https://leetcode.cn/problems/qing-wa-tiao-tai-jie-wen-ti-lcof",target:"_blank",rel:"noopener noreferrer"},rc={style:{"text-align":"center"}},hc={style:{"text-align":"left"}},uc=t("code",null,"记忆化搜索",-1),fc=t("code",null,"数学",-1),gc=t("code",null,"动态规划",-1),mc={style:{"text-align":"left"}},yc=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),xc={style:{"text-align":"left"}},pc={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},bc=t("td",{style:{"text-align":"center"}},null,-1),jc={style:{"text-align":"left"}},kc=t("code",null,"深度优先搜索",-1),zc=t("code",null,"广度优先搜索",-1),Hc=t("code",null,"图",-1),wc=t("code",null,"5+",-1),Ic={style:{"text-align":"left"}},Mc=t("td",{style:{"text-align":"center"}},"面试题 08.01",-1),vc={style:{"text-align":"left"}},qc={href:"https://leetcode.cn/problems/three-steps-problem-lcci",target:"_blank",rel:"noopener noreferrer"},Ec=t("td",{style:{"text-align":"center"}},null,-1),Cc={style:{"text-align":"left"}},Lc=t("code",null,"记忆化搜索",-1),Nc=t("code",null,"数学",-1),Pc=t("code",null,"动态规划",-1),Vc={style:{"text-align":"left"}},Bc=t("td",{style:{"text-align":"center"}},"面试题 08.14",-1),Oc={style:{"text-align":"left"}},Kc={href:"https://leetcode.cn/problems/boolean-evaluation-lcci",target:"_blank",rel:"noopener noreferrer"},Rc=t("td",{style:{"text-align":"center"}},null,-1),Tc={style:{"text-align":"left"}},Xc=t("code",null,"记忆化搜索",-1),Dc=t("code",null,"字符串",-1),Fc=t("code",null,"动态规划",-1),Wc={style:{"text-align":"left"}};function Yc(Zc,Ac){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/monotonic-queue.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/strongly-connected-component.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:l(()=>[W]),_:1})]),Y,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),st,o(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/counting.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/geometry.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/simulation.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/randomized.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/reservoir-sampling.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/rejection-sampling.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/database.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/interactive.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/iterator.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/concurrency.html"},{default:l(()=>[Pt]),_:1})])]),Vt,r(" prettier-ignore "),t("table",null,[Bt,t("tbody",null,[t("tr",null,[Ot,t("td",Kt,[t("a",Rt,[o("爬楼梯"),e(s)])]),t("td",Tt,[e(n,{to:"/leetcode-js/problem/0070.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",Xt,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Dt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:l(()=>[Ft]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Wt]),_:1})]),t("td",Yt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Zt,t("td",At,[t("a",Gt,[o("单词拆分"),e(s)])]),t("td",Jt,[e(n,{to:"/leetcode-js/problem/0139.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",Qt,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:l(()=>[St]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Ut]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[$t]),_:1}),o(),te]),t("td",ee,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[oe,t("td",le,[t("a",ne,[o("单词拆分 II"),e(s)])]),se,t("td",de,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:l(()=>[_e]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[ce]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[ie]),_:1}),o(),ae]),t("td",re,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[he,t("td",ue,[t("a",fe,[o("为运算表达式设计优先级"),e(s)])]),ge,t("td",me,[e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:l(()=>[ye]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[xe]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:l(()=>[pe]),_:1}),o(),be]),t("td",je,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ke,t("td",ze,[t("a",He,[o("翻转游戏 II"),e(s)])]),we,t("td",Ie,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Me]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:l(()=>[ve]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[qe]),_:1}),o(),Ee]),t("td",Ce,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Le,t("td",Ne,[t("a",Pe,[o("矩阵中的最长递增路径"),e(s)])]),Ve,t("td",Be,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[Oe]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[Ke]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[Re]),_:1}),o(),Te]),t("td",Xe,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[De,t("td",Fe,[t("a",We,[o("整数替换"),e(s)])]),Ye,t("td",Ze,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:l(()=>[Ae]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:l(()=>[Ge]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Je]),_:1}),o(),Qe]),t("td",Se,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ue,t("td",$e,[t("a",to,[o("我能赢吗"),e(s)])]),eo,t("td",oo,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:l(()=>[lo]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[no]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:l(()=>[so]),_:1}),o(),_o]),t("td",co,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[io,t("td",ao,[t("a",ro,[o("祖玛游戏"),e(s)])]),ho,t("td",uo,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:l(()=>[fo]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[go]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[mo]),_:1}),o(),yo]),t("td",xo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[po,t("td",bo,[t("a",jo,[o("斐波那契数"),e(s)])]),t("td",ko,[e(n,{to:"/leetcode-js/problem/0509.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",zo,[e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:l(()=>[Ho]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[wo]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:l(()=>[Io]),_:1}),o(),Mo]),t("td",vo,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[qo,t("td",Eo,[t("a",Co,[o("移除盒子"),e(s)])]),Lo,t("td",No,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Po]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Vo]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Bo]),_:1})]),t("td",Oo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ko,t("td",Ro,[t("a",To,[o("大礼包"),e(s)])]),Xo,t("td",Do,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:l(()=>[Fo]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Wo]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Yo]),_:1}),o(),Zo]),t("td",Ao,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Go,t("td",Jo,[t("a",Qo,[o("划分为k个相等的子集"),e(s)])]),So,t("td",Uo,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:l(()=>[$o]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[tl]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[el]),_:1}),o(),ol]),t("td",ll,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[nl,t("td",sl,[t("a",dl,[o("所有可能的真二叉树"),e(s)])]),_l,t("td",cl,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:l(()=>[il]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:l(()=>[al]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[rl]),_:1}),o(),hl]),t("td",ul,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fl,t("td",gl,[t("a",ml,[o("猫和老鼠"),e(s)])]),yl,t("td",xl,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[pl]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:l(()=>[bl]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[jl]),_:1}),o(),kl]),t("td",zl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Hl,t("td",wl,[t("a",Il,[o("表示数字的最少运算符"),e(s)])]),Ml,t("td",vl,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[ql]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:l(()=>[El]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Cl]),_:1})]),t("td",Ll,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Nl,t("td",Pl,[t("a",Vl,[o("第 N 个泰波那契数"),e(s)])]),t("td",Bl,[e(n,{to:"/leetcode-js/problem/1137.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",Ol,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Kl]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:l(()=>[Rl]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Tl]),_:1})]),t("td",Xl,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Dl,t("td",Fl,[t("a",Wl,[o("将整数按权重排序"),e(s)])]),Yl,t("td",Zl,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Al]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Gl]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:l(()=>[Jl]),_:1})]),t("td",Ql,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Sl,t("td",Ul,[t("a",$l,[o("切披萨的方案数"),e(s)])]),tn,t("td",en,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[on]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[ln]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[nn]),_:1}),o(),sn]),t("td",dn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_n,t("td",cn,[t("a",an,[o("吃掉 N 个橘子的最少天数"),e(s)])]),rn,t("td",hn,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[un]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[fn]),_:1})]),t("td",gn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[mn,t("td",yn,[t("a",xn,[o("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),pn,t("td",bn,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:l(()=>[jn]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:l(()=>[kn]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:l(()=>[zn]),_:1}),o(),Hn]),t("td",wn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[In,t("td",Mn,[t("a",vn,[o("统计所有可行路径"),e(s)])]),qn,t("td",En,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Cn]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Ln]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Nn]),_:1})]),t("td",Pn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Vn,t("td",Bn,[t("a",On,[o("使整数变为 0 的最少操作次数"),e(s)])]),Kn,t("td",Rn,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:l(()=>[Tn]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Xn]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Dn]),_:1})]),t("td",Fn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Wn,t("td",Yn,[t("a",Zn,[o("最大化网格幸福感"),e(s)])]),An,t("td",Gn,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:l(()=>[Jn]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Qn]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Sn]),_:1}),o(),Un]),t("td",$n,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ts,t("td",es,[t("a",os,[o("猫和老鼠 II"),e(s)])]),ls,t("td",ns,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[ss]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:l(()=>[ds]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[_s]),_:1}),o(),cs]),t("td",is,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[as,t("td",rs,[t("a",hs,[o("得到新鲜甜甜圈的最多组数"),e(s)])]),us,t("td",fs,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:l(()=>[gs]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[ms]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[ys]),_:1}),o(),xs]),t("td",ps,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bs,t("td",js,[t("a",ks,[o("有向图中最大颜色值"),e(s)])]),zs,t("td",Hs,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[ws]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:l(()=>[Is]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Ms]),_:1}),o(),vs]),t("td",qs,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Es,t("td",Cs,[t("a",Ls,[o("最佳运动员的比拼回合"),e(s)])]),Ns,t("td",Ps,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Vs]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Bs]),_:1})]),t("td",Os,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ks,t("td",Rs,[t("a",Ts,[o("解出数学表达式的学生分数"),e(s)])]),Xs,t("td",Ds,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:l(()=>[Fs]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Ws]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Ys]),_:1}),o(),Zs]),t("td",As,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Gs,t("td",Js,[t("a",Qs,[o("小于等于 K 的最长二进制子序列"),e(s)])]),Ss,t("td",Us,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:l(()=>[$s]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[td]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:l(()=>[ed]),_:1}),o(),od]),t("td",ld,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[nd,t("td",sd,[t("a",dd,[o("卖木头块"),e(s)])]),_d,t("td",cd,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[id]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[ad]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[rd]),_:1})]),t("td",hd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ud,t("td",fd,[t("a",gd,[o("不同骰子序列的数目"),e(s)])]),md,t("td",yd,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[xd]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[pd]),_:1})]),t("td",bd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[jd,t("td",kd,[t("a",zd,[o("网格图中递增路径的数目"),e(s)])]),Hd,t("td",wd,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[Id]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[Md]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[vd]),_:1}),o(),qd]),t("td",Ed,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Cd,t("td",Ld,[t("a",Nd,[o("矩阵中严格递增的单元格数"),e(s)])]),Pd,t("td",Vd,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Bd]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Od]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[Kd]),_:1}),o(),Rd]),t("td",Td,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Xd,t("td",Dd,[t("a",Fd,[o("有向图访问计数"),e(s)])]),Wd,t("td",Yd,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[Zd]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Ad]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Gd]),_:1})]),t("td",Jd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Qd,t("td",Sd,[t("a",Ud,[o("使 X 和 Y 相等的最少操作次数"),e(s)])]),$d,t("td",t_,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[e_]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[o_]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[l_]),_:1})]),t("td",n_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[s_,t("td",d_,[t("a",__,[o("相同分数的最大操作数目 II"),e(s)])]),c_,t("td",i_,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[a_]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[r_]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[h_]),_:1})]),t("td",u_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[f_,t("td",g_,[t("a",m_,[o("到达第 K 级台阶的方案数"),e(s)])]),y_,t("td",x_,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:l(()=>[p_]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[b_]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:l(()=>[j_]),_:1}),o(),k_]),t("td",z_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[H_,t("td",w_,[t("a",I_,[o("快速公交"),e(s)])]),M_,t("td",v_,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[q_]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[E_]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[C_]),_:1})]),t("td",L_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[N_,t("td",P_,[t("a",V_,[o("自行车炫技赛场"),e(s)])]),B_,t("td",O_,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[K_]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[R_]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[T_]),_:1}),o(),X_]),t("td",D_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[F_,t("td",W_,[t("a",Y_,[o("弹珠游戏"),e(s)])]),Z_,t("td",A_,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[G_]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[J_]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[Q_]),_:1}),o(),S_]),t("td",U_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[$_,t("td",tc,[t("a",ec,[o("斐波那契数列"),e(s)])]),t("td",oc,[e(n,{to:"/leetcode-js/problem/jz_offer_10_1.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",lc,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[nc]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:l(()=>[sc]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[dc]),_:1})]),t("td",_c,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[cc,t("td",ic,[t("a",ac,[o("青蛙跳台阶问题"),e(s)])]),t("td",rc,[e(n,{to:"/leetcode-js/problem/jz_offer_10_2.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",hc,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[uc]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:l(()=>[fc]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[gc]),_:1})]),t("td",mc,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[yc,t("td",xc,[t("a",pc,[o("最长递增路径"),e(s)])]),bc,t("td",jc,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[kc]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[zc]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[Hc]),_:1}),o(),wc]),t("td",Ic,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Mc,t("td",vc,[t("a",qc,[o("三步问题"),e(s)])]),Ec,t("td",Cc,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Lc]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:l(()=>[Nc]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Pc]),_:1})]),t("td",Vc,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Bc,t("td",Oc,[t("a",Kc,[o("布尔运算"),e(s)])]),Rc,t("td",Tc,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[Xc]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:l(()=>[Dc]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Fc]),_:1})]),t("td",Wc,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const Jc=c(h,[["render",Yc],["__file","memoization.html.vue"]]);export{Jc as default};
