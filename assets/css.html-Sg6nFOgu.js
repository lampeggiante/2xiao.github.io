import{_ as a,o as e,c as h,e as r}from"./app-ClmBq6Dp.js";const d={},s=r('<h2 id="_1-css-选择器及优先级" tabindex="-1"><a class="header-anchor" href="#_1-css-选择器及优先级" aria-hidden="true">#</a> 1. CSS 选择器及优先级</h2><h2 id="_2-css3-新特性" tabindex="-1"><a class="header-anchor" href="#_2-css3-新特性" aria-hidden="true">#</a> 2. CSS3 新特性</h2><h2 id="_3-css-盒子模型" tabindex="-1"><a class="header-anchor" href="#_3-css-盒子模型" aria-hidden="true">#</a> 3. CSS 盒子模型</h2><h2 id="_4-bfc-块级格式上下文" tabindex="-1"><a class="header-anchor" href="#_4-bfc-块级格式上下文" aria-hidden="true">#</a> 4. BFC（块级格式上下文）</h2><h2 id="_5-隐藏页面元素的方法" tabindex="-1"><a class="header-anchor" href="#_5-隐藏页面元素的方法" aria-hidden="true">#</a> 5. 隐藏页面元素的方法</h2><h2 id="_6-flex-布局" tabindex="-1"><a class="header-anchor" href="#_6-flex-布局" aria-hidden="true">#</a> 6. Flex 布局</h2><h2 id="_7-rem-布局" tabindex="-1"><a class="header-anchor" href="#_7-rem-布局" aria-hidden="true">#</a> 7. Rem 布局</h2><h2 id="_8-浮动布局" tabindex="-1"><a class="header-anchor" href="#_8-浮动布局" aria-hidden="true">#</a> 8. 浮动布局</h2><h2 id="_9-行内元素、块级元素、空元素" tabindex="-1"><a class="header-anchor" href="#_9-行内元素、块级元素、空元素" aria-hidden="true">#</a> 9. 行内元素、块级元素、空元素</h2><h2 id="_10-em-px-rem-vh-vw-区别" tabindex="-1"><a class="header-anchor" href="#_10-em-px-rem-vh-vw-区别" aria-hidden="true">#</a> 10. em/px/rem/vh/vw 区别?</h2><h2 id="_11-如何使用-rem-或-viewport-进行移动端适配" tabindex="-1"><a class="header-anchor" href="#_11-如何使用-rem-或-viewport-进行移动端适配" aria-hidden="true">#</a> 11. 如何使用 rem 或 viewport 进行移动端适配</h2><h2 id="_12-清除浮动的几个方式" tabindex="-1"><a class="header-anchor" href="#_12-清除浮动的几个方式" aria-hidden="true">#</a> 12. 清除浮动的几个方式</h2><h2 id="_13-css-预处理器-sass、less、stylus-的区别" tabindex="-1"><a class="header-anchor" href="#_13-css-预处理器-sass、less、stylus-的区别" aria-hidden="true">#</a> 13. CSS 预处理器 Sass、Less、Stylus 的区别</h2><h2 id="_14-让一个元素水平垂直居中的方法" tabindex="-1"><a class="header-anchor" href="#_14-让一个元素水平垂直居中的方法" aria-hidden="true">#</a> 14. 让一个元素水平垂直居中的方法</h2><h2 id="_15-浏览器样式兼容" tabindex="-1"><a class="header-anchor" href="#_15-浏览器样式兼容" aria-hidden="true">#</a> 15. 浏览器样式兼容</h2><h2 id="_16-怎么解决父元素高度塌陷" tabindex="-1"><a class="header-anchor" href="#_16-怎么解决父元素高度塌陷" aria-hidden="true">#</a> 16. 怎么解决父元素高度塌陷</h2><h2 id="_17-box-sizing-所有的属性" tabindex="-1"><a class="header-anchor" href="#_17-box-sizing-所有的属性" aria-hidden="true">#</a> 17. box-sizing 所有的属性</h2><h2 id="_18-flex-0-的含义" tabindex="-1"><a class="header-anchor" href="#_18-flex-0-的含义" aria-hidden="true">#</a> 18. flex: 0 的含义</h2><h2 id="_19-伪元素、伪类区别" tabindex="-1"><a class="header-anchor" href="#_19-伪元素、伪类区别" aria-hidden="true">#</a> 19. 伪元素、伪类区别</h2>',19),i=[s];function n(c,t){return e(),h("div",null,i)}const o=a(d,[["render",n],["__file","css.html.vue"]]);export{o as default};
