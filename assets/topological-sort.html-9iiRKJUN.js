import{_,r as c,o as i,c as a,a as t,d as e,w as l,b as o,f as h}from"./app-mvY9N9Pc.js";const r={},u=t("h1",{id:"拓扑排序",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#拓扑排序","aria-hidden":"true"},"#"),o(" 拓扑排序")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),p=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),H=t("code",null,"单调栈",-1),I=t("code",null,"队列",-1),M=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),C=t("code",null,"二叉树",-1),E=t("code",null,"二叉搜索树",-1),V=t("code",null,"最小生成树",-1),j=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),O=t("span",{class:"blue"},"拓扑排序",-1),P=t("code",null,"最短路",-1),B=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),J=t("code",null,"并查集",-1),R=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),F=t("code",null,"树状数组",-1),G=t("code",null,"后缀数组",-1),Q=t("p",null,[t("strong",null,"算法")],-1),S=t("code",null,"枚举",-1),W=t("code",null,"递归",-1),X=t("code",null,"分治",-1),Z=t("code",null,"回溯",-1),K=t("code",null,"贪心",-1),U=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ht=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),pt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Ht=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),Mt=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Ct=t("code",null,"数据流",-1),Et=t("code",null,"脑筋急转弯",-1),Vt=t("code",null,"交互",-1),jt=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Ot=t("hr",null,null,-1),Pt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Bt=t("td",{style:{"text-align":"center"}},"207",-1),Tt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"center"}},Rt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0207",target:"_blank",rel:"noopener noreferrer"},Dt={style:{"text-align":"left"}},Ft=t("code",null,"深度优先搜索",-1),Gt=t("code",null,"广度优先搜索",-1),Qt=t("code",null,"图",-1),St=t("code",null,"1+",-1),Wt={style:{"text-align":"left"}},Xt=t("td",{style:{"text-align":"center"}},"210",-1),Zt={style:{"text-align":"left"}},Kt={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},Yt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0210",target:"_blank",rel:"noopener noreferrer"},$t={style:{"text-align":"left"}},te=t("code",null,"深度优先搜索",-1),ee=t("code",null,"广度优先搜索",-1),oe=t("code",null,"图",-1),le=t("code",null,"1+",-1),ne={style:{"text-align":"left"}},de=t("td",{style:{"text-align":"center"}},"269",-1),se={style:{"text-align":"left"}},ce={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},_e=t("td",{style:{"text-align":"center"}},null,-1),ie={style:{"text-align":"left"}},ae=t("code",null,"深度优先搜索",-1),he=t("code",null,"广度优先搜索",-1),re=t("code",null,"图",-1),ue=t("code",null,"3+",-1),fe={style:{"text-align":"left"}},ge=t("td",{style:{"text-align":"center"}},"310",-1),me={style:{"text-align":"left"}},pe={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},ye=t("td",{style:{"text-align":"center"}},null,-1),xe={style:{"text-align":"left"}},be=t("code",null,"深度优先搜索",-1),ke=t("code",null,"广度优先搜索",-1),He=t("code",null,"图",-1),Ie=t("code",null,"1+",-1),Me={style:{"text-align":"left"}},ve=t("td",{style:{"text-align":"center"}},"329",-1),we={style:{"text-align":"left"}},qe={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},ze=t("td",{style:{"text-align":"center"}},null,-1),Le={style:{"text-align":"left"}},Ce=t("code",null,"深度优先搜索",-1),Ee=t("code",null,"广度优先搜索",-1),Ve=t("code",null,"图",-1),je=t("code",null,"5+",-1),Ne={style:{"text-align":"left"}},Oe=t("td",{style:{"text-align":"center"}},"444",-1),Pe={style:{"text-align":"left"}},Be={href:"https://leetcode.com/problems/sequence-reconstruction",target:"_blank",rel:"noopener noreferrer"},Te=t("td",{style:{"text-align":"center"}},null,-1),Ae={style:{"text-align":"left"}},Je=t("code",null,"图",-1),Re=t("code",null,"拓扑排序",-1),De=t("code",null,"数组",-1),Fe={style:{"text-align":"left"}},Ge=t("td",{style:{"text-align":"center"}},"631",-1),Qe={style:{"text-align":"left"}},Se={href:"https://leetcode.com/problems/design-excel-sum-formula",target:"_blank",rel:"noopener noreferrer"},We=t("td",{style:{"text-align":"center"}},null,-1),Xe={style:{"text-align":"left"}},Ze=t("code",null,"图",-1),Ke=t("code",null,"设计",-1),Ue=t("code",null,"拓扑排序",-1),Ye=t("code",null,"2+",-1),$e={style:{"text-align":"left"}},to=t("td",{style:{"text-align":"center"}},"802",-1),eo={style:{"text-align":"left"}},oo={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},lo=t("td",{style:{"text-align":"center"}},null,-1),no={style:{"text-align":"left"}},so=t("code",null,"深度优先搜索",-1),co=t("code",null,"广度优先搜索",-1),_o=t("code",null,"图",-1),io=t("code",null,"1+",-1),ao={style:{"text-align":"left"}},ho=t("td",{style:{"text-align":"center"}},"851",-1),ro={style:{"text-align":"left"}},uo={href:"https://leetcode.com/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},fo=t("td",{style:{"text-align":"center"}},null,-1),go={style:{"text-align":"left"}},mo=t("code",null,"深度优先搜索",-1),po=t("code",null,"图",-1),yo=t("code",null,"拓扑排序",-1),xo=t("code",null,"1+",-1),bo={style:{"text-align":"left"}},ko=t("td",{style:{"text-align":"center"}},"913",-1),Ho={style:{"text-align":"left"}},Io={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},Mo=t("td",{style:{"text-align":"center"}},null,-1),vo={style:{"text-align":"left"}},wo=t("code",null,"图",-1),qo=t("code",null,"拓扑排序",-1),zo=t("code",null,"记忆化搜索",-1),Lo=t("code",null,"3+",-1),Co={style:{"text-align":"left"}},Eo=t("td",{style:{"text-align":"center"}},"1059",-1),Vo={style:{"text-align":"left"}},jo={href:"https://leetcode.com/problems/all-paths-from-source-lead-to-destination",target:"_blank",rel:"noopener noreferrer"},No=t("td",{style:{"text-align":"center"}},null,-1),Oo={style:{"text-align":"left"}},Po=t("code",null,"图",-1),Bo=t("code",null,"拓扑排序",-1),To={style:{"text-align":"left"}},Ao=t("td",{style:{"text-align":"center"}},"1136",-1),Jo={style:{"text-align":"left"}},Ro={href:"https://leetcode.com/problems/parallel-courses",target:"_blank",rel:"noopener noreferrer"},Do=t("td",{style:{"text-align":"center"}},null,-1),Fo={style:{"text-align":"left"}},Go=t("code",null,"图",-1),Qo=t("code",null,"拓扑排序",-1),So={style:{"text-align":"left"}},Wo=t("td",{style:{"text-align":"center"}},"1203",-1),Xo={style:{"text-align":"left"}},Zo={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},Ko=t("td",{style:{"text-align":"center"}},null,-1),Uo={style:{"text-align":"left"}},Yo=t("code",null,"深度优先搜索",-1),$o=t("code",null,"广度优先搜索",-1),tl=t("code",null,"图",-1),el=t("code",null,"1+",-1),ol={style:{"text-align":"left"}},ll=t("td",{style:{"text-align":"center"}},"1245",-1),nl={style:{"text-align":"left"}},dl={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},sl=t("td",{style:{"text-align":"center"}},null,-1),cl={style:{"text-align":"left"}},_l=t("code",null,"树",-1),il=t("code",null,"深度优先搜索",-1),al=t("code",null,"广度优先搜索",-1),hl=t("code",null,"2+",-1),rl={style:{"text-align":"left"}},ul=t("td",{style:{"text-align":"center"}},"1462",-1),fl={style:{"text-align":"left"}},gl={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},ml=t("td",{style:{"text-align":"center"}},null,-1),pl={style:{"text-align":"left"}},yl=t("code",null,"深度优先搜索",-1),xl=t("code",null,"广度优先搜索",-1),bl=t("code",null,"图",-1),kl=t("code",null,"1+",-1),Hl={style:{"text-align":"left"}},Il=t("td",{style:{"text-align":"center"}},"1591",-1),Ml={style:{"text-align":"left"}},vl={href:"https://leetcode.com/problems/strange-printer-ii",target:"_blank",rel:"noopener noreferrer"},wl=t("td",{style:{"text-align":"center"}},null,-1),ql={style:{"text-align":"left"}},zl=t("code",null,"图",-1),Ll=t("code",null,"拓扑排序",-1),Cl=t("code",null,"数组",-1),El=t("code",null,"1+",-1),Vl={style:{"text-align":"left"}},jl=t("td",{style:{"text-align":"center"}},"1632",-1),Nl={style:{"text-align":"left"}},Ol={href:"https://leetcode.com/problems/rank-transform-of-a-matrix",target:"_blank",rel:"noopener noreferrer"},Pl=t("td",{style:{"text-align":"center"}},null,-1),Bl={style:{"text-align":"left"}},Tl=t("code",null,"并查集",-1),Al=t("code",null,"图",-1),Jl=t("code",null,"拓扑排序",-1),Rl=t("code",null,"3+",-1),Dl={style:{"text-align":"left"}},Fl=t("td",{style:{"text-align":"center"}},"1728",-1),Gl={style:{"text-align":"left"}},Ql={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},Sl=t("td",{style:{"text-align":"center"}},null,-1),Wl={style:{"text-align":"left"}},Xl=t("code",null,"图",-1),Zl=t("code",null,"拓扑排序",-1),Kl=t("code",null,"记忆化搜索",-1),Ul=t("code",null,"5+",-1),Yl={style:{"text-align":"left"}},$l=t("td",{style:{"text-align":"center"}},"1786",-1),tn={style:{"text-align":"left"}},en={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},on=t("td",{style:{"text-align":"center"}},null,-1),ln={style:{"text-align":"left"}},nn=t("code",null,"图",-1),dn=t("code",null,"拓扑排序",-1),sn=t("code",null,"动态规划",-1),cn=t("code",null,"2+",-1),_n={style:{"text-align":"left"}},an=t("td",{style:{"text-align":"center"}},"1857",-1),hn={style:{"text-align":"left"}},rn={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},un=t("td",{style:{"text-align":"center"}},null,-1),fn={style:{"text-align":"left"}},gn=t("code",null,"图",-1),mn=t("code",null,"拓扑排序",-1),pn=t("code",null,"记忆化搜索",-1),yn=t("code",null,"3+",-1),xn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"1916",-1),kn={style:{"text-align":"left"}},Hn={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},In=t("td",{style:{"text-align":"center"}},null,-1),Mn={style:{"text-align":"left"}},vn=t("code",null,"树",-1),wn=t("code",null,"图",-1),qn=t("code",null,"拓扑排序",-1),zn=t("code",null,"3+",-1),Ln={style:{"text-align":"left"}},Cn=t("td",{style:{"text-align":"center"}},"1976",-1),En={style:{"text-align":"left"}},Vn={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},jn=t("td",{style:{"text-align":"center"}},null,-1),Nn={style:{"text-align":"left"}},On=t("code",null,"图",-1),Pn=t("code",null,"拓扑排序",-1),Bn=t("code",null,"动态规划",-1),Tn=t("code",null,"1+",-1),An={style:{"text-align":"left"}},Jn=t("td",{style:{"text-align":"center"}},"2050",-1),Rn={style:{"text-align":"left"}},Dn={href:"https://leetcode.com/problems/parallel-courses-iii",target:"_blank",rel:"noopener noreferrer"},Fn=t("td",{style:{"text-align":"center"}},null,-1),Gn={style:{"text-align":"left"}},Qn=t("code",null,"图",-1),Sn=t("code",null,"拓扑排序",-1),Wn=t("code",null,"数组",-1),Xn=t("code",null,"1+",-1),Zn={style:{"text-align":"left"}},Kn=t("td",{style:{"text-align":"center"}},"2115",-1),Un={style:{"text-align":"left"}},Yn={href:"https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies",target:"_blank",rel:"noopener noreferrer"},$n=t("td",{style:{"text-align":"center"}},null,-1),td={style:{"text-align":"left"}},ed=t("code",null,"图",-1),od=t("code",null,"拓扑排序",-1),ld=t("code",null,"数组",-1),nd=t("code",null,"2+",-1),dd={style:{"text-align":"left"}},sd=t("td",{style:{"text-align":"center"}},"2127",-1),cd={style:{"text-align":"left"}},_d={href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},id=t("td",{style:{"text-align":"center"}},null,-1),ad={style:{"text-align":"left"}},hd=t("code",null,"深度优先搜索",-1),rd=t("code",null,"图",-1),ud=t("code",null,"拓扑排序",-1),fd={style:{"text-align":"left"}},gd=t("td",{style:{"text-align":"center"}},"2192",-1),md={style:{"text-align":"left"}},pd={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},yd=t("td",{style:{"text-align":"center"}},null,-1),xd={style:{"text-align":"left"}},bd=t("code",null,"深度优先搜索",-1),kd=t("code",null,"广度优先搜索",-1),Hd=t("code",null,"图",-1),Id=t("code",null,"1+",-1),Md={style:{"text-align":"left"}},vd=t("td",{style:{"text-align":"center"}},"2246",-1),wd={style:{"text-align":"left"}},qd={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},zd=t("td",{style:{"text-align":"center"}},null,-1),Ld={style:{"text-align":"left"}},Cd=t("code",null,"树",-1),Ed=t("code",null,"深度优先搜索",-1),Vd=t("code",null,"图",-1),jd=t("code",null,"3+",-1),Nd={style:{"text-align":"left"}},Od=t("td",{style:{"text-align":"center"}},"2328",-1),Pd={style:{"text-align":"left"}},Bd={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Td=t("td",{style:{"text-align":"center"}},null,-1),Ad={style:{"text-align":"left"}},Jd=t("code",null,"深度优先搜索",-1),Rd=t("code",null,"广度优先搜索",-1),Dd=t("code",null,"图",-1),Fd=t("code",null,"5+",-1),Gd={style:{"text-align":"left"}},Qd=t("td",{style:{"text-align":"center"}},"2360",-1),Sd={style:{"text-align":"left"}},Wd={href:"https://leetcode.com/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},Xd=t("td",{style:{"text-align":"center"}},null,-1),Zd={style:{"text-align":"left"}},Kd=t("code",null,"深度优先搜索",-1),Ud=t("code",null,"图",-1),Yd=t("code",null,"拓扑排序",-1),$d={style:{"text-align":"left"}},ts=t("td",{style:{"text-align":"center"}},"2371",-1),es={style:{"text-align":"left"}},os={href:"https://leetcode.com/problems/minimize-maximum-value-in-a-grid",target:"_blank",rel:"noopener noreferrer"},ls=t("td",{style:{"text-align":"center"}},null,-1),ns={style:{"text-align":"left"}},ds=t("code",null,"并查集",-1),ss=t("code",null,"图",-1),cs=t("code",null,"拓扑排序",-1),_s=t("code",null,"3+",-1),is={style:{"text-align":"left"}},as=t("td",{style:{"text-align":"center"}},"2392",-1),hs={style:{"text-align":"left"}},rs={href:"https://leetcode.com/problems/build-a-matrix-with-conditions",target:"_blank",rel:"noopener noreferrer"},us=t("td",{style:{"text-align":"center"}},null,-1),fs={style:{"text-align":"left"}},gs=t("code",null,"图",-1),ms=t("code",null,"拓扑排序",-1),ps=t("code",null,"数组",-1),ys=t("code",null,"1+",-1),xs={style:{"text-align":"left"}},bs=t("td",{style:{"text-align":"center"}},"2603",-1),ks={style:{"text-align":"left"}},Hs={href:"https://leetcode.com/problems/collect-coins-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Is=t("td",{style:{"text-align":"center"}},null,-1),Ms={style:{"text-align":"left"}},vs=t("code",null,"树",-1),ws=t("code",null,"图",-1),qs=t("code",null,"拓扑排序",-1),zs=t("code",null,"1+",-1),Ls={style:{"text-align":"left"}},Cs=t("td",{style:{"text-align":"center"}},"LCP 21",-1),Es={style:{"text-align":"left"}},Vs={href:"https://leetcode.cn/problems/Za25hA",target:"_blank",rel:"noopener noreferrer"},js=t("td",{style:{"text-align":"center"}},null,-1),Ns={style:{"text-align":"left"}},Os=t("code",null,"深度优先搜索",-1),Ps=t("code",null,"广度优先搜索",-1),Bs=t("code",null,"图",-1),Ts=t("code",null,"1+",-1),As={style:{"text-align":"left"}},Js=t("td",{style:{"text-align":"center"}},"LCP 63",-1),Rs={style:{"text-align":"left"}},Ds={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},Fs=t("td",{style:{"text-align":"center"}},null,-1),Gs={style:{"text-align":"left"}},Qs=t("code",null,"深度优先搜索",-1),Ss=t("code",null,"广度优先搜索",-1),Ws=t("code",null,"图",-1),Xs=t("code",null,"5+",-1),Zs={style:{"text-align":"left"}},Ks=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),Us={style:{"text-align":"left"}},Ys={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},$s=t("td",{style:{"text-align":"center"}},null,-1),tc={style:{"text-align":"left"}},ec=t("code",null,"深度优先搜索",-1),oc=t("code",null,"广度优先搜索",-1),lc=t("code",null,"图",-1),nc=t("code",null,"5+",-1),dc={style:{"text-align":"left"}},sc=t("td",{style:{"text-align":"center"}},"剑指 Offer II 113",-1),cc={style:{"text-align":"left"}},_c={href:"https://leetcode.cn/problems/QA2IGt",target:"_blank",rel:"noopener noreferrer"},ic=t("td",{style:{"text-align":"center"}},null,-1),ac={style:{"text-align":"left"}},hc=t("code",null,"深度优先搜索",-1),rc=t("code",null,"广度优先搜索",-1),uc=t("code",null,"图",-1),fc=t("code",null,"1+",-1),gc={style:{"text-align":"left"}},mc=t("td",{style:{"text-align":"center"}},"剑指 Offer II 114",-1),pc={style:{"text-align":"left"}},yc={href:"https://leetcode.cn/problems/Jf1JuT",target:"_blank",rel:"noopener noreferrer"},xc=t("td",{style:{"text-align":"center"}},null,-1),bc={style:{"text-align":"left"}},kc=t("code",null,"深度优先搜索",-1),Hc=t("code",null,"广度优先搜索",-1),Ic=t("code",null,"图",-1),Mc=t("code",null,"3+",-1),vc={style:{"text-align":"left"}},wc=t("td",{style:{"text-align":"center"}},"剑指 Offer II 115",-1),qc={style:{"text-align":"left"}},zc={href:"https://leetcode.cn/problems/ur2n8P",target:"_blank",rel:"noopener noreferrer"},Lc=t("td",{style:{"text-align":"center"}},null,-1),Cc={style:{"text-align":"left"}},Ec=t("code",null,"图",-1),Vc=t("code",null,"拓扑排序",-1),jc=t("code",null,"数组",-1),Nc={style:{"text-align":"left"}};function Oc(Pc,Bc){const n=c("RouterLink"),d=c("ExternalLinkIcon"),s=c("font");return i(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[N]),_:1}),o(),O,o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[G]),_:1})]),Q,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),pt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[yt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Nt]),_:1})])]),Ot,h(" prettier-ignore "),t("table",null,[Pt,t("tbody",null,[t("tr",null,[Bt,t("td",Tt,[t("a",At,[o("课程表"),e(d)])]),t("td",Jt,[t("a",Rt,[o("[✓]"),e(d)])]),t("td",Dt,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Qt]),_:1}),o(),St]),t("td",Wt,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xt,t("td",Zt,[t("a",Kt,[o("课程表 II"),e(d)])]),t("td",Ut,[t("a",Yt,[o("[✓]"),e(d)])]),t("td",$t,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[te]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ee]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[oe]),_:1}),o(),le]),t("td",ne,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[de,t("td",se,[t("a",ce,[o("火星词典"),e(d)])]),_e,t("td",ie,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[he]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[re]),_:1}),o(),ue]),t("td",fe,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ge,t("td",me,[t("a",pe,[o("最小高度树"),e(d)])]),ye,t("td",xe,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[be]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ke]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[He]),_:1}),o(),Ie]),t("td",Me,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ve,t("td",we,[t("a",qe,[o("矩阵中的最长递增路径"),e(d)])]),ze,t("td",Le,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ce]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Ee]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Ve]),_:1}),o(),je]),t("td",Ne,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Oe,t("td",Pe,[t("a",Be,[o("序列重建"),e(d)])]),Te,t("td",Ae,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Je]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[Re]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[De]),_:1})]),t("td",Fe,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ge,t("td",Qe,[t("a",Se,[o("设计 Excel 求和公式"),e(d)])]),We,t("td",Xe,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Ze]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Ke]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[Ue]),_:1}),o(),Ye]),t("td",$e,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[to,t("td",eo,[t("a",oo,[o("找到最终的安全状态"),e(d)])]),lo,t("td",no,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[so]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[co]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[_o]),_:1}),o(),io]),t("td",ao,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ho,t("td",ro,[t("a",uo,[o("喧闹和富有"),e(d)])]),fo,t("td",go,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[mo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[po]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[yo]),_:1}),o(),xo]),t("td",bo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ko,t("td",Ho,[t("a",Io,[o("猫和老鼠"),e(d)])]),Mo,t("td",vo,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[wo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[qo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[zo]),_:1}),o(),Lo]),t("td",Co,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Eo,t("td",Vo,[t("a",jo,[o("从始点到终点的所有路径"),e(d)])]),No,t("td",Oo,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Po]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[Bo]),_:1})]),t("td",To,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ao,t("td",Jo,[t("a",Ro,[o("并行课程"),e(d)])]),Do,t("td",Fo,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Go]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[Qo]),_:1})]),t("td",So,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wo,t("td",Xo,[t("a",Zo,[o("项目管理"),e(d)])]),Ko,t("td",Uo,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Yo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[$o]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[tl]),_:1}),o(),el]),t("td",ol,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ll,t("td",nl,[t("a",dl,[o("树的直径"),e(d)])]),sl,t("td",cl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[_l]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[il]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[al]),_:1}),o(),hl]),t("td",rl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ul,t("td",fl,[t("a",gl,[o("课程表 IV"),e(d)])]),ml,t("td",pl,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[yl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[xl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[bl]),_:1}),o(),kl]),t("td",Hl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Il,t("td",Ml,[t("a",vl,[o("奇怪的打印机 II"),e(d)])]),wl,t("td",ql,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[zl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[Ll]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Cl]),_:1}),o(),El]),t("td",Vl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[jl,t("td",Nl,[t("a",Ol,[o("矩阵转换后的秩"),e(d)])]),Pl,t("td",Bl,[e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[Tl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Al]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[Jl]),_:1}),o(),Rl]),t("td",Dl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Fl,t("td",Gl,[t("a",Ql,[o("猫和老鼠 II"),e(d)])]),Sl,t("td",Wl,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Xl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[Zl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[Kl]),_:1}),o(),Ul]),t("td",Yl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$l,t("td",tn,[t("a",en,[o("从第一个节点出发到最后一个节点的受限路径数"),e(d)])]),on,t("td",ln,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[nn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[dn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[sn]),_:1}),o(),cn]),t("td",_n,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[an,t("td",hn,[t("a",rn,[o("有向图中最大颜色值"),e(d)])]),un,t("td",fn,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[gn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[mn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[pn]),_:1}),o(),yn]),t("td",xn,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bn,t("td",kn,[t("a",Hn,[o("统计为蚁群构筑房间的不同顺序"),e(d)])]),In,t("td",Mn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[vn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[wn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[qn]),_:1}),o(),zn]),t("td",Ln,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Cn,t("td",En,[t("a",Vn,[o("到达目的地的方案数"),e(d)])]),jn,t("td",Nn,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[On]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[Pn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Bn]),_:1}),o(),Tn]),t("td",An,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Jn,t("td",Rn,[t("a",Dn,[o("并行课程 III"),e(d)])]),Fn,t("td",Gn,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Qn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[Sn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Wn]),_:1}),o(),Xn]),t("td",Zn,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Kn,t("td",Un,[t("a",Yn,[o("从给定原材料中找到所有可以做出的菜"),e(d)])]),$n,t("td",td,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[ed]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[od]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ld]),_:1}),o(),nd]),t("td",dd,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[sd,t("td",cd,[t("a",_d,[o("参加会议的最多员工数"),e(d)])]),id,t("td",ad,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[hd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[rd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[ud]),_:1})]),t("td",fd,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gd,t("td",md,[t("a",pd,[o("有向无环图中一个节点的所有祖先"),e(d)])]),yd,t("td",xd,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[bd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[kd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Hd]),_:1}),o(),Id]),t("td",Md,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[vd,t("td",wd,[t("a",qd,[o("相邻字符不同的最长路径"),e(d)])]),zd,t("td",Ld,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Cd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ed]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Vd]),_:1}),o(),jd]),t("td",Nd,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Od,t("td",Pd,[t("a",Bd,[o("网格图中递增路径的数目"),e(d)])]),Td,t("td",Ad,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Jd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Rd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Dd]),_:1}),o(),Fd]),t("td",Gd,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Qd,t("td",Sd,[t("a",Wd,[o("图中的最长环"),e(d)])]),Xd,t("td",Zd,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Kd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Ud]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[Yd]),_:1})]),t("td",$d,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ts,t("td",es,[t("a",os,[o("最小化网格中的最大值"),e(d)])]),ls,t("td",ns,[e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[ds]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[ss]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[cs]),_:1}),o(),_s]),t("td",is,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[as,t("td",hs,[t("a",rs,[o("给定条件下构造矩阵"),e(d)])]),us,t("td",fs,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[gs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[ms]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ps]),_:1}),o(),ys]),t("td",xs,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bs,t("td",ks,[t("a",Hs,[o("收集树中金币"),e(d)])]),Is,t("td",Ms,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[vs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[ws]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[qs]),_:1}),o(),zs]),t("td",Ls,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Cs,t("td",Es,[t("a",Vs,[o("追逐游戏"),e(d)])]),js,t("td",Ns,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Os]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Ps]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Bs]),_:1}),o(),Ts]),t("td",As,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Js,t("td",Rs,[t("a",Ds,[o("弹珠游戏"),e(d)])]),Fs,t("td",Gs,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Qs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Ss]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Ws]),_:1}),o(),Xs]),t("td",Zs,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ks,t("td",Us,[t("a",Ys,[o("最长递增路径"),e(d)])]),$s,t("td",tc,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ec]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[oc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[lc]),_:1}),o(),nc]),t("td",dc,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[sc,t("td",cc,[t("a",_c,[o("课程顺序"),e(d)])]),ic,t("td",ac,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[hc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[rc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[uc]),_:1}),o(),fc]),t("td",gc,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[mc,t("td",pc,[t("a",yc,[o("外星文字典"),e(d)])]),xc,t("td",bc,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[kc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Hc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Ic]),_:1}),o(),Mc]),t("td",vc,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[wc,t("td",qc,[t("a",zc,[o("重建序列"),e(d)])]),Lc,t("td",Cc,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Ec]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[Vc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[jc]),_:1})]),t("td",Nc,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const Ac=_(r,[["render",Oc],["__file","topological-sort.html.vue"]]);export{Ac as default};
