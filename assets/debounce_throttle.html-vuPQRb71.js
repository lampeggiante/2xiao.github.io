const e=JSON.parse('{"key":"v-1968b758","path":"/interview/js/debounce_throttle.html","title":"如何实现防抖和节流？","lang":"zh-CN","frontmatter":{"description":"如何实现防抖和节流？ 一、概述 防抖（Debounce）与节流（Throttle）是两种常见的性能优化手段，旨在限制高频率事件的执行次数，避免资源浪费，提高前端性能。","head":[["meta",{"property":"og:url","content":"https://2xiao.github.io/interview/js/debounce_throttle.html"}],["meta",{"property":"og:site_name","content":"LeetCode-JS"}],["meta",{"property":"og:title","content":"如何实现防抖和节流？"}],["meta",{"property":"og:description","content":"如何实现防抖和节流？ 一、概述 防抖（Debounce）与节流（Throttle）是两种常见的性能优化手段，旨在限制高频率事件的执行次数，避免资源浪费，提高前端性能。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-20T16:29:32.000Z"}],["meta",{"property":"article:author","content":"2xiao"}],["meta",{"property":"article:modified_time","content":"2024-11-20T16:29:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何实现防抖和节流？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-20T16:29:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"2xiao\\",\\"url\\":\\"https://github.com/2xiao\\"}]}"]]},"headers":[{"level":2,"title":"一、概述","slug":"一、概述","link":"#一、概述","children":[]},{"level":2,"title":"二、节流的实现","slug":"二、节流的实现","link":"#二、节流的实现","children":[{"level":3,"title":"时间戳实现","slug":"时间戳实现","link":"#时间戳实现","children":[]},{"level":3,"title":"定时器实现","slug":"定时器实现","link":"#定时器实现","children":[]},{"level":3,"title":"综合实现","slug":"综合实现","link":"#综合实现","children":[]}]},{"level":2,"title":"三、防抖的实现","slug":"三、防抖的实现","link":"#三、防抖的实现","children":[{"level":3,"title":"基础实现","slug":"基础实现","link":"#基础实现","children":[]},{"level":3,"title":"支持立即执行的实现","slug":"支持立即执行的实现","link":"#支持立即执行的实现","children":[]}]},{"level":2,"title":"四、区别与对比","slug":"四、区别与对比","link":"#四、区别与对比","children":[]},{"level":2,"title":"五、应用场景","slug":"五、应用场景","link":"#五、应用场景","children":[{"level":3,"title":"防抖适用场景","slug":"防抖适用场景","link":"#防抖适用场景","children":[]},{"level":3,"title":"节流适用场景","slug":"节流适用场景","link":"#节流适用场景","children":[]}]}],"git":{"createdTime":1732116041000,"updatedTime":1732120172000,"contributors":[{"name":"2xiao","email":"827574297wxxtb@sina.com","commits":2}]},"readingTime":{"minutes":3.75,"words":1126},"filePathRelative":"interview/js/debounce_throttle.md","localizedDate":"2024年11月20日","excerpt":"<h1> 如何实现防抖和节流？</h1>\\n<h2> 一、概述</h2>\\n<p>防抖（Debounce）与节流（Throttle）是两种常见的性能优化手段，旨在限制高频率事件的执行次数，避免资源浪费，提高前端性能。</p>","autoDesc":true}');export{e as data};
