import{_ as c,r as _,o as i,c as r,a as t,d as e,w as o,b as l,f as a}from"./app-qrCIIj1V.js";const h={},u=t("h1",{id:"二叉树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#二叉树","aria-hidden":"true"},"#"),l(" 二叉树")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),j=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),E=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),O=t("code",null,"树",-1),q=t("span",{class:"blue"},"二叉树",-1),H=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),C=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),B=t("code",null,"强连通分量",-1),V=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),U=t("code",null,"并查集",-1),R=t("code",null,"字典树",-1),W=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),Y=t("code",null,"后缀数组",-1),Q=t("p",null,[t("strong",null,"算法")],-1),S=t("code",null,"枚举",-1),D=t("code",null,"递归",-1),Z=t("code",null,"分治",-1),A=t("code",null,"回溯",-1),F=t("code",null,"贪心",-1),J=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),st=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),jt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),Et=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),Ot=t("code",null,"设计",-1),qt=t("code",null,"数据流",-1),Ht=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Ct=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Bt=t("td",{style:{"text-align":"center"}},"94",-1),Vt={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},Rt={style:{"text-align":"left"}},Wt=t("code",null,"栈",-1),Gt=t("code",null,"树",-1),Yt=t("code",null,"深度优先搜索",-1),Qt=t("code",null,"1+",-1),St={style:{"text-align":"left"}},Dt=t("td",{style:{"text-align":"center"}},"95",-1),Zt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},Ft={style:{"text-align":"center"}},Jt={style:{"text-align":"left"}},Xt=t("code",null,"树",-1),$t=t("code",null,"二叉搜索树",-1),te=t("code",null,"动态规划",-1),ee=t("code",null,"2+",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"96",-1),se={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},de={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},ce=t("code",null,"树",-1),ie=t("code",null,"二叉搜索树",-1),re=t("code",null,"数学",-1),ae=t("code",null,"2+",-1),he={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"98",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},me={style:{"text-align":"center"}},ye={style:{"text-align":"left"}},xe=t("code",null,"树",-1),be=t("code",null,"深度优先搜索",-1),pe=t("code",null,"二叉搜索树",-1),je=t("code",null,"1+",-1),ke={style:{"text-align":"left"}},Me=t("td",{style:{"text-align":"center"}},"99",-1),ve={style:{"text-align":"left"}},Ie={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ee={style:{"text-align":"center"}},we={style:{"text-align":"left"}},ze=t("code",null,"树",-1),Oe=t("code",null,"深度优先搜索",-1),qe=t("code",null,"二叉搜索树",-1),He=t("code",null,"1+",-1),Le={style:{"text-align":"left"}},Ce=t("td",{style:{"text-align":"center"}},"100",-1),Ne={style:{"text-align":"left"}},Pe={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Ke={style:{"text-align":"center"}},Be={style:{"text-align":"left"}},Ve=t("code",null,"树",-1),Te=t("code",null,"深度优先搜索",-1),Ue=t("code",null,"广度优先搜索",-1),Re=t("code",null,"1+",-1),We={style:{"text-align":"left"}},Ge=t("td",{style:{"text-align":"center"}},"101",-1),Ye={style:{"text-align":"left"}},Qe={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},Se={style:{"text-align":"center"}},De={style:{"text-align":"left"}},Ze=t("code",null,"树",-1),Ae=t("code",null,"深度优先搜索",-1),Fe=t("code",null,"广度优先搜索",-1),Je=t("code",null,"1+",-1),Xe={style:{"text-align":"left"}},$e=t("td",{style:{"text-align":"center"}},"102",-1),tl={style:{"text-align":"left"}},el={href:"https://leetcode.com/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},ll={style:{"text-align":"center"}},ol={style:{"text-align":"left"}},sl=t("code",null,"树",-1),nl=t("code",null,"广度优先搜索",-1),dl=t("code",null,"二叉树",-1),_l={style:{"text-align":"left"}},cl=t("td",{style:{"text-align":"center"}},"103",-1),il={style:{"text-align":"left"}},rl={href:"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},al={style:{"text-align":"center"}},hl={style:{"text-align":"left"}},ul=t("code",null,"树",-1),fl=t("code",null,"广度优先搜索",-1),gl=t("code",null,"二叉树",-1),ml={style:{"text-align":"left"}},yl=t("td",{style:{"text-align":"center"}},"104",-1),xl={style:{"text-align":"left"}},bl={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},pl={style:{"text-align":"center"}},jl={style:{"text-align":"left"}},kl=t("code",null,"树",-1),Ml=t("code",null,"深度优先搜索",-1),vl=t("code",null,"广度优先搜索",-1),Il=t("code",null,"1+",-1),El={style:{"text-align":"left"}},wl=t("td",{style:{"text-align":"center"}},"105",-1),zl={style:{"text-align":"left"}},Ol={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},ql={style:{"text-align":"center"}},Hl={style:{"text-align":"left"}},Ll=t("code",null,"树",-1),Cl=t("code",null,"数组",-1),Nl=t("code",null,"哈希表",-1),Pl=t("code",null,"2+",-1),Kl={style:{"text-align":"left"}},Bl=t("td",{style:{"text-align":"center"}},"106",-1),Vl={style:{"text-align":"left"}},Tl={href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ul={style:{"text-align":"center"}},Rl={style:{"text-align":"left"}},Wl=t("code",null,"树",-1),Gl=t("code",null,"数组",-1),Yl=t("code",null,"哈希表",-1),Ql=t("code",null,"2+",-1),Sl={style:{"text-align":"left"}},Dl=t("td",{style:{"text-align":"center"}},"107",-1),Zl={style:{"text-align":"left"}},Al={href:"https://leetcode.com/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},Fl={style:{"text-align":"center"}},Jl={style:{"text-align":"left"}},Xl=t("code",null,"树",-1),$l=t("code",null,"广度优先搜索",-1),to=t("code",null,"二叉树",-1),eo={style:{"text-align":"left"}},lo=t("td",{style:{"text-align":"center"}},"108",-1),oo={style:{"text-align":"left"}},so={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},no={style:{"text-align":"center"}},_o={style:{"text-align":"left"}},co=t("code",null,"树",-1),io=t("code",null,"二叉搜索树",-1),ro=t("code",null,"数组",-1),ao=t("code",null,"2+",-1),ho={style:{"text-align":"left"}},uo=t("td",{style:{"text-align":"center"}},"109",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},mo={style:{"text-align":"center"}},yo={style:{"text-align":"left"}},xo=t("code",null,"树",-1),bo=t("code",null,"二叉搜索树",-1),po=t("code",null,"链表",-1),jo=t("code",null,"2+",-1),ko={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"center"}},"110",-1),vo={style:{"text-align":"left"}},Io={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},Eo={style:{"text-align":"center"}},wo={style:{"text-align":"left"}},zo=t("code",null,"树",-1),Oo=t("code",null,"深度优先搜索",-1),qo=t("code",null,"二叉树",-1),Ho={style:{"text-align":"left"}},Lo=t("td",{style:{"text-align":"center"}},"111",-1),Co={style:{"text-align":"left"}},No={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Po={style:{"text-align":"center"}},Ko={style:{"text-align":"left"}},Bo=t("code",null,"树",-1),Vo=t("code",null,"深度优先搜索",-1),To=t("code",null,"广度优先搜索",-1),Uo=t("code",null,"1+",-1),Ro={style:{"text-align":"left"}},Wo=t("td",{style:{"text-align":"center"}},"112",-1),Go={style:{"text-align":"left"}},Yo={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Qo={style:{"text-align":"center"}},So={style:{"text-align":"left"}},Do=t("code",null,"树",-1),Zo=t("code",null,"深度优先搜索",-1),Ao=t("code",null,"广度优先搜索",-1),Fo=t("code",null,"1+",-1),Jo={style:{"text-align":"left"}},Xo=t("td",{style:{"text-align":"center"}},"113",-1),$o={style:{"text-align":"left"}},ts={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},es={style:{"text-align":"center"}},ls={style:{"text-align":"left"}},os=t("code",null,"树",-1),ss=t("code",null,"深度优先搜索",-1),ns=t("code",null,"回溯",-1),ds=t("code",null,"1+",-1),_s={style:{"text-align":"left"}},cs=t("td",{style:{"text-align":"center"}},"114",-1),is={style:{"text-align":"left"}},rs={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},as={style:{"text-align":"center"}},hs={style:{"text-align":"left"}},us=t("code",null,"栈",-1),fs=t("code",null,"树",-1),gs=t("code",null,"深度优先搜索",-1),ms=t("code",null,"2+",-1),ys={style:{"text-align":"left"}},xs=t("td",{style:{"text-align":"center"}},"116",-1),bs={style:{"text-align":"left"}},ps={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},js={style:{"text-align":"center"}},ks={style:{"text-align":"left"}},Ms=t("code",null,"树",-1),vs=t("code",null,"深度优先搜索",-1),Is=t("code",null,"广度优先搜索",-1),Es=t("code",null,"2+",-1),ws={style:{"text-align":"left"}},zs=t("td",{style:{"text-align":"center"}},"117",-1),Os={style:{"text-align":"left"}},qs={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},Hs={style:{"text-align":"center"}},Ls={style:{"text-align":"left"}},Cs=t("code",null,"树",-1),Ns=t("code",null,"深度优先搜索",-1),Ps=t("code",null,"广度优先搜索",-1),Ks=t("code",null,"2+",-1),Bs={style:{"text-align":"left"}},Vs=t("td",{style:{"text-align":"center"}},"124",-1),Ts={style:{"text-align":"left"}},Us={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Rs={style:{"text-align":"center"}},Ws={style:{"text-align":"left"}},Gs=t("code",null,"树",-1),Ys=t("code",null,"深度优先搜索",-1),Qs=t("code",null,"动态规划",-1),Ss=t("code",null,"1+",-1),Ds={style:{"text-align":"left"}},Zs=t("td",{style:{"text-align":"center"}},"129",-1),As={style:{"text-align":"left"}},Fs={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},Js={style:{"text-align":"center"}},Xs={style:{"text-align":"left"}},$s=t("code",null,"树",-1),tn=t("code",null,"深度优先搜索",-1),en=t("code",null,"二叉树",-1),ln={style:{"text-align":"left"}},on=t("td",{style:{"text-align":"center"}},"144",-1),sn={style:{"text-align":"left"}},nn={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},dn={style:{"text-align":"center"}},_n={style:{"text-align":"left"}},cn=t("code",null,"栈",-1),rn=t("code",null,"树",-1),an=t("code",null,"深度优先搜索",-1),hn=t("code",null,"1+",-1),un={style:{"text-align":"left"}},fn=t("td",{style:{"text-align":"center"}},"145",-1),gn={style:{"text-align":"left"}},mn={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},yn={style:{"text-align":"center"}},xn={style:{"text-align":"left"}},bn=t("code",null,"栈",-1),pn=t("code",null,"树",-1),jn=t("code",null,"深度优先搜索",-1),kn=t("code",null,"1+",-1),Mn={style:{"text-align":"left"}},vn=t("td",{style:{"text-align":"center"}},"156",-1),In={style:{"text-align":"left"}},En={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},wn={style:{"text-align":"center"}},zn={style:{"text-align":"left"}},On=t("code",null,"树",-1),qn=t("code",null,"深度优先搜索",-1),Hn=t("code",null,"二叉树",-1),Ln={style:{"text-align":"left"}},Cn=t("td",{style:{"text-align":"center"}},"173",-1),Nn={style:{"text-align":"left"}},Pn={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Kn={style:{"text-align":"center"}},Bn={style:{"text-align":"left"}},Vn=t("code",null,"栈",-1),Tn=t("code",null,"树",-1),Un=t("code",null,"设计",-1),Rn=t("code",null,"3+",-1),Wn={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"199",-1),Yn={style:{"text-align":"left"}},Qn={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},Sn={style:{"text-align":"center"}},Dn={style:{"text-align":"left"}},Zn=t("code",null,"树",-1),An=t("code",null,"深度优先搜索",-1),Fn=t("code",null,"广度优先搜索",-1),Jn=t("code",null,"1+",-1),Xn={style:{"text-align":"left"}},$n=t("td",{style:{"text-align":"center"}},"222",-1),td={style:{"text-align":"left"}},ed={href:"https://leetcode.com/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},ld={style:{"text-align":"center"}},od={style:{"text-align":"left"}},sd=t("code",null,"位运算",-1),nd=t("code",null,"树",-1),dd=t("code",null,"二分查找",-1),_d=t("code",null,"1+",-1),cd={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"226",-1),rd={style:{"text-align":"left"}},ad={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},hd={style:{"text-align":"center"}},ud={style:{"text-align":"left"}},fd=t("code",null,"树",-1),gd=t("code",null,"深度优先搜索",-1),md=t("code",null,"广度优先搜索",-1),yd=t("code",null,"1+",-1),xd={style:{"text-align":"left"}},bd=t("td",{style:{"text-align":"center"}},"230",-1),pd={style:{"text-align":"left"}},jd={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},kd={style:{"text-align":"center"}},Md={style:{"text-align":"left"}},vd=t("code",null,"树",-1),Id=t("code",null,"深度优先搜索",-1),Ed=t("code",null,"二叉搜索树",-1),wd=t("code",null,"1+",-1),zd={style:{"text-align":"left"}},Od=t("td",{style:{"text-align":"center"}},"235",-1),qd={style:{"text-align":"left"}},Hd={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ld={style:{"text-align":"center"}},Cd={style:{"text-align":"left"}},Nd=t("code",null,"树",-1),Pd=t("code",null,"深度优先搜索",-1),Kd=t("code",null,"二叉搜索树",-1),Bd=t("code",null,"1+",-1),Vd={style:{"text-align":"left"}},Td=t("td",{style:{"text-align":"center"}},"236",-1),Ud={style:{"text-align":"left"}},Rd={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wd={style:{"text-align":"center"}},Gd={style:{"text-align":"left"}},Yd=t("code",null,"树",-1),Qd=t("code",null,"深度优先搜索",-1),Sd=t("code",null,"二叉树",-1),Dd={style:{"text-align":"left"}},Zd=t("td",{style:{"text-align":"center"}},"250",-1),Ad={style:{"text-align":"left"}},Fd={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},Jd=t("td",{style:{"text-align":"center"}},null,-1),Xd={style:{"text-align":"left"}},$d=t("code",null,"树",-1),t_=t("code",null,"深度优先搜索",-1),e_=t("code",null,"二叉树",-1),l_={style:{"text-align":"left"}},o_=t("td",{style:{"text-align":"center"}},"255",-1),s_={style:{"text-align":"left"}},n_={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},d_=t("td",{style:{"text-align":"center"}},null,-1),__={style:{"text-align":"left"}},c_=t("code",null,"栈",-1),i_=t("code",null,"树",-1),r_=t("code",null,"二叉搜索树",-1),a_=t("code",null,"4+",-1),h_={style:{"text-align":"left"}},u_=t("td",{style:{"text-align":"center"}},"257",-1),f_={style:{"text-align":"left"}},g_={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},m_={style:{"text-align":"center"}},y_={style:{"text-align":"left"}},x_=t("code",null,"树",-1),b_=t("code",null,"深度优先搜索",-1),p_=t("code",null,"字符串",-1),j_=t("code",null,"2+",-1),k_={style:{"text-align":"left"}},M_=t("td",{style:{"text-align":"center"}},"270",-1),v_={style:{"text-align":"left"}},I_={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},E_=t("td",{style:{"text-align":"center"}},null,-1),w_={style:{"text-align":"left"}},z_=t("code",null,"树",-1),O_=t("code",null,"深度优先搜索",-1),q_=t("code",null,"二叉搜索树",-1),H_=t("code",null,"2+",-1),L_={style:{"text-align":"left"}},C_=t("td",{style:{"text-align":"center"}},"272",-1),N_={style:{"text-align":"left"}},P_={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},K_=t("td",{style:{"text-align":"center"}},null,-1),B_={style:{"text-align":"left"}},V_=t("code",null,"栈",-1),T_=t("code",null,"树",-1),U_=t("code",null,"深度优先搜索",-1),R_=t("code",null,"4+",-1),W_={style:{"text-align":"left"}},G_=t("td",{style:{"text-align":"center"}},"285",-1),Y_={style:{"text-align":"left"}},Q_={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},S_=t("td",{style:{"text-align":"center"}},null,-1),D_={style:{"text-align":"left"}},Z_=t("code",null,"树",-1),A_=t("code",null,"深度优先搜索",-1),F_=t("code",null,"二叉搜索树",-1),J_=t("code",null,"1+",-1),X_={style:{"text-align":"left"}},$_=t("td",{style:{"text-align":"center"}},"297",-1),tc={style:{"text-align":"left"}},ec={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},lc={style:{"text-align":"center"}},oc={style:{"text-align":"left"}},sc=t("code",null,"树",-1),nc=t("code",null,"深度优先搜索",-1),dc=t("code",null,"广度优先搜索",-1),_c=t("code",null,"3+",-1),cc={style:{"text-align":"left"}},ic=t("td",{style:{"text-align":"center"}},"298",-1),rc={style:{"text-align":"left"}},ac={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},hc=t("td",{style:{"text-align":"center"}},null,-1),uc={style:{"text-align":"left"}},fc=t("code",null,"树",-1),gc=t("code",null,"深度优先搜索",-1),mc=t("code",null,"二叉树",-1),yc={style:{"text-align":"left"}},xc=t("td",{style:{"text-align":"center"}},"314",-1),bc={style:{"text-align":"left"}},pc={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},jc=t("td",{style:{"text-align":"center"}},null,-1),kc={style:{"text-align":"left"}},Mc=t("code",null,"树",-1),vc=t("code",null,"深度优先搜索",-1),Ic=t("code",null,"广度优先搜索",-1),Ec=t("code",null,"3+",-1),wc={style:{"text-align":"left"}},zc=t("td",{style:{"text-align":"center"}},"331",-1),Oc={style:{"text-align":"left"}},qc={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Hc=t("td",{style:{"text-align":"center"}},null,-1),Lc={style:{"text-align":"left"}},Cc=t("code",null,"栈",-1),Nc=t("code",null,"树",-1),Pc=t("code",null,"字符串",-1),Kc=t("code",null,"1+",-1),Bc={style:{"text-align":"left"}},Vc=t("td",{style:{"text-align":"center"}},"333",-1),Tc={style:{"text-align":"left"}},Uc={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Rc=t("td",{style:{"text-align":"center"}},null,-1),Wc={style:{"text-align":"left"}},Gc=t("code",null,"树",-1),Yc=t("code",null,"深度优先搜索",-1),Qc=t("code",null,"二叉搜索树",-1),Sc=t("code",null,"2+",-1),Dc={style:{"text-align":"left"}},Zc=t("td",{style:{"text-align":"center"}},"337",-1),Ac={style:{"text-align":"left"}},Fc={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Jc=t("td",{style:{"text-align":"center"}},null,-1),Xc={style:{"text-align":"left"}},$c=t("code",null,"树",-1),ti=t("code",null,"深度优先搜索",-1),ei=t("code",null,"动态规划",-1),li=t("code",null,"1+",-1),oi={style:{"text-align":"left"}},si=t("td",{style:{"text-align":"center"}},"366",-1),ni={style:{"text-align":"left"}},di={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},_i={style:{"text-align":"center"}},ci={style:{"text-align":"left"}},ii=t("code",null,"树",-1),ri=t("code",null,"深度优先搜索",-1),ai=t("code",null,"二叉树",-1),hi={style:{"text-align":"left"}},ui=t("td",{style:{"text-align":"center"}},"404",-1),fi={style:{"text-align":"left"}},gi={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},mi=t("td",{style:{"text-align":"center"}},null,-1),yi={style:{"text-align":"left"}},xi=t("code",null,"树",-1),bi=t("code",null,"深度优先搜索",-1),pi=t("code",null,"广度优先搜索",-1),ji=t("code",null,"1+",-1),ki={style:{"text-align":"left"}},Mi=t("td",{style:{"text-align":"center"}},"426",-1),vi={style:{"text-align":"left"}},Ii={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},Ei={style:{"text-align":"center"}},wi={style:{"text-align":"left"}},zi=t("code",null,"栈",-1),Oi=t("code",null,"树",-1),qi=t("code",null,"深度优先搜索",-1),Hi=t("code",null,"4+",-1),Li={style:{"text-align":"left"}},Ci=t("td",{style:{"text-align":"center"}},"431",-1),Ni={style:{"text-align":"left"}},Pi={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ki=t("td",{style:{"text-align":"center"}},null,-1),Bi={style:{"text-align":"left"}},Vi=t("code",null,"树",-1),Ti=t("code",null,"深度优先搜索",-1),Ui=t("code",null,"广度优先搜索",-1),Ri=t("code",null,"2+",-1),Wi={style:{"text-align":"left"}},Gi=t("td",{style:{"text-align":"center"}},"437",-1),Yi={style:{"text-align":"left"}},Qi={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Si={style:{"text-align":"center"}},Di={style:{"text-align":"left"}},Zi=t("code",null,"树",-1),Ai=t("code",null,"深度优先搜索",-1),Fi=t("code",null,"二叉树",-1),Ji={style:{"text-align":"left"}},Xi=t("td",{style:{"text-align":"center"}},"449",-1),$i={style:{"text-align":"left"}},tr={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},er=t("td",{style:{"text-align":"center"}},null,-1),lr={style:{"text-align":"left"}},or=t("code",null,"树",-1),sr=t("code",null,"深度优先搜索",-1),nr=t("code",null,"广度优先搜索",-1),dr=t("code",null,"4+",-1),_r={style:{"text-align":"left"}},cr=t("td",{style:{"text-align":"center"}},"450",-1),ir={style:{"text-align":"left"}},rr={href:"https://leetcode.com/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},ar={style:{"text-align":"center"}},hr={style:{"text-align":"left"}},ur=t("code",null,"树",-1),fr=t("code",null,"二叉搜索树",-1),gr=t("code",null,"二叉树",-1),mr={style:{"text-align":"left"}},yr=t("td",{style:{"text-align":"center"}},"501",-1),xr={style:{"text-align":"left"}},br={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},pr=t("td",{style:{"text-align":"center"}},null,-1),jr={style:{"text-align":"left"}},kr=t("code",null,"树",-1),Mr=t("code",null,"深度优先搜索",-1),vr=t("code",null,"二叉搜索树",-1),Ir=t("code",null,"1+",-1),Er={style:{"text-align":"left"}},wr=t("td",{style:{"text-align":"center"}},"508",-1),zr={style:{"text-align":"left"}},Or={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},qr=t("td",{style:{"text-align":"center"}},null,-1),Hr={style:{"text-align":"left"}},Lr=t("code",null,"树",-1),Cr=t("code",null,"深度优先搜索",-1),Nr=t("code",null,"哈希表",-1),Pr=t("code",null,"1+",-1),Kr={style:{"text-align":"left"}},Br=t("td",{style:{"text-align":"center"}},"510",-1),Vr={style:{"text-align":"left"}},Tr={href:"https://leetcode.com/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},Ur=t("td",{style:{"text-align":"center"}},null,-1),Rr={style:{"text-align":"left"}},Wr=t("code",null,"树",-1),Gr=t("code",null,"二叉搜索树",-1),Yr=t("code",null,"二叉树",-1),Qr={style:{"text-align":"left"}},Sr=t("td",{style:{"text-align":"center"}},"513",-1),Dr={style:{"text-align":"left"}},Zr={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},Ar=t("td",{style:{"text-align":"center"}},null,-1),Fr={style:{"text-align":"left"}},Jr=t("code",null,"树",-1),Xr=t("code",null,"深度优先搜索",-1),$r=t("code",null,"广度优先搜索",-1),ta=t("code",null,"1+",-1),ea={style:{"text-align":"left"}},la=t("td",{style:{"text-align":"center"}},"515",-1),oa={style:{"text-align":"left"}},sa={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},na=t("td",{style:{"text-align":"center"}},null,-1),da={style:{"text-align":"left"}},_a=t("code",null,"树",-1),ca=t("code",null,"深度优先搜索",-1),ia=t("code",null,"广度优先搜索",-1),ra=t("code",null,"1+",-1),aa={style:{"text-align":"left"}},ha=t("td",{style:{"text-align":"center"}},"530",-1),ua={style:{"text-align":"left"}},fa={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},ga={style:{"text-align":"center"}},ma={style:{"text-align":"left"}},ya=t("code",null,"树",-1),xa=t("code",null,"深度优先搜索",-1),ba=t("code",null,"广度优先搜索",-1),pa=t("code",null,"2+",-1),ja={style:{"text-align":"left"}},ka=t("td",{style:{"text-align":"center"}},"536",-1),Ma={style:{"text-align":"left"}},va={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},Ia=t("td",{style:{"text-align":"center"}},null,-1),Ea={style:{"text-align":"left"}},wa=t("code",null,"栈",-1),za=t("code",null,"树",-1),Oa=t("code",null,"深度优先搜索",-1),qa=t("code",null,"2+",-1),Ha={style:{"text-align":"left"}},La=t("td",{style:{"text-align":"center"}},"538",-1),Ca={style:{"text-align":"left"}},Na={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Pa=t("td",{style:{"text-align":"center"}},null,-1),Ka={style:{"text-align":"left"}},Ba=t("code",null,"树",-1),Va=t("code",null,"深度优先搜索",-1),Ta=t("code",null,"二叉搜索树",-1),Ua=t("code",null,"1+",-1),Ra={style:{"text-align":"left"}},Wa=t("td",{style:{"text-align":"center"}},"543",-1),Ga={style:{"text-align":"left"}},Ya={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qa={style:{"text-align":"center"}},Sa={style:{"text-align":"left"}},Da=t("code",null,"树",-1),Za=t("code",null,"深度优先搜索",-1),Aa=t("code",null,"二叉树",-1),Fa={style:{"text-align":"left"}},Ja=t("td",{style:{"text-align":"center"}},"545",-1),Xa={style:{"text-align":"left"}},$a={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},t1=t("td",{style:{"text-align":"center"}},null,-1),e1={style:{"text-align":"left"}},l1=t("code",null,"树",-1),o1=t("code",null,"深度优先搜索",-1),s1=t("code",null,"二叉树",-1),n1={style:{"text-align":"left"}},d1=t("td",{style:{"text-align":"center"}},"549",-1),_1={style:{"text-align":"left"}},c1={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},i1=t("td",{style:{"text-align":"center"}},null,-1),r1={style:{"text-align":"left"}},a1=t("code",null,"树",-1),h1=t("code",null,"深度优先搜索",-1),u1=t("code",null,"二叉树",-1),f1={style:{"text-align":"left"}},g1=t("td",{style:{"text-align":"center"}},"563",-1),m1={style:{"text-align":"left"}},y1={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},x1=t("td",{style:{"text-align":"center"}},null,-1),b1={style:{"text-align":"left"}},p1=t("code",null,"树",-1),j1=t("code",null,"深度优先搜索",-1),k1=t("code",null,"二叉树",-1),M1={style:{"text-align":"left"}},v1=t("td",{style:{"text-align":"center"}},"572",-1),I1={style:{"text-align":"left"}},E1={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},w1={style:{"text-align":"center"}},z1={style:{"text-align":"left"}},O1=t("code",null,"树",-1),q1=t("code",null,"深度优先搜索",-1),H1=t("code",null,"二叉树",-1),L1=t("code",null,"2+",-1),C1={style:{"text-align":"left"}},N1=t("td",{style:{"text-align":"center"}},"606",-1),P1={style:{"text-align":"left"}},K1={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},B1=t("td",{style:{"text-align":"center"}},null,-1),V1={style:{"text-align":"left"}},T1=t("code",null,"树",-1),U1=t("code",null,"深度优先搜索",-1),R1=t("code",null,"字符串",-1),W1=t("code",null,"1+",-1),G1={style:{"text-align":"left"}},Y1=t("td",{style:{"text-align":"center"}},"617",-1),Q1={style:{"text-align":"left"}},S1={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},D1={style:{"text-align":"center"}},Z1={style:{"text-align":"left"}},A1=t("code",null,"树",-1),F1=t("code",null,"深度优先搜索",-1),J1=t("code",null,"广度优先搜索",-1),X1=t("code",null,"1+",-1),$1={style:{"text-align":"left"}},th=t("td",{style:{"text-align":"center"}},"623",-1),eh={style:{"text-align":"left"}},lh={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},oh=t("td",{style:{"text-align":"center"}},null,-1),sh={style:{"text-align":"left"}},nh=t("code",null,"树",-1),dh=t("code",null,"深度优先搜索",-1),_h=t("code",null,"广度优先搜索",-1),ch=t("code",null,"1+",-1),ih={style:{"text-align":"left"}},rh=t("td",{style:{"text-align":"center"}},"637",-1),ah={style:{"text-align":"left"}},hh={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},uh={style:{"text-align":"center"}},fh={style:{"text-align":"left"}},gh=t("code",null,"树",-1),mh=t("code",null,"深度优先搜索",-1),yh=t("code",null,"广度优先搜索",-1),xh=t("code",null,"1+",-1),bh={style:{"text-align":"left"}},ph=t("td",{style:{"text-align":"center"}},"652",-1),jh={style:{"text-align":"left"}},kh={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},Mh=t("td",{style:{"text-align":"center"}},null,-1),vh={style:{"text-align":"left"}},Ih=t("code",null,"树",-1),Eh=t("code",null,"深度优先搜索",-1),wh=t("code",null,"哈希表",-1),zh=t("code",null,"1+",-1),Oh={style:{"text-align":"left"}},qh=t("td",{style:{"text-align":"center"}},"653",-1),Hh={style:{"text-align":"left"}},Lh={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},Ch=t("td",{style:{"text-align":"center"}},null,-1),Nh={style:{"text-align":"left"}},Ph=t("code",null,"树",-1),Kh=t("code",null,"深度优先搜索",-1),Bh=t("code",null,"广度优先搜索",-1),Vh=t("code",null,"4+",-1),Th={style:{"text-align":"left"}},Uh=t("td",{style:{"text-align":"center"}},"654",-1),Rh={style:{"text-align":"left"}},Wh={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Gh={style:{"text-align":"center"}},Yh={style:{"text-align":"left"}},Qh=t("code",null,"栈",-1),Sh=t("code",null,"树",-1),Dh=t("code",null,"数组",-1),Zh=t("code",null,"3+",-1),Ah={style:{"text-align":"left"}},Fh=t("td",{style:{"text-align":"center"}},"655",-1),Jh={style:{"text-align":"left"}},Xh={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},$h=t("td",{style:{"text-align":"center"}},null,-1),tu={style:{"text-align":"left"}},eu=t("code",null,"树",-1),lu=t("code",null,"深度优先搜索",-1),ou=t("code",null,"广度优先搜索",-1),su=t("code",null,"1+",-1),nu={style:{"text-align":"left"}},du=t("td",{style:{"text-align":"center"}},"662",-1),_u={style:{"text-align":"left"}},cu={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},iu={style:{"text-align":"center"}},ru={style:{"text-align":"left"}},au=t("code",null,"树",-1),hu=t("code",null,"深度优先搜索",-1),uu=t("code",null,"广度优先搜索",-1),fu=t("code",null,"1+",-1),gu={style:{"text-align":"left"}},mu=t("td",{style:{"text-align":"center"}},"663",-1),yu={style:{"text-align":"left"}},xu={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},bu=t("td",{style:{"text-align":"center"}},null,-1),pu={style:{"text-align":"left"}},ju=t("code",null,"树",-1),ku=t("code",null,"深度优先搜索",-1),Mu=t("code",null,"二叉树",-1),vu={style:{"text-align":"left"}},Iu=t("td",{style:{"text-align":"center"}},"666",-1),Eu={style:{"text-align":"left"}},wu={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},zu=t("td",{style:{"text-align":"center"}},null,-1),Ou={style:{"text-align":"left"}},qu=t("code",null,"树",-1),Hu=t("code",null,"深度优先搜索",-1),Lu=t("code",null,"数组",-1),Cu=t("code",null,"2+",-1),Nu={style:{"text-align":"left"}},Pu=t("td",{style:{"text-align":"center"}},"669",-1),Ku={style:{"text-align":"left"}},Bu={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Vu=t("td",{style:{"text-align":"center"}},null,-1),Tu={style:{"text-align":"left"}},Uu=t("code",null,"树",-1),Ru=t("code",null,"深度优先搜索",-1),Wu=t("code",null,"二叉搜索树",-1),Gu=t("code",null,"1+",-1),Yu={style:{"text-align":"left"}},Qu=t("td",{style:{"text-align":"center"}},"671",-1),Su={style:{"text-align":"left"}},Du={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Zu=t("td",{style:{"text-align":"center"}},null,-1),Au={style:{"text-align":"left"}},Fu=t("code",null,"树",-1),Ju=t("code",null,"深度优先搜索",-1),Xu=t("code",null,"二叉树",-1),$u={style:{"text-align":"left"}},tf=t("td",{style:{"text-align":"center"}},"687",-1),ef={style:{"text-align":"left"}},lf={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},of=t("td",{style:{"text-align":"center"}},null,-1),sf={style:{"text-align":"left"}},nf=t("code",null,"树",-1),df=t("code",null,"深度优先搜索",-1),_f=t("code",null,"二叉树",-1),cf={style:{"text-align":"left"}},rf=t("td",{style:{"text-align":"center"}},"700",-1),af={style:{"text-align":"left"}},hf={href:"https://leetcode.com/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},uf={style:{"text-align":"center"}},ff={style:{"text-align":"left"}},gf=t("code",null,"树",-1),mf=t("code",null,"二叉搜索树",-1),yf=t("code",null,"二叉树",-1),xf={style:{"text-align":"left"}},bf=t("td",{style:{"text-align":"center"}},"701",-1),pf={style:{"text-align":"left"}},jf={href:"https://leetcode.com/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},kf={style:{"text-align":"center"}},Mf={style:{"text-align":"left"}},vf=t("code",null,"树",-1),If=t("code",null,"二叉搜索树",-1),Ef=t("code",null,"二叉树",-1),wf={style:{"text-align":"left"}},zf=t("td",{style:{"text-align":"center"}},"703",-1),Of={style:{"text-align":"left"}},qf={href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},Hf={style:{"text-align":"center"}},Lf={style:{"text-align":"left"}},Cf=t("code",null,"树",-1),Nf=t("code",null,"设计",-1),Pf=t("code",null,"二叉搜索树",-1),Kf=t("code",null,"3+",-1),Bf={style:{"text-align":"left"}},Vf=t("td",{style:{"text-align":"center"}},"742",-1),Tf={style:{"text-align":"left"}},Uf={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Rf=t("td",{style:{"text-align":"center"}},null,-1),Wf={style:{"text-align":"left"}},Gf=t("code",null,"树",-1),Yf=t("code",null,"深度优先搜索",-1),Qf=t("code",null,"广度优先搜索",-1),Sf=t("code",null,"1+",-1),Df={style:{"text-align":"left"}},Zf=t("td",{style:{"text-align":"center"}},"776",-1),Af={style:{"text-align":"left"}},Ff={href:"https://leetcode.com/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},Jf=t("td",{style:{"text-align":"center"}},null,-1),Xf={style:{"text-align":"left"}},$f=t("code",null,"树",-1),tg=t("code",null,"二叉搜索树",-1),eg=t("code",null,"递归",-1),lg=t("code",null,"1+",-1),og={style:{"text-align":"left"}},sg=t("td",{style:{"text-align":"center"}},"783",-1),ng={style:{"text-align":"left"}},dg={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},_g={style:{"text-align":"center"}},cg={style:{"text-align":"left"}},ig=t("code",null,"树",-1),rg=t("code",null,"深度优先搜索",-1),ag=t("code",null,"广度优先搜索",-1),hg=t("code",null,"2+",-1),ug={style:{"text-align":"left"}},fg=t("td",{style:{"text-align":"center"}},"814",-1),gg={style:{"text-align":"left"}},mg={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},yg=t("td",{style:{"text-align":"center"}},null,-1),xg={style:{"text-align":"left"}},bg=t("code",null,"树",-1),pg=t("code",null,"深度优先搜索",-1),jg=t("code",null,"二叉树",-1),kg={style:{"text-align":"left"}},Mg=t("td",{style:{"text-align":"center"}},"863",-1),vg={style:{"text-align":"left"}},Ig={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Eg=t("td",{style:{"text-align":"center"}},null,-1),wg={style:{"text-align":"left"}},zg=t("code",null,"树",-1),Og=t("code",null,"深度优先搜索",-1),qg=t("code",null,"广度优先搜索",-1),Hg=t("code",null,"2+",-1),Lg={style:{"text-align":"left"}},Cg=t("td",{style:{"text-align":"center"}},"865",-1),Ng={style:{"text-align":"left"}},Pg={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},Kg=t("td",{style:{"text-align":"center"}},null,-1),Bg={style:{"text-align":"left"}},Vg=t("code",null,"树",-1),Tg=t("code",null,"深度优先搜索",-1),Ug=t("code",null,"广度优先搜索",-1),Rg=t("code",null,"2+",-1),Wg={style:{"text-align":"left"}},Gg=t("td",{style:{"text-align":"center"}},"872",-1),Yg={style:{"text-align":"left"}},Qg={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},Sg=t("td",{style:{"text-align":"center"}},null,-1),Dg={style:{"text-align":"left"}},Zg=t("code",null,"树",-1),Ag=t("code",null,"深度优先搜索",-1),Fg=t("code",null,"二叉树",-1),Jg={style:{"text-align":"left"}},Xg=t("td",{style:{"text-align":"center"}},"889",-1),$g={style:{"text-align":"left"}},tm={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},em={style:{"text-align":"center"}},lm={style:{"text-align":"left"}},om=t("code",null,"树",-1),sm=t("code",null,"数组",-1),nm=t("code",null,"哈希表",-1),dm=t("code",null,"2+",-1),_m={style:{"text-align":"left"}},cm=t("td",{style:{"text-align":"center"}},"894",-1),im={style:{"text-align":"left"}},rm={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},am=t("td",{style:{"text-align":"center"}},null,-1),hm={style:{"text-align":"left"}},um=t("code",null,"树",-1),fm=t("code",null,"递归",-1),gm=t("code",null,"记忆化搜索",-1),mm=t("code",null,"2+",-1),ym={style:{"text-align":"left"}},xm=t("td",{style:{"text-align":"center"}},"897",-1),bm={style:{"text-align":"left"}},pm={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},jm=t("td",{style:{"text-align":"center"}},null,-1),km={style:{"text-align":"left"}},Mm=t("code",null,"栈",-1),vm=t("code",null,"树",-1),Im=t("code",null,"深度优先搜索",-1),Em=t("code",null,"2+",-1),wm={style:{"text-align":"left"}},zm=t("td",{style:{"text-align":"center"}},"919",-1),Om={style:{"text-align":"left"}},qm={href:"https://leetcode.com/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},Hm=t("td",{style:{"text-align":"center"}},null,-1),Lm={style:{"text-align":"left"}},Cm=t("code",null,"树",-1),Nm=t("code",null,"广度优先搜索",-1),Pm=t("code",null,"设计",-1),Km=t("code",null,"1+",-1),Bm={style:{"text-align":"left"}},Vm=t("td",{style:{"text-align":"center"}},"938",-1),Tm={style:{"text-align":"left"}},Um={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},Rm=t("td",{style:{"text-align":"center"}},null,-1),Wm={style:{"text-align":"left"}},Gm=t("code",null,"树",-1),Ym=t("code",null,"深度优先搜索",-1),Qm=t("code",null,"二叉搜索树",-1),Sm=t("code",null,"1+",-1),Dm={style:{"text-align":"left"}},Zm=t("td",{style:{"text-align":"center"}},"951",-1),Am={style:{"text-align":"left"}},Fm={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Jm=t("td",{style:{"text-align":"center"}},null,-1),Xm={style:{"text-align":"left"}},$m=t("code",null,"树",-1),ty=t("code",null,"深度优先搜索",-1),ey=t("code",null,"二叉树",-1),ly={style:{"text-align":"left"}},oy=t("td",{style:{"text-align":"center"}},"958",-1),sy={style:{"text-align":"left"}},ny={href:"https://leetcode.com/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},dy={style:{"text-align":"center"}},_y={style:{"text-align":"left"}},cy=t("code",null,"树",-1),iy=t("code",null,"广度优先搜索",-1),ry=t("code",null,"二叉树",-1),ay={style:{"text-align":"left"}},hy=t("td",{style:{"text-align":"center"}},"965",-1),uy={style:{"text-align":"left"}},fy={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},gy=t("td",{style:{"text-align":"center"}},null,-1),my={style:{"text-align":"left"}},yy=t("code",null,"树",-1),xy=t("code",null,"深度优先搜索",-1),by=t("code",null,"广度优先搜索",-1),py=t("code",null,"1+",-1),jy={style:{"text-align":"left"}},ky=t("td",{style:{"text-align":"center"}},"968",-1),My={style:{"text-align":"left"}},vy={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},Iy=t("td",{style:{"text-align":"center"}},null,-1),Ey={style:{"text-align":"left"}},wy=t("code",null,"树",-1),zy=t("code",null,"深度优先搜索",-1),Oy=t("code",null,"动态规划",-1),qy=t("code",null,"1+",-1),Hy={style:{"text-align":"left"}},Ly=t("td",{style:{"text-align":"center"}},"971",-1),Cy={style:{"text-align":"left"}},Ny={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Py=t("td",{style:{"text-align":"center"}},null,-1),Ky={style:{"text-align":"left"}},By=t("code",null,"树",-1),Vy=t("code",null,"深度优先搜索",-1),Ty=t("code",null,"二叉树",-1),Uy={style:{"text-align":"left"}},Ry=t("td",{style:{"text-align":"center"}},"979",-1),Wy={style:{"text-align":"left"}},Gy={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yy=t("td",{style:{"text-align":"center"}},null,-1),Qy={style:{"text-align":"left"}},Sy=t("code",null,"树",-1),Dy=t("code",null,"深度优先搜索",-1),Zy=t("code",null,"二叉树",-1),Ay={style:{"text-align":"left"}},Fy=t("td",{style:{"text-align":"center"}},"987",-1),Jy={style:{"text-align":"left"}},Xy={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},$y=t("td",{style:{"text-align":"center"}},null,-1),tx={style:{"text-align":"left"}},ex=t("code",null,"树",-1),lx=t("code",null,"深度优先搜索",-1),ox=t("code",null,"广度优先搜索",-1),sx=t("code",null,"3+",-1),nx={style:{"text-align":"left"}},dx=t("td",{style:{"text-align":"center"}},"988",-1),_x={style:{"text-align":"left"}},cx={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},ix=t("td",{style:{"text-align":"center"}},null,-1),rx={style:{"text-align":"left"}},ax=t("code",null,"树",-1),hx=t("code",null,"深度优先搜索",-1),ux=t("code",null,"字符串",-1),fx=t("code",null,"2+",-1),gx={style:{"text-align":"left"}},mx=t("td",{style:{"text-align":"center"}},"993",-1),yx={style:{"text-align":"left"}},xx={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},bx=t("td",{style:{"text-align":"center"}},null,-1),px={style:{"text-align":"left"}},jx=t("code",null,"树",-1),kx=t("code",null,"深度优先搜索",-1),Mx=t("code",null,"广度优先搜索",-1),vx=t("code",null,"1+",-1),Ix={style:{"text-align":"left"}},Ex=t("td",{style:{"text-align":"center"}},"998",-1),wx={style:{"text-align":"left"}},zx={href:"https://leetcode.com/problems/maximum-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},Ox=t("td",{style:{"text-align":"center"}},null,-1),qx={style:{"text-align":"left"}},Hx=t("code",null,"树",-1),Lx=t("code",null,"二叉树",-1),Cx={style:{"text-align":"left"}},Nx=t("td",{style:{"text-align":"center"}},"1008",-1),Px={style:{"text-align":"left"}},Kx={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Bx={style:{"text-align":"center"}},Vx={style:{"text-align":"left"}},Tx=t("code",null,"栈",-1),Ux=t("code",null,"树",-1),Rx=t("code",null,"二叉搜索树",-1),Wx=t("code",null,"3+",-1),Gx={style:{"text-align":"left"}},Yx=t("td",{style:{"text-align":"center"}},"1022",-1),Qx={style:{"text-align":"left"}},Sx={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},Dx=t("td",{style:{"text-align":"center"}},null,-1),Zx={style:{"text-align":"left"}},Ax=t("code",null,"树",-1),Fx=t("code",null,"深度优先搜索",-1),Jx=t("code",null,"二叉树",-1),Xx={style:{"text-align":"left"}},$x=t("td",{style:{"text-align":"center"}},"1026",-1),tb={style:{"text-align":"left"}},eb={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},lb=t("td",{style:{"text-align":"center"}},null,-1),ob={style:{"text-align":"left"}},sb=t("code",null,"树",-1),nb=t("code",null,"深度优先搜索",-1),db=t("code",null,"二叉树",-1),_b={style:{"text-align":"left"}},cb=t("td",{style:{"text-align":"center"}},"1028",-1),ib={style:{"text-align":"left"}},rb={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},ab=t("td",{style:{"text-align":"center"}},null,-1),hb={style:{"text-align":"left"}},ub=t("code",null,"树",-1),fb=t("code",null,"深度优先搜索",-1),gb=t("code",null,"字符串",-1),mb=t("code",null,"1+",-1),yb={style:{"text-align":"left"}},xb=t("td",{style:{"text-align":"center"}},"1038",-1),bb={style:{"text-align":"left"}},pb={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},jb=t("td",{style:{"text-align":"center"}},null,-1),kb={style:{"text-align":"left"}},Mb=t("code",null,"树",-1),vb=t("code",null,"深度优先搜索",-1),Ib=t("code",null,"二叉搜索树",-1),Eb=t("code",null,"1+",-1),wb={style:{"text-align":"left"}},zb=t("td",{style:{"text-align":"center"}},"1080",-1),Ob={style:{"text-align":"left"}},qb={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},Hb=t("td",{style:{"text-align":"center"}},null,-1),Lb={style:{"text-align":"left"}},Cb=t("code",null,"树",-1),Nb=t("code",null,"深度优先搜索",-1),Pb=t("code",null,"二叉树",-1),Kb={style:{"text-align":"left"}},Bb=t("td",{style:{"text-align":"center"}},"1104",-1),Vb={style:{"text-align":"left"}},Tb={href:"https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ub=t("td",{style:{"text-align":"center"}},null,-1),Rb={style:{"text-align":"left"}},Wb=t("code",null,"树",-1),Gb=t("code",null,"数学",-1),Yb=t("code",null,"二叉树",-1),Qb={style:{"text-align":"left"}},Sb=t("td",{style:{"text-align":"center"}},"1110",-1),Db={style:{"text-align":"left"}},Zb={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},Ab=t("td",{style:{"text-align":"center"}},null,-1),Fb={style:{"text-align":"left"}},Jb=t("code",null,"树",-1),Xb=t("code",null,"深度优先搜索",-1),$b=t("code",null,"数组",-1),t2=t("code",null,"2+",-1),e2={style:{"text-align":"left"}},l2=t("td",{style:{"text-align":"center"}},"1120",-1),o2={style:{"text-align":"left"}},s2={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},n2=t("td",{style:{"text-align":"center"}},null,-1),d2={style:{"text-align":"left"}},_2=t("code",null,"树",-1),c2=t("code",null,"深度优先搜索",-1),i2=t("code",null,"二叉树",-1),r2={style:{"text-align":"left"}},a2=t("td",{style:{"text-align":"center"}},"1123",-1),h2={style:{"text-align":"left"}},u2={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},f2=t("td",{style:{"text-align":"center"}},null,-1),g2={style:{"text-align":"left"}},m2=t("code",null,"树",-1),y2=t("code",null,"深度优先搜索",-1),x2=t("code",null,"广度优先搜索",-1),b2=t("code",null,"2+",-1),p2={style:{"text-align":"left"}},j2=t("td",{style:{"text-align":"center"}},"1145",-1),k2={style:{"text-align":"left"}},M2={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},v2=t("td",{style:{"text-align":"center"}},null,-1),I2={style:{"text-align":"left"}},E2=t("code",null,"树",-1),w2=t("code",null,"深度优先搜索",-1),z2=t("code",null,"二叉树",-1),O2={style:{"text-align":"left"}},q2=t("td",{style:{"text-align":"center"}},"1161",-1),H2={style:{"text-align":"left"}},L2={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},C2=t("td",{style:{"text-align":"center"}},null,-1),N2={style:{"text-align":"left"}},P2=t("code",null,"树",-1),K2=t("code",null,"深度优先搜索",-1),B2=t("code",null,"广度优先搜索",-1),V2=t("code",null,"1+",-1),T2={style:{"text-align":"left"}},U2=t("td",{style:{"text-align":"center"}},"1214",-1),R2={style:{"text-align":"left"}},W2={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},G2=t("td",{style:{"text-align":"center"}},null,-1),Y2={style:{"text-align":"left"}},Q2=t("code",null,"栈",-1),S2=t("code",null,"树",-1),D2=t("code",null,"深度优先搜索",-1),Z2=t("code",null,"4+",-1),A2={style:{"text-align":"left"}},F2=t("td",{style:{"text-align":"center"}},"1261",-1),J2={style:{"text-align":"left"}},X2={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},$2=t("td",{style:{"text-align":"center"}},null,-1),t0={style:{"text-align":"left"}},e0=t("code",null,"树",-1),l0=t("code",null,"深度优先搜索",-1),o0=t("code",null,"广度优先搜索",-1),s0=t("code",null,"3+",-1),n0={style:{"text-align":"left"}},d0=t("td",{style:{"text-align":"center"}},"1302",-1),_0={style:{"text-align":"left"}},c0={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},i0=t("td",{style:{"text-align":"center"}},null,-1),r0={style:{"text-align":"left"}},a0=t("code",null,"树",-1),h0=t("code",null,"深度优先搜索",-1),u0=t("code",null,"广度优先搜索",-1),f0=t("code",null,"1+",-1),g0={style:{"text-align":"left"}},m0=t("td",{style:{"text-align":"center"}},"1305",-1),y0={style:{"text-align":"left"}},x0={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},b0=t("td",{style:{"text-align":"center"}},null,-1),p0={style:{"text-align":"left"}},j0=t("code",null,"树",-1),k0=t("code",null,"深度优先搜索",-1),M0=t("code",null,"二叉搜索树",-1),v0=t("code",null,"2+",-1),I0={style:{"text-align":"left"}},E0=t("td",{style:{"text-align":"center"}},"1315",-1),w0={style:{"text-align":"left"}},z0={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},O0=t("td",{style:{"text-align":"center"}},null,-1),q0={style:{"text-align":"left"}},H0=t("code",null,"树",-1),L0=t("code",null,"深度优先搜索",-1),C0=t("code",null,"广度优先搜索",-1),N0=t("code",null,"1+",-1),P0={style:{"text-align":"left"}},K0=t("td",{style:{"text-align":"center"}},"1325",-1),B0={style:{"text-align":"left"}},V0={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},T0=t("td",{style:{"text-align":"center"}},null,-1),U0={style:{"text-align":"left"}},R0=t("code",null,"树",-1),W0=t("code",null,"深度优先搜索",-1),G0=t("code",null,"二叉树",-1),Y0={style:{"text-align":"left"}},Q0=t("td",{style:{"text-align":"center"}},"1339",-1),S0={style:{"text-align":"left"}},D0={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},Z0=t("td",{style:{"text-align":"center"}},null,-1),A0={style:{"text-align":"left"}},F0=t("code",null,"树",-1),J0=t("code",null,"深度优先搜索",-1),X0=t("code",null,"二叉树",-1),$0={style:{"text-align":"left"}},tp=t("td",{style:{"text-align":"center"}},"1361",-1),ep={style:{"text-align":"left"}},lp={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},op=t("td",{style:{"text-align":"center"}},null,-1),sp={style:{"text-align":"left"}},np=t("code",null,"树",-1),dp=t("code",null,"深度优先搜索",-1),_p=t("code",null,"广度优先搜索",-1),cp=t("code",null,"3+",-1),ip={style:{"text-align":"left"}},rp=t("td",{style:{"text-align":"center"}},"1367",-1),ap={style:{"text-align":"left"}},hp={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},up=t("td",{style:{"text-align":"center"}},null,-1),fp={style:{"text-align":"left"}},gp=t("code",null,"树",-1),mp=t("code",null,"深度优先搜索",-1),yp=t("code",null,"链表",-1),xp=t("code",null,"1+",-1),bp={style:{"text-align":"left"}},pp=t("td",{style:{"text-align":"center"}},"1372",-1),jp={style:{"text-align":"left"}},kp={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Mp=t("td",{style:{"text-align":"center"}},null,-1),vp={style:{"text-align":"left"}},Ip=t("code",null,"树",-1),Ep=t("code",null,"深度优先搜索",-1),wp=t("code",null,"动态规划",-1),zp=t("code",null,"1+",-1),Op={style:{"text-align":"left"}},qp=t("td",{style:{"text-align":"center"}},"1373",-1),Hp={style:{"text-align":"left"}},Lp={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Cp=t("td",{style:{"text-align":"center"}},null,-1),Np={style:{"text-align":"left"}},Pp=t("code",null,"树",-1),Kp=t("code",null,"深度优先搜索",-1),Bp=t("code",null,"二叉搜索树",-1),Vp=t("code",null,"2+",-1),Tp={style:{"text-align":"left"}},Up=t("td",{style:{"text-align":"center"}},"1379",-1),Rp={style:{"text-align":"left"}},Wp={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},Gp=t("td",{style:{"text-align":"center"}},null,-1),Yp={style:{"text-align":"left"}},Qp=t("code",null,"树",-1),Sp=t("code",null,"深度优先搜索",-1),Dp=t("code",null,"广度优先搜索",-1),Zp=t("code",null,"1+",-1),Ap={style:{"text-align":"left"}},Fp=t("td",{style:{"text-align":"center"}},"1382",-1),Jp={style:{"text-align":"left"}},Xp={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},$p=t("td",{style:{"text-align":"center"}},null,-1),t6={style:{"text-align":"left"}},e6=t("code",null,"贪心",-1),l6=t("code",null,"树",-1),o6=t("code",null,"深度优先搜索",-1),s6=t("code",null,"3+",-1),n6={style:{"text-align":"left"}},d6=t("td",{style:{"text-align":"center"}},"1430",-1),_6={style:{"text-align":"left"}},c6={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},i6=t("td",{style:{"text-align":"center"}},null,-1),r6={style:{"text-align":"left"}},a6=t("code",null,"树",-1),h6=t("code",null,"深度优先搜索",-1),u6=t("code",null,"广度优先搜索",-1),f6=t("code",null,"1+",-1),g6={style:{"text-align":"left"}},m6=t("td",{style:{"text-align":"center"}},"1448",-1),y6={style:{"text-align":"left"}},x6={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},b6=t("td",{style:{"text-align":"center"}},null,-1),p6={style:{"text-align":"left"}},j6=t("code",null,"树",-1),k6=t("code",null,"深度优先搜索",-1),M6=t("code",null,"广度优先搜索",-1),v6=t("code",null,"1+",-1),I6={style:{"text-align":"left"}},E6=t("td",{style:{"text-align":"center"}},"1457",-1),w6={style:{"text-align":"left"}},z6={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},O6=t("td",{style:{"text-align":"center"}},null,-1),q6={style:{"text-align":"left"}},H6=t("code",null,"位运算",-1),L6=t("code",null,"树",-1),C6=t("code",null,"深度优先搜索",-1),N6=t("code",null,"2+",-1),P6={style:{"text-align":"left"}},K6=t("td",{style:{"text-align":"center"}},"1469",-1),B6={style:{"text-align":"left"}},V6={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},T6=t("td",{style:{"text-align":"center"}},null,-1),U6={style:{"text-align":"left"}},R6=t("code",null,"树",-1),W6=t("code",null,"深度优先搜索",-1),G6=t("code",null,"广度优先搜索",-1),Y6=t("code",null,"1+",-1),Q6={style:{"text-align":"left"}},S6=t("td",{style:{"text-align":"center"}},"1485",-1),D6={style:{"text-align":"left"}},Z6={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},A6=t("td",{style:{"text-align":"center"}},null,-1),F6={style:{"text-align":"left"}},J6=t("code",null,"树",-1),X6=t("code",null,"深度优先搜索",-1),$6=t("code",null,"广度优先搜索",-1),t8=t("code",null,"2+",-1),e8={style:{"text-align":"left"}},l8=t("td",{style:{"text-align":"center"}},"1530",-1),o8={style:{"text-align":"left"}},s8={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},n8=t("td",{style:{"text-align":"center"}},null,-1),d8={style:{"text-align":"left"}},_8=t("code",null,"树",-1),c8=t("code",null,"深度优先搜索",-1),i8=t("code",null,"二叉树",-1),r8={style:{"text-align":"left"}},a8=t("td",{style:{"text-align":"center"}},"1569",-1),h8={style:{"text-align":"left"}},u8={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},f8=t("td",{style:{"text-align":"center"}},null,-1),g8={style:{"text-align":"left"}},m8=t("code",null,"树",-1),y8=t("code",null,"并查集",-1),x8=t("code",null,"二叉搜索树",-1),b8=t("code",null,"7+",-1),p8={style:{"text-align":"left"}},j8=t("td",{style:{"text-align":"center"}},"1586",-1),k8={style:{"text-align":"left"}},M8={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},v8=t("td",{style:{"text-align":"center"}},null,-1),I8={style:{"text-align":"left"}},E8=t("code",null,"栈",-1),w8=t("code",null,"树",-1),z8=t("code",null,"设计",-1),O8=t("code",null,"3+",-1),q8={style:{"text-align":"left"}},H8=t("td",{style:{"text-align":"center"}},"1597",-1),L8={style:{"text-align":"left"}},C8={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},N8=t("td",{style:{"text-align":"center"}},null,-1),P8={style:{"text-align":"left"}},K8=t("code",null,"栈",-1),B8=t("code",null,"树",-1),V8=t("code",null,"字符串",-1),T8=t("code",null,"1+",-1),U8={style:{"text-align":"left"}},R8=t("td",{style:{"text-align":"center"}},"1602",-1),W8={style:{"text-align":"left"}},G8={href:"https://leetcode.com/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Y8=t("td",{style:{"text-align":"center"}},null,-1),Q8={style:{"text-align":"left"}},S8=t("code",null,"树",-1),D8=t("code",null,"广度优先搜索",-1),Z8=t("code",null,"二叉树",-1),A8={style:{"text-align":"left"}},F8=t("td",{style:{"text-align":"center"}},"1609",-1),J8={style:{"text-align":"left"}},X8={href:"https://leetcode.com/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},$8=t("td",{style:{"text-align":"center"}},null,-1),tj={style:{"text-align":"left"}},ej=t("code",null,"树",-1),lj=t("code",null,"广度优先搜索",-1),oj=t("code",null,"二叉树",-1),sj={style:{"text-align":"left"}},nj=t("td",{style:{"text-align":"center"}},"1612",-1),dj={style:{"text-align":"left"}},_j={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},cj=t("td",{style:{"text-align":"center"}},null,-1),ij={style:{"text-align":"left"}},rj=t("code",null,"树",-1),aj=t("code",null,"深度优先搜索",-1),hj=t("code",null,"哈希表",-1),uj=t("code",null,"2+",-1),fj={style:{"text-align":"left"}},gj=t("td",{style:{"text-align":"center"}},"1628",-1),mj={style:{"text-align":"left"}},yj={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},xj=t("td",{style:{"text-align":"center"}},null,-1),bj={style:{"text-align":"left"}},pj=t("code",null,"栈",-1),jj=t("code",null,"树",-1),kj=t("code",null,"设计",-1),Mj=t("code",null,"3+",-1),vj={style:{"text-align":"left"}},Ij=t("td",{style:{"text-align":"center"}},"1644",-1),Ej={style:{"text-align":"left"}},wj={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},zj=t("td",{style:{"text-align":"center"}},null,-1),Oj={style:{"text-align":"left"}},qj=t("code",null,"树",-1),Hj=t("code",null,"深度优先搜索",-1),Lj=t("code",null,"二叉树",-1),Cj={style:{"text-align":"left"}},Nj=t("td",{style:{"text-align":"center"}},"1650",-1),Pj={style:{"text-align":"left"}},Kj={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii",target:"_blank",rel:"noopener noreferrer"},Bj=t("td",{style:{"text-align":"center"}},null,-1),Vj={style:{"text-align":"left"}},Tj=t("code",null,"树",-1),Uj=t("code",null,"哈希表",-1),Rj=t("code",null,"双指针",-1),Wj=t("code",null,"1+",-1),Gj={style:{"text-align":"left"}},Yj=t("td",{style:{"text-align":"center"}},"1660",-1),Qj={style:{"text-align":"left"}},Sj={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Dj=t("td",{style:{"text-align":"center"}},null,-1),Zj={style:{"text-align":"left"}},Aj=t("code",null,"树",-1),Fj=t("code",null,"深度优先搜索",-1),Jj=t("code",null,"广度优先搜索",-1),Xj=t("code",null,"2+",-1),$j={style:{"text-align":"left"}},t3=t("td",{style:{"text-align":"center"}},"1666",-1),e3={style:{"text-align":"left"}},l3={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},o3=t("td",{style:{"text-align":"center"}},null,-1),s3={style:{"text-align":"left"}},n3=t("code",null,"树",-1),d3=t("code",null,"深度优先搜索",-1),_3=t("code",null,"二叉树",-1),c3={style:{"text-align":"left"}},i3=t("td",{style:{"text-align":"center"}},"1676",-1),r3={style:{"text-align":"left"}},a3={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},h3=t("td",{style:{"text-align":"center"}},null,-1),u3={style:{"text-align":"left"}},f3=t("code",null,"树",-1),g3=t("code",null,"深度优先搜索",-1),m3=t("code",null,"哈希表",-1),y3=t("code",null,"1+",-1),x3={style:{"text-align":"left"}},b3=t("td",{style:{"text-align":"center"}},"1740",-1),p3={style:{"text-align":"left"}},j3={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},k3=t("td",{style:{"text-align":"center"}},null,-1),M3={style:{"text-align":"left"}},v3=t("code",null,"树",-1),I3=t("code",null,"深度优先搜索",-1),E3=t("code",null,"广度优先搜索",-1),w3=t("code",null,"2+",-1),z3={style:{"text-align":"left"}},O3=t("td",{style:{"text-align":"center"}},"1902",-1),q3={style:{"text-align":"left"}},H3={href:"https://leetcode.com/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},L3=t("td",{style:{"text-align":"center"}},null,-1),C3={style:{"text-align":"left"}},N3=t("code",null,"树",-1),P3=t("code",null,"二叉搜索树",-1),K3=t("code",null,"数组",-1),B3=t("code",null,"2+",-1),V3={style:{"text-align":"left"}},T3=t("td",{style:{"text-align":"center"}},"1932",-1),U3={style:{"text-align":"left"}},R3={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},W3=t("td",{style:{"text-align":"center"}},null,-1),G3={style:{"text-align":"left"}},Y3=t("code",null,"树",-1),Q3=t("code",null,"深度优先搜索",-1),S3=t("code",null,"哈希表",-1),D3=t("code",null,"2+",-1),Z3={style:{"text-align":"left"}},A3=t("td",{style:{"text-align":"center"}},"1973",-1),F3={style:{"text-align":"left"}},J3={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},X3=t("td",{style:{"text-align":"center"}},null,-1),$3={style:{"text-align":"left"}},t5=t("code",null,"树",-1),e5=t("code",null,"深度优先搜索",-1),l5=t("code",null,"二叉树",-1),o5={style:{"text-align":"left"}},s5=t("td",{style:{"text-align":"center"}},"2005",-1),n5={style:{"text-align":"left"}},d5={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},_5=t("td",{style:{"text-align":"center"}},null,-1),c5={style:{"text-align":"left"}},i5=t("code",null,"树",-1),r5=t("code",null,"数学",-1),a5=t("code",null,"动态规划",-1),h5=t("code",null,"2+",-1),u5={style:{"text-align":"left"}},f5=t("td",{style:{"text-align":"center"}},"2049",-1),g5={style:{"text-align":"left"}},m5={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},y5=t("td",{style:{"text-align":"center"}},null,-1),x5={style:{"text-align":"left"}},b5=t("code",null,"树",-1),p5=t("code",null,"深度优先搜索",-1),j5=t("code",null,"数组",-1),k5=t("code",null,"1+",-1),M5={style:{"text-align":"left"}},v5=t("td",{style:{"text-align":"center"}},"2096",-1),I5={style:{"text-align":"left"}},E5={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},w5=t("td",{style:{"text-align":"center"}},null,-1),z5={style:{"text-align":"left"}},O5=t("code",null,"树",-1),q5=t("code",null,"深度优先搜索",-1),H5=t("code",null,"字符串",-1),L5=t("code",null,"1+",-1),C5={style:{"text-align":"left"}},N5=t("td",{style:{"text-align":"center"}},"2196",-1),P5={style:{"text-align":"left"}},K5={href:"https://leetcode.com/problems/create-binary-tree-from-descriptions",target:"_blank",rel:"noopener noreferrer"},B5={style:{"text-align":"center"}},V5={style:{"text-align":"left"}},T5=t("code",null,"树",-1),U5=t("code",null,"数组",-1),R5=t("code",null,"哈希表",-1),W5=t("code",null,"1+",-1),G5={style:{"text-align":"left"}},Y5=t("td",{style:{"text-align":"center"}},"2236",-1),Q5={style:{"text-align":"left"}},S5={href:"https://leetcode.com/problems/root-equals-sum-of-children",target:"_blank",rel:"noopener noreferrer"},D5=t("td",{style:{"text-align":"center"}},null,-1),Z5={style:{"text-align":"left"}},A5=t("code",null,"树",-1),F5=t("code",null,"二叉树",-1),J5={style:{"text-align":"left"}},X5=t("td",{style:{"text-align":"center"}},"2265",-1),$5={style:{"text-align":"left"}},t4={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},e4=t("td",{style:{"text-align":"center"}},null,-1),l4={style:{"text-align":"left"}},o4=t("code",null,"树",-1),s4=t("code",null,"深度优先搜索",-1),n4=t("code",null,"二叉树",-1),d4={style:{"text-align":"left"}},_4=t("td",{style:{"text-align":"center"}},"2313",-1),c4={style:{"text-align":"left"}},i4={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},r4=t("td",{style:{"text-align":"center"}},null,-1),a4={style:{"text-align":"left"}},h4=t("code",null,"树",-1),u4=t("code",null,"深度优先搜索",-1),f4=t("code",null,"动态规划",-1),g4=t("code",null,"1+",-1),m4={style:{"text-align":"left"}},y4=t("td",{style:{"text-align":"center"}},"2331",-1),x4={style:{"text-align":"left"}},b4={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},p4=t("td",{style:{"text-align":"center"}},null,-1),j4={style:{"text-align":"left"}},k4=t("code",null,"树",-1),M4=t("code",null,"深度优先搜索",-1),v4=t("code",null,"二叉树",-1),I4={style:{"text-align":"left"}},E4=t("td",{style:{"text-align":"center"}},"2385",-1),w4={style:{"text-align":"left"}},z4={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},O4=t("td",{style:{"text-align":"center"}},null,-1),q4={style:{"text-align":"left"}},H4=t("code",null,"树",-1),L4=t("code",null,"深度优先搜索",-1),C4=t("code",null,"广度优先搜索",-1),N4=t("code",null,"2+",-1),P4={style:{"text-align":"left"}},K4=t("td",{style:{"text-align":"center"}},"2415",-1),B4={style:{"text-align":"left"}},V4={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},T4=t("td",{style:{"text-align":"center"}},null,-1),U4={style:{"text-align":"left"}},R4=t("code",null,"树",-1),W4=t("code",null,"深度优先搜索",-1),G4=t("code",null,"广度优先搜索",-1),Y4=t("code",null,"1+",-1),Q4={style:{"text-align":"left"}},S4=t("td",{style:{"text-align":"center"}},"2445",-1),D4={style:{"text-align":"left"}},Z4={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},A4=t("td",{style:{"text-align":"center"}},null,-1),F4={style:{"text-align":"left"}},J4=t("code",null,"树",-1),X4=t("code",null,"深度优先搜索",-1),$4=t("code",null,"广度优先搜索",-1),t9=t("code",null,"1+",-1),e9={style:{"text-align":"left"}},l9=t("td",{style:{"text-align":"center"}},"2458",-1),o9={style:{"text-align":"left"}},s9={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},n9=t("td",{style:{"text-align":"center"}},null,-1),d9={style:{"text-align":"left"}},_9=t("code",null,"树",-1),c9=t("code",null,"深度优先搜索",-1),i9=t("code",null,"广度优先搜索",-1),r9=t("code",null,"2+",-1),a9={style:{"text-align":"left"}},h9=t("td",{style:{"text-align":"center"}},"2471",-1),u9={style:{"text-align":"left"}},f9={href:"https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},g9=t("td",{style:{"text-align":"center"}},null,-1),m9={style:{"text-align":"left"}},y9=t("code",null,"树",-1),x9=t("code",null,"广度优先搜索",-1),b9=t("code",null,"二叉树",-1),p9={style:{"text-align":"left"}},j9=t("td",{style:{"text-align":"center"}},"2476",-1),k9={style:{"text-align":"left"}},M9={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},v9=t("td",{style:{"text-align":"center"}},null,-1),I9={style:{"text-align":"left"}},E9=t("code",null,"树",-1),w9=t("code",null,"深度优先搜索",-1),z9=t("code",null,"二叉搜索树",-1),O9=t("code",null,"3+",-1),q9={style:{"text-align":"left"}},H9=t("td",{style:{"text-align":"center"}},"2509",-1),L9={style:{"text-align":"left"}},C9={href:"https://leetcode.com/problems/cycle-length-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},N9=t("td",{style:{"text-align":"center"}},null,-1),P9={style:{"text-align":"left"}},K9=t("code",null,"树",-1),B9=t("code",null,"数组",-1),V9=t("code",null,"二叉树",-1),T9={style:{"text-align":"left"}},U9=t("td",{style:{"text-align":"center"}},"2583",-1),R9={style:{"text-align":"left"}},W9={href:"https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},G9=t("td",{style:{"text-align":"center"}},null,-1),Y9={style:{"text-align":"left"}},Q9=t("code",null,"树",-1),S9=t("code",null,"广度优先搜索",-1),D9=t("code",null,"二叉树",-1),Z9=t("code",null,"1+",-1),A9={style:{"text-align":"left"}},F9=t("td",{style:{"text-align":"center"}},"2641",-1),J9={style:{"text-align":"left"}},X9={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},$9=t("td",{style:{"text-align":"center"}},null,-1),t7={style:{"text-align":"left"}},e7=t("code",null,"树",-1),l7=t("code",null,"深度优先搜索",-1),o7=t("code",null,"广度优先搜索",-1),s7=t("code",null,"2+",-1),n7={style:{"text-align":"left"}},d7=t("td",{style:{"text-align":"center"}},"2673",-1),_7={style:{"text-align":"left"}},c7={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},i7=t("td",{style:{"text-align":"center"}},null,-1),r7={style:{"text-align":"left"}},a7=t("code",null,"贪心",-1),h7=t("code",null,"树",-1),u7=t("code",null,"数组",-1),f7=t("code",null,"2+",-1),g7={style:{"text-align":"left"}},m7=t("td",{style:{"text-align":"center"}},"2689",-1),y7={style:{"text-align":"left"}},x7={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},b7=t("td",{style:{"text-align":"center"}},null,-1),p7={style:{"text-align":"left"}},j7=t("code",null,"树",-1),k7=t("code",null,"深度优先搜索",-1),M7=t("code",null,"二叉树",-1),v7={style:{"text-align":"left"}},I7=t("td",{style:{"text-align":"center"}},"2764",-1),E7={style:{"text-align":"left"}},w7={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},z7=t("td",{style:{"text-align":"center"}},null,-1),O7={style:{"text-align":"left"}},q7=t("code",null,"栈",-1),H7=t("code",null,"树",-1),L7=t("code",null,"深度优先搜索",-1),C7=t("code",null,"1+",-1),N7={style:{"text-align":"left"}},P7=t("td",{style:{"text-align":"center"}},"2773",-1),K7={style:{"text-align":"left"}},B7={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},V7=t("td",{style:{"text-align":"center"}},null,-1),T7={style:{"text-align":"left"}},U7=t("code",null,"树",-1),R7=t("code",null,"深度优先搜索",-1),W7=t("code",null,"广度优先搜索",-1),G7=t("code",null,"1+",-1),Y7={style:{"text-align":"left"}},Q7=t("td",{style:{"text-align":"center"}},"2792",-1),S7={style:{"text-align":"left"}},D7={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},Z7=t("td",{style:{"text-align":"center"}},null,-1),A7={style:{"text-align":"left"}},F7=t("code",null,"树",-1),J7=t("code",null,"深度优先搜索",-1),X7=t("code",null,"分治",-1),$7=t("code",null,"1+",-1),tk={style:{"text-align":"left"}},ek=t("td",{style:{"text-align":"center"}},"3157",-1),lk={style:{"text-align":"left"}},ok={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},sk=t("td",{style:{"text-align":"center"}},null,-1),nk={style:{"text-align":"left"}},dk=t("code",null,"树",-1),_k=t("code",null,"深度优先搜索",-1),ck=t("code",null,"广度优先搜索",-1),ik=t("code",null,"1+",-1),rk={style:{"text-align":"left"}},ak=t("td",{style:{"text-align":"center"}},"3319",-1),hk={style:{"text-align":"left"}},uk={href:"https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},fk={style:{"text-align":"center"}},gk={style:{"text-align":"left"}},mk=t("code",null,"树",-1),yk=t("code",null,"深度优先搜索",-1),xk=t("code",null,"二叉树",-1),bk=t("code",null,"1+",-1),pk={style:{"text-align":"left"}},jk=t("td",{style:{"text-align":"center"}},"LCP 10",-1),kk={style:{"text-align":"left"}},Mk={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},vk=t("td",{style:{"text-align":"center"}},null,-1),Ik={style:{"text-align":"left"}},Ek=t("code",null,"树",-1),wk=t("code",null,"深度优先搜索",-1),zk=t("code",null,"动态规划",-1),Ok=t("code",null,"1+",-1),qk={style:{"text-align":"left"}},Hk=t("td",{style:{"text-align":"center"}},"LCP 26",-1),Lk={style:{"text-align":"left"}},Ck={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},Nk=t("td",{style:{"text-align":"center"}},null,-1),Pk={style:{"text-align":"left"}},Kk=t("code",null,"树",-1),Bk=t("code",null,"动态规划",-1),Vk=t("code",null,"二叉树",-1),Tk={style:{"text-align":"left"}},Uk=t("td",{style:{"text-align":"center"}},"LCP 34",-1),Rk={style:{"text-align":"left"}},Wk={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},Gk=t("td",{style:{"text-align":"center"}},null,-1),Yk={style:{"text-align":"left"}},Qk=t("code",null,"树",-1),Sk=t("code",null,"动态规划",-1),Dk=t("code",null,"二叉树",-1),Zk={style:{"text-align":"left"}},Ak=t("td",{style:{"text-align":"center"}},"LCP 44",-1),Fk={style:{"text-align":"left"}},Jk={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},Xk=t("td",{style:{"text-align":"center"}},null,-1),$k={style:{"text-align":"left"}},tM=t("code",null,"树",-1),eM=t("code",null,"深度优先搜索",-1),lM=t("code",null,"广度优先搜索",-1),oM=t("code",null,"2+",-1),sM={style:{"text-align":"left"}},nM=t("td",{style:{"text-align":"center"}},"LCP 52",-1),dM={style:{"text-align":"left"}},_M={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},cM=t("td",{style:{"text-align":"center"}},null,-1),iM={style:{"text-align":"left"}},rM=t("code",null,"树",-1),aM=t("code",null,"线段树",-1),hM=t("code",null,"二叉搜索树",-1),uM=t("code",null,"4+",-1),fM={style:{"text-align":"left"}},gM=t("td",{style:{"text-align":"center"}},"LCP 60",-1),mM={style:{"text-align":"left"}},yM={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},xM=t("td",{style:{"text-align":"center"}},null,-1),bM={style:{"text-align":"left"}},pM=t("code",null,"树",-1),jM=t("code",null,"动态规划",-1),kM=t("code",null,"二叉树",-1),MM={style:{"text-align":"left"}},vM=t("td",{style:{"text-align":"center"}},"LCP 64",-1),IM={style:{"text-align":"left"}},EM={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},wM=t("td",{style:{"text-align":"center"}},null,-1),zM={style:{"text-align":"left"}},OM=t("code",null,"树",-1),qM=t("code",null,"深度优先搜索",-1),HM=t("code",null,"动态规划",-1),LM=t("code",null,"1+",-1),CM={style:{"text-align":"left"}},NM=t("td",{style:{"text-align":"center"}},"LCP 67",-1),PM={style:{"text-align":"left"}},KM={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},BM=t("td",{style:{"text-align":"center"}},null,-1),VM={style:{"text-align":"left"}},TM=t("code",null,"树",-1),UM=t("code",null,"深度优先搜索",-1),RM=t("code",null,"广度优先搜索",-1),WM=t("code",null,"1+",-1),GM={style:{"text-align":"left"}},YM=t("td",{style:{"text-align":"center"}},"剑指 Offer 07",-1),QM={style:{"text-align":"left"}},SM={href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},DM={style:{"text-align":"center"}},ZM={style:{"text-align":"left"}},AM=t("code",null,"树",-1),FM=t("code",null,"数组",-1),JM=t("code",null,"哈希表",-1),XM=t("code",null,"2+",-1),$M={style:{"text-align":"left"}},tv=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),ev={style:{"text-align":"left"}},lv={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},ov={style:{"text-align":"center"}},sv={style:{"text-align":"left"}},nv=t("code",null,"树",-1),dv=t("code",null,"深度优先搜索",-1),_v=t("code",null,"二叉树",-1),cv={style:{"text-align":"left"}},iv=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),rv={style:{"text-align":"left"}},av={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},hv={style:{"text-align":"center"}},uv={style:{"text-align":"left"}},fv=t("code",null,"树",-1),gv=t("code",null,"深度优先搜索",-1),mv=t("code",null,"广度优先搜索",-1),yv=t("code",null,"1+",-1),xv={style:{"text-align":"left"}},bv=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),pv={style:{"text-align":"left"}},jv={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},kv={style:{"text-align":"center"}},Mv={style:{"text-align":"left"}},vv=t("code",null,"树",-1),Iv=t("code",null,"深度优先搜索",-1),Ev=t("code",null,"广度优先搜索",-1),wv=t("code",null,"1+",-1),zv={style:{"text-align":"left"}},Ov=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - I",-1),qv={style:{"text-align":"left"}},Hv={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},Lv={style:{"text-align":"center"}},Cv={style:{"text-align":"left"}},Nv=t("code",null,"树",-1),Pv=t("code",null,"广度优先搜索",-1),Kv=t("code",null,"二叉树",-1),Bv={style:{"text-align":"left"}},Vv=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - II",-1),Tv={style:{"text-align":"left"}},Uv={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof",target:"_blank",rel:"noopener noreferrer"},Rv={style:{"text-align":"center"}},Wv={style:{"text-align":"left"}},Gv=t("code",null,"树",-1),Yv=t("code",null,"广度优先搜索",-1),Qv=t("code",null,"二叉树",-1),Sv={style:{"text-align":"left"}},Dv=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - III",-1),Zv={style:{"text-align":"left"}},Av={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof",target:"_blank",rel:"noopener noreferrer"},Fv={style:{"text-align":"center"}},Jv={style:{"text-align":"left"}},Xv=t("code",null,"树",-1),$v=t("code",null,"广度优先搜索",-1),tI=t("code",null,"二叉树",-1),eI={style:{"text-align":"left"}},lI=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),oI={style:{"text-align":"left"}},sI={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},nI={style:{"text-align":"center"}},dI={style:{"text-align":"left"}},_I=t("code",null,"栈",-1),cI=t("code",null,"树",-1),iI=t("code",null,"二叉搜索树",-1),rI=t("code",null,"4+",-1),aI={style:{"text-align":"left"}},hI=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),uI={style:{"text-align":"left"}},fI={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},gI={style:{"text-align":"center"}},mI={style:{"text-align":"left"}},yI=t("code",null,"树",-1),xI=t("code",null,"深度优先搜索",-1),bI=t("code",null,"回溯",-1),pI=t("code",null,"1+",-1),jI={style:{"text-align":"left"}},kI=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),MI={style:{"text-align":"left"}},vI={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},II={style:{"text-align":"center"}},EI={style:{"text-align":"left"}},wI=t("code",null,"栈",-1),zI=t("code",null,"树",-1),OI=t("code",null,"深度优先搜索",-1),qI=t("code",null,"4+",-1),HI={style:{"text-align":"left"}},LI=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),CI={style:{"text-align":"left"}},NI={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},PI={style:{"text-align":"center"}},KI={style:{"text-align":"left"}},BI=t("code",null,"树",-1),VI=t("code",null,"深度优先搜索",-1),TI=t("code",null,"广度优先搜索",-1),UI=t("code",null,"3+",-1),RI={style:{"text-align":"left"}},WI=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),GI={style:{"text-align":"left"}},YI={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},QI={style:{"text-align":"center"}},SI={style:{"text-align":"left"}},DI=t("code",null,"树",-1),ZI=t("code",null,"深度优先搜索",-1),AI=t("code",null,"二叉搜索树",-1),FI=t("code",null,"1+",-1),JI={style:{"text-align":"left"}},XI=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - I",-1),$I={style:{"text-align":"left"}},tE={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},eE={style:{"text-align":"center"}},lE={style:{"text-align":"left"}},oE=t("code",null,"树",-1),sE=t("code",null,"深度优先搜索",-1),nE=t("code",null,"广度优先搜索",-1),dE=t("code",null,"1+",-1),_E={style:{"text-align":"left"}},cE=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - II",-1),iE={style:{"text-align":"left"}},rE={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},aE=t("td",{style:{"text-align":"center"}},null,-1),hE={style:{"text-align":"left"}},uE=t("code",null,"树",-1),fE=t("code",null,"深度优先搜索",-1),gE=t("code",null,"二叉树",-1),mE={style:{"text-align":"left"}},yE=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - I",-1),xE={style:{"text-align":"left"}},bE={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},pE=t("td",{style:{"text-align":"center"}},null,-1),jE={style:{"text-align":"left"}},kE=t("code",null,"树",-1),ME=t("code",null,"深度优先搜索",-1),vE=t("code",null,"二叉搜索树",-1),IE=t("code",null,"1+",-1),EE={style:{"text-align":"left"}},wE=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - II",-1),zE={style:{"text-align":"left"}},OE={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},qE=t("td",{style:{"text-align":"center"}},null,-1),HE={style:{"text-align":"left"}},LE=t("code",null,"树",-1),CE=t("code",null,"深度优先搜索",-1),NE=t("code",null,"二叉树",-1),PE={style:{"text-align":"left"}},KE=t("td",{style:{"text-align":"center"}},"剑指 Offer II 43",-1),BE={style:{"text-align":"left"}},VE={href:"https://leetcode.cn/problems/NaqhDT",target:"_blank",rel:"noopener noreferrer"},TE=t("td",{style:{"text-align":"center"}},null,-1),UE={style:{"text-align":"left"}},RE=t("code",null,"树",-1),WE=t("code",null,"广度优先搜索",-1),GE=t("code",null,"设计",-1),YE=t("code",null,"1+",-1),QE={style:{"text-align":"left"}},SE=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),DE={style:{"text-align":"left"}},ZE={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},AE=t("td",{style:{"text-align":"center"}},null,-1),FE={style:{"text-align":"left"}},JE=t("code",null,"树",-1),XE=t("code",null,"深度优先搜索",-1),$E=t("code",null,"广度优先搜索",-1),tw=t("code",null,"1+",-1),ew={style:{"text-align":"left"}},lw=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),ow={style:{"text-align":"left"}},sw={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},nw=t("td",{style:{"text-align":"center"}},null,-1),dw={style:{"text-align":"left"}},_w=t("code",null,"树",-1),cw=t("code",null,"深度优先搜索",-1),iw=t("code",null,"广度优先搜索",-1),rw=t("code",null,"1+",-1),aw={style:{"text-align":"left"}},hw=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),uw={style:{"text-align":"left"}},fw={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},gw=t("td",{style:{"text-align":"center"}},null,-1),mw={style:{"text-align":"left"}},yw=t("code",null,"树",-1),xw=t("code",null,"深度优先搜索",-1),bw=t("code",null,"广度优先搜索",-1),pw=t("code",null,"1+",-1),jw={style:{"text-align":"left"}},kw=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),Mw={style:{"text-align":"left"}},vw={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},Iw=t("td",{style:{"text-align":"center"}},null,-1),Ew={style:{"text-align":"left"}},ww=t("code",null,"树",-1),zw=t("code",null,"深度优先搜索",-1),Ow=t("code",null,"二叉树",-1),qw={style:{"text-align":"left"}},Hw=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),Lw={style:{"text-align":"left"}},Cw={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},Nw=t("td",{style:{"text-align":"center"}},null,-1),Pw={style:{"text-align":"left"}},Kw=t("code",null,"树",-1),Bw=t("code",null,"深度优先搜索",-1),Vw=t("code",null,"广度优先搜索",-1),Tw=t("code",null,"3+",-1),Uw={style:{"text-align":"left"}},Rw=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),Ww={style:{"text-align":"left"}},Gw={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},Yw=t("td",{style:{"text-align":"center"}},null,-1),Qw={style:{"text-align":"left"}},Sw=t("code",null,"树",-1),Dw=t("code",null,"深度优先搜索",-1),Zw=t("code",null,"二叉树",-1),Aw={style:{"text-align":"left"}},Fw=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),Jw={style:{"text-align":"left"}},Xw={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},$w=t("td",{style:{"text-align":"center"}},null,-1),tz={style:{"text-align":"left"}},ez=t("code",null,"树",-1),lz=t("code",null,"深度优先搜索",-1),oz=t("code",null,"二叉树",-1),sz={style:{"text-align":"left"}},nz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),dz={style:{"text-align":"left"}},_z={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},cz=t("td",{style:{"text-align":"center"}},null,-1),iz={style:{"text-align":"left"}},rz=t("code",null,"树",-1),az=t("code",null,"深度优先搜索",-1),hz=t("code",null,"动态规划",-1),uz=t("code",null,"1+",-1),fz={style:{"text-align":"left"}},gz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),mz={style:{"text-align":"left"}},yz={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},xz=t("td",{style:{"text-align":"center"}},null,-1),bz={style:{"text-align":"left"}},pz=t("code",null,"栈",-1),jz=t("code",null,"树",-1),kz=t("code",null,"深度优先搜索",-1),Mz=t("code",null,"2+",-1),vz={style:{"text-align":"left"}},Iz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),Ez={style:{"text-align":"left"}},wz={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},zz=t("td",{style:{"text-align":"center"}},null,-1),Oz={style:{"text-align":"left"}},qz=t("code",null,"树",-1),Hz=t("code",null,"深度优先搜索",-1),Lz=t("code",null,"二叉搜索树",-1),Cz=t("code",null,"1+",-1),Nz={style:{"text-align":"left"}},Pz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),Kz={style:{"text-align":"left"}},Bz={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},Vz=t("td",{style:{"text-align":"center"}},null,-1),Tz={style:{"text-align":"left"}},Uz=t("code",null,"树",-1),Rz=t("code",null,"深度优先搜索",-1),Wz=t("code",null,"二叉搜索树",-1),Gz=t("code",null,"1+",-1),Yz={style:{"text-align":"left"}},Qz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),Sz={style:{"text-align":"left"}},Dz={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},Zz=t("td",{style:{"text-align":"center"}},null,-1),Az={style:{"text-align":"left"}},Fz=t("code",null,"栈",-1),Jz=t("code",null,"树",-1),Xz=t("code",null,"设计",-1),$z=t("code",null,"3+",-1),tO={style:{"text-align":"left"}},eO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 59",-1),lO={style:{"text-align":"left"}},oO={href:"https://leetcode.cn/problems/jBjn9C",target:"_blank",rel:"noopener noreferrer"},sO=t("td",{style:{"text-align":"center"}},null,-1),nO={style:{"text-align":"left"}},dO=t("code",null,"树",-1),_O=t("code",null,"设计",-1),cO=t("code",null,"二叉搜索树",-1),iO=t("code",null,"3+",-1),rO={style:{"text-align":"left"}},aO=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),hO={style:{"text-align":"left"}},uO={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},fO=t("td",{style:{"text-align":"center"}},null,-1),gO={style:{"text-align":"left"}},mO=t("code",null,"树",-1),yO=t("code",null,"二叉搜索树",-1),xO=t("code",null,"数组",-1),bO=t("code",null,"2+",-1),pO={style:{"text-align":"left"}},jO=t("td",{style:{"text-align":"center"}},"面试题 04.03",-1),kO={style:{"text-align":"left"}},MO={href:"https://leetcode.cn/problems/list-of-depth-lcci",target:"_blank",rel:"noopener noreferrer"},vO=t("td",{style:{"text-align":"center"}},null,-1),IO={style:{"text-align":"left"}},EO=t("code",null,"树",-1),wO=t("code",null,"广度优先搜索",-1),zO=t("code",null,"链表",-1),OO=t("code",null,"1+",-1),qO={style:{"text-align":"left"}},HO=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),LO={style:{"text-align":"left"}},CO={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},NO=t("td",{style:{"text-align":"center"}},null,-1),PO={style:{"text-align":"left"}},KO=t("code",null,"树",-1),BO=t("code",null,"深度优先搜索",-1),VO=t("code",null,"二叉树",-1),TO={style:{"text-align":"left"}},UO=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),RO={style:{"text-align":"left"}},WO={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},GO=t("td",{style:{"text-align":"center"}},null,-1),YO={style:{"text-align":"left"}},QO=t("code",null,"树",-1),SO=t("code",null,"深度优先搜索",-1),DO=t("code",null,"二叉搜索树",-1),ZO=t("code",null,"1+",-1),AO={style:{"text-align":"left"}},FO=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),JO={style:{"text-align":"left"}},XO={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},$O=t("td",{style:{"text-align":"center"}},null,-1),tq={style:{"text-align":"left"}},eq=t("code",null,"树",-1),lq=t("code",null,"深度优先搜索",-1),oq=t("code",null,"二叉搜索树",-1),sq=t("code",null,"1+",-1),nq={style:{"text-align":"left"}},dq=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),_q={style:{"text-align":"left"}},cq={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},iq=t("td",{style:{"text-align":"center"}},null,-1),rq={style:{"text-align":"left"}},aq=t("code",null,"树",-1),hq=t("code",null,"深度优先搜索",-1),uq=t("code",null,"二叉树",-1),fq={style:{"text-align":"left"}},gq=t("td",{style:{"text-align":"center"}},"面试题 04.09",-1),mq={style:{"text-align":"left"}},yq={href:"https://leetcode.cn/problems/bst-sequences-lcci",target:"_blank",rel:"noopener noreferrer"},xq=t("td",{style:{"text-align":"center"}},null,-1),bq={style:{"text-align":"left"}},pq=t("code",null,"树",-1),jq=t("code",null,"二叉搜索树",-1),kq=t("code",null,"回溯",-1),Mq=t("code",null,"1+",-1),vq={style:{"text-align":"left"}},Iq=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),Eq={style:{"text-align":"left"}},wq={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},zq=t("td",{style:{"text-align":"center"}},null,-1),Oq={style:{"text-align":"left"}},qq=t("code",null,"树",-1),Hq=t("code",null,"深度优先搜索",-1),Lq=t("code",null,"二叉树",-1),Cq=t("code",null,"2+",-1),Nq={style:{"text-align":"left"}},Pq=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),Kq={style:{"text-align":"left"}},Bq={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},Vq=t("td",{style:{"text-align":"center"}},null,-1),Tq={style:{"text-align":"left"}},Uq=t("code",null,"树",-1),Rq=t("code",null,"深度优先搜索",-1),Wq=t("code",null,"二叉树",-1),Gq={style:{"text-align":"left"}},Yq=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),Qq={style:{"text-align":"left"}},Sq={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},Dq=t("td",{style:{"text-align":"center"}},null,-1),Zq={style:{"text-align":"left"}},Aq=t("code",null,"栈",-1),Fq=t("code",null,"树",-1),Jq=t("code",null,"深度优先搜索",-1),Xq=t("code",null,"3+",-1),$q={style:{"text-align":"left"}};function tH(eH,lH){const s=_("RouterLink"),n=_("ExternalLinkIcon"),d=_("font");return i(),r("div",null,[u,t("details",f,[g,m,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[j]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[I]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[E]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[w]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[z]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[O]),_:1}),l(),q,l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[H]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[L]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[C]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[N]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[P]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[K]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/strongly-connected-component.html"},{default:o(()=>[B]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[V]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:o(()=>[T]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[U]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[R]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[W]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[G]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[Y]),_:1})]),Q,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[S]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[D]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[Z]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[A]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[F]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[J]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[X]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[st]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[nt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[rt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/counting.html"},{default:o(()=>[at]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:o(()=>[jt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:o(()=>[It]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/reservoir-sampling.html"},{default:o(()=>[Et]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/rejection-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/database.html"},{default:o(()=>[zt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Ot]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:o(()=>[qt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[Ht]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/interactive.html"},{default:o(()=>[Lt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/iterator.html"},{default:o(()=>[Ct]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/concurrency.html"},{default:o(()=>[Nt]),_:1})])]),Pt,a(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Bt,t("td",Vt,[t("a",Tt,[l("二叉树的中序遍历"),e(n)])]),t("td",Ut,[e(s,{to:"/leetcode-js/problem/0094.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Rt,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Wt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Gt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Yt]),_:1}),l(),Qt]),t("td",St,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Dt,t("td",Zt,[t("a",At,[l("不同的二叉搜索树 II"),e(n)])]),t("td",Ft,[e(s,{to:"/leetcode-js/problem/0095.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Jt,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Xt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[$t]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[te]),_:1}),l(),ee]),t("td",le,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oe,t("td",se,[t("a",ne,[l("不同的二叉搜索树"),e(n)])]),t("td",de,[e(s,{to:"/leetcode-js/problem/0096.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_e,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ce]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[ie]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[re]),_:1}),l(),ae]),t("td",he,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[l("验证二叉搜索树"),e(n)])]),t("td",me,[e(s,{to:"/leetcode-js/problem/0098.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ye,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[xe]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[be]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[pe]),_:1}),l(),je]),t("td",ke,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Me,t("td",ve,[t("a",Ie,[l("恢复二叉搜索树"),e(n)])]),t("td",Ee,[e(s,{to:"/leetcode-js/problem/0099.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",we,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ze]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Oe]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[qe]),_:1}),l(),He]),t("td",Le,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ce,t("td",Ne,[t("a",Pe,[l("相同的树"),e(n)])]),t("td",Ke,[e(s,{to:"/leetcode-js/problem/0100.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Be,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ve]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Te]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ue]),_:1}),l(),Re]),t("td",We,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ge,t("td",Ye,[t("a",Qe,[l("对称二叉树"),e(n)])]),t("td",Se,[e(s,{to:"/leetcode-js/problem/0101.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",De,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ze]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ae]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Fe]),_:1}),l(),Je]),t("td",Xe,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$e,t("td",tl,[t("a",el,[l("二叉树的层序遍历"),e(n)])]),t("td",ll,[e(s,{to:"/leetcode-js/problem/0102.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ol,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[sl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[nl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[dl]),_:1})]),t("td",_l,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cl,t("td",il,[t("a",rl,[l("二叉树的锯齿形层序遍历"),e(n)])]),t("td",al,[e(s,{to:"/leetcode-js/problem/0103.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hl,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ul]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[fl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[gl]),_:1})]),t("td",ml,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yl,t("td",xl,[t("a",bl,[l("二叉树的最大深度"),e(n)])]),t("td",pl,[e(s,{to:"/leetcode-js/problem/0104.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",jl,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[kl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ml]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[vl]),_:1}),l(),Il]),t("td",El,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wl,t("td",zl,[t("a",Ol,[l("从前序与中序遍历序列构造二叉树"),e(n)])]),t("td",ql,[e(s,{to:"/leetcode-js/problem/0105.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Hl,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ll]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Cl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Nl]),_:1}),l(),Pl]),t("td",Kl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bl,t("td",Vl,[t("a",Tl,[l("从中序与后序遍历序列构造二叉树"),e(n)])]),t("td",Ul,[e(s,{to:"/leetcode-js/problem/0106.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Rl,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Wl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Gl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Yl]),_:1}),l(),Ql]),t("td",Sl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dl,t("td",Zl,[t("a",Al,[l("二叉树的层序遍历 II"),e(n)])]),t("td",Fl,[e(s,{to:"/leetcode-js/problem/0107.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Jl,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Xl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$l]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[to]),_:1})]),t("td",eo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lo,t("td",oo,[t("a",so,[l("将有序数组转换为二叉搜索树"),e(n)])]),t("td",no,[e(s,{to:"/leetcode-js/problem/0108.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_o,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[co]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[io]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ro]),_:1}),l(),ao]),t("td",ho,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[uo,t("td",fo,[t("a",go,[l("有序链表转换二叉搜索树"),e(n)])]),t("td",mo,[e(s,{to:"/leetcode-js/problem/0109.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yo,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[xo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[bo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[po]),_:1}),l(),jo]),t("td",ko,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mo,t("td",vo,[t("a",Io,[l("平衡二叉树"),e(n)])]),t("td",Eo,[e(s,{to:"/leetcode-js/problem/0110.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wo,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[zo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Oo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[qo]),_:1})]),t("td",Ho,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Lo,t("td",Co,[t("a",No,[l("二叉树的最小深度"),e(n)])]),t("td",Po,[e(s,{to:"/leetcode-js/problem/0111.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ko,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Bo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Vo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[To]),_:1}),l(),Uo]),t("td",Ro,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Wo,t("td",Go,[t("a",Yo,[l("路径总和"),e(n)])]),t("td",Qo,[e(s,{to:"/leetcode-js/problem/0112.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",So,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Do]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Zo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ao]),_:1}),l(),Fo]),t("td",Jo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xo,t("td",$o,[t("a",ts,[l("路径总和 II"),e(n)])]),t("td",es,[e(s,{to:"/leetcode-js/problem/0113.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ls,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[os]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ss]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[ns]),_:1}),l(),ds]),t("td",_s,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cs,t("td",is,[t("a",rs,[l("二叉树展开为链表"),e(n)])]),t("td",as,[e(s,{to:"/leetcode-js/problem/0114.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hs,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[us]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[gs]),_:1}),l(),ms]),t("td",ys,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xs,t("td",bs,[t("a",ps,[l("填充每个节点的下一个右侧节点指针"),e(n)])]),t("td",js,[e(s,{to:"/leetcode-js/problem/0116.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ks,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ms]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[vs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Is]),_:1}),l(),Es]),t("td",ws,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zs,t("td",Os,[t("a",qs,[l("填充每个节点的下一个右侧节点指针 II"),e(n)])]),t("td",Hs,[e(s,{to:"/leetcode-js/problem/0117.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ls,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Cs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ns]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ps]),_:1}),l(),Ks]),t("td",Bs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vs,t("td",Ts,[t("a",Us,[l("二叉树中的最大路径和"),e(n)])]),t("td",Rs,[e(s,{to:"/leetcode-js/problem/0124.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ws,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Gs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ys]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Qs]),_:1}),l(),Ss]),t("td",Ds,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zs,t("td",As,[t("a",Fs,[l("求根节点到叶节点数字之和"),e(n)])]),t("td",Js,[e(s,{to:"/leetcode-js/problem/0129.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Xs,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$s]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[tn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[en]),_:1})]),t("td",ln,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[on,t("td",sn,[t("a",nn,[l("二叉树的前序遍历"),e(n)])]),t("td",dn,[e(s,{to:"/leetcode-js/problem/0144.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_n,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[cn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[rn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[an]),_:1}),l(),hn]),t("td",un,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fn,t("td",gn,[t("a",mn,[l("二叉树的后序遍历"),e(n)])]),t("td",yn,[e(s,{to:"/leetcode-js/problem/0145.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xn,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[bn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[pn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[jn]),_:1}),l(),kn]),t("td",Mn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vn,t("td",In,[t("a",En,[l("上下翻转二叉树"),e(n)])]),t("td",wn,[e(s,{to:"/leetcode-js/problem/0156.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",zn,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[On]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[qn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Hn]),_:1})]),t("td",Ln,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cn,t("td",Nn,[t("a",Pn,[l("二叉搜索树迭代器"),e(n)])]),t("td",Kn,[e(s,{to:"/leetcode-js/problem/0173.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Bn,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Vn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Tn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Un]),_:1}),l(),Rn]),t("td",Wn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gn,t("td",Yn,[t("a",Qn,[l("二叉树的右视图"),e(n)])]),t("td",Sn,[e(s,{to:"/leetcode-js/problem/0199.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Dn,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Zn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[An]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Fn]),_:1}),l(),Jn]),t("td",Xn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$n,t("td",td,[t("a",ed,[l("完全二叉树的节点个数"),e(n)])]),t("td",ld,[e(s,{to:"/leetcode-js/problem/0222.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",od,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[sd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[nd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[dd]),_:1}),l(),_d]),t("td",cd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[id,t("td",rd,[t("a",ad,[l("翻转二叉树"),e(n)])]),t("td",hd,[e(s,{to:"/leetcode-js/problem/0226.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ud,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[gd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[md]),_:1}),l(),yd]),t("td",xd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[bd,t("td",pd,[t("a",jd,[l("二叉搜索树中第 K 小的元素"),e(n)])]),t("td",kd,[e(s,{to:"/leetcode-js/problem/0230.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Md,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[vd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Id]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Ed]),_:1}),l(),wd]),t("td",zd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Od,t("td",qd,[t("a",Hd,[l("二叉搜索树的最近公共祖先"),e(n)])]),t("td",Ld,[e(s,{to:"/leetcode-js/problem/0235.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Cd,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Nd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Pd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Kd]),_:1}),l(),Bd]),t("td",Vd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Td,t("td",Ud,[t("a",Rd,[l("二叉树的最近公共祖先"),e(n)])]),t("td",Wd,[e(s,{to:"/leetcode-js/problem/0236.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gd,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Yd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Qd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Sd]),_:1})]),t("td",Dd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zd,t("td",Ad,[t("a",Fd,[l("统计同值子树"),e(n)])]),Jd,t("td",Xd,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$d]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[t_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[e_]),_:1})]),t("td",l_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o_,t("td",s_,[t("a",n_,[l("验证二叉搜索树的前序遍历序列"),e(n)])]),d_,t("td",__,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[c_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[i_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[r_]),_:1}),l(),a_]),t("td",h_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u_,t("td",f_,[t("a",g_,[l("二叉树的所有路径"),e(n)])]),t("td",m_,[e(s,{to:"/leetcode-js/problem/0257.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",y_,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[x_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[b_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[p_]),_:1}),l(),j_]),t("td",k_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[M_,t("td",v_,[t("a",I_,[l("最接近的二叉搜索树值"),e(n)])]),E_,t("td",w_,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[z_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[O_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[q_]),_:1}),l(),H_]),t("td",L_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[C_,t("td",N_,[t("a",P_,[l("最接近的二叉搜索树值 II"),e(n)])]),K_,t("td",B_,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[V_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[T_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[U_]),_:1}),l(),R_]),t("td",W_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[G_,t("td",Y_,[t("a",Q_,[l("二叉搜索树中的中序后继"),e(n)])]),S_,t("td",D_,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Z_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[A_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[F_]),_:1}),l(),J_]),t("td",X_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$_,t("td",tc,[t("a",ec,[l("二叉树的序列化与反序列化"),e(n)])]),t("td",lc,[e(s,{to:"/leetcode-js/problem/0297.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",oc,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[sc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[nc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[dc]),_:1}),l(),_c]),t("td",cc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ic,t("td",rc,[t("a",ac,[l("二叉树最长连续序列"),e(n)])]),hc,t("td",uc,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[gc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[mc]),_:1})]),t("td",yc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xc,t("td",bc,[t("a",pc,[l("二叉树的垂直遍历"),e(n)])]),jc,t("td",kc,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Mc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[vc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ic]),_:1}),l(),Ec]),t("td",wc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zc,t("td",Oc,[t("a",qc,[l("验证二叉树的前序序列化"),e(n)])]),Hc,t("td",Lc,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Cc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Nc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Pc]),_:1}),l(),Kc]),t("td",Bc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vc,t("td",Tc,[t("a",Uc,[l("最大二叉搜索子树"),e(n)])]),Rc,t("td",Wc,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Gc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Yc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Qc]),_:1}),l(),Sc]),t("td",Dc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zc,t("td",Ac,[t("a",Fc,[l("打家劫舍 III"),e(n)])]),Jc,t("td",Xc,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$c]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ti]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ei]),_:1}),l(),li]),t("td",oi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[si,t("td",ni,[t("a",di,[l("寻找二叉树的叶子节点"),e(n)])]),t("td",_i,[e(s,{to:"/leetcode-js/problem/0366.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ci,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ii]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ri]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[ai]),_:1})]),t("td",hi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ui,t("td",fi,[t("a",gi,[l("左叶子之和"),e(n)])]),mi,t("td",yi,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[xi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[bi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[pi]),_:1}),l(),ji]),t("td",ki,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mi,t("td",vi,[t("a",Ii,[l("将二叉搜索树转化为排序的双向链表"),e(n)])]),t("td",Ei,[e(s,{to:"/leetcode-js/problem/0426.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wi,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[zi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Oi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[qi]),_:1}),l(),Hi]),t("td",Li,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ci,t("td",Ni,[t("a",Pi,[l("将 N 叉树编码为二叉树"),e(n)])]),Ki,t("td",Bi,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Vi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ti]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ui]),_:1}),l(),Ri]),t("td",Wi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gi,t("td",Yi,[t("a",Qi,[l("路径总和 III"),e(n)])]),t("td",Si,[e(s,{to:"/leetcode-js/problem/0437.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Di,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Zi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ai]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Fi]),_:1})]),t("td",Ji,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xi,t("td",$i,[t("a",tr,[l("序列化和反序列化二叉搜索树"),e(n)])]),er,t("td",lr,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[or]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[sr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[nr]),_:1}),l(),dr]),t("td",_r,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cr,t("td",ir,[t("a",rr,[l("删除二叉搜索树中的节点"),e(n)])]),t("td",ar,[e(s,{to:"/leetcode-js/problem/0450.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hr,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ur]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[fr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[gr]),_:1})]),t("td",mr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yr,t("td",xr,[t("a",br,[l("二叉搜索树中的众数"),e(n)])]),pr,t("td",jr,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[kr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Mr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[vr]),_:1}),l(),Ir]),t("td",Er,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wr,t("td",zr,[t("a",Or,[l("出现次数最多的子树元素和"),e(n)])]),qr,t("td",Hr,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Lr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Cr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Nr]),_:1}),l(),Pr]),t("td",Kr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Br,t("td",Vr,[t("a",Tr,[l("二叉搜索树中的中序后继 II"),e(n)])]),Ur,t("td",Rr,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Wr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Gr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Yr]),_:1})]),t("td",Qr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sr,t("td",Dr,[t("a",Zr,[l("找树左下角的值"),e(n)])]),Ar,t("td",Fr,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Jr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Xr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$r]),_:1}),l(),ta]),t("td",ea,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[la,t("td",oa,[t("a",sa,[l("在每个树行中找最大值"),e(n)])]),na,t("td",da,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[_a]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ca]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ia]),_:1}),l(),ra]),t("td",aa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ha,t("td",ua,[t("a",fa,[l("二叉搜索树的最小绝对差"),e(n)])]),t("td",ga,[e(s,{to:"/leetcode-js/problem/0530.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ma,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ya]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[xa]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ba]),_:1}),l(),pa]),t("td",ja,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ka,t("td",Ma,[t("a",va,[l("从字符串生成二叉树"),e(n)])]),Ia,t("td",Ea,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[wa]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[za]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Oa]),_:1}),l(),qa]),t("td",Ha,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[La,t("td",Ca,[t("a",Na,[l("把二叉搜索树转换为累加树"),e(n)])]),Pa,t("td",Ka,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ba]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Va]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Ta]),_:1}),l(),Ua]),t("td",Ra,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wa,t("td",Ga,[t("a",Ya,[l("二叉树的直径"),e(n)])]),t("td",Qa,[e(s,{to:"/leetcode-js/problem/0543.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Sa,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Da]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Za]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Aa]),_:1})]),t("td",Fa,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ja,t("td",Xa,[t("a",$a,[l("二叉树的边界"),e(n)])]),t1,t("td",e1,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[l1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[o1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[s1]),_:1})]),t("td",n1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d1,t("td",_1,[t("a",c1,[l("二叉树最长连续序列 II"),e(n)])]),i1,t("td",r1,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[a1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[h1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[u1]),_:1})]),t("td",f1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g1,t("td",m1,[t("a",y1,[l("二叉树的坡度"),e(n)])]),x1,t("td",b1,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[p1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[j1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[k1]),_:1})]),t("td",M1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[v1,t("td",I1,[t("a",E1,[l("另一棵树的子树"),e(n)])]),t("td",w1,[e(s,{to:"/leetcode-js/problem/0572.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",z1,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[O1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[q1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[H1]),_:1}),l(),L1]),t("td",C1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[N1,t("td",P1,[t("a",K1,[l("根据二叉树创建字符串"),e(n)])]),B1,t("td",V1,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[T1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[U1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[R1]),_:1}),l(),W1]),t("td",G1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y1,t("td",Q1,[t("a",S1,[l("合并二叉树"),e(n)])]),t("td",D1,[e(s,{to:"/leetcode-js/problem/0617.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Z1,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[A1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[F1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[J1]),_:1}),l(),X1]),t("td",$1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[th,t("td",eh,[t("a",lh,[l("在二叉树中增加一行"),e(n)])]),oh,t("td",sh,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[nh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[_h]),_:1}),l(),ch]),t("td",ih,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rh,t("td",ah,[t("a",hh,[l("二叉树的层平均值"),e(n)])]),t("td",uh,[e(s,{to:"/leetcode-js/problem/0637.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fh,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[gh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[mh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[yh]),_:1}),l(),xh]),t("td",bh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ph,t("td",jh,[t("a",kh,[l("寻找重复的子树"),e(n)])]),Mh,t("td",vh,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ih]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Eh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[wh]),_:1}),l(),zh]),t("td",Oh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qh,t("td",Hh,[t("a",Lh,[l("两数之和 IV - 输入二叉搜索树"),e(n)])]),Ch,t("td",Nh,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ph]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Kh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Bh]),_:1}),l(),Vh]),t("td",Th,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Uh,t("td",Rh,[t("a",Wh,[l("最大二叉树"),e(n)])]),t("td",Gh,[e(s,{to:"/leetcode-js/problem/0654.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yh,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Qh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Sh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Dh]),_:1}),l(),Zh]),t("td",Ah,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fh,t("td",Jh,[t("a",Xh,[l("输出二叉树"),e(n)])]),$h,t("td",tu,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[eu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[lu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ou]),_:1}),l(),su]),t("td",nu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[du,t("td",_u,[t("a",cu,[l("二叉树最大宽度"),e(n)])]),t("td",iu,[e(s,{to:"/leetcode-js/problem/0662.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ru,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[au]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[hu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[uu]),_:1}),l(),fu]),t("td",gu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mu,t("td",yu,[t("a",xu,[l("均匀树划分"),e(n)])]),bu,t("td",pu,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ju]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ku]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Mu]),_:1})]),t("td",vu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Iu,t("td",Eu,[t("a",wu,[l("路径总和 IV"),e(n)])]),zu,t("td",Ou,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[qu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Hu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Lu]),_:1}),l(),Cu]),t("td",Nu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pu,t("td",Ku,[t("a",Bu,[l("修剪二叉搜索树"),e(n)])]),Vu,t("td",Tu,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Uu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ru]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Wu]),_:1}),l(),Gu]),t("td",Yu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qu,t("td",Su,[t("a",Du,[l("二叉树中第二小的节点"),e(n)])]),Zu,t("td",Au,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Fu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ju]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Xu]),_:1})]),t("td",$u,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[tf,t("td",ef,[t("a",lf,[l("最长同值路径"),e(n)])]),of,t("td",sf,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[nf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[df]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[_f]),_:1})]),t("td",cf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rf,t("td",af,[t("a",hf,[l("二叉搜索树中的搜索"),e(n)])]),t("td",uf,[e(s,{to:"/leetcode-js/problem/0700.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ff,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[gf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[mf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[yf]),_:1})]),t("td",xf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[bf,t("td",pf,[t("a",jf,[l("二叉搜索树中的插入操作"),e(n)])]),t("td",kf,[e(s,{to:"/leetcode-js/problem/0701.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Mf,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[vf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[If]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Ef]),_:1})]),t("td",wf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zf,t("td",Of,[t("a",qf,[l("数据流中的第 K 大元素"),e(n)])]),t("td",Hf,[e(s,{to:"/leetcode-js/problem/0703.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Lf,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Cf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Nf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Pf]),_:1}),l(),Kf]),t("td",Bf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Vf,t("td",Tf,[t("a",Uf,[l("二叉树最近的叶节点"),e(n)])]),Rf,t("td",Wf,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Gf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Yf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Qf]),_:1}),l(),Sf]),t("td",Df,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zf,t("td",Af,[t("a",Ff,[l("拆分二叉搜索树"),e(n)])]),Jf,t("td",Xf,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$f]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[tg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[eg]),_:1}),l(),lg]),t("td",og,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sg,t("td",ng,[t("a",dg,[l("二叉搜索树节点最小距离"),e(n)])]),t("td",_g,[e(s,{to:"/leetcode-js/problem/0783.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",cg,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ig]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[rg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ag]),_:1}),l(),hg]),t("td",ug,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fg,t("td",gg,[t("a",mg,[l("二叉树剪枝"),e(n)])]),yg,t("td",xg,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[bg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[pg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[jg]),_:1})]),t("td",kg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mg,t("td",vg,[t("a",Ig,[l("二叉树中所有距离为 K 的结点"),e(n)])]),Eg,t("td",wg,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[zg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Og]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[qg]),_:1}),l(),Hg]),t("td",Lg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cg,t("td",Ng,[t("a",Pg,[l("具有所有最深节点的最小子树"),e(n)])]),Kg,t("td",Bg,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Vg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Tg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ug]),_:1}),l(),Rg]),t("td",Wg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gg,t("td",Yg,[t("a",Qg,[l("叶子相似的树"),e(n)])]),Sg,t("td",Dg,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Zg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ag]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Fg]),_:1})]),t("td",Jg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xg,t("td",$g,[t("a",tm,[l("根据前序和后序遍历构造二叉树"),e(n)])]),t("td",em,[e(s,{to:"/leetcode-js/problem/0889.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",lm,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[om]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[sm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[nm]),_:1}),l(),dm]),t("td",_m,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cm,t("td",im,[t("a",rm,[l("所有可能的真二叉树"),e(n)])]),am,t("td",hm,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[um]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[fm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[gm]),_:1}),l(),mm]),t("td",ym,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xm,t("td",bm,[t("a",pm,[l("递增顺序搜索树"),e(n)])]),jm,t("td",km,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Mm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[vm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Im]),_:1}),l(),Em]),t("td",wm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zm,t("td",Om,[t("a",qm,[l("完全二叉树插入器"),e(n)])]),Hm,t("td",Lm,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Cm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Nm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Pm]),_:1}),l(),Km]),t("td",Bm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vm,t("td",Tm,[t("a",Um,[l("二叉搜索树的范围和"),e(n)])]),Rm,t("td",Wm,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Gm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ym]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Qm]),_:1}),l(),Sm]),t("td",Dm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zm,t("td",Am,[t("a",Fm,[l("翻转等价二叉树"),e(n)])]),Jm,t("td",Xm,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$m]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ty]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[ey]),_:1})]),t("td",ly,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oy,t("td",sy,[t("a",ny,[l("二叉树的完全性检验"),e(n)])]),t("td",dy,[e(s,{to:"/leetcode-js/problem/0958.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_y,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[cy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[iy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[ry]),_:1})]),t("td",ay,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hy,t("td",uy,[t("a",fy,[l("单值二叉树"),e(n)])]),gy,t("td",my,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[yy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[xy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[by]),_:1}),l(),py]),t("td",jy,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ky,t("td",My,[t("a",vy,[l("监控二叉树"),e(n)])]),Iy,t("td",Ey,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[wy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[zy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Oy]),_:1}),l(),qy]),t("td",Hy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ly,t("td",Cy,[t("a",Ny,[l("翻转二叉树以匹配先序遍历"),e(n)])]),Py,t("td",Ky,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[By]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Vy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Ty]),_:1})]),t("td",Uy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ry,t("td",Wy,[t("a",Gy,[l("在二叉树中分配硬币"),e(n)])]),Yy,t("td",Qy,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Sy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Dy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Zy]),_:1})]),t("td",Ay,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fy,t("td",Jy,[t("a",Xy,[l("二叉树的垂序遍历"),e(n)])]),$y,t("td",tx,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ex]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[lx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ox]),_:1}),l(),sx]),t("td",nx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dx,t("td",_x,[t("a",cx,[l("从叶结点开始的最小字符串"),e(n)])]),ix,t("td",rx,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ax]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[hx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[ux]),_:1}),l(),fx]),t("td",gx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mx,t("td",yx,[t("a",xx,[l("二叉树的堂兄弟节点"),e(n)])]),bx,t("td",px,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[jx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[kx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Mx]),_:1}),l(),vx]),t("td",Ix,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ex,t("td",wx,[t("a",zx,[l("最大二叉树 II"),e(n)])]),Ox,t("td",qx,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Hx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Lx]),_:1})]),t("td",Cx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nx,t("td",Px,[t("a",Kx,[l("前序遍历构造二叉搜索树"),e(n)])]),t("td",Bx,[e(s,{to:"/leetcode-js/problem/1008.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Vx,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Tx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ux]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Rx]),_:1}),l(),Wx]),t("td",Gx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yx,t("td",Qx,[t("a",Sx,[l("从根到叶的二进制数之和"),e(n)])]),Dx,t("td",Zx,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ax]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Fx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Jx]),_:1})]),t("td",Xx,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$x,t("td",tb,[t("a",eb,[l("节点与其祖先之间的最大差值"),e(n)])]),lb,t("td",ob,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[sb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[nb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[db]),_:1})]),t("td",_b,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cb,t("td",ib,[t("a",rb,[l("从先序遍历还原二叉树"),e(n)])]),ab,t("td",hb,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ub]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[fb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[gb]),_:1}),l(),mb]),t("td",yb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xb,t("td",bb,[t("a",pb,[l("从二叉搜索树到更大和树"),e(n)])]),jb,t("td",kb,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Mb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[vb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Ib]),_:1}),l(),Eb]),t("td",wb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zb,t("td",Ob,[t("a",qb,[l("根到叶路径上的不足节点"),e(n)])]),Hb,t("td",Lb,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Cb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Nb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Pb]),_:1})]),t("td",Kb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bb,t("td",Vb,[t("a",Tb,[l("二叉树寻路"),e(n)])]),Ub,t("td",Rb,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Wb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Gb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Yb]),_:1})]),t("td",Qb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sb,t("td",Db,[t("a",Zb,[l("删点成林"),e(n)])]),Ab,t("td",Fb,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Jb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Xb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[$b]),_:1}),l(),t2]),t("td",e2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l2,t("td",o2,[t("a",s2,[l("子树的最大平均值"),e(n)])]),n2,t("td",d2,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[_2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[c2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[i2]),_:1})]),t("td",r2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a2,t("td",h2,[t("a",u2,[l("最深叶节点的最近公共祖先"),e(n)])]),f2,t("td",g2,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[m2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[y2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[x2]),_:1}),l(),b2]),t("td",p2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j2,t("td",k2,[t("a",M2,[l("二叉树着色游戏"),e(n)])]),v2,t("td",I2,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[E2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[w2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[z2]),_:1})]),t("td",O2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q2,t("td",H2,[t("a",L2,[l("最大层内元素和"),e(n)])]),C2,t("td",N2,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[P2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[K2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[B2]),_:1}),l(),V2]),t("td",T2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U2,t("td",R2,[t("a",W2,[l("查找两棵二叉搜索树之和"),e(n)])]),G2,t("td",Y2,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Q2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[S2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[D2]),_:1}),l(),Z2]),t("td",A2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F2,t("td",J2,[t("a",X2,[l("在受污染的二叉树中查找元素"),e(n)])]),$2,t("td",t0,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[e0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[l0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[o0]),_:1}),l(),s0]),t("td",n0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d0,t("td",_0,[t("a",c0,[l("层数最深叶子节点的和"),e(n)])]),i0,t("td",r0,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[a0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[h0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[u0]),_:1}),l(),f0]),t("td",g0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m0,t("td",y0,[t("a",x0,[l("两棵二叉搜索树中的所有元素"),e(n)])]),b0,t("td",p0,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[j0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[k0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[M0]),_:1}),l(),v0]),t("td",I0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E0,t("td",w0,[t("a",z0,[l("祖父节点值为偶数的节点和"),e(n)])]),O0,t("td",q0,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[H0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[L0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[C0]),_:1}),l(),N0]),t("td",P0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K0,t("td",B0,[t("a",V0,[l("删除给定值的叶子节点"),e(n)])]),T0,t("td",U0,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[R0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[W0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[G0]),_:1})]),t("td",Y0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q0,t("td",S0,[t("a",D0,[l("分裂二叉树的最大乘积"),e(n)])]),Z0,t("td",A0,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[F0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[J0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[X0]),_:1})]),t("td",$0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tp,t("td",ep,[t("a",lp,[l("验证二叉树"),e(n)])]),op,t("td",sp,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[np]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[_p]),_:1}),l(),cp]),t("td",ip,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rp,t("td",ap,[t("a",hp,[l("二叉树中的链表"),e(n)])]),up,t("td",fp,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[gp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[mp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[yp]),_:1}),l(),xp]),t("td",bp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pp,t("td",jp,[t("a",kp,[l("二叉树中的最长交错路径"),e(n)])]),Mp,t("td",vp,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ip]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ep]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[wp]),_:1}),l(),zp]),t("td",Op,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qp,t("td",Hp,[t("a",Lp,[l("二叉搜索子树的最大键值和"),e(n)])]),Cp,t("td",Np,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Pp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Kp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Bp]),_:1}),l(),Vp]),t("td",Tp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Up,t("td",Rp,[t("a",Wp,[l("找出克隆二叉树中的相同节点"),e(n)])]),Gp,t("td",Yp,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Qp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Sp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Dp]),_:1}),l(),Zp]),t("td",Ap,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fp,t("td",Jp,[t("a",Xp,[l("将二叉搜索树变平衡"),e(n)])]),$p,t("td",t6,[e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[e6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[l6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[o6]),_:1}),l(),s6]),t("td",n6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d6,t("td",_6,[t("a",c6,[l("判断给定的序列是否是二叉树从根到叶的路径"),e(n)])]),i6,t("td",r6,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[a6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[h6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[u6]),_:1}),l(),f6]),t("td",g6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m6,t("td",y6,[t("a",x6,[l("统计二叉树中好节点的数目"),e(n)])]),b6,t("td",p6,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[j6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[k6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[M6]),_:1}),l(),v6]),t("td",I6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E6,t("td",w6,[t("a",z6,[l("二叉树中的伪回文路径"),e(n)])]),O6,t("td",q6,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[H6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[L6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[C6]),_:1}),l(),N6]),t("td",P6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K6,t("td",B6,[t("a",V6,[l("寻找所有的独生节点"),e(n)])]),T6,t("td",U6,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[R6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[W6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[G6]),_:1}),l(),Y6]),t("td",Q6,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[S6,t("td",D6,[t("a",Z6,[l("克隆含随机指针的二叉树"),e(n)])]),A6,t("td",F6,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[J6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[X6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$6]),_:1}),l(),t8]),t("td",e8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l8,t("td",o8,[t("a",s8,[l("好叶子节点对的数量"),e(n)])]),n8,t("td",d8,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[_8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[c8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[i8]),_:1})]),t("td",r8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a8,t("td",h8,[t("a",u8,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(n)])]),f8,t("td",g8,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[m8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[y8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[x8]),_:1}),l(),b8]),t("td",p8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[j8,t("td",k8,[t("a",M8,[l("二叉搜索树迭代器 II"),e(n)])]),v8,t("td",I8,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[E8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[w8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[z8]),_:1}),l(),O8]),t("td",q8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H8,t("td",L8,[t("a",C8,[l("根据中缀表达式构造二叉表达式树"),e(n)])]),N8,t("td",P8,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[K8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[B8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[V8]),_:1}),l(),T8]),t("td",U8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[R8,t("td",W8,[t("a",G8,[l("找到二叉树中最近的右侧节点"),e(n)])]),Y8,t("td",Q8,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[S8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[D8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Z8]),_:1})]),t("td",A8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F8,t("td",J8,[t("a",X8,[l("奇偶树"),e(n)])]),$8,t("td",tj,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ej]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[lj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[oj]),_:1})]),t("td",sj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nj,t("td",dj,[t("a",_j,[l("检查两棵二叉表达式树是否等价"),e(n)])]),cj,t("td",ij,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[rj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[aj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[hj]),_:1}),l(),uj]),t("td",fj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gj,t("td",mj,[t("a",yj,[l("设计带解析函数的表达式树"),e(n)])]),xj,t("td",bj,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[pj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[jj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[kj]),_:1}),l(),Mj]),t("td",vj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ij,t("td",Ej,[t("a",wj,[l("二叉树的最近公共祖先 II"),e(n)])]),zj,t("td",Oj,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[qj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Hj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Lj]),_:1})]),t("td",Cj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nj,t("td",Pj,[t("a",Kj,[l("二叉树的最近公共祖先 III"),e(n)])]),Bj,t("td",Vj,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Tj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Uj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[Rj]),_:1}),l(),Wj]),t("td",Gj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yj,t("td",Qj,[t("a",Sj,[l("纠正二叉树"),e(n)])]),Dj,t("td",Zj,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Aj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Fj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Jj]),_:1}),l(),Xj]),t("td",$j,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t3,t("td",e3,[t("a",l3,[l("改变二叉树的根节点"),e(n)])]),o3,t("td",s3,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[n3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[d3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[_3]),_:1})]),t("td",c3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i3,t("td",r3,[t("a",a3,[l("二叉树的最近公共祖先 IV"),e(n)])]),h3,t("td",u3,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[f3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[g3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[m3]),_:1}),l(),y3]),t("td",x3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b3,t("td",p3,[t("a",j3,[l("找到二叉树中的距离"),e(n)])]),k3,t("td",M3,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[v3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[I3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[E3]),_:1}),l(),w3]),t("td",z3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O3,t("td",q3,[t("a",H3,[l("给定二叉搜索树的插入顺序求深度"),e(n)])]),L3,t("td",C3,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[N3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[P3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[K3]),_:1}),l(),B3]),t("td",V3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T3,t("td",U3,[t("a",R3,[l("合并多棵二叉搜索树"),e(n)])]),W3,t("td",G3,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Y3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Q3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[S3]),_:1}),l(),D3]),t("td",Z3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[A3,t("td",F3,[t("a",J3,[l("值等于子节点值之和的节点数量"),e(n)])]),X3,t("td",$3,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[t5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[e5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[l5]),_:1})]),t("td",o5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s5,t("td",n5,[t("a",d5,[l("斐波那契树的移除子树游戏"),e(n)])]),_5,t("td",c5,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[i5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[r5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[a5]),_:1}),l(),h5]),t("td",u5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f5,t("td",g5,[t("a",m5,[l("统计最高分的节点数目"),e(n)])]),y5,t("td",x5,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[b5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[p5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[j5]),_:1}),l(),k5]),t("td",M5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[v5,t("td",I5,[t("a",E5,[l("从二叉树一个节点到另一个节点每一步的方向"),e(n)])]),w5,t("td",z5,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[O5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[q5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[H5]),_:1}),l(),L5]),t("td",C5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N5,t("td",P5,[t("a",K5,[l("根据描述创建二叉树"),e(n)])]),t("td",B5,[e(s,{to:"/leetcode-js/problem/2196.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",V5,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[T5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[U5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[R5]),_:1}),l(),W5]),t("td",G5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y5,t("td",Q5,[t("a",S5,[l("判断根结点是否等于子结点之和"),e(n)])]),D5,t("td",Z5,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[A5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[F5]),_:1})]),t("td",J5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[X5,t("td",$5,[t("a",t4,[l("统计值等于子树平均值的节点数"),e(n)])]),e4,t("td",l4,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[o4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[s4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[n4]),_:1})]),t("td",d4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_4,t("td",c4,[t("a",i4,[l("二叉树中得到结果所需的最少翻转次数"),e(n)])]),r4,t("td",a4,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[h4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[u4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[f4]),_:1}),l(),g4]),t("td",m4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[y4,t("td",x4,[t("a",b4,[l("计算布尔二叉树的值"),e(n)])]),p4,t("td",j4,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[k4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[M4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[v4]),_:1})]),t("td",I4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[E4,t("td",w4,[t("a",z4,[l("感染二叉树需要的总时间"),e(n)])]),O4,t("td",q4,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[H4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[L4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[C4]),_:1}),l(),N4]),t("td",P4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K4,t("td",B4,[t("a",V4,[l("反转二叉树的奇数层"),e(n)])]),T4,t("td",U4,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[R4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[W4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[G4]),_:1}),l(),Y4]),t("td",Q4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S4,t("td",D4,[t("a",Z4,[l("值为 1 的节点数"),e(n)])]),A4,t("td",F4,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[J4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[X4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$4]),_:1}),l(),t9]),t("td",e9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l9,t("td",o9,[t("a",s9,[l("移除子树后的二叉树高度"),e(n)])]),n9,t("td",d9,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[_9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[c9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[i9]),_:1}),l(),r9]),t("td",a9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[h9,t("td",u9,[t("a",f9,[l("逐层排序二叉树所需的最少操作数目"),e(n)])]),g9,t("td",m9,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[y9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[x9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[b9]),_:1})]),t("td",p9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j9,t("td",k9,[t("a",M9,[l("二叉搜索树最近节点查询"),e(n)])]),v9,t("td",I9,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[E9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[w9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[z9]),_:1}),l(),O9]),t("td",q9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H9,t("td",L9,[t("a",C9,[l("查询树中环的长度"),e(n)])]),N9,t("td",P9,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[K9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[B9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[V9]),_:1})]),t("td",T9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[U9,t("td",R9,[t("a",W9,[l("二叉树中的第 K 大层和"),e(n)])]),G9,t("td",Y9,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Q9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[S9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[D9]),_:1}),l(),Z9]),t("td",A9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F9,t("td",J9,[t("a",X9,[l("二叉树的堂兄弟节点 II"),e(n)])]),$9,t("td",t7,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[e7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[l7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[o7]),_:1}),l(),s7]),t("td",n7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d7,t("td",_7,[t("a",c7,[l("使二叉树所有路径值相等的最小代价"),e(n)])]),i7,t("td",r7,[e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[a7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[h7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[u7]),_:1}),l(),f7]),t("td",g7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m7,t("td",y7,[t("a",x7,[l("从 Rope 树中提取第 K 个字符"),e(n)])]),b7,t("td",p7,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[j7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[k7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[M7]),_:1})]),t("td",v7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[I7,t("td",E7,[t("a",w7,[l("数组是否表示某二叉树的前序遍历"),e(n)])]),z7,t("td",O7,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[q7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[H7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[L7]),_:1}),l(),C7]),t("td",N7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P7,t("td",K7,[t("a",B7,[l("特殊二叉树的高度"),e(n)])]),V7,t("td",T7,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[U7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[R7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[W7]),_:1}),l(),G7]),t("td",Y7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q7,t("td",S7,[t("a",D7,[l("计算足够大的节点数"),e(n)])]),Z7,t("td",A7,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[F7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[J7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[X7]),_:1}),l(),$7]),t("td",tk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ek,t("td",lk,[t("a",ok,[l("找到具有最小和的树的层数"),e(n)])]),sk,t("td",nk,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[dk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[_k]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ck]),_:1}),l(),ik]),t("td",rk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ak,t("td",hk,[t("a",uk,[l("第 K 大的完美二叉子树的大小"),e(n)])]),t("td",fk,[e(s,{to:"/leetcode-js/problem/3319.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",gk,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[mk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[yk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[xk]),_:1}),l(),bk]),t("td",pk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jk,t("td",kk,[t("a",Mk,[l("二叉树任务调度"),e(n)])]),vk,t("td",Ik,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ek]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[wk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[zk]),_:1}),l(),Ok]),t("td",qk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hk,t("td",Lk,[t("a",Ck,[l("导航装置"),e(n)])]),Nk,t("td",Pk,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Kk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Bk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Vk]),_:1})]),t("td",Tk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Uk,t("td",Rk,[t("a",Wk,[l("二叉树染色"),e(n)])]),Gk,t("td",Yk,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Qk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Sk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Dk]),_:1})]),t("td",Zk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ak,t("td",Fk,[t("a",Jk,[l("开幕式焰火"),e(n)])]),Xk,t("td",$k,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[tM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[eM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[lM]),_:1}),l(),oM]),t("td",sM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[nM,t("td",dM,[t("a",_M,[l("二叉搜索树染色"),e(n)])]),cM,t("td",iM,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[rM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[aM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[hM]),_:1}),l(),uM]),t("td",fM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gM,t("td",mM,[t("a",yM,[l("力扣泡泡龙"),e(n)])]),xM,t("td",bM,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[pM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[kM]),_:1})]),t("td",MM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vM,t("td",IM,[t("a",EM,[l("二叉树灯饰"),e(n)])]),wM,t("td",zM,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[OM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[qM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[HM]),_:1}),l(),LM]),t("td",CM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NM,t("td",PM,[t("a",KM,[l("装饰树"),e(n)])]),BM,t("td",VM,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[TM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[UM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[RM]),_:1}),l(),WM]),t("td",GM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YM,t("td",QM,[t("a",SM,[l("重建二叉树"),e(n)])]),t("td",DM,[e(s,{to:"/leetcode-js/problem/jz_offer_07_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ZM,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[AM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[FM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[JM]),_:1}),l(),XM]),t("td",$M,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tv,t("td",ev,[t("a",lv,[l("树的子结构"),e(n)])]),t("td",ov,[e(s,{to:"/leetcode-js/problem/jz_offer_26_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",sv,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[nv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[_v]),_:1})]),t("td",cv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iv,t("td",rv,[t("a",av,[l("二叉树的镜像"),e(n)])]),t("td",hv,[e(s,{to:"/leetcode-js/problem/jz_offer_27_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",uv,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[gv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[mv]),_:1}),l(),yv]),t("td",xv,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[bv,t("td",pv,[t("a",jv,[l("对称的二叉树"),e(n)])]),t("td",kv,[e(s,{to:"/leetcode-js/problem/jz_offer_28_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Mv,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[vv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Iv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ev]),_:1}),l(),wv]),t("td",zv,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ov,t("td",qv,[t("a",Hv,[l("从上到下打印二叉树"),e(n)])]),t("td",Lv,[e(s,{to:"/leetcode-js/problem/jz_offer_32_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Cv,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Nv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Pv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Kv]),_:1})]),t("td",Bv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vv,t("td",Tv,[t("a",Uv,[l("从上到下打印二叉树 II"),e(n)])]),t("td",Rv,[e(s,{to:"/leetcode-js/problem/jz_offer_32_2.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Wv,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Gv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Yv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Qv]),_:1})]),t("td",Sv,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Dv,t("td",Zv,[t("a",Av,[l("从上到下打印二叉树 III"),e(n)])]),t("td",Fv,[e(s,{to:"/leetcode-js/problem/jz_offer_32_3.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Jv,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Xv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$v]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[tI]),_:1})]),t("td",eI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lI,t("td",oI,[t("a",sI,[l("二叉搜索树的后序遍历序列"),e(n)])]),t("td",nI,[e(s,{to:"/leetcode-js/problem/jz_offer_33_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",dI,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[_I]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[cI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[iI]),_:1}),l(),rI]),t("td",aI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hI,t("td",uI,[t("a",fI,[l("二叉树中和为某一值的路径"),e(n)])]),t("td",gI,[e(s,{to:"/leetcode-js/problem/jz_offer_34_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",mI,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[yI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[xI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[bI]),_:1}),l(),pI]),t("td",jI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kI,t("td",MI,[t("a",vI,[l("二叉搜索树与双向链表"),e(n)])]),t("td",II,[e(s,{to:"/leetcode-js/problem/jz_offer_36_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",EI,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[wI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[zI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[OI]),_:1}),l(),qI]),t("td",HI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LI,t("td",CI,[t("a",NI,[l("序列化二叉树"),e(n)])]),t("td",PI,[e(s,{to:"/leetcode-js/problem/jz_offer_37_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",KI,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[BI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[VI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[TI]),_:1}),l(),UI]),t("td",RI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[WI,t("td",GI,[t("a",YI,[l("二叉搜索树的第k大节点"),e(n)])]),t("td",QI,[e(s,{to:"/leetcode-js/problem/jz_offer_54_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",SI,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[DI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ZI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[AI]),_:1}),l(),FI]),t("td",JI,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[XI,t("td",$I,[t("a",tE,[l("二叉树的深度"),e(n)])]),t("td",eE,[e(s,{to:"/leetcode-js/problem/jz_offer_55_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",lE,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[oE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[sE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[nE]),_:1}),l(),dE]),t("td",_E,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[cE,t("td",iE,[t("a",rE,[l("平衡二叉树"),e(n)])]),aE,t("td",hE,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[uE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[fE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[gE]),_:1})]),t("td",mE,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yE,t("td",xE,[t("a",bE,[l("二叉搜索树的最近公共祖先"),e(n)])]),pE,t("td",jE,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[kE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ME]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[vE]),_:1}),l(),IE]),t("td",EE,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wE,t("td",zE,[t("a",OE,[l("二叉树的最近公共祖先"),e(n)])]),qE,t("td",HE,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[LE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[CE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[NE]),_:1})]),t("td",PE,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[KE,t("td",BE,[t("a",VE,[l("往完全二叉树添加节点"),e(n)])]),TE,t("td",UE,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[RE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[WE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[GE]),_:1}),l(),YE]),t("td",QE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SE,t("td",DE,[t("a",ZE,[l("二叉树每层的最大值"),e(n)])]),AE,t("td",FE,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[JE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[XE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$E]),_:1}),l(),tw]),t("td",ew,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lw,t("td",ow,[t("a",sw,[l("二叉树最底层最左边的值"),e(n)])]),nw,t("td",dw,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[_w]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[cw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[iw]),_:1}),l(),rw]),t("td",aw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hw,t("td",uw,[t("a",fw,[l("二叉树的右侧视图"),e(n)])]),gw,t("td",mw,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[yw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[xw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[bw]),_:1}),l(),pw]),t("td",jw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kw,t("td",Mw,[t("a",vw,[l("二叉树剪枝"),e(n)])]),Iw,t("td",Ew,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ww]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[zw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Ow]),_:1})]),t("td",qw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hw,t("td",Lw,[t("a",Cw,[l("序列化与反序列化二叉树"),e(n)])]),Nw,t("td",Pw,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Kw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Bw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Vw]),_:1}),l(),Tw]),t("td",Uw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rw,t("td",Ww,[t("a",Gw,[l("从根节点到叶节点的路径数字之和"),e(n)])]),Yw,t("td",Qw,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Sw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Dw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Zw]),_:1})]),t("td",Aw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fw,t("td",Jw,[t("a",Xw,[l("向下的路径节点之和"),e(n)])]),$w,t("td",tz,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ez]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[lz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[oz]),_:1})]),t("td",sz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nz,t("td",dz,[t("a",_z,[l("节点之和最大的路径"),e(n)])]),cz,t("td",iz,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[rz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[az]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[hz]),_:1}),l(),uz]),t("td",fz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gz,t("td",mz,[t("a",yz,[l("展平二叉搜索树"),e(n)])]),xz,t("td",bz,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[pz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[jz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[kz]),_:1}),l(),Mz]),t("td",vz,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Iz,t("td",Ez,[t("a",wz,[l("二叉搜索树中的中序后继"),e(n)])]),zz,t("td",Oz,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[qz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Hz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Lz]),_:1}),l(),Cz]),t("td",Nz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pz,t("td",Kz,[t("a",Bz,[l("所有大于等于节点的值之和"),e(n)])]),Vz,t("td",Tz,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Uz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Rz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Wz]),_:1}),l(),Gz]),t("td",Yz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qz,t("td",Sz,[t("a",Dz,[l("二叉搜索树迭代器"),e(n)])]),Zz,t("td",Az,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Fz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Jz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Xz]),_:1}),l(),$z]),t("td",tO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eO,t("td",lO,[t("a",oO,[l("数据流的第 K 大数值"),e(n)])]),sO,t("td",nO,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[dO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[_O]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[cO]),_:1}),l(),iO]),t("td",rO,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[aO,t("td",hO,[t("a",uO,[l("最小高度树"),e(n)])]),fO,t("td",gO,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[mO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[yO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[xO]),_:1}),l(),bO]),t("td",pO,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[jO,t("td",kO,[t("a",MO,[l("特定深度节点链表"),e(n)])]),vO,t("td",IO,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[EO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[wO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[zO]),_:1}),l(),OO]),t("td",qO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HO,t("td",LO,[t("a",CO,[l("检查平衡性"),e(n)])]),NO,t("td",PO,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[KO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[BO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[VO]),_:1})]),t("td",TO,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[UO,t("td",RO,[t("a",WO,[l("合法二叉搜索树"),e(n)])]),GO,t("td",YO,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[QO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[SO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[DO]),_:1}),l(),ZO]),t("td",AO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FO,t("td",JO,[t("a",XO,[l("后继者"),e(n)])]),$O,t("td",tq,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[eq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[lq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[oq]),_:1}),l(),sq]),t("td",nq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dq,t("td",_q,[t("a",cq,[l("首个共同祖先"),e(n)])]),iq,t("td",rq,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[aq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[hq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[uq]),_:1})]),t("td",fq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gq,t("td",mq,[t("a",yq,[l("二叉搜索树序列"),e(n)])]),xq,t("td",bq,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[pq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[jq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[kq]),_:1}),l(),Mq]),t("td",vq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Iq,t("td",Eq,[t("a",wq,[l("检查子树"),e(n)])]),zq,t("td",Oq,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[qq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Hq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Lq]),_:1}),l(),Cq]),t("td",Nq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pq,t("td",Kq,[t("a",Bq,[l("求和路径"),e(n)])]),Vq,t("td",Tq,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Uq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Rq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Wq]),_:1})]),t("td",Gq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yq,t("td",Qq,[t("a",Sq,[l("BiNode"),e(n)])]),Dq,t("td",Zq,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Aq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Fq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Jq]),_:1}),l(),Xq]),t("td",$q,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const sH=c(h,[["render",tH],["__file","binary-tree.html.vue"]]);export{sH as default};
