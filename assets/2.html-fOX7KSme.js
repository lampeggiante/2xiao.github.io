import{_ as r,r as i,o as u,c as k,a as n,b as s,d as p,w as a,e as o}from"./app-vMeOxso3.js";const d="/assets/react-1-WYCgc1_B.png",v={},m=n("h1",{id:"_2-实现-jsx",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-实现-jsx","aria-hidden":"true"},"#"),s(" 2. 实现 JSX")],-1),b={class:"hint-container info"},g=n("p",{class:"hint-container-title"},"摘要",-1),y=n("ul",null,[n("li",null,"源码目录结构分析"),n("li",null,"实现 JSX 方法"),n("li",null,"实现打包流程"),n("li",null,"调试打包结果")],-1),f={href:"https://github.com/2xiao/my-react/tree/v1.2",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"git tag v1.2",-1),w=n("h2",{id:"_1-源码目录结构",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-源码目录结构","aria-hidden":"true"},"#"),s(" 1. 源码目录结构")],-1),j={href:"https://github.com/facebook/react",target:"_blank",rel:"noopener noreferrer"},x=o('<ul><li>fixtures：测试用例</li><li>packages：主要部分，包含 scheduler，reconciler 等</li><li>scripts：react 构建相关</li></ul><p>其中，主要的包在 packages 目录下，主要包含以下模块：</p><ul><li>react：核心 Api 所在，如 React.createElement、React.Component</li><li>react-reconclier：协调器，react 的核心逻辑所在，在 render 阶段用来构建 fiber 节点，宿主环境无关</li><li>scheduler：调度器相关</li><li>react-server: ssr 相关</li><li>react-fetch: 请求相关</li><li>react-interactions: 和事件如点击事件相关</li><li>各种宿主环境的包： <ul><li>react-dom：浏览器环境</li><li>react-native-renderer：原生环境</li><li>react-art：canvas &amp; svg 渲染</li><li>react-noop-renderer：调试或 fiber 用</li></ul></li><li>辅助包： <ul><li>shared：公用辅助方法，宿主环境无关</li><li>react-is : 判断类型</li><li>react-client: 流相关</li><li>react-fetch: 数据请求相关</li><li>react-refresh: 热加载相关</li></ul></li></ul><p>我们先来实现 react 包中的 <code>createElement</code> 和 <code>jsx</code> 方法，并实现 react 包的打包流程。</p><h2 id="_2-实现-jsx-方法" tabindex="-1"><a class="header-anchor" href="#_2-实现-jsx-方法" aria-hidden="true">#</a> 2. 实现 JSX 方法</h2><p>在 React 中使用 JSX 语法描述用户界面，JSX 语法就是一种语法糖，是 一种 JavaScript 语法扩展，它允许开发者在 JavaScript 代码中直接编写类似 HTML 的代码，并在运行时将其转换为 React 元素。</p><p>JSX 转换就是将 JSX 源代码变成浏览器可以理解的 JavaScript 代码的过程，以下面的代码为例：</p>',7),_=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// JSX 源代码"),s(`
`),n("span",{class:"token keyword"},"import"),s(" React "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'react'"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"App"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token operator"},"<"),s("h1"),n("span",{class:"token operator"},">"),s("Hello World"),n("span",{class:"token operator"},"<"),n("span",{class:"token operator"},"/"),s("h1"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// React 17之前，JSX 转换结果"),s(`
`),n("span",{class:"token keyword"},"import"),s(" React "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'react'"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"App"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"return"),s(" React"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createElement"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'div'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Hello world!'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// React 17之后，JSX 转换结果"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" jsx "),n("span",{class:"token keyword"},"as"),s(" _jsx "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'react/jsx-runtime'"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"App"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"_jsx"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'div'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"children"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'Hello world!'"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),R=o(`<p>JSX 转换的过程大致分为两步：</p><ul><li>编译时：由 Babel 编译实现，Babel 会将 JSX 语法转换为标准的 JavaScript API；</li><li>运行时：由 React 实现，<code>jsx</code> 方法 和 <code>React.createElement</code> 方法；</li></ul><p>因此，我们只需要实现运行时的部分即可，即 <code>jsx</code> 方法和 <code>React.createElement</code> 方法，包括 dev 和 prod 两个环境。</p><p>我们先在 <code>packages</code> 文件夹下新建 <code>react</code> 文件夹，进入到这个文件夹下，执行 <code>pnpm init</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> packages/react

<span class="token function">pnpm</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>初始化的 <code>package.json</code>文件如下所示：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// packages/react/package.json</span>
<span class="token punctuation">{</span>
	<span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>main</code> 字段代表了 react 包的入口文件，<code>main</code> 对应的是 CommonJS 规范，由于我们的项目是使用 rollup 打包的，rollup 是原生支持 esModule 的，esModule 规范中对应 <code>main</code> 的字段为 <code>module</code>，所以我们将入口改为：<code>&quot;module&quot;: &quot;index.ts&quot;</code>；然后，删除 <code>scripts</code> 字段，在 <code>description</code> 字段中增加包描述，<code>dependencies</code> 字段指明了包的依赖，此时的 <code>package.json</code> 文件如下所示：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// packages/react/package.json</span>
<span class="token punctuation">{</span>
	<span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;react common functions&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.ts&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&quot;shared&quot;</span><span class="token operator">:</span> <span class="token string">&quot;workspace:*&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 react 包下新建一个 src 目录，在 src 目录下新建一个 jsx.ts 文件。</p><p>执行 <code>jsx</code> 方法和 <code>React.createElement</code> 方法的返回结果是一种被称为 <code>ReactElement</code> 的数据结构，所以我们首先要定义一下 <code>ReactElement</code> 的构造函数：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// packages/react/src/jsx.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">REACT_ELEMENT_TYPE</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;shared/ReactSymbols&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
	Type<span class="token punctuation">,</span>
	Ref<span class="token punctuation">,</span>
	Key<span class="token punctuation">,</span>
	Props<span class="token punctuation">,</span>
	ReactElementType<span class="token punctuation">,</span>
	ElementType
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;shared/ReactTypes&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">ReactElement</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>
	type<span class="token operator">:</span> Type<span class="token punctuation">,</span>
	key<span class="token operator">:</span> Key<span class="token punctuation">,</span>
	ref<span class="token operator">:</span> Ref<span class="token punctuation">,</span>
	props<span class="token operator">:</span> Props
<span class="token punctuation">)</span><span class="token operator">:</span> ReactElementType <span class="token punctuation">{</span>
	<span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">{</span>
		$$<span class="token keyword">typeof</span><span class="token operator">:</span> <span class="token constant">REACT_ELEMENT_TYPE</span><span class="token punctuation">,</span>
		type<span class="token punctuation">,</span>
		key<span class="token punctuation">,</span>
		ref<span class="token punctuation">,</span>
		props<span class="token punctuation">,</span>
		__mark<span class="token operator">:</span> <span class="token string">&#39;erxiao&#39;</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> element<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>$$typeof</code> 是一个内部使用的字段，通过这个字段来指明当前这个数据结构是一个<code>ReactElement</code>，<code>_mark</code> 字段是为了与官方 react 包做区分的一个自定义字段。</p><p>我们将所有的类型定义和公共方法都放在一个公用的 <code>shared</code> 包中。在 <code>packages</code> 文件夹下新建 <code>shared</code> 文件夹，进入到这个文件夹下，执行 <code>pnpm init</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> packages/shared

<span class="token function">pnpm</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>shared</code> 包不需要入口文件，因为它里面的所有方法都会直接在其他包里面被引用，代码如下：</p>`,16),E=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token comment"},"// packages/shared/package.json"),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token property"},'"name"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"shared"'),n("span",{class:"token punctuation"},","),s(`
	`),n("span",{class:"token property"},'"version"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"1.0.0"'),n("span",{class:"token punctuation"},","),s(`
	`),n("span",{class:"token property"},'"description"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"shared hepler functions and symbols"'),n("span",{class:"token punctuation"},","),s(`
	`),n("span",{class:"token property"},'"keywords"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
	`),n("span",{class:"token property"},'"author"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},","),s(`
	`),n("span",{class:"token property"},'"license"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"ISC"'),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token comment"},"// packages/shared/ReactSymbols.ts"),s(`

`),n("span",{class:"token keyword"},"const"),s(" supportSymbol "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"typeof"),s(" Symbol "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token string"},"'function'"),s(),n("span",{class:"token operator"},"&&"),s(" Symbol"),n("span",{class:"token punctuation"},"."),s("for"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// 表示普通的 React 元素，即通过 JSX 创建的组件或 DOM 元素"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token constant"},"REACT_ELEMENT_TYPE"),s(),n("span",{class:"token operator"},"="),s(` supportSymbol
	`),n("span",{class:"token operator"},"?"),s(" Symbol"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"for"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'react.element'"),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0xeac7"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token comment"},"// packages/shared/ReactTypes.ts"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token class-name"},"Type"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token class-name"},"Key"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token class-name"},"Props"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token class-name"},"Ref"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token class-name"},"ElementType"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"interface"),s(),n("span",{class:"token class-name"},"ReactElementType"),s(),n("span",{class:"token punctuation"},"{"),s(`
	$$`),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"symbol"),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},";"),s(`
	key`),n("span",{class:"token operator"},":"),s(" Key"),n("span",{class:"token punctuation"},";"),s(`
	props`),n("span",{class:"token operator"},":"),s(" Props"),n("span",{class:"token punctuation"},";"),s(`
	ref`),n("span",{class:"token operator"},":"),s(" Ref"),n("span",{class:"token punctuation"},";"),s(`
	type`),n("span",{class:"token operator"},":"),s(" ElementType"),n("span",{class:"token punctuation"},";"),s(`
	__mark`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"string"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),J=o(`<p>接着我们来实现 <code>jsx</code> 方法.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> jsx <span class="token keyword">as</span> _jsx <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react/jsx-runtime&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token function">_jsx</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">&#39;Hello world!&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从以上示例可以看出， <code>jsx</code> 方法接收两个参数，第一个参数 <code>type</code> 为组件的 type，第二个参数是其他配置，可能有第三个参数为组件的 <code>children</code>，返回一个 <code>ReactElement</code> 数据结构。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// packages/react/src/jsx.ts</span>
<span class="token comment">// ...之前的代码</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">jsx</span> <span class="token operator">=</span> <span class="token punctuation">(</span>type<span class="token operator">:</span> ElementType<span class="token punctuation">,</span> config<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token operator">...</span>children<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> key<span class="token operator">:</span> Key <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> ref<span class="token operator">:</span> Ref <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> props<span class="token operator">:</span> Props <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> prop <span class="token keyword">in</span> config<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> val <span class="token operator">=</span> config<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token operator">===</span> <span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				key <span class="token operator">=</span> <span class="token string">&#39;&#39;</span> <span class="token operator">+</span> val<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">continue</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token operator">===</span> <span class="token string">&#39;ref&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				ref <span class="token operator">=</span> val<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">continue</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			props<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">const</span> childrenLength <span class="token operator">=</span> children<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>childrenLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>childrenLength <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			props<span class="token punctuation">.</span>children <span class="token operator">=</span> children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			props<span class="token punctuation">.</span>children <span class="token operator">=</span> children<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token function">ReactElement</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> key<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这就是完整的 <code>jsx</code> 方法的实现。</p><p>为了区分生产环境和开发环境，这里再定义一个 <code>jsxDEV</code> 方法，唯一的区别是，开发环境不处理 <code>children</code> 参数，方便多做一些额外的检查：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// packages/react/src/jsx.ts</span>
<span class="token comment">// ...之前的代码</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">jsxDEV</span> <span class="token operator">=</span> <span class="token punctuation">(</span>type<span class="token operator">:</span> ElementType<span class="token punctuation">,</span> config<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> key<span class="token operator">:</span> Key <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> ref<span class="token operator">:</span> Ref <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> props<span class="token operator">:</span> Props <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> prop <span class="token keyword">in</span> config<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> val <span class="token operator">=</span> config<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token operator">===</span> <span class="token string">&#39;key&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				key <span class="token operator">=</span> <span class="token string">&#39;&#39;</span> <span class="token operator">+</span> val<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">continue</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token operator">===</span> <span class="token string">&#39;ref&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				ref <span class="token operator">=</span> val<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">continue</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			props<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token function">ReactElement</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> key<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新增 <code>index.ts</code> 文件，这个文件是 react 包的入口，导出一个对象，包含版本号 <code>version</code> 和 <code>React.createElement</code> 方法。其中，<code>React.createElement</code> 方法就是刚才实现的 <code>jsx</code> 方法。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// packages/react/index.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> jsx <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./src/jsx&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">createElement</span><span class="token operator">:</span> jsx
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此，我们已经实现了 <code>jsx</code> 方法和 <code>React.createElement</code> 方法，并支持了 <code>dev</code> 和 <code>prod</code> 两个环境，接下来实现打包流程。</p><h2 id="_3-实现打包流程" tabindex="-1"><a class="header-anchor" href="#_3-实现打包流程" aria-hidden="true">#</a> 3. 实现打包流程</h2><p>根据上面的示例，我们实现了 <code>jsx</code> 方法、<code>jsxDEV</code> 方法和 <code>React.createElement</code> 方法，需要将打包到对应的文件中：</p><ul><li>react/jsx-runtime.js</li><li>react/jsx-dev-runtime.js</li><li>react/index.js</li></ul><p>我们的打包脚本都在 <code>scripts/rollup</code> 目录下，新增一个 <code>react.config.js</code> 文件，里面是 react 包的打包配置，再新增一个 <code>utils.js</code> 文件，里面是一些公用的方法。</p><p>需要先安装几个包：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> i <span class="token parameter variable">-D</span> <span class="token parameter variable">-w</span> rollup-plugin-generate-package-json
<span class="token function">pnpm</span> i <span class="token parameter variable">-D</span> <span class="token parameter variable">-w</span> rollup-plugin-typescript2
<span class="token function">pnpm</span> i <span class="token parameter variable">-D</span> <span class="token parameter variable">-w</span> @rollup/plugin-commonjs
<span class="token function">pnpm</span> i <span class="token parameter variable">-D</span> <span class="token parameter variable">-w</span> rimraf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>rollup-plugin-generate-package-json</code>：用于生成 <code>package.json</code> 文件。</li><li><code>rollup-plugin-typescript2</code>：用于编译 Typescript。</li><li><code>@rollup/plugin-commonjs</code>：用于将 CommonJS 模块转换为 ES 模块，以便在 Rollup 中进行打包。CommonJS 是一种用于在浏览器之外执行 JavaScript 代码的模块规范，而 Rollup 默认只支持 ES 模块。</li><li><code>rimraf</code>：用于删除之前的打包产物</li></ul><p><code>react.config.js</code> 导出一个数组，数组中的第一个对象即为 <code>react/index.js</code> 的配置，定义一下输入文件和输出文件，然后配置插件和 <code>package.json</code>；数组中的第二个对象为 <code>react/jsx-runtime.js</code> 和 <code>react/jsx-dev-runtime.js</code> 的配置。</p>`,18),T=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// scripts/rollup/react.config.js"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" getPackageJSON"),n("span",{class:"token punctuation"},","),s(" resolvePkgPath"),n("span",{class:"token punctuation"},","),s(" getBaseRollupPlugins "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./utils'"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(" generatePackageJson "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'rollup-plugin-generate-package-json'"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" name"),n("span",{class:"token punctuation"},","),s(" module "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"getPackageJSON"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'react'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// react 包的路径"),s(`
`),n("span",{class:"token keyword"},"const"),s(" pkgPath "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"resolvePkgPath"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// react 包的产物路径"),s(`
`),n("span",{class:"token keyword"},"const"),s(" pkgDistPath "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"resolvePkgPath"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"["),s(`
	`),n("span",{class:"token comment"},"// react"),s(`
	`),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token literal-property property"},"input"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("pkgPath"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},"/"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("module"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},","),s(`
		`),n("span",{class:"token literal-property property"},"output"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
			`),n("span",{class:"token literal-property property"},"file"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("pkgDistPath"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},"/index.js"),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'React'"),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token literal-property property"},"format"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'umd'"),s(`
		`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
		`),n("span",{class:"token literal-property property"},"plugins"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
			`),n("span",{class:"token operator"},"..."),n("span",{class:"token function"},"getBaseRollupPlugins"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token function"},"generatePackageJson"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
				`),n("span",{class:"token literal-property property"},"inputFolder"),n("span",{class:"token operator"},":"),s(" pkgPath"),n("span",{class:"token punctuation"},","),s(`
				`),n("span",{class:"token literal-property property"},"outputFolder"),n("span",{class:"token operator"},":"),s(" pkgDistPath"),n("span",{class:"token punctuation"},","),s(`
				`),n("span",{class:"token function-variable function"},"baseContents"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" name"),n("span",{class:"token punctuation"},","),s(" description"),n("span",{class:"token punctuation"},","),s(" version "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
					name`),n("span",{class:"token punctuation"},","),s(`
					description`),n("span",{class:"token punctuation"},","),s(`
					version`),n("span",{class:"token punctuation"},","),s(`
					`),n("span",{class:"token literal-property property"},"main"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'index.js'"),s(`
				`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
			`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
		`),n("span",{class:"token punctuation"},"]"),s(`
	`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
	`),n("span",{class:"token comment"},"// jsx-runtime"),s(`
	`),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token literal-property property"},"input"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("pkgPath"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},"/src/jsx.ts"),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},","),s(`
		`),n("span",{class:"token literal-property property"},"output"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
			`),n("span",{class:"token comment"},"// jsx-runtime"),s(`
			`),n("span",{class:"token punctuation"},"{"),s(`
				`),n("span",{class:"token literal-property property"},"file"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("pkgDistPath"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},"/jsx-runtime.js"),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},","),s(`
				`),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'jsx-runtime'"),n("span",{class:"token punctuation"},","),s(`
				`),n("span",{class:"token literal-property property"},"format"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'umd'"),s(`
			`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token comment"},"// jsx-dev-runtime"),s(`
			`),n("span",{class:"token punctuation"},"{"),s(`
				`),n("span",{class:"token literal-property property"},"file"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("pkgDistPath"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},"/jsx-dev-runtime.js"),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},","),s(`
				`),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'jsx-dev-runtime'"),n("span",{class:"token punctuation"},","),s(`
				`),n("span",{class:"token literal-property property"},"format"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'umd'"),s(`
			`),n("span",{class:"token punctuation"},"}"),s(`
		`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
		`),n("span",{class:"token literal-property property"},"plugins"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"getBaseRollupPlugins"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// scripts/rollup/utils.js"),s(`
`),n("span",{class:"token keyword"},"import"),s(" path "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'path'"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(" fs "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'fs'"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(" ts "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'rollup-plugin-typescript2'"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(" cjs "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@rollup/plugin-commonjs'"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" pkgPath "),n("span",{class:"token operator"},"="),s(" path"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"resolve"),n("span",{class:"token punctuation"},"("),s("__dirname"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'../../packages'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"const"),s(" distPath "),n("span",{class:"token operator"},"="),s(" path"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"resolve"),n("span",{class:"token punctuation"},"("),s("__dirname"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'../../dist/node_modules'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"resolvePkgPath"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("pkgName"),n("span",{class:"token punctuation"},","),s(" isDist")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("isDist"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("distPath"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},"/"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("pkgName"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("pkgPath"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},"/"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("pkgName"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"getPackageJSON"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"pkgName"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"const"),s(" path "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),n("span",{class:"token function"},"resolvePkgPath"),n("span",{class:"token punctuation"},"("),s("pkgName"),n("span",{class:"token punctuation"},")"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"},"/package.json"),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"const"),s(" str "),n("span",{class:"token operator"},"="),s(" fs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readFileSync"),n("span",{class:"token punctuation"},"("),s("path"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"encoding"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'utf-8'"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token constant"},"JSON"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"parse"),n("span",{class:"token punctuation"},"("),s("str"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"getBaseRollupPlugins"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" typescript "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token function"},"cjs"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"ts"),n("span",{class:"token punctuation"},"("),s("typescript"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=o(`<p>现在我们到根目录下的 <code>package.json</code> 文件中新增一个 <code>scripts</code> 命令：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// package.json</span>
<span class="token comment">// ...</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;lint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint --ext .ts,.jsx,.tsx --fix --quiet ./packages&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;build-dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;rimraf dist &amp;&amp; rollup --config scripts/rollup/react.config.js --bundleConfigAsCjs&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行 <code>npm run build-dev</code>，可以看到，根目录下的 <code>dist/node_modules/react</code> 文件夹中出现了 react 包的打包产物：</p><ul><li>index.js</li><li>jsx-dev-runtime.js</li><li>jsx-runtime.js</li><li>package.json</li></ul><h2 id="_4-调试打包结果" tabindex="-1"><a class="header-anchor" href="#_4-调试打包结果" aria-hidden="true">#</a> 4. 调试打包结果</h2><h3 id="_1-npm-link" tabindex="-1"><a class="header-anchor" href="#_1-npm-link" aria-hidden="true">#</a> 1. npm link</h3><p>react 包打包完之后，我们可以使用 <code>npm link</code> 来调试以下打包结果，流程如下图所示：</p><figure><img src="`+d+'" alt="调试流程" tabindex="0" loading="lazy"><figcaption>调试流程</figcaption></figure><p>首先我们在 my-react 项目中，生成了一个 react 包的打包产物，即 <code>dist/node_modules/react</code> 文件夹中的内容。</p><p>然后进入到 <code>dist/node_modules/react</code>目录下，通过 <code>pnpm link --global</code> 命令，就将全局 <code>node_modules</code> 下的 <code>react</code> 指向了我们刚刚生成的 <code>react</code> 包。</p><p>接着，用 <code>create-react-app</code> 创建一个新的 Demo 项目，在这个 Demo 项目中，再执行 <code>pnpm link react --global</code> 命令，就能将 Demo 项目中依赖的 <code>react</code> 从这个项目的<code>node_modules/react</code> 变成全局 <code>node_modules</code> 下的 <code>react</code>。</p><p>这样我们就能通过 Demo 项目直接调用我们刚刚生成的 <code>react</code> 包了。</p><p>这种方式的优点是：可以模拟实际项目引用 React 的情况；缺点是：不支持热更新，每次更新 my-react 项目之后都需要重新打包，并在 Demo 项目中重新执行 <code>npm run dev</code>，比较繁琐。</p><h3 id="_2-vite" tabindex="-1"><a class="header-anchor" href="#_2-vite" aria-hidden="true">#</a> 2. vite</h3>',14),D={href:"https://cn.vitejs.dev/guide/",target:"_blank",rel:"noopener noreferrer"},X=o(`<p>在根目录运行 <code>pnpm create vite demos --template react</code>，语言选择 <code>Typescript</code>，然后新建文件夹 <code>demos/test-1</code>，将 <code>index.html</code> 和 <code>main.tsx</code> 挪进去，删除其余的文件。</p><p>在 <code>package.json</code> 中增加指令 <code>npm run demo</code>: <code>&quot;vite serve demos/test-1 --config scripts/vite/vite.config.js --force&quot;</code>，并安装以下依赖：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;@types/react&quot;: &quot;^18.2.56&quot;,
&quot;@types/react-dom&quot;: &quot;^18.2.19&quot;,
&quot;@vitejs/plugin-react&quot;: &quot;^4.2.1&quot;,
&quot;eslint-plugin-react-hooks&quot;: &quot;^4.6.0&quot;,
&quot;eslint-plugin-react-refresh&quot;: &quot;^0.4.5&quot;,
&quot;vite&quot;: &quot;^5.1.4&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建 <code>scripts/vite/vite.config.js</code> 文件：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> react <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> replace <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-replace&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> resolvePkgPath <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../rollup/utils&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// https://vitejs.dev/config/</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">react</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">replace</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">__DEV__</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">preventAssignment</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">[</span>
			<span class="token punctuation">{</span>
				<span class="token literal-property property">find</span><span class="token operator">:</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">,</span>
				<span class="token literal-property property">replacement</span><span class="token operator">:</span> <span class="token function">resolvePkgPath</span><span class="token punctuation">(</span><span class="token string">&#39;react&#39;</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token punctuation">{</span>
				<span class="token literal-property property">find</span><span class="token operator">:</span> <span class="token string">&#39;react-dom&#39;</span><span class="token punctuation">,</span>
				<span class="token literal-property property">replacement</span><span class="token operator">:</span> <span class="token function">resolvePkgPath</span><span class="token punctuation">(</span><span class="token string">&#39;react-dom&#39;</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token punctuation">{</span>
				<span class="token literal-property property">find</span><span class="token operator">:</span> <span class="token string">&#39;hostConfig&#39;</span><span class="token punctuation">,</span>
				<span class="token literal-property property">replacement</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>
					<span class="token function">resolvePkgPath</span><span class="token punctuation">(</span><span class="token string">&#39;react-dom&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token string">&#39;./src/hostConfig.ts&#39;</span>
				<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，新增 <code>packages/react/jsx-dev-runtime.ts</code> 文件：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token punctuation">{</span> jsxDEV <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./src/jsx&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样只需执行 <code>npm run demo</code> 即可实时调试代码，实现热更新。</p><hr><p>至此，我们就完成了 JSX 方法的开发、打包、调试。</p>`,10),$=n("code",null,"git tag v1.2",-1),N={href:"https://github.com/2xiao/my-react/tree/v1.2",target:"_blank",rel:"noopener noreferrer"};function B(V,L){const c=i("ExternalLinkIcon"),l=i("CodeTabs");return u(),k("div",null,[m,n("div",b,[g,y,n("p",null,[s("相关代码可在 "),n("a",f,[h,p(c)]),s(" 查看")])]),w,n("p",null,[s("我们先了解一下"),n("a",j,[s("React 源码"),p(c)]),s("的项目结构，React 使用的是 Mono-repo 的结构管理各个包，源码中主要包括如下部分：")]),x,p(l,{id:"159",data:[{id:"JSX 源代码"},{id:"JSX 转换结果"}]},{title0:a(({value:t,isActive:e})=>[s("JSX 源代码")]),title1:a(({value:t,isActive:e})=>[s("JSX 转换结果")]),tab0:a(({value:t,isActive:e})=>[_]),tab1:a(({value:t,isActive:e})=>[q]),_:1}),R,p(l,{id:"214",data:[{id:"package.json"},{id:"ReactSymbols.ts"},{id:"ReactTypes.ts"}]},{title0:a(({value:t,isActive:e})=>[s("package.json")]),title1:a(({value:t,isActive:e})=>[s("ReactSymbols.ts")]),title2:a(({value:t,isActive:e})=>[s("ReactTypes.ts")]),tab0:a(({value:t,isActive:e})=>[E]),tab1:a(({value:t,isActive:e})=>[P]),tab2:a(({value:t,isActive:e})=>[S]),_:1},8,["data"]),J,p(l,{id:"302",data:[{id:"react.config.js"},{id:"utils.js"}]},{title0:a(({value:t,isActive:e})=>[s("react.config.js")]),title1:a(({value:t,isActive:e})=>[s("utils.js")]),tab0:a(({value:t,isActive:e})=>[T]),tab1:a(({value:t,isActive:e})=>[A]),_:1},8,["data"]),C,n("p",null,[s("如果想支持热更新调试，可以使用 "),n("a",D,[s("Vite"),p(c)]),s("。")]),X,n("p",null,[s("相关代码可在 "),$,s(" 查看，地址："),n("a",N,[s("https://github.com/2xiao/my-react/tree/v1.2"),p(c)])])])}const O=r(v,[["render",B],["__file","2.html.vue"]]);export{O as default};
