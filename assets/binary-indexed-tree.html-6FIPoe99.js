import{_ as c,r as _,o as i,c as a,a as t,d as e,w as o,b as l,f as r}from"./app-5VBZs9Uu.js";const u={},h=t("h1",{id:"树状数组",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#树状数组","aria-hidden":"true"},"#"),l(" 树状数组")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),j=t("code",null,"双向链表",-1),p=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),H=t("code",null,"队列",-1),q=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),M=t("code",null,"字符串",-1),v=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),B=t("code",null,"二叉搜索树",-1),C=t("code",null,"最小生成树",-1),N=t("code",null,"图",-1),V=t("code",null,"有序集合",-1),E=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),R=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),O=t("code",null,"并查集",-1),P=t("code",null,"字典树",-1),U=t("code",null,"线段树",-1),D=t("span",{class:"blue"},"树状数组",-1),F=t("code",null,"后缀数组",-1),G=t("p",null,[t("strong",null,"算法")],-1),J=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),S=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ut=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),jt=t("code",null,"几何",-1),pt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Ht=t("code",null,"组合数学",-1),qt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),Mt=t("code",null,"拒绝采样",-1),vt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Bt=t("code",null,"脑筋急转弯",-1),Ct=t("code",null,"交互",-1),Nt=t("code",null,"迭代器",-1),Vt=t("code",null,"多线程",-1),Et=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Rt=t("td",{style:{"text-align":"center"}},"218",-1),Tt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},Ot=t("td",{style:{"text-align":"center"}},null,-1),Pt={style:{"text-align":"left"}},Ut=t("code",null,"树状数组",-1),Dt=t("code",null,"线段树",-1),Ft=t("code",null,"数组",-1),Gt=t("code",null,"4+",-1),Jt={style:{"text-align":"left"}},Qt=t("td",{style:{"text-align":"center"}},"307",-1),St={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/range-sum-query-mutable",target:"_blank",rel:"noopener noreferrer"},Xt={style:{"text-align":"center"}},Yt={style:{"text-align":"left"}},Zt=t("code",null,"设计",-1),$t=t("code",null,"树状数组",-1),te=t("code",null,"线段树",-1),ee=t("code",null,"1+",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"308",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/range-sum-query-2d-mutable",target:"_blank",rel:"noopener noreferrer"},de=t("td",{style:{"text-align":"center"}},null,-1),_e={style:{"text-align":"left"}},ce=t("code",null,"设计",-1),ie=t("code",null,"树状数组",-1),ae=t("code",null,"线段树",-1),re=t("code",null,"2+",-1),ue={style:{"text-align":"left"}},he=t("td",{style:{"text-align":"center"}},"315",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},me=t("td",{style:{"text-align":"center"}},null,-1),ye={style:{"text-align":"left"}},xe=t("code",null,"树状数组",-1),be=t("code",null,"线段树",-1),je=t("code",null,"数组",-1),pe=t("code",null,"4+",-1),ke={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"327",-1),qe={style:{"text-align":"left"}},Ie={href:"https://leetcode.com/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},we=t("td",{style:{"text-align":"center"}},null,-1),Me={style:{"text-align":"left"}},ve=t("code",null,"树状数组",-1),Le=t("code",null,"线段树",-1),ze=t("code",null,"数组",-1),Be=t("code",null,"4+",-1),Ce={style:{"text-align":"left"}},Ne=t("td",{style:{"text-align":"center"}},"406",-1),Ve={style:{"text-align":"left"}},Ee={href:"https://leetcode.com/problems/queue-reconstruction-by-height",target:"_blank",rel:"noopener noreferrer"},Ke=t("td",{style:{"text-align":"center"}},null,-1),Re={style:{"text-align":"left"}},Te=t("code",null,"树状数组",-1),Ae=t("code",null,"线段树",-1),Oe=t("code",null,"数组",-1),Pe=t("code",null,"1+",-1),Ue={style:{"text-align":"left"}},De=t("td",{style:{"text-align":"center"}},"493",-1),Fe={style:{"text-align":"left"}},Ge={href:"https://leetcode.com/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},Je=t("td",{style:{"text-align":"center"}},null,-1),Qe={style:{"text-align":"left"}},Se=t("code",null,"树状数组",-1),We=t("code",null,"线段树",-1),Xe=t("code",null,"数组",-1),Ye=t("code",null,"4+",-1),Ze={style:{"text-align":"left"}},$e=t("td",{style:{"text-align":"center"}},"673",-1),tl={style:{"text-align":"left"}},el={href:"https://leetcode.com/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},ll=t("td",{style:{"text-align":"center"}},null,-1),ol={style:{"text-align":"left"}},nl=t("code",null,"树状数组",-1),sl=t("code",null,"线段树",-1),dl=t("code",null,"数组",-1),_l=t("code",null,"1+",-1),cl={style:{"text-align":"left"}},il=t("td",{style:{"text-align":"center"}},"683",-1),al={style:{"text-align":"left"}},rl={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},ul=t("td",{style:{"text-align":"center"}},null,-1),hl={style:{"text-align":"left"}},fl=t("code",null,"树状数组",-1),gl=t("code",null,"线段树",-1),ml=t("code",null,"队列",-1),yl=t("code",null,"5+",-1),xl={style:{"text-align":"left"}},bl=t("td",{style:{"text-align":"center"}},"1157",-1),jl={style:{"text-align":"left"}},pl={href:"https://leetcode.com/problems/online-majority-element-in-subarray",target:"_blank",rel:"noopener noreferrer"},kl=t("td",{style:{"text-align":"center"}},null,-1),Hl={style:{"text-align":"left"}},ql=t("code",null,"设计",-1),Il=t("code",null,"树状数组",-1),wl=t("code",null,"线段树",-1),Ml=t("code",null,"2+",-1),vl={style:{"text-align":"left"}},Ll=t("td",{style:{"text-align":"center"}},"1395",-1),zl={style:{"text-align":"left"}},Bl={href:"https://leetcode.com/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},Cl=t("td",{style:{"text-align":"center"}},null,-1),Nl={style:{"text-align":"left"}},Vl=t("code",null,"树状数组",-1),El=t("code",null,"线段树",-1),Kl=t("code",null,"数组",-1),Rl=t("code",null,"1+",-1),Tl={style:{"text-align":"left"}},Al=t("td",{style:{"text-align":"center"}},"1409",-1),Ol={style:{"text-align":"left"}},Pl={href:"https://leetcode.com/problems/queries-on-a-permutation-with-key",target:"_blank",rel:"noopener noreferrer"},Ul=t("td",{style:{"text-align":"center"}},null,-1),Dl={style:{"text-align":"left"}},Fl=t("code",null,"树状数组",-1),Gl=t("code",null,"数组",-1),Jl=t("code",null,"模拟",-1),Ql={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"1505",-1),Wl={style:{"text-align":"left"}},Xl={href:"https://leetcode.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",target:"_blank",rel:"noopener noreferrer"},Yl=t("td",{style:{"text-align":"center"}},null,-1),Zl={style:{"text-align":"left"}},$l=t("code",null,"贪心",-1),to=t("code",null,"树状数组",-1),eo=t("code",null,"线段树",-1),lo=t("code",null,"1+",-1),oo={style:{"text-align":"left"}},no=t("td",{style:{"text-align":"center"}},"1649",-1),so={style:{"text-align":"left"}},_o={href:"https://leetcode.com/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},co=t("td",{style:{"text-align":"center"}},null,-1),io={style:{"text-align":"left"}},ao=t("code",null,"树状数组",-1),ro=t("code",null,"线段树",-1),uo=t("code",null,"数组",-1),ho=t("code",null,"4+",-1),fo={style:{"text-align":"left"}},go=t("td",{style:{"text-align":"center"}},"1756",-1),mo={style:{"text-align":"left"}},yo={href:"https://leetcode.com/problems/design-most-recently-used-queue",target:"_blank",rel:"noopener noreferrer"},xo=t("td",{style:{"text-align":"center"}},null,-1),bo={style:{"text-align":"left"}},jo=t("code",null,"栈",-1),po=t("code",null,"设计",-1),ko=t("code",null,"树状数组",-1),Ho=t("code",null,"3+",-1),qo={style:{"text-align":"left"}},Io=t("td",{style:{"text-align":"center"}},"1964",-1),wo={style:{"text-align":"left"}},Mo={href:"https://leetcode.com/problems/find-the-longest-valid-obstacle-course-at-each-position",target:"_blank",rel:"noopener noreferrer"},vo=t("td",{style:{"text-align":"center"}},null,-1),Lo={style:{"text-align":"left"}},zo=t("code",null,"树状数组",-1),Bo=t("code",null,"数组",-1),Co=t("code",null,"二分查找",-1),No={style:{"text-align":"left"}},Vo=t("td",{style:{"text-align":"center"}},"2031",-1),Eo={style:{"text-align":"left"}},Ko={href:"https://leetcode.com/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},Ro=t("td",{style:{"text-align":"center"}},null,-1),To={style:{"text-align":"left"}},Ao=t("code",null,"树状数组",-1),Oo=t("code",null,"线段树",-1),Po=t("code",null,"数组",-1),Uo=t("code",null,"4+",-1),Do={style:{"text-align":"left"}},Fo=t("td",{style:{"text-align":"center"}},"2179",-1),Go={style:{"text-align":"left"}},Jo={href:"https://leetcode.com/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},Qo=t("td",{style:{"text-align":"center"}},null,-1),So={style:{"text-align":"left"}},Wo=t("code",null,"树状数组",-1),Xo=t("code",null,"线段树",-1),Yo=t("code",null,"数组",-1),Zo=t("code",null,"4+",-1),$o={style:{"text-align":"left"}},tn=t("td",{style:{"text-align":"center"}},"2193",-1),en={style:{"text-align":"left"}},ln={href:"https://leetcode.com/problems/minimum-number-of-moves-to-make-palindrome",target:"_blank",rel:"noopener noreferrer"},on=t("td",{style:{"text-align":"center"}},null,-1),nn={style:{"text-align":"left"}},sn=t("code",null,"贪心",-1),dn=t("code",null,"树状数组",-1),_n=t("code",null,"双指针",-1),cn=t("code",null,"1+",-1),an={style:{"text-align":"left"}},rn=t("td",{style:{"text-align":"center"}},"2250",-1),un={style:{"text-align":"left"}},hn={href:"https://leetcode.com/problems/count-number-of-rectangles-containing-each-point",target:"_blank",rel:"noopener noreferrer"},fn=t("td",{style:{"text-align":"center"}},null,-1),gn={style:{"text-align":"left"}},mn=t("code",null,"树状数组",-1),yn=t("code",null,"数组",-1),xn=t("code",null,"二分查找",-1),bn=t("code",null,"1+",-1),jn={style:{"text-align":"left"}},pn=t("td",{style:{"text-align":"center"}},"2286",-1),kn={style:{"text-align":"left"}},Hn={href:"https://leetcode.com/problems/booking-concert-tickets-in-groups",target:"_blank",rel:"noopener noreferrer"},qn=t("td",{style:{"text-align":"center"}},null,-1),In={style:{"text-align":"left"}},wn=t("code",null,"设计",-1),Mn=t("code",null,"树状数组",-1),vn=t("code",null,"线段树",-1),Ln=t("code",null,"1+",-1),zn={style:{"text-align":"left"}},Bn=t("td",{style:{"text-align":"center"}},"2407",-1),Cn={style:{"text-align":"left"}},Nn={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},Vn=t("td",{style:{"text-align":"center"}},null,-1),En={style:{"text-align":"left"}},Kn=t("code",null,"树状数组",-1),Rn=t("code",null,"线段树",-1),Tn=t("code",null,"队列",-1),An=t("code",null,"4+",-1),On={style:{"text-align":"left"}},Pn=t("td",{style:{"text-align":"center"}},"2424",-1),Un={style:{"text-align":"left"}},Dn={href:"https://leetcode.com/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},Fn=t("td",{style:{"text-align":"center"}},null,-1),Gn={style:{"text-align":"left"}},Jn=t("code",null,"并查集",-1),Qn=t("code",null,"设计",-1),Sn=t("code",null,"树状数组",-1),Wn=t("code",null,"4+",-1),Xn={style:{"text-align":"left"}},Yn=t("td",{style:{"text-align":"center"}},"2426",-1),Zn={style:{"text-align":"left"}},$n={href:"https://leetcode.com/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},ts=t("td",{style:{"text-align":"center"}},null,-1),es={style:{"text-align":"left"}},ls=t("code",null,"树状数组",-1),os=t("code",null,"线段树",-1),ns=t("code",null,"数组",-1),ss=t("code",null,"4+",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"2519",-1),cs={style:{"text-align":"left"}},is={href:"https://leetcode.com/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},as=t("td",{style:{"text-align":"center"}},null,-1),rs={style:{"text-align":"left"}},us=t("code",null,"树状数组",-1),hs=t("code",null,"线段树",-1),fs=t("code",null,"数组",-1),gs=t("code",null,"4+",-1),ms={style:{"text-align":"left"}},ys=t("td",{style:{"text-align":"center"}},"2552",-1),xs={style:{"text-align":"left"}},bs={href:"https://leetcode.com/problems/count-increasing-quadruplets",target:"_blank",rel:"noopener noreferrer"},js=t("td",{style:{"text-align":"center"}},null,-1),ps={style:{"text-align":"left"}},ks=t("code",null,"树状数组",-1),Hs=t("code",null,"数组",-1),qs=t("code",null,"动态规划",-1),Is=t("code",null,"2+",-1),ws={style:{"text-align":"left"}},Ms=t("td",{style:{"text-align":"center"}},"2659",-1),vs={style:{"text-align":"left"}},Ls={href:"https://leetcode.com/problems/make-array-empty",target:"_blank",rel:"noopener noreferrer"},zs=t("td",{style:{"text-align":"center"}},null,-1),Bs={style:{"text-align":"left"}},Cs=t("code",null,"贪心",-1),Ns=t("code",null,"树状数组",-1),Vs=t("code",null,"线段树",-1),Es=t("code",null,"4+",-1),Ks={style:{"text-align":"left"}},Rs=t("td",{style:{"text-align":"center"}},"2736",-1),Ts={style:{"text-align":"left"}},As={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},Os=t("td",{style:{"text-align":"center"}},null,-1),Ps={style:{"text-align":"left"}},Us=t("code",null,"栈",-1),Ds=t("code",null,"树状数组",-1),Fs=t("code",null,"线段树",-1),Gs=t("code",null,"4+",-1),Js={style:{"text-align":"left"}},Qs=t("td",{style:{"text-align":"center"}},"2907",-1),Ss={style:{"text-align":"left"}},Ws={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-i",target:"_blank",rel:"noopener noreferrer"},Xs=t("td",{style:{"text-align":"center"}},null,-1),Ys={style:{"text-align":"left"}},Zs=t("code",null,"树状数组",-1),$s=t("code",null,"线段树",-1),td=t("code",null,"数组",-1),ed={style:{"text-align":"left"}},ld=t("td",{style:{"text-align":"center"}},"2916",-1),od={style:{"text-align":"left"}},nd={href:"https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},sd=t("td",{style:{"text-align":"center"}},null,-1),dd={style:{"text-align":"left"}},_d=t("code",null,"树状数组",-1),cd=t("code",null,"线段树",-1),id=t("code",null,"数组",-1),ad=t("code",null,"1+",-1),rd={style:{"text-align":"left"}},ud=t("td",{style:{"text-align":"center"}},"2921",-1),hd={style:{"text-align":"left"}},fd={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-ii",target:"_blank",rel:"noopener noreferrer"},gd=t("td",{style:{"text-align":"center"}},null,-1),md={style:{"text-align":"left"}},yd=t("code",null,"树状数组",-1),xd=t("code",null,"线段树",-1),bd=t("code",null,"数组",-1),jd={style:{"text-align":"left"}},pd=t("td",{style:{"text-align":"center"}},"2926",-1),kd={style:{"text-align":"left"}},Hd={href:"https://leetcode.com/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},qd=t("td",{style:{"text-align":"center"}},null,-1),Id={style:{"text-align":"left"}},wd=t("code",null,"树状数组",-1),Md=t("code",null,"线段树",-1),vd=t("code",null,"数组",-1),Ld=t("code",null,"2+",-1),zd={style:{"text-align":"left"}},Bd=t("td",{style:{"text-align":"center"}},"2940",-1),Cd={style:{"text-align":"left"}},Nd={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},Vd=t("td",{style:{"text-align":"center"}},null,-1),Ed={style:{"text-align":"left"}},Kd=t("code",null,"栈",-1),Rd=t("code",null,"树状数组",-1),Td=t("code",null,"线段树",-1),Ad=t("code",null,"4+",-1),Od={style:{"text-align":"left"}},Pd=t("td",{style:{"text-align":"center"}},"3009",-1),Ud={style:{"text-align":"left"}},Dd={href:"https://leetcode.com/problems/maximum-number-of-intersections-on-the-chart",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},null,-1),Gd={style:{"text-align":"left"}},Jd=t("code",null,"树状数组",-1),Qd=t("code",null,"几何",-1),Sd=t("code",null,"数组",-1),Wd=t("code",null,"1+",-1),Xd={style:{"text-align":"left"}},Yd=t("td",{style:{"text-align":"center"}},"3072",-1),Zd={style:{"text-align":"left"}},$d={href:"https://leetcode.com/problems/distribute-elements-into-two-arrays-ii",target:"_blank",rel:"noopener noreferrer"},t_=t("td",{style:{"text-align":"center"}},null,-1),e_={style:{"text-align":"left"}},l_=t("code",null,"树状数组",-1),o_=t("code",null,"线段树",-1),n_=t("code",null,"数组",-1),s_=t("code",null,"1+",-1),d_={style:{"text-align":"left"}},__=t("td",{style:{"text-align":"center"}},"3109",-1),c_={style:{"text-align":"left"}},i_={href:"https://leetcode.com/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},a_=t("td",{style:{"text-align":"center"}},null,-1),r_={style:{"text-align":"left"}},u_=t("code",null,"树状数组",-1),h_=t("code",null,"线段树",-1),f_=t("code",null,"数组",-1),g_=t("code",null,"4+",-1),m_={style:{"text-align":"left"}},y_=t("td",{style:{"text-align":"center"}},"3161",-1),x_={style:{"text-align":"left"}},b_={href:"https://leetcode.com/problems/block-placement-queries",target:"_blank",rel:"noopener noreferrer"},j_=t("td",{style:{"text-align":"center"}},null,-1),p_={style:{"text-align":"left"}},k_=t("code",null,"树状数组",-1),H_=t("code",null,"线段树",-1),q_=t("code",null,"数组",-1),I_=t("code",null,"1+",-1),w_={style:{"text-align":"left"}},M_=t("td",{style:{"text-align":"center"}},"3187",-1),v_={style:{"text-align":"left"}},L_={href:"https://leetcode.com/problems/peaks-in-array",target:"_blank",rel:"noopener noreferrer"},z_=t("td",{style:{"text-align":"center"}},null,-1),B_={style:{"text-align":"left"}},C_=t("code",null,"树状数组",-1),N_=t("code",null,"线段树",-1),V_=t("code",null,"数组",-1),E_={style:{"text-align":"left"}},K_=t("td",{style:{"text-align":"center"}},"3245",-1),R_={style:{"text-align":"left"}},T_={href:"https://leetcode.com/problems/alternating-groups-iii",target:"_blank",rel:"noopener noreferrer"},A_=t("td",{style:{"text-align":"center"}},null,-1),O_={style:{"text-align":"left"}},P_=t("code",null,"树状数组",-1),U_=t("code",null,"数组",-1),D_={style:{"text-align":"left"}},F_=t("td",{style:{"text-align":"center"}},"LCP 05",-1),G_={style:{"text-align":"left"}},J_={href:"https://leetcode.cn/problems/coin-bonus",target:"_blank",rel:"noopener noreferrer"},Q_=t("td",{style:{"text-align":"center"}},null,-1),S_={style:{"text-align":"left"}},W_=t("code",null,"树状数组",-1),X_=t("code",null,"线段树",-1),Y_=t("code",null,"数组",-1),Z_={style:{"text-align":"left"}},$_=t("td",{style:{"text-align":"center"}},"剑指 Offer 51",-1),tc={style:{"text-align":"left"}},ec={href:"https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof",target:"_blank",rel:"noopener noreferrer"},lc=t("td",{style:{"text-align":"center"}},null,-1),oc={style:{"text-align":"left"}},nc=t("code",null,"树状数组",-1),sc=t("code",null,"线段树",-1),dc=t("code",null,"数组",-1),_c=t("code",null,"4+",-1),cc={style:{"text-align":"left"}},ic=t("td",{style:{"text-align":"center"}},"面试题 10.10",-1),ac={style:{"text-align":"left"}},rc={href:"https://leetcode.cn/problems/rank-from-stream-lcci",target:"_blank",rel:"noopener noreferrer"},uc=t("td",{style:{"text-align":"center"}},null,-1),hc={style:{"text-align":"left"}},fc=t("code",null,"设计",-1),gc=t("code",null,"树状数组",-1),mc=t("code",null,"二分查找",-1),yc=t("code",null,"1+",-1),xc={style:{"text-align":"left"}};function bc(jc,pc){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),a("div",null,[h,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-queue.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/strongly-connected-component.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[U]),_:1}),l(),D,l(),e(n,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[F]),_:1})]),G,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/randomized.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/reservoir-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rejection-sampling.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/database.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/interactive.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/iterator.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/concurrency.html"},{default:o(()=>[Vt]),_:1})])]),Et,r(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Rt,t("td",Tt,[t("a",At,[l("天际线问题"),e(s)])]),Ot,t("td",Pt,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Dt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ft]),_:1}),l(),Gt]),t("td",Jt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qt,t("td",St,[t("a",Wt,[l("区域和检索 - 数组可修改"),e(s)])]),t("td",Xt,[e(n,{to:"/leetcode-js/problem/0307.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yt,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[te]),_:1}),l(),ee]),t("td",le,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oe,t("td",ne,[t("a",se,[l("二维区域和检索 - 矩阵可修改"),e(s)])]),de,t("td",_e,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ie]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[ae]),_:1}),l(),re]),t("td",ue,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[he,t("td",fe,[t("a",ge,[l("计算右侧小于当前元素的个数"),e(s)])]),me,t("td",ye,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[xe]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[be]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[je]),_:1}),l(),pe]),t("td",ke,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[He,t("td",qe,[t("a",Ie,[l("区间和的个数"),e(s)])]),we,t("td",Me,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ve]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Le]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ze]),_:1}),l(),Be]),t("td",Ce,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ne,t("td",Ve,[t("a",Ee,[l("根据身高重建队列"),e(s)])]),Ke,t("td",Re,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Te]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Ae]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Oe]),_:1}),l(),Pe]),t("td",Ue,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[De,t("td",Fe,[t("a",Ge,[l("翻转对"),e(s)])]),Je,t("td",Qe,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Se]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[We]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Xe]),_:1}),l(),Ye]),t("td",Ze,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$e,t("td",tl,[t("a",el,[l("最长递增子序列的个数"),e(s)])]),ll,t("td",ol,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[nl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[sl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[dl]),_:1}),l(),_l]),t("td",cl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[il,t("td",al,[t("a",rl,[l("K 个关闭的灯泡"),e(s)])]),ul,t("td",hl,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[fl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[gl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[ml]),_:1}),l(),yl]),t("td",xl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bl,t("td",jl,[t("a",pl,[l("子数组中占绝大多数的元素"),e(s)])]),kl,t("td",Hl,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[ql]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Il]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[wl]),_:1}),l(),Ml]),t("td",vl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ll,t("td",zl,[t("a",Bl,[l("统计作战单位数"),e(s)])]),Cl,t("td",Nl,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Vl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[El]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Kl]),_:1}),l(),Rl]),t("td",Tl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Al,t("td",Ol,[t("a",Pl,[l("查询带键的排列"),e(s)])]),Ul,t("td",Dl,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Fl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Gl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[Jl]),_:1})]),t("td",Ql,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sl,t("td",Wl,[t("a",Xl,[l("最多 K 次交换相邻数位后得到的最小整数"),e(s)])]),Yl,t("td",Zl,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[$l]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[to]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[eo]),_:1}),l(),lo]),t("td",oo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[no,t("td",so,[t("a",_o,[l("通过指令创建有序数组"),e(s)])]),co,t("td",io,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ao]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[ro]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[uo]),_:1}),l(),ho]),t("td",fo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[go,t("td",mo,[t("a",yo,[l("设计最近使用（MRU）队列"),e(s)])]),xo,t("td",bo,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[jo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[po]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ko]),_:1}),l(),Ho]),t("td",qo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Io,t("td",wo,[t("a",Mo,[l("找出到每个位置为止最长的有效障碍赛跑路线"),e(s)])]),vo,t("td",Lo,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[zo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Bo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[Co]),_:1})]),t("td",No,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vo,t("td",Eo,[t("a",Ko,[l("1 比 0 多的子数组个数"),e(s)])]),Ro,t("td",To,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ao]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Oo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Po]),_:1}),l(),Uo]),t("td",Do,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fo,t("td",Go,[t("a",Jo,[l("统计数组中好三元组数目"),e(s)])]),Qo,t("td",So,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Wo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Xo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Yo]),_:1}),l(),Zo]),t("td",$o,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tn,t("td",en,[t("a",ln,[l("得到回文串的最少操作次数"),e(s)])]),on,t("td",nn,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[dn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[_n]),_:1}),l(),cn]),t("td",an,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rn,t("td",un,[t("a",hn,[l("统计包含每个点的矩形数目"),e(s)])]),fn,t("td",gn,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[yn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[xn]),_:1}),l(),bn]),t("td",jn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pn,t("td",kn,[t("a",Hn,[l("以组为单位订音乐会的门票"),e(s)])]),qn,t("td",In,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[wn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Mn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[vn]),_:1}),l(),Ln]),t("td",zn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bn,t("td",Cn,[t("a",Nn,[l("最长递增子序列 II"),e(s)])]),Vn,t("td",En,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Kn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Rn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[Tn]),_:1}),l(),An]),t("td",On,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pn,t("td",Un,[t("a",Dn,[l("最长上传前缀"),e(s)])]),Fn,t("td",Gn,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Jn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Sn]),_:1}),l(),Wn]),t("td",Xn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yn,t("td",Zn,[t("a",$n,[l("满足不等式的数对数目"),e(s)])]),ts,t("td",es,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ls]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[os]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ns]),_:1}),l(),ss]),t("td",ds,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_s,t("td",cs,[t("a",is,[l("统计 K-Big 索引的数量"),e(s)])]),as,t("td",rs,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[us]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[hs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[fs]),_:1}),l(),gs]),t("td",ms,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ys,t("td",xs,[t("a",bs,[l("统计上升四元组"),e(s)])]),js,t("td",ps,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ks]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Hs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[qs]),_:1}),l(),Is]),t("td",ws,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ms,t("td",vs,[t("a",Ls,[l("将数组清空"),e(s)])]),zs,t("td",Bs,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Cs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ns]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Vs]),_:1}),l(),Es]),t("td",Ks,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rs,t("td",Ts,[t("a",As,[l("最大和查询"),e(s)])]),Os,t("td",Ps,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Us]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ds]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Fs]),_:1}),l(),Gs]),t("td",Js,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qs,t("td",Ss,[t("a",Ws,[l("价格递增的最大利润三元组 I"),e(s)])]),Xs,t("td",Ys,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Zs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[$s]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[td]),_:1})]),t("td",ed,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ld,t("td",od,[t("a",nd,[l("子数组不同元素数目的平方和 II"),e(s)])]),sd,t("td",dd,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[_d]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[cd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[id]),_:1}),l(),ad]),t("td",rd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ud,t("td",hd,[t("a",fd,[l("价格递增的最大利润三元组 II"),e(s)])]),gd,t("td",md,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[yd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[xd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[bd]),_:1})]),t("td",jd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pd,t("td",kd,[t("a",Hd,[l("平衡子序列的最大和"),e(s)])]),qd,t("td",Id,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[wd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Md]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vd]),_:1}),l(),Ld]),t("td",zd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bd,t("td",Cd,[t("a",Nd,[l("找到 Alice 和 Bob 可以相遇的建筑"),e(s)])]),Vd,t("td",Ed,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Kd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Rd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Td]),_:1}),l(),Ad]),t("td",Od,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pd,t("td",Ud,[t("a",Dd,[l("折线图上的最大交点数量"),e(s)])]),Fd,t("td",Gd,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Jd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[Qd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Sd]),_:1}),l(),Wd]),t("td",Xd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yd,t("td",Zd,[t("a",$d,[l("将元素分配到两个数组中 II"),e(s)])]),t_,t("td",e_,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[l_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[o_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[n_]),_:1}),l(),s_]),t("td",d_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[__,t("td",c_,[t("a",i_,[l("查找排列的下标"),e(s)])]),a_,t("td",r_,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[u_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[h_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[f_]),_:1}),l(),g_]),t("td",m_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y_,t("td",x_,[t("a",b_,[l("物块放置查询"),e(s)])]),j_,t("td",p_,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[k_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[H_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[q_]),_:1}),l(),I_]),t("td",w_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[M_,t("td",v_,[t("a",L_,[l("数组中的峰值"),e(s)])]),z_,t("td",B_,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[C_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[N_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[V_]),_:1})]),t("td",E_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K_,t("td",R_,[t("a",T_,[l("交替组 III"),e(s)])]),A_,t("td",O_,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[P_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[U_]),_:1})]),t("td",D_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[F_,t("td",G_,[t("a",J_,[l("发 LeetCoin"),e(s)])]),Q_,t("td",S_,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[W_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[X_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Y_]),_:1})]),t("td",Z_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$_,t("td",tc,[t("a",ec,[l("数组中的逆序对"),e(s)])]),lc,t("td",oc,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[nc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[sc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[dc]),_:1}),l(),_c]),t("td",cc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ic,t("td",ac,[t("a",rc,[l("数字流的秩"),e(s)])]),uc,t("td",hc,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[fc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[gc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[mc]),_:1}),l(),yc]),t("td",xc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const Hc=c(u,[["render",bc],["__file","binary-indexed-tree.html.vue"]]);export{Hc as default};
