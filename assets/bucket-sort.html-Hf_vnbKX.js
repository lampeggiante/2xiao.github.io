import{_,r as c,o as i,c as a,a as t,d as e,w as l,b as o,f as u}from"./app-mvY9N9Pc.js";const h={},r=t("h1",{id:"桶排序",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#桶排序","aria-hidden":"true"},"#"),o(" 桶排序")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),p=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),x=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),q=t("code",null,"单调栈",-1),v=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),M=t("code",null,"哈希表",-1),L=t("code",null,"字符串",-1),N=t("code",null,"字符串匹配",-1),V=t("code",null,"树",-1),j=t("code",null,"二叉树",-1),B=t("code",null,"二叉搜索树",-1),C=t("code",null,"最小生成树",-1),E=t("code",null,"图",-1),z=t("code",null,"有序集合",-1),K=t("code",null,"拓扑排序",-1),O=t("code",null,"最短路",-1),R=t("code",null,"强连通分量",-1),D=t("code",null,"欧拉回路",-1),H=t("code",null,"双连通分量",-1),S=t("code",null,"并查集",-1),T=t("code",null,"字典树",-1),W=t("code",null,"线段树",-1),A=t("code",null,"树状数组",-1),F=t("code",null,"后缀数组",-1),G=t("p",null,[t("strong",null,"算法")],-1),J=t("code",null,"枚举",-1),P=t("code",null,"递归",-1),Q=t("code",null,"分治",-1),U=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("span",{class:"blue"},"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),pt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),xt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),qt=t("code",null,"模拟",-1),vt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),Mt=t("code",null,"水塘抽样",-1),Lt=t("code",null,"拒绝采样",-1),Nt=t("code",null,"数据库",-1),Vt=t("code",null,"设计",-1),jt=t("code",null,"数据流",-1),Bt=t("code",null,"脑筋急转弯",-1),Ct=t("code",null,"交互",-1),Et=t("code",null,"迭代器",-1),zt=t("code",null,"多线程",-1),Kt=t("hr",null,null,-1),Ot=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Rt=t("td",{style:{"text-align":"center"}},"164",-1),Dt={style:{"text-align":"left"}},Ht={href:"https://leetcode.com/problems/maximum-gap",target:"_blank",rel:"noopener noreferrer"},St=t("td",{style:{"text-align":"center"}},null,-1),Tt={style:{"text-align":"left"}},Wt=t("code",null,"数组",-1),At=t("code",null,"桶排序",-1),Ft=t("code",null,"基数排序",-1),Gt=t("code",null,"1+",-1),Jt={style:{"text-align":"left"}},Pt=t("td",{style:{"text-align":"center"}},"220",-1),Qt={style:{"text-align":"left"}},Ut={href:"https://leetcode.com/problems/contains-duplicate-iii",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",{style:{"text-align":"center"}},null,-1),Yt={style:{"text-align":"left"}},Zt=t("code",null,"数组",-1),$t=t("code",null,"桶排序",-1),te=t("code",null,"有序集合",-1),ee=t("code",null,"2+",-1),oe={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"347",-1),ne={style:{"text-align":"left"}},de={href:"https://leetcode.com/problems/top-k-frequent-elements",target:"_blank",rel:"noopener noreferrer"},se={style:{"text-align":"center"}},ce={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0347",target:"_blank",rel:"noopener noreferrer"},_e={style:{"text-align":"left"}},ie=t("code",null,"数组",-1),ae=t("code",null,"哈希表",-1),ue=t("code",null,"分治",-1),he=t("code",null,"5+",-1),re={style:{"text-align":"left"}},fe=t("td",{style:{"text-align":"center"}},"451",-1),ge={style:{"text-align":"left"}},me={href:"https://leetcode.com/problems/sort-characters-by-frequency",target:"_blank",rel:"noopener noreferrer"},ye={style:{"text-align":"center"}},pe={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0451",target:"_blank",rel:"noopener noreferrer"},be={style:{"text-align":"left"}},xe=t("code",null,"哈希表",-1),ke=t("code",null,"字符串",-1),qe=t("code",null,"桶排序",-1),ve=t("code",null,"3+",-1),Ie={style:{"text-align":"left"}},we=t("td",{style:{"text-align":"center"}},"692",-1),Me={style:{"text-align":"left"}},Le={href:"https://leetcode.com/problems/top-k-frequent-words",target:"_blank",rel:"noopener noreferrer"},Ne=t("td",{style:{"text-align":"center"}},null,-1),Ve={style:{"text-align":"left"}},je=t("code",null,"字典树",-1),Be=t("code",null,"哈希表",-1),Ce=t("code",null,"字符串",-1),Ee=t("code",null,"4+",-1),ze={style:{"text-align":"left"}},Ke=t("td",{style:{"text-align":"center"}},"912",-1),Oe={style:{"text-align":"left"}},Re={href:"https://leetcode.com/problems/sort-an-array",target:"_blank",rel:"noopener noreferrer"},De=t("td",{style:{"text-align":"center"}},null,-1),He={style:{"text-align":"left"}},Se=t("code",null,"数组",-1),Te=t("code",null,"分治",-1),We=t("code",null,"桶排序",-1),Ae=t("code",null,"5+",-1),Fe={style:{"text-align":"left"}},Ge=t("td",{style:{"text-align":"center"}},"剑指 Offer II 57",-1),Je={style:{"text-align":"left"}},Pe={href:"https://leetcode.cn/problems/7WqeDu",target:"_blank",rel:"noopener noreferrer"},Qe=t("td",{style:{"text-align":"center"}},null,-1),Ue={style:{"text-align":"left"}},Xe=t("code",null,"数组",-1),Ye=t("code",null,"桶排序",-1),Ze=t("code",null,"有序集合",-1),$e=t("code",null,"2+",-1),to={style:{"text-align":"left"}},eo=t("td",{style:{"text-align":"center"}},"剑指 Offer II 60",-1),oo={style:{"text-align":"left"}},lo={href:"https://leetcode.cn/problems/g5c51o",target:"_blank",rel:"noopener noreferrer"},no=t("td",{style:{"text-align":"center"}},null,-1),so={style:{"text-align":"left"}},co=t("code",null,"数组",-1),_o=t("code",null,"哈希表",-1),io=t("code",null,"分治",-1),ao=t("code",null,"5+",-1),uo={style:{"text-align":"left"}};function ho(ro,fo){const n=c("RouterLink"),d=c("ExternalLinkIcon"),s=c("font");return i(),a("div",null,[r,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[F]),_:1})]),G,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),$,o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[zt]),_:1})])]),Kt,u(" prettier-ignore "),t("table",null,[Ot,t("tbody",null,[t("tr",null,[Rt,t("td",Dt,[t("a",Ht,[o("最大间距"),e(d)])]),St,t("td",Tt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[At]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[Ft]),_:1}),o(),Gt]),t("td",Jt,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Pt,t("td",Qt,[t("a",Ut,[o("存在重复元素 III"),e(d)])]),Xt,t("td",Yt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[te]),_:1}),o(),ee]),t("td",oe,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[le,t("td",ne,[t("a",de,[o("前 K 个高频元素"),e(d)])]),t("td",se,[t("a",ce,[o("[✓]"),e(d)])]),t("td",_e,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ie]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[ue]),_:1}),o(),he]),t("td",re,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fe,t("td",ge,[t("a",me,[o("根据字符出现频率排序"),e(d)])]),t("td",ye,[t("a",pe,[o("[✓]"),e(d)])]),t("td",be,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[xe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[ke]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[qe]),_:1}),o(),ve]),t("td",Ie,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[we,t("td",Me,[t("a",Le,[o("前K个高频单词"),e(d)])]),Ne,t("td",Ve,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[je]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Be]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ce]),_:1}),o(),Ee]),t("td",ze,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ke,t("td",Oe,[t("a",Re,[o("排序数组"),e(d)])]),De,t("td",He,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Se]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Te]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[We]),_:1}),o(),Ae]),t("td",Fe,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ge,t("td",Je,[t("a",Pe,[o("值和下标之差都在给定的范围内"),e(d)])]),Qe,t("td",Ue,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Xe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[Ye]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[Ze]),_:1}),o(),$e]),t("td",to,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[eo,t("td",oo,[t("a",lo,[o("出现频率最高的 k 个数字"),e(d)])]),no,t("td",so,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[co]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[_o]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[io]),_:1}),o(),ao]),t("td",uo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const mo=_(h,[["render",ho],["__file","bucket-sort.html.vue"]]);export{mo as default};
