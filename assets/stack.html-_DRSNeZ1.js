import{_ as c,r as _,o as i,c as a,a as t,d as e,w as l,b as o,f as r}from"./app-mvY9N9Pc.js";const h={},u=t("h1",{id:"栈",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#栈","aria-hidden":"true"},"#"),o(" 栈")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("span",{class:"blue"},"栈",-1),M=t("code",null,"单调栈",-1),j=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),H=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),E=t("code",null,"字符串匹配",-1),q=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),O=t("code",null,"二叉搜索树",-1),N=t("code",null,"最小生成树",-1),L=t("code",null,"图",-1),B=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),C=t("code",null,"最短路",-1),Q=t("code",null,"强连通分量",-1),R=t("code",null,"欧拉回路",-1),Z=t("code",null,"双连通分量",-1),G=t("code",null,"并查集",-1),K=t("code",null,"字典树",-1),S=t("code",null,"线段树",-1),T=t("code",null,"树状数组",-1),U=t("code",null,"后缀数组",-1),X=t("p",null,[t("strong",null,"算法")],-1),Y=t("code",null,"枚举",-1),A=t("code",null,"递归",-1),P=t("code",null,"分治",-1),D=t("code",null,"回溯",-1),F=t("code",null,"贪心",-1),J=t("code",null,"动态规划",-1),W=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),jt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),Ht=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),Et=t("code",null,"数据库",-1),qt=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Ot=t("code",null,"脑筋急转弯",-1),Nt=t("code",null,"交互",-1),Lt=t("code",null,"迭代器",-1),Bt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Ct=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Qt=t("td",{style:{"text-align":"center"}},"20",-1),Rt={style:{"text-align":"left"}},Zt={href:"https://leetcode.com/problems/valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Gt={style:{"text-align":"center"}},Kt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0020",target:"_blank",rel:"noopener noreferrer"},St={style:{"text-align":"left"}},Tt=t("code",null,"栈",-1),Ut=t("code",null,"字符串",-1),Xt={style:{"text-align":"left"}},Yt=t("td",{style:{"text-align":"center"}},"32",-1),At={style:{"text-align":"left"}},Pt={href:"https://leetcode.com/problems/longest-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Dt={style:{"text-align":"center"}},Ft={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0032",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"left"}},Wt=t("code",null,"栈",-1),$t=t("code",null,"字符串",-1),te=t("code",null,"动态规划",-1),ee={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"42",-1),le={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},se={style:{"text-align":"center"}},de={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0042",target:"_blank",rel:"noopener noreferrer"},_e={style:{"text-align":"left"}},ce=t("code",null,"栈",-1),ie=t("code",null,"数组",-1),ae=t("code",null,"双指针",-1),re=t("code",null,"2+",-1),he={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"71",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/simplify-path",target:"_blank",rel:"noopener noreferrer"},me={style:{"text-align":"center"}},ye={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0071",target:"_blank",rel:"noopener noreferrer"},xe={style:{"text-align":"left"}},pe=t("code",null,"栈",-1),be=t("code",null,"字符串",-1),ke={style:{"text-align":"left"}},Me=t("td",{style:{"text-align":"center"}},"84",-1),je={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/largest-rectangle-in-histogram",target:"_blank",rel:"noopener noreferrer"},Ie={style:{"text-align":"center"}},He={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0084",target:"_blank",rel:"noopener noreferrer"},we={style:{"text-align":"left"}},Ee=t("code",null,"栈",-1),qe=t("code",null,"数组",-1),ze=t("code",null,"单调栈",-1),Oe={style:{"text-align":"left"}},Ne=t("td",{style:{"text-align":"center"}},"85",-1),Le={style:{"text-align":"left"}},Be={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},Ve={style:{"text-align":"center"}},Ce={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0085",target:"_blank",rel:"noopener noreferrer"},Qe={style:{"text-align":"left"}},Re=t("code",null,"栈",-1),Ze=t("code",null,"数组",-1),Ge=t("code",null,"动态规划",-1),Ke=t("code",null,"2+",-1),Se={style:{"text-align":"left"}},Te=t("td",{style:{"text-align":"center"}},"94",-1),Ue={style:{"text-align":"left"}},Xe={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ye={style:{"text-align":"center"}},Ae={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0094",target:"_blank",rel:"noopener noreferrer"},Pe={style:{"text-align":"left"}},De=t("code",null,"栈",-1),Fe=t("code",null,"树",-1),Je=t("code",null,"深度优先搜索",-1),We=t("code",null,"1+",-1),$e={style:{"text-align":"left"}},to=t("td",{style:{"text-align":"center"}},"114",-1),eo={style:{"text-align":"left"}},oo={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},lo={style:{"text-align":"center"}},no={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0114",target:"_blank",rel:"noopener noreferrer"},so={style:{"text-align":"left"}},_o=t("code",null,"栈",-1),co=t("code",null,"树",-1),io=t("code",null,"深度优先搜索",-1),ao=t("code",null,"2+",-1),ro={style:{"text-align":"left"}},ho=t("td",{style:{"text-align":"center"}},"143",-1),uo={style:{"text-align":"left"}},fo={href:"https://leetcode.com/problems/reorder-list",target:"_blank",rel:"noopener noreferrer"},go={style:{"text-align":"center"}},mo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0143",target:"_blank",rel:"noopener noreferrer"},yo={style:{"text-align":"left"}},xo=t("code",null,"栈",-1),po=t("code",null,"递归",-1),bo=t("code",null,"链表",-1),ko=t("code",null,"1+",-1),Mo={style:{"text-align":"left"}},jo=t("td",{style:{"text-align":"center"}},"144",-1),vo={style:{"text-align":"left"}},Io={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ho={style:{"text-align":"center"}},wo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0144",target:"_blank",rel:"noopener noreferrer"},Eo={style:{"text-align":"left"}},qo=t("code",null,"栈",-1),zo=t("code",null,"树",-1),Oo=t("code",null,"深度优先搜索",-1),No=t("code",null,"1+",-1),Lo={style:{"text-align":"left"}},Bo=t("td",{style:{"text-align":"center"}},"145",-1),Vo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Qo={style:{"text-align":"center"}},Ro={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0145",target:"_blank",rel:"noopener noreferrer"},Zo={style:{"text-align":"left"}},Go=t("code",null,"栈",-1),Ko=t("code",null,"树",-1),So=t("code",null,"深度优先搜索",-1),To=t("code",null,"1+",-1),Uo={style:{"text-align":"left"}},Xo=t("td",{style:{"text-align":"center"}},"150",-1),Yo={style:{"text-align":"left"}},Ao={href:"https://leetcode.com/problems/evaluate-reverse-polish-notation",target:"_blank",rel:"noopener noreferrer"},Po={style:{"text-align":"center"}},Do={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0150",target:"_blank",rel:"noopener noreferrer"},Fo={style:{"text-align":"left"}},Jo=t("code",null,"栈",-1),Wo=t("code",null,"数组",-1),$o=t("code",null,"数学",-1),tl={style:{"text-align":"left"}},el=t("td",{style:{"text-align":"center"}},"155",-1),ol={style:{"text-align":"left"}},ll={href:"https://leetcode.com/problems/min-stack",target:"_blank",rel:"noopener noreferrer"},nl={style:{"text-align":"center"}},sl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0155",target:"_blank",rel:"noopener noreferrer"},dl={style:{"text-align":"left"}},_l=t("code",null,"栈",-1),cl=t("code",null,"设计",-1),il={style:{"text-align":"left"}},al=t("td",{style:{"text-align":"center"}},"173",-1),rl={style:{"text-align":"left"}},hl={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},ul={style:{"text-align":"center"}},fl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0173",target:"_blank",rel:"noopener noreferrer"},gl={style:{"text-align":"left"}},ml=t("code",null,"栈",-1),yl=t("code",null,"树",-1),xl=t("code",null,"设计",-1),pl=t("code",null,"3+",-1),bl={style:{"text-align":"left"}},kl=t("td",{style:{"text-align":"center"}},"224",-1),Ml={style:{"text-align":"left"}},jl={href:"https://leetcode.com/problems/basic-calculator",target:"_blank",rel:"noopener noreferrer"},vl={style:{"text-align":"center"}},Il={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0224",target:"_blank",rel:"noopener noreferrer"},Hl={style:{"text-align":"left"}},wl=t("code",null,"栈",-1),El=t("code",null,"递归",-1),ql=t("code",null,"数学",-1),zl=t("code",null,"1+",-1),Ol={style:{"text-align":"left"}},Nl=t("td",{style:{"text-align":"center"}},"225",-1),Ll={style:{"text-align":"left"}},Bl={href:"https://leetcode.com/problems/implement-stack-using-queues",target:"_blank",rel:"noopener noreferrer"},Vl={style:{"text-align":"center"}},Cl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0225",target:"_blank",rel:"noopener noreferrer"},Ql={style:{"text-align":"left"}},Rl=t("code",null,"栈",-1),Zl=t("code",null,"设计",-1),Gl=t("code",null,"队列",-1),Kl={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"227",-1),Tl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/basic-calculator-ii",target:"_blank",rel:"noopener noreferrer"},Xl={style:{"text-align":"center"}},Yl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0227",target:"_blank",rel:"noopener noreferrer"},Al={style:{"text-align":"left"}},Pl=t("code",null,"栈",-1),Dl=t("code",null,"数学",-1),Fl=t("code",null,"字符串",-1),Jl={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"232",-1),$l={style:{"text-align":"left"}},tn={href:"https://leetcode.com/problems/implement-queue-using-stacks",target:"_blank",rel:"noopener noreferrer"},en={style:{"text-align":"center"}},on={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0232",target:"_blank",rel:"noopener noreferrer"},ln={style:{"text-align":"left"}},nn=t("code",null,"栈",-1),sn=t("code",null,"设计",-1),dn=t("code",null,"队列",-1),_n={style:{"text-align":"left"}},cn=t("td",{style:{"text-align":"center"}},"234",-1),an={style:{"text-align":"left"}},rn={href:"https://leetcode.com/problems/palindrome-linked-list",target:"_blank",rel:"noopener noreferrer"},hn={style:{"text-align":"center"}},un={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0234",target:"_blank",rel:"noopener noreferrer"},fn={style:{"text-align":"left"}},gn=t("code",null,"栈",-1),mn=t("code",null,"递归",-1),yn=t("code",null,"链表",-1),xn=t("code",null,"1+",-1),pn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"255",-1),kn={style:{"text-align":"left"}},Mn={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},jn=t("td",{style:{"text-align":"center"}},null,-1),vn={style:{"text-align":"left"}},In=t("code",null,"栈",-1),Hn=t("code",null,"树",-1),wn=t("code",null,"二叉搜索树",-1),En=t("code",null,"4+",-1),qn={style:{"text-align":"left"}},zn=t("td",{style:{"text-align":"center"}},"272",-1),On={style:{"text-align":"left"}},Nn={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},Ln=t("td",{style:{"text-align":"center"}},null,-1),Bn={style:{"text-align":"left"}},Vn=t("code",null,"栈",-1),Cn=t("code",null,"树",-1),Qn=t("code",null,"深度优先搜索",-1),Rn=t("code",null,"4+",-1),Zn={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"316",-1),Kn={style:{"text-align":"left"}},Sn={href:"https://leetcode.com/problems/remove-duplicate-letters",target:"_blank",rel:"noopener noreferrer"},Tn={style:{"text-align":"center"}},Un={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0316",target:"_blank",rel:"noopener noreferrer"},Xn={style:{"text-align":"left"}},Yn=t("code",null,"栈",-1),An=t("code",null,"贪心",-1),Pn=t("code",null,"字符串",-1),Dn=t("code",null,"1+",-1),Fn={style:{"text-align":"left"}},Jn=t("td",{style:{"text-align":"center"}},"321",-1),Wn={style:{"text-align":"left"}},$n={href:"https://leetcode.com/problems/create-maximum-number",target:"_blank",rel:"noopener noreferrer"},ts=t("td",{style:{"text-align":"center"}},null,-1),es={style:{"text-align":"left"}},os=t("code",null,"栈",-1),ls=t("code",null,"贪心",-1),ns=t("code",null,"数组",-1),ss=t("code",null,"2+",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"331",-1),cs={style:{"text-align":"left"}},is={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},as=t("td",{style:{"text-align":"center"}},null,-1),rs={style:{"text-align":"left"}},hs=t("code",null,"栈",-1),us=t("code",null,"树",-1),fs=t("code",null,"字符串",-1),gs=t("code",null,"1+",-1),ms={style:{"text-align":"left"}},ys=t("td",{style:{"text-align":"center"}},"341",-1),xs={style:{"text-align":"left"}},ps={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},bs=t("td",{style:{"text-align":"center"}},null,-1),ks={style:{"text-align":"left"}},Ms=t("code",null,"栈",-1),js=t("code",null,"树",-1),vs=t("code",null,"深度优先搜索",-1),Is=t("code",null,"3+",-1),Hs={style:{"text-align":"left"}},ws=t("td",{style:{"text-align":"center"}},"364",-1),Es={style:{"text-align":"left"}},qs={href:"https://leetcode.com/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},zs=t("td",{style:{"text-align":"center"}},null,-1),Os={style:{"text-align":"left"}},Ns=t("code",null,"栈",-1),Ls=t("code",null,"深度优先搜索",-1),Bs=t("code",null,"广度优先搜索",-1),Vs={style:{"text-align":"left"}},Cs=t("td",{style:{"text-align":"center"}},"385",-1),Qs={style:{"text-align":"left"}},Rs={href:"https://leetcode.com/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},Zs=t("td",{style:{"text-align":"center"}},null,-1),Gs={style:{"text-align":"left"}},Ks=t("code",null,"栈",-1),Ss=t("code",null,"深度优先搜索",-1),Ts=t("code",null,"字符串",-1),Us={style:{"text-align":"left"}},Xs=t("td",{style:{"text-align":"center"}},"388",-1),Ys={style:{"text-align":"left"}},As={href:"https://leetcode.com/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},Ps=t("td",{style:{"text-align":"center"}},null,-1),Ds={style:{"text-align":"left"}},Fs=t("code",null,"栈",-1),Js=t("code",null,"深度优先搜索",-1),Ws=t("code",null,"字符串",-1),$s={style:{"text-align":"left"}},td=t("td",{style:{"text-align":"center"}},"394",-1),ed={style:{"text-align":"left"}},od={href:"https://leetcode.com/problems/decode-string",target:"_blank",rel:"noopener noreferrer"},ld={style:{"text-align":"center"}},nd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0394",target:"_blank",rel:"noopener noreferrer"},sd={style:{"text-align":"left"}},dd=t("code",null,"栈",-1),_d=t("code",null,"递归",-1),cd=t("code",null,"字符串",-1),id={style:{"text-align":"left"}},ad=t("td",{style:{"text-align":"center"}},"402",-1),rd={style:{"text-align":"left"}},hd={href:"https://leetcode.com/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},ud=t("td",{style:{"text-align":"center"}},null,-1),fd={style:{"text-align":"left"}},gd=t("code",null,"栈",-1),md=t("code",null,"贪心",-1),yd=t("code",null,"字符串",-1),xd=t("code",null,"1+",-1),pd={style:{"text-align":"left"}},bd=t("td",{style:{"text-align":"center"}},"426",-1),kd={style:{"text-align":"left"}},Md={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},jd={style:{"text-align":"center"}},vd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0426",target:"_blank",rel:"noopener noreferrer"},Id={style:{"text-align":"left"}},Hd=t("code",null,"栈",-1),wd=t("code",null,"树",-1),Ed=t("code",null,"深度优先搜索",-1),qd=t("code",null,"4+",-1),zd={style:{"text-align":"left"}},Od=t("td",{style:{"text-align":"center"}},"439",-1),Nd={style:{"text-align":"left"}},Ld={href:"https://leetcode.com/problems/ternary-expression-parser",target:"_blank",rel:"noopener noreferrer"},Bd=t("td",{style:{"text-align":"center"}},null,-1),Vd={style:{"text-align":"left"}},Cd=t("code",null,"栈",-1),Qd=t("code",null,"递归",-1),Rd=t("code",null,"字符串",-1),Zd={style:{"text-align":"left"}},Gd=t("td",{style:{"text-align":"center"}},"445",-1),Kd={style:{"text-align":"left"}},Sd={href:"https://leetcode.com/problems/add-two-numbers-ii",target:"_blank",rel:"noopener noreferrer"},Td={style:{"text-align":"center"}},Ud={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0445",target:"_blank",rel:"noopener noreferrer"},Xd={style:{"text-align":"left"}},Yd=t("code",null,"栈",-1),Ad=t("code",null,"链表",-1),Pd=t("code",null,"数学",-1),Dd={style:{"text-align":"left"}},Fd=t("td",{style:{"text-align":"center"}},"456",-1),Jd={style:{"text-align":"left"}},Wd={href:"https://leetcode.com/problems/132-pattern",target:"_blank",rel:"noopener noreferrer"},$d=t("td",{style:{"text-align":"center"}},null,-1),t_={style:{"text-align":"left"}},e_=t("code",null,"栈",-1),o_=t("code",null,"数组",-1),l_=t("code",null,"二分查找",-1),n_=t("code",null,"2+",-1),s_={style:{"text-align":"left"}},d_=t("td",{style:{"text-align":"center"}},"484",-1),__={style:{"text-align":"left"}},c_={href:"https://leetcode.com/problems/find-permutation",target:"_blank",rel:"noopener noreferrer"},i_=t("td",{style:{"text-align":"center"}},null,-1),a_={style:{"text-align":"left"}},r_=t("code",null,"栈",-1),h_=t("code",null,"贪心",-1),u_=t("code",null,"数组",-1),f_=t("code",null,"1+",-1),g_={style:{"text-align":"left"}},m_=t("td",{style:{"text-align":"center"}},"488",-1),y_={style:{"text-align":"left"}},x_={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},p_=t("td",{style:{"text-align":"center"}},null,-1),b_={style:{"text-align":"left"}},k_=t("code",null,"栈",-1),M_=t("code",null,"广度优先搜索",-1),j_=t("code",null,"记忆化搜索",-1),v_=t("code",null,"2+",-1),I_={style:{"text-align":"left"}},H_=t("td",{style:{"text-align":"center"}},"496",-1),w_={style:{"text-align":"left"}},E_={href:"https://leetcode.com/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},q_={style:{"text-align":"center"}},z_={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0496",target:"_blank",rel:"noopener noreferrer"},O_={style:{"text-align":"left"}},N_=t("code",null,"栈",-1),L_=t("code",null,"数组",-1),B_=t("code",null,"哈希表",-1),V_=t("code",null,"1+",-1),C_={style:{"text-align":"left"}},Q_=t("td",{style:{"text-align":"center"}},"503",-1),R_={style:{"text-align":"left"}},Z_={href:"https://leetcode.com/problems/next-greater-element-ii",target:"_blank",rel:"noopener noreferrer"},G_={style:{"text-align":"center"}},K_={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0503",target:"_blank",rel:"noopener noreferrer"},S_={style:{"text-align":"left"}},T_=t("code",null,"栈",-1),U_=t("code",null,"数组",-1),X_=t("code",null,"单调栈",-1),Y_={style:{"text-align":"left"}},A_=t("td",{style:{"text-align":"center"}},"536",-1),P_={style:{"text-align":"left"}},D_={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},F_=t("td",{style:{"text-align":"center"}},null,-1),J_={style:{"text-align":"left"}},W_=t("code",null,"栈",-1),$_=t("code",null,"树",-1),tc=t("code",null,"深度优先搜索",-1),ec=t("code",null,"2+",-1),oc={style:{"text-align":"left"}},lc=t("td",{style:{"text-align":"center"}},"581",-1),nc={style:{"text-align":"left"}},sc={href:"https://leetcode.com/problems/shortest-unsorted-continuous-subarray",target:"_blank",rel:"noopener noreferrer"},dc=t("td",{style:{"text-align":"center"}},null,-1),_c={style:{"text-align":"left"}},cc=t("code",null,"栈",-1),ic=t("code",null,"贪心",-1),ac=t("code",null,"数组",-1),rc=t("code",null,"3+",-1),hc={style:{"text-align":"left"}},uc=t("td",{style:{"text-align":"center"}},"589",-1),fc={style:{"text-align":"left"}},gc={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},mc={style:{"text-align":"center"}},yc={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0589",target:"_blank",rel:"noopener noreferrer"},xc={style:{"text-align":"left"}},pc=t("code",null,"栈",-1),bc=t("code",null,"树",-1),kc=t("code",null,"深度优先搜索",-1),Mc={style:{"text-align":"left"}},jc=t("td",{style:{"text-align":"center"}},"590",-1),vc={style:{"text-align":"left"}},Ic={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Hc={style:{"text-align":"center"}},wc={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0590",target:"_blank",rel:"noopener noreferrer"},Ec={style:{"text-align":"left"}},qc=t("code",null,"栈",-1),zc=t("code",null,"树",-1),Oc=t("code",null,"深度优先搜索",-1),Nc={style:{"text-align":"left"}},Lc=t("td",{style:{"text-align":"center"}},"591",-1),Bc={style:{"text-align":"left"}},Vc={href:"https://leetcode.com/problems/tag-validator",target:"_blank",rel:"noopener noreferrer"},Cc=t("td",{style:{"text-align":"center"}},null,-1),Qc={style:{"text-align":"left"}},Rc=t("code",null,"栈",-1),Zc=t("code",null,"字符串",-1),Gc={style:{"text-align":"left"}},Kc=t("td",{style:{"text-align":"center"}},"636",-1),Sc={style:{"text-align":"left"}},Tc={href:"https://leetcode.com/problems/exclusive-time-of-functions",target:"_blank",rel:"noopener noreferrer"},Uc=t("td",{style:{"text-align":"center"}},null,-1),Xc={style:{"text-align":"left"}},Yc=t("code",null,"栈",-1),Ac=t("code",null,"数组",-1),Pc={style:{"text-align":"left"}},Dc=t("td",{style:{"text-align":"center"}},"654",-1),Fc={style:{"text-align":"left"}},Jc={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wc={style:{"text-align":"center"}},$c={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0654",target:"_blank",rel:"noopener noreferrer"},ti={style:{"text-align":"left"}},ei=t("code",null,"栈",-1),oi=t("code",null,"树",-1),li=t("code",null,"数组",-1),ni=t("code",null,"3+",-1),si={style:{"text-align":"left"}},di=t("td",{style:{"text-align":"center"}},"678",-1),_i={style:{"text-align":"left"}},ci={href:"https://leetcode.com/problems/valid-parenthesis-string",target:"_blank",rel:"noopener noreferrer"},ii={style:{"text-align":"center"}},ai={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0678",target:"_blank",rel:"noopener noreferrer"},ri={style:{"text-align":"left"}},hi=t("code",null,"栈",-1),ui=t("code",null,"贪心",-1),fi=t("code",null,"字符串",-1),gi=t("code",null,"1+",-1),mi={style:{"text-align":"left"}},yi=t("td",{style:{"text-align":"center"}},"682",-1),xi={style:{"text-align":"left"}},pi={href:"https://leetcode.com/problems/baseball-game",target:"_blank",rel:"noopener noreferrer"},bi={style:{"text-align":"center"}},ki={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0682",target:"_blank",rel:"noopener noreferrer"},Mi={style:{"text-align":"left"}},ji=t("code",null,"栈",-1),vi=t("code",null,"数组",-1),Ii=t("code",null,"模拟",-1),Hi={style:{"text-align":"left"}},wi=t("td",{style:{"text-align":"center"}},"716",-1),Ei={style:{"text-align":"left"}},qi={href:"https://leetcode.com/problems/max-stack",target:"_blank",rel:"noopener noreferrer"},zi=t("td",{style:{"text-align":"center"}},null,-1),Oi={style:{"text-align":"left"}},Ni=t("code",null,"栈",-1),Li=t("code",null,"设计",-1),Bi=t("code",null,"链表",-1),Vi=t("code",null,"2+",-1),Ci={style:{"text-align":"left"}},Qi=t("td",{style:{"text-align":"center"}},"726",-1),Ri={style:{"text-align":"left"}},Zi={href:"https://leetcode.com/problems/number-of-atoms",target:"_blank",rel:"noopener noreferrer"},Gi=t("td",{style:{"text-align":"center"}},null,-1),Ki={style:{"text-align":"left"}},Si=t("code",null,"栈",-1),Ti=t("code",null,"哈希表",-1),Ui=t("code",null,"字符串",-1),Xi=t("code",null,"1+",-1),Yi={style:{"text-align":"left"}},Ai=t("td",{style:{"text-align":"center"}},"735",-1),Pi={style:{"text-align":"left"}},Di={href:"https://leetcode.com/problems/asteroid-collision",target:"_blank",rel:"noopener noreferrer"},Fi=t("td",{style:{"text-align":"center"}},null,-1),Ji={style:{"text-align":"left"}},Wi=t("code",null,"栈",-1),$i=t("code",null,"数组",-1),ta=t("code",null,"模拟",-1),ea={style:{"text-align":"left"}},oa=t("td",{style:{"text-align":"center"}},"736",-1),la={style:{"text-align":"left"}},na={href:"https://leetcode.com/problems/parse-lisp-expression",target:"_blank",rel:"noopener noreferrer"},sa=t("td",{style:{"text-align":"center"}},null,-1),da={style:{"text-align":"left"}},_a=t("code",null,"栈",-1),ca=t("code",null,"递归",-1),ia=t("code",null,"哈希表",-1),aa=t("code",null,"1+",-1),ra={style:{"text-align":"left"}},ha=t("td",{style:{"text-align":"center"}},"739",-1),ua={style:{"text-align":"left"}},fa={href:"https://leetcode.com/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},ga={style:{"text-align":"center"}},ma={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0739",target:"_blank",rel:"noopener noreferrer"},ya={style:{"text-align":"left"}},xa=t("code",null,"栈",-1),pa=t("code",null,"数组",-1),ba=t("code",null,"单调栈",-1),ka={style:{"text-align":"left"}},Ma=t("td",{style:{"text-align":"center"}},"768",-1),ja={style:{"text-align":"left"}},va={href:"https://leetcode.com/problems/max-chunks-to-make-sorted-ii",target:"_blank",rel:"noopener noreferrer"},Ia=t("td",{style:{"text-align":"center"}},null,-1),Ha={style:{"text-align":"left"}},wa=t("code",null,"栈",-1),Ea=t("code",null,"贪心",-1),qa=t("code",null,"数组",-1),za=t("code",null,"2+",-1),Oa={style:{"text-align":"left"}},Na=t("td",{style:{"text-align":"center"}},"769",-1),La={style:{"text-align":"left"}},Ba={href:"https://leetcode.com/problems/max-chunks-to-make-sorted",target:"_blank",rel:"noopener noreferrer"},Va=t("td",{style:{"text-align":"center"}},null,-1),Ca={style:{"text-align":"left"}},Qa=t("code",null,"栈",-1),Ra=t("code",null,"贪心",-1),Za=t("code",null,"数组",-1),Ga=t("code",null,"2+",-1),Ka={style:{"text-align":"left"}},Sa=t("td",{style:{"text-align":"center"}},"770",-1),Ta={style:{"text-align":"left"}},Ua={href:"https://leetcode.com/problems/basic-calculator-iv",target:"_blank",rel:"noopener noreferrer"},Xa=t("td",{style:{"text-align":"center"}},null,-1),Ya={style:{"text-align":"left"}},Aa=t("code",null,"栈",-1),Pa=t("code",null,"递归",-1),Da=t("code",null,"哈希表",-1),Fa=t("code",null,"2+",-1),Ja={style:{"text-align":"left"}},Wa=t("td",{style:{"text-align":"center"}},"772",-1),$a={style:{"text-align":"left"}},tr={href:"https://leetcode.com/problems/basic-calculator-iii",target:"_blank",rel:"noopener noreferrer"},er={style:{"text-align":"center"}},or={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0772",target:"_blank",rel:"noopener noreferrer"},lr={style:{"text-align":"left"}},nr=t("code",null,"栈",-1),sr=t("code",null,"递归",-1),dr=t("code",null,"数学",-1),_r=t("code",null,"1+",-1),cr={style:{"text-align":"left"}},ir=t("td",{style:{"text-align":"center"}},"844",-1),ar={style:{"text-align":"left"}},rr={href:"https://leetcode.com/problems/backspace-string-compare",target:"_blank",rel:"noopener noreferrer"},hr={style:{"text-align":"center"}},ur={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0844",target:"_blank",rel:"noopener noreferrer"},fr={style:{"text-align":"left"}},gr=t("code",null,"栈",-1),mr=t("code",null,"双指针",-1),yr=t("code",null,"字符串",-1),xr=t("code",null,"1+",-1),pr={style:{"text-align":"left"}},br=t("td",{style:{"text-align":"center"}},"853",-1),kr={style:{"text-align":"left"}},Mr={href:"https://leetcode.com/problems/car-fleet",target:"_blank",rel:"noopener noreferrer"},jr=t("td",{style:{"text-align":"center"}},null,-1),vr={style:{"text-align":"left"}},Ir=t("code",null,"栈",-1),Hr=t("code",null,"数组",-1),wr=t("code",null,"排序",-1),Er=t("code",null,"1+",-1),qr={style:{"text-align":"left"}},zr=t("td",{style:{"text-align":"center"}},"856",-1),Or={style:{"text-align":"left"}},Nr={href:"https://leetcode.com/problems/score-of-parentheses",target:"_blank",rel:"noopener noreferrer"},Lr=t("td",{style:{"text-align":"center"}},null,-1),Br={style:{"text-align":"left"}},Vr=t("code",null,"栈",-1),Cr=t("code",null,"字符串",-1),Qr={style:{"text-align":"left"}},Rr=t("td",{style:{"text-align":"center"}},"880",-1),Zr={style:{"text-align":"left"}},Gr={href:"https://leetcode.com/problems/decoded-string-at-index",target:"_blank",rel:"noopener noreferrer"},Kr={style:{"text-align":"center"}},Sr={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0880",target:"_blank",rel:"noopener noreferrer"},Tr={style:{"text-align":"left"}},Ur=t("code",null,"栈",-1),Xr=t("code",null,"字符串",-1),Yr={style:{"text-align":"left"}},Ar=t("td",{style:{"text-align":"center"}},"895",-1),Pr={style:{"text-align":"left"}},Dr={href:"https://leetcode.com/problems/maximum-frequency-stack",target:"_blank",rel:"noopener noreferrer"},Fr=t("td",{style:{"text-align":"center"}},null,-1),Jr={style:{"text-align":"left"}},Wr=t("code",null,"栈",-1),$r=t("code",null,"设计",-1),t1=t("code",null,"哈希表",-1),e1=t("code",null,"1+",-1),o1={style:{"text-align":"left"}},l1=t("td",{style:{"text-align":"center"}},"897",-1),n1={style:{"text-align":"left"}},s1={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},d1=t("td",{style:{"text-align":"center"}},null,-1),_1={style:{"text-align":"left"}},c1=t("code",null,"栈",-1),i1=t("code",null,"树",-1),a1=t("code",null,"深度优先搜索",-1),r1=t("code",null,"2+",-1),h1={style:{"text-align":"left"}},u1=t("td",{style:{"text-align":"center"}},"901",-1),f1={style:{"text-align":"left"}},g1={href:"https://leetcode.com/problems/online-stock-span",target:"_blank",rel:"noopener noreferrer"},m1=t("td",{style:{"text-align":"center"}},null,-1),y1={style:{"text-align":"left"}},x1=t("code",null,"栈",-1),p1=t("code",null,"设计",-1),b1=t("code",null,"数据流",-1),k1=t("code",null,"1+",-1),M1={style:{"text-align":"left"}},j1=t("td",{style:{"text-align":"center"}},"907",-1),v1={style:{"text-align":"left"}},I1={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},H1=t("td",{style:{"text-align":"center"}},null,-1),w1={style:{"text-align":"left"}},E1=t("code",null,"栈",-1),q1=t("code",null,"数组",-1),z1=t("code",null,"动态规划",-1),O1=t("code",null,"1+",-1),N1={style:{"text-align":"left"}},L1=t("td",{style:{"text-align":"center"}},"921",-1),B1={style:{"text-align":"left"}},V1={href:"https://leetcode.com/problems/minimum-add-to-make-parentheses-valid",target:"_blank",rel:"noopener noreferrer"},C1={style:{"text-align":"center"}},Q1={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0921",target:"_blank",rel:"noopener noreferrer"},R1={style:{"text-align":"left"}},Z1=t("code",null,"栈",-1),G1=t("code",null,"贪心",-1),K1=t("code",null,"字符串",-1),S1={style:{"text-align":"left"}},T1=t("td",{style:{"text-align":"center"}},"936",-1),U1={style:{"text-align":"left"}},X1={href:"https://leetcode.com/problems/stamping-the-sequence",target:"_blank",rel:"noopener noreferrer"},Y1=t("td",{style:{"text-align":"center"}},null,-1),A1={style:{"text-align":"left"}},P1=t("code",null,"栈",-1),D1=t("code",null,"贪心",-1),F1=t("code",null,"队列",-1),J1=t("code",null,"1+",-1),W1={style:{"text-align":"left"}},$1=t("td",{style:{"text-align":"center"}},"946",-1),th={style:{"text-align":"left"}},eh={href:"https://leetcode.com/problems/validate-stack-sequences",target:"_blank",rel:"noopener noreferrer"},oh={style:{"text-align":"center"}},lh={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0946",target:"_blank",rel:"noopener noreferrer"},nh={style:{"text-align":"left"}},sh=t("code",null,"栈",-1),dh=t("code",null,"数组",-1),_h=t("code",null,"模拟",-1),ch={style:{"text-align":"left"}},ih=t("td",{style:{"text-align":"center"}},"962",-1),ah={style:{"text-align":"left"}},rh={href:"https://leetcode.com/problems/maximum-width-ramp",target:"_blank",rel:"noopener noreferrer"},hh={style:{"text-align":"center"}},uh={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0962",target:"_blank",rel:"noopener noreferrer"},fh={style:{"text-align":"left"}},gh=t("code",null,"栈",-1),mh=t("code",null,"数组",-1),yh=t("code",null,"单调栈",-1),xh={style:{"text-align":"left"}},ph=t("td",{style:{"text-align":"center"}},"975",-1),bh={style:{"text-align":"left"}},kh={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},Mh=t("td",{style:{"text-align":"center"}},null,-1),jh={style:{"text-align":"left"}},vh=t("code",null,"栈",-1),Ih=t("code",null,"数组",-1),Hh=t("code",null,"动态规划",-1),wh=t("code",null,"2+",-1),Eh={style:{"text-align":"left"}},qh=t("td",{style:{"text-align":"center"}},"1003",-1),zh={style:{"text-align":"left"}},Oh={href:"https://leetcode.com/problems/check-if-word-is-valid-after-substitutions",target:"_blank",rel:"noopener noreferrer"},Nh=t("td",{style:{"text-align":"center"}},null,-1),Lh={style:{"text-align":"left"}},Bh=t("code",null,"栈",-1),Vh=t("code",null,"字符串",-1),Ch={style:{"text-align":"left"}},Qh=t("td",{style:{"text-align":"center"}},"1006",-1),Rh={style:{"text-align":"left"}},Zh={href:"https://leetcode.com/problems/clumsy-factorial",target:"_blank",rel:"noopener noreferrer"},Gh=t("td",{style:{"text-align":"center"}},null,-1),Kh={style:{"text-align":"left"}},Sh=t("code",null,"栈",-1),Th=t("code",null,"数学",-1),Uh=t("code",null,"模拟",-1),Xh={style:{"text-align":"left"}},Yh=t("td",{style:{"text-align":"center"}},"1008",-1),Ah={style:{"text-align":"left"}},Ph={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Dh={style:{"text-align":"center"}},Fh={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1008",target:"_blank",rel:"noopener noreferrer"},Jh={style:{"text-align":"left"}},Wh=t("code",null,"栈",-1),$h=t("code",null,"树",-1),tu=t("code",null,"二叉搜索树",-1),eu=t("code",null,"3+",-1),ou={style:{"text-align":"left"}},lu=t("td",{style:{"text-align":"center"}},"1019",-1),nu={style:{"text-align":"left"}},su={href:"https://leetcode.com/problems/next-greater-node-in-linked-list",target:"_blank",rel:"noopener noreferrer"},du=t("td",{style:{"text-align":"center"}},null,-1),_u={style:{"text-align":"left"}},cu=t("code",null,"栈",-1),iu=t("code",null,"数组",-1),au=t("code",null,"链表",-1),ru=t("code",null,"1+",-1),hu={style:{"text-align":"left"}},uu=t("td",{style:{"text-align":"center"}},"1021",-1),fu={style:{"text-align":"left"}},gu={href:"https://leetcode.com/problems/remove-outermost-parentheses",target:"_blank",rel:"noopener noreferrer"},mu={style:{"text-align":"center"}},yu={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1021",target:"_blank",rel:"noopener noreferrer"},xu={style:{"text-align":"left"}},pu=t("code",null,"栈",-1),bu=t("code",null,"字符串",-1),ku={style:{"text-align":"left"}},Mu=t("td",{style:{"text-align":"center"}},"1047",-1),ju={style:{"text-align":"left"}},vu={href:"https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string",target:"_blank",rel:"noopener noreferrer"},Iu={style:{"text-align":"center"}},Hu={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1047",target:"_blank",rel:"noopener noreferrer"},wu={style:{"text-align":"left"}},Eu=t("code",null,"栈",-1),qu=t("code",null,"字符串",-1),zu={style:{"text-align":"left"}},Ou=t("td",{style:{"text-align":"center"}},"1063",-1),Nu={style:{"text-align":"left"}},Lu={href:"https://leetcode.com/problems/number-of-valid-subarrays",target:"_blank",rel:"noopener noreferrer"},Bu=t("td",{style:{"text-align":"center"}},null,-1),Vu={style:{"text-align":"left"}},Cu=t("code",null,"栈",-1),Qu=t("code",null,"数组",-1),Ru=t("code",null,"单调栈",-1),Zu={style:{"text-align":"left"}},Gu=t("td",{style:{"text-align":"center"}},"1081",-1),Ku={style:{"text-align":"left"}},Su={href:"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters",target:"_blank",rel:"noopener noreferrer"},Tu={style:{"text-align":"center"}},Uu={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1081",target:"_blank",rel:"noopener noreferrer"},Xu={style:{"text-align":"left"}},Yu=t("code",null,"栈",-1),Au=t("code",null,"贪心",-1),Pu=t("code",null,"字符串",-1),Du=t("code",null,"1+",-1),Fu={style:{"text-align":"left"}},Ju=t("td",{style:{"text-align":"center"}},"1096",-1),Wu={style:{"text-align":"left"}},$u={href:"https://leetcode.com/problems/brace-expansion-ii",target:"_blank",rel:"noopener noreferrer"},tf=t("td",{style:{"text-align":"center"}},null,-1),ef={style:{"text-align":"left"}},of=t("code",null,"栈",-1),lf=t("code",null,"广度优先搜索",-1),nf=t("code",null,"字符串",-1),sf=t("code",null,"1+",-1),df={style:{"text-align":"left"}},_f=t("td",{style:{"text-align":"center"}},"1106",-1),cf={style:{"text-align":"left"}},af={href:"https://leetcode.com/problems/parsing-a-boolean-expression",target:"_blank",rel:"noopener noreferrer"},rf=t("td",{style:{"text-align":"center"}},null,-1),hf={style:{"text-align":"left"}},uf=t("code",null,"栈",-1),ff=t("code",null,"递归",-1),gf=t("code",null,"字符串",-1),mf={style:{"text-align":"left"}},yf=t("td",{style:{"text-align":"center"}},"1111",-1),xf={style:{"text-align":"left"}},pf={href:"https://leetcode.com/problems/maximum-nesting-depth-of-two-valid-parentheses-strings",target:"_blank",rel:"noopener noreferrer"},bf=t("td",{style:{"text-align":"center"}},null,-1),kf={style:{"text-align":"left"}},Mf=t("code",null,"栈",-1),jf=t("code",null,"字符串",-1),vf={style:{"text-align":"left"}},If=t("td",{style:{"text-align":"center"}},"1124",-1),Hf={style:{"text-align":"left"}},wf={href:"https://leetcode.com/problems/longest-well-performing-interval",target:"_blank",rel:"noopener noreferrer"},Ef=t("td",{style:{"text-align":"center"}},null,-1),qf={style:{"text-align":"left"}},zf=t("code",null,"栈",-1),Of=t("code",null,"数组",-1),Nf=t("code",null,"哈希表",-1),Lf=t("code",null,"2+",-1),Bf={style:{"text-align":"left"}},Vf=t("td",{style:{"text-align":"center"}},"1130",-1),Cf={style:{"text-align":"left"}},Qf={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},Rf=t("td",{style:{"text-align":"center"}},null,-1),Zf={style:{"text-align":"left"}},Gf=t("code",null,"栈",-1),Kf=t("code",null,"贪心",-1),Sf=t("code",null,"数组",-1),Tf=t("code",null,"2+",-1),Uf={style:{"text-align":"left"}},Xf=t("td",{style:{"text-align":"center"}},"1172",-1),Yf={style:{"text-align":"left"}},Af={href:"https://leetcode.com/problems/dinner-plate-stacks",target:"_blank",rel:"noopener noreferrer"},Pf=t("td",{style:{"text-align":"center"}},null,-1),Df={style:{"text-align":"left"}},Ff=t("code",null,"栈",-1),Jf=t("code",null,"设计",-1),Wf=t("code",null,"哈希表",-1),$f=t("code",null,"1+",-1),tg={style:{"text-align":"left"}},eg=t("td",{style:{"text-align":"center"}},"1190",-1),og={style:{"text-align":"left"}},lg={href:"https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses",target:"_blank",rel:"noopener noreferrer"},ng={style:{"text-align":"center"}},sg={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1190",target:"_blank",rel:"noopener noreferrer"},dg={style:{"text-align":"left"}},_g=t("code",null,"栈",-1),cg=t("code",null,"字符串",-1),ig={style:{"text-align":"left"}},ag=t("td",{style:{"text-align":"center"}},"1209",-1),rg={style:{"text-align":"left"}},hg={href:"https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii",target:"_blank",rel:"noopener noreferrer"},ug=t("td",{style:{"text-align":"center"}},null,-1),fg={style:{"text-align":"left"}},gg=t("code",null,"栈",-1),mg=t("code",null,"字符串",-1),yg={style:{"text-align":"left"}},xg=t("td",{style:{"text-align":"center"}},"1214",-1),pg={style:{"text-align":"left"}},bg={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},kg=t("td",{style:{"text-align":"center"}},null,-1),Mg={style:{"text-align":"left"}},jg=t("code",null,"栈",-1),vg=t("code",null,"树",-1),Ig=t("code",null,"深度优先搜索",-1),Hg=t("code",null,"4+",-1),wg={style:{"text-align":"left"}},Eg=t("td",{style:{"text-align":"center"}},"1249",-1),qg={style:{"text-align":"left"}},zg={href:"https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Og=t("td",{style:{"text-align":"center"}},null,-1),Ng={style:{"text-align":"left"}},Lg=t("code",null,"栈",-1),Bg=t("code",null,"字符串",-1),Vg={style:{"text-align":"left"}},Cg=t("td",{style:{"text-align":"center"}},"1265",-1),Qg={style:{"text-align":"left"}},Rg={href:"https://leetcode.com/problems/print-immutable-linked-list-in-reverse",target:"_blank",rel:"noopener noreferrer"},Zg=t("td",{style:{"text-align":"center"}},null,-1),Gg={style:{"text-align":"left"}},Kg=t("code",null,"栈",-1),Sg=t("code",null,"递归",-1),Tg=t("code",null,"链表",-1),Ug=t("code",null,"1+",-1),Xg={style:{"text-align":"left"}},Yg=t("td",{style:{"text-align":"center"}},"1381",-1),Ag={style:{"text-align":"left"}},Pg={href:"https://leetcode.com/problems/design-a-stack-with-increment-operation",target:"_blank",rel:"noopener noreferrer"},Dg={style:{"text-align":"center"}},Fg={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1381",target:"_blank",rel:"noopener noreferrer"},Jg={style:{"text-align":"left"}},Wg=t("code",null,"栈",-1),$g=t("code",null,"设计",-1),tm=t("code",null,"数组",-1),em={style:{"text-align":"left"}},om=t("td",{style:{"text-align":"center"}},"1441",-1),lm={style:{"text-align":"left"}},nm={href:"https://leetcode.com/problems/build-an-array-with-stack-operations",target:"_blank",rel:"noopener noreferrer"},sm={style:{"text-align":"center"}},dm={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1441",target:"_blank",rel:"noopener noreferrer"},_m={style:{"text-align":"left"}},cm=t("code",null,"栈",-1),im=t("code",null,"数组",-1),am=t("code",null,"模拟",-1),rm={style:{"text-align":"left"}},hm=t("td",{style:{"text-align":"center"}},"1472",-1),um={style:{"text-align":"left"}},fm={href:"https://leetcode.com/problems/design-browser-history",target:"_blank",rel:"noopener noreferrer"},gm={style:{"text-align":"center"}},mm={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1472",target:"_blank",rel:"noopener noreferrer"},ym={style:{"text-align":"left"}},xm=t("code",null,"栈",-1),pm=t("code",null,"设计",-1),bm=t("code",null,"数组",-1),km=t("code",null,"3+",-1),Mm={style:{"text-align":"left"}},jm=t("td",{style:{"text-align":"center"}},"1475",-1),vm={style:{"text-align":"left"}},Im={href:"https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop",target:"_blank",rel:"noopener noreferrer"},Hm={style:{"text-align":"center"}},wm={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1475",target:"_blank",rel:"noopener noreferrer"},Em={style:{"text-align":"left"}},qm=t("code",null,"栈",-1),zm=t("code",null,"数组",-1),Om=t("code",null,"单调栈",-1),Nm={style:{"text-align":"left"}},Lm=t("td",{style:{"text-align":"center"}},"1504",-1),Bm={style:{"text-align":"left"}},Vm={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},Cm=t("td",{style:{"text-align":"center"}},null,-1),Qm={style:{"text-align":"left"}},Rm=t("code",null,"栈",-1),Zm=t("code",null,"数组",-1),Gm=t("code",null,"动态规划",-1),Km=t("code",null,"2+",-1),Sm={style:{"text-align":"left"}},Tm=t("td",{style:{"text-align":"center"}},"1526",-1),Um={style:{"text-align":"left"}},Xm={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},Ym=t("td",{style:{"text-align":"center"}},null,-1),Am={style:{"text-align":"left"}},Pm=t("code",null,"栈",-1),Dm=t("code",null,"贪心",-1),Fm=t("code",null,"数组",-1),Jm=t("code",null,"2+",-1),Wm={style:{"text-align":"left"}},$m=t("td",{style:{"text-align":"center"}},"1541",-1),ty={style:{"text-align":"left"}},ey={href:"https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string",target:"_blank",rel:"noopener noreferrer"},oy=t("td",{style:{"text-align":"center"}},null,-1),ly={style:{"text-align":"left"}},ny=t("code",null,"栈",-1),sy=t("code",null,"贪心",-1),dy=t("code",null,"字符串",-1),_y={style:{"text-align":"left"}},cy=t("td",{style:{"text-align":"center"}},"1544",-1),iy={style:{"text-align":"left"}},ay={href:"https://leetcode.com/problems/make-the-string-great",target:"_blank",rel:"noopener noreferrer"},ry=t("td",{style:{"text-align":"center"}},null,-1),hy={style:{"text-align":"left"}},uy=t("code",null,"栈",-1),fy=t("code",null,"字符串",-1),gy={style:{"text-align":"left"}},my=t("td",{style:{"text-align":"center"}},"1574",-1),yy={style:{"text-align":"left"}},xy={href:"https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted",target:"_blank",rel:"noopener noreferrer"},py=t("td",{style:{"text-align":"center"}},null,-1),by={style:{"text-align":"left"}},ky=t("code",null,"栈",-1),My=t("code",null,"数组",-1),jy=t("code",null,"双指针",-1),vy=t("code",null,"2+",-1),Iy={style:{"text-align":"left"}},Hy=t("td",{style:{"text-align":"center"}},"1586",-1),wy={style:{"text-align":"left"}},Ey={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},qy=t("td",{style:{"text-align":"center"}},null,-1),zy={style:{"text-align":"left"}},Oy=t("code",null,"栈",-1),Ny=t("code",null,"树",-1),Ly=t("code",null,"设计",-1),By=t("code",null,"3+",-1),Vy={style:{"text-align":"left"}},Cy=t("td",{style:{"text-align":"center"}},"1597",-1),Qy={style:{"text-align":"left"}},Ry={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},Zy=t("td",{style:{"text-align":"center"}},null,-1),Gy={style:{"text-align":"left"}},Ky=t("code",null,"栈",-1),Sy=t("code",null,"树",-1),Ty=t("code",null,"字符串",-1),Uy=t("code",null,"1+",-1),Xy={style:{"text-align":"left"}},Yy=t("td",{style:{"text-align":"center"}},"1598",-1),Ay={style:{"text-align":"left"}},Py={href:"https://leetcode.com/problems/crawler-log-folder",target:"_blank",rel:"noopener noreferrer"},Dy=t("td",{style:{"text-align":"center"}},null,-1),Fy={style:{"text-align":"left"}},Jy=t("code",null,"栈",-1),Wy=t("code",null,"数组",-1),$y=t("code",null,"字符串",-1),tx={style:{"text-align":"left"}},ex=t("td",{style:{"text-align":"center"}},"1614",-1),ox={style:{"text-align":"left"}},lx={href:"https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses",target:"_blank",rel:"noopener noreferrer"},nx=t("td",{style:{"text-align":"center"}},null,-1),sx={style:{"text-align":"left"}},dx=t("code",null,"栈",-1),_x=t("code",null,"字符串",-1),cx={style:{"text-align":"left"}},ix=t("td",{style:{"text-align":"center"}},"1628",-1),ax={style:{"text-align":"left"}},rx={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},hx=t("td",{style:{"text-align":"center"}},null,-1),ux={style:{"text-align":"left"}},fx=t("code",null,"栈",-1),gx=t("code",null,"树",-1),mx=t("code",null,"设计",-1),yx=t("code",null,"3+",-1),xx={style:{"text-align":"left"}},px=t("td",{style:{"text-align":"center"}},"1653",-1),bx={style:{"text-align":"left"}},kx={href:"https://leetcode.com/problems/minimum-deletions-to-make-string-balanced",target:"_blank",rel:"noopener noreferrer"},Mx=t("td",{style:{"text-align":"center"}},null,-1),jx={style:{"text-align":"left"}},vx=t("code",null,"栈",-1),Ix=t("code",null,"字符串",-1),Hx=t("code",null,"动态规划",-1),wx={style:{"text-align":"left"}},Ex=t("td",{style:{"text-align":"center"}},"1673",-1),qx={style:{"text-align":"left"}},zx={href:"https://leetcode.com/problems/find-the-most-competitive-subsequence",target:"_blank",rel:"noopener noreferrer"},Ox=t("td",{style:{"text-align":"center"}},null,-1),Nx={style:{"text-align":"left"}},Lx=t("code",null,"栈",-1),Bx=t("code",null,"贪心",-1),Vx=t("code",null,"数组",-1),Cx=t("code",null,"1+",-1),Qx={style:{"text-align":"left"}},Rx=t("td",{style:{"text-align":"center"}},"1700",-1),Zx={style:{"text-align":"left"}},Gx={href:"https://leetcode.com/problems/number-of-students-unable-to-eat-lunch",target:"_blank",rel:"noopener noreferrer"},Kx=t("td",{style:{"text-align":"center"}},null,-1),Sx={style:{"text-align":"left"}},Tx=t("code",null,"栈",-1),Ux=t("code",null,"队列",-1),Xx=t("code",null,"数组",-1),Yx=t("code",null,"1+",-1),Ax={style:{"text-align":"left"}},Px=t("td",{style:{"text-align":"center"}},"1717",-1),Dx={style:{"text-align":"left"}},Fx={href:"https://leetcode.com/problems/maximum-score-from-removing-substrings",target:"_blank",rel:"noopener noreferrer"},Jx=t("td",{style:{"text-align":"center"}},null,-1),Wx={style:{"text-align":"left"}},$x=t("code",null,"栈",-1),tp=t("code",null,"贪心",-1),ep=t("code",null,"字符串",-1),op={style:{"text-align":"left"}},lp=t("td",{style:{"text-align":"center"}},"1756",-1),np={style:{"text-align":"left"}},sp={href:"https://leetcode.com/problems/design-most-recently-used-queue",target:"_blank",rel:"noopener noreferrer"},dp=t("td",{style:{"text-align":"center"}},null,-1),_p={style:{"text-align":"left"}},cp=t("code",null,"栈",-1),ip=t("code",null,"设计",-1),ap=t("code",null,"树状数组",-1),rp=t("code",null,"3+",-1),hp={style:{"text-align":"left"}},up=t("td",{style:{"text-align":"center"}},"1762",-1),fp={style:{"text-align":"left"}},gp={href:"https://leetcode.com/problems/buildings-with-an-ocean-view",target:"_blank",rel:"noopener noreferrer"},mp=t("td",{style:{"text-align":"center"}},null,-1),yp={style:{"text-align":"left"}},xp=t("code",null,"栈",-1),pp=t("code",null,"数组",-1),bp=t("code",null,"单调栈",-1),kp={style:{"text-align":"left"}},Mp=t("td",{style:{"text-align":"center"}},"1776",-1),jp={style:{"text-align":"left"}},vp={href:"https://leetcode.com/problems/car-fleet-ii",target:"_blank",rel:"noopener noreferrer"},Ip=t("td",{style:{"text-align":"center"}},null,-1),Hp={style:{"text-align":"left"}},wp=t("code",null,"栈",-1),Ep=t("code",null,"数组",-1),qp=t("code",null,"数学",-1),zp=t("code",null,"2+",-1),Op={style:{"text-align":"left"}},Np=t("td",{style:{"text-align":"center"}},"1793",-1),Lp={style:{"text-align":"left"}},Bp={href:"https://leetcode.com/problems/maximum-score-of-a-good-subarray",target:"_blank",rel:"noopener noreferrer"},Vp=t("td",{style:{"text-align":"center"}},null,-1),Cp={style:{"text-align":"left"}},Qp=t("code",null,"栈",-1),Rp=t("code",null,"数组",-1),Zp=t("code",null,"双指针",-1),Gp=t("code",null,"2+",-1),Kp={style:{"text-align":"left"}},Sp=t("td",{style:{"text-align":"center"}},"1856",-1),Tp={style:{"text-align":"left"}},Up={href:"https://leetcode.com/problems/maximum-subarray-min-product",target:"_blank",rel:"noopener noreferrer"},Xp=t("td",{style:{"text-align":"center"}},null,-1),Yp={style:{"text-align":"left"}},Ap=t("code",null,"栈",-1),Pp=t("code",null,"数组",-1),Dp=t("code",null,"前缀和",-1),Fp=t("code",null,"1+",-1),Jp={style:{"text-align":"left"}},Wp=t("td",{style:{"text-align":"center"}},"1896",-1),$p={style:{"text-align":"left"}},tb={href:"https://leetcode.com/problems/minimum-cost-to-change-the-final-value-of-expression",target:"_blank",rel:"noopener noreferrer"},eb=t("td",{style:{"text-align":"center"}},null,-1),ob={style:{"text-align":"left"}},lb=t("code",null,"栈",-1),nb=t("code",null,"数学",-1),sb=t("code",null,"字符串",-1),db=t("code",null,"1+",-1),_b={style:{"text-align":"left"}},cb=t("td",{style:{"text-align":"center"}},"1910",-1),ib={style:{"text-align":"left"}},ab={href:"https://leetcode.com/problems/remove-all-occurrences-of-a-substring",target:"_blank",rel:"noopener noreferrer"},rb=t("td",{style:{"text-align":"center"}},null,-1),hb={style:{"text-align":"left"}},ub=t("code",null,"栈",-1),fb=t("code",null,"字符串",-1),gb=t("code",null,"模拟",-1),mb={style:{"text-align":"left"}},yb=t("td",{style:{"text-align":"center"}},"1944",-1),xb={style:{"text-align":"left"}},pb={href:"https://leetcode.com/problems/number-of-visible-people-in-a-queue",target:"_blank",rel:"noopener noreferrer"},bb=t("td",{style:{"text-align":"center"}},null,-1),kb={style:{"text-align":"left"}},Mb=t("code",null,"栈",-1),jb=t("code",null,"数组",-1),vb=t("code",null,"单调栈",-1),Ib={style:{"text-align":"left"}},Hb=t("td",{style:{"text-align":"center"}},"1950",-1),wb={style:{"text-align":"left"}},Eb={href:"https://leetcode.com/problems/maximum-of-minimum-values-in-all-subarrays",target:"_blank",rel:"noopener noreferrer"},qb=t("td",{style:{"text-align":"center"}},null,-1),zb={style:{"text-align":"left"}},Ob=t("code",null,"栈",-1),Nb=t("code",null,"数组",-1),Lb=t("code",null,"单调栈",-1),Bb={style:{"text-align":"left"}},Vb=t("td",{style:{"text-align":"center"}},"1963",-1),Cb={style:{"text-align":"left"}},Qb={href:"https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-string-balanced",target:"_blank",rel:"noopener noreferrer"},Rb={style:{"text-align":"center"}},Zb={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1963",target:"_blank",rel:"noopener noreferrer"},Gb={style:{"text-align":"left"}},Kb=t("code",null,"栈",-1),Sb=t("code",null,"贪心",-1),Tb=t("code",null,"双指针",-1),Ub=t("code",null,"1+",-1),Xb={style:{"text-align":"left"}},Yb=t("td",{style:{"text-align":"center"}},"1996",-1),Ab={style:{"text-align":"left"}},Pb={href:"https://leetcode.com/problems/the-number-of-weak-characters-in-the-game",target:"_blank",rel:"noopener noreferrer"},Db=t("td",{style:{"text-align":"center"}},null,-1),Fb={style:{"text-align":"left"}},Jb=t("code",null,"栈",-1),Wb=t("code",null,"贪心",-1),$b=t("code",null,"数组",-1),t0=t("code",null,"2+",-1),e0={style:{"text-align":"left"}},o0=t("td",{style:{"text-align":"center"}},"2000",-1),l0={style:{"text-align":"left"}},n0={href:"https://leetcode.com/problems/reverse-prefix-of-word",target:"_blank",rel:"noopener noreferrer"},s0=t("td",{style:{"text-align":"center"}},null,-1),d0={style:{"text-align":"left"}},_0=t("code",null,"栈",-1),c0=t("code",null,"双指针",-1),i0=t("code",null,"字符串",-1),a0={style:{"text-align":"left"}},r0=t("td",{style:{"text-align":"center"}},"2019",-1),h0={style:{"text-align":"left"}},u0={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},f0=t("td",{style:{"text-align":"center"}},null,-1),g0={style:{"text-align":"left"}},m0=t("code",null,"栈",-1),y0=t("code",null,"记忆化搜索",-1),x0=t("code",null,"数组",-1),p0=t("code",null,"3+",-1),b0={style:{"text-align":"left"}},k0=t("td",{style:{"text-align":"center"}},"2030",-1),M0={style:{"text-align":"left"}},j0={href:"https://leetcode.com/problems/smallest-k-length-subsequence-with-occurrences-of-a-letter",target:"_blank",rel:"noopener noreferrer"},v0=t("td",{style:{"text-align":"center"}},null,-1),I0={style:{"text-align":"left"}},H0=t("code",null,"栈",-1),w0=t("code",null,"贪心",-1),E0=t("code",null,"字符串",-1),q0=t("code",null,"1+",-1),z0={style:{"text-align":"left"}},O0=t("td",{style:{"text-align":"center"}},"2104",-1),N0={style:{"text-align":"left"}},L0={href:"https://leetcode.com/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},B0=t("td",{style:{"text-align":"center"}},null,-1),V0={style:{"text-align":"left"}},C0=t("code",null,"栈",-1),Q0=t("code",null,"数组",-1),R0=t("code",null,"单调栈",-1),Z0={style:{"text-align":"left"}},G0=t("td",{style:{"text-align":"center"}},"2116",-1),K0={style:{"text-align":"left"}},S0={href:"https://leetcode.com/problems/check-if-a-parentheses-string-can-be-valid",target:"_blank",rel:"noopener noreferrer"},T0=t("td",{style:{"text-align":"center"}},null,-1),U0={style:{"text-align":"left"}},X0=t("code",null,"栈",-1),Y0=t("code",null,"贪心",-1),A0=t("code",null,"字符串",-1),P0={style:{"text-align":"left"}},D0=t("td",{style:{"text-align":"center"}},"2130",-1),F0={style:{"text-align":"left"}},J0={href:"https://leetcode.com/problems/maximum-twin-sum-of-a-linked-list",target:"_blank",rel:"noopener noreferrer"},W0=t("td",{style:{"text-align":"center"}},null,-1),$0={style:{"text-align":"left"}},t2=t("code",null,"栈",-1),e2=t("code",null,"链表",-1),o2=t("code",null,"双指针",-1),l2={style:{"text-align":"left"}},n2=t("td",{style:{"text-align":"center"}},"2197",-1),s2={style:{"text-align":"left"}},d2={href:"https://leetcode.com/problems/replace-non-coprime-numbers-in-array",target:"_blank",rel:"noopener noreferrer"},_2=t("td",{style:{"text-align":"center"}},null,-1),c2={style:{"text-align":"left"}},i2=t("code",null,"栈",-1),a2=t("code",null,"数组",-1),r2=t("code",null,"数学",-1),h2=t("code",null,"1+",-1),u2={style:{"text-align":"left"}},f2=t("td",{style:{"text-align":"center"}},"2211",-1),g2={style:{"text-align":"left"}},m2={href:"https://leetcode.com/problems/count-collisions-on-a-road",target:"_blank",rel:"noopener noreferrer"},y2=t("td",{style:{"text-align":"center"}},null,-1),x2={style:{"text-align":"left"}},p2=t("code",null,"栈",-1),b2=t("code",null,"字符串",-1),k2=t("code",null,"模拟",-1),M2={style:{"text-align":"left"}},j2=t("td",{style:{"text-align":"center"}},"2216",-1),v2={style:{"text-align":"left"}},I2={href:"https://leetcode.com/problems/minimum-deletions-to-make-array-beautiful",target:"_blank",rel:"noopener noreferrer"},H2=t("td",{style:{"text-align":"center"}},null,-1),w2={style:{"text-align":"left"}},E2=t("code",null,"栈",-1),q2=t("code",null,"贪心",-1),z2=t("code",null,"数组",-1),O2={style:{"text-align":"left"}},N2=t("td",{style:{"text-align":"center"}},"2254",-1),L2={style:{"text-align":"left"}},B2={href:"https://leetcode.com/problems/design-video-sharing-platform",target:"_blank",rel:"noopener noreferrer"},V2=t("td",{style:{"text-align":"center"}},null,-1),C2={style:{"text-align":"left"}},Q2=t("code",null,"栈",-1),R2=t("code",null,"设计",-1),Z2=t("code",null,"哈希表",-1),G2=t("code",null,"1+",-1),K2={style:{"text-align":"left"}},S2=t("td",{style:{"text-align":"center"}},"2281",-1),T2={style:{"text-align":"left"}},U2={href:"https://leetcode.com/problems/sum-of-total-strength-of-wizards",target:"_blank",rel:"noopener noreferrer"},X2=t("td",{style:{"text-align":"center"}},null,-1),Y2={style:{"text-align":"left"}},A2=t("code",null,"栈",-1),P2=t("code",null,"数组",-1),D2=t("code",null,"前缀和",-1),F2=t("code",null,"1+",-1),J2={style:{"text-align":"left"}},W2=t("td",{style:{"text-align":"center"}},"2282",-1),$2={style:{"text-align":"left"}},t3={href:"https://leetcode.com/problems/number-of-people-that-can-be-seen-in-a-grid",target:"_blank",rel:"noopener noreferrer"},e3=t("td",{style:{"text-align":"center"}},null,-1),o3={style:{"text-align":"left"}},l3=t("code",null,"栈",-1),n3=t("code",null,"数组",-1),s3=t("code",null,"矩阵",-1),d3=t("code",null,"1+",-1),_3={style:{"text-align":"left"}},c3=t("td",{style:{"text-align":"center"}},"2289",-1),i3={style:{"text-align":"left"}},a3={href:"https://leetcode.com/problems/steps-to-make-array-non-decreasing",target:"_blank",rel:"noopener noreferrer"},r3=t("td",{style:{"text-align":"center"}},null,-1),h3={style:{"text-align":"left"}},u3=t("code",null,"栈",-1),f3=t("code",null,"数组",-1),g3=t("code",null,"链表",-1),m3=t("code",null,"1+",-1),y3={style:{"text-align":"left"}},x3=t("td",{style:{"text-align":"center"}},"2296",-1),p3={style:{"text-align":"left"}},b3={href:"https://leetcode.com/problems/design-a-text-editor",target:"_blank",rel:"noopener noreferrer"},k3=t("td",{style:{"text-align":"center"}},null,-1),M3={style:{"text-align":"left"}},j3=t("code",null,"栈",-1),v3=t("code",null,"设计",-1),I3=t("code",null,"链表",-1),H3=t("code",null,"3+",-1),w3={style:{"text-align":"left"}},E3=t("td",{style:{"text-align":"center"}},"2297",-1),q3={style:{"text-align":"left"}},z3={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},O3=t("td",{style:{"text-align":"center"}},null,-1),N3={style:{"text-align":"left"}},L3=t("code",null,"栈",-1),B3=t("code",null,"图",-1),V3=t("code",null,"数组",-1),C3=t("code",null,"3+",-1),Q3={style:{"text-align":"left"}},R3=t("td",{style:{"text-align":"center"}},"2334",-1),Z3={style:{"text-align":"left"}},G3={href:"https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},K3=t("td",{style:{"text-align":"center"}},null,-1),S3={style:{"text-align":"left"}},T3=t("code",null,"栈",-1),U3=t("code",null,"并查集",-1),X3=t("code",null,"数组",-1),Y3=t("code",null,"1+",-1),A3={style:{"text-align":"left"}},P3=t("td",{style:{"text-align":"center"}},"2345",-1),D3={style:{"text-align":"left"}},F3={href:"https://leetcode.com/problems/finding-the-number-of-visible-mountains",target:"_blank",rel:"noopener noreferrer"},J3=t("td",{style:{"text-align":"center"}},null,-1),W3={style:{"text-align":"left"}},$3=t("code",null,"栈",-1),t8=t("code",null,"数组",-1),e8=t("code",null,"排序",-1),o8=t("code",null,"1+",-1),l8={style:{"text-align":"left"}},n8=t("td",{style:{"text-align":"center"}},"2355",-1),s8={style:{"text-align":"left"}},d8={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},_8=t("td",{style:{"text-align":"center"}},null,-1),c8={style:{"text-align":"left"}},i8=t("code",null,"栈",-1),a8=t("code",null,"数组",-1),r8=t("code",null,"动态规划",-1),h8=t("code",null,"1+",-1),u8={style:{"text-align":"left"}},f8=t("td",{style:{"text-align":"center"}},"2375",-1),g8={style:{"text-align":"left"}},m8={href:"https://leetcode.com/problems/construct-smallest-number-from-di-string",target:"_blank",rel:"noopener noreferrer"},y8=t("td",{style:{"text-align":"center"}},null,-1),x8={style:{"text-align":"left"}},p8=t("code",null,"栈",-1),b8=t("code",null,"贪心",-1),k8=t("code",null,"字符串",-1),M8=t("code",null,"1+",-1),j8={style:{"text-align":"left"}},v8=t("td",{style:{"text-align":"center"}},"2390",-1),I8={style:{"text-align":"left"}},H8={href:"https://leetcode.com/problems/removing-stars-from-a-string",target:"_blank",rel:"noopener noreferrer"},w8=t("td",{style:{"text-align":"center"}},null,-1),E8={style:{"text-align":"left"}},q8=t("code",null,"栈",-1),z8=t("code",null,"字符串",-1),O8=t("code",null,"模拟",-1),N8={style:{"text-align":"left"}},L8=t("td",{style:{"text-align":"center"}},"2434",-1),B8={style:{"text-align":"left"}},V8={href:"https://leetcode.com/problems/using-a-robot-to-print-the-lexicographically-smallest-string",target:"_blank",rel:"noopener noreferrer"},C8=t("td",{style:{"text-align":"center"}},null,-1),Q8={style:{"text-align":"left"}},R8=t("code",null,"栈",-1),Z8=t("code",null,"贪心",-1),G8=t("code",null,"哈希表",-1),K8=t("code",null,"1+",-1),S8={style:{"text-align":"left"}},T8=t("td",{style:{"text-align":"center"}},"2454",-1),U8={style:{"text-align":"left"}},X8={href:"https://leetcode.com/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},Y8=t("td",{style:{"text-align":"center"}},null,-1),A8={style:{"text-align":"left"}},P8=t("code",null,"栈",-1),D8=t("code",null,"数组",-1),F8=t("code",null,"二分查找",-1),J8=t("code",null,"3+",-1),W8={style:{"text-align":"left"}},$8=t("td",{style:{"text-align":"center"}},"2487",-1),t4={style:{"text-align":"left"}},e4={href:"https://leetcode.com/problems/remove-nodes-from-linked-list",target:"_blank",rel:"noopener noreferrer"},o4=t("td",{style:{"text-align":"center"}},null,-1),l4={style:{"text-align":"left"}},n4=t("code",null,"栈",-1),s4=t("code",null,"递归",-1),d4=t("code",null,"链表",-1),_4=t("code",null,"1+",-1),c4={style:{"text-align":"left"}},i4=t("td",{style:{"text-align":"center"}},"2589",-1),a4={style:{"text-align":"left"}},r4={href:"https://leetcode.com/problems/minimum-time-to-complete-all-tasks",target:"_blank",rel:"noopener noreferrer"},h4=t("td",{style:{"text-align":"center"}},null,-1),u4={style:{"text-align":"left"}},f4=t("code",null,"栈",-1),g4=t("code",null,"贪心",-1),m4=t("code",null,"数组",-1),y4=t("code",null,"2+",-1),x4={style:{"text-align":"left"}},p4=t("td",{style:{"text-align":"center"}},"2617",-1),b4={style:{"text-align":"left"}},k4={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},M4=t("td",{style:{"text-align":"center"}},null,-1),j4={style:{"text-align":"left"}},v4=t("code",null,"栈",-1),I4=t("code",null,"广度优先搜索",-1),H4=t("code",null,"并查集",-1),w4=t("code",null,"5+",-1),E4={style:{"text-align":"left"}},q4=t("td",{style:{"text-align":"center"}},"2645",-1),z4={style:{"text-align":"left"}},O4={href:"https://leetcode.com/problems/minimum-additions-to-make-valid-string",target:"_blank",rel:"noopener noreferrer"},N4=t("td",{style:{"text-align":"center"}},null,-1),L4={style:{"text-align":"left"}},B4=t("code",null,"栈",-1),V4=t("code",null,"贪心",-1),C4=t("code",null,"字符串",-1),Q4=t("code",null,"1+",-1),R4={style:{"text-align":"left"}},Z4=t("td",{style:{"text-align":"center"}},"2696",-1),G4={style:{"text-align":"left"}},K4={href:"https://leetcode.com/problems/minimum-string-length-after-removing-substrings",target:"_blank",rel:"noopener noreferrer"},S4={style:{"text-align":"center"}},T4={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/2696",target:"_blank",rel:"noopener noreferrer"},U4={style:{"text-align":"left"}},X4=t("code",null,"栈",-1),Y4=t("code",null,"字符串",-1),A4=t("code",null,"模拟",-1),P4={style:{"text-align":"left"}},D4=t("td",{style:{"text-align":"center"}},"2736",-1),F4={style:{"text-align":"left"}},J4={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},W4=t("td",{style:{"text-align":"center"}},null,-1),$4={style:{"text-align":"left"}},t6=t("code",null,"栈",-1),e6=t("code",null,"树状数组",-1),o6=t("code",null,"线段树",-1),l6=t("code",null,"4+",-1),n6={style:{"text-align":"left"}},s6=t("td",{style:{"text-align":"center"}},"2751",-1),d6={style:{"text-align":"left"}},_6={href:"https://leetcode.com/problems/robot-collisions",target:"_blank",rel:"noopener noreferrer"},c6=t("td",{style:{"text-align":"center"}},null,-1),i6={style:{"text-align":"left"}},a6=t("code",null,"栈",-1),r6=t("code",null,"数组",-1),h6=t("code",null,"排序",-1),u6=t("code",null,"1+",-1),f6={style:{"text-align":"left"}},g6=t("td",{style:{"text-align":"center"}},"2764",-1),m6={style:{"text-align":"left"}},y6={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},x6=t("td",{style:{"text-align":"center"}},null,-1),p6={style:{"text-align":"left"}},b6=t("code",null,"栈",-1),k6=t("code",null,"树",-1),M6=t("code",null,"深度优先搜索",-1),j6=t("code",null,"1+",-1),v6={style:{"text-align":"left"}},I6=t("td",{style:{"text-align":"center"}},"2813",-1),H6={style:{"text-align":"left"}},w6={href:"https://leetcode.com/problems/maximum-elegance-of-a-k-length-subsequence",target:"_blank",rel:"noopener noreferrer"},E6=t("td",{style:{"text-align":"center"}},null,-1),q6={style:{"text-align":"left"}},z6=t("code",null,"栈",-1),O6=t("code",null,"贪心",-1),N6=t("code",null,"数组",-1),L6=t("code",null,"3+",-1),B6={style:{"text-align":"left"}},V6=t("td",{style:{"text-align":"center"}},"2816",-1),C6={style:{"text-align":"left"}},Q6={href:"https://leetcode.com/problems/double-a-number-represented-as-a-linked-list",target:"_blank",rel:"noopener noreferrer"},R6=t("td",{style:{"text-align":"center"}},null,-1),Z6={style:{"text-align":"left"}},G6=t("code",null,"栈",-1),K6=t("code",null,"链表",-1),S6=t("code",null,"数学",-1),T6={style:{"text-align":"left"}},U6=t("td",{style:{"text-align":"center"}},"2818",-1),X6={style:{"text-align":"left"}},Y6={href:"https://leetcode.com/problems/apply-operations-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},A6=t("td",{style:{"text-align":"center"}},null,-1),P6={style:{"text-align":"left"}},D6=t("code",null,"栈",-1),F6=t("code",null,"贪心",-1),J6=t("code",null,"数组",-1),W6=t("code",null,"3+",-1),$6={style:{"text-align":"left"}},t5=t("td",{style:{"text-align":"center"}},"2832",-1),e5={style:{"text-align":"left"}},o5={href:"https://leetcode.com/problems/maximal-range-that-each-element-is-maximum-in-it",target:"_blank",rel:"noopener noreferrer"},l5=t("td",{style:{"text-align":"center"}},null,-1),n5={style:{"text-align":"left"}},s5=t("code",null,"栈",-1),d5=t("code",null,"数组",-1),_5=t("code",null,"单调栈",-1),c5={style:{"text-align":"left"}},i5=t("td",{style:{"text-align":"center"}},"2863",-1),a5={style:{"text-align":"left"}},r5={href:"https://leetcode.com/problems/maximum-length-of-semi-decreasing-subarrays",target:"_blank",rel:"noopener noreferrer"},h5=t("td",{style:{"text-align":"center"}},null,-1),u5={style:{"text-align":"left"}},f5=t("code",null,"栈",-1),g5=t("code",null,"数组",-1),m5=t("code",null,"排序",-1),y5=t("code",null,"1+",-1),x5={style:{"text-align":"left"}},p5=t("td",{style:{"text-align":"center"}},"2865",-1),b5={style:{"text-align":"left"}},k5={href:"https://leetcode.com/problems/beautiful-towers-i",target:"_blank",rel:"noopener noreferrer"},M5=t("td",{style:{"text-align":"center"}},null,-1),j5={style:{"text-align":"left"}},v5=t("code",null,"栈",-1),I5=t("code",null,"数组",-1),H5=t("code",null,"单调栈",-1),w5={style:{"text-align":"left"}},E5=t("td",{style:{"text-align":"center"}},"2866",-1),q5={style:{"text-align":"left"}},z5={href:"https://leetcode.com/problems/beautiful-towers-ii",target:"_blank",rel:"noopener noreferrer"},O5=t("td",{style:{"text-align":"center"}},null,-1),N5={style:{"text-align":"left"}},L5=t("code",null,"栈",-1),B5=t("code",null,"数组",-1),V5=t("code",null,"单调栈",-1),C5={style:{"text-align":"left"}},Q5=t("td",{style:{"text-align":"center"}},"2940",-1),R5={style:{"text-align":"left"}},Z5={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},G5=t("td",{style:{"text-align":"center"}},null,-1),K5={style:{"text-align":"left"}},S5=t("code",null,"栈",-1),T5=t("code",null,"树状数组",-1),U5=t("code",null,"线段树",-1),X5=t("code",null,"4+",-1),Y5={style:{"text-align":"left"}},A5=t("td",{style:{"text-align":"center"}},"2945",-1),P5={style:{"text-align":"left"}},D5={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},F5=t("td",{style:{"text-align":"center"}},null,-1),J5={style:{"text-align":"left"}},W5=t("code",null,"栈",-1),$5=t("code",null,"队列",-1),t7=t("code",null,"数组",-1),e7=t("code",null,"4+",-1),o7={style:{"text-align":"left"}},l7=t("td",{style:{"text-align":"center"}},"3113",-1),n7={style:{"text-align":"left"}},s7={href:"https://leetcode.com/problems/find-the-number-of-subarrays-where-boundary-elements-are-maximum",target:"_blank",rel:"noopener noreferrer"},d7=t("td",{style:{"text-align":"center"}},null,-1),_7={style:{"text-align":"left"}},c7=t("code",null,"栈",-1),i7=t("code",null,"数组",-1),a7=t("code",null,"二分查找",-1),r7=t("code",null,"1+",-1),h7={style:{"text-align":"left"}},u7=t("td",{style:{"text-align":"center"}},"3170",-1),f7={style:{"text-align":"left"}},g7={href:"https://leetcode.com/problems/lexicographically-minimum-string-after-removing-stars",target:"_blank",rel:"noopener noreferrer"},m7=t("td",{style:{"text-align":"center"}},null,-1),y7={style:{"text-align":"left"}},x7=t("code",null,"栈",-1),p7=t("code",null,"贪心",-1),b7=t("code",null,"哈希表",-1),k7=t("code",null,"2+",-1),M7={style:{"text-align":"left"}},j7=t("td",{style:{"text-align":"center"}},"3174",-1),v7={style:{"text-align":"left"}},I7={href:"https://leetcode.com/problems/clear-digits",target:"_blank",rel:"noopener noreferrer"},H7=t("td",{style:{"text-align":"center"}},null,-1),w7={style:{"text-align":"left"}},E7=t("code",null,"栈",-1),q7=t("code",null,"字符串",-1),z7=t("code",null,"模拟",-1),O7={style:{"text-align":"left"}},N7=t("td",{style:{"text-align":"center"}},"3205",-1),L7={style:{"text-align":"left"}},B7={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},V7=t("td",{style:{"text-align":"center"}},null,-1),C7={style:{"text-align":"left"}},Q7=t("code",null,"栈",-1),R7=t("code",null,"贪心",-1),Z7=t("code",null,"数组",-1),G7=t("code",null,"2+",-1),K7={style:{"text-align":"left"}},S7=t("td",{style:{"text-align":"center"}},"3221",-1),T7={style:{"text-align":"left"}},U7={href:"https://leetcode.com/problems/maximum-array-hopping-score-ii",target:"_blank",rel:"noopener noreferrer"},X7=t("td",{style:{"text-align":"center"}},null,-1),Y7={style:{"text-align":"left"}},A7=t("code",null,"栈",-1),P7=t("code",null,"贪心",-1),D7=t("code",null,"数组",-1),F7=t("code",null,"1+",-1),J7={style:{"text-align":"left"}},W7=t("td",{style:{"text-align":"center"}},"3229",-1),$7={style:{"text-align":"left"}},t9={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},e9=t("td",{style:{"text-align":"center"}},null,-1),o9={style:{"text-align":"left"}},l9=t("code",null,"栈",-1),n9=t("code",null,"贪心",-1),s9=t("code",null,"数组",-1),d9=t("code",null,"2+",-1),_9={style:{"text-align":"left"}},c9=t("td",{style:{"text-align":"center"}},"剑指 Offer 06",-1),i9={style:{"text-align":"left"}},a9={href:"https://leetcode.cn/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},r9={style:{"text-align":"center"}},h9={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_06_1",target:"_blank",rel:"noopener noreferrer"},u9={style:{"text-align":"left"}},f9=t("code",null,"栈",-1),g9=t("code",null,"递归",-1),m9=t("code",null,"链表",-1),y9=t("code",null,"1+",-1),x9={style:{"text-align":"left"}},p9=t("td",{style:{"text-align":"center"}},"剑指 Offer 09",-1),b9={style:{"text-align":"left"}},k9={href:"https://leetcode.cn/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof",target:"_blank",rel:"noopener noreferrer"},M9={style:{"text-align":"center"}},j9={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_09_1",target:"_blank",rel:"noopener noreferrer"},v9={style:{"text-align":"left"}},I9=t("code",null,"栈",-1),H9=t("code",null,"设计",-1),w9=t("code",null,"队列",-1),E9={style:{"text-align":"left"}},q9=t("td",{style:{"text-align":"center"}},"剑指 Offer 30",-1),z9={style:{"text-align":"left"}},O9={href:"https://leetcode.cn/problems/bao-han-minhan-shu-de-zhan-lcof",target:"_blank",rel:"noopener noreferrer"},N9={style:{"text-align":"center"}},L9={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_30_1",target:"_blank",rel:"noopener noreferrer"},B9={style:{"text-align":"left"}},V9=t("code",null,"栈",-1),C9=t("code",null,"设计",-1),Q9={style:{"text-align":"left"}},R9=t("td",{style:{"text-align":"center"}},"剑指 Offer 31",-1),Z9={style:{"text-align":"left"}},G9={href:"https://leetcode.cn/problems/zhan-de-ya-ru-dan-chu-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},K9={style:{"text-align":"center"}},S9={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_31_1",target:"_blank",rel:"noopener noreferrer"},T9={style:{"text-align":"left"}},U9=t("code",null,"栈",-1),X9=t("code",null,"数组",-1),Y9=t("code",null,"模拟",-1),A9={style:{"text-align":"left"}},P9=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),D9={style:{"text-align":"left"}},F9={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},J9={style:{"text-align":"center"}},W9={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_33_1",target:"_blank",rel:"noopener noreferrer"},$9={style:{"text-align":"left"}},tk=t("code",null,"栈",-1),ek=t("code",null,"树",-1),ok=t("code",null,"二叉搜索树",-1),lk=t("code",null,"4+",-1),nk={style:{"text-align":"left"}},sk=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),dk={style:{"text-align":"left"}},_k={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},ck={style:{"text-align":"center"}},ik={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_36_1",target:"_blank",rel:"noopener noreferrer"},ak={style:{"text-align":"left"}},rk=t("code",null,"栈",-1),hk=t("code",null,"树",-1),uk=t("code",null,"深度优先搜索",-1),fk=t("code",null,"4+",-1),gk={style:{"text-align":"left"}},mk=t("td",{style:{"text-align":"center"}},"剑指 Offer II 25",-1),yk={style:{"text-align":"left"}},xk={href:"https://leetcode.cn/problems/lMSNwu",target:"_blank",rel:"noopener noreferrer"},pk=t("td",{style:{"text-align":"center"}},null,-1),bk={style:{"text-align":"left"}},kk=t("code",null,"栈",-1),Mk=t("code",null,"链表",-1),jk=t("code",null,"数学",-1),vk={style:{"text-align":"left"}},Ik=t("td",{style:{"text-align":"center"}},"剑指 Offer II 26",-1),Hk={style:{"text-align":"left"}},wk={href:"https://leetcode.cn/problems/LGjMqU",target:"_blank",rel:"noopener noreferrer"},Ek=t("td",{style:{"text-align":"center"}},null,-1),qk={style:{"text-align":"left"}},zk=t("code",null,"栈",-1),Ok=t("code",null,"递归",-1),Nk=t("code",null,"链表",-1),Lk=t("code",null,"1+",-1),Bk={style:{"text-align":"left"}},Vk=t("td",{style:{"text-align":"center"}},"剑指 Offer II 27",-1),Ck={style:{"text-align":"left"}},Qk={href:"https://leetcode.cn/problems/aMhZSa",target:"_blank",rel:"noopener noreferrer"},Rk={style:{"text-align":"center"}},Zk={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_II_027",target:"_blank",rel:"noopener noreferrer"},Gk={style:{"text-align":"left"}},Kk=t("code",null,"栈",-1),Sk=t("code",null,"递归",-1),Tk=t("code",null,"链表",-1),Uk=t("code",null,"1+",-1),Xk={style:{"text-align":"left"}},Yk=t("td",{style:{"text-align":"center"}},"剑指 Offer II 36",-1),Ak={style:{"text-align":"left"}},Pk={href:"https://leetcode.cn/problems/8Zf90G",target:"_blank",rel:"noopener noreferrer"},Dk=t("td",{style:{"text-align":"center"}},null,-1),Fk={style:{"text-align":"left"}},Jk=t("code",null,"栈",-1),Wk=t("code",null,"数组",-1),$k=t("code",null,"数学",-1),tM={style:{"text-align":"left"}},eM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 37",-1),oM={style:{"text-align":"left"}},lM={href:"https://leetcode.cn/problems/XagZNi",target:"_blank",rel:"noopener noreferrer"},nM=t("td",{style:{"text-align":"center"}},null,-1),sM={style:{"text-align":"left"}},dM=t("code",null,"栈",-1),_M=t("code",null,"数组",-1),cM=t("code",null,"模拟",-1),iM={style:{"text-align":"left"}},aM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 38",-1),rM={style:{"text-align":"left"}},hM={href:"https://leetcode.cn/problems/iIQa4I",target:"_blank",rel:"noopener noreferrer"},uM=t("td",{style:{"text-align":"center"}},null,-1),fM={style:{"text-align":"left"}},gM=t("code",null,"栈",-1),mM=t("code",null,"数组",-1),yM=t("code",null,"单调栈",-1),xM={style:{"text-align":"left"}},pM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 39",-1),bM={style:{"text-align":"left"}},kM={href:"https://leetcode.cn/problems/0ynMMM",target:"_blank",rel:"noopener noreferrer"},MM=t("td",{style:{"text-align":"center"}},null,-1),jM={style:{"text-align":"left"}},vM=t("code",null,"栈",-1),IM=t("code",null,"数组",-1),HM=t("code",null,"单调栈",-1),wM={style:{"text-align":"left"}},EM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),qM={style:{"text-align":"left"}},zM={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},OM=t("td",{style:{"text-align":"center"}},null,-1),NM={style:{"text-align":"left"}},LM=t("code",null,"栈",-1),BM=t("code",null,"数组",-1),VM=t("code",null,"动态规划",-1),CM=t("code",null,"2+",-1),QM={style:{"text-align":"left"}},RM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),ZM={style:{"text-align":"left"}},GM={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},KM=t("td",{style:{"text-align":"center"}},null,-1),SM={style:{"text-align":"left"}},TM=t("code",null,"栈",-1),UM=t("code",null,"树",-1),XM=t("code",null,"深度优先搜索",-1),YM=t("code",null,"2+",-1),AM={style:{"text-align":"left"}},PM=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),DM={style:{"text-align":"left"}},FM={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},JM=t("td",{style:{"text-align":"center"}},null,-1),WM={style:{"text-align":"left"}},$M=t("code",null,"栈",-1),tj=t("code",null,"树",-1),ej=t("code",null,"设计",-1),oj=t("code",null,"3+",-1),lj={style:{"text-align":"left"}},nj=t("td",{style:{"text-align":"center"}},"面试题 02.06",-1),sj={style:{"text-align":"left"}},dj={href:"https://leetcode.cn/problems/palindrome-linked-list-lcci",target:"_blank",rel:"noopener noreferrer"},_j=t("td",{style:{"text-align":"center"}},null,-1),cj={style:{"text-align":"left"}},ij=t("code",null,"栈",-1),aj=t("code",null,"递归",-1),rj=t("code",null,"链表",-1),hj=t("code",null,"1+",-1),uj={style:{"text-align":"left"}},fj=t("td",{style:{"text-align":"center"}},"面试题 03.01",-1),gj={style:{"text-align":"left"}},mj={href:"https://leetcode.cn/problems/three-in-one-lcci",target:"_blank",rel:"noopener noreferrer"},yj=t("td",{style:{"text-align":"center"}},null,-1),xj={style:{"text-align":"left"}},pj=t("code",null,"栈",-1),bj=t("code",null,"设计",-1),kj=t("code",null,"数组",-1),Mj={style:{"text-align":"left"}},jj=t("td",{style:{"text-align":"center"}},"面试题 03.02",-1),vj={style:{"text-align":"left"}},Ij={href:"https://leetcode.cn/problems/min-stack-lcci",target:"_blank",rel:"noopener noreferrer"},Hj=t("td",{style:{"text-align":"center"}},null,-1),wj={style:{"text-align":"left"}},Ej=t("code",null,"栈",-1),qj=t("code",null,"设计",-1),zj={style:{"text-align":"left"}},Oj=t("td",{style:{"text-align":"center"}},"面试题 03.03",-1),Nj={style:{"text-align":"left"}},Lj={href:"https://leetcode.cn/problems/stack-of-plates-lcci",target:"_blank",rel:"noopener noreferrer"},Bj=t("td",{style:{"text-align":"center"}},null,-1),Vj={style:{"text-align":"left"}},Cj=t("code",null,"栈",-1),Qj=t("code",null,"设计",-1),Rj=t("code",null,"链表",-1),Zj={style:{"text-align":"left"}},Gj=t("td",{style:{"text-align":"center"}},"面试题 03.04",-1),Kj={style:{"text-align":"left"}},Sj={href:"https://leetcode.cn/problems/implement-queue-using-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},Tj=t("td",{style:{"text-align":"center"}},null,-1),Uj={style:{"text-align":"left"}},Xj=t("code",null,"栈",-1),Yj=t("code",null,"设计",-1),Aj=t("code",null,"队列",-1),Pj={style:{"text-align":"left"}},Dj=t("td",{style:{"text-align":"center"}},"面试题 03.05",-1),Fj={style:{"text-align":"left"}},Jj={href:"https://leetcode.cn/problems/sort-of-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},Wj=t("td",{style:{"text-align":"center"}},null,-1),$j={style:{"text-align":"left"}},tv=t("code",null,"栈",-1),ev=t("code",null,"设计",-1),ov=t("code",null,"单调栈",-1),lv={style:{"text-align":"left"}},nv=t("td",{style:{"text-align":"center"}},"面试题 16.16",-1),sv={style:{"text-align":"left"}},dv={href:"https://leetcode.cn/problems/sub-sort-lcci",target:"_blank",rel:"noopener noreferrer"},_v=t("td",{style:{"text-align":"center"}},null,-1),cv={style:{"text-align":"left"}},iv=t("code",null,"栈",-1),av=t("code",null,"贪心",-1),rv=t("code",null,"数组",-1),hv=t("code",null,"3+",-1),uv={style:{"text-align":"left"}},fv=t("td",{style:{"text-align":"center"}},"面试题 16.26",-1),gv={style:{"text-align":"left"}},mv={href:"https://leetcode.cn/problems/calculator-lcci",target:"_blank",rel:"noopener noreferrer"},yv=t("td",{style:{"text-align":"center"}},null,-1),xv={style:{"text-align":"left"}},pv=t("code",null,"栈",-1),bv=t("code",null,"数学",-1),kv=t("code",null,"字符串",-1),Mv={style:{"text-align":"left"}},jv=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),vv={style:{"text-align":"left"}},Iv={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},Hv=t("td",{style:{"text-align":"center"}},null,-1),wv={style:{"text-align":"left"}},Ev=t("code",null,"栈",-1),qv=t("code",null,"树",-1),zv=t("code",null,"深度优先搜索",-1),Ov=t("code",null,"3+",-1),Nv={style:{"text-align":"left"}},Lv=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),Bv={style:{"text-align":"left"}},Vv={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"},Cv=t("td",{style:{"text-align":"center"}},null,-1),Qv={style:{"text-align":"left"}},Rv=t("code",null,"栈",-1),Zv=t("code",null,"数组",-1),Gv=t("code",null,"双指针",-1),Kv=t("code",null,"2+",-1),Sv={style:{"text-align":"left"}};function Tv(Uv,Xv){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[b]),_:1}),o(),k,o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[U]),_:1})]),X,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Bt]),_:1})])]),Vt,r(" prettier-ignore "),t("table",null,[Ct,t("tbody",null,[t("tr",null,[Qt,t("td",Rt,[t("a",Zt,[o("有效的括号"),e(s)])]),t("td",Gt,[t("a",Kt,[o("[✓]"),e(s)])]),t("td",St,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ut]),_:1})]),t("td",Xt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Yt,t("td",At,[t("a",Pt,[o("最长有效括号"),e(s)])]),t("td",Dt,[t("a",Ft,[o("[✓]"),e(s)])]),t("td",Jt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[te]),_:1})]),t("td",ee,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[oe,t("td",le,[t("a",ne,[o("接雨水"),e(s)])]),t("td",se,[t("a",de,[o("[✓]"),e(s)])]),t("td",_e,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ce]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ie]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[ae]),_:1}),o(),re]),t("td",he,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[o("简化路径"),e(s)])]),t("td",me,[t("a",ye,[o("[✓]"),e(s)])]),t("td",xe,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[pe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[be]),_:1})]),t("td",ke,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Me,t("td",je,[t("a",ve,[o("柱状图中最大的矩形"),e(s)])]),t("td",Ie,[t("a",He,[o("[✓]"),e(s)])]),t("td",we,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ee]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[qe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[ze]),_:1})]),t("td",Oe,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ne,t("td",Le,[t("a",Be,[o("最大矩形"),e(s)])]),t("td",Ve,[t("a",Ce,[o("[✓]"),e(s)])]),t("td",Qe,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Re]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ze]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ge]),_:1}),o(),Ke]),t("td",Se,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Te,t("td",Ue,[t("a",Xe,[o("二叉树的中序遍历"),e(s)])]),t("td",Ye,[t("a",Ae,[o("[✓]"),e(s)])]),t("td",Pe,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[De]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Fe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Je]),_:1}),o(),We]),t("td",$e,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[to,t("td",eo,[t("a",oo,[o("二叉树展开为链表"),e(s)])]),t("td",lo,[t("a",no,[o("[✓]"),e(s)])]),t("td",so,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[_o]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[co]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[io]),_:1}),o(),ao]),t("td",ro,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ho,t("td",uo,[t("a",fo,[o("重排链表"),e(s)])]),t("td",go,[t("a",mo,[o("[✓]"),e(s)])]),t("td",yo,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[xo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[po]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[bo]),_:1}),o(),ko]),t("td",Mo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jo,t("td",vo,[t("a",Io,[o("二叉树的前序遍历"),e(s)])]),t("td",Ho,[t("a",wo,[o("[✓]"),e(s)])]),t("td",Eo,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[qo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[zo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Oo]),_:1}),o(),No]),t("td",Lo,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Bo,t("td",Vo,[t("a",Co,[o("二叉树的后序遍历"),e(s)])]),t("td",Qo,[t("a",Ro,[o("[✓]"),e(s)])]),t("td",Zo,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Go]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ko]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[So]),_:1}),o(),To]),t("td",Uo,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Xo,t("td",Yo,[t("a",Ao,[o("逆波兰表达式求值"),e(s)])]),t("td",Po,[t("a",Do,[o("[✓]"),e(s)])]),t("td",Fo,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Jo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Wo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[$o]),_:1})]),t("td",tl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[el,t("td",ol,[t("a",ll,[o("最小栈"),e(s)])]),t("td",nl,[t("a",sl,[o("[✓]"),e(s)])]),t("td",dl,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[_l]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[cl]),_:1})]),t("td",il,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[al,t("td",rl,[t("a",hl,[o("二叉搜索树迭代器"),e(s)])]),t("td",ul,[t("a",fl,[o("[✓]"),e(s)])]),t("td",gl,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ml]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[yl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[xl]),_:1}),o(),pl]),t("td",bl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[kl,t("td",Ml,[t("a",jl,[o("基本计算器"),e(s)])]),t("td",vl,[t("a",Il,[o("[✓]"),e(s)])]),t("td",Hl,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[wl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[El]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[ql]),_:1}),o(),zl]),t("td",Ol,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Nl,t("td",Ll,[t("a",Bl,[o("用队列实现栈"),e(s)])]),t("td",Vl,[t("a",Cl,[o("[✓]"),e(s)])]),t("td",Ql,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Rl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Zl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Gl]),_:1})]),t("td",Kl,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Sl,t("td",Tl,[t("a",Ul,[o("基本计算器 II"),e(s)])]),t("td",Xl,[t("a",Yl,[o("[✓]"),e(s)])]),t("td",Al,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Pl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Dl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Fl]),_:1})]),t("td",Jl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wl,t("td",$l,[t("a",tn,[o("用栈实现队列"),e(s)])]),t("td",en,[t("a",on,[o("[✓]"),e(s)])]),t("td",ln,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[nn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[sn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[dn]),_:1})]),t("td",_n,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[cn,t("td",an,[t("a",rn,[o("回文链表"),e(s)])]),t("td",hn,[t("a",un,[o("[✓]"),e(s)])]),t("td",fn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[gn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[mn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[yn]),_:1}),o(),xn]),t("td",pn,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[bn,t("td",kn,[t("a",Mn,[o("验证二叉搜索树的前序遍历序列"),e(s)])]),jn,t("td",vn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[In]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Hn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[wn]),_:1}),o(),En]),t("td",qn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zn,t("td",On,[t("a",Nn,[o("最接近的二叉搜索树值 II"),e(s)])]),Ln,t("td",Bn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Vn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Cn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Qn]),_:1}),o(),Rn]),t("td",Zn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Gn,t("td",Kn,[t("a",Sn,[o("去除重复字母"),e(s)])]),t("td",Tn,[t("a",Un,[o("[✓]"),e(s)])]),t("td",Xn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Yn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[An]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Pn]),_:1}),o(),Dn]),t("td",Fn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Jn,t("td",Wn,[t("a",$n,[o("拼接最大数"),e(s)])]),ts,t("td",es,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[os]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[ls]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ns]),_:1}),o(),ss]),t("td",ds,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_s,t("td",cs,[t("a",is,[o("验证二叉树的前序序列化"),e(s)])]),as,t("td",rs,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[hs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[us]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[fs]),_:1}),o(),gs]),t("td",ms,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ys,t("td",xs,[t("a",ps,[o("扁平化嵌套列表迭代器"),e(s)])]),bs,t("td",ks,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ms]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[js]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[vs]),_:1}),o(),Is]),t("td",Hs,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ws,t("td",Es,[t("a",qs,[o("嵌套列表加权和 II"),e(s)])]),zs,t("td",Os,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ns]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ls]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Bs]),_:1})]),t("td",Vs,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Cs,t("td",Qs,[t("a",Rs,[o("迷你语法分析器"),e(s)])]),Zs,t("td",Gs,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ks]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ss]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ts]),_:1})]),t("td",Us,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xs,t("td",Ys,[t("a",As,[o("文件的最长绝对路径"),e(s)])]),Ps,t("td",Ds,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Fs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Js]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ws]),_:1})]),t("td",$s,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[td,t("td",ed,[t("a",od,[o("字符串解码"),e(s)])]),t("td",ld,[t("a",nd,[o("[✓]"),e(s)])]),t("td",sd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[dd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[_d]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[cd]),_:1})]),t("td",id,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ad,t("td",rd,[t("a",hd,[o("移掉 K 位数字"),e(s)])]),ud,t("td",fd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[gd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[md]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[yd]),_:1}),o(),xd]),t("td",pd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[bd,t("td",kd,[t("a",Md,[o("将二叉搜索树转化为排序的双向链表"),e(s)])]),t("td",jd,[t("a",vd,[o("[✓]"),e(s)])]),t("td",Id,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Hd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[wd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ed]),_:1}),o(),qd]),t("td",zd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Od,t("td",Nd,[t("a",Ld,[o("三元表达式解析器"),e(s)])]),Bd,t("td",Vd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Cd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[Qd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Rd]),_:1})]),t("td",Zd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Gd,t("td",Kd,[t("a",Sd,[o("两数相加 II"),e(s)])]),t("td",Td,[t("a",Ud,[o("[✓]"),e(s)])]),t("td",Xd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Yd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Ad]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Pd]),_:1})]),t("td",Dd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Fd,t("td",Jd,[t("a",Wd,[o("132 模式"),e(s)])]),$d,t("td",t_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[e_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[o_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[l_]),_:1}),o(),n_]),t("td",s_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[d_,t("td",__,[t("a",c_,[o("寻找排列"),e(s)])]),i_,t("td",a_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[r_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[h_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[u_]),_:1}),o(),f_]),t("td",g_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[m_,t("td",y_,[t("a",x_,[o("祖玛游戏"),e(s)])]),p_,t("td",b_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[M_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[j_]),_:1}),o(),v_]),t("td",I_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[H_,t("td",w_,[t("a",E_,[o("下一个更大元素 I"),e(s)])]),t("td",q_,[t("a",z_,[o("[✓]"),e(s)])]),t("td",O_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[N_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[L_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[B_]),_:1}),o(),V_]),t("td",C_,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Q_,t("td",R_,[t("a",Z_,[o("下一个更大元素 II"),e(s)])]),t("td",G_,[t("a",K_,[o("[✓]"),e(s)])]),t("td",S_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[T_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[U_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[X_]),_:1})]),t("td",Y_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[A_,t("td",P_,[t("a",D_,[o("从字符串生成二叉树"),e(s)])]),F_,t("td",J_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[W_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[tc]),_:1}),o(),ec]),t("td",oc,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[lc,t("td",nc,[t("a",sc,[o("最短无序连续子数组"),e(s)])]),dc,t("td",_c,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[cc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[ic]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ac]),_:1}),o(),rc]),t("td",hc,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[uc,t("td",fc,[t("a",gc,[o("N 叉树的前序遍历"),e(s)])]),t("td",mc,[t("a",yc,[o("[✓]"),e(s)])]),t("td",xc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[pc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[bc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[kc]),_:1})]),t("td",Mc,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[jc,t("td",vc,[t("a",Ic,[o("N 叉树的后序遍历"),e(s)])]),t("td",Hc,[t("a",wc,[o("[✓]"),e(s)])]),t("td",Ec,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[qc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[zc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Oc]),_:1})]),t("td",Nc,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Lc,t("td",Bc,[t("a",Vc,[o("标签验证器"),e(s)])]),Cc,t("td",Qc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Rc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Zc]),_:1})]),t("td",Gc,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Kc,t("td",Sc,[t("a",Tc,[o("函数的独占时间"),e(s)])]),Uc,t("td",Xc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Yc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ac]),_:1})]),t("td",Pc,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Dc,t("td",Fc,[t("a",Jc,[o("最大二叉树"),e(s)])]),t("td",Wc,[t("a",$c,[o("[✓]"),e(s)])]),t("td",ti,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ei]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[oi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[li]),_:1}),o(),ni]),t("td",si,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[di,t("td",_i,[t("a",ci,[o("有效的括号字符串"),e(s)])]),t("td",ii,[t("a",ai,[o("[✓]"),e(s)])]),t("td",ri,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[hi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[ui]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[fi]),_:1}),o(),gi]),t("td",mi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yi,t("td",xi,[t("a",pi,[o("棒球比赛"),e(s)])]),t("td",bi,[t("a",ki,[o("[✓]"),e(s)])]),t("td",Mi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ji]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[vi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[Ii]),_:1})]),t("td",Hi,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[wi,t("td",Ei,[t("a",qi,[o("最大栈"),e(s)])]),zi,t("td",Oi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ni]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Li]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Bi]),_:1}),o(),Vi]),t("td",Ci,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Qi,t("td",Ri,[t("a",Zi,[o("原子的数量"),e(s)])]),Gi,t("td",Ki,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Si]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Ti]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ui]),_:1}),o(),Xi]),t("td",Yi,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ai,t("td",Pi,[t("a",Di,[o("小行星碰撞"),e(s)])]),Fi,t("td",Ji,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Wi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[$i]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[ta]),_:1})]),t("td",ea,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[oa,t("td",la,[t("a",na,[o("Lisp 语法解析"),e(s)])]),sa,t("td",da,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[_a]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[ca]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ia]),_:1}),o(),aa]),t("td",ra,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ha,t("td",ua,[t("a",fa,[o("每日温度"),e(s)])]),t("td",ga,[t("a",ma,[o("[✓]"),e(s)])]),t("td",ya,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[xa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[pa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[ba]),_:1})]),t("td",ka,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ma,t("td",ja,[t("a",va,[o("最多能完成排序的块 II"),e(s)])]),Ia,t("td",Ha,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[wa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Ea]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[qa]),_:1}),o(),za]),t("td",Oa,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Na,t("td",La,[t("a",Ba,[o("最多能完成排序的块"),e(s)])]),Va,t("td",Ca,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Qa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Ra]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Za]),_:1}),o(),Ga]),t("td",Ka,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Sa,t("td",Ta,[t("a",Ua,[o("基本计算器 IV"),e(s)])]),Xa,t("td",Ya,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Aa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[Pa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Da]),_:1}),o(),Fa]),t("td",Ja,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Wa,t("td",$a,[t("a",tr,[o("基本计算器 III"),e(s)])]),t("td",er,[t("a",or,[o("[✓]"),e(s)])]),t("td",lr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[nr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[sr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[dr]),_:1}),o(),_r]),t("td",cr,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ir,t("td",ar,[t("a",rr,[o("比较含退格的字符串"),e(s)])]),t("td",hr,[t("a",ur,[o("[✓]"),e(s)])]),t("td",fr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[gr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[mr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[yr]),_:1}),o(),xr]),t("td",pr,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[br,t("td",kr,[t("a",Mr,[o("车队"),e(s)])]),jr,t("td",vr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ir]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Hr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[wr]),_:1}),o(),Er]),t("td",qr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zr,t("td",Or,[t("a",Nr,[o("括号的分数"),e(s)])]),Lr,t("td",Br,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Vr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Cr]),_:1})]),t("td",Qr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Rr,t("td",Zr,[t("a",Gr,[o("索引处的解码字符串"),e(s)])]),t("td",Kr,[t("a",Sr,[o("[✓]"),e(s)])]),t("td",Tr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ur]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Xr]),_:1})]),t("td",Yr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ar,t("td",Pr,[t("a",Dr,[o("最大频率栈"),e(s)])]),Fr,t("td",Jr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Wr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[$r]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[t1]),_:1}),o(),e1]),t("td",o1,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[l1,t("td",n1,[t("a",s1,[o("递增顺序搜索树"),e(s)])]),d1,t("td",_1,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[c1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[i1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[a1]),_:1}),o(),r1]),t("td",h1,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[u1,t("td",f1,[t("a",g1,[o("股票价格跨度"),e(s)])]),m1,t("td",y1,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[x1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[p1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[b1]),_:1}),o(),k1]),t("td",M1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[j1,t("td",v1,[t("a",I1,[o("子数组的最小值之和"),e(s)])]),H1,t("td",w1,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[E1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[q1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[z1]),_:1}),o(),O1]),t("td",N1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[L1,t("td",B1,[t("a",V1,[o("使括号有效的最少添加"),e(s)])]),t("td",C1,[t("a",Q1,[o("[✓]"),e(s)])]),t("td",R1,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Z1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[G1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[K1]),_:1})]),t("td",S1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[T1,t("td",U1,[t("a",X1,[o("戳印序列"),e(s)])]),Y1,t("td",A1,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[P1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[D1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[F1]),_:1}),o(),J1]),t("td",W1,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$1,t("td",th,[t("a",eh,[o("验证栈序列"),e(s)])]),t("td",oh,[t("a",lh,[o("[✓]"),e(s)])]),t("td",nh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[sh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[dh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[_h]),_:1})]),t("td",ch,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ih,t("td",ah,[t("a",rh,[o("最大宽度坡"),e(s)])]),t("td",hh,[t("a",uh,[o("[✓]"),e(s)])]),t("td",fh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[gh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[mh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[yh]),_:1})]),t("td",xh,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ph,t("td",bh,[t("a",kh,[o("奇偶跳"),e(s)])]),Mh,t("td",jh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[vh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ih]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Hh]),_:1}),o(),wh]),t("td",Eh,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[qh,t("td",zh,[t("a",Oh,[o("检查替换后的词是否有效"),e(s)])]),Nh,t("td",Lh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Bh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Vh]),_:1})]),t("td",Ch,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Qh,t("td",Rh,[t("a",Zh,[o("笨阶乘"),e(s)])]),Gh,t("td",Kh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Sh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Th]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[Uh]),_:1})]),t("td",Xh,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Yh,t("td",Ah,[t("a",Ph,[o("前序遍历构造二叉搜索树"),e(s)])]),t("td",Dh,[t("a",Fh,[o("[✓]"),e(s)])]),t("td",Jh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Wh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$h]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[tu]),_:1}),o(),eu]),t("td",ou,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[lu,t("td",nu,[t("a",su,[o("链表中的下一个更大节点"),e(s)])]),du,t("td",_u,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[cu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[iu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[au]),_:1}),o(),ru]),t("td",hu,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[uu,t("td",fu,[t("a",gu,[o("删除最外层的括号"),e(s)])]),t("td",mu,[t("a",yu,[o("[✓]"),e(s)])]),t("td",xu,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[pu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[bu]),_:1})]),t("td",ku,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Mu,t("td",ju,[t("a",vu,[o("删除字符串中的所有相邻重复项"),e(s)])]),t("td",Iu,[t("a",Hu,[o("[✓]"),e(s)])]),t("td",wu,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Eu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[qu]),_:1})]),t("td",zu,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ou,t("td",Nu,[t("a",Lu,[o("有效子数组的数目"),e(s)])]),Bu,t("td",Vu,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Cu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Qu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[Ru]),_:1})]),t("td",Zu,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Gu,t("td",Ku,[t("a",Su,[o("不同字符的最小子序列"),e(s)])]),t("td",Tu,[t("a",Uu,[o("[✓]"),e(s)])]),t("td",Xu,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Yu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Au]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Pu]),_:1}),o(),Du]),t("td",Fu,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ju,t("td",Wu,[t("a",$u,[o("花括号展开 II"),e(s)])]),tf,t("td",ef,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[of]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[lf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[nf]),_:1}),o(),sf]),t("td",df,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_f,t("td",cf,[t("a",af,[o("解析布尔表达式"),e(s)])]),rf,t("td",hf,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[uf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[ff]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[gf]),_:1})]),t("td",mf,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[yf,t("td",xf,[t("a",pf,[o("有效括号的嵌套深度"),e(s)])]),bf,t("td",kf,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Mf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[jf]),_:1})]),t("td",vf,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[If,t("td",Hf,[t("a",wf,[o("表现良好的最长时间段"),e(s)])]),Ef,t("td",qf,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[zf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Of]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Nf]),_:1}),o(),Lf]),t("td",Bf,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Vf,t("td",Cf,[t("a",Qf,[o("叶值的最小代价生成树"),e(s)])]),Rf,t("td",Zf,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Gf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Kf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Sf]),_:1}),o(),Tf]),t("td",Uf,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xf,t("td",Yf,[t("a",Af,[o("餐盘栈"),e(s)])]),Pf,t("td",Df,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ff]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Jf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Wf]),_:1}),o(),$f]),t("td",tg,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[eg,t("td",og,[t("a",lg,[o("反转每对括号间的子串"),e(s)])]),t("td",ng,[t("a",sg,[o("[✓]"),e(s)])]),t("td",dg,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[_g]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[cg]),_:1})]),t("td",ig,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ag,t("td",rg,[t("a",hg,[o("删除字符串中的所有相邻重复项 II"),e(s)])]),ug,t("td",fg,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[gg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[mg]),_:1})]),t("td",yg,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xg,t("td",pg,[t("a",bg,[o("查找两棵二叉搜索树之和"),e(s)])]),kg,t("td",Mg,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[jg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[vg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ig]),_:1}),o(),Hg]),t("td",wg,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Eg,t("td",qg,[t("a",zg,[o("移除无效的括号"),e(s)])]),Og,t("td",Ng,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Lg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Bg]),_:1})]),t("td",Vg,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Cg,t("td",Qg,[t("a",Rg,[o("逆序打印不可变链表"),e(s)])]),Zg,t("td",Gg,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Kg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[Sg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Tg]),_:1}),o(),Ug]),t("td",Xg,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Yg,t("td",Ag,[t("a",Pg,[o("设计一个支持增量操作的栈"),e(s)])]),t("td",Dg,[t("a",Fg,[o("[✓]"),e(s)])]),t("td",Jg,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Wg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[$g]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[tm]),_:1})]),t("td",em,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[om,t("td",lm,[t("a",nm,[o("用栈操作构建数组"),e(s)])]),t("td",sm,[t("a",dm,[o("[✓]"),e(s)])]),t("td",_m,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[cm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[im]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[am]),_:1})]),t("td",rm,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[hm,t("td",um,[t("a",fm,[o("设计浏览器历史记录"),e(s)])]),t("td",gm,[t("a",mm,[o("[✓]"),e(s)])]),t("td",ym,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[xm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[pm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[bm]),_:1}),o(),km]),t("td",Mm,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jm,t("td",vm,[t("a",Im,[o("商品折扣后的最终价格"),e(s)])]),t("td",Hm,[t("a",wm,[o("[✓]"),e(s)])]),t("td",Em,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[qm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[zm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[Om]),_:1})]),t("td",Nm,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Lm,t("td",Bm,[t("a",Vm,[o("统计全 1 子矩形"),e(s)])]),Cm,t("td",Qm,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Rm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Zm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Gm]),_:1}),o(),Km]),t("td",Sm,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Tm,t("td",Um,[t("a",Xm,[o("形成目标数组的子数组最少增加次数"),e(s)])]),Ym,t("td",Am,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Pm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Dm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Fm]),_:1}),o(),Jm]),t("td",Wm,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$m,t("td",ty,[t("a",ey,[o("平衡括号字符串的最少插入次数"),e(s)])]),oy,t("td",ly,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ny]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[sy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[dy]),_:1})]),t("td",_y,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[cy,t("td",iy,[t("a",ay,[o("整理字符串"),e(s)])]),ry,t("td",hy,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[uy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[fy]),_:1})]),t("td",gy,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[my,t("td",yy,[t("a",xy,[o("删除最短的子数组使剩余数组有序"),e(s)])]),py,t("td",by,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ky]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[My]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[jy]),_:1}),o(),vy]),t("td",Iy,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Hy,t("td",wy,[t("a",Ey,[o("二叉搜索树迭代器 II"),e(s)])]),qy,t("td",zy,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Oy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ny]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Ly]),_:1}),o(),By]),t("td",Vy,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Cy,t("td",Qy,[t("a",Ry,[o("根据中缀表达式构造二叉表达式树"),e(s)])]),Zy,t("td",Gy,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ky]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Sy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ty]),_:1}),o(),Uy]),t("td",Xy,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Yy,t("td",Ay,[t("a",Py,[o("文件夹操作日志搜集器"),e(s)])]),Dy,t("td",Fy,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Jy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Wy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[$y]),_:1})]),t("td",tx,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ex,t("td",ox,[t("a",lx,[o("括号的最大嵌套深度"),e(s)])]),nx,t("td",sx,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[dx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[_x]),_:1})]),t("td",cx,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ix,t("td",ax,[t("a",rx,[o("设计带解析函数的表达式树"),e(s)])]),hx,t("td",ux,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[fx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[gx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[mx]),_:1}),o(),yx]),t("td",xx,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[px,t("td",bx,[t("a",kx,[o("使字符串平衡的最少删除次数"),e(s)])]),Mx,t("td",jx,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[vx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ix]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Hx]),_:1})]),t("td",wx,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ex,t("td",qx,[t("a",zx,[o("找出最具竞争力的子序列"),e(s)])]),Ox,t("td",Nx,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Lx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Bx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Vx]),_:1}),o(),Cx]),t("td",Qx,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Rx,t("td",Zx,[t("a",Gx,[o("无法吃午餐的学生数量"),e(s)])]),Kx,t("td",Sx,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Tx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Ux]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Xx]),_:1}),o(),Yx]),t("td",Ax,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Px,t("td",Dx,[t("a",Fx,[o("删除子字符串的最大得分"),e(s)])]),Jx,t("td",Wx,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[$x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[tp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[ep]),_:1})]),t("td",op,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[lp,t("td",np,[t("a",sp,[o("设计最近使用（MRU）队列"),e(s)])]),dp,t("td",_p,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[cp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[ip]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[ap]),_:1}),o(),rp]),t("td",hp,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[up,t("td",fp,[t("a",gp,[o("能看到海景的建筑物"),e(s)])]),mp,t("td",yp,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[xp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[pp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[bp]),_:1})]),t("td",kp,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Mp,t("td",jp,[t("a",vp,[o("车队 II"),e(s)])]),Ip,t("td",Hp,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[wp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ep]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[qp]),_:1}),o(),zp]),t("td",Op,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Np,t("td",Lp,[t("a",Bp,[o("好子数组的最大分数"),e(s)])]),Vp,t("td",Cp,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Qp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Rp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[Zp]),_:1}),o(),Gp]),t("td",Kp,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Sp,t("td",Tp,[t("a",Up,[o("子数组最小乘积的最大值"),e(s)])]),Xp,t("td",Yp,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ap]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Pp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[Dp]),_:1}),o(),Fp]),t("td",Jp,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wp,t("td",$p,[t("a",tb,[o("反转表达式值的最少操作次数"),e(s)])]),eb,t("td",ob,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[lb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[nb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[sb]),_:1}),o(),db]),t("td",_b,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[cb,t("td",ib,[t("a",ab,[o("删除一个字符串中所有出现的给定子字符串"),e(s)])]),rb,t("td",hb,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ub]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[fb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[gb]),_:1})]),t("td",mb,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yb,t("td",xb,[t("a",pb,[o("队列中可以看到的人数"),e(s)])]),bb,t("td",kb,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Mb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[jb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[vb]),_:1})]),t("td",Ib,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Hb,t("td",wb,[t("a",Eb,[o("所有子数组最小值中的最大值"),e(s)])]),qb,t("td",zb,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ob]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Nb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[Lb]),_:1})]),t("td",Bb,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Vb,t("td",Cb,[t("a",Qb,[o("使字符串平衡的最小交换次数"),e(s)])]),t("td",Rb,[t("a",Zb,[o("[✓]"),e(s)])]),t("td",Gb,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Kb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Sb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[Tb]),_:1}),o(),Ub]),t("td",Xb,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Yb,t("td",Ab,[t("a",Pb,[o("游戏中弱角色的数量"),e(s)])]),Db,t("td",Fb,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Jb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Wb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[$b]),_:1}),o(),t0]),t("td",e0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[o0,t("td",l0,[t("a",n0,[o("反转单词前缀"),e(s)])]),s0,t("td",d0,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[_0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[c0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[i0]),_:1})]),t("td",a0,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[r0,t("td",h0,[t("a",u0,[o("解出数学表达式的学生分数"),e(s)])]),f0,t("td",g0,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[m0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[y0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[x0]),_:1}),o(),p0]),t("td",b0,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[k0,t("td",M0,[t("a",j0,[o("含特定字母的最小子序列"),e(s)])]),v0,t("td",I0,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[H0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[w0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[E0]),_:1}),o(),q0]),t("td",z0,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[O0,t("td",N0,[t("a",L0,[o("子数组范围和"),e(s)])]),B0,t("td",V0,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[C0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Q0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[R0]),_:1})]),t("td",Z0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[G0,t("td",K0,[t("a",S0,[o("判断一个括号字符串是否有效"),e(s)])]),T0,t("td",U0,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[X0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Y0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[A0]),_:1})]),t("td",P0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[D0,t("td",F0,[t("a",J0,[o("链表最大孪生和"),e(s)])]),W0,t("td",$0,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[t2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[e2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[o2]),_:1})]),t("td",l2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[n2,t("td",s2,[t("a",d2,[o("替换数组中的非互质数"),e(s)])]),_2,t("td",c2,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[i2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[a2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[r2]),_:1}),o(),h2]),t("td",u2,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[f2,t("td",g2,[t("a",m2,[o("统计道路上的碰撞次数"),e(s)])]),y2,t("td",x2,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[p2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[b2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[k2]),_:1})]),t("td",M2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[j2,t("td",v2,[t("a",I2,[o("美化数组的最少删除数"),e(s)])]),H2,t("td",w2,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[E2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[q2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[z2]),_:1})]),t("td",O2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[N2,t("td",L2,[t("a",B2,[o("设计视频共享平台"),e(s)])]),V2,t("td",C2,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Q2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[R2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Z2]),_:1}),o(),G2]),t("td",K2,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[S2,t("td",T2,[t("a",U2,[o("巫师的总力量和"),e(s)])]),X2,t("td",Y2,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[A2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[P2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[D2]),_:1}),o(),F2]),t("td",J2,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[W2,t("td",$2,[t("a",t3,[o("在一个网格中可以看到的人数"),e(s)])]),e3,t("td",o3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[l3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[n3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[s3]),_:1}),o(),d3]),t("td",_3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[c3,t("td",i3,[t("a",a3,[o("使数组按非递减顺序排列"),e(s)])]),r3,t("td",h3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[u3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[f3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[g3]),_:1}),o(),m3]),t("td",y3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[x3,t("td",p3,[t("a",b3,[o("设计一个文本编辑器"),e(s)])]),k3,t("td",M3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[j3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[v3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[I3]),_:1}),o(),H3]),t("td",w3,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[E3,t("td",q3,[t("a",z3,[o("跳跃游戏 VIII"),e(s)])]),O3,t("td",N3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[L3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[B3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[V3]),_:1}),o(),C3]),t("td",Q3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[R3,t("td",Z3,[t("a",G3,[o("元素值大于变化阈值的子数组"),e(s)])]),K3,t("td",S3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[T3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[U3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[X3]),_:1}),o(),Y3]),t("td",A3,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[P3,t("td",D3,[t("a",F3,[o("寻找可见山的数量"),e(s)])]),J3,t("td",W3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[$3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[t8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[e8]),_:1}),o(),o8]),t("td",l8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[n8,t("td",s8,[t("a",d8,[o("你能拿走的最大图书数量"),e(s)])]),_8,t("td",c8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[i8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[a8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[r8]),_:1}),o(),h8]),t("td",u8,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[f8,t("td",g8,[t("a",m8,[o("根据模式串构造最小数字"),e(s)])]),y8,t("td",x8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[p8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[b8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[k8]),_:1}),o(),M8]),t("td",j8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[v8,t("td",I8,[t("a",H8,[o("从字符串中移除星号"),e(s)])]),w8,t("td",E8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[q8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[z8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[O8]),_:1})]),t("td",N8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[L8,t("td",B8,[t("a",V8,[o("使用机器人打印字典序最小的字符串"),e(s)])]),C8,t("td",Q8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[R8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Z8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[G8]),_:1}),o(),K8]),t("td",S8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[T8,t("td",U8,[t("a",X8,[o("下一个更大元素 IV"),e(s)])]),Y8,t("td",A8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[P8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[D8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[F8]),_:1}),o(),J8]),t("td",W8,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$8,t("td",t4,[t("a",e4,[o("从链表中移除节点"),e(s)])]),o4,t("td",l4,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[n4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[s4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[d4]),_:1}),o(),_4]),t("td",c4,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[i4,t("td",a4,[t("a",r4,[o("完成所有任务的最少时间"),e(s)])]),h4,t("td",u4,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[f4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[g4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[m4]),_:1}),o(),y4]),t("td",x4,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[p4,t("td",b4,[t("a",k4,[o("网格图中最少访问的格子数"),e(s)])]),M4,t("td",j4,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[v4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[I4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[H4]),_:1}),o(),w4]),t("td",E4,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[q4,t("td",z4,[t("a",O4,[o("构造有效字符串的最少插入数"),e(s)])]),N4,t("td",L4,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[B4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[V4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[C4]),_:1}),o(),Q4]),t("td",R4,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Z4,t("td",G4,[t("a",K4,[o("删除子串后的字符串最小长度"),e(s)])]),t("td",S4,[t("a",T4,[o("[✓]"),e(s)])]),t("td",U4,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[X4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Y4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[A4]),_:1})]),t("td",P4,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[D4,t("td",F4,[t("a",J4,[o("最大和查询"),e(s)])]),W4,t("td",$4,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[t6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[e6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[o6]),_:1}),o(),l6]),t("td",n6,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[s6,t("td",d6,[t("a",_6,[o("机器人碰撞"),e(s)])]),c6,t("td",i6,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[a6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[r6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[h6]),_:1}),o(),u6]),t("td",f6,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[g6,t("td",m6,[t("a",y6,[o("数组是否表示某二叉树的前序遍历"),e(s)])]),x6,t("td",p6,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[b6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[k6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[M6]),_:1}),o(),j6]),t("td",v6,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[I6,t("td",H6,[t("a",w6,[o("子序列最大优雅度"),e(s)])]),E6,t("td",q6,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[z6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[O6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[N6]),_:1}),o(),L6]),t("td",B6,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[V6,t("td",C6,[t("a",Q6,[o("翻倍以链表形式表示的数字"),e(s)])]),R6,t("td",Z6,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[G6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[K6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[S6]),_:1})]),t("td",T6,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[U6,t("td",X6,[t("a",Y6,[o("操作使得分最大"),e(s)])]),A6,t("td",P6,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[D6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[F6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[J6]),_:1}),o(),W6]),t("td",$6,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[t5,t("td",e5,[t("a",o5,[o("每个元素为最大值的最大范围"),e(s)])]),l5,t("td",n5,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[s5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[d5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[_5]),_:1})]),t("td",c5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[i5,t("td",a5,[t("a",r5,[o("最长半递减子数组的长度"),e(s)])]),h5,t("td",u5,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[f5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[g5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[m5]),_:1}),o(),y5]),t("td",x5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[p5,t("td",b5,[t("a",k5,[o("美丽塔 I"),e(s)])]),M5,t("td",j5,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[v5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[I5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[H5]),_:1})]),t("td",w5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[E5,t("td",q5,[t("a",z5,[o("美丽塔 II"),e(s)])]),O5,t("td",N5,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[L5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[B5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[V5]),_:1})]),t("td",C5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Q5,t("td",R5,[t("a",Z5,[o("找到 Alice 和 Bob 可以相遇的建筑"),e(s)])]),G5,t("td",K5,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[S5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[T5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[U5]),_:1}),o(),X5]),t("td",Y5,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[A5,t("td",P5,[t("a",D5,[o("找到最大非递减数组的长度"),e(s)])]),F5,t("td",J5,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[W5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[$5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[t7]),_:1}),o(),e7]),t("td",o7,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[l7,t("td",n7,[t("a",s7,[o("边界元素是最大值的子数组数目"),e(s)])]),d7,t("td",_7,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[c7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[i7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[a7]),_:1}),o(),r7]),t("td",h7,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[u7,t("td",f7,[t("a",g7,[o("删除星号以后字典序最小的字符串"),e(s)])]),m7,t("td",y7,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[x7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[p7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[b7]),_:1}),o(),k7]),t("td",M7,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[j7,t("td",v7,[t("a",I7,[o("清除数字"),e(s)])]),H7,t("td",w7,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[E7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[q7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[z7]),_:1})]),t("td",O7,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[N7,t("td",L7,[t("a",B7,[o("最大数组跳跃得分 I"),e(s)])]),V7,t("td",C7,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Q7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[R7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Z7]),_:1}),o(),G7]),t("td",K7,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[S7,t("td",T7,[t("a",U7,[o("最大数组跳跃得分 II"),e(s)])]),X7,t("td",Y7,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[A7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[P7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[D7]),_:1}),o(),F7]),t("td",J7,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[W7,t("td",$7,[t("a",t9,[o("使数组等于目标数组所需的最少操作次数"),e(s)])]),e9,t("td",o9,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[l9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[n9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[s9]),_:1}),o(),d9]),t("td",_9,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[c9,t("td",i9,[t("a",a9,[o("从尾到头打印链表"),e(s)])]),t("td",r9,[t("a",h9,[o("[✓]"),e(s)])]),t("td",u9,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[f9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[g9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[m9]),_:1}),o(),y9]),t("td",x9,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[p9,t("td",b9,[t("a",k9,[o("用两个栈实现队列"),e(s)])]),t("td",M9,[t("a",j9,[o("[✓]"),e(s)])]),t("td",v9,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[I9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[H9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[w9]),_:1})]),t("td",E9,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[q9,t("td",z9,[t("a",O9,[o("包含min函数的栈"),e(s)])]),t("td",N9,[t("a",L9,[o("[✓]"),e(s)])]),t("td",B9,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[V9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[C9]),_:1})]),t("td",Q9,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[R9,t("td",Z9,[t("a",G9,[o("栈的压入、弹出序列"),e(s)])]),t("td",K9,[t("a",S9,[o("[✓]"),e(s)])]),t("td",T9,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[U9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[X9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[Y9]),_:1})]),t("td",A9,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[P9,t("td",D9,[t("a",F9,[o("二叉搜索树的后序遍历序列"),e(s)])]),t("td",J9,[t("a",W9,[o("[✓]"),e(s)])]),t("td",$9,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[tk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ek]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[ok]),_:1}),o(),lk]),t("td",nk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[sk,t("td",dk,[t("a",_k,[o("二叉搜索树与双向链表"),e(s)])]),t("td",ck,[t("a",ik,[o("[✓]"),e(s)])]),t("td",ak,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[rk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[hk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[uk]),_:1}),o(),fk]),t("td",gk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[mk,t("td",yk,[t("a",xk,[o("链表中的两数相加"),e(s)])]),pk,t("td",bk,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[kk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Mk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[jk]),_:1})]),t("td",vk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ik,t("td",Hk,[t("a",wk,[o("重排链表"),e(s)])]),Ek,t("td",qk,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[zk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[Ok]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Nk]),_:1}),o(),Lk]),t("td",Bk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Vk,t("td",Ck,[t("a",Qk,[o("回文链表"),e(s)])]),t("td",Rk,[t("a",Zk,[o("[✓]"),e(s)])]),t("td",Gk,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Kk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[Sk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Tk]),_:1}),o(),Uk]),t("td",Xk,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Yk,t("td",Ak,[t("a",Pk,[o("后缀表达式"),e(s)])]),Dk,t("td",Fk,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Jk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Wk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[$k]),_:1})]),t("td",tM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[eM,t("td",oM,[t("a",lM,[o("小行星碰撞"),e(s)])]),nM,t("td",sM,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[dM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[_M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[cM]),_:1})]),t("td",iM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[aM,t("td",rM,[t("a",hM,[o("每日温度"),e(s)])]),uM,t("td",fM,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[gM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[mM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[yM]),_:1})]),t("td",xM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[pM,t("td",bM,[t("a",kM,[o("直方图最大矩形面积"),e(s)])]),MM,t("td",jM,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[vM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[IM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[HM]),_:1})]),t("td",wM,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[EM,t("td",qM,[t("a",zM,[o("矩阵中最大的矩形"),e(s)])]),OM,t("td",NM,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[LM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[BM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[VM]),_:1}),o(),CM]),t("td",QM,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[RM,t("td",ZM,[t("a",GM,[o("展平二叉搜索树"),e(s)])]),KM,t("td",SM,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[TM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[UM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[XM]),_:1}),o(),YM]),t("td",AM,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[PM,t("td",DM,[t("a",FM,[o("二叉搜索树迭代器"),e(s)])]),JM,t("td",WM,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[$M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[tj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[ej]),_:1}),o(),oj]),t("td",lj,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[nj,t("td",sj,[t("a",dj,[o("回文链表"),e(s)])]),_j,t("td",cj,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ij]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[aj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[rj]),_:1}),o(),hj]),t("td",uj,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[fj,t("td",gj,[t("a",mj,[o("三合一"),e(s)])]),yj,t("td",xj,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[pj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[bj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[kj]),_:1})]),t("td",Mj,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[jj,t("td",vj,[t("a",Ij,[o("栈的最小值"),e(s)])]),Hj,t("td",wj,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ej]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[qj]),_:1})]),t("td",zj,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Oj,t("td",Nj,[t("a",Lj,[o("堆盘子"),e(s)])]),Bj,t("td",Vj,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Cj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Qj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Rj]),_:1})]),t("td",Zj,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Gj,t("td",Kj,[t("a",Sj,[o("化栈为队"),e(s)])]),Tj,t("td",Uj,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Xj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Yj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Aj]),_:1})]),t("td",Pj,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Dj,t("td",Fj,[t("a",Jj,[o("栈排序"),e(s)])]),Wj,t("td",$j,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[tv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[ev]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[ov]),_:1})]),t("td",lv,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[nv,t("td",sv,[t("a",dv,[o("部分排序"),e(s)])]),_v,t("td",cv,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[iv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[av]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[rv]),_:1}),o(),hv]),t("td",uv,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fv,t("td",gv,[t("a",mv,[o("计算器"),e(s)])]),yv,t("td",xv,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[pv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[bv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[kv]),_:1})]),t("td",Mv,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jv,t("td",vv,[t("a",Iv,[o("BiNode"),e(s)])]),Hv,t("td",wv,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ev]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[qv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[zv]),_:1}),o(),Ov]),t("td",Nv,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Lv,t("td",Bv,[t("a",Vv,[o("直方图的水量"),e(s)])]),Cv,t("td",Qv,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Rv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Zv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[Gv]),_:1}),o(),Kv]),t("td",Sv,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])])])])])}const Av=c(h,[["render",Tv],["__file","stack.html.vue"]]);export{Av as default};
