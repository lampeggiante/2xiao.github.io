import{_ as i,r as c,o as r,c as d,a as t,b as n,d as e,w as s,f as p,e as u}from"./app-mvY9N9Pc.js";const _={},h={id:"_9-回文数",tabindex:"-1"},f=t("a",{class:"header-anchor",href:"#_9-回文数","aria-hidden":"true"},"#",-1),m={href:"https://leetcode.com/problems/palindrome-number",target:"_blank",rel:"noopener noreferrer"},g=t("code",null,"数学",-1),k={href:"https://leetcode.com/problems/palindrome-number",target:"_blank",rel:"noopener noreferrer"},b=t("code",null,"LeetCode",-1),x=u(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given an integer <code>x</code>, return <code>true</code> if <code>x</code> is a <strong>palindrome</strong> ,and <code>false</code> otherwise .</p><p><strong>Example 1:</strong></p><blockquote><p>Input: x = 121</p><p>Output: true</p><p>Explanation: 121 reads as 121 from left to right and from right to left.</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: x = -121</p><p>Output: false</p><p>Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: x = 10</p><p>Output: false</p><p>Explanation: Reads 01 from right to left. Therefore it is not a palindrome.</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>-2^31 &lt;= x &lt;= 2^31 - 1</code></li></ul><p><strong>Follow up:</strong> Could you solve it without converting the integer to a string?</p><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><p>判断一个整数是不是回文数，先将整数转换为字符串。</p><p>然后用对撞指针分别一前一后开始扫描，如果前后的字段相同，则移动指针，否则直接返回 <code>false</code>。</p><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">x</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>boolean<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">isPalindrome</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	x <span class="token operator">=</span> <span class="token string">&#39;&#39;</span> <span class="token operator">+</span> x<span class="token punctuation">;</span>
	<span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> right <span class="token operator">=</span> x<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">===</span> x<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			left<span class="token operator">++</span><span class="token punctuation">;</span>
			right<span class="token operator">--</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,19),y=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),v=t("td",{style:{"text-align":"center"}},"234",-1),w={style:{"text-align":"left"}},E={href:"https://leetcode.com/problems/palindrome-linked-list",target:"_blank",rel:"noopener noreferrer"},q={style:{"text-align":"center"}},C={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0234",target:"_blank",rel:"noopener noreferrer"},N={style:{"text-align":"left"}},I=t("code",null,"栈",-1),L=t("code",null,"递归",-1),V=t("code",null,"链表",-1),j=t("code",null,"1+",-1),B={style:{"text-align":"left"}},F=t("td",{style:{"text-align":"center"}},"2217",-1),O={style:{"text-align":"left"}},R={href:"https://leetcode.com/problems/find-palindrome-with-fixed-length",target:"_blank",rel:"noopener noreferrer"},T=t("td",{style:{"text-align":"center"}},null,-1),H={style:{"text-align":"left"}},M=t("code",null,"数组",-1),G=t("code",null,"数学",-1),K={style:{"text-align":"left"}},P=t("td",{style:{"text-align":"center"}},"2396",-1),S={style:{"text-align":"left"}},z={href:"https://leetcode.com/problems/strictly-palindromic-number",target:"_blank",rel:"noopener noreferrer"},A=t("td",{style:{"text-align":"center"}},null,-1),D={style:{"text-align":"left"}},J=t("code",null,"脑筋急转弯",-1),Q=t("code",null,"数学",-1),U=t("code",null,"双指针",-1),W={style:{"text-align":"left"}},X=t("td",{style:{"text-align":"center"}},"2843",-1),Y={style:{"text-align":"left"}},Z={href:"https://leetcode.com/problems/count-symmetric-integers",target:"_blank",rel:"noopener noreferrer"},$=t("td",{style:{"text-align":"center"}},null,-1),tt={style:{"text-align":"left"}},et=t("code",null,"数学",-1),nt=t("code",null,"枚举",-1),st={style:{"text-align":"left"}},ot=t("td",{style:{"text-align":"center"}},"3260",-1),at={style:{"text-align":"left"}},lt={href:"https://leetcode.com/problems/find-the-largest-palindrome-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},ct=t("td",{style:{"text-align":"center"}},null,-1),it={style:{"text-align":"left"}},rt=t("code",null,"贪心",-1),dt=t("code",null,"数学",-1),pt=t("code",null,"字符串",-1),ut=t("code",null,"2+",-1),_t={style:{"text-align":"left"}},ht=t("td",{style:{"text-align":"center"}},"3272",-1),ft={style:{"text-align":"left"}},mt={href:"https://leetcode.com/problems/find-the-count-of-good-integers",target:"_blank",rel:"noopener noreferrer"},gt=t("td",{style:{"text-align":"center"}},null,-1),kt={style:{"text-align":"left"}},bt=t("code",null,"哈希表",-1),xt=t("code",null,"数学",-1),yt=t("code",null,"组合数学",-1),vt=t("code",null,"1+",-1),wt={style:{"text-align":"left"}};function Et(qt,Ct){const a=c("ExternalLinkIcon"),l=c("font"),o=c("RouterLink");return r(),d("div",null,[t("h1",h,[f,n(),t("a",m,[n("9. 回文数"),e(a)])]),t("p",null,[n("🟢 "),e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1}),n("  🔖  "),e(o,{to:"/leetcode/outline/tag/math.html"},{default:s(()=>[g]),_:1}),n("  🔗 "),t("a",k,[b,e(a)])]),x,p(" prettier-ignore "),t("table",null,[y,t("tbody",null,[t("tr",null,[v,t("td",w,[t("a",E,[n("回文链表"),e(a)])]),t("td",q,[t("a",C,[n("[✓]"),e(a)])]),t("td",N,[e(o,{to:"/leetcode/outline/tag/stack.html"},{default:s(()=>[I]),_:1}),n(),e(o,{to:"/leetcode/outline/tag/recursion.html"},{default:s(()=>[L]),_:1}),n(),e(o,{to:"/leetcode/outline/tag/linked-list.html"},{default:s(()=>[V]),_:1}),n(),j]),t("td",B,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])]),t("tr",null,[F,t("td",O,[t("a",R,[n("找到指定长度的回文数"),e(a)])]),T,t("td",H,[e(o,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[M]),_:1}),n(),e(o,{to:"/leetcode/outline/tag/math.html"},{default:s(()=>[G]),_:1})]),t("td",K,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[P,t("td",S,[t("a",z,[n("严格回文的数字"),e(a)])]),A,t("td",D,[e(o,{to:"/leetcode/outline/tag/brainteaser.html"},{default:s(()=>[J]),_:1}),n(),e(o,{to:"/leetcode/outline/tag/math.html"},{default:s(()=>[Q]),_:1}),n(),e(o,{to:"/leetcode/outline/tag/two-pointers.html"},{default:s(()=>[U]),_:1})]),t("td",W,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[X,t("td",Y,[t("a",Z,[n("统计对称整数的数目"),e(a)])]),$,t("td",tt,[e(o,{to:"/leetcode/outline/tag/math.html"},{default:s(()=>[et]),_:1}),n(),e(o,{to:"/leetcode/outline/tag/enumeration.html"},{default:s(()=>[nt]),_:1})]),t("td",st,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])]),t("tr",null,[ot,t("td",at,[t("a",lt,[n("找出最大的 N 位 K 回文数"),e(a)])]),ct,t("td",it,[e(o,{to:"/leetcode/outline/tag/greedy.html"},{default:s(()=>[rt]),_:1}),n(),e(o,{to:"/leetcode/outline/tag/math.html"},{default:s(()=>[dt]),_:1}),n(),e(o,{to:"/leetcode/outline/tag/string.html"},{default:s(()=>[pt]),_:1}),n(),ut]),t("td",_t,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])]),t("tr",null,[ht,t("td",ft,[t("a",mt,[n("统计好整数的数目"),e(a)])]),gt,t("td",kt,[e(o,{to:"/leetcode/outline/tag/hash-table.html"},{default:s(()=>[bt]),_:1}),n(),e(o,{to:"/leetcode/outline/tag/math.html"},{default:s(()=>[xt]),_:1}),n(),e(o,{to:"/leetcode/outline/tag/combinatorics.html"},{default:s(()=>[yt]),_:1}),n(),vt]),t("td",wt,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])])])])])}const It=i(_,[["render",Et],["__file","0009.html.vue"]]);export{It as default};
