import{_,r as c,o as i,c as a,a as t,d as e,w as l,b as o,f as u}from"./app-mvY9N9Pc.js";const h={},r=t("h1",{id:"单调队列",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#单调队列","aria-hidden":"true"},"#"),o(" 单调队列")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),q=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),H=t("span",{class:"blue"},"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),z=t("code",null,"字符串",-1),M=t("code",null,"字符串匹配",-1),V=t("code",null,"树",-1),j=t("code",null,"二叉树",-1),L=t("code",null,"二叉搜索树",-1),N=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),E=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),O=t("code",null,"强连通分量",-1),R=t("code",null,"欧拉回路",-1),Q=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),F=t("code",null,"树状数组",-1),G=t("code",null,"后缀数组",-1),J=t("p",null,[t("strong",null,"算法")],-1),P=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),qt=t("code",null,"模拟",-1),wt=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),zt=t("code",null,"拒绝采样",-1),Mt=t("code",null,"数据库",-1),Vt=t("code",null,"设计",-1),jt=t("code",null,"数据流",-1),Lt=t("code",null,"脑筋急转弯",-1),Nt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Et=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ot=t("td",{style:{"text-align":"center"}},"239",-1),Rt={style:{"text-align":"left"}},Qt={href:"https://leetcode.com/problems/sliding-window-maximum",target:"_blank",rel:"noopener noreferrer"},Tt={style:{"text-align":"center"}},At={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0239",target:"_blank",rel:"noopener noreferrer"},Dt={style:{"text-align":"left"}},Ft=t("code",null,"队列",-1),Gt=t("code",null,"数组",-1),Jt=t("code",null,"滑动窗口",-1),Pt=t("code",null,"2+",-1),St={style:{"text-align":"left"}},Ut=t("td",{style:{"text-align":"center"}},"683",-1),Wt={style:{"text-align":"left"}},Xt={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},Yt=t("td",{style:{"text-align":"center"}},null,-1),Zt={style:{"text-align":"left"}},$t=t("code",null,"树状数组",-1),te=t("code",null,"线段树",-1),ee=t("code",null,"队列",-1),oe=t("code",null,"5+",-1),le={style:{"text-align":"left"}},ne=t("td",{style:{"text-align":"center"}},"862",-1),de={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k",target:"_blank",rel:"noopener noreferrer"},ce=t("td",{style:{"text-align":"center"}},null,-1),_e={style:{"text-align":"left"}},ie=t("code",null,"队列",-1),ae=t("code",null,"数组",-1),ue=t("code",null,"二分查找",-1),he=t("code",null,"4+",-1),re={style:{"text-align":"left"}},fe=t("td",{style:{"text-align":"center"}},"918",-1),ge={style:{"text-align":"left"}},me={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},ye={style:{"text-align":"center"}},xe={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0918",target:"_blank",rel:"noopener noreferrer"},be={style:{"text-align":"left"}},pe=t("code",null,"队列",-1),ke=t("code",null,"数组",-1),qe=t("code",null,"分治",-1),we=t("code",null,"2+",-1),He={style:{"text-align":"left"}},ve=t("td",{style:{"text-align":"center"}},"1425",-1),Ie={style:{"text-align":"left"}},ze={href:"https://leetcode.com/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},Me=t("td",{style:{"text-align":"center"}},null,-1),Ve={style:{"text-align":"left"}},je=t("code",null,"队列",-1),Le=t("code",null,"数组",-1),Ne=t("code",null,"动态规划",-1),Be=t("code",null,"3+",-1),Ce={style:{"text-align":"left"}},Ee=t("td",{style:{"text-align":"center"}},"1438",-1),Ke={style:{"text-align":"left"}},Oe={href:"https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",target:"_blank",rel:"noopener noreferrer"},Re=t("td",{style:{"text-align":"center"}},null,-1),Qe={style:{"text-align":"left"}},Te=t("code",null,"队列",-1),Ae=t("code",null,"数组",-1),De=t("code",null,"有序集合",-1),Fe=t("code",null,"3+",-1),Ge={style:{"text-align":"left"}},Je=t("td",{style:{"text-align":"center"}},"1499",-1),Pe={style:{"text-align":"left"}},Se={href:"https://leetcode.com/problems/max-value-of-equation",target:"_blank",rel:"noopener noreferrer"},Ue=t("td",{style:{"text-align":"center"}},null,-1),We={style:{"text-align":"left"}},Xe=t("code",null,"队列",-1),Ye=t("code",null,"数组",-1),Ze=t("code",null,"滑动窗口",-1),$e=t("code",null,"2+",-1),to={style:{"text-align":"left"}},eo=t("td",{style:{"text-align":"center"}},"1687",-1),oo={style:{"text-align":"left"}},lo={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},no=t("td",{style:{"text-align":"center"}},null,-1),so={style:{"text-align":"left"}},co=t("code",null,"线段树",-1),_o=t("code",null,"队列",-1),io=t("code",null,"数组",-1),ao=t("code",null,"4+",-1),uo={style:{"text-align":"left"}},ho=t("td",{style:{"text-align":"center"}},"1696",-1),ro={style:{"text-align":"left"}},fo={href:"https://leetcode.com/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},go=t("td",{style:{"text-align":"center"}},null,-1),mo={style:{"text-align":"left"}},yo=t("code",null,"队列",-1),xo=t("code",null,"数组",-1),bo=t("code",null,"动态规划",-1),po=t("code",null,"2+",-1),ko={style:{"text-align":"left"}},qo=t("td",{style:{"text-align":"center"}},"2071",-1),wo={style:{"text-align":"left"}},Ho={href:"https://leetcode.com/problems/maximum-number-of-tasks-you-can-assign",target:"_blank",rel:"noopener noreferrer"},vo=t("td",{style:{"text-align":"center"}},null,-1),Io={style:{"text-align":"left"}},zo=t("code",null,"贪心",-1),Mo=t("code",null,"队列",-1),Vo=t("code",null,"数组",-1),jo=t("code",null,"3+",-1),Lo={style:{"text-align":"left"}},No=t("td",{style:{"text-align":"center"}},"2398",-1),Bo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/maximum-number-of-robots-within-budget",target:"_blank",rel:"noopener noreferrer"},Eo=t("td",{style:{"text-align":"center"}},null,-1),Ko={style:{"text-align":"left"}},Oo=t("code",null,"队列",-1),Ro=t("code",null,"数组",-1),Qo=t("code",null,"二分查找",-1),To=t("code",null,"4+",-1),Ao={style:{"text-align":"left"}},Do=t("td",{style:{"text-align":"center"}},"2407",-1),Fo={style:{"text-align":"left"}},Go={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},Jo=t("td",{style:{"text-align":"center"}},null,-1),Po={style:{"text-align":"left"}},So=t("code",null,"树状数组",-1),Uo=t("code",null,"线段树",-1),Wo=t("code",null,"队列",-1),Xo=t("code",null,"4+",-1),Yo={style:{"text-align":"left"}},Zo=t("td",{style:{"text-align":"center"}},"2444",-1),$o={style:{"text-align":"left"}},tl={href:"https://leetcode.com/problems/count-subarrays-with-fixed-bounds",target:"_blank",rel:"noopener noreferrer"},el=t("td",{style:{"text-align":"center"}},null,-1),ol={style:{"text-align":"left"}},ll=t("code",null,"队列",-1),nl=t("code",null,"数组",-1),dl=t("code",null,"滑动窗口",-1),sl=t("code",null,"1+",-1),cl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"2762",-1),il={style:{"text-align":"left"}},al={href:"https://leetcode.com/problems/continuous-subarrays",target:"_blank",rel:"noopener noreferrer"},ul=t("td",{style:{"text-align":"center"}},null,-1),hl={style:{"text-align":"left"}},rl=t("code",null,"队列",-1),fl=t("code",null,"数组",-1),gl=t("code",null,"有序集合",-1),ml=t("code",null,"3+",-1),yl={style:{"text-align":"left"}},xl=t("td",{style:{"text-align":"center"}},"2944",-1),bl={style:{"text-align":"left"}},pl={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},kl=t("td",{style:{"text-align":"center"}},null,-1),ql={style:{"text-align":"left"}},wl=t("code",null,"队列",-1),Hl=t("code",null,"数组",-1),vl=t("code",null,"动态规划",-1),Il=t("code",null,"2+",-1),zl={style:{"text-align":"left"}},Ml=t("td",{style:{"text-align":"center"}},"2945",-1),Vl={style:{"text-align":"left"}},jl={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},Ll=t("td",{style:{"text-align":"center"}},null,-1),Nl={style:{"text-align":"left"}},Bl=t("code",null,"栈",-1),Cl=t("code",null,"队列",-1),El=t("code",null,"数组",-1),Kl=t("code",null,"4+",-1),Ol={style:{"text-align":"left"}},Rl=t("td",{style:{"text-align":"center"}},"2969",-1),Ql={style:{"text-align":"left"}},Tl={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},Al=t("td",{style:{"text-align":"center"}},null,-1),Dl={style:{"text-align":"left"}},Fl=t("code",null,"队列",-1),Gl=t("code",null,"数组",-1),Jl=t("code",null,"动态规划",-1),Pl=t("code",null,"2+",-1),Sl={style:{"text-align":"left"}},Ul=t("td",{style:{"text-align":"center"}},"剑指 Offer 59 - I",-1),Wl={style:{"text-align":"left"}},Xl={href:"https://leetcode.cn/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},Yl=t("td",{style:{"text-align":"center"}},null,-1),Zl={style:{"text-align":"left"}},$l=t("code",null,"队列",-1),tn=t("code",null,"数组",-1),en=t("code",null,"滑动窗口",-1),on=t("code",null,"2+",-1),ln={style:{"text-align":"left"}},nn=t("td",{style:{"text-align":"center"}},"剑指 Offer 59 - II",-1),dn={style:{"text-align":"left"}},sn={href:"https://leetcode.cn/problems/dui-lie-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},cn=t("td",{style:{"text-align":"center"}},null,-1),_n={style:{"text-align":"left"}},an=t("code",null,"设计",-1),un=t("code",null,"队列",-1),hn=t("code",null,"单调队列",-1),rn={style:{"text-align":"left"}};function fn(gn,mn){const n=c("RouterLink"),d=c("ExternalLinkIcon"),s=c("font");return i(),a("div",null,[r,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[w]),_:1}),o(),H,o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[G]),_:1})]),J,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[Bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Ct]),_:1})])]),Et,u(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Ot,t("td",Rt,[t("a",Qt,[o("滑动窗口最大值"),e(d)])]),t("td",Tt,[t("a",At,[o("[✓]"),e(d)])]),t("td",Dt,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[Jt]),_:1}),o(),Pt]),t("td",St,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ut,t("td",Wt,[t("a",Xt,[o("K 个关闭的灯泡"),e(d)])]),Yt,t("td",Zt,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[te]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[ee]),_:1}),o(),oe]),t("td",le,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ne,t("td",de,[t("a",se,[o("和至少为 K 的最短子数组"),e(d)])]),ce,t("td",_e,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[ie]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[ue]),_:1}),o(),he]),t("td",re,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[fe,t("td",ge,[t("a",me,[o("环形子数组的最大和"),e(d)])]),t("td",ye,[t("a",xe,[o("[✓]"),e(d)])]),t("td",be,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[pe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ke]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[qe]),_:1}),o(),we]),t("td",He,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ve,t("td",Ie,[t("a",ze,[o("带限制的子序列和"),e(d)])]),Me,t("td",Ve,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[je]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Le]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ne]),_:1}),o(),Be]),t("td",Ce,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ee,t("td",Ke,[t("a",Oe,[o("绝对差不超过限制的最长连续子数组"),e(d)])]),Re,t("td",Qe,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Te]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ae]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[De]),_:1}),o(),Fe]),t("td",Ge,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Je,t("td",Pe,[t("a",Se,[o("满足不等式的最大值"),e(d)])]),Ue,t("td",We,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Xe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ye]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[Ze]),_:1}),o(),$e]),t("td",to,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[eo,t("td",oo,[t("a",lo,[o("从仓库到码头运输箱子"),e(d)])]),no,t("td",so,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[co]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[_o]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[io]),_:1}),o(),ao]),t("td",uo,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ho,t("td",ro,[t("a",fo,[o("跳跃游戏 VI"),e(d)])]),go,t("td",mo,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[yo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[xo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[bo]),_:1}),o(),po]),t("td",ko,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qo,t("td",wo,[t("a",Ho,[o("你可以安排的最多任务数目"),e(d)])]),vo,t("td",Io,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[zo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Mo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Vo]),_:1}),o(),jo]),t("td",Lo,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[No,t("td",Bo,[t("a",Co,[o("预算内的最多机器人数目"),e(d)])]),Eo,t("td",Ko,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Oo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ro]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Qo]),_:1}),o(),To]),t("td",Ao,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Do,t("td",Fo,[t("a",Go,[o("最长递增子序列 II"),e(d)])]),Jo,t("td",Po,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[So]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Uo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Wo]),_:1}),o(),Xo]),t("td",Yo,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Zo,t("td",$o,[t("a",tl,[o("统计定界子数组的数目"),e(d)])]),el,t("td",ol,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[ll]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[nl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[dl]),_:1}),o(),sl]),t("td",cl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_l,t("td",il,[t("a",al,[o("不间断子数组"),e(d)])]),ul,t("td",hl,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[rl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[fl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[gl]),_:1}),o(),ml]),t("td",yl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xl,t("td",bl,[t("a",pl,[o("购买水果需要的最少金币数"),e(d)])]),kl,t("td",ql,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[wl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Hl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[vl]),_:1}),o(),Il]),t("td",zl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ml,t("td",Vl,[t("a",jl,[o("找到最大非递减数组的长度"),e(d)])]),Ll,t("td",Nl,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Bl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Cl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[El]),_:1}),o(),Kl]),t("td",Ol,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Rl,t("td",Ql,[t("a",Tl,[o("购买水果需要的最少金币数 II"),e(d)])]),Al,t("td",Dl,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Fl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Gl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Jl]),_:1}),o(),Pl]),t("td",Sl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ul,t("td",Wl,[t("a",Xl,[o("滑动窗口的最大值"),e(d)])]),Yl,t("td",Zl,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[$l]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[tn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[en]),_:1}),o(),on]),t("td",ln,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[nn,t("td",dn,[t("a",sn,[o("队列的最大值"),e(d)])]),cn,t("td",_n,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[an]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[un]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[hn]),_:1})]),t("td",rn,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const xn=_(h,[["render",fn],["__file","monotonic-queue.html.vue"]]);export{xn as default};
