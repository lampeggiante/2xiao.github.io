import{_,r as c,o as i,c as a,a as t,d as e,w as l,b as o,f as u}from"./app-mvY9N9Pc.js";const h={},r=t("h1",{id:"快速选择",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#快速选择","aria-hidden":"true"},"#"),o(" 快速选择")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),q=t("code",null,"单调栈",-1),v=t("code",null,"队列",-1),M=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),K=t("code",null,"字符串",-1),j=t("code",null,"字符串匹配",-1),E=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),N=t("code",null,"二叉搜索树",-1),V=t("code",null,"最小生成树",-1),z=t("code",null,"图",-1),B=t("code",null,"有序集合",-1),C=t("code",null,"拓扑排序",-1),O=t("code",null,"最短路",-1),R=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),D=t("code",null,"并查集",-1),F=t("code",null,"字典树",-1),G=t("code",null,"线段树",-1),H=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),P=t("p",null,[t("strong",null,"算法")],-1),Q=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("span",{class:"blue"},"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),qt=t("code",null,"模拟",-1),vt=t("code",null,"组合数学",-1),Mt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),Kt=t("code",null,"拒绝采样",-1),jt=t("code",null,"数据库",-1),Et=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Nt=t("code",null,"脑筋急转弯",-1),Vt=t("code",null,"交互",-1),zt=t("code",null,"迭代器",-1),Bt=t("code",null,"多线程",-1),Ct=t("hr",null,null,-1),Ot=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Rt=t("td",{style:{"text-align":"center"}},"215",-1),Tt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/kth-largest-element-in-an-array",target:"_blank",rel:"noopener noreferrer"},Dt={style:{"text-align":"center"}},Ft={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0215",target:"_blank",rel:"noopener noreferrer"},Gt={style:{"text-align":"left"}},Ht=t("code",null,"数组",-1),Jt=t("code",null,"分治",-1),Pt=t("code",null,"快速选择",-1),Qt=t("code",null,"2+",-1),St={style:{"text-align":"left"}},Ut=t("td",{style:{"text-align":"center"}},"324",-1),Wt={style:{"text-align":"left"}},Xt={href:"https://leetcode.com/problems/wiggle-sort-ii",target:"_blank",rel:"noopener noreferrer"},Yt=t("td",{style:{"text-align":"center"}},null,-1),Zt={style:{"text-align":"left"}},$t=t("code",null,"贪心",-1),te=t("code",null,"数组",-1),ee=t("code",null,"分治",-1),oe=t("code",null,"2+",-1),le={style:{"text-align":"left"}},ne=t("td",{style:{"text-align":"center"}},"347",-1),de={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/top-k-frequent-elements",target:"_blank",rel:"noopener noreferrer"},ce={style:{"text-align":"center"}},_e={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0347",target:"_blank",rel:"noopener noreferrer"},ie={style:{"text-align":"left"}},ae=t("code",null,"数组",-1),ue=t("code",null,"哈希表",-1),he=t("code",null,"分治",-1),re=t("code",null,"5+",-1),fe={style:{"text-align":"left"}},ge=t("td",{style:{"text-align":"center"}},"973",-1),me={style:{"text-align":"left"}},ye={href:"https://leetcode.com/problems/k-closest-points-to-origin",target:"_blank",rel:"noopener noreferrer"},xe={style:{"text-align":"center"}},pe={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0973",target:"_blank",rel:"noopener noreferrer"},be={style:{"text-align":"left"}},ke=t("code",null,"几何",-1),qe=t("code",null,"数组",-1),ve=t("code",null,"数学",-1),Me=t("code",null,"4+",-1),Ie={style:{"text-align":"left"}},we=t("td",{style:{"text-align":"center"}},"1738",-1),Ke={style:{"text-align":"left"}},je={href:"https://leetcode.com/problems/find-kth-largest-xor-coordinate-value",target:"_blank",rel:"noopener noreferrer"},Ee=t("td",{style:{"text-align":"center"}},null,-1),Le={style:{"text-align":"left"}},Ne=t("code",null,"位运算",-1),Ve=t("code",null,"数组",-1),ze=t("code",null,"分治",-1),Be=t("code",null,"5+",-1),Ce={style:{"text-align":"left"}},Oe=t("td",{style:{"text-align":"center"}},"1985",-1),Re={style:{"text-align":"left"}},Te={href:"https://leetcode.com/problems/find-the-kth-largest-integer-in-the-array",target:"_blank",rel:"noopener noreferrer"},Ae=t("td",{style:{"text-align":"center"}},null,-1),De={style:{"text-align":"left"}},Fe=t("code",null,"数组",-1),Ge=t("code",null,"字符串",-1),He=t("code",null,"分治",-1),Je=t("code",null,"3+",-1),Pe={style:{"text-align":"left"}},Qe=t("td",{style:{"text-align":"center"}},"2343",-1),Se={style:{"text-align":"left"}},Ue={href:"https://leetcode.com/problems/query-kth-smallest-trimmed-number",target:"_blank",rel:"noopener noreferrer"},We=t("td",{style:{"text-align":"center"}},null,-1),Xe={style:{"text-align":"left"}},Ye=t("code",null,"数组",-1),Ze=t("code",null,"字符串",-1),$e=t("code",null,"分治",-1),to=t("code",null,"4+",-1),eo={style:{"text-align":"left"}},oo=t("td",{style:{"text-align":"center"}},"剑指 Offer 40",-1),lo={style:{"text-align":"left"}},no={href:"https://leetcode.cn/problems/zui-xiao-de-kge-shu-lcof",target:"_blank",rel:"noopener noreferrer"},so=t("td",{style:{"text-align":"center"}},null,-1),co={style:{"text-align":"left"}},_o=t("code",null,"数组",-1),io=t("code",null,"分治",-1),ao=t("code",null,"快速选择",-1),uo=t("code",null,"2+",-1),ho={style:{"text-align":"left"}},ro=t("td",{style:{"text-align":"center"}},"剑指 Offer II 60",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.cn/problems/g5c51o",target:"_blank",rel:"noopener noreferrer"},mo=t("td",{style:{"text-align":"center"}},null,-1),yo={style:{"text-align":"left"}},xo=t("code",null,"数组",-1),po=t("code",null,"哈希表",-1),bo=t("code",null,"分治",-1),ko=t("code",null,"5+",-1),qo={style:{"text-align":"left"}},vo=t("td",{style:{"text-align":"center"}},"剑指 Offer II 76",-1),Mo={style:{"text-align":"left"}},Io={href:"https://leetcode.cn/problems/xx4gT2",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},null,-1),Ko={style:{"text-align":"left"}},jo=t("code",null,"数组",-1),Eo=t("code",null,"分治",-1),Lo=t("code",null,"快速选择",-1),No=t("code",null,"2+",-1),Vo={style:{"text-align":"left"}},zo=t("td",{style:{"text-align":"center"}},"面试题 17.14",-1),Bo={style:{"text-align":"left"}},Co={href:"https://leetcode.cn/problems/smallest-k-lcci",target:"_blank",rel:"noopener noreferrer"},Oo=t("td",{style:{"text-align":"center"}},null,-1),Ro={style:{"text-align":"left"}},To=t("code",null,"数组",-1),Ao=t("code",null,"分治",-1),Do=t("code",null,"快速选择",-1),Fo=t("code",null,"2+",-1),Go={style:{"text-align":"left"}};function Ho(Jo,Po){const n=c("RouterLink"),d=c("ExternalLinkIcon"),s=c("font");return i(),a("div",null,[r,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[J]),_:1})]),P,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),lt,o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[Kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Bt]),_:1})])]),Ct,u(" prettier-ignore "),t("table",null,[Ot,t("tbody",null,[t("tr",null,[Rt,t("td",Tt,[t("a",At,[o("数组中的第K个最大元素"),e(d)])]),t("td",Dt,[t("a",Ft,[o("[✓]"),e(d)])]),t("td",Gt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[Pt]),_:1}),o(),Qt]),t("td",St,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ut,t("td",Wt,[t("a",Xt,[o("摆动排序 II"),e(d)])]),Yt,t("td",Zt,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[te]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[ee]),_:1}),o(),oe]),t("td",le,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ne,t("td",de,[t("a",se,[o("前 K 个高频元素"),e(d)])]),t("td",ce,[t("a",_e,[o("[✓]"),e(d)])]),t("td",ie,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ue]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[he]),_:1}),o(),re]),t("td",fe,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ge,t("td",me,[t("a",ye,[o("最接近原点的 K 个点"),e(d)])]),t("td",xe,[t("a",pe,[o("[✓]"),e(d)])]),t("td",be,[e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[ke]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[qe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[ve]),_:1}),o(),Me]),t("td",Ie,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[we,t("td",Ke,[t("a",je,[o("找出第 K 大的异或坐标值"),e(d)])]),Ee,t("td",Le,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Ne]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ve]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[ze]),_:1}),o(),Be]),t("td",Ce,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Oe,t("td",Re,[t("a",Te,[o("找出数组中的第 K 大整数"),e(d)])]),Ae,t("td",De,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Fe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ge]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[He]),_:1}),o(),Je]),t("td",Pe,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Qe,t("td",Se,[t("a",Ue,[o("裁剪数字后查询第 K 小的数字"),e(d)])]),We,t("td",Xe,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ye]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ze]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[$e]),_:1}),o(),to]),t("td",eo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[oo,t("td",lo,[t("a",no,[o("最小的k个数"),e(d)])]),so,t("td",co,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[_o]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[io]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[ao]),_:1}),o(),uo]),t("td",ho,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ro,t("td",fo,[t("a",go,[o("出现频率最高的 k 个数字"),e(d)])]),mo,t("td",yo,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[xo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[po]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[bo]),_:1}),o(),ko]),t("td",qo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[vo,t("td",Mo,[t("a",Io,[o("数组中的第 k 大的数字"),e(d)])]),wo,t("td",Ko,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[jo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Eo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[Lo]),_:1}),o(),No]),t("td",Vo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zo,t("td",Bo,[t("a",Co,[o("最小K个数"),e(d)])]),Oo,t("td",Ro,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[To]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Ao]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[Do]),_:1}),o(),Fo]),t("td",Go,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const So=_(h,[["render",Ho],["__file","quickselect.html.vue"]]);export{So as default};
