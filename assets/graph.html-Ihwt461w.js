import{_ as c,r as _,o as i,c as a,a as t,d as e,w as o,b as l,f as r}from"./app-GnK0vSxb.js";const h={},u=t("h1",{id:"图",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#图","aria-hidden":"true"},"#"),l(" 图")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),p=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),H=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),L=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),P=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),E=t("code",null,"最小生成树",-1),O=t("span",{class:"blue"},"图",-1),j=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),D=t("code",null,"最短路",-1),J=t("code",null,"强连通分量",-1),K=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),B=t("code",null,"并查集",-1),N=t("code",null,"字典树",-1),T=t("code",null,"线段树",-1),F=t("code",null,"树状数组",-1),W=t("code",null,"后缀数组",-1),Q=t("p",null,[t("strong",null,"算法")],-1),R=t("code",null,"枚举",-1),U=t("code",null,"递归",-1),X=t("code",null,"分治",-1),Z=t("code",null,"回溯",-1),G=t("code",null,"贪心",-1),S=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),pt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Ht=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Lt=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Pt=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),Et=t("code",null,"交互",-1),Ot=t("code",null,"迭代器",-1),jt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Dt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Jt=t("td",{style:{"text-align":"center"}},"133",-1),Kt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/clone-graph",target:"_blank",rel:"noopener noreferrer"},Bt={style:{"text-align":"center"}},Nt={style:{"text-align":"left"}},Tt=t("code",null,"深度优先搜索",-1),Ft=t("code",null,"广度优先搜索",-1),Wt=t("code",null,"图",-1),Qt=t("code",null,"1+",-1),Rt={style:{"text-align":"left"}},Ut=t("td",{style:{"text-align":"center"}},"207",-1),Xt={style:{"text-align":"left"}},Zt={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},Gt={style:{"text-align":"center"}},St={style:{"text-align":"left"}},Yt=t("code",null,"深度优先搜索",-1),$t=t("code",null,"广度优先搜索",-1),te=t("code",null,"图",-1),ee=t("code",null,"1+",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"210",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},de={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},ce=t("code",null,"深度优先搜索",-1),ie=t("code",null,"广度优先搜索",-1),ae=t("code",null,"图",-1),re=t("code",null,"1+",-1),he={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"261",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},me=t("td",{style:{"text-align":"center"}},null,-1),ye={style:{"text-align":"left"}},pe=t("code",null,"深度优先搜索",-1),xe=t("code",null,"广度优先搜索",-1),be=t("code",null,"并查集",-1),ke=t("code",null,"1+",-1),He={style:{"text-align":"left"}},Me=t("td",{style:{"text-align":"center"}},"269",-1),Ie={style:{"text-align":"left"}},we={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},ve=t("td",{style:{"text-align":"center"}},null,-1),qe={style:{"text-align":"left"}},Le=t("code",null,"深度优先搜索",-1),ze=t("code",null,"广度优先搜索",-1),Pe=t("code",null,"图",-1),Ce=t("code",null,"3+",-1),Ee={style:{"text-align":"left"}},Oe=t("td",{style:{"text-align":"center"}},"277",-1),je={style:{"text-align":"left"}},Ve={href:"https://leetcode.com/problems/find-the-celebrity",target:"_blank",rel:"noopener noreferrer"},De=t("td",{style:{"text-align":"center"}},null,-1),Je={style:{"text-align":"left"}},Ke=t("code",null,"图",-1),Ae=t("code",null,"双指针",-1),Be=t("code",null,"交互",-1),Ne={style:{"text-align":"left"}},Te=t("td",{style:{"text-align":"center"}},"310",-1),Fe={style:{"text-align":"left"}},We={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},Qe=t("td",{style:{"text-align":"center"}},null,-1),Re={style:{"text-align":"left"}},Ue=t("code",null,"深度优先搜索",-1),Xe=t("code",null,"广度优先搜索",-1),Ze=t("code",null,"图",-1),Ge=t("code",null,"1+",-1),Se={style:{"text-align":"left"}},Ye=t("td",{style:{"text-align":"center"}},"323",-1),$e={style:{"text-align":"left"}},tl={href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},el=t("td",{style:{"text-align":"center"}},null,-1),ll={style:{"text-align":"left"}},ol=t("code",null,"深度优先搜索",-1),nl=t("code",null,"广度优先搜索",-1),sl=t("code",null,"并查集",-1),dl=t("code",null,"1+",-1),_l={style:{"text-align":"left"}},cl=t("td",{style:{"text-align":"center"}},"329",-1),il={style:{"text-align":"left"}},al={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},rl=t("td",{style:{"text-align":"center"}},null,-1),hl={style:{"text-align":"left"}},ul=t("code",null,"深度优先搜索",-1),fl=t("code",null,"广度优先搜索",-1),gl=t("code",null,"图",-1),ml=t("code",null,"5+",-1),yl={style:{"text-align":"left"}},pl=t("td",{style:{"text-align":"center"}},"332",-1),xl={style:{"text-align":"left"}},bl={href:"https://leetcode.com/problems/reconstruct-itinerary",target:"_blank",rel:"noopener noreferrer"},kl=t("td",{style:{"text-align":"center"}},null,-1),Hl={style:{"text-align":"left"}},Ml=t("code",null,"深度优先搜索",-1),Il=t("code",null,"图",-1),wl=t("code",null,"欧拉回路",-1),vl={style:{"text-align":"left"}},ql=t("td",{style:{"text-align":"center"}},"399",-1),Ll={style:{"text-align":"left"}},zl={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},Pl={style:{"text-align":"center"}},Cl={style:{"text-align":"left"}},El=t("code",null,"深度优先搜索",-1),Ol=t("code",null,"广度优先搜索",-1),jl=t("code",null,"并查集",-1),Vl=t("code",null,"4+",-1),Dl={style:{"text-align":"left"}},Jl=t("td",{style:{"text-align":"center"}},"444",-1),Kl={style:{"text-align":"left"}},Al={href:"https://leetcode.com/problems/sequence-reconstruction",target:"_blank",rel:"noopener noreferrer"},Bl=t("td",{style:{"text-align":"center"}},null,-1),Nl={style:{"text-align":"left"}},Tl=t("code",null,"图",-1),Fl=t("code",null,"拓扑排序",-1),Wl=t("code",null,"数组",-1),Ql={style:{"text-align":"left"}},Rl=t("td",{style:{"text-align":"center"}},"499",-1),Ul={style:{"text-align":"left"}},Xl={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},Zl=t("td",{style:{"text-align":"center"}},null,-1),Gl={style:{"text-align":"left"}},Sl=t("code",null,"深度优先搜索",-1),Yl=t("code",null,"广度优先搜索",-1),$l=t("code",null,"图",-1),to=t("code",null,"5+",-1),eo={style:{"text-align":"left"}},lo=t("td",{style:{"text-align":"center"}},"505",-1),oo={style:{"text-align":"left"}},no={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},so=t("td",{style:{"text-align":"center"}},null,-1),_o={style:{"text-align":"left"}},co=t("code",null,"深度优先搜索",-1),io=t("code",null,"广度优先搜索",-1),ao=t("code",null,"图",-1),ro=t("code",null,"4+",-1),ho={style:{"text-align":"left"}},uo=t("td",{style:{"text-align":"center"}},"547",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},mo=t("td",{style:{"text-align":"center"}},null,-1),yo={style:{"text-align":"left"}},po=t("code",null,"深度优先搜索",-1),xo=t("code",null,"广度优先搜索",-1),bo=t("code",null,"并查集",-1),ko=t("code",null,"1+",-1),Ho={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"center"}},"631",-1),Io={style:{"text-align":"left"}},wo={href:"https://leetcode.com/problems/design-excel-sum-formula",target:"_blank",rel:"noopener noreferrer"},vo=t("td",{style:{"text-align":"center"}},null,-1),qo={style:{"text-align":"left"}},Lo=t("code",null,"图",-1),zo=t("code",null,"设计",-1),Po=t("code",null,"拓扑排序",-1),Co=t("code",null,"2+",-1),Eo={style:{"text-align":"left"}},Oo=t("td",{style:{"text-align":"center"}},"684",-1),jo={style:{"text-align":"left"}},Vo={href:"https://leetcode.com/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},Do=t("td",{style:{"text-align":"center"}},null,-1),Jo={style:{"text-align":"left"}},Ko=t("code",null,"深度优先搜索",-1),Ao=t("code",null,"广度优先搜索",-1),Bo=t("code",null,"并查集",-1),No=t("code",null,"1+",-1),To={style:{"text-align":"left"}},Fo=t("td",{style:{"text-align":"center"}},"685",-1),Wo={style:{"text-align":"left"}},Qo={href:"https://leetcode.com/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},Ro=t("td",{style:{"text-align":"center"}},null,-1),Uo={style:{"text-align":"left"}},Xo=t("code",null,"深度优先搜索",-1),Zo=t("code",null,"广度优先搜索",-1),Go=t("code",null,"并查集",-1),So=t("code",null,"1+",-1),Yo={style:{"text-align":"left"}},$o=t("td",{style:{"text-align":"center"}},"743",-1),tn={style:{"text-align":"left"}},en={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},ln=t("td",{style:{"text-align":"center"}},null,-1),on={style:{"text-align":"left"}},nn=t("code",null,"深度优先搜索",-1),sn=t("code",null,"广度优先搜索",-1),dn=t("code",null,"图",-1),_n=t("code",null,"2+",-1),cn={style:{"text-align":"left"}},an=t("td",{style:{"text-align":"center"}},"753",-1),rn={style:{"text-align":"left"}},hn={href:"https://leetcode.com/problems/cracking-the-safe",target:"_blank",rel:"noopener noreferrer"},un=t("td",{style:{"text-align":"center"}},null,-1),fn={style:{"text-align":"left"}},gn=t("code",null,"深度优先搜索",-1),mn=t("code",null,"图",-1),yn=t("code",null,"欧拉回路",-1),pn={style:{"text-align":"left"}},xn=t("td",{style:{"text-align":"center"}},"765",-1),bn={style:{"text-align":"left"}},kn={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},Hn=t("td",{style:{"text-align":"center"}},null,-1),Mn={style:{"text-align":"left"}},In=t("code",null,"贪心",-1),wn=t("code",null,"深度优先搜索",-1),vn=t("code",null,"广度优先搜索",-1),qn=t("code",null,"2+",-1),Ln={style:{"text-align":"left"}},zn=t("td",{style:{"text-align":"center"}},"785",-1),Pn={style:{"text-align":"left"}},Cn={href:"https://leetcode.com/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},En=t("td",{style:{"text-align":"center"}},null,-1),On={style:{"text-align":"left"}},jn=t("code",null,"深度优先搜索",-1),Vn=t("code",null,"广度优先搜索",-1),Dn=t("code",null,"并查集",-1),Jn=t("code",null,"1+",-1),Kn={style:{"text-align":"left"}},An=t("td",{style:{"text-align":"center"}},"787",-1),Bn={style:{"text-align":"left"}},Nn={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},Tn=t("td",{style:{"text-align":"center"}},null,-1),Fn={style:{"text-align":"left"}},Wn=t("code",null,"深度优先搜索",-1),Qn=t("code",null,"广度优先搜索",-1),Rn=t("code",null,"图",-1),Un=t("code",null,"3+",-1),Xn={style:{"text-align":"left"}},Zn=t("td",{style:{"text-align":"center"}},"797",-1),Gn={style:{"text-align":"left"}},Sn={href:"https://leetcode.com/problems/all-paths-from-source-to-target",target:"_blank",rel:"noopener noreferrer"},Yn=t("td",{style:{"text-align":"center"}},null,-1),$n={style:{"text-align":"left"}},ts=t("code",null,"深度优先搜索",-1),es=t("code",null,"广度优先搜索",-1),ls=t("code",null,"图",-1),os=t("code",null,"1+",-1),ns={style:{"text-align":"left"}},ss=t("td",{style:{"text-align":"center"}},"802",-1),ds={style:{"text-align":"left"}},_s={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},cs=t("td",{style:{"text-align":"center"}},null,-1),is={style:{"text-align":"left"}},as=t("code",null,"深度优先搜索",-1),rs=t("code",null,"广度优先搜索",-1),hs=t("code",null,"图",-1),us=t("code",null,"1+",-1),fs={style:{"text-align":"left"}},gs=t("td",{style:{"text-align":"center"}},"834",-1),ms={style:{"text-align":"left"}},ys={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},ps=t("td",{style:{"text-align":"center"}},null,-1),xs={style:{"text-align":"left"}},bs=t("code",null,"树",-1),ks=t("code",null,"深度优先搜索",-1),Hs=t("code",null,"图",-1),Ms=t("code",null,"1+",-1),Is={style:{"text-align":"left"}},ws=t("td",{style:{"text-align":"center"}},"841",-1),vs={style:{"text-align":"left"}},qs={href:"https://leetcode.com/problems/keys-and-rooms",target:"_blank",rel:"noopener noreferrer"},Ls=t("td",{style:{"text-align":"center"}},null,-1),zs={style:{"text-align":"left"}},Ps=t("code",null,"深度优先搜索",-1),Cs=t("code",null,"广度优先搜索",-1),Es=t("code",null,"图",-1),Os={style:{"text-align":"left"}},js=t("td",{style:{"text-align":"center"}},"847",-1),Vs={style:{"text-align":"left"}},Ds={href:"https://leetcode.com/problems/shortest-path-visiting-all-nodes",target:"_blank",rel:"noopener noreferrer"},Js=t("td",{style:{"text-align":"center"}},null,-1),Ks={style:{"text-align":"left"}},As=t("code",null,"位运算",-1),Bs=t("code",null,"广度优先搜索",-1),Ns=t("code",null,"图",-1),Ts=t("code",null,"2+",-1),Fs={style:{"text-align":"left"}},Ws=t("td",{style:{"text-align":"center"}},"851",-1),Qs={style:{"text-align":"left"}},Rs={href:"https://leetcode.com/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},Us=t("td",{style:{"text-align":"center"}},null,-1),Xs={style:{"text-align":"left"}},Zs=t("code",null,"深度优先搜索",-1),Gs=t("code",null,"图",-1),Ss=t("code",null,"拓扑排序",-1),Ys=t("code",null,"1+",-1),$s={style:{"text-align":"left"}},td=t("td",{style:{"text-align":"center"}},"882",-1),ed={style:{"text-align":"left"}},ld={href:"https://leetcode.com/problems/reachable-nodes-in-subdivided-graph",target:"_blank",rel:"noopener noreferrer"},od=t("td",{style:{"text-align":"center"}},null,-1),nd={style:{"text-align":"left"}},sd=t("code",null,"图",-1),dd=t("code",null,"最短路",-1),_d=t("code",null,"堆（优先队列）",-1),cd={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"886",-1),ad={style:{"text-align":"left"}},rd={href:"https://leetcode.com/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},hd=t("td",{style:{"text-align":"center"}},null,-1),ud={style:{"text-align":"left"}},fd=t("code",null,"深度优先搜索",-1),gd=t("code",null,"广度优先搜索",-1),md=t("code",null,"并查集",-1),yd=t("code",null,"1+",-1),pd={style:{"text-align":"left"}},xd=t("td",{style:{"text-align":"center"}},"913",-1),bd={style:{"text-align":"left"}},kd={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},Hd=t("td",{style:{"text-align":"center"}},null,-1),Md={style:{"text-align":"left"}},Id=t("code",null,"图",-1),wd=t("code",null,"拓扑排序",-1),vd=t("code",null,"记忆化搜索",-1),qd=t("code",null,"3+",-1),Ld={style:{"text-align":"left"}},zd=t("td",{style:{"text-align":"center"}},"924",-1),Pd={style:{"text-align":"left"}},Cd={href:"https://leetcode.com/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},Ed=t("td",{style:{"text-align":"center"}},null,-1),Od={style:{"text-align":"left"}},jd=t("code",null,"深度优先搜索",-1),Vd=t("code",null,"广度优先搜索",-1),Dd=t("code",null,"并查集",-1),Jd=t("code",null,"3+",-1),Kd={style:{"text-align":"left"}},Ad=t("td",{style:{"text-align":"center"}},"928",-1),Bd={style:{"text-align":"left"}},Nd={href:"https://leetcode.com/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},Td=t("td",{style:{"text-align":"center"}},null,-1),Fd={style:{"text-align":"left"}},Wd=t("code",null,"深度优先搜索",-1),Qd=t("code",null,"广度优先搜索",-1),Rd=t("code",null,"并查集",-1),Ud=t("code",null,"3+",-1),Xd={style:{"text-align":"left"}},Zd=t("td",{style:{"text-align":"center"}},"947",-1),Gd={style:{"text-align":"left"}},Sd={href:"https://leetcode.com/problems/most-stones-removed-with-same-row-or-column",target:"_blank",rel:"noopener noreferrer"},Yd=t("td",{style:{"text-align":"center"}},null,-1),$d={style:{"text-align":"left"}},t_=t("code",null,"深度优先搜索",-1),e_=t("code",null,"并查集",-1),l_=t("code",null,"图",-1),o_=t("code",null,"1+",-1),n_={style:{"text-align":"left"}},s_=t("td",{style:{"text-align":"center"}},"990",-1),d_={style:{"text-align":"left"}},__={href:"https://leetcode.com/problems/satisfiability-of-equality-equations",target:"_blank",rel:"noopener noreferrer"},c_=t("td",{style:{"text-align":"center"}},null,-1),i_={style:{"text-align":"left"}},a_=t("code",null,"并查集",-1),r_=t("code",null,"图",-1),h_=t("code",null,"数组",-1),u_=t("code",null,"1+",-1),f_={style:{"text-align":"left"}},g_=t("td",{style:{"text-align":"center"}},"997",-1),m_={style:{"text-align":"left"}},y_={href:"https://leetcode.com/problems/find-the-town-judge",target:"_blank",rel:"noopener noreferrer"},p_=t("td",{style:{"text-align":"center"}},null,-1),x_={style:{"text-align":"left"}},b_=t("code",null,"图",-1),k_=t("code",null,"数组",-1),H_=t("code",null,"哈希表",-1),M_={style:{"text-align":"left"}},I_=t("td",{style:{"text-align":"center"}},"1042",-1),w_={style:{"text-align":"left"}},v_={href:"https://leetcode.com/problems/flower-planting-with-no-adjacent",target:"_blank",rel:"noopener noreferrer"},q_=t("td",{style:{"text-align":"center"}},null,-1),L_={style:{"text-align":"left"}},z_=t("code",null,"深度优先搜索",-1),P_=t("code",null,"广度优先搜索",-1),C_=t("code",null,"图",-1),E_={style:{"text-align":"left"}},O_=t("td",{style:{"text-align":"center"}},"1059",-1),j_={style:{"text-align":"left"}},V_={href:"https://leetcode.com/problems/all-paths-from-source-lead-to-destination",target:"_blank",rel:"noopener noreferrer"},D_=t("td",{style:{"text-align":"center"}},null,-1),J_={style:{"text-align":"left"}},K_=t("code",null,"图",-1),A_=t("code",null,"拓扑排序",-1),B_={style:{"text-align":"left"}},N_=t("td",{style:{"text-align":"center"}},"1129",-1),T_={style:{"text-align":"left"}},F_={href:"https://leetcode.com/problems/shortest-path-with-alternating-colors",target:"_blank",rel:"noopener noreferrer"},W_=t("td",{style:{"text-align":"center"}},null,-1),Q_={style:{"text-align":"left"}},R_=t("code",null,"广度优先搜索",-1),U_=t("code",null,"图",-1),X_={style:{"text-align":"left"}},Z_=t("td",{style:{"text-align":"center"}},"1135",-1),G_={style:{"text-align":"left"}},S_={href:"https://leetcode.com/problems/connecting-cities-with-minimum-cost",target:"_blank",rel:"noopener noreferrer"},Y_=t("td",{style:{"text-align":"center"}},null,-1),$_={style:{"text-align":"left"}},tc=t("code",null,"并查集",-1),ec=t("code",null,"图",-1),lc=t("code",null,"最小生成树",-1),oc=t("code",null,"1+",-1),nc={style:{"text-align":"left"}},sc=t("td",{style:{"text-align":"center"}},"1136",-1),dc={style:{"text-align":"left"}},_c={href:"https://leetcode.com/problems/parallel-courses",target:"_blank",rel:"noopener noreferrer"},cc=t("td",{style:{"text-align":"center"}},null,-1),ic={style:{"text-align":"left"}},ac=t("code",null,"图",-1),rc=t("code",null,"拓扑排序",-1),hc={style:{"text-align":"left"}},uc=t("td",{style:{"text-align":"center"}},"1168",-1),fc={style:{"text-align":"left"}},gc={href:"https://leetcode.com/problems/optimize-water-distribution-in-a-village",target:"_blank",rel:"noopener noreferrer"},mc=t("td",{style:{"text-align":"center"}},null,-1),yc={style:{"text-align":"left"}},pc=t("code",null,"并查集",-1),xc=t("code",null,"图",-1),bc=t("code",null,"最小生成树",-1),kc=t("code",null,"1+",-1),Hc={style:{"text-align":"left"}},Mc=t("td",{style:{"text-align":"center"}},"1192",-1),Ic={style:{"text-align":"left"}},wc={href:"https://leetcode.com/problems/critical-connections-in-a-network",target:"_blank",rel:"noopener noreferrer"},vc=t("td",{style:{"text-align":"center"}},null,-1),qc={style:{"text-align":"left"}},Lc=t("code",null,"深度优先搜索",-1),zc=t("code",null,"图",-1),Pc=t("code",null,"双连通分量",-1),Cc={style:{"text-align":"left"}},Ec=t("td",{style:{"text-align":"center"}},"1203",-1),Oc={style:{"text-align":"left"}},jc={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},Vc=t("td",{style:{"text-align":"center"}},null,-1),Dc={style:{"text-align":"left"}},Jc=t("code",null,"深度优先搜索",-1),Kc=t("code",null,"广度优先搜索",-1),Ac=t("code",null,"图",-1),Bc=t("code",null,"1+",-1),Nc={style:{"text-align":"left"}},Tc=t("td",{style:{"text-align":"center"}},"1245",-1),Fc={style:{"text-align":"left"}},Wc={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},Qc=t("td",{style:{"text-align":"center"}},null,-1),Rc={style:{"text-align":"left"}},Uc=t("code",null,"树",-1),Xc=t("code",null,"深度优先搜索",-1),Zc=t("code",null,"广度优先搜索",-1),Gc=t("code",null,"2+",-1),Sc={style:{"text-align":"left"}},Yc=t("td",{style:{"text-align":"center"}},"1298",-1),$c={style:{"text-align":"left"}},ti={href:"https://leetcode.com/problems/maximum-candies-you-can-get-from-boxes",target:"_blank",rel:"noopener noreferrer"},ei=t("td",{style:{"text-align":"center"}},null,-1),li={style:{"text-align":"left"}},oi=t("code",null,"广度优先搜索",-1),ni=t("code",null,"图",-1),si=t("code",null,"数组",-1),di={style:{"text-align":"left"}},_i=t("td",{style:{"text-align":"center"}},"1311",-1),ci={style:{"text-align":"left"}},ii={href:"https://leetcode.com/problems/get-watched-videos-by-your-friends",target:"_blank",rel:"noopener noreferrer"},ai=t("td",{style:{"text-align":"center"}},null,-1),ri={style:{"text-align":"left"}},hi=t("code",null,"广度优先搜索",-1),ui=t("code",null,"图",-1),fi=t("code",null,"数组",-1),gi=t("code",null,"2+",-1),mi={style:{"text-align":"left"}},yi=t("td",{style:{"text-align":"center"}},"1319",-1),pi={style:{"text-align":"left"}},xi={href:"https://leetcode.com/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},bi=t("td",{style:{"text-align":"center"}},null,-1),ki={style:{"text-align":"left"}},Hi=t("code",null,"深度优先搜索",-1),Mi=t("code",null,"广度优先搜索",-1),Ii=t("code",null,"并查集",-1),wi=t("code",null,"1+",-1),vi={style:{"text-align":"left"}},qi=t("td",{style:{"text-align":"center"}},"1334",-1),Li={style:{"text-align":"left"}},zi={href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},Pi=t("td",{style:{"text-align":"center"}},null,-1),Ci={style:{"text-align":"left"}},Ei=t("code",null,"图",-1),Oi=t("code",null,"动态规划",-1),ji=t("code",null,"最短路",-1),Vi={style:{"text-align":"left"}},Di=t("td",{style:{"text-align":"center"}},"1361",-1),Ji={style:{"text-align":"left"}},Ki={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},Ai=t("td",{style:{"text-align":"center"}},null,-1),Bi={style:{"text-align":"left"}},Ni=t("code",null,"树",-1),Ti=t("code",null,"深度优先搜索",-1),Fi=t("code",null,"广度优先搜索",-1),Wi=t("code",null,"3+",-1),Qi={style:{"text-align":"left"}},Ri=t("td",{style:{"text-align":"center"}},"1368",-1),Ui={style:{"text-align":"left"}},Xi={href:"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Zi=t("td",{style:{"text-align":"center"}},null,-1),Gi={style:{"text-align":"left"}},Si=t("code",null,"广度优先搜索",-1),Yi=t("code",null,"图",-1),$i=t("code",null,"数组",-1),ta=t("code",null,"3+",-1),ea={style:{"text-align":"left"}},la=t("td",{style:{"text-align":"center"}},"1377",-1),oa={style:{"text-align":"left"}},na={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},sa=t("td",{style:{"text-align":"center"}},null,-1),da={style:{"text-align":"left"}},_a=t("code",null,"树",-1),ca=t("code",null,"深度优先搜索",-1),ia=t("code",null,"广度优先搜索",-1),aa=t("code",null,"1+",-1),ra={style:{"text-align":"left"}},ha=t("td",{style:{"text-align":"center"}},"1462",-1),ua={style:{"text-align":"left"}},fa={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},ga=t("td",{style:{"text-align":"center"}},null,-1),ma={style:{"text-align":"left"}},ya=t("code",null,"深度优先搜索",-1),pa=t("code",null,"广度优先搜索",-1),xa=t("code",null,"图",-1),ba=t("code",null,"1+",-1),ka={style:{"text-align":"left"}},Ha=t("td",{style:{"text-align":"center"}},"1466",-1),Ma={style:{"text-align":"left"}},Ia={href:"https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero",target:"_blank",rel:"noopener noreferrer"},wa=t("td",{style:{"text-align":"center"}},null,-1),va={style:{"text-align":"left"}},qa=t("code",null,"深度优先搜索",-1),La=t("code",null,"广度优先搜索",-1),za=t("code",null,"图",-1),Pa={style:{"text-align":"left"}},Ca=t("td",{style:{"text-align":"center"}},"1489",-1),Ea={style:{"text-align":"left"}},Oa={href:"https://leetcode.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",target:"_blank",rel:"noopener noreferrer"},ja=t("td",{style:{"text-align":"center"}},null,-1),Va={style:{"text-align":"left"}},Da=t("code",null,"并查集",-1),Ja=t("code",null,"图",-1),Ka=t("code",null,"最小生成树",-1),Aa=t("code",null,"2+",-1),Ba={style:{"text-align":"left"}},Na=t("td",{style:{"text-align":"center"}},"1494",-1),Ta={style:{"text-align":"left"}},Fa={href:"https://leetcode.com/problems/parallel-courses-ii",target:"_blank",rel:"noopener noreferrer"},Wa=t("td",{style:{"text-align":"center"}},null,-1),Qa={style:{"text-align":"left"}},Ra=t("code",null,"位运算",-1),Ua=t("code",null,"图",-1),Xa=t("code",null,"动态规划",-1),Za=t("code",null,"1+",-1),Ga={style:{"text-align":"left"}},Sa=t("td",{style:{"text-align":"center"}},"1514",-1),Ya={style:{"text-align":"left"}},$a={href:"https://leetcode.com/problems/path-with-maximum-probability",target:"_blank",rel:"noopener noreferrer"},tr=t("td",{style:{"text-align":"center"}},null,-1),er={style:{"text-align":"left"}},lr=t("code",null,"图",-1),or=t("code",null,"数组",-1),nr=t("code",null,"最短路",-1),sr=t("code",null,"1+",-1),dr={style:{"text-align":"left"}},_r=t("td",{style:{"text-align":"center"}},"1548",-1),cr={style:{"text-align":"left"}},ir={href:"https://leetcode.com/problems/the-most-similar-path-in-a-graph",target:"_blank",rel:"noopener noreferrer"},ar=t("td",{style:{"text-align":"center"}},null,-1),rr={style:{"text-align":"left"}},hr=t("code",null,"图",-1),ur=t("code",null,"动态规划",-1),fr={style:{"text-align":"left"}},gr=t("td",{style:{"text-align":"center"}},"1557",-1),mr={style:{"text-align":"left"}},yr={href:"https://leetcode.com/problems/minimum-number-of-vertices-to-reach-all-nodes",target:"_blank",rel:"noopener noreferrer"},pr=t("td",{style:{"text-align":"center"}},null,-1),xr={style:{"text-align":"left"}},br=t("code",null,"图",-1),kr={style:{"text-align":"left"}},Hr=t("td",{style:{"text-align":"center"}},"1579",-1),Mr={style:{"text-align":"left"}},Ir={href:"https://leetcode.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable",target:"_blank",rel:"noopener noreferrer"},wr=t("td",{style:{"text-align":"center"}},null,-1),vr={style:{"text-align":"left"}},qr=t("code",null,"并查集",-1),Lr=t("code",null,"图",-1),zr={style:{"text-align":"left"}},Pr=t("td",{style:{"text-align":"center"}},"1584",-1),Cr={style:{"text-align":"left"}},Er={href:"https://leetcode.com/problems/min-cost-to-connect-all-points",target:"_blank",rel:"noopener noreferrer"},Or=t("td",{style:{"text-align":"center"}},null,-1),jr={style:{"text-align":"left"}},Vr=t("code",null,"并查集",-1),Dr=t("code",null,"图",-1),Jr=t("code",null,"数组",-1),Kr=t("code",null,"1+",-1),Ar={style:{"text-align":"left"}},Br=t("td",{style:{"text-align":"center"}},"1591",-1),Nr={style:{"text-align":"left"}},Tr={href:"https://leetcode.com/problems/strange-printer-ii",target:"_blank",rel:"noopener noreferrer"},Fr=t("td",{style:{"text-align":"center"}},null,-1),Wr={style:{"text-align":"left"}},Qr=t("code",null,"图",-1),Rr=t("code",null,"拓扑排序",-1),Ur=t("code",null,"数组",-1),Xr=t("code",null,"1+",-1),Zr={style:{"text-align":"left"}},Gr=t("td",{style:{"text-align":"center"}},"1615",-1),Sr={style:{"text-align":"left"}},Yr={href:"https://leetcode.com/problems/maximal-network-rank",target:"_blank",rel:"noopener noreferrer"},$r=t("td",{style:{"text-align":"center"}},null,-1),th={style:{"text-align":"left"}},eh=t("code",null,"图",-1),lh={style:{"text-align":"left"}},oh=t("td",{style:{"text-align":"center"}},"1632",-1),nh={style:{"text-align":"left"}},sh={href:"https://leetcode.com/problems/rank-transform-of-a-matrix",target:"_blank",rel:"noopener noreferrer"},dh=t("td",{style:{"text-align":"center"}},null,-1),_h={style:{"text-align":"left"}},ch=t("code",null,"并查集",-1),ih=t("code",null,"图",-1),ah=t("code",null,"拓扑排序",-1),rh=t("code",null,"3+",-1),hh={style:{"text-align":"left"}},uh=t("td",{style:{"text-align":"center"}},"1697",-1),fh={style:{"text-align":"left"}},gh={href:"https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths",target:"_blank",rel:"noopener noreferrer"},mh=t("td",{style:{"text-align":"center"}},null,-1),yh={style:{"text-align":"left"}},ph=t("code",null,"并查集",-1),xh=t("code",null,"图",-1),bh=t("code",null,"数组",-1),kh=t("code",null,"2+",-1),Hh={style:{"text-align":"left"}},Mh=t("td",{style:{"text-align":"center"}},"1719",-1),Ih={style:{"text-align":"left"}},wh={href:"https://leetcode.com/problems/number-of-ways-to-reconstruct-a-tree",target:"_blank",rel:"noopener noreferrer"},vh=t("td",{style:{"text-align":"center"}},null,-1),qh={style:{"text-align":"left"}},Lh=t("code",null,"树",-1),zh=t("code",null,"图",-1),Ph={style:{"text-align":"left"}},Ch=t("td",{style:{"text-align":"center"}},"1724",-1),Eh={style:{"text-align":"left"}},Oh={href:"https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths-ii",target:"_blank",rel:"noopener noreferrer"},jh=t("td",{style:{"text-align":"center"}},null,-1),Vh={style:{"text-align":"left"}},Dh=t("code",null,"并查集",-1),Jh=t("code",null,"图",-1),Kh=t("code",null,"最小生成树",-1),Ah={style:{"text-align":"left"}},Bh=t("td",{style:{"text-align":"center"}},"1728",-1),Nh={style:{"text-align":"left"}},Th={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},Fh=t("td",{style:{"text-align":"center"}},null,-1),Wh={style:{"text-align":"left"}},Qh=t("code",null,"图",-1),Rh=t("code",null,"拓扑排序",-1),Uh=t("code",null,"记忆化搜索",-1),Xh=t("code",null,"5+",-1),Zh={style:{"text-align":"left"}},Gh=t("td",{style:{"text-align":"center"}},"1761",-1),Sh={style:{"text-align":"left"}},Yh={href:"https://leetcode.com/problems/minimum-degree-of-a-connected-trio-in-a-graph",target:"_blank",rel:"noopener noreferrer"},$h=t("td",{style:{"text-align":"center"}},null,-1),t1={style:{"text-align":"left"}},e1=t("code",null,"图",-1),l1={style:{"text-align":"left"}},o1=t("td",{style:{"text-align":"center"}},"1778",-1),n1={style:{"text-align":"left"}},s1={href:"https://leetcode.com/problems/shortest-path-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},d1=t("td",{style:{"text-align":"center"}},null,-1),_1={style:{"text-align":"left"}},c1=t("code",null,"深度优先搜索",-1),i1=t("code",null,"广度优先搜索",-1),a1=t("code",null,"图",-1),r1=t("code",null,"1+",-1),h1={style:{"text-align":"left"}},u1=t("td",{style:{"text-align":"center"}},"1782",-1),f1={style:{"text-align":"left"}},g1={href:"https://leetcode.com/problems/count-pairs-of-nodes",target:"_blank",rel:"noopener noreferrer"},m1=t("td",{style:{"text-align":"center"}},null,-1),y1={style:{"text-align":"left"}},p1=t("code",null,"图",-1),x1=t("code",null,"数组",-1),b1=t("code",null,"双指针",-1),k1=t("code",null,"2+",-1),H1={style:{"text-align":"left"}},M1=t("td",{style:{"text-align":"center"}},"1786",-1),I1={style:{"text-align":"left"}},w1={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},v1=t("td",{style:{"text-align":"center"}},null,-1),q1={style:{"text-align":"left"}},L1=t("code",null,"图",-1),z1=t("code",null,"拓扑排序",-1),P1=t("code",null,"动态规划",-1),C1=t("code",null,"2+",-1),E1={style:{"text-align":"left"}},O1=t("td",{style:{"text-align":"center"}},"1791",-1),j1={style:{"text-align":"left"}},V1={href:"https://leetcode.com/problems/find-center-of-star-graph",target:"_blank",rel:"noopener noreferrer"},D1=t("td",{style:{"text-align":"center"}},null,-1),J1={style:{"text-align":"left"}},K1=t("code",null,"图",-1),A1={style:{"text-align":"left"}},B1=t("td",{style:{"text-align":"center"}},"1810",-1),N1={style:{"text-align":"left"}},T1={href:"https://leetcode.com/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},F1=t("td",{style:{"text-align":"center"}},null,-1),W1={style:{"text-align":"left"}},Q1=t("code",null,"深度优先搜索",-1),R1=t("code",null,"广度优先搜索",-1),U1=t("code",null,"图",-1),X1=t("code",null,"2+",-1),Z1={style:{"text-align":"left"}},G1=t("td",{style:{"text-align":"center"}},"1820",-1),S1={style:{"text-align":"left"}},Y1={href:"https://leetcode.com/problems/maximum-number-of-accepted-invitations",target:"_blank",rel:"noopener noreferrer"},$1=t("td",{style:{"text-align":"center"}},null,-1),tu={style:{"text-align":"left"}},eu=t("code",null,"深度优先搜索",-1),lu=t("code",null,"图",-1),ou=t("code",null,"数组",-1),nu=t("code",null,"1+",-1),su={style:{"text-align":"left"}},du=t("td",{style:{"text-align":"center"}},"1857",-1),_u={style:{"text-align":"left"}},cu={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},iu=t("td",{style:{"text-align":"center"}},null,-1),au={style:{"text-align":"left"}},ru=t("code",null,"图",-1),hu=t("code",null,"拓扑排序",-1),uu=t("code",null,"记忆化搜索",-1),fu=t("code",null,"3+",-1),gu={style:{"text-align":"left"}},mu=t("td",{style:{"text-align":"center"}},"1916",-1),yu={style:{"text-align":"left"}},pu={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},xu=t("td",{style:{"text-align":"center"}},null,-1),bu={style:{"text-align":"left"}},ku=t("code",null,"树",-1),Hu=t("code",null,"图",-1),Mu=t("code",null,"拓扑排序",-1),Iu=t("code",null,"3+",-1),wu={style:{"text-align":"left"}},vu=t("td",{style:{"text-align":"center"}},"1928",-1),qu={style:{"text-align":"left"}},Lu={href:"https://leetcode.com/problems/minimum-cost-to-reach-destination-in-time",target:"_blank",rel:"noopener noreferrer"},zu=t("td",{style:{"text-align":"center"}},null,-1),Pu={style:{"text-align":"left"}},Cu=t("code",null,"图",-1),Eu=t("code",null,"数组",-1),Ou=t("code",null,"动态规划",-1),ju={style:{"text-align":"left"}},Vu=t("td",{style:{"text-align":"center"}},"1971",-1),Du={style:{"text-align":"left"}},Ju={href:"https://leetcode.com/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},Ku=t("td",{style:{"text-align":"center"}},null,-1),Au={style:{"text-align":"left"}},Bu=t("code",null,"深度优先搜索",-1),Nu=t("code",null,"广度优先搜索",-1),Tu=t("code",null,"并查集",-1),Fu=t("code",null,"1+",-1),Wu={style:{"text-align":"left"}},Qu=t("td",{style:{"text-align":"center"}},"1976",-1),Ru={style:{"text-align":"left"}},Uu={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},Xu=t("td",{style:{"text-align":"center"}},null,-1),Zu={style:{"text-align":"left"}},Gu=t("code",null,"图",-1),Su=t("code",null,"拓扑排序",-1),Yu=t("code",null,"动态规划",-1),$u=t("code",null,"1+",-1),tf={style:{"text-align":"left"}},ef=t("td",{style:{"text-align":"center"}},"2039",-1),lf={style:{"text-align":"left"}},of={href:"https://leetcode.com/problems/the-time-when-the-network-becomes-idle",target:"_blank",rel:"noopener noreferrer"},nf=t("td",{style:{"text-align":"center"}},null,-1),sf={style:{"text-align":"left"}},df=t("code",null,"广度优先搜索",-1),_f=t("code",null,"图",-1),cf=t("code",null,"数组",-1),af={style:{"text-align":"left"}},rf=t("td",{style:{"text-align":"center"}},"2045",-1),hf={style:{"text-align":"left"}},uf={href:"https://leetcode.com/problems/second-minimum-time-to-reach-destination",target:"_blank",rel:"noopener noreferrer"},ff=t("td",{style:{"text-align":"center"}},null,-1),gf={style:{"text-align":"left"}},mf=t("code",null,"广度优先搜索",-1),yf=t("code",null,"图",-1),pf=t("code",null,"最短路",-1),xf={style:{"text-align":"left"}},bf=t("td",{style:{"text-align":"center"}},"2050",-1),kf={style:{"text-align":"left"}},Hf={href:"https://leetcode.com/problems/parallel-courses-iii",target:"_blank",rel:"noopener noreferrer"},Mf=t("td",{style:{"text-align":"center"}},null,-1),If={style:{"text-align":"left"}},wf=t("code",null,"图",-1),vf=t("code",null,"拓扑排序",-1),qf=t("code",null,"数组",-1),Lf=t("code",null,"1+",-1),zf={style:{"text-align":"left"}},Pf=t("td",{style:{"text-align":"center"}},"2065",-1),Cf={style:{"text-align":"left"}},Ef={href:"https://leetcode.com/problems/maximum-path-quality-of-a-graph",target:"_blank",rel:"noopener noreferrer"},Of=t("td",{style:{"text-align":"center"}},null,-1),jf={style:{"text-align":"left"}},Vf=t("code",null,"图",-1),Df=t("code",null,"数组",-1),Jf=t("code",null,"回溯",-1),Kf={style:{"text-align":"left"}},Af=t("td",{style:{"text-align":"center"}},"2076",-1),Bf={style:{"text-align":"left"}},Nf={href:"https://leetcode.com/problems/process-restricted-friend-requests",target:"_blank",rel:"noopener noreferrer"},Tf=t("td",{style:{"text-align":"center"}},null,-1),Ff={style:{"text-align":"left"}},Wf=t("code",null,"并查集",-1),Qf=t("code",null,"图",-1),Rf={style:{"text-align":"left"}},Uf=t("td",{style:{"text-align":"center"}},"2077",-1),Xf={style:{"text-align":"left"}},Zf={href:"https://leetcode.com/problems/paths-in-maze-that-lead-to-same-room",target:"_blank",rel:"noopener noreferrer"},Gf=t("td",{style:{"text-align":"center"}},null,-1),Sf={style:{"text-align":"left"}},Yf=t("code",null,"图",-1),$f={style:{"text-align":"left"}},tg=t("td",{style:{"text-align":"center"}},"2092",-1),eg={style:{"text-align":"left"}},lg={href:"https://leetcode.com/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},og=t("td",{style:{"text-align":"center"}},null,-1),ng={style:{"text-align":"left"}},sg=t("code",null,"深度优先搜索",-1),dg=t("code",null,"广度优先搜索",-1),_g=t("code",null,"并查集",-1),cg=t("code",null,"2+",-1),ig={style:{"text-align":"left"}},ag=t("td",{style:{"text-align":"center"}},"2093",-1),rg={style:{"text-align":"left"}},hg={href:"https://leetcode.com/problems/minimum-cost-to-reach-city-with-discounts",target:"_blank",rel:"noopener noreferrer"},ug=t("td",{style:{"text-align":"center"}},null,-1),fg={style:{"text-align":"left"}},gg=t("code",null,"图",-1),mg=t("code",null,"最短路",-1),yg=t("code",null,"堆（优先队列）",-1),pg={style:{"text-align":"left"}},xg=t("td",{style:{"text-align":"center"}},"2097",-1),bg={style:{"text-align":"left"}},kg={href:"https://leetcode.com/problems/valid-arrangement-of-pairs",target:"_blank",rel:"noopener noreferrer"},Hg=t("td",{style:{"text-align":"center"}},null,-1),Mg={style:{"text-align":"left"}},Ig=t("code",null,"深度优先搜索",-1),wg=t("code",null,"图",-1),vg=t("code",null,"欧拉回路",-1),qg={style:{"text-align":"left"}},Lg=t("td",{style:{"text-align":"center"}},"2101",-1),zg={style:{"text-align":"left"}},Pg={href:"https://leetcode.com/problems/detonate-the-maximum-bombs",target:"_blank",rel:"noopener noreferrer"},Cg=t("td",{style:{"text-align":"center"}},null,-1),Eg={style:{"text-align":"left"}},Og=t("code",null,"深度优先搜索",-1),jg=t("code",null,"广度优先搜索",-1),Vg=t("code",null,"图",-1),Dg=t("code",null,"3+",-1),Jg={style:{"text-align":"left"}},Kg=t("td",{style:{"text-align":"center"}},"2115",-1),Ag={style:{"text-align":"left"}},Bg={href:"https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies",target:"_blank",rel:"noopener noreferrer"},Ng=t("td",{style:{"text-align":"center"}},null,-1),Tg={style:{"text-align":"left"}},Fg=t("code",null,"图",-1),Wg=t("code",null,"拓扑排序",-1),Qg=t("code",null,"数组",-1),Rg=t("code",null,"2+",-1),Ug={style:{"text-align":"left"}},Xg=t("td",{style:{"text-align":"center"}},"2123",-1),Zg={style:{"text-align":"left"}},Gg={href:"https://leetcode.com/problems/minimum-operations-to-remove-adjacent-ones-in-matrix",target:"_blank",rel:"noopener noreferrer"},Sg=t("td",{style:{"text-align":"center"}},null,-1),Yg={style:{"text-align":"left"}},$g=t("code",null,"图",-1),tm=t("code",null,"数组",-1),em=t("code",null,"矩阵",-1),lm={style:{"text-align":"left"}},om=t("td",{style:{"text-align":"center"}},"2127",-1),nm={style:{"text-align":"left"}},sm={href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},dm=t("td",{style:{"text-align":"center"}},null,-1),_m={style:{"text-align":"left"}},cm=t("code",null,"深度优先搜索",-1),im=t("code",null,"图",-1),am=t("code",null,"拓扑排序",-1),rm={style:{"text-align":"left"}},hm=t("td",{style:{"text-align":"center"}},"2192",-1),um={style:{"text-align":"left"}},fm={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},gm=t("td",{style:{"text-align":"center"}},null,-1),mm={style:{"text-align":"left"}},ym=t("code",null,"深度优先搜索",-1),pm=t("code",null,"广度优先搜索",-1),xm=t("code",null,"图",-1),bm=t("code",null,"1+",-1),km={style:{"text-align":"left"}},Hm=t("td",{style:{"text-align":"center"}},"2203",-1),Mm={style:{"text-align":"left"}},Im={href:"https://leetcode.com/problems/minimum-weighted-subgraph-with-the-required-paths",target:"_blank",rel:"noopener noreferrer"},wm=t("td",{style:{"text-align":"center"}},null,-1),vm={style:{"text-align":"left"}},qm=t("code",null,"图",-1),Lm=t("code",null,"最短路",-1),zm={style:{"text-align":"left"}},Pm=t("td",{style:{"text-align":"center"}},"2204",-1),Cm={style:{"text-align":"left"}},Em={href:"https://leetcode.com/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Om=t("td",{style:{"text-align":"center"}},null,-1),jm={style:{"text-align":"left"}},Vm=t("code",null,"深度优先搜索",-1),Dm=t("code",null,"广度优先搜索",-1),Jm=t("code",null,"并查集",-1),Km=t("code",null,"1+",-1),Am={style:{"text-align":"left"}},Bm=t("td",{style:{"text-align":"center"}},"2242",-1),Nm={style:{"text-align":"left"}},Tm={href:"https://leetcode.com/problems/maximum-score-of-a-node-sequence",target:"_blank",rel:"noopener noreferrer"},Fm=t("td",{style:{"text-align":"center"}},null,-1),Wm={style:{"text-align":"left"}},Qm=t("code",null,"图",-1),Rm=t("code",null,"数组",-1),Um=t("code",null,"枚举",-1),Xm=t("code",null,"1+",-1),Zm={style:{"text-align":"left"}},Gm=t("td",{style:{"text-align":"center"}},"2246",-1),Sm={style:{"text-align":"left"}},Ym={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},$m=t("td",{style:{"text-align":"center"}},null,-1),ty={style:{"text-align":"left"}},ey=t("code",null,"树",-1),ly=t("code",null,"深度优先搜索",-1),oy=t("code",null,"图",-1),ny=t("code",null,"3+",-1),sy={style:{"text-align":"left"}},dy=t("td",{style:{"text-align":"center"}},"2247",-1),_y={style:{"text-align":"left"}},cy={href:"https://leetcode.com/problems/maximum-cost-of-trip-with-k-highways",target:"_blank",rel:"noopener noreferrer"},iy=t("td",{style:{"text-align":"center"}},null,-1),ay={style:{"text-align":"left"}},ry=t("code",null,"位运算",-1),hy=t("code",null,"图",-1),uy=t("code",null,"动态规划",-1),fy=t("code",null,"1+",-1),gy={style:{"text-align":"left"}},my=t("td",{style:{"text-align":"center"}},"2285",-1),yy={style:{"text-align":"left"}},py={href:"https://leetcode.com/problems/maximum-total-importance-of-roads",target:"_blank",rel:"noopener noreferrer"},xy=t("td",{style:{"text-align":"center"}},null,-1),by={style:{"text-align":"left"}},ky=t("code",null,"贪心",-1),Hy=t("code",null,"图",-1),My=t("code",null,"排序",-1),Iy=t("code",null,"1+",-1),wy={style:{"text-align":"left"}},vy=t("td",{style:{"text-align":"center"}},"2290",-1),qy={style:{"text-align":"left"}},Ly={href:"https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner",target:"_blank",rel:"noopener noreferrer"},zy=t("td",{style:{"text-align":"center"}},null,-1),Py={style:{"text-align":"left"}},Cy=t("code",null,"广度优先搜索",-1),Ey=t("code",null,"图",-1),Oy=t("code",null,"数组",-1),jy=t("code",null,"3+",-1),Vy={style:{"text-align":"left"}},Dy=t("td",{style:{"text-align":"center"}},"2297",-1),Jy={style:{"text-align":"left"}},Ky={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},Ay=t("td",{style:{"text-align":"center"}},null,-1),By={style:{"text-align":"left"}},Ny=t("code",null,"栈",-1),Ty=t("code",null,"图",-1),Fy=t("code",null,"数组",-1),Wy=t("code",null,"3+",-1),Qy={style:{"text-align":"left"}},Ry=t("td",{style:{"text-align":"center"}},"2307",-1),Uy={style:{"text-align":"left"}},Xy={href:"https://leetcode.com/problems/check-for-contradictions-in-equations",target:"_blank",rel:"noopener noreferrer"},Zy=t("td",{style:{"text-align":"center"}},null,-1),Gy={style:{"text-align":"left"}},Sy=t("code",null,"深度优先搜索",-1),Yy=t("code",null,"并查集",-1),$y=t("code",null,"图",-1),tp=t("code",null,"1+",-1),ep={style:{"text-align":"left"}},lp=t("td",{style:{"text-align":"center"}},"2316",-1),op={style:{"text-align":"left"}},np={href:"https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},sp=t("td",{style:{"text-align":"center"}},null,-1),dp={style:{"text-align":"left"}},_p=t("code",null,"深度优先搜索",-1),cp=t("code",null,"广度优先搜索",-1),ip=t("code",null,"并查集",-1),ap=t("code",null,"1+",-1),rp={style:{"text-align":"left"}},hp=t("td",{style:{"text-align":"center"}},"2328",-1),up={style:{"text-align":"left"}},fp={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},gp=t("td",{style:{"text-align":"center"}},null,-1),mp={style:{"text-align":"left"}},yp=t("code",null,"深度优先搜索",-1),pp=t("code",null,"广度优先搜索",-1),xp=t("code",null,"图",-1),bp=t("code",null,"5+",-1),kp={style:{"text-align":"left"}},Hp=t("td",{style:{"text-align":"center"}},"2359",-1),Mp={style:{"text-align":"left"}},Ip={href:"https://leetcode.com/problems/find-closest-node-to-given-two-nodes",target:"_blank",rel:"noopener noreferrer"},wp=t("td",{style:{"text-align":"center"}},null,-1),vp={style:{"text-align":"left"}},qp=t("code",null,"深度优先搜索",-1),Lp=t("code",null,"图",-1),zp={style:{"text-align":"left"}},Pp=t("td",{style:{"text-align":"center"}},"2360",-1),Cp={style:{"text-align":"left"}},Ep={href:"https://leetcode.com/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},Op=t("td",{style:{"text-align":"center"}},null,-1),jp={style:{"text-align":"left"}},Vp=t("code",null,"深度优先搜索",-1),Dp=t("code",null,"图",-1),Jp=t("code",null,"拓扑排序",-1),Kp={style:{"text-align":"left"}},Ap=t("td",{style:{"text-align":"center"}},"2368",-1),Bp={style:{"text-align":"left"}},Np={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},Tp=t("td",{style:{"text-align":"center"}},null,-1),Fp={style:{"text-align":"left"}},Wp=t("code",null,"树",-1),Qp=t("code",null,"深度优先搜索",-1),Rp=t("code",null,"广度优先搜索",-1),Up=t("code",null,"4+",-1),Xp={style:{"text-align":"left"}},Zp=t("td",{style:{"text-align":"center"}},"2371",-1),Gp={style:{"text-align":"left"}},Sp={href:"https://leetcode.com/problems/minimize-maximum-value-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Yp=t("td",{style:{"text-align":"center"}},null,-1),$p={style:{"text-align":"left"}},tx=t("code",null,"并查集",-1),ex=t("code",null,"图",-1),lx=t("code",null,"拓扑排序",-1),ox=t("code",null,"3+",-1),nx={style:{"text-align":"left"}},sx=t("td",{style:{"text-align":"center"}},"2374",-1),dx={style:{"text-align":"left"}},_x={href:"https://leetcode.com/problems/node-with-highest-edge-score",target:"_blank",rel:"noopener noreferrer"},cx=t("td",{style:{"text-align":"center"}},null,-1),ix={style:{"text-align":"left"}},ax=t("code",null,"图",-1),rx=t("code",null,"哈希表",-1),hx={style:{"text-align":"left"}},ux=t("td",{style:{"text-align":"center"}},"2392",-1),fx={style:{"text-align":"left"}},gx={href:"https://leetcode.com/problems/build-a-matrix-with-conditions",target:"_blank",rel:"noopener noreferrer"},mx=t("td",{style:{"text-align":"center"}},null,-1),yx={style:{"text-align":"left"}},px=t("code",null,"图",-1),xx=t("code",null,"拓扑排序",-1),bx=t("code",null,"数组",-1),kx=t("code",null,"1+",-1),Hx={style:{"text-align":"left"}},Mx=t("td",{style:{"text-align":"center"}},"2421",-1),Ix={style:{"text-align":"left"}},wx={href:"https://leetcode.com/problems/number-of-good-paths",target:"_blank",rel:"noopener noreferrer"},vx=t("td",{style:{"text-align":"center"}},null,-1),qx={style:{"text-align":"left"}},Lx=t("code",null,"树",-1),zx=t("code",null,"并查集",-1),Px=t("code",null,"图",-1),Cx=t("code",null,"3+",-1),Ex={style:{"text-align":"left"}},Ox=t("td",{style:{"text-align":"center"}},"2467",-1),jx={style:{"text-align":"left"}},Vx={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Dx=t("td",{style:{"text-align":"center"}},null,-1),Jx={style:{"text-align":"left"}},Kx=t("code",null,"树",-1),Ax=t("code",null,"深度优先搜索",-1),Bx=t("code",null,"广度优先搜索",-1),Nx=t("code",null,"2+",-1),Tx={style:{"text-align":"left"}},Fx=t("td",{style:{"text-align":"center"}},"2473",-1),Wx={style:{"text-align":"left"}},Qx={href:"https://leetcode.com/problems/minimum-cost-to-buy-apples",target:"_blank",rel:"noopener noreferrer"},Rx=t("td",{style:{"text-align":"center"}},null,-1),Ux={style:{"text-align":"left"}},Xx=t("code",null,"图",-1),Zx=t("code",null,"数组",-1),Gx=t("code",null,"最短路",-1),Sx=t("code",null,"1+",-1),Yx={style:{"text-align":"left"}},$x=t("td",{style:{"text-align":"center"}},"2477",-1),t3={style:{"text-align":"left"}},e3={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},l3=t("td",{style:{"text-align":"center"}},null,-1),o3={style:{"text-align":"left"}},n3=t("code",null,"树",-1),s3=t("code",null,"深度优先搜索",-1),d3=t("code",null,"广度优先搜索",-1),_3=t("code",null,"1+",-1),c3={style:{"text-align":"left"}},i3=t("td",{style:{"text-align":"center"}},"2479",-1),a3={style:{"text-align":"left"}},r3={href:"https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},h3=t("td",{style:{"text-align":"center"}},null,-1),u3={style:{"text-align":"left"}},f3=t("code",null,"树",-1),g3=t("code",null,"深度优先搜索",-1),m3=t("code",null,"图",-1),y3=t("code",null,"1+",-1),p3={style:{"text-align":"left"}},x3=t("td",{style:{"text-align":"center"}},"2492",-1),b3={style:{"text-align":"left"}},k3={href:"https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},H3=t("td",{style:{"text-align":"center"}},null,-1),M3={style:{"text-align":"left"}},I3=t("code",null,"深度优先搜索",-1),w3=t("code",null,"广度优先搜索",-1),v3=t("code",null,"并查集",-1),q3=t("code",null,"1+",-1),L3={style:{"text-align":"left"}},z3=t("td",{style:{"text-align":"center"}},"2493",-1),P3={style:{"text-align":"left"}},C3={href:"https://leetcode.com/problems/divide-nodes-into-the-maximum-number-of-groups",target:"_blank",rel:"noopener noreferrer"},E3=t("td",{style:{"text-align":"center"}},null,-1),O3={style:{"text-align":"left"}},j3=t("code",null,"广度优先搜索",-1),V3=t("code",null,"并查集",-1),D3=t("code",null,"图",-1),J3={style:{"text-align":"left"}},K3=t("td",{style:{"text-align":"center"}},"2497",-1),A3={style:{"text-align":"left"}},B3={href:"https://leetcode.com/problems/maximum-star-sum-of-a-graph",target:"_blank",rel:"noopener noreferrer"},N3=t("td",{style:{"text-align":"center"}},null,-1),T3={style:{"text-align":"left"}},F3=t("code",null,"贪心",-1),W3=t("code",null,"图",-1),Q3=t("code",null,"数组",-1),R3=t("code",null,"2+",-1),U3={style:{"text-align":"left"}},X3=t("td",{style:{"text-align":"center"}},"2508",-1),Z3={style:{"text-align":"left"}},G3={href:"https://leetcode.com/problems/add-edges-to-make-degrees-of-all-nodes-even",target:"_blank",rel:"noopener noreferrer"},S3=t("td",{style:{"text-align":"center"}},null,-1),Y3={style:{"text-align":"left"}},$3=t("code",null,"图",-1),tb=t("code",null,"哈希表",-1),eb={style:{"text-align":"left"}},lb=t("td",{style:{"text-align":"center"}},"2577",-1),ob={style:{"text-align":"left"}},nb={href:"https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid",target:"_blank",rel:"noopener noreferrer"},sb=t("td",{style:{"text-align":"center"}},null,-1),db={style:{"text-align":"left"}},_b=t("code",null,"广度优先搜索",-1),cb=t("code",null,"图",-1),ib=t("code",null,"数组",-1),ab=t("code",null,"3+",-1),rb={style:{"text-align":"left"}},hb=t("td",{style:{"text-align":"center"}},"2603",-1),ub={style:{"text-align":"left"}},fb={href:"https://leetcode.com/problems/collect-coins-in-a-tree",target:"_blank",rel:"noopener noreferrer"},gb=t("td",{style:{"text-align":"center"}},null,-1),mb={style:{"text-align":"left"}},yb=t("code",null,"树",-1),pb=t("code",null,"图",-1),xb=t("code",null,"拓扑排序",-1),bb=t("code",null,"1+",-1),kb={style:{"text-align":"left"}},Hb=t("td",{style:{"text-align":"center"}},"2608",-1),Mb={style:{"text-align":"left"}},Ib={href:"https://leetcode.com/problems/shortest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},wb=t("td",{style:{"text-align":"center"}},null,-1),vb={style:{"text-align":"left"}},qb=t("code",null,"广度优先搜索",-1),Lb=t("code",null,"图",-1),zb={style:{"text-align":"left"}},Pb=t("td",{style:{"text-align":"center"}},"2642",-1),Cb={style:{"text-align":"left"}},Eb={href:"https://leetcode.com/problems/design-graph-with-shortest-path-calculator",target:"_blank",rel:"noopener noreferrer"},Ob=t("td",{style:{"text-align":"center"}},null,-1),jb={style:{"text-align":"left"}},Vb=t("code",null,"图",-1),Db=t("code",null,"设计",-1),Jb=t("code",null,"最短路",-1),Kb=t("code",null,"1+",-1),Ab={style:{"text-align":"left"}},Bb=t("td",{style:{"text-align":"center"}},"2646",-1),Nb={style:{"text-align":"left"}},Tb={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},Fb=t("td",{style:{"text-align":"center"}},null,-1),Wb={style:{"text-align":"left"}},Qb=t("code",null,"树",-1),Rb=t("code",null,"深度优先搜索",-1),Ub=t("code",null,"图",-1),Xb=t("code",null,"2+",-1),Zb={style:{"text-align":"left"}},Gb=t("td",{style:{"text-align":"center"}},"2662",-1),Sb={style:{"text-align":"left"}},Yb={href:"https://leetcode.com/problems/minimum-cost-of-a-path-with-special-roads",target:"_blank",rel:"noopener noreferrer"},$b=t("td",{style:{"text-align":"center"}},null,-1),t4={style:{"text-align":"left"}},e4=t("code",null,"图",-1),l4=t("code",null,"数组",-1),o4=t("code",null,"最短路",-1),n4=t("code",null,"1+",-1),s4={style:{"text-align":"left"}},d4=t("td",{style:{"text-align":"center"}},"2685",-1),_4={style:{"text-align":"left"}},c4={href:"https://leetcode.com/problems/count-the-number-of-complete-components",target:"_blank",rel:"noopener noreferrer"},i4=t("td",{style:{"text-align":"center"}},null,-1),a4={style:{"text-align":"left"}},r4=t("code",null,"深度优先搜索",-1),h4=t("code",null,"广度优先搜索",-1),u4=t("code",null,"图",-1),f4={style:{"text-align":"left"}},g4=t("td",{style:{"text-align":"center"}},"2699",-1),m4={style:{"text-align":"left"}},y4={href:"https://leetcode.com/problems/modify-graph-edge-weights",target:"_blank",rel:"noopener noreferrer"},p4=t("td",{style:{"text-align":"center"}},null,-1),x4={style:{"text-align":"left"}},b4=t("code",null,"图",-1),k4=t("code",null,"最短路",-1),H4=t("code",null,"堆（优先队列）",-1),M4={style:{"text-align":"left"}},I4=t("td",{style:{"text-align":"center"}},"2714",-1),w4={style:{"text-align":"left"}},v4={href:"https://leetcode.com/problems/find-shortest-path-with-k-hops",target:"_blank",rel:"noopener noreferrer"},q4=t("td",{style:{"text-align":"center"}},null,-1),L4={style:{"text-align":"left"}},z4=t("code",null,"图",-1),P4=t("code",null,"最短路",-1),C4=t("code",null,"堆（优先队列）",-1),E4={style:{"text-align":"left"}},O4=t("td",{style:{"text-align":"center"}},"2737",-1),j4={style:{"text-align":"left"}},V4={href:"https://leetcode.com/problems/find-the-closest-marked-node",target:"_blank",rel:"noopener noreferrer"},D4=t("td",{style:{"text-align":"center"}},null,-1),J4={style:{"text-align":"left"}},K4=t("code",null,"图",-1),A4=t("code",null,"数组",-1),B4=t("code",null,"最短路",-1),N4=t("code",null,"1+",-1),T4={style:{"text-align":"left"}},F4=t("td",{style:{"text-align":"center"}},"2846",-1),W4={style:{"text-align":"left"}},Q4={href:"https://leetcode.com/problems/minimum-edge-weight-equilibrium-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},R4=t("td",{style:{"text-align":"center"}},null,-1),U4={style:{"text-align":"left"}},X4=t("code",null,"树",-1),Z4=t("code",null,"图",-1),G4=t("code",null,"数组",-1),S4=t("code",null,"1+",-1),Y4={style:{"text-align":"left"}},$4=t("td",{style:{"text-align":"center"}},"2858",-1),t2={style:{"text-align":"left"}},e2={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},l2=t("td",{style:{"text-align":"center"}},null,-1),o2={style:{"text-align":"left"}},n2=t("code",null,"深度优先搜索",-1),s2=t("code",null,"广度优先搜索",-1),d2=t("code",null,"图",-1),_2=t("code",null,"1+",-1),c2={style:{"text-align":"left"}},i2=t("td",{style:{"text-align":"center"}},"2876",-1),a2={style:{"text-align":"left"}},r2={href:"https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},h2=t("td",{style:{"text-align":"center"}},null,-1),u2={style:{"text-align":"left"}},f2=t("code",null,"图",-1),g2=t("code",null,"记忆化搜索",-1),m2=t("code",null,"动态规划",-1),y2={style:{"text-align":"left"}},p2=t("td",{style:{"text-align":"center"}},"2924",-1),x2={style:{"text-align":"left"}},b2={href:"https://leetcode.com/problems/find-champion-ii",target:"_blank",rel:"noopener noreferrer"},k2=t("td",{style:{"text-align":"center"}},null,-1),H2={style:{"text-align":"left"}},M2=t("code",null,"图",-1),I2={style:{"text-align":"left"}},w2=t("td",{style:{"text-align":"center"}},"2959",-1),v2={style:{"text-align":"left"}},q2={href:"https://leetcode.com/problems/number-of-possible-sets-of-closing-branches",target:"_blank",rel:"noopener noreferrer"},L2=t("td",{style:{"text-align":"center"}},null,-1),z2={style:{"text-align":"left"}},P2=t("code",null,"位运算",-1),C2=t("code",null,"图",-1),E2=t("code",null,"枚举",-1),O2=t("code",null,"2+",-1),j2={style:{"text-align":"left"}},V2=t("td",{style:{"text-align":"center"}},"2976",-1),D2={style:{"text-align":"left"}},J2={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-i",target:"_blank",rel:"noopener noreferrer"},K2=t("td",{style:{"text-align":"center"}},null,-1),A2={style:{"text-align":"left"}},B2=t("code",null,"图",-1),N2=t("code",null,"数组",-1),T2=t("code",null,"字符串",-1),F2=t("code",null,"1+",-1),W2={style:{"text-align":"left"}},Q2=t("td",{style:{"text-align":"center"}},"2977",-1),R2={style:{"text-align":"left"}},U2={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},X2=t("td",{style:{"text-align":"center"}},null,-1),Z2={style:{"text-align":"left"}},G2=t("code",null,"图",-1),S2=t("code",null,"字典树",-1),Y2=t("code",null,"数组",-1),$2=t("code",null,"3+",-1),t0={style:{"text-align":"left"}},e0=t("td",{style:{"text-align":"center"}},"3015",-1),l0={style:{"text-align":"left"}},o0={href:"https://leetcode.com/problems/count-the-number-of-houses-at-a-certain-distance-i",target:"_blank",rel:"noopener noreferrer"},n0=t("td",{style:{"text-align":"center"}},null,-1),s0={style:{"text-align":"left"}},d0=t("code",null,"广度优先搜索",-1),_0=t("code",null,"图",-1),c0=t("code",null,"前缀和",-1),i0={style:{"text-align":"left"}},a0=t("td",{style:{"text-align":"center"}},"3017",-1),r0={style:{"text-align":"left"}},h0={href:"https://leetcode.com/problems/count-the-number-of-houses-at-a-certain-distance-ii",target:"_blank",rel:"noopener noreferrer"},u0=t("td",{style:{"text-align":"center"}},null,-1),f0={style:{"text-align":"left"}},g0=t("code",null,"图",-1),m0=t("code",null,"前缀和",-1),y0={style:{"text-align":"left"}},p0=t("td",{style:{"text-align":"center"}},"3108",-1),x0={style:{"text-align":"left"}},b0={href:"https://leetcode.com/problems/minimum-cost-walk-in-weighted-graph",target:"_blank",rel:"noopener noreferrer"},k0=t("td",{style:{"text-align":"center"}},null,-1),H0={style:{"text-align":"left"}},M0=t("code",null,"位运算",-1),I0=t("code",null,"并查集",-1),w0=t("code",null,"图",-1),v0=t("code",null,"1+",-1),q0={style:{"text-align":"left"}},L0=t("td",{style:{"text-align":"center"}},"3112",-1),z0={style:{"text-align":"left"}},P0={href:"https://leetcode.com/problems/minimum-time-to-visit-disappearing-nodes",target:"_blank",rel:"noopener noreferrer"},C0=t("td",{style:{"text-align":"center"}},null,-1),E0={style:{"text-align":"left"}},O0=t("code",null,"图",-1),j0=t("code",null,"数组",-1),V0=t("code",null,"最短路",-1),D0=t("code",null,"1+",-1),J0={style:{"text-align":"left"}},K0=t("td",{style:{"text-align":"center"}},"3123",-1),A0={style:{"text-align":"left"}},B0={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},N0=t("td",{style:{"text-align":"center"}},null,-1),T0={style:{"text-align":"left"}},F0=t("code",null,"深度优先搜索",-1),W0=t("code",null,"广度优先搜索",-1),Q0=t("code",null,"图",-1),R0=t("code",null,"2+",-1),U0={style:{"text-align":"left"}},X0=t("td",{style:{"text-align":"center"}},"3203",-1),Z0={style:{"text-align":"left"}},G0={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},S0=t("td",{style:{"text-align":"center"}},null,-1),Y0={style:{"text-align":"left"}},$0=t("code",null,"树",-1),t6=t("code",null,"深度优先搜索",-1),e6=t("code",null,"广度优先搜索",-1),l6=t("code",null,"1+",-1),o6={style:{"text-align":"left"}},n6=t("td",{style:{"text-align":"center"}},"3241",-1),s6={style:{"text-align":"left"}},d6={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},_6=t("td",{style:{"text-align":"center"}},null,-1),c6={style:{"text-align":"left"}},i6=t("code",null,"树",-1),a6=t("code",null,"深度优先搜索",-1),r6=t("code",null,"图",-1),h6=t("code",null,"1+",-1),u6={style:{"text-align":"left"}},f6=t("td",{style:{"text-align":"center"}},"3243",-1),g6={style:{"text-align":"left"}},m6={href:"https://leetcode.com/problems/shortest-distance-after-road-addition-queries-i",target:"_blank",rel:"noopener noreferrer"},y6=t("td",{style:{"text-align":"center"}},null,-1),p6={style:{"text-align":"left"}},x6=t("code",null,"广度优先搜索",-1),b6=t("code",null,"图",-1),k6=t("code",null,"数组",-1),H6={style:{"text-align":"left"}},M6=t("td",{style:{"text-align":"center"}},"3244",-1),I6={style:{"text-align":"left"}},w6={href:"https://leetcode.com/problems/shortest-distance-after-road-addition-queries-ii",target:"_blank",rel:"noopener noreferrer"},v6=t("td",{style:{"text-align":"center"}},null,-1),q6={style:{"text-align":"left"}},L6=t("code",null,"贪心",-1),z6=t("code",null,"图",-1),P6=t("code",null,"数组",-1),C6=t("code",null,"1+",-1),E6={style:{"text-align":"left"}},O6=t("td",{style:{"text-align":"center"}},"3286",-1),j6={style:{"text-align":"left"}},V6={href:"https://leetcode.com/problems/find-a-safe-walk-through-a-grid",target:"_blank",rel:"noopener noreferrer"},D6=t("td",{style:{"text-align":"center"}},null,-1),J6={style:{"text-align":"left"}},K6=t("code",null,"广度优先搜索",-1),A6=t("code",null,"图",-1),B6=t("code",null,"数组",-1),N6=t("code",null,"3+",-1),T6={style:{"text-align":"left"}},F6=t("td",{style:{"text-align":"center"}},"3310",-1),W6={style:{"text-align":"left"}},Q6={href:"https://leetcode.com/problems/remove-methods-from-project",target:"_blank",rel:"noopener noreferrer"},R6=t("td",{style:{"text-align":"center"}},null,-1),U6={style:{"text-align":"left"}},X6=t("code",null,"深度优先搜索",-1),Z6=t("code",null,"广度优先搜索",-1),G6=t("code",null,"图",-1),S6={style:{"text-align":"left"}},Y6=t("td",{style:{"text-align":"center"}},"3311",-1),$6={style:{"text-align":"left"}},t5={href:"https://leetcode.com/problems/construct-2d-grid-matching-graph-layout",target:"_blank",rel:"noopener noreferrer"},e5=t("td",{style:{"text-align":"center"}},null,-1),l5={style:{"text-align":"left"}},o5=t("code",null,"图",-1),n5=t("code",null,"数组",-1),s5=t("code",null,"哈希表",-1),d5=t("code",null,"1+",-1),_5={style:{"text-align":"left"}},c5=t("td",{style:{"text-align":"center"}},"LCP 04",-1),i5={style:{"text-align":"left"}},a5={href:"https://leetcode.cn/problems/broken-board-dominoes",target:"_blank",rel:"noopener noreferrer"},r5=t("td",{style:{"text-align":"center"}},null,-1),h5={style:{"text-align":"left"}},u5=t("code",null,"位运算",-1),f5=t("code",null,"图",-1),g5=t("code",null,"数组",-1),m5=t("code",null,"2+",-1),y5={style:{"text-align":"left"}},p5=t("td",{style:{"text-align":"center"}},"LCP 07",-1),x5={style:{"text-align":"left"}},b5={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},k5=t("td",{style:{"text-align":"center"}},null,-1),H5={style:{"text-align":"left"}},M5=t("code",null,"深度优先搜索",-1),I5=t("code",null,"广度优先搜索",-1),w5=t("code",null,"图",-1),v5=t("code",null,"1+",-1),q5={style:{"text-align":"left"}},L5=t("td",{style:{"text-align":"center"}},"LCP 16",-1),z5={style:{"text-align":"left"}},P5={href:"https://leetcode.cn/problems/you-le-yuan-de-you-lan-ji-hua",target:"_blank",rel:"noopener noreferrer"},C5=t("td",{style:{"text-align":"center"}},null,-1),E5={style:{"text-align":"left"}},O5=t("code",null,"图",-1),j5=t("code",null,"几何",-1),V5=t("code",null,"数学",-1),D5={style:{"text-align":"left"}},J5=t("td",{style:{"text-align":"center"}},"LCP 21",-1),K5={style:{"text-align":"left"}},A5={href:"https://leetcode.cn/problems/Za25hA",target:"_blank",rel:"noopener noreferrer"},B5=t("td",{style:{"text-align":"center"}},null,-1),N5={style:{"text-align":"left"}},T5=t("code",null,"深度优先搜索",-1),F5=t("code",null,"广度优先搜索",-1),W5=t("code",null,"图",-1),Q5=t("code",null,"1+",-1),R5={style:{"text-align":"left"}},U5=t("td",{style:{"text-align":"center"}},"LCP 35",-1),X5={style:{"text-align":"left"}},Z5={href:"https://leetcode.cn/problems/DFPeFJ",target:"_blank",rel:"noopener noreferrer"},G5=t("td",{style:{"text-align":"center"}},null,-1),S5={style:{"text-align":"left"}},Y5=t("code",null,"图",-1),$5=t("code",null,"最短路",-1),t8=t("code",null,"堆（优先队列）",-1),e8={style:{"text-align":"left"}},l8=t("td",{style:{"text-align":"center"}},"LCP 46",-1),o8={style:{"text-align":"left"}},n8={href:"https://leetcode.cn/problems/05ZEDJ",target:"_blank",rel:"noopener noreferrer"},s8=t("td",{style:{"text-align":"center"}},null,-1),d8={style:{"text-align":"left"}},_8=t("code",null,"图",-1),c8=t("code",null,"数组",-1),i8=t("code",null,"数学",-1),a8={style:{"text-align":"left"}},r8=t("td",{style:{"text-align":"center"}},"LCP 54",-1),h8={style:{"text-align":"left"}},u8={href:"https://leetcode.cn/problems/s5kipK",target:"_blank",rel:"noopener noreferrer"},f8=t("td",{style:{"text-align":"center"}},null,-1),g8={style:{"text-align":"left"}},m8=t("code",null,"图",-1),y8=t("code",null,"数组",-1),p8=t("code",null,"双连通分量",-1),x8={style:{"text-align":"left"}},b8=t("td",{style:{"text-align":"center"}},"LCP 56",-1),k8={style:{"text-align":"left"}},H8={href:"https://leetcode.cn/problems/6UEx57",target:"_blank",rel:"noopener noreferrer"},M8=t("td",{style:{"text-align":"center"}},null,-1),I8={style:{"text-align":"left"}},w8=t("code",null,"广度优先搜索",-1),v8=t("code",null,"图",-1),q8=t("code",null,"数组",-1),L8=t("code",null,"3+",-1),z8={style:{"text-align":"left"}},P8=t("td",{style:{"text-align":"center"}},"LCP 62",-1),C8={style:{"text-align":"left"}},E8={href:"https://leetcode.cn/problems/D9PW8w",target:"_blank",rel:"noopener noreferrer"},O8=t("td",{style:{"text-align":"center"}},null,-1),j8={style:{"text-align":"left"}},V8=t("code",null,"图",-1),D8={style:{"text-align":"left"}},J8=t("td",{style:{"text-align":"center"}},"LCP 63",-1),K8={style:{"text-align":"left"}},A8={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},B8=t("td",{style:{"text-align":"center"}},null,-1),N8={style:{"text-align":"left"}},T8=t("code",null,"深度优先搜索",-1),F8=t("code",null,"广度优先搜索",-1),W8=t("code",null,"图",-1),Q8=t("code",null,"5+",-1),R8={style:{"text-align":"left"}},U8=t("td",{style:{"text-align":"center"}},"剑指 Offer II 106",-1),X8={style:{"text-align":"left"}},Z8={href:"https://leetcode.cn/problems/vEAB3K",target:"_blank",rel:"noopener noreferrer"},G8=t("td",{style:{"text-align":"center"}},null,-1),S8={style:{"text-align":"left"}},Y8=t("code",null,"深度优先搜索",-1),$8=t("code",null,"广度优先搜索",-1),t7=t("code",null,"并查集",-1),e7=t("code",null,"1+",-1),l7={style:{"text-align":"left"}},o7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 110",-1),n7={style:{"text-align":"left"}},s7={href:"https://leetcode.cn/problems/bP4bmD",target:"_blank",rel:"noopener noreferrer"},d7=t("td",{style:{"text-align":"center"}},null,-1),_7={style:{"text-align":"left"}},c7=t("code",null,"深度优先搜索",-1),i7=t("code",null,"广度优先搜索",-1),a7=t("code",null,"图",-1),r7=t("code",null,"1+",-1),h7={style:{"text-align":"left"}},u7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),f7={style:{"text-align":"left"}},g7={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},m7=t("td",{style:{"text-align":"center"}},null,-1),y7={style:{"text-align":"left"}},p7=t("code",null,"深度优先搜索",-1),x7=t("code",null,"广度优先搜索",-1),b7=t("code",null,"并查集",-1),k7=t("code",null,"3+",-1),H7={style:{"text-align":"left"}},M7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),I7={style:{"text-align":"left"}},w7={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},v7=t("td",{style:{"text-align":"center"}},null,-1),q7={style:{"text-align":"left"}},L7=t("code",null,"深度优先搜索",-1),z7=t("code",null,"广度优先搜索",-1),P7=t("code",null,"图",-1),C7=t("code",null,"5+",-1),E7={style:{"text-align":"left"}},O7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 113",-1),j7={style:{"text-align":"left"}},V7={href:"https://leetcode.cn/problems/QA2IGt",target:"_blank",rel:"noopener noreferrer"},D7=t("td",{style:{"text-align":"center"}},null,-1),J7={style:{"text-align":"left"}},K7=t("code",null,"深度优先搜索",-1),A7=t("code",null,"广度优先搜索",-1),B7=t("code",null,"图",-1),N7=t("code",null,"1+",-1),T7={style:{"text-align":"left"}},F7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 114",-1),W7={style:{"text-align":"left"}},Q7={href:"https://leetcode.cn/problems/Jf1JuT",target:"_blank",rel:"noopener noreferrer"},R7=t("td",{style:{"text-align":"center"}},null,-1),U7={style:{"text-align":"left"}},X7=t("code",null,"深度优先搜索",-1),Z7=t("code",null,"广度优先搜索",-1),G7=t("code",null,"图",-1),S7=t("code",null,"3+",-1),Y7={style:{"text-align":"left"}},$7=t("td",{style:{"text-align":"center"}},"剑指 Offer II 115",-1),t9={style:{"text-align":"left"}},e9={href:"https://leetcode.cn/problems/ur2n8P",target:"_blank",rel:"noopener noreferrer"},l9=t("td",{style:{"text-align":"center"}},null,-1),o9={style:{"text-align":"left"}},n9=t("code",null,"图",-1),s9=t("code",null,"拓扑排序",-1),d9=t("code",null,"数组",-1),_9={style:{"text-align":"left"}},c9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 116",-1),i9={style:{"text-align":"left"}},a9={href:"https://leetcode.cn/problems/bLyHh0",target:"_blank",rel:"noopener noreferrer"},r9=t("td",{style:{"text-align":"center"}},null,-1),h9={style:{"text-align":"left"}},u9=t("code",null,"深度优先搜索",-1),f9=t("code",null,"广度优先搜索",-1),g9=t("code",null,"并查集",-1),m9=t("code",null,"1+",-1),y9={style:{"text-align":"left"}},p9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 118",-1),x9={style:{"text-align":"left"}},b9={href:"https://leetcode.cn/problems/7LpjUW",target:"_blank",rel:"noopener noreferrer"},k9=t("td",{style:{"text-align":"center"}},null,-1),H9={style:{"text-align":"left"}},M9=t("code",null,"深度优先搜索",-1),I9=t("code",null,"广度优先搜索",-1),w9=t("code",null,"并查集",-1),v9=t("code",null,"1+",-1),q9={style:{"text-align":"left"}},L9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 86",-1),z9={style:{"text-align":"left"}},P9={href:"https://leetcode.cn/problems/M99OJA",target:"_blank",rel:"noopener noreferrer"},C9=t("td",{style:{"text-align":"center"}},null,-1),E9={style:{"text-align":"left"}},O9=t("code",null,"深度优先搜索",-1),j9=t("code",null,"广度优先搜索",-1),V9=t("code",null,"图",-1),D9=t("code",null,"1+",-1),J9={style:{"text-align":"left"}},K9=t("td",{style:{"text-align":"center"}},"面试题 04.01",-1),A9={style:{"text-align":"left"}},B9={href:"https://leetcode.cn/problems/route-between-nodes-lcci",target:"_blank",rel:"noopener noreferrer"},N9=t("td",{style:{"text-align":"center"}},null,-1),T9={style:{"text-align":"left"}},F9=t("code",null,"深度优先搜索",-1),W9=t("code",null,"广度优先搜索",-1),Q9=t("code",null,"图",-1),R9={style:{"text-align":"left"}};function U9(X9,Z9){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[E]),_:1}),l(),O,l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[W]),_:1})]),Q,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[Pt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[jt]),_:1})])]),Vt,r(" prettier-ignore "),t("table",null,[Dt,t("tbody",null,[t("tr",null,[Jt,t("td",Kt,[t("a",At,[l("克隆图"),e(s)])]),t("td",Bt,[e(n,{to:"/leetcode/problem/0133.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Nt,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ft]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Wt]),_:1}),l(),Qt]),t("td",Rt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ut,t("td",Xt,[t("a",Zt,[l("课程表"),e(s)])]),t("td",Gt,[e(n,{to:"/leetcode/problem/0207.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",St,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[te]),_:1}),l(),ee]),t("td",le,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oe,t("td",ne,[t("a",se,[l("课程表 II"),e(s)])]),t("td",de,[e(n,{to:"/leetcode/problem/0210.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_e,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ie]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[ae]),_:1}),l(),re]),t("td",he,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[l("以图判树"),e(s)])]),me,t("td",ye,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[pe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[xe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[be]),_:1}),l(),ke]),t("td",He,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Me,t("td",Ie,[t("a",we,[l("火星词典"),e(s)])]),ve,t("td",qe,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Le]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ze]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Pe]),_:1}),l(),Ce]),t("td",Ee,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oe,t("td",je,[t("a",Ve,[l("搜寻名人"),e(s)])]),De,t("td",Je,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Ke]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[Ae]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[Be]),_:1})]),t("td",Ne,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Te,t("td",Fe,[t("a",We,[l("最小高度树"),e(s)])]),Qe,t("td",Re,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ue]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Xe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Ze]),_:1}),l(),Ge]),t("td",Se,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ye,t("td",$e,[t("a",tl,[l("无向图中连通分量的数目"),e(s)])]),el,t("td",ll,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ol]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[nl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[sl]),_:1}),l(),dl]),t("td",_l,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cl,t("td",il,[t("a",al,[l("矩阵中的最长递增路径"),e(s)])]),rl,t("td",hl,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ul]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[fl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[gl]),_:1}),l(),ml]),t("td",yl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pl,t("td",xl,[t("a",bl,[l("重新安排行程"),e(s)])]),kl,t("td",Hl,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ml]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Il]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[wl]),_:1})]),t("td",vl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ql,t("td",Ll,[t("a",zl,[l("除法求值"),e(s)])]),t("td",Pl,[e(n,{to:"/leetcode/problem/0399.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Cl,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[El]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ol]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[jl]),_:1}),l(),Vl]),t("td",Dl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jl,t("td",Kl,[t("a",Al,[l("序列重建"),e(s)])]),Bl,t("td",Nl,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Tl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[Fl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Wl]),_:1})]),t("td",Ql,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rl,t("td",Ul,[t("a",Xl,[l("迷宫 III"),e(s)])]),Zl,t("td",Gl,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Sl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Yl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[$l]),_:1}),l(),to]),t("td",eo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lo,t("td",oo,[t("a",no,[l("迷宫 II"),e(s)])]),so,t("td",_o,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[co]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[io]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[ao]),_:1}),l(),ro]),t("td",ho,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uo,t("td",fo,[t("a",go,[l("省份数量"),e(s)])]),mo,t("td",yo,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[po]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[xo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[bo]),_:1}),l(),ko]),t("td",Ho,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mo,t("td",Io,[t("a",wo,[l("设计 Excel 求和公式"),e(s)])]),vo,t("td",qo,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Lo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[zo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[Po]),_:1}),l(),Co]),t("td",Eo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oo,t("td",jo,[t("a",Vo,[l("冗余连接"),e(s)])]),Do,t("td",Jo,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ko]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ao]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Bo]),_:1}),l(),No]),t("td",To,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fo,t("td",Wo,[t("a",Qo,[l("冗余连接 II"),e(s)])]),Ro,t("td",Uo,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Xo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Zo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Go]),_:1}),l(),So]),t("td",Yo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$o,t("td",tn,[t("a",en,[l("网络延迟时间"),e(s)])]),ln,t("td",on,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[dn]),_:1}),l(),_n]),t("td",cn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[an,t("td",rn,[t("a",hn,[l("破解保险箱"),e(s)])]),un,t("td",fn,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[yn]),_:1})]),t("td",pn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xn,t("td",bn,[t("a",kn,[l("情侣牵手"),e(s)])]),Hn,t("td",Mn,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[In]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[vn]),_:1}),l(),qn]),t("td",Ln,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zn,t("td",Pn,[t("a",Cn,[l("判断二分图"),e(s)])]),En,t("td",On,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[jn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Vn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Dn]),_:1}),l(),Jn]),t("td",Kn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[An,t("td",Bn,[t("a",Nn,[l("K 站中转内最便宜的航班"),e(s)])]),Tn,t("td",Fn,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Wn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Rn]),_:1}),l(),Un]),t("td",Xn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zn,t("td",Gn,[t("a",Sn,[l("所有可能的路径"),e(s)])]),Yn,t("td",$n,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ts]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[es]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[ls]),_:1}),l(),os]),t("td",ns,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ss,t("td",ds,[t("a",_s,[l("找到最终的安全状态"),e(s)])]),cs,t("td",is,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[as]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[rs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[hs]),_:1}),l(),us]),t("td",fs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gs,t("td",ms,[t("a",ys,[l("树中距离之和"),e(s)])]),ps,t("td",xs,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[bs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ks]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Hs]),_:1}),l(),Ms]),t("td",Is,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ws,t("td",vs,[t("a",qs,[l("钥匙和房间"),e(s)])]),Ls,t("td",zs,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ps]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Cs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Es]),_:1})]),t("td",Os,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[js,t("td",Vs,[t("a",Ds,[l("访问所有节点的最短路径"),e(s)])]),Js,t("td",Ks,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[As]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Bs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Ns]),_:1}),l(),Ts]),t("td",Fs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ws,t("td",Qs,[t("a",Rs,[l("喧闹和富有"),e(s)])]),Us,t("td",Xs,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Zs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Gs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[Ss]),_:1}),l(),Ys]),t("td",$s,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[td,t("td",ed,[t("a",ld,[l("细分图中的可到达节点"),e(s)])]),od,t("td",nd,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[sd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[dd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[_d]),_:1})]),t("td",cd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[id,t("td",ad,[t("a",rd,[l("可能的二分法"),e(s)])]),hd,t("td",ud,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[gd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[md]),_:1}),l(),yd]),t("td",pd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xd,t("td",bd,[t("a",kd,[l("猫和老鼠"),e(s)])]),Hd,t("td",Md,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Id]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[wd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[vd]),_:1}),l(),qd]),t("td",Ld,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zd,t("td",Pd,[t("a",Cd,[l("尽量减少恶意软件的传播"),e(s)])]),Ed,t("td",Od,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[jd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Vd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Dd]),_:1}),l(),Jd]),t("td",Kd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ad,t("td",Bd,[t("a",Nd,[l("尽量减少恶意软件的传播 II"),e(s)])]),Td,t("td",Fd,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Wd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Qd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Rd]),_:1}),l(),Ud]),t("td",Xd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zd,t("td",Gd,[t("a",Sd,[l("移除最多的同行或同列石头"),e(s)])]),Yd,t("td",$d,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[t_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[e_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[l_]),_:1}),l(),o_]),t("td",n_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s_,t("td",d_,[t("a",__,[l("等式方程的可满足性"),e(s)])]),c_,t("td",i_,[e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[a_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[r_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[h_]),_:1}),l(),u_]),t("td",f_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g_,t("td",m_,[t("a",y_,[l("找到小镇的法官"),e(s)])]),p_,t("td",x_,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[b_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[k_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[H_]),_:1})]),t("td",M_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[I_,t("td",w_,[t("a",v_,[l("不邻接植花"),e(s)])]),q_,t("td",L_,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[z_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[P_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[C_]),_:1})]),t("td",E_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O_,t("td",j_,[t("a",V_,[l("从始点到终点的所有路径"),e(s)])]),D_,t("td",J_,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[K_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[A_]),_:1})]),t("td",B_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N_,t("td",T_,[t("a",F_,[l("颜色交替的最短路径"),e(s)])]),W_,t("td",Q_,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[R_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[U_]),_:1})]),t("td",X_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z_,t("td",G_,[t("a",S_,[l("最低成本连通所有城市"),e(s)])]),Y_,t("td",$_,[e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[tc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[ec]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[lc]),_:1}),l(),oc]),t("td",nc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sc,t("td",dc,[t("a",_c,[l("并行课程"),e(s)])]),cc,t("td",ic,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[ac]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[rc]),_:1})]),t("td",hc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uc,t("td",fc,[t("a",gc,[l("水资源分配优化"),e(s)])]),mc,t("td",yc,[e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[pc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[xc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[bc]),_:1}),l(),kc]),t("td",Hc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mc,t("td",Ic,[t("a",wc,[l("查找集群内的关键连接"),e(s)])]),vc,t("td",qc,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Lc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[zc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[Pc]),_:1})]),t("td",Cc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ec,t("td",Oc,[t("a",jc,[l("项目管理"),e(s)])]),Vc,t("td",Dc,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Jc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Kc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Ac]),_:1}),l(),Bc]),t("td",Nc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Tc,t("td",Fc,[t("a",Wc,[l("树的直径"),e(s)])]),Qc,t("td",Rc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Uc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Xc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Zc]),_:1}),l(),Gc]),t("td",Sc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yc,t("td",$c,[t("a",ti,[l("你能从盒子里获得的最大糖果数"),e(s)])]),ei,t("td",li,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[oi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[ni]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[si]),_:1})]),t("td",di,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_i,t("td",ci,[t("a",ii,[l("获取你好友已观看的视频"),e(s)])]),ai,t("td",ri,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[hi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[ui]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[fi]),_:1}),l(),gi]),t("td",mi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yi,t("td",pi,[t("a",xi,[l("连通网络的操作次数"),e(s)])]),bi,t("td",ki,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Hi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Mi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Ii]),_:1}),l(),wi]),t("td",vi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qi,t("td",Li,[t("a",zi,[l("阈值距离内邻居最少的城市"),e(s)])]),Pi,t("td",Ci,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Ei]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Oi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[ji]),_:1})]),t("td",Vi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Di,t("td",Ji,[t("a",Ki,[l("验证二叉树"),e(s)])]),Ai,t("td",Bi,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ni]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ti]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Fi]),_:1}),l(),Wi]),t("td",Qi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ri,t("td",Ui,[t("a",Xi,[l("使网格图至少有一条有效路径的最小代价"),e(s)])]),Zi,t("td",Gi,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Si]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Yi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[$i]),_:1}),l(),ta]),t("td",ea,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[la,t("td",oa,[t("a",na,[l("T 秒后青蛙的位置"),e(s)])]),sa,t("td",da,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_a]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ca]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ia]),_:1}),l(),aa]),t("td",ra,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ha,t("td",ua,[t("a",fa,[l("课程表 IV"),e(s)])]),ga,t("td",ma,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ya]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[pa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[xa]),_:1}),l(),ba]),t("td",ka,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ha,t("td",Ma,[t("a",Ia,[l("重新规划路线"),e(s)])]),wa,t("td",va,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[La]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[za]),_:1})]),t("td",Pa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ca,t("td",Ea,[t("a",Oa,[l("找到最小生成树里的关键边和伪关键边"),e(s)])]),ja,t("td",Va,[e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Da]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Ja]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[Ka]),_:1}),l(),Aa]),t("td",Ba,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Na,t("td",Ta,[t("a",Fa,[l("并行课程 II"),e(s)])]),Wa,t("td",Qa,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[Ra]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Ua]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Xa]),_:1}),l(),Za]),t("td",Ga,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sa,t("td",Ya,[t("a",$a,[l("概率最大的路径"),e(s)])]),tr,t("td",er,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[lr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[or]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[nr]),_:1}),l(),sr]),t("td",dr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_r,t("td",cr,[t("a",ir,[l("图中最相似的路径"),e(s)])]),ar,t("td",rr,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[hr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[ur]),_:1})]),t("td",fr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gr,t("td",mr,[t("a",yr,[l("可以到达所有点的最少点数目"),e(s)])]),pr,t("td",xr,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[br]),_:1})]),t("td",kr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hr,t("td",Mr,[t("a",Ir,[l("保证图可完全遍历"),e(s)])]),wr,t("td",vr,[e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[qr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Lr]),_:1})]),t("td",zr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pr,t("td",Cr,[t("a",Er,[l("连接所有点的最小费用"),e(s)])]),Or,t("td",jr,[e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Vr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Dr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Jr]),_:1}),l(),Kr]),t("td",Ar,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Br,t("td",Nr,[t("a",Tr,[l("奇怪的打印机 II"),e(s)])]),Fr,t("td",Wr,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Qr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[Rr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ur]),_:1}),l(),Xr]),t("td",Zr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gr,t("td",Sr,[t("a",Yr,[l("最大网络秩"),e(s)])]),$r,t("td",th,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[eh]),_:1})]),t("td",lh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oh,t("td",nh,[t("a",sh,[l("矩阵转换后的秩"),e(s)])]),dh,t("td",_h,[e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[ch]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[ih]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[ah]),_:1}),l(),rh]),t("td",hh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uh,t("td",fh,[t("a",gh,[l("检查边长度限制的路径是否存在"),e(s)])]),mh,t("td",yh,[e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[ph]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[xh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[bh]),_:1}),l(),kh]),t("td",Hh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mh,t("td",Ih,[t("a",wh,[l("重构一棵树的方案数"),e(s)])]),vh,t("td",qh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Lh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[zh]),_:1})]),t("td",Ph,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ch,t("td",Eh,[t("a",Oh,[l("检查边长度限制的路径是否存在 II"),e(s)])]),jh,t("td",Vh,[e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Dh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Jh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[Kh]),_:1})]),t("td",Ah,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bh,t("td",Nh,[t("a",Th,[l("猫和老鼠 II"),e(s)])]),Fh,t("td",Wh,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Qh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[Rh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[Uh]),_:1}),l(),Xh]),t("td",Zh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gh,t("td",Sh,[t("a",Yh,[l("一个图中连通三元组的最小度数"),e(s)])]),$h,t("td",t1,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[e1]),_:1})]),t("td",l1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o1,t("td",n1,[t("a",s1,[l("未知网格中的最短路径"),e(s)])]),d1,t("td",_1,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[c1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[i1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[a1]),_:1}),l(),r1]),t("td",h1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u1,t("td",f1,[t("a",g1,[l("统计点对的数目"),e(s)])]),m1,t("td",y1,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[p1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[x1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[b1]),_:1}),l(),k1]),t("td",H1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[M1,t("td",I1,[t("a",w1,[l("从第一个节点出发到最后一个节点的受限路径数"),e(s)])]),v1,t("td",q1,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[L1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[z1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[P1]),_:1}),l(),C1]),t("td",E1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O1,t("td",j1,[t("a",V1,[l("找出星型图的中心节点"),e(s)])]),D1,t("td",J1,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[K1]),_:1})]),t("td",A1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[B1,t("td",N1,[t("a",T1,[l("隐藏网格下的最小消耗路径"),e(s)])]),F1,t("td",W1,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Q1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[R1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[U1]),_:1}),l(),X1]),t("td",Z1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G1,t("td",S1,[t("a",Y1,[l("最多邀请的个数"),e(s)])]),$1,t("td",tu,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[eu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[lu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ou]),_:1}),l(),nu]),t("td",su,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[du,t("td",_u,[t("a",cu,[l("有向图中最大颜色值"),e(s)])]),iu,t("td",au,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[ru]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[hu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[uu]),_:1}),l(),fu]),t("td",gu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mu,t("td",yu,[t("a",pu,[l("统计为蚁群构筑房间的不同顺序"),e(s)])]),xu,t("td",bu,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ku]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Hu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[Mu]),_:1}),l(),Iu]),t("td",wu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vu,t("td",qu,[t("a",Lu,[l("规定时间内到达终点的最小花费"),e(s)])]),zu,t("td",Pu,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Cu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Eu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Ou]),_:1})]),t("td",ju,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vu,t("td",Du,[t("a",Ju,[l("寻找图中是否存在路径"),e(s)])]),Ku,t("td",Au,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Bu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Nu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Tu]),_:1}),l(),Fu]),t("td",Wu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Qu,t("td",Ru,[t("a",Uu,[l("到达目的地的方案数"),e(s)])]),Xu,t("td",Zu,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Gu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[Su]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Yu]),_:1}),l(),$u]),t("td",tf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ef,t("td",lf,[t("a",of,[l("网络空闲的时刻"),e(s)])]),nf,t("td",sf,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[df]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[_f]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[cf]),_:1})]),t("td",af,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rf,t("td",hf,[t("a",uf,[l("到达目的地的第二短时间"),e(s)])]),ff,t("td",gf,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[mf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[yf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[pf]),_:1})]),t("td",xf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bf,t("td",kf,[t("a",Hf,[l("并行课程 III"),e(s)])]),Mf,t("td",If,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[wf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[vf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[qf]),_:1}),l(),Lf]),t("td",zf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pf,t("td",Cf,[t("a",Ef,[l("最大化一张图中的路径价值"),e(s)])]),Of,t("td",jf,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Vf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Df]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[Jf]),_:1})]),t("td",Kf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Af,t("td",Bf,[t("a",Nf,[l("处理含限制条件的好友请求"),e(s)])]),Tf,t("td",Ff,[e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Wf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Qf]),_:1})]),t("td",Rf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Uf,t("td",Xf,[t("a",Zf,[l("殊途同归"),e(s)])]),Gf,t("td",Sf,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Yf]),_:1})]),t("td",$f,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tg,t("td",eg,[t("a",lg,[l("找出知晓秘密的所有专家"),e(s)])]),og,t("td",ng,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[sg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[dg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[_g]),_:1}),l(),cg]),t("td",ig,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ag,t("td",rg,[t("a",hg,[l("前往目标城市的最小费用"),e(s)])]),ug,t("td",fg,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[gg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[mg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[yg]),_:1})]),t("td",pg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xg,t("td",bg,[t("a",kg,[l("合法重新排列数对"),e(s)])]),Hg,t("td",Mg,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ig]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[wg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[vg]),_:1})]),t("td",qg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lg,t("td",zg,[t("a",Pg,[l("引爆最多的炸弹"),e(s)])]),Cg,t("td",Eg,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Og]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[jg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Vg]),_:1}),l(),Dg]),t("td",Jg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kg,t("td",Ag,[t("a",Bg,[l("从给定原材料中找到所有可以做出的菜"),e(s)])]),Ng,t("td",Tg,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Fg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[Wg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Qg]),_:1}),l(),Rg]),t("td",Ug,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xg,t("td",Zg,[t("a",Gg,[l("使矩阵中的 1 互不相邻的最小操作数"),e(s)])]),Sg,t("td",Yg,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[$g]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[tm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[em]),_:1})]),t("td",lm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[om,t("td",nm,[t("a",sm,[l("参加会议的最多员工数"),e(s)])]),dm,t("td",_m,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[cm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[im]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[am]),_:1})]),t("td",rm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hm,t("td",um,[t("a",fm,[l("有向无环图中一个节点的所有祖先"),e(s)])]),gm,t("td",mm,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ym]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[pm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[xm]),_:1}),l(),bm]),t("td",km,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hm,t("td",Mm,[t("a",Im,[l("得到要求路径的最小带权子图"),e(s)])]),wm,t("td",vm,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[qm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[Lm]),_:1})]),t("td",zm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pm,t("td",Cm,[t("a",Em,[l("无向图中到环的距离"),e(s)])]),Om,t("td",jm,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Vm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Dm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Jm]),_:1}),l(),Km]),t("td",Am,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bm,t("td",Nm,[t("a",Tm,[l("节点序列的最大得分"),e(s)])]),Fm,t("td",Wm,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Qm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Rm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[Um]),_:1}),l(),Xm]),t("td",Zm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gm,t("td",Sm,[t("a",Ym,[l("相邻字符不同的最长路径"),e(s)])]),$m,t("td",ty,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ey]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ly]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[oy]),_:1}),l(),ny]),t("td",sy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dy,t("td",_y,[t("a",cy,[l("K 条高速公路的最大旅行费用"),e(s)])]),iy,t("td",ay,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[ry]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[hy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[uy]),_:1}),l(),fy]),t("td",gy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[my,t("td",yy,[t("a",py,[l("道路的最大总重要性"),e(s)])]),xy,t("td",by,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[ky]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Hy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[My]),_:1}),l(),Iy]),t("td",wy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vy,t("td",qy,[t("a",Ly,[l("到达角落需要移除障碍物的最小数目"),e(s)])]),zy,t("td",Py,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Cy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Ey]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Oy]),_:1}),l(),jy]),t("td",Vy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dy,t("td",Jy,[t("a",Ky,[l("跳跃游戏 VIII"),e(s)])]),Ay,t("td",By,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ny]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Ty]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Fy]),_:1}),l(),Wy]),t("td",Qy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ry,t("td",Uy,[t("a",Xy,[l("检查方程中的矛盾之处"),e(s)])]),Zy,t("td",Gy,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Sy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Yy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[$y]),_:1}),l(),tp]),t("td",ep,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lp,t("td",op,[t("a",np,[l("统计无向图中无法互相到达点对数"),e(s)])]),sp,t("td",dp,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[_p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[cp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[ip]),_:1}),l(),ap]),t("td",rp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hp,t("td",up,[t("a",fp,[l("网格图中递增路径的数目"),e(s)])]),gp,t("td",mp,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[pp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[xp]),_:1}),l(),bp]),t("td",kp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hp,t("td",Mp,[t("a",Ip,[l("找到离给定两个节点最近的节点"),e(s)])]),wp,t("td",vp,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Lp]),_:1})]),t("td",zp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pp,t("td",Cp,[t("a",Ep,[l("图中的最长环"),e(s)])]),Op,t("td",jp,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Vp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Dp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[Jp]),_:1})]),t("td",Kp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ap,t("td",Bp,[t("a",Np,[l("受限条件下可到达节点的数目"),e(s)])]),Tp,t("td",Fp,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Wp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Qp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Rp]),_:1}),l(),Up]),t("td",Xp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zp,t("td",Gp,[t("a",Sp,[l("最小化网格中的最大值"),e(s)])]),Yp,t("td",$p,[e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[tx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[ex]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[lx]),_:1}),l(),ox]),t("td",nx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sx,t("td",dx,[t("a",_x,[l("边积分最高的节点"),e(s)])]),cx,t("td",ix,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[ax]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[rx]),_:1})]),t("td",hx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ux,t("td",fx,[t("a",gx,[l("给定条件下构造矩阵"),e(s)])]),mx,t("td",yx,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[px]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[xx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[bx]),_:1}),l(),kx]),t("td",Hx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mx,t("td",Ix,[t("a",wx,[l("好路径的数目"),e(s)])]),vx,t("td",qx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Lx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[zx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Px]),_:1}),l(),Cx]),t("td",Ex,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ox,t("td",jx,[t("a",Vx,[l("树上最大得分和路径"),e(s)])]),Dx,t("td",Jx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Kx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ax]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Bx]),_:1}),l(),Nx]),t("td",Tx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fx,t("td",Wx,[t("a",Qx,[l("购买苹果的最低成本"),e(s)])]),Rx,t("td",Ux,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Xx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Zx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[Gx]),_:1}),l(),Sx]),t("td",Yx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$x,t("td",t3,[t("a",e3,[l("到达首都的最少油耗"),e(s)])]),l3,t("td",o3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[n3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[s3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[d3]),_:1}),l(),_3]),t("td",c3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i3,t("td",a3,[t("a",r3,[l("两个不重叠子树的最大异或值"),e(s)])]),h3,t("td",u3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[f3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[g3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[m3]),_:1}),l(),y3]),t("td",p3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[x3,t("td",b3,[t("a",k3,[l("两个城市间路径的最小分数"),e(s)])]),H3,t("td",M3,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[I3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[w3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[v3]),_:1}),l(),q3]),t("td",L3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z3,t("td",P3,[t("a",C3,[l("将节点分成尽可能多的组"),e(s)])]),E3,t("td",O3,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[j3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[V3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[D3]),_:1})]),t("td",J3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K3,t("td",A3,[t("a",B3,[l("图中最大星和"),e(s)])]),N3,t("td",T3,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[F3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[W3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Q3]),_:1}),l(),R3]),t("td",U3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X3,t("td",Z3,[t("a",G3,[l("添加边使所有节点度数都为偶数"),e(s)])]),S3,t("td",Y3,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[$3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[tb]),_:1})]),t("td",eb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lb,t("td",ob,[t("a",nb,[l("在网格图中访问一个格子的最少时间"),e(s)])]),sb,t("td",db,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_b]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[cb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ib]),_:1}),l(),ab]),t("td",rb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hb,t("td",ub,[t("a",fb,[l("收集树中金币"),e(s)])]),gb,t("td",mb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[yb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[pb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[xb]),_:1}),l(),bb]),t("td",kb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hb,t("td",Mb,[t("a",Ib,[l("图中的最短环"),e(s)])]),wb,t("td",vb,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[qb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Lb]),_:1})]),t("td",zb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pb,t("td",Cb,[t("a",Eb,[l("设计可以求最短路径的图类"),e(s)])]),Ob,t("td",jb,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Vb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Db]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[Jb]),_:1}),l(),Kb]),t("td",Ab,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bb,t("td",Nb,[t("a",Tb,[l("最小化旅行的价格总和"),e(s)])]),Fb,t("td",Wb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Qb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Rb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Ub]),_:1}),l(),Xb]),t("td",Zb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gb,t("td",Sb,[t("a",Yb,[l("前往目标的最小代价"),e(s)])]),$b,t("td",t4,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[e4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[l4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[o4]),_:1}),l(),n4]),t("td",s4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d4,t("td",_4,[t("a",c4,[l("统计完全连通分量的数量"),e(s)])]),i4,t("td",a4,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[r4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[h4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[u4]),_:1})]),t("td",f4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g4,t("td",m4,[t("a",y4,[l("修改图中的边权"),e(s)])]),p4,t("td",x4,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[b4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[k4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[H4]),_:1})]),t("td",M4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[I4,t("td",w4,[t("a",v4,[l("找到 K 次跨越的最短路径"),e(s)])]),q4,t("td",L4,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[z4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[P4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[C4]),_:1})]),t("td",E4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[O4,t("td",j4,[t("a",V4,[l("找到最近的标记节点"),e(s)])]),D4,t("td",J4,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[K4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[A4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[B4]),_:1}),l(),N4]),t("td",T4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F4,t("td",W4,[t("a",Q4,[l("边权重均等查询"),e(s)])]),R4,t("td",U4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[X4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Z4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[G4]),_:1}),l(),S4]),t("td",Y4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$4,t("td",t2,[t("a",e2,[l("可以到达每一个节点的最少边反转次数"),e(s)])]),l2,t("td",o2,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[n2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[s2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[d2]),_:1}),l(),_2]),t("td",c2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i2,t("td",a2,[t("a",r2,[l("有向图访问计数"),e(s)])]),h2,t("td",u2,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[f2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[g2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[m2]),_:1})]),t("td",y2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p2,t("td",x2,[t("a",b2,[l("找到冠军 II"),e(s)])]),k2,t("td",H2,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[M2]),_:1})]),t("td",I2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w2,t("td",v2,[t("a",q2,[l("关闭分部的可行集合数目"),e(s)])]),L2,t("td",z2,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[P2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[C2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[E2]),_:1}),l(),O2]),t("td",j2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[V2,t("td",D2,[t("a",J2,[l("转换字符串的最小成本 I"),e(s)])]),K2,t("td",A2,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[B2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[N2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[T2]),_:1}),l(),F2]),t("td",W2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q2,t("td",R2,[t("a",U2,[l("转换字符串的最小成本 II"),e(s)])]),X2,t("td",Z2,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[G2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[S2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Y2]),_:1}),l(),$2]),t("td",t0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e0,t("td",l0,[t("a",o0,[l("按距离统计房屋对数目 I"),e(s)])]),n0,t("td",s0,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[d0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[_0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[c0]),_:1})]),t("td",i0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a0,t("td",r0,[t("a",h0,[l("按距离统计房屋对数目 II"),e(s)])]),u0,t("td",f0,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[g0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[m0]),_:1})]),t("td",y0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p0,t("td",x0,[t("a",b0,[l("带权图里旅途的最小代价"),e(s)])]),k0,t("td",H0,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[M0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[I0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[w0]),_:1}),l(),v0]),t("td",q0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[L0,t("td",z0,[t("a",P0,[l("访问消失节点的最少时间"),e(s)])]),C0,t("td",E0,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[O0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[j0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[V0]),_:1}),l(),D0]),t("td",J0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K0,t("td",A0,[t("a",B0,[l("最短路径中的边"),e(s)])]),N0,t("td",T0,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[F0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[W0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Q0]),_:1}),l(),R0]),t("td",U0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[X0,t("td",Z0,[t("a",G0,[l("合并两棵树后的最小直径"),e(s)])]),S0,t("td",Y0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[t6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[e6]),_:1}),l(),l6]),t("td",o6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n6,t("td",s6,[t("a",d6,[l("标记所有节点需要的时间"),e(s)])]),_6,t("td",c6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[i6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[a6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[r6]),_:1}),l(),h6]),t("td",u6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f6,t("td",g6,[t("a",m6,[l("新增道路查询后的最短距离 I"),e(s)])]),y6,t("td",p6,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[x6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[b6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[k6]),_:1})]),t("td",H6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M6,t("td",I6,[t("a",w6,[l("新增道路查询后的最短距离 II"),e(s)])]),v6,t("td",q6,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[L6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[z6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[P6]),_:1}),l(),C6]),t("td",E6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[O6,t("td",j6,[t("a",V6,[l("穿越网格图的安全路径"),e(s)])]),D6,t("td",J6,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[K6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[A6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[B6]),_:1}),l(),N6]),t("td",T6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F6,t("td",W6,[t("a",Q6,[l("移除可疑的方法"),e(s)])]),R6,t("td",U6,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[X6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Z6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[G6]),_:1})]),t("td",S6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y6,t("td",$6,[t("a",t5,[l("构造符合图结构的二维矩阵"),e(s)])]),e5,t("td",l5,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[o5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[n5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[s5]),_:1}),l(),d5]),t("td",_5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[c5,t("td",i5,[t("a",a5,[l("覆盖"),e(s)])]),r5,t("td",h5,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[u5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[f5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[g5]),_:1}),l(),m5]),t("td",y5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p5,t("td",x5,[t("a",b5,[l("传递信息"),e(s)])]),k5,t("td",H5,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[M5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[I5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[w5]),_:1}),l(),v5]),t("td",q5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[L5,t("td",z5,[t("a",P5,[l("游乐园的游览计划"),e(s)])]),C5,t("td",E5,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[O5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[j5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[V5]),_:1})]),t("td",D5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[J5,t("td",K5,[t("a",A5,[l("追逐游戏"),e(s)])]),B5,t("td",N5,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[T5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[F5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[W5]),_:1}),l(),Q5]),t("td",R5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[U5,t("td",X5,[t("a",Z5,[l("电动车游城市"),e(s)])]),G5,t("td",S5,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Y5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[$5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[t8]),_:1})]),t("td",e8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[l8,t("td",o8,[t("a",n8,[l("志愿者调配"),e(s)])]),s8,t("td",d8,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[_8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[c8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[i8]),_:1})]),t("td",a8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r8,t("td",h8,[t("a",u8,[l("夺回据点"),e(s)])]),f8,t("td",g8,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[m8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[p8]),_:1})]),t("td",x8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[b8,t("td",k8,[t("a",H8,[l("信物传送"),e(s)])]),M8,t("td",I8,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[w8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[v8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[q8]),_:1}),l(),L8]),t("td",z8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P8,t("td",C8,[t("a",E8,[l("交通枢纽"),e(s)])]),O8,t("td",j8,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[V8]),_:1})]),t("td",D8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J8,t("td",K8,[t("a",A8,[l("弹珠游戏"),e(s)])]),B8,t("td",N8,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[T8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[F8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[W8]),_:1}),l(),Q8]),t("td",R8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U8,t("td",X8,[t("a",Z8,[l("二分图"),e(s)])]),G8,t("td",S8,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Y8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[t7]),_:1}),l(),e7]),t("td",l7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o7,t("td",n7,[t("a",s7,[l("所有路径"),e(s)])]),d7,t("td",_7,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[c7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[i7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[a7]),_:1}),l(),r7]),t("td",h7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u7,t("td",f7,[t("a",g7,[l("计算除法"),e(s)])]),m7,t("td",y7,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[p7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[x7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[b7]),_:1}),l(),k7]),t("td",H7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M7,t("td",I7,[t("a",w7,[l("最长递增路径"),e(s)])]),v7,t("td",q7,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[L7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[z7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[P7]),_:1}),l(),C7]),t("td",E7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[O7,t("td",j7,[t("a",V7,[l("课程顺序"),e(s)])]),D7,t("td",J7,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[K7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[A7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[B7]),_:1}),l(),N7]),t("td",T7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F7,t("td",W7,[t("a",Q7,[l("外星文字典"),e(s)])]),R7,t("td",U7,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[X7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Z7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[G7]),_:1}),l(),S7]),t("td",Y7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$7,t("td",t9,[t("a",e9,[l("重建序列"),e(s)])]),l9,t("td",o9,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[n9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[s9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[d9]),_:1})]),t("td",_9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c9,t("td",i9,[t("a",a9,[l("省份数量"),e(s)])]),r9,t("td",h9,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[u9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[f9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[g9]),_:1}),l(),m9]),t("td",y9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p9,t("td",x9,[t("a",b9,[l("多余的边"),e(s)])]),k9,t("td",H9,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[M9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[I9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[w9]),_:1}),l(),v9]),t("td",q9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L9,t("td",z9,[t("a",P9,[l("分割回文子字符串"),e(s)])]),C9,t("td",E9,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[O9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[j9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[V9]),_:1}),l(),D9]),t("td",J9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K9,t("td",A9,[t("a",B9,[l("节点间通路"),e(s)])]),N9,t("td",T9,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[F9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[W9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Q9]),_:1})]),t("td",R9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const S9=c(h,[["render",U9],["__file","graph.html.vue"]]);export{S9 as default};
