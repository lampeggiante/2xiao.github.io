import{_ as c,r as d,o as i,c as r,a as t,b as o,d as e,w as l,f as _,e as u}from"./app-qrCIIj1V.js";const h={},p={id:"_1-两数之和",tabindex:"-1"},f=t("a",{class:"header-anchor",href:"#_1-两数之和","aria-hidden":"true"},"#",-1),g={href:"https://leetcode.com/problems/two-sum",target:"_blank",rel:"noopener noreferrer"},m=t("code",null,"数组",-1),y=t("code",null,"哈希表",-1),b={href:"https://leetcode.com/problems/two-sum",target:"_blank",rel:"noopener noreferrer"},x=t("code",null,"LeetCode",-1),k=u(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given an array of integers <code>nums</code> and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to<code>target</code></em>.</p><p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p><p>You can return the answer in any order.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: nums = [2,7,11,15], target = 9</p><p>Output: [0,1]</p><p>Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: nums = [3,2,4], target = 6</p><p>Output: [1,2]</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: nums = [3,3], target = 6</p><p>Output: [0,1]</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>2 &lt;= nums.length &lt;= 10^4</code></li><li><code>-10^9 &lt;= nums[i] &lt;= 10^9</code></li><li><code>-10^9 &lt;= target &lt;= 10^9</code></li><li><strong>Only one valid answer exists.</strong></li></ul><p><strong>Follow-up:</strong> Can you come up with an algorithm that is less than <code>O(n2)</code> time complexity?</p><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>在数组中找到 2 个数之和等于给定值的数字，结果返回 2 个数字在数组中的下标。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><p>使用哈希表，顺序扫描数组，对每一个元素，在 <code>object</code> 中找能组合给定值的另一半数字，如果找到了，直接返回 2 个数字的下标即可。如果找不到，就把这个数字存入 <code>object</code> 中，等待扫到“另一半”数字的时候，再取出来返回结果。</p><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n)</code>，其中 <code>n</code> 是字符串的长度。</li><li><strong>空间复杂度</strong>：<code>O(k)</code>，其中 <code>k</code> 是 <code>object</code> 中存放的数字数量，最坏情况下，需要扫描到最后一个数字才能找到结果，此时 <code>k</code> 会趋近 <code>n</code>。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">twoSum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> numsObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> another <span class="token operator">=</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>another <span class="token keyword">in</span> numsObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token punctuation">[</span>numsObj<span class="token punctuation">[</span>another<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		numsObj<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,22),j=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),w=t("td",{style:{"text-align":"center"}},"15",-1),v={style:{"text-align":"left"}},E={href:"https://leetcode.com/problems/3sum",target:"_blank",rel:"noopener noreferrer"},I={style:{"text-align":"center"}},O={style:{"text-align":"left"}},q=t("code",null,"数组",-1),M=t("code",null,"双指针",-1),C=t("code",null,"排序",-1),V={style:{"text-align":"left"}},K=t("td",{style:{"text-align":"center"}},"18",-1),L={style:{"text-align":"left"}},N={href:"https://leetcode.com/problems/4sum",target:"_blank",rel:"noopener noreferrer"},B={style:{"text-align":"center"}},R={style:{"text-align":"left"}},S=t("code",null,"数组",-1),Y=t("code",null,"双指针",-1),F=t("code",null,"排序",-1),G={style:{"text-align":"left"}},H=t("td",{style:{"text-align":"center"}},"167",-1),T={style:{"text-align":"left"}},z={href:"https://leetcode.com/problems/two-sum-ii-input-array-is-sorted",target:"_blank",rel:"noopener noreferrer"},A={style:{"text-align":"center"}},D={style:{"text-align":"left"}},J=t("code",null,"数组",-1),P=t("code",null,"双指针",-1),Q=t("code",null,"二分查找",-1),U={style:{"text-align":"left"}},W=t("td",{style:{"text-align":"center"}},"170",-1),X={style:{"text-align":"left"}},Z={href:"https://leetcode.com/problems/two-sum-iii-data-structure-design",target:"_blank",rel:"noopener noreferrer"},$=t("td",{style:{"text-align":"center"}},null,-1),tt={style:{"text-align":"left"}},et=t("code",null,"设计",-1),ot=t("code",null,"数组",-1),lt=t("code",null,"哈希表",-1),nt=t("code",null,"2+",-1),st={style:{"text-align":"left"}},at=t("td",{style:{"text-align":"center"}},"560",-1),dt={style:{"text-align":"left"}},ct={href:"https://leetcode.com/problems/subarray-sum-equals-k",target:"_blank",rel:"noopener noreferrer"},it={style:{"text-align":"center"}},rt={style:{"text-align":"left"}},_t=t("code",null,"数组",-1),ut=t("code",null,"哈希表",-1),ht=t("code",null,"前缀和",-1),pt={style:{"text-align":"left"}},ft=t("td",{style:{"text-align":"center"}},"653",-1),gt={style:{"text-align":"left"}},mt={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},yt=t("td",{style:{"text-align":"center"}},null,-1),bt={style:{"text-align":"left"}},xt=t("code",null,"树",-1),kt=t("code",null,"深度优先搜索",-1),jt=t("code",null,"广度优先搜索",-1),wt=t("code",null,"4+",-1),vt={style:{"text-align":"left"}},Et=t("td",{style:{"text-align":"center"}},"1099",-1),It={style:{"text-align":"left"}},Ot={href:"https://leetcode.com/problems/two-sum-less-than-k",target:"_blank",rel:"noopener noreferrer"},qt=t("td",{style:{"text-align":"center"}},null,-1),Mt={style:{"text-align":"left"}},Ct=t("code",null,"数组",-1),Vt=t("code",null,"双指针",-1),Kt=t("code",null,"二分查找",-1),Lt=t("code",null,"1+",-1),Nt={style:{"text-align":"left"}},Bt=t("td",{style:{"text-align":"center"}},"1679",-1),Rt={style:{"text-align":"left"}},St={href:"https://leetcode.com/problems/max-number-of-k-sum-pairs",target:"_blank",rel:"noopener noreferrer"},Yt=t("td",{style:{"text-align":"center"}},null,-1),Ft={style:{"text-align":"left"}},Gt=t("code",null,"数组",-1),Ht=t("code",null,"哈希表",-1),Tt=t("code",null,"双指针",-1),zt=t("code",null,"1+",-1),At={style:{"text-align":"left"}},Dt=t("td",{style:{"text-align":"center"}},"1711",-1),Jt={style:{"text-align":"left"}},Pt={href:"https://leetcode.com/problems/count-good-meals",target:"_blank",rel:"noopener noreferrer"},Qt=t("td",{style:{"text-align":"center"}},null,-1),Ut={style:{"text-align":"left"}},Wt=t("code",null,"数组",-1),Xt=t("code",null,"哈希表",-1),Zt={style:{"text-align":"left"}},$t=t("td",{style:{"text-align":"center"}},"2006",-1),te={style:{"text-align":"left"}},ee={href:"https://leetcode.com/problems/count-number-of-pairs-with-absolute-difference-k",target:"_blank",rel:"noopener noreferrer"},oe=t("td",{style:{"text-align":"center"}},null,-1),le={style:{"text-align":"left"}},ne=t("code",null,"数组",-1),se=t("code",null,"哈希表",-1),ae=t("code",null,"计数",-1),de={style:{"text-align":"left"}},ce=t("td",{style:{"text-align":"center"}},"2023",-1),ie={style:{"text-align":"left"}},re={href:"https://leetcode.com/problems/number-of-pairs-of-strings-with-concatenation-equal-to-target",target:"_blank",rel:"noopener noreferrer"},_e=t("td",{style:{"text-align":"center"}},null,-1),ue={style:{"text-align":"left"}},he=t("code",null,"数组",-1),pe=t("code",null,"哈希表",-1),fe=t("code",null,"字符串",-1),ge=t("code",null,"1+",-1),me={style:{"text-align":"left"}},ye=t("td",{style:{"text-align":"center"}},"2200",-1),be={style:{"text-align":"left"}},xe={href:"https://leetcode.com/problems/find-all-k-distant-indices-in-an-array",target:"_blank",rel:"noopener noreferrer"},ke=t("td",{style:{"text-align":"center"}},null,-1),je={style:{"text-align":"left"}},we=t("code",null,"数组",-1),ve=t("code",null,"双指针",-1),Ee={style:{"text-align":"left"}},Ie=t("td",{style:{"text-align":"center"}},"2351",-1),Oe={style:{"text-align":"left"}},qe={href:"https://leetcode.com/problems/first-letter-to-appear-twice",target:"_blank",rel:"noopener noreferrer"},Me=t("td",{style:{"text-align":"center"}},null,-1),Ce={style:{"text-align":"left"}},Ve=t("code",null,"位运算",-1),Ke=t("code",null,"哈希表",-1),Le=t("code",null,"字符串",-1),Ne=t("code",null,"1+",-1),Be={style:{"text-align":"left"}},Re=t("td",{style:{"text-align":"center"}},"2354",-1),Se={style:{"text-align":"left"}},Ye={href:"https://leetcode.com/problems/number-of-excellent-pairs",target:"_blank",rel:"noopener noreferrer"},Fe=t("td",{style:{"text-align":"center"}},null,-1),Ge={style:{"text-align":"left"}},He=t("code",null,"位运算",-1),Te=t("code",null,"数组",-1),ze=t("code",null,"哈希表",-1),Ae=t("code",null,"1+",-1),De={style:{"text-align":"left"}},Je=t("td",{style:{"text-align":"center"}},"2367",-1),Pe={style:{"text-align":"left"}},Qe={href:"https://leetcode.com/problems/number-of-arithmetic-triplets",target:"_blank",rel:"noopener noreferrer"},Ue=t("td",{style:{"text-align":"center"}},null,-1),We={style:{"text-align":"left"}},Xe=t("code",null,"数组",-1),Ze=t("code",null,"哈希表",-1),$e=t("code",null,"双指针",-1),to=t("code",null,"1+",-1),eo={style:{"text-align":"left"}},oo=t("td",{style:{"text-align":"center"}},"2374",-1),lo={style:{"text-align":"left"}},no={href:"https://leetcode.com/problems/node-with-highest-edge-score",target:"_blank",rel:"noopener noreferrer"},so=t("td",{style:{"text-align":"center"}},null,-1),ao={style:{"text-align":"left"}},co=t("code",null,"图",-1),io=t("code",null,"哈希表",-1),ro={style:{"text-align":"left"}},_o=t("td",{style:{"text-align":"center"}},"2395",-1),uo={style:{"text-align":"left"}},ho={href:"https://leetcode.com/problems/find-subarrays-with-equal-sum",target:"_blank",rel:"noopener noreferrer"},po=t("td",{style:{"text-align":"center"}},null,-1),fo={style:{"text-align":"left"}},go=t("code",null,"数组",-1),mo=t("code",null,"哈希表",-1),yo={style:{"text-align":"left"}},bo=t("td",{style:{"text-align":"center"}},"2399",-1),xo={style:{"text-align":"left"}},ko={href:"https://leetcode.com/problems/check-distances-between-same-letters",target:"_blank",rel:"noopener noreferrer"},jo=t("td",{style:{"text-align":"center"}},null,-1),wo={style:{"text-align":"left"}},vo=t("code",null,"数组",-1),Eo=t("code",null,"哈希表",-1),Io=t("code",null,"字符串",-1),Oo={style:{"text-align":"left"}},qo=t("td",{style:{"text-align":"center"}},"2441",-1),Mo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/largest-positive-integer-that-exists-with-its-negative",target:"_blank",rel:"noopener noreferrer"},Vo=t("td",{style:{"text-align":"center"}},null,-1),Ko={style:{"text-align":"left"}},Lo=t("code",null,"数组",-1),No=t("code",null,"哈希表",-1),Bo=t("code",null,"双指针",-1),Ro=t("code",null,"1+",-1),So={style:{"text-align":"left"}},Yo=t("td",{style:{"text-align":"center"}},"2465",-1),Fo={style:{"text-align":"left"}},Go={href:"https://leetcode.com/problems/number-of-distinct-averages",target:"_blank",rel:"noopener noreferrer"},Ho=t("td",{style:{"text-align":"center"}},null,-1),To={style:{"text-align":"left"}},zo=t("code",null,"数组",-1),Ao=t("code",null,"哈希表",-1),Do=t("code",null,"双指针",-1),Jo=t("code",null,"1+",-1),Po={style:{"text-align":"left"}},Qo=t("td",{style:{"text-align":"center"}},"2824",-1),Uo={style:{"text-align":"left"}},Wo={href:"https://leetcode.com/problems/count-pairs-whose-sum-is-less-than-target",target:"_blank",rel:"noopener noreferrer"},Xo=t("td",{style:{"text-align":"center"}},null,-1),Zo={style:{"text-align":"left"}},$o=t("code",null,"数组",-1),tl=t("code",null,"双指针",-1),el=t("code",null,"二分查找",-1),ol=t("code",null,"1+",-1),ll={style:{"text-align":"left"}};function nl(sl,al){const s=d("ExternalLinkIcon"),a=d("font"),n=d("RouterLink");return i(),r("div",null,[t("h1",p,[f,o(),t("a",g,[o("1. 两数之和"),e(s)])]),t("p",null,[o("🟢 "),e(a,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1}),o("  🔖  "),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[m]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[y]),_:1}),o("  🔗 "),t("a",b,[x,e(s)])]),k,_(" prettier-ignore "),t("table",null,[j,t("tbody",null,[t("tr",null,[w,t("td",v,[t("a",E,[o("三数之和"),e(s)])]),t("td",I,[e(n,{to:"/leetcode-js/problem/0015.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",O,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:l(()=>[C]),_:1})]),t("td",V,[e(a,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[K,t("td",L,[t("a",N,[o("四数之和"),e(s)])]),t("td",B,[e(n,{to:"/leetcode-js/problem/0018.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",R,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:l(()=>[F]),_:1})]),t("td",G,[e(a,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[H,t("td",T,[t("a",z,[o("两数之和 II - 输入有序数组"),e(s)])]),t("td",A,[e(n,{to:"/leetcode-js/problem/0167.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",D,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:l(()=>[Q]),_:1})]),t("td",U,[e(a,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[W,t("td",X,[t("a",Z,[o("两数之和 III - 数据结构设计"),e(s)])]),$,t("td",tt,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[lt]),_:1}),o(),nt]),t("td",st,[e(a,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[at,t("td",dt,[t("a",ct,[o("和为 K 的子数组"),e(s)])]),t("td",it,[e(n,{to:"/leetcode-js/problem/0560.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",rt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:l(()=>[ht]),_:1})]),t("td",pt,[e(a,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ft,t("td",gt,[t("a",mt,[o("两数之和 IV - 输入二叉搜索树"),e(s)])]),yt,t("td",bt,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[jt]),_:1}),o(),wt]),t("td",vt,[e(a,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Et,t("td",It,[t("a",Ot,[o("小于 K 的两数之和"),e(s)])]),qt,t("td",Mt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:l(()=>[Kt]),_:1}),o(),Lt]),t("td",Nt,[e(a,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Bt,t("td",Rt,[t("a",St,[o("K 和数对的最大数目"),e(s)])]),Yt,t("td",Ft,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Gt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:l(()=>[Tt]),_:1}),o(),zt]),t("td",At,[e(a,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Dt,t("td",Jt,[t("a",Pt,[o("大餐计数"),e(s)])]),Qt,t("td",Ut,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Wt]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[Xt]),_:1})]),t("td",Zt,[e(a,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[$t,t("td",te,[t("a",ee,[o("差的绝对值为 K 的数对数目"),e(s)])]),oe,t("td",le,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[ne]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[se]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/counting.html"},{default:l(()=>[ae]),_:1})]),t("td",de,[e(a,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ce,t("td",ie,[t("a",re,[o("连接后等于目标字符串的字符串对"),e(s)])]),_e,t("td",ue,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[he]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[pe]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:l(()=>[fe]),_:1}),o(),ge]),t("td",me,[e(a,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ye,t("td",be,[t("a",xe,[o("找出数组中的所有 K 近邻下标"),e(s)])]),ke,t("td",je,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[we]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:l(()=>[ve]),_:1})]),t("td",Ee,[e(a,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ie,t("td",Oe,[t("a",qe,[o("第一个出现两次的字母"),e(s)])]),Me,t("td",Ce,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:l(()=>[Ve]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[Ke]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:l(()=>[Le]),_:1}),o(),Ne]),t("td",Be,[e(a,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Re,t("td",Se,[t("a",Ye,[o("优质数对的数目"),e(s)])]),Fe,t("td",Ge,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:l(()=>[He]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Te]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[ze]),_:1}),o(),Ae]),t("td",De,[e(a,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Je,t("td",Pe,[t("a",Qe,[o("等差三元组的数目"),e(s)])]),Ue,t("td",We,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Xe]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[Ze]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:l(()=>[$e]),_:1}),o(),to]),t("td",eo,[e(a,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[oo,t("td",lo,[t("a",no,[o("边积分最高的节点"),e(s)])]),so,t("td",ao,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[co]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[io]),_:1})]),t("td",ro,[e(a,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_o,t("td",uo,[t("a",ho,[o("和相等的子数组"),e(s)])]),po,t("td",fo,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[go]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[mo]),_:1})]),t("td",yo,[e(a,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[bo,t("td",xo,[t("a",ko,[o("检查相同字母间的距离"),e(s)])]),jo,t("td",wo,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[vo]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[Eo]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:l(()=>[Io]),_:1})]),t("td",Oo,[e(a,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[qo,t("td",Mo,[t("a",Co,[o("与对应负数同时存在的最大正整数"),e(s)])]),Vo,t("td",Ko,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Lo]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[No]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:l(()=>[Bo]),_:1}),o(),Ro]),t("td",So,[e(a,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Yo,t("td",Fo,[t("a",Go,[o("不同的平均值数目"),e(s)])]),Ho,t("td",To,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[zo]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[Ao]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:l(()=>[Do]),_:1}),o(),Jo]),t("td",Po,[e(a,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Qo,t("td",Uo,[t("a",Wo,[o("统计和小于目标的下标对数目"),e(s)])]),Xo,t("td",Zo,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[$o]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:l(()=>[tl]),_:1}),o(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:l(()=>[el]),_:1}),o(),ol]),t("td",ll,[e(a,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])])])])])}const cl=c(h,[["render",nl],["__file","0001.html.vue"]]);export{cl as default};
