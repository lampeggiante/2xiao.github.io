import{_,r as c,o as i,c as a,a as t,d as e,w as o,b as l,f as u}from"./app-qrCIIj1V.js";const h={},r=t("h1",{id:"双向链表",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#双向链表","aria-hidden":"true"},"#"),l(" 双向链表")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),j=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),b=t("span",{class:"blue"},"双向链表",-1),p=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),I=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),M=t("code",null,"堆（优先队列）",-1),L=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),O=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),E=t("code",null,"二叉搜索树",-1),H=t("code",null,"最小生成树",-1),N=t("code",null,"图",-1),R=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),B=t("code",null,"最短路",-1),C=t("code",null,"强连通分量",-1),U=t("code",null,"欧拉回路",-1),D=t("code",null,"双连通分量",-1),F=t("code",null,"并查集",-1),Q=t("code",null,"字典树",-1),T=t("code",null,"线段树",-1),X=t("code",null,"树状数组",-1),A=t("code",null,"后缀数组",-1),G=t("p",null,[t("strong",null,"算法")],-1),J=t("code",null,"枚举",-1),K=t("code",null,"递归",-1),P=t("code",null,"分治",-1),S=t("code",null,"回溯",-1),W=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),jt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),pt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),Mt=t("code",null,"概率与统计",-1),Lt=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),Ot=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Et=t("code",null,"脑筋急转弯",-1),Ht=t("code",null,"交互",-1),Nt=t("code",null,"迭代器",-1),Rt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ct=t("td",{style:{"text-align":"center"}},"146",-1),Ut={style:{"text-align":"left"}},Dt={href:"https://leetcode.com/problems/lru-cache",target:"_blank",rel:"noopener noreferrer"},Ft={style:{"text-align":"center"}},Qt={style:{"text-align":"left"}},Tt=t("code",null,"设计",-1),Xt=t("code",null,"哈希表",-1),At=t("code",null,"链表",-1),Gt=t("code",null,"1+",-1),Jt={style:{"text-align":"left"}},Kt=t("td",{style:{"text-align":"center"}},"426",-1),Pt={style:{"text-align":"left"}},St={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},Wt={style:{"text-align":"center"}},Yt={style:{"text-align":"left"}},Zt=t("code",null,"栈",-1),$t=t("code",null,"树",-1),te=t("code",null,"深度优先搜索",-1),ee=t("code",null,"4+",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"430",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},de={style:{"text-align":"center"}},ce={style:{"text-align":"left"}},_e=t("code",null,"深度优先搜索",-1),ie=t("code",null,"链表",-1),ae=t("code",null,"双向链表",-1),ue={style:{"text-align":"left"}},he=t("td",{style:{"text-align":"center"}},"432",-1),re={style:{"text-align":"left"}},fe={href:"https://leetcode.com/problems/all-oone-data-structure",target:"_blank",rel:"noopener noreferrer"},ge={style:{"text-align":"center"}},me={style:{"text-align":"left"}},je=t("code",null,"设计",-1),ye=t("code",null,"哈希表",-1),xe=t("code",null,"链表",-1),be=t("code",null,"1+",-1),pe={style:{"text-align":"left"}},ke=t("td",{style:{"text-align":"center"}},"460",-1),Ie={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/lfu-cache",target:"_blank",rel:"noopener noreferrer"},Me=t("td",{style:{"text-align":"center"}},null,-1),Le={style:{"text-align":"left"}},we=t("code",null,"设计",-1),qe=t("code",null,"哈希表",-1),Oe=t("code",null,"链表",-1),ze=t("code",null,"1+",-1),Ee={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"716",-1),Ne={style:{"text-align":"left"}},Re={href:"https://leetcode.com/problems/max-stack",target:"_blank",rel:"noopener noreferrer"},Ve=t("td",{style:{"text-align":"center"}},null,-1),Be={style:{"text-align":"left"}},Ce=t("code",null,"栈",-1),Ue=t("code",null,"设计",-1),De=t("code",null,"链表",-1),Fe=t("code",null,"2+",-1),Qe={style:{"text-align":"left"}},Te=t("td",{style:{"text-align":"center"}},"1472",-1),Xe={style:{"text-align":"left"}},Ae={href:"https://leetcode.com/problems/design-browser-history",target:"_blank",rel:"noopener noreferrer"},Ge={style:{"text-align":"center"}},Je={style:{"text-align":"left"}},Ke=t("code",null,"栈",-1),Pe=t("code",null,"设计",-1),Se=t("code",null,"数组",-1),We=t("code",null,"3+",-1),Ye={style:{"text-align":"left"}},Ze=t("td",{style:{"text-align":"center"}},"1797",-1),$e={style:{"text-align":"left"}},tl={href:"https://leetcode.com/problems/design-authentication-manager",target:"_blank",rel:"noopener noreferrer"},el=t("td",{style:{"text-align":"center"}},null,-1),ll={style:{"text-align":"left"}},ol=t("code",null,"设计",-1),nl=t("code",null,"哈希表",-1),sl=t("code",null,"链表",-1),dl=t("code",null,"1+",-1),cl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"2296",-1),il={style:{"text-align":"left"}},al={href:"https://leetcode.com/problems/design-a-text-editor",target:"_blank",rel:"noopener noreferrer"},ul=t("td",{style:{"text-align":"center"}},null,-1),hl={style:{"text-align":"left"}},rl=t("code",null,"栈",-1),fl=t("code",null,"设计",-1),gl=t("code",null,"链表",-1),ml=t("code",null,"3+",-1),jl={style:{"text-align":"left"}},yl=t("td",{style:{"text-align":"center"}},"3263",-1),xl={style:{"text-align":"left"}},bl={href:"https://leetcode.com/problems/convert-doubly-linked-list-to-array-i",target:"_blank",rel:"noopener noreferrer"},pl=t("td",{style:{"text-align":"center"}},null,-1),kl={style:{"text-align":"left"}},Il=t("code",null,"数组",-1),vl=t("code",null,"链表",-1),Ml=t("code",null,"双向链表",-1),Ll={style:{"text-align":"left"}},wl=t("td",{style:{"text-align":"center"}},"3294",-1),ql={style:{"text-align":"left"}},Ol={href:"https://leetcode.com/problems/convert-doubly-linked-list-to-array-ii",target:"_blank",rel:"noopener noreferrer"},zl=t("td",{style:{"text-align":"center"}},null,-1),El={style:{"text-align":"left"}},Hl=t("code",null,"数组",-1),Nl=t("code",null,"链表",-1),Rl=t("code",null,"双向链表",-1),Vl={style:{"text-align":"left"}},Bl=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),Cl={style:{"text-align":"left"}},Ul={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},Dl={style:{"text-align":"center"}},Fl={style:{"text-align":"left"}},Ql=t("code",null,"栈",-1),Tl=t("code",null,"树",-1),Xl=t("code",null,"深度优先搜索",-1),Al=t("code",null,"4+",-1),Gl={style:{"text-align":"left"}},Jl=t("td",{style:{"text-align":"center"}},"剑指 Offer II 28",-1),Kl={style:{"text-align":"left"}},Pl={href:"https://leetcode.cn/problems/Qv1Da2",target:"_blank",rel:"noopener noreferrer"},Sl=t("td",{style:{"text-align":"center"}},null,-1),Wl={style:{"text-align":"left"}},Yl=t("code",null,"深度优先搜索",-1),Zl=t("code",null,"链表",-1),$l=t("code",null,"双向链表",-1),to={style:{"text-align":"left"}},eo=t("td",{style:{"text-align":"center"}},"剑指 Offer II 31",-1),lo={style:{"text-align":"left"}},oo={href:"https://leetcode.cn/problems/OrIXps",target:"_blank",rel:"noopener noreferrer"},no={style:{"text-align":"center"}},so={style:{"text-align":"left"}},co=t("code",null,"设计",-1),_o=t("code",null,"哈希表",-1),io=t("code",null,"链表",-1),ao=t("code",null,"1+",-1),uo={style:{"text-align":"left"}},ho=t("td",{style:{"text-align":"center"}},"面试题 16.25",-1),ro={style:{"text-align":"left"}},fo={href:"https://leetcode.cn/problems/lru-cache-lcci",target:"_blank",rel:"noopener noreferrer"},go={style:{"text-align":"center"}},mo={style:{"text-align":"left"}},jo=t("code",null,"设计",-1),yo=t("code",null,"哈希表",-1),xo=t("code",null,"链表",-1),bo=t("code",null,"1+",-1),po={style:{"text-align":"left"}};function ko(Io,vo){const n=c("RouterLink"),s=c("ExternalLinkIcon"),d=c("font");return i(),a("div",null,[r,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[x]),_:1}),l(),b,l(),e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/strongly-connected-component.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[A]),_:1})]),G,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bitmask.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),jt,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[yt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/reservoir-sampling.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rejection-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/database.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/interactive.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/iterator.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/concurrency.html"},{default:o(()=>[Rt]),_:1})])]),Vt,u(" prettier-ignore "),t("table",null,[Bt,t("tbody",null,[t("tr",null,[Ct,t("td",Ut,[t("a",Dt,[l("LRU 缓存"),e(s)])]),t("td",Ft,[e(n,{to:"/leetcode-js/problem/0146.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qt,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Tt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Xt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[At]),_:1}),l(),Gt]),t("td",Jt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kt,t("td",Pt,[t("a",St,[l("将二叉搜索树转化为排序的双向链表"),e(s)])]),t("td",Wt,[e(n,{to:"/leetcode-js/problem/0426.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yt,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[te]),_:1}),l(),ee]),t("td",le,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oe,t("td",ne,[t("a",se,[l("扁平化多级双向链表"),e(s)])]),t("td",de,[e(n,{to:"/leetcode-js/problem/0430.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ce,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[_e]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[ie]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[ae]),_:1})]),t("td",ue,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[he,t("td",re,[t("a",fe,[l("全 O(1) 的数据结构"),e(s)])]),t("td",ge,[e(n,{to:"/leetcode-js/problem/0432.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",me,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[je]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[ye]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[xe]),_:1}),l(),be]),t("td",pe,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ke,t("td",Ie,[t("a",ve,[l("LFU 缓存"),e(s)])]),Me,t("td",Le,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[we]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[qe]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[Oe]),_:1}),l(),ze]),t("td",Ee,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[He,t("td",Ne,[t("a",Re,[l("最大栈"),e(s)])]),Ve,t("td",Be,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Ce]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Ue]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[De]),_:1}),l(),Fe]),t("td",Qe,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Te,t("td",Xe,[t("a",Ae,[l("设计浏览器历史记录"),e(s)])]),t("td",Ge,[e(n,{to:"/leetcode-js/problem/1472.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Je,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Ke]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Pe]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Se]),_:1}),l(),We]),t("td",Ye,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ze,t("td",$e,[t("a",tl,[l("设计一个验证系统"),e(s)])]),el,t("td",ll,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[ol]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[nl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[sl]),_:1}),l(),dl]),t("td",cl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_l,t("td",il,[t("a",al,[l("设计一个文本编辑器"),e(s)])]),ul,t("td",hl,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[rl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[fl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[gl]),_:1}),l(),ml]),t("td",jl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yl,t("td",xl,[t("a",bl,[l("将双链表转换为数组 I"),e(s)])]),pl,t("td",kl,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Il]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[vl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[Ml]),_:1})]),t("td",Ll,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wl,t("td",ql,[t("a",Ol,[l("将双链表转换为数组 II"),e(s)])]),zl,t("td",El,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Hl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[Nl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[Rl]),_:1})]),t("td",Vl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bl,t("td",Cl,[t("a",Ul,[l("二叉搜索树与双向链表"),e(s)])]),t("td",Dl,[e(n,{to:"/leetcode-js/problem/jz_offer_36_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Fl,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Ql]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Tl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Xl]),_:1}),l(),Al]),t("td",Gl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jl,t("td",Kl,[t("a",Pl,[l("展平多级双向链表"),e(s)])]),Sl,t("td",Wl,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Yl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[Zl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[$l]),_:1})]),t("td",to,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eo,t("td",lo,[t("a",oo,[l("最近最少使用缓存"),e(s)])]),t("td",no,[e(n,{to:"/leetcode-js/problem/jz_offer_II_031.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",so,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[co]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[_o]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[io]),_:1}),l(),ao]),t("td",uo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ho,t("td",ro,[t("a",fo,[l("LRU 缓存"),e(s)])]),t("td",go,[e(n,{to:"/leetcode-js/problem/i_16.25.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",mo,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[jo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[yo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[xo]),_:1}),l(),bo]),t("td",po,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const Lo=_(h,[["render",ko],["__file","doubly-linked-list.html.vue"]]);export{Lo as default};
