import{_ as c,r as i,o as _,c as a,a as t,d as e,w as o,b as l,f as u}from"./app-GnK0vSxb.js";const h={},r=t("h1",{id:"滚动哈希",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#滚动哈希","aria-hidden":"true"},"#"),l(" 滚动哈希")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),w=t("code",null,"单调栈",-1),I=t("code",null,"队列",-1),H=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),M=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),N=t("code",null,"字符串匹配",-1),E=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),V=t("code",null,"二叉搜索树",-1),z=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),K=t("code",null,"拓扑排序",-1),R=t("code",null,"最短路",-1),j=t("code",null,"强连通分量",-1),A=t("code",null,"欧拉回路",-1),D=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),F=t("code",null,"字典树",-1),G=t("code",null,"线段树",-1),J=t("code",null,"树状数组",-1),O=t("code",null,"后缀数组",-1),P=t("p",null,[t("strong",null,"算法")],-1),Q=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),it=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("span",{class:"blue"},"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),wt=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),Mt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Nt=t("code",null,"数据库",-1),Et=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Vt=t("code",null,"脑筋急转弯",-1),zt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Kt=t("hr",null,null,-1),Rt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),jt=t("td",{style:{"text-align":"center"}},"187",-1),At={style:{"text-align":"left"}},Dt={href:"https://leetcode.com/problems/repeated-dna-sequences",target:"_blank",rel:"noopener noreferrer"},Tt=t("td",{style:{"text-align":"center"}},null,-1),Ft={style:{"text-align":"left"}},Gt=t("code",null,"位运算",-1),Jt=t("code",null,"哈希表",-1),Ot=t("code",null,"字符串",-1),Pt=t("code",null,"3+",-1),Qt={style:{"text-align":"left"}},St=t("td",{style:{"text-align":"center"}},"214",-1),Ut={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",{style:{"text-align":"center"}},null,-1),Yt={style:{"text-align":"left"}},Zt=t("code",null,"字符串",-1),$t=t("code",null,"字符串匹配",-1),te=t("code",null,"哈希函数",-1),ee=t("code",null,"1+",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"718",-1),ne={style:{"text-align":"left"}},de={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},null,-1),ie={style:{"text-align":"left"}},ce=t("code",null,"数组",-1),_e=t("code",null,"二分查找",-1),ae=t("code",null,"动态规划",-1),ue=t("code",null,"3+",-1),he={style:{"text-align":"left"}},re=t("td",{style:{"text-align":"center"}},"1044",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/longest-duplicate-substring",target:"_blank",rel:"noopener noreferrer"},me=t("td",{style:{"text-align":"center"}},null,-1),ye={style:{"text-align":"left"}},xe=t("code",null,"字符串",-1),pe=t("code",null,"二分查找",-1),be=t("code",null,"后缀数组",-1),ke=t("code",null,"3+",-1),we={style:{"text-align":"left"}},Ie=t("td",{style:{"text-align":"center"}},"1062",-1),He={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},Me=t("td",{style:{"text-align":"center"}},null,-1),qe={style:{"text-align":"left"}},Ne=t("code",null,"字符串",-1),Ee=t("code",null,"二分查找",-1),Le=t("code",null,"动态规划",-1),Ve=t("code",null,"3+",-1),ze={style:{"text-align":"left"}},Be=t("td",{style:{"text-align":"center"}},"1147",-1),Ce={style:{"text-align":"left"}},Ke={href:"https://leetcode.com/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},Re=t("td",{style:{"text-align":"center"}},null,-1),je={style:{"text-align":"left"}},Ae=t("code",null,"贪心",-1),De=t("code",null,"双指针",-1),Te=t("code",null,"字符串",-1),Fe=t("code",null,"3+",-1),Ge={style:{"text-align":"left"}},Je=t("td",{style:{"text-align":"center"}},"1316",-1),Oe={style:{"text-align":"left"}},Pe={href:"https://leetcode.com/problems/distinct-echo-substrings",target:"_blank",rel:"noopener noreferrer"},Qe=t("td",{style:{"text-align":"center"}},null,-1),Se={style:{"text-align":"left"}},Ue=t("code",null,"字典树",-1),We=t("code",null,"字符串",-1),Xe=t("code",null,"哈希函数",-1),Ye=t("code",null,"1+",-1),Ze={style:{"text-align":"left"}},$e=t("td",{style:{"text-align":"center"}},"1392",-1),tl={style:{"text-align":"left"}},el={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},ll=t("td",{style:{"text-align":"center"}},null,-1),ol={style:{"text-align":"left"}},nl=t("code",null,"字符串",-1),dl=t("code",null,"字符串匹配",-1),sl=t("code",null,"哈希函数",-1),il=t("code",null,"1+",-1),cl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"1461",-1),al={style:{"text-align":"left"}},ul={href:"https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k",target:"_blank",rel:"noopener noreferrer"},hl=t("td",{style:{"text-align":"center"}},null,-1),rl={style:{"text-align":"left"}},fl=t("code",null,"位运算",-1),gl=t("code",null,"哈希表",-1),ml=t("code",null,"字符串",-1),yl=t("code",null,"2+",-1),xl={style:{"text-align":"left"}},pl=t("td",{style:{"text-align":"center"}},"1554",-1),bl={style:{"text-align":"left"}},kl={href:"https://leetcode.com/problems/strings-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},wl=t("td",{style:{"text-align":"center"}},null,-1),Il={style:{"text-align":"left"}},Hl=t("code",null,"哈希表",-1),vl=t("code",null,"字符串",-1),Ml=t("code",null,"哈希函数",-1),ql=t("code",null,"1+",-1),Nl={style:{"text-align":"left"}},El=t("td",{style:{"text-align":"center"}},"1698",-1),Ll={style:{"text-align":"left"}},Vl={href:"https://leetcode.com/problems/number-of-distinct-substrings-in-a-string",target:"_blank",rel:"noopener noreferrer"},zl=t("td",{style:{"text-align":"center"}},null,-1),Bl={style:{"text-align":"left"}},Cl=t("code",null,"字典树",-1),Kl=t("code",null,"字符串",-1),Rl=t("code",null,"后缀数组",-1),jl=t("code",null,"2+",-1),Al={style:{"text-align":"left"}},Dl=t("td",{style:{"text-align":"center"}},"1923",-1),Tl={style:{"text-align":"left"}},Fl={href:"https://leetcode.com/problems/longest-common-subpath",target:"_blank",rel:"noopener noreferrer"},Gl=t("td",{style:{"text-align":"center"}},null,-1),Jl={style:{"text-align":"left"}},Ol=t("code",null,"数组",-1),Pl=t("code",null,"二分查找",-1),Ql=t("code",null,"后缀数组",-1),Sl=t("code",null,"2+",-1),Ul={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"1960",-1),Xl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},Zl=t("td",{style:{"text-align":"center"}},null,-1),$l={style:{"text-align":"left"}},to=t("code",null,"字符串",-1),eo=t("code",null,"哈希函数",-1),lo=t("code",null,"滚动哈希",-1),oo={style:{"text-align":"left"}},no=t("td",{style:{"text-align":"center"}},"2156",-1),so={style:{"text-align":"left"}},io={href:"https://leetcode.com/problems/find-substring-with-given-hash-value",target:"_blank",rel:"noopener noreferrer"},co=t("td",{style:{"text-align":"center"}},null,-1),_o={style:{"text-align":"left"}},ao=t("code",null,"字符串",-1),uo=t("code",null,"滑动窗口",-1),ho=t("code",null,"哈希函数",-1),ro=t("code",null,"1+",-1),fo={style:{"text-align":"left"}},go=t("td",{style:{"text-align":"center"}},"2168",-1),mo={style:{"text-align":"left"}},yo={href:"https://leetcode.com/problems/unique-substrings-with-equal-digit-frequency",target:"_blank",rel:"noopener noreferrer"},xo=t("td",{style:{"text-align":"center"}},null,-1),po={style:{"text-align":"left"}},bo=t("code",null,"哈希表",-1),ko=t("code",null,"字符串",-1),wo=t("code",null,"计数",-1),Io=t("code",null,"2+",-1),Ho={style:{"text-align":"left"}},vo=t("td",{style:{"text-align":"center"}},"2223",-1),Mo={style:{"text-align":"left"}},qo={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},No=t("td",{style:{"text-align":"center"}},null,-1),Eo={style:{"text-align":"left"}},Lo=t("code",null,"字符串",-1),Vo=t("code",null,"二分查找",-1),zo=t("code",null,"字符串匹配",-1),Bo=t("code",null,"3+",-1),Co={style:{"text-align":"left"}},Ko=t("td",{style:{"text-align":"center"}},"2261",-1),Ro={style:{"text-align":"left"}},jo={href:"https://leetcode.com/problems/k-divisible-elements-subarrays",target:"_blank",rel:"noopener noreferrer"},Ao={style:{"text-align":"center"}},Do={style:{"text-align":"left"}},To=t("code",null,"字典树",-1),Fo=t("code",null,"数组",-1),Go=t("code",null,"哈希表",-1),Jo=t("code",null,"3+",-1),Oo={style:{"text-align":"left"}},Po=t("td",{style:{"text-align":"center"}},"2430",-1),Qo={style:{"text-align":"left"}},So={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},Uo=t("td",{style:{"text-align":"center"}},null,-1),Wo={style:{"text-align":"left"}},Xo=t("code",null,"字符串",-1),Yo=t("code",null,"动态规划",-1),Zo=t("code",null,"字符串匹配",-1),$o=t("code",null,"2+",-1),tn={style:{"text-align":"left"}},en=t("td",{style:{"text-align":"center"}},"3006",-1),ln={style:{"text-align":"left"}},on={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},nn=t("td",{style:{"text-align":"center"}},null,-1),dn={style:{"text-align":"left"}},sn=t("code",null,"双指针",-1),cn=t("code",null,"字符串",-1),_n=t("code",null,"二分查找",-1),an=t("code",null,"3+",-1),un={style:{"text-align":"left"}},hn=t("td",{style:{"text-align":"center"}},"3008",-1),rn={style:{"text-align":"left"}},fn={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},gn=t("td",{style:{"text-align":"center"}},null,-1),mn={style:{"text-align":"left"}},yn=t("code",null,"双指针",-1),xn=t("code",null,"字符串",-1),pn=t("code",null,"二分查找",-1),bn=t("code",null,"3+",-1),kn={style:{"text-align":"left"}},wn=t("td",{style:{"text-align":"center"}},"3023",-1),In={style:{"text-align":"left"}},Hn={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},vn=t("td",{style:{"text-align":"center"}},null,-1),Mn={style:{"text-align":"left"}},qn=t("code",null,"数组",-1),Nn=t("code",null,"字符串匹配",-1),En=t("code",null,"滑动窗口",-1),Ln=t("code",null,"2+",-1),Vn={style:{"text-align":"left"}},zn=t("td",{style:{"text-align":"center"}},"3029",-1),Bn={style:{"text-align":"left"}},Cn={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},Kn=t("td",{style:{"text-align":"center"}},null,-1),Rn={style:{"text-align":"left"}},jn=t("code",null,"字符串",-1),An=t("code",null,"字符串匹配",-1),Dn=t("code",null,"哈希函数",-1),Tn=t("code",null,"1+",-1),Fn={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"3031",-1),Jn={style:{"text-align":"left"}},On={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},Pn=t("td",{style:{"text-align":"center"}},null,-1),Qn={style:{"text-align":"left"}},Sn=t("code",null,"字符串",-1),Un=t("code",null,"字符串匹配",-1),Wn=t("code",null,"哈希函数",-1),Xn=t("code",null,"1+",-1),Yn={style:{"text-align":"left"}},Zn=t("td",{style:{"text-align":"center"}},"3034",-1),$n={style:{"text-align":"left"}},td={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},null,-1),ld={style:{"text-align":"left"}},od=t("code",null,"数组",-1),nd=t("code",null,"字符串匹配",-1),dd=t("code",null,"哈希函数",-1),sd=t("code",null,"1+",-1),id={style:{"text-align":"left"}},cd=t("td",{style:{"text-align":"center"}},"3036",-1),_d={style:{"text-align":"left"}},ad={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},ud=t("td",{style:{"text-align":"center"}},null,-1),hd={style:{"text-align":"left"}},rd=t("code",null,"数组",-1),fd=t("code",null,"字符串匹配",-1),gd=t("code",null,"哈希函数",-1),md=t("code",null,"1+",-1),yd={style:{"text-align":"left"}},xd=t("td",{style:{"text-align":"center"}},"3037",-1),pd={style:{"text-align":"left"}},bd={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},kd=t("td",{style:{"text-align":"center"}},null,-1),wd={style:{"text-align":"left"}},Id=t("code",null,"数组",-1),Hd=t("code",null,"字符串匹配",-1),vd=t("code",null,"滑动窗口",-1),Md=t("code",null,"2+",-1),qd={style:{"text-align":"left"}},Nd=t("td",{style:{"text-align":"center"}},"3042",-1),Ed={style:{"text-align":"left"}},Ld={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},Vd=t("td",{style:{"text-align":"center"}},null,-1),zd={style:{"text-align":"left"}},Bd=t("code",null,"字典树",-1),Cd=t("code",null,"数组",-1),Kd=t("code",null,"字符串",-1),Rd=t("code",null,"3+",-1),jd={style:{"text-align":"left"}},Ad=t("td",{style:{"text-align":"center"}},"3045",-1),Dd={style:{"text-align":"left"}},Td={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},null,-1),Gd={style:{"text-align":"left"}},Jd=t("code",null,"字典树",-1),Od=t("code",null,"数组",-1),Pd=t("code",null,"字符串",-1),Qd=t("code",null,"3+",-1),Sd={style:{"text-align":"left"}},Ud=t("td",{style:{"text-align":"center"}},"3291",-1),Wd={style:{"text-align":"left"}},Xd={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Yd=t("td",{style:{"text-align":"center"}},null,-1),Zd={style:{"text-align":"left"}},$d=t("code",null,"字典树",-1),ts=t("code",null,"线段树",-1),es=t("code",null,"数组",-1),ls=t("code",null,"6+",-1),os={style:{"text-align":"left"}},ns=t("td",{style:{"text-align":"center"}},"3292",-1),ds={style:{"text-align":"left"}},ss={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},is=t("td",{style:{"text-align":"center"}},null,-1),cs={style:{"text-align":"left"}},_s=t("code",null,"线段树",-1),as=t("code",null,"数组",-1),us=t("code",null,"字符串",-1),hs=t("code",null,"5+",-1),rs={style:{"text-align":"left"}},fs=t("td",{style:{"text-align":"center"}},"面试题 17.13",-1),gs={style:{"text-align":"left"}},ms={href:"https://leetcode.cn/problems/re-space-lcci",target:"_blank",rel:"noopener noreferrer"},ys=t("td",{style:{"text-align":"center"}},null,-1),xs={style:{"text-align":"left"}},ps=t("code",null,"字典树",-1),bs=t("code",null,"数组",-1),ks=t("code",null,"哈希表",-1),ws=t("code",null,"4+",-1),Is={style:{"text-align":"left"}};function Hs(vs,Ms){const n=i("RouterLink"),d=i("ExternalLinkIcon"),s=i("font");return _(),a("div",null,[r,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[O]),_:1})]),P,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),gt,l(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:o(()=>[Vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Ct]),_:1})])]),Kt,u(" prettier-ignore "),t("table",null,[Rt,t("tbody",null,[t("tr",null,[jt,t("td",At,[t("a",Dt,[l("重复的DNA序列"),e(d)])]),Tt,t("td",Ft,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[Gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Jt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Ot]),_:1}),l(),Pt]),t("td",Qt,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[St,t("td",Ut,[t("a",Wt,[l("最短回文串"),e(d)])]),Xt,t("td",Yt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[te]),_:1}),l(),ee]),t("td",le,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oe,t("td",ne,[t("a",de,[l("最长重复子数组"),e(d)])]),se,t("td",ie,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[_e]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[ae]),_:1}),l(),ue]),t("td",he,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[re,t("td",fe,[t("a",ge,[l("最长重复子串"),e(d)])]),me,t("td",ye,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[xe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[pe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[be]),_:1}),l(),ke]),t("td",we,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ie,t("td",He,[t("a",ve,[l("最长重复子串"),e(d)])]),Me,t("td",qe,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Ne]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[Ee]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Le]),_:1}),l(),Ve]),t("td",ze,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Be,t("td",Ce,[t("a",Ke,[l("段式回文"),e(d)])]),Re,t("td",je,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Ae]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[De]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Te]),_:1}),l(),Fe]),t("td",Ge,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Je,t("td",Oe,[t("a",Pe,[l("不同的循环子字符串"),e(d)])]),Qe,t("td",Se,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Ue]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[We]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[Xe]),_:1}),l(),Ye]),t("td",Ze,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$e,t("td",tl,[t("a",el,[l("最长快乐前缀"),e(d)])]),ll,t("td",ol,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[nl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[dl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[sl]),_:1}),l(),il]),t("td",cl,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_l,t("td",al,[t("a",ul,[l("检查一个字符串是否包含所有长度为 K 的二进制子串"),e(d)])]),hl,t("td",rl,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[fl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[gl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[ml]),_:1}),l(),yl]),t("td",xl,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pl,t("td",bl,[t("a",kl,[l("只有一个不同字符的字符串"),e(d)])]),wl,t("td",Il,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Hl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[vl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[Ml]),_:1}),l(),ql]),t("td",Nl,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[El,t("td",Ll,[t("a",Vl,[l("字符串的不同子字符串个数"),e(d)])]),zl,t("td",Bl,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Cl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Kl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[Rl]),_:1}),l(),jl]),t("td",Al,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dl,t("td",Tl,[t("a",Fl,[l("最长公共子路径"),e(d)])]),Gl,t("td",Jl,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ol]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[Pl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[Ql]),_:1}),l(),Sl]),t("td",Ul,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wl,t("td",Xl,[t("a",Yl,[l("两个回文子字符串长度的最大乘积"),e(d)])]),Zl,t("td",$l,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[to]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[eo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:o(()=>[lo]),_:1})]),t("td",oo,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[no,t("td",so,[t("a",io,[l("查找给定哈希值的子串"),e(d)])]),co,t("td",_o,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[ao]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[uo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[ho]),_:1}),l(),ro]),t("td",fo,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[go,t("td",mo,[t("a",yo,[l("每个数字的频率都相同的独特子字符串的数量"),e(d)])]),xo,t("td",po,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[bo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[ko]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[wo]),_:1}),l(),Io]),t("td",Ho,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vo,t("td",Mo,[t("a",qo,[l("构造字符串的总得分和"),e(d)])]),No,t("td",Eo,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Lo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[Vo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[zo]),_:1}),l(),Bo]),t("td",Co,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ko,t("td",Ro,[t("a",jo,[l("含最多 K 个可整除元素的子数组"),e(d)])]),t("td",Ao,[e(n,{to:"/leetcode/problem/2261.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Do,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[To]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Fo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Go]),_:1}),l(),Jo]),t("td",Oo,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Po,t("td",Qo,[t("a",So,[l("对字母串可执行的最大删除数"),e(d)])]),Uo,t("td",Wo,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Xo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Yo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Zo]),_:1}),l(),$o]),t("td",tn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[en,t("td",ln,[t("a",on,[l("找出数组中的美丽下标 I"),e(d)])]),nn,t("td",dn,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[cn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[_n]),_:1}),l(),an]),t("td",un,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hn,t("td",rn,[t("a",fn,[l("找出数组中的美丽下标 II"),e(d)])]),gn,t("td",mn,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[yn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[xn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[pn]),_:1}),l(),bn]),t("td",kn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wn,t("td",In,[t("a",Hn,[l("在无限流中寻找模式 I"),e(d)])]),vn,t("td",Mn,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[qn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Nn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[En]),_:1}),l(),Ln]),t("td",Vn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zn,t("td",Bn,[t("a",Cn,[l("将单词恢复初始状态所需的最短时间 I"),e(d)])]),Kn,t("td",Rn,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[jn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[An]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[Dn]),_:1}),l(),Tn]),t("td",Fn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gn,t("td",Jn,[t("a",On,[l("将单词恢复初始状态所需的最短时间 II"),e(d)])]),Pn,t("td",Qn,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Sn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Un]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[Wn]),_:1}),l(),Xn]),t("td",Yn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zn,t("td",$n,[t("a",td,[l("匹配模式数组的子数组数目 I"),e(d)])]),ed,t("td",ld,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[od]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[nd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[dd]),_:1}),l(),sd]),t("td",id,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cd,t("td",_d,[t("a",ad,[l("匹配模式数组的子数组数目 II"),e(d)])]),ud,t("td",hd,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[rd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[fd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[gd]),_:1}),l(),md]),t("td",yd,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xd,t("td",pd,[t("a",bd,[l("在无限流中寻找模式 II"),e(d)])]),kd,t("td",wd,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Id]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[Hd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[vd]),_:1}),l(),Md]),t("td",qd,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nd,t("td",Ed,[t("a",Ld,[l("统计前后缀下标对 I"),e(d)])]),Vd,t("td",zd,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Bd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Cd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Kd]),_:1}),l(),Rd]),t("td",jd,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ad,t("td",Dd,[t("a",Td,[l("统计前后缀下标对 II"),e(d)])]),Fd,t("td",Gd,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Jd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Od]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Pd]),_:1}),l(),Qd]),t("td",Sd,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ud,t("td",Wd,[t("a",Xd,[l("形成目标字符串需要的最少字符串数 I"),e(d)])]),Yd,t("td",Zd,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[$d]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[ts]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[es]),_:1}),l(),ls]),t("td",os,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ns,t("td",ds,[t("a",ss,[l("形成目标字符串需要的最少字符串数 II"),e(d)])]),is,t("td",cs,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[_s]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[as]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[us]),_:1}),l(),hs]),t("td",rs,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fs,t("td",gs,[t("a",ms,[l("恢复空格"),e(d)])]),ys,t("td",xs,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[ps]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[bs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[ks]),_:1}),l(),ws]),t("td",Is,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const Ns=c(h,[["render",Hs],["__file","rolling-hash.html.vue"]]);export{Ns as default};
