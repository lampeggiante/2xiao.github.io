import{_ as c,r as _,o as i,c as r,a as t,d as e,w as o,b as l,f as a}from"./app-GnK0vSxb.js";const h={},u=t("h1",{id:"深度优先搜索",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#深度优先搜索","aria-hidden":"true"},"#"),l(" 深度优先搜索")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("code",null,"单调栈",-1),I=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),H=t("code",null,"哈希表",-1),E=t("code",null,"字符串",-1),z=t("code",null,"字符串匹配",-1),O=t("code",null,"树",-1),j=t("code",null,"二叉树",-1),L=t("code",null,"二叉搜索树",-1),q=t("code",null,"最小生成树",-1),C=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),V=t("code",null,"强连通分量",-1),B=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),U=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),W=t("code",null,"线段树",-1),D=t("code",null,"树状数组",-1),Y=t("code",null,"后缀数组",-1),J=t("p",null,[t("strong",null,"算法")],-1),Q=t("code",null,"枚举",-1),R=t("code",null,"递归",-1),S=t("code",null,"分治",-1),Z=t("code",null,"回溯",-1),F=t("code",null,"贪心",-1),G=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("span",{class:"blue"},"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),Ht=t("code",null,"水塘抽样",-1),Et=t("code",null,"拒绝采样",-1),zt=t("code",null,"数据库",-1),Ot=t("code",null,"设计",-1),jt=t("code",null,"数据流",-1),Lt=t("code",null,"脑筋急转弯",-1),qt=t("code",null,"交互",-1),Ct=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Vt=t("td",{style:{"text-align":"center"}},"94",-1),Bt={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},At={style:{"text-align":"left"}},Wt=t("code",null,"栈",-1),Dt=t("code",null,"树",-1),Yt=t("code",null,"深度优先搜索",-1),Jt=t("code",null,"1+",-1),Qt={style:{"text-align":"left"}},Rt=t("td",{style:{"text-align":"center"}},"98",-1),St={style:{"text-align":"left"}},Zt={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ft={style:{"text-align":"center"}},Gt={style:{"text-align":"left"}},Xt=t("code",null,"树",-1),$t=t("code",null,"深度优先搜索",-1),te=t("code",null,"二叉搜索树",-1),ee=t("code",null,"1+",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"99",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},de={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},ce=t("code",null,"树",-1),ie=t("code",null,"深度优先搜索",-1),re=t("code",null,"二叉搜索树",-1),ae=t("code",null,"1+",-1),he={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"100",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},me={style:{"text-align":"center"}},ye={style:{"text-align":"left"}},xe=t("code",null,"树",-1),pe=t("code",null,"深度优先搜索",-1),be=t("code",null,"广度优先搜索",-1),ke=t("code",null,"1+",-1),Me={style:{"text-align":"left"}},Ie=t("td",{style:{"text-align":"center"}},"101",-1),ve={style:{"text-align":"left"}},we={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},He={style:{"text-align":"center"}},Ee={style:{"text-align":"left"}},ze=t("code",null,"树",-1),Oe=t("code",null,"深度优先搜索",-1),je=t("code",null,"广度优先搜索",-1),Le=t("code",null,"1+",-1),qe={style:{"text-align":"left"}},Ce=t("td",{style:{"text-align":"center"}},"104",-1),Ne={style:{"text-align":"left"}},Pe={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ke={style:{"text-align":"center"}},Ve={style:{"text-align":"left"}},Be=t("code",null,"树",-1),Te=t("code",null,"深度优先搜索",-1),Ue=t("code",null,"广度优先搜索",-1),Ae=t("code",null,"1+",-1),We={style:{"text-align":"left"}},De=t("td",{style:{"text-align":"center"}},"110",-1),Ye={style:{"text-align":"left"}},Je={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qe={style:{"text-align":"center"}},Re={style:{"text-align":"left"}},Se=t("code",null,"树",-1),Ze=t("code",null,"深度优先搜索",-1),Fe=t("code",null,"二叉树",-1),Ge={style:{"text-align":"left"}},Xe=t("td",{style:{"text-align":"center"}},"111",-1),$e={style:{"text-align":"left"}},tl={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},el={style:{"text-align":"center"}},ll={style:{"text-align":"left"}},ol=t("code",null,"树",-1),nl=t("code",null,"深度优先搜索",-1),sl=t("code",null,"广度优先搜索",-1),dl=t("code",null,"1+",-1),_l={style:{"text-align":"left"}},cl=t("td",{style:{"text-align":"center"}},"112",-1),il={style:{"text-align":"left"}},rl={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},al={style:{"text-align":"center"}},hl={style:{"text-align":"left"}},ul=t("code",null,"树",-1),fl=t("code",null,"深度优先搜索",-1),gl=t("code",null,"广度优先搜索",-1),ml=t("code",null,"1+",-1),yl={style:{"text-align":"left"}},xl=t("td",{style:{"text-align":"center"}},"113",-1),pl={style:{"text-align":"left"}},bl={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},kl={style:{"text-align":"center"}},Ml={style:{"text-align":"left"}},Il=t("code",null,"树",-1),vl=t("code",null,"深度优先搜索",-1),wl=t("code",null,"回溯",-1),Hl=t("code",null,"1+",-1),El={style:{"text-align":"left"}},zl=t("td",{style:{"text-align":"center"}},"114",-1),Ol={style:{"text-align":"left"}},jl={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},Ll={style:{"text-align":"center"}},ql={style:{"text-align":"left"}},Cl=t("code",null,"栈",-1),Nl=t("code",null,"树",-1),Pl=t("code",null,"深度优先搜索",-1),Kl=t("code",null,"2+",-1),Vl={style:{"text-align":"left"}},Bl=t("td",{style:{"text-align":"center"}},"116",-1),Tl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},Al={style:{"text-align":"center"}},Wl={style:{"text-align":"left"}},Dl=t("code",null,"树",-1),Yl=t("code",null,"深度优先搜索",-1),Jl=t("code",null,"广度优先搜索",-1),Ql=t("code",null,"2+",-1),Rl={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"117",-1),Zl={style:{"text-align":"left"}},Fl={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},Gl={style:{"text-align":"center"}},Xl={style:{"text-align":"left"}},$l=t("code",null,"树",-1),to=t("code",null,"深度优先搜索",-1),eo=t("code",null,"广度优先搜索",-1),lo=t("code",null,"2+",-1),oo={style:{"text-align":"left"}},no=t("td",{style:{"text-align":"center"}},"124",-1),so={style:{"text-align":"left"}},_o={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},co={style:{"text-align":"center"}},io={style:{"text-align":"left"}},ro=t("code",null,"树",-1),ao=t("code",null,"深度优先搜索",-1),ho=t("code",null,"动态规划",-1),uo=t("code",null,"1+",-1),fo={style:{"text-align":"left"}},go=t("td",{style:{"text-align":"center"}},"129",-1),mo={style:{"text-align":"left"}},yo={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},xo={style:{"text-align":"center"}},po={style:{"text-align":"left"}},bo=t("code",null,"树",-1),ko=t("code",null,"深度优先搜索",-1),Mo=t("code",null,"二叉树",-1),Io={style:{"text-align":"left"}},vo=t("td",{style:{"text-align":"center"}},"130",-1),wo={style:{"text-align":"left"}},Ho={href:"https://leetcode.com/problems/surrounded-regions",target:"_blank",rel:"noopener noreferrer"},Eo={style:{"text-align":"center"}},zo={style:{"text-align":"left"}},Oo=t("code",null,"深度优先搜索",-1),jo=t("code",null,"广度优先搜索",-1),Lo=t("code",null,"并查集",-1),qo=t("code",null,"2+",-1),Co={style:{"text-align":"left"}},No=t("td",{style:{"text-align":"center"}},"133",-1),Po={style:{"text-align":"left"}},Ko={href:"https://leetcode.com/problems/clone-graph",target:"_blank",rel:"noopener noreferrer"},Vo={style:{"text-align":"center"}},Bo={style:{"text-align":"left"}},To=t("code",null,"深度优先搜索",-1),Uo=t("code",null,"广度优先搜索",-1),Ao=t("code",null,"图",-1),Wo=t("code",null,"1+",-1),Do={style:{"text-align":"left"}},Yo=t("td",{style:{"text-align":"center"}},"144",-1),Jo={style:{"text-align":"left"}},Qo={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ro={style:{"text-align":"center"}},So={style:{"text-align":"left"}},Zo=t("code",null,"栈",-1),Fo=t("code",null,"树",-1),Go=t("code",null,"深度优先搜索",-1),Xo=t("code",null,"1+",-1),$o={style:{"text-align":"left"}},tn=t("td",{style:{"text-align":"center"}},"145",-1),en={style:{"text-align":"left"}},ln={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},on={style:{"text-align":"center"}},nn={style:{"text-align":"left"}},sn=t("code",null,"栈",-1),dn=t("code",null,"树",-1),_n=t("code",null,"深度优先搜索",-1),cn=t("code",null,"1+",-1),rn={style:{"text-align":"left"}},an=t("td",{style:{"text-align":"center"}},"156",-1),hn={style:{"text-align":"left"}},un={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},fn={style:{"text-align":"center"}},gn={style:{"text-align":"left"}},mn=t("code",null,"树",-1),yn=t("code",null,"深度优先搜索",-1),xn=t("code",null,"二叉树",-1),pn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"199",-1),kn={style:{"text-align":"left"}},Mn={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},In={style:{"text-align":"center"}},vn={style:{"text-align":"left"}},wn=t("code",null,"树",-1),Hn=t("code",null,"深度优先搜索",-1),En=t("code",null,"广度优先搜索",-1),zn=t("code",null,"1+",-1),On={style:{"text-align":"left"}},jn=t("td",{style:{"text-align":"center"}},"200",-1),Ln={style:{"text-align":"left"}},qn={href:"https://leetcode.com/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},Cn={style:{"text-align":"center"}},Nn={style:{"text-align":"left"}},Pn=t("code",null,"深度优先搜索",-1),Kn=t("code",null,"广度优先搜索",-1),Vn=t("code",null,"并查集",-1),Bn=t("code",null,"2+",-1),Tn={style:{"text-align":"left"}},Un=t("td",{style:{"text-align":"center"}},"207",-1),An={style:{"text-align":"left"}},Wn={href:"https://leetcode.com/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},Dn={style:{"text-align":"center"}},Yn={style:{"text-align":"left"}},Jn=t("code",null,"深度优先搜索",-1),Qn=t("code",null,"广度优先搜索",-1),Rn=t("code",null,"图",-1),Sn=t("code",null,"1+",-1),Zn={style:{"text-align":"left"}},Fn=t("td",{style:{"text-align":"center"}},"210",-1),Gn={style:{"text-align":"left"}},Xn={href:"https://leetcode.com/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},$n={style:{"text-align":"center"}},ts={style:{"text-align":"left"}},es=t("code",null,"深度优先搜索",-1),ls=t("code",null,"广度优先搜索",-1),os=t("code",null,"图",-1),ns=t("code",null,"1+",-1),ss={style:{"text-align":"left"}},ds=t("td",{style:{"text-align":"center"}},"211",-1),_s={style:{"text-align":"left"}},cs={href:"https://leetcode.com/problems/design-add-and-search-words-data-structure",target:"_blank",rel:"noopener noreferrer"},is={style:{"text-align":"center"}},rs={style:{"text-align":"left"}},as=t("code",null,"深度优先搜索",-1),hs=t("code",null,"设计",-1),us=t("code",null,"字典树",-1),fs=t("code",null,"1+",-1),gs={style:{"text-align":"left"}},ms=t("td",{style:{"text-align":"center"}},"226",-1),ys={style:{"text-align":"left"}},xs={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},ps={style:{"text-align":"center"}},bs={style:{"text-align":"left"}},ks=t("code",null,"树",-1),Ms=t("code",null,"深度优先搜索",-1),Is=t("code",null,"广度优先搜索",-1),vs=t("code",null,"1+",-1),ws={style:{"text-align":"left"}},Hs=t("td",{style:{"text-align":"center"}},"230",-1),Es={style:{"text-align":"left"}},zs={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Os={style:{"text-align":"center"}},js={style:{"text-align":"left"}},Ls=t("code",null,"树",-1),qs=t("code",null,"深度优先搜索",-1),Cs=t("code",null,"二叉搜索树",-1),Ns=t("code",null,"1+",-1),Ps={style:{"text-align":"left"}},Ks=t("td",{style:{"text-align":"center"}},"235",-1),Vs={style:{"text-align":"left"}},Bs={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ts={style:{"text-align":"center"}},Us={style:{"text-align":"left"}},As=t("code",null,"树",-1),Ws=t("code",null,"深度优先搜索",-1),Ds=t("code",null,"二叉搜索树",-1),Ys=t("code",null,"1+",-1),Js={style:{"text-align":"left"}},Qs=t("td",{style:{"text-align":"center"}},"236",-1),Rs={style:{"text-align":"left"}},Ss={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Zs={style:{"text-align":"center"}},Fs={style:{"text-align":"left"}},Gs=t("code",null,"树",-1),Xs=t("code",null,"深度优先搜索",-1),$s=t("code",null,"二叉树",-1),td={style:{"text-align":"left"}},ed=t("td",{style:{"text-align":"center"}},"250",-1),ld={style:{"text-align":"left"}},od={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},nd=t("td",{style:{"text-align":"center"}},null,-1),sd={style:{"text-align":"left"}},dd=t("code",null,"树",-1),_d=t("code",null,"深度优先搜索",-1),cd=t("code",null,"二叉树",-1),id={style:{"text-align":"left"}},rd=t("td",{style:{"text-align":"center"}},"257",-1),ad={style:{"text-align":"left"}},hd={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},ud={style:{"text-align":"center"}},fd={style:{"text-align":"left"}},gd=t("code",null,"树",-1),md=t("code",null,"深度优先搜索",-1),yd=t("code",null,"字符串",-1),xd=t("code",null,"2+",-1),pd={style:{"text-align":"left"}},bd=t("td",{style:{"text-align":"center"}},"261",-1),kd={style:{"text-align":"left"}},Md={href:"https://leetcode.com/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},Id=t("td",{style:{"text-align":"center"}},null,-1),vd={style:{"text-align":"left"}},wd=t("code",null,"深度优先搜索",-1),Hd=t("code",null,"广度优先搜索",-1),Ed=t("code",null,"并查集",-1),zd=t("code",null,"1+",-1),Od={style:{"text-align":"left"}},jd=t("td",{style:{"text-align":"center"}},"269",-1),Ld={style:{"text-align":"left"}},qd={href:"https://leetcode.com/problems/alien-dictionary",target:"_blank",rel:"noopener noreferrer"},Cd=t("td",{style:{"text-align":"center"}},null,-1),Nd={style:{"text-align":"left"}},Pd=t("code",null,"深度优先搜索",-1),Kd=t("code",null,"广度优先搜索",-1),Vd=t("code",null,"图",-1),Bd=t("code",null,"3+",-1),Td={style:{"text-align":"left"}},Ud=t("td",{style:{"text-align":"center"}},"270",-1),Ad={style:{"text-align":"left"}},Wd={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},Dd=t("td",{style:{"text-align":"center"}},null,-1),Yd={style:{"text-align":"left"}},Jd=t("code",null,"树",-1),Qd=t("code",null,"深度优先搜索",-1),Rd=t("code",null,"二叉搜索树",-1),Sd=t("code",null,"2+",-1),Zd={style:{"text-align":"left"}},Fd=t("td",{style:{"text-align":"center"}},"272",-1),Gd={style:{"text-align":"left"}},Xd={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},$d=t("td",{style:{"text-align":"center"}},null,-1),t_={style:{"text-align":"left"}},e_=t("code",null,"栈",-1),l_=t("code",null,"树",-1),o_=t("code",null,"深度优先搜索",-1),n_=t("code",null,"4+",-1),s_={style:{"text-align":"left"}},d_=t("td",{style:{"text-align":"center"}},"285",-1),__={style:{"text-align":"left"}},c_={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},i_=t("td",{style:{"text-align":"center"}},null,-1),r_={style:{"text-align":"left"}},a_=t("code",null,"树",-1),h_=t("code",null,"深度优先搜索",-1),u_=t("code",null,"二叉搜索树",-1),f_=t("code",null,"1+",-1),g_={style:{"text-align":"left"}},m_=t("td",{style:{"text-align":"center"}},"297",-1),y_={style:{"text-align":"left"}},x_={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},p_={style:{"text-align":"center"}},b_={style:{"text-align":"left"}},k_=t("code",null,"树",-1),M_=t("code",null,"深度优先搜索",-1),I_=t("code",null,"广度优先搜索",-1),v_=t("code",null,"3+",-1),w_={style:{"text-align":"left"}},H_=t("td",{style:{"text-align":"center"}},"298",-1),E_={style:{"text-align":"left"}},z_={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},O_=t("td",{style:{"text-align":"center"}},null,-1),j_={style:{"text-align":"left"}},L_=t("code",null,"树",-1),q_=t("code",null,"深度优先搜索",-1),C_=t("code",null,"二叉树",-1),N_={style:{"text-align":"left"}},P_=t("td",{style:{"text-align":"center"}},"302",-1),K_={style:{"text-align":"left"}},V_={href:"https://leetcode.com/problems/smallest-rectangle-enclosing-black-pixels",target:"_blank",rel:"noopener noreferrer"},B_=t("td",{style:{"text-align":"center"}},null,-1),T_={style:{"text-align":"left"}},U_=t("code",null,"深度优先搜索",-1),A_=t("code",null,"广度优先搜索",-1),W_=t("code",null,"数组",-1),D_=t("code",null,"2+",-1),Y_={style:{"text-align":"left"}},J_=t("td",{style:{"text-align":"center"}},"310",-1),Q_={style:{"text-align":"left"}},R_={href:"https://leetcode.com/problems/minimum-height-trees",target:"_blank",rel:"noopener noreferrer"},S_=t("td",{style:{"text-align":"center"}},null,-1),Z_={style:{"text-align":"left"}},F_=t("code",null,"深度优先搜索",-1),G_=t("code",null,"广度优先搜索",-1),X_=t("code",null,"图",-1),$_=t("code",null,"1+",-1),tc={style:{"text-align":"left"}},ec=t("td",{style:{"text-align":"center"}},"314",-1),lc={style:{"text-align":"left"}},oc={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},nc=t("td",{style:{"text-align":"center"}},null,-1),sc={style:{"text-align":"left"}},dc=t("code",null,"树",-1),_c=t("code",null,"深度优先搜索",-1),cc=t("code",null,"广度优先搜索",-1),ic=t("code",null,"3+",-1),rc={style:{"text-align":"left"}},ac=t("td",{style:{"text-align":"center"}},"323",-1),hc={style:{"text-align":"left"}},uc={href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},fc=t("td",{style:{"text-align":"center"}},null,-1),gc={style:{"text-align":"left"}},mc=t("code",null,"深度优先搜索",-1),yc=t("code",null,"广度优先搜索",-1),xc=t("code",null,"并查集",-1),pc=t("code",null,"1+",-1),bc={style:{"text-align":"left"}},kc=t("td",{style:{"text-align":"center"}},"329",-1),Mc={style:{"text-align":"left"}},Ic={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},vc=t("td",{style:{"text-align":"center"}},null,-1),wc={style:{"text-align":"left"}},Hc=t("code",null,"深度优先搜索",-1),Ec=t("code",null,"广度优先搜索",-1),zc=t("code",null,"图",-1),Oc=t("code",null,"5+",-1),jc={style:{"text-align":"left"}},Lc=t("td",{style:{"text-align":"center"}},"332",-1),qc={style:{"text-align":"left"}},Cc={href:"https://leetcode.com/problems/reconstruct-itinerary",target:"_blank",rel:"noopener noreferrer"},Nc=t("td",{style:{"text-align":"center"}},null,-1),Pc={style:{"text-align":"left"}},Kc=t("code",null,"深度优先搜索",-1),Vc=t("code",null,"图",-1),Bc=t("code",null,"欧拉回路",-1),Tc={style:{"text-align":"left"}},Uc=t("td",{style:{"text-align":"center"}},"333",-1),Ac={style:{"text-align":"left"}},Wc={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Dc=t("td",{style:{"text-align":"center"}},null,-1),Yc={style:{"text-align":"left"}},Jc=t("code",null,"树",-1),Qc=t("code",null,"深度优先搜索",-1),Rc=t("code",null,"二叉搜索树",-1),Sc=t("code",null,"2+",-1),Zc={style:{"text-align":"left"}},Fc=t("td",{style:{"text-align":"center"}},"337",-1),Gc={style:{"text-align":"left"}},Xc={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},$c=t("td",{style:{"text-align":"center"}},null,-1),ti={style:{"text-align":"left"}},ei=t("code",null,"树",-1),li=t("code",null,"深度优先搜索",-1),oi=t("code",null,"动态规划",-1),ni=t("code",null,"1+",-1),si={style:{"text-align":"left"}},di=t("td",{style:{"text-align":"center"}},"339",-1),_i={style:{"text-align":"left"}},ci={href:"https://leetcode.com/problems/nested-list-weight-sum",target:"_blank",rel:"noopener noreferrer"},ii=t("td",{style:{"text-align":"center"}},null,-1),ri={style:{"text-align":"left"}},ai=t("code",null,"深度优先搜索",-1),hi=t("code",null,"广度优先搜索",-1),ui={style:{"text-align":"left"}},fi=t("td",{style:{"text-align":"center"}},"341",-1),gi={style:{"text-align":"left"}},mi={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},yi=t("td",{style:{"text-align":"center"}},null,-1),xi={style:{"text-align":"left"}},pi=t("code",null,"栈",-1),bi=t("code",null,"树",-1),ki=t("code",null,"深度优先搜索",-1),Mi=t("code",null,"3+",-1),Ii={style:{"text-align":"left"}},vi=t("td",{style:{"text-align":"center"}},"364",-1),wi={style:{"text-align":"left"}},Hi={href:"https://leetcode.com/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},Ei=t("td",{style:{"text-align":"center"}},null,-1),zi={style:{"text-align":"left"}},Oi=t("code",null,"栈",-1),ji=t("code",null,"深度优先搜索",-1),Li=t("code",null,"广度优先搜索",-1),qi={style:{"text-align":"left"}},Ci=t("td",{style:{"text-align":"center"}},"365",-1),Ni={style:{"text-align":"left"}},Pi={href:"https://leetcode.com/problems/water-and-jug-problem",target:"_blank",rel:"noopener noreferrer"},Ki=t("td",{style:{"text-align":"center"}},null,-1),Vi={style:{"text-align":"left"}},Bi=t("code",null,"深度优先搜索",-1),Ti=t("code",null,"广度优先搜索",-1),Ui=t("code",null,"数学",-1),Ai={style:{"text-align":"left"}},Wi=t("td",{style:{"text-align":"center"}},"366",-1),Di={style:{"text-align":"left"}},Yi={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ji={style:{"text-align":"center"}},Qi={style:{"text-align":"left"}},Ri=t("code",null,"树",-1),Si=t("code",null,"深度优先搜索",-1),Zi=t("code",null,"二叉树",-1),Fi={style:{"text-align":"left"}},Gi=t("td",{style:{"text-align":"center"}},"385",-1),Xi={style:{"text-align":"left"}},$i={href:"https://leetcode.com/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},tr=t("td",{style:{"text-align":"center"}},null,-1),er={style:{"text-align":"left"}},lr=t("code",null,"栈",-1),or=t("code",null,"深度优先搜索",-1),nr=t("code",null,"字符串",-1),sr={style:{"text-align":"left"}},dr=t("td",{style:{"text-align":"center"}},"386",-1),_r={style:{"text-align":"left"}},cr={href:"https://leetcode.com/problems/lexicographical-numbers",target:"_blank",rel:"noopener noreferrer"},ir=t("td",{style:{"text-align":"center"}},null,-1),rr={style:{"text-align":"left"}},ar=t("code",null,"深度优先搜索",-1),hr=t("code",null,"字典树",-1),ur={style:{"text-align":"left"}},fr=t("td",{style:{"text-align":"center"}},"388",-1),gr={style:{"text-align":"left"}},mr={href:"https://leetcode.com/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},yr=t("td",{style:{"text-align":"center"}},null,-1),xr={style:{"text-align":"left"}},pr=t("code",null,"栈",-1),br=t("code",null,"深度优先搜索",-1),kr=t("code",null,"字符串",-1),Mr={style:{"text-align":"left"}},Ir=t("td",{style:{"text-align":"center"}},"399",-1),vr={style:{"text-align":"left"}},wr={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},Hr={style:{"text-align":"center"}},Er={style:{"text-align":"left"}},zr=t("code",null,"深度优先搜索",-1),Or=t("code",null,"广度优先搜索",-1),jr=t("code",null,"并查集",-1),Lr=t("code",null,"4+",-1),qr={style:{"text-align":"left"}},Cr=t("td",{style:{"text-align":"center"}},"404",-1),Nr={style:{"text-align":"left"}},Pr={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},Kr=t("td",{style:{"text-align":"center"}},null,-1),Vr={style:{"text-align":"left"}},Br=t("code",null,"树",-1),Tr=t("code",null,"深度优先搜索",-1),Ur=t("code",null,"广度优先搜索",-1),Ar=t("code",null,"1+",-1),Wr={style:{"text-align":"left"}},Dr=t("td",{style:{"text-align":"center"}},"417",-1),Yr={style:{"text-align":"left"}},Jr={href:"https://leetcode.com/problems/pacific-atlantic-water-flow",target:"_blank",rel:"noopener noreferrer"},Qr=t("td",{style:{"text-align":"center"}},null,-1),Rr={style:{"text-align":"left"}},Sr=t("code",null,"深度优先搜索",-1),Zr=t("code",null,"广度优先搜索",-1),Fr=t("code",null,"数组",-1),Gr=t("code",null,"1+",-1),Xr={style:{"text-align":"left"}},$r=t("td",{style:{"text-align":"center"}},"419",-1),ta={style:{"text-align":"left"}},ea={href:"https://leetcode.com/problems/battleships-in-a-board",target:"_blank",rel:"noopener noreferrer"},la=t("td",{style:{"text-align":"center"}},null,-1),oa={style:{"text-align":"left"}},na=t("code",null,"深度优先搜索",-1),sa=t("code",null,"数组",-1),da=t("code",null,"矩阵",-1),_a={style:{"text-align":"left"}},ca=t("td",{style:{"text-align":"center"}},"426",-1),ia={style:{"text-align":"left"}},ra={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},aa={style:{"text-align":"center"}},ha={style:{"text-align":"left"}},ua=t("code",null,"栈",-1),fa=t("code",null,"树",-1),ga=t("code",null,"深度优先搜索",-1),ma=t("code",null,"4+",-1),ya={style:{"text-align":"left"}},xa=t("td",{style:{"text-align":"center"}},"428",-1),pa={style:{"text-align":"left"}},ba={href:"https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},ka=t("td",{style:{"text-align":"center"}},null,-1),Ma={style:{"text-align":"left"}},Ia=t("code",null,"树",-1),va=t("code",null,"深度优先搜索",-1),wa=t("code",null,"广度优先搜索",-1),Ha=t("code",null,"1+",-1),Ea={style:{"text-align":"left"}},za=t("td",{style:{"text-align":"center"}},"430",-1),Oa={style:{"text-align":"left"}},ja={href:"https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},La={style:{"text-align":"center"}},qa={style:{"text-align":"left"}},Ca=t("code",null,"深度优先搜索",-1),Na=t("code",null,"链表",-1),Pa=t("code",null,"双向链表",-1),Ka={style:{"text-align":"left"}},Va=t("td",{style:{"text-align":"center"}},"431",-1),Ba={style:{"text-align":"left"}},Ta={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ua=t("td",{style:{"text-align":"center"}},null,-1),Aa={style:{"text-align":"left"}},Wa=t("code",null,"树",-1),Da=t("code",null,"深度优先搜索",-1),Ya=t("code",null,"广度优先搜索",-1),Ja=t("code",null,"2+",-1),Qa={style:{"text-align":"left"}},Ra=t("td",{style:{"text-align":"center"}},"437",-1),Sa={style:{"text-align":"left"}},Za={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Fa={style:{"text-align":"center"}},Ga={style:{"text-align":"left"}},Xa=t("code",null,"树",-1),$a=t("code",null,"深度优先搜索",-1),th=t("code",null,"二叉树",-1),eh={style:{"text-align":"left"}},lh=t("td",{style:{"text-align":"center"}},"449",-1),oh={style:{"text-align":"left"}},nh={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},sh=t("td",{style:{"text-align":"center"}},null,-1),dh={style:{"text-align":"left"}},_h=t("code",null,"树",-1),ch=t("code",null,"深度优先搜索",-1),ih=t("code",null,"广度优先搜索",-1),rh=t("code",null,"4+",-1),ah={style:{"text-align":"left"}},hh=t("td",{style:{"text-align":"center"}},"463",-1),uh={style:{"text-align":"left"}},fh={href:"https://leetcode.com/problems/island-perimeter",target:"_blank",rel:"noopener noreferrer"},gh=t("td",{style:{"text-align":"center"}},null,-1),mh={style:{"text-align":"left"}},yh=t("code",null,"深度优先搜索",-1),xh=t("code",null,"广度优先搜索",-1),ph=t("code",null,"数组",-1),bh=t("code",null,"1+",-1),kh={style:{"text-align":"left"}},Mh=t("td",{style:{"text-align":"center"}},"472",-1),Ih={style:{"text-align":"left"}},vh={href:"https://leetcode.com/problems/concatenated-words",target:"_blank",rel:"noopener noreferrer"},wh=t("td",{style:{"text-align":"center"}},null,-1),Hh={style:{"text-align":"left"}},Eh=t("code",null,"深度优先搜索",-1),zh=t("code",null,"字典树",-1),Oh=t("code",null,"数组",-1),jh=t("code",null,"2+",-1),Lh={style:{"text-align":"left"}},qh=t("td",{style:{"text-align":"center"}},"490",-1),Ch={style:{"text-align":"left"}},Nh={href:"https://leetcode.com/problems/the-maze",target:"_blank",rel:"noopener noreferrer"},Ph=t("td",{style:{"text-align":"center"}},null,-1),Kh={style:{"text-align":"left"}},Vh=t("code",null,"深度优先搜索",-1),Bh=t("code",null,"广度优先搜索",-1),Th=t("code",null,"数组",-1),Uh=t("code",null,"1+",-1),Ah={style:{"text-align":"left"}},Wh=t("td",{style:{"text-align":"center"}},"499",-1),Dh={style:{"text-align":"left"}},Yh={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},Jh=t("td",{style:{"text-align":"center"}},null,-1),Qh={style:{"text-align":"left"}},Rh=t("code",null,"深度优先搜索",-1),Sh=t("code",null,"广度优先搜索",-1),Zh=t("code",null,"图",-1),Fh=t("code",null,"5+",-1),Gh={style:{"text-align":"left"}},Xh=t("td",{style:{"text-align":"center"}},"501",-1),$h={style:{"text-align":"left"}},t1={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},e1=t("td",{style:{"text-align":"center"}},null,-1),l1={style:{"text-align":"left"}},o1=t("code",null,"树",-1),n1=t("code",null,"深度优先搜索",-1),s1=t("code",null,"二叉搜索树",-1),d1=t("code",null,"1+",-1),_1={style:{"text-align":"left"}},c1=t("td",{style:{"text-align":"center"}},"505",-1),i1={style:{"text-align":"left"}},r1={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},a1=t("td",{style:{"text-align":"center"}},null,-1),h1={style:{"text-align":"left"}},u1=t("code",null,"深度优先搜索",-1),f1=t("code",null,"广度优先搜索",-1),g1=t("code",null,"图",-1),m1=t("code",null,"4+",-1),y1={style:{"text-align":"left"}},x1=t("td",{style:{"text-align":"center"}},"508",-1),p1={style:{"text-align":"left"}},b1={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},k1=t("td",{style:{"text-align":"center"}},null,-1),M1={style:{"text-align":"left"}},I1=t("code",null,"树",-1),v1=t("code",null,"深度优先搜索",-1),w1=t("code",null,"哈希表",-1),H1=t("code",null,"1+",-1),E1={style:{"text-align":"left"}},z1=t("td",{style:{"text-align":"center"}},"513",-1),O1={style:{"text-align":"left"}},j1={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},L1=t("td",{style:{"text-align":"center"}},null,-1),q1={style:{"text-align":"left"}},C1=t("code",null,"树",-1),N1=t("code",null,"深度优先搜索",-1),P1=t("code",null,"广度优先搜索",-1),K1=t("code",null,"1+",-1),V1={style:{"text-align":"left"}},B1=t("td",{style:{"text-align":"center"}},"514",-1),T1={style:{"text-align":"left"}},U1={href:"https://leetcode.com/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},A1={style:{"text-align":"center"}},W1={style:{"text-align":"left"}},D1=t("code",null,"深度优先搜索",-1),Y1=t("code",null,"广度优先搜索",-1),J1=t("code",null,"字符串",-1),Q1=t("code",null,"1+",-1),R1={style:{"text-align":"left"}},S1=t("td",{style:{"text-align":"center"}},"515",-1),Z1={style:{"text-align":"left"}},F1={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},G1=t("td",{style:{"text-align":"center"}},null,-1),X1={style:{"text-align":"left"}},$1=t("code",null,"树",-1),tu=t("code",null,"深度优先搜索",-1),eu=t("code",null,"广度优先搜索",-1),lu=t("code",null,"1+",-1),ou={style:{"text-align":"left"}},nu=t("td",{style:{"text-align":"center"}},"529",-1),su={style:{"text-align":"left"}},du={href:"https://leetcode.com/problems/minesweeper",target:"_blank",rel:"noopener noreferrer"},_u=t("td",{style:{"text-align":"center"}},null,-1),cu={style:{"text-align":"left"}},iu=t("code",null,"深度优先搜索",-1),ru=t("code",null,"广度优先搜索",-1),au=t("code",null,"数组",-1),hu=t("code",null,"1+",-1),uu={style:{"text-align":"left"}},fu=t("td",{style:{"text-align":"center"}},"530",-1),gu={style:{"text-align":"left"}},mu={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},yu={style:{"text-align":"center"}},xu={style:{"text-align":"left"}},pu=t("code",null,"树",-1),bu=t("code",null,"深度优先搜索",-1),ku=t("code",null,"广度优先搜索",-1),Mu=t("code",null,"2+",-1),Iu={style:{"text-align":"left"}},vu=t("td",{style:{"text-align":"center"}},"536",-1),wu={style:{"text-align":"left"}},Hu={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},Eu=t("td",{style:{"text-align":"center"}},null,-1),zu={style:{"text-align":"left"}},Ou=t("code",null,"栈",-1),ju=t("code",null,"树",-1),Lu=t("code",null,"深度优先搜索",-1),qu=t("code",null,"2+",-1),Cu={style:{"text-align":"left"}},Nu=t("td",{style:{"text-align":"center"}},"538",-1),Pu={style:{"text-align":"left"}},Ku={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Vu=t("td",{style:{"text-align":"center"}},null,-1),Bu={style:{"text-align":"left"}},Tu=t("code",null,"树",-1),Uu=t("code",null,"深度优先搜索",-1),Au=t("code",null,"二叉搜索树",-1),Wu=t("code",null,"1+",-1),Du={style:{"text-align":"left"}},Yu=t("td",{style:{"text-align":"center"}},"543",-1),Ju={style:{"text-align":"left"}},Qu={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ru={style:{"text-align":"center"}},Su={style:{"text-align":"left"}},Zu=t("code",null,"树",-1),Fu=t("code",null,"深度优先搜索",-1),Gu=t("code",null,"二叉树",-1),Xu={style:{"text-align":"left"}},$u=t("td",{style:{"text-align":"center"}},"545",-1),tf={style:{"text-align":"left"}},ef={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},lf=t("td",{style:{"text-align":"center"}},null,-1),of={style:{"text-align":"left"}},nf=t("code",null,"树",-1),sf=t("code",null,"深度优先搜索",-1),df=t("code",null,"二叉树",-1),_f={style:{"text-align":"left"}},cf=t("td",{style:{"text-align":"center"}},"547",-1),rf={style:{"text-align":"left"}},af={href:"https://leetcode.com/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},hf=t("td",{style:{"text-align":"center"}},null,-1),uf={style:{"text-align":"left"}},ff=t("code",null,"深度优先搜索",-1),gf=t("code",null,"广度优先搜索",-1),mf=t("code",null,"并查集",-1),yf=t("code",null,"1+",-1),xf={style:{"text-align":"left"}},pf=t("td",{style:{"text-align":"center"}},"549",-1),bf={style:{"text-align":"left"}},kf={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},Mf=t("td",{style:{"text-align":"center"}},null,-1),If={style:{"text-align":"left"}},vf=t("code",null,"树",-1),wf=t("code",null,"深度优先搜索",-1),Hf=t("code",null,"二叉树",-1),Ef={style:{"text-align":"left"}},zf=t("td",{style:{"text-align":"center"}},"559",-1),Of={style:{"text-align":"left"}},jf={href:"https://leetcode.com/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},Lf={style:{"text-align":"center"}},qf={style:{"text-align":"left"}},Cf=t("code",null,"树",-1),Nf=t("code",null,"深度优先搜索",-1),Pf=t("code",null,"广度优先搜索",-1),Kf={style:{"text-align":"left"}},Vf=t("td",{style:{"text-align":"center"}},"563",-1),Bf={style:{"text-align":"left"}},Tf={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},Uf=t("td",{style:{"text-align":"center"}},null,-1),Af={style:{"text-align":"left"}},Wf=t("code",null,"树",-1),Df=t("code",null,"深度优先搜索",-1),Yf=t("code",null,"二叉树",-1),Jf={style:{"text-align":"left"}},Qf=t("td",{style:{"text-align":"center"}},"565",-1),Rf={style:{"text-align":"left"}},Sf={href:"https://leetcode.com/problems/array-nesting",target:"_blank",rel:"noopener noreferrer"},Zf=t("td",{style:{"text-align":"center"}},null,-1),Ff={style:{"text-align":"left"}},Gf=t("code",null,"深度优先搜索",-1),Xf=t("code",null,"数组",-1),$f={style:{"text-align":"left"}},tg=t("td",{style:{"text-align":"center"}},"572",-1),eg={style:{"text-align":"left"}},lg={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},og={style:{"text-align":"center"}},ng={style:{"text-align":"left"}},sg=t("code",null,"树",-1),dg=t("code",null,"深度优先搜索",-1),_g=t("code",null,"二叉树",-1),cg=t("code",null,"2+",-1),ig={style:{"text-align":"left"}},rg=t("td",{style:{"text-align":"center"}},"582",-1),ag={style:{"text-align":"left"}},hg={href:"https://leetcode.com/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},ug=t("td",{style:{"text-align":"center"}},null,-1),fg={style:{"text-align":"left"}},gg=t("code",null,"树",-1),mg=t("code",null,"深度优先搜索",-1),yg=t("code",null,"广度优先搜索",-1),xg=t("code",null,"2+",-1),pg={style:{"text-align":"left"}},bg=t("td",{style:{"text-align":"center"}},"589",-1),kg={style:{"text-align":"left"}},Mg={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ig={style:{"text-align":"center"}},vg={style:{"text-align":"left"}},wg=t("code",null,"栈",-1),Hg=t("code",null,"树",-1),Eg=t("code",null,"深度优先搜索",-1),zg={style:{"text-align":"left"}},Og=t("td",{style:{"text-align":"center"}},"590",-1),jg={style:{"text-align":"left"}},Lg={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},qg={style:{"text-align":"center"}},Cg={style:{"text-align":"left"}},Ng=t("code",null,"栈",-1),Pg=t("code",null,"树",-1),Kg=t("code",null,"深度优先搜索",-1),Vg={style:{"text-align":"left"}},Bg=t("td",{style:{"text-align":"center"}},"606",-1),Tg={style:{"text-align":"left"}},Ug={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ag=t("td",{style:{"text-align":"center"}},null,-1),Wg={style:{"text-align":"left"}},Dg=t("code",null,"树",-1),Yg=t("code",null,"深度优先搜索",-1),Jg=t("code",null,"字符串",-1),Qg=t("code",null,"1+",-1),Rg={style:{"text-align":"left"}},Sg=t("td",{style:{"text-align":"center"}},"617",-1),Zg={style:{"text-align":"left"}},Fg={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},Gg={style:{"text-align":"center"}},Xg={style:{"text-align":"left"}},$g=t("code",null,"树",-1),tm=t("code",null,"深度优先搜索",-1),em=t("code",null,"广度优先搜索",-1),lm=t("code",null,"1+",-1),om={style:{"text-align":"left"}},nm=t("td",{style:{"text-align":"center"}},"623",-1),sm={style:{"text-align":"left"}},dm={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},_m=t("td",{style:{"text-align":"center"}},null,-1),cm={style:{"text-align":"left"}},im=t("code",null,"树",-1),rm=t("code",null,"深度优先搜索",-1),am=t("code",null,"广度优先搜索",-1),hm=t("code",null,"1+",-1),um={style:{"text-align":"left"}},fm=t("td",{style:{"text-align":"center"}},"637",-1),gm={style:{"text-align":"left"}},mm={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},ym={style:{"text-align":"center"}},xm={style:{"text-align":"left"}},pm=t("code",null,"树",-1),bm=t("code",null,"深度优先搜索",-1),km=t("code",null,"广度优先搜索",-1),Mm=t("code",null,"1+",-1),Im={style:{"text-align":"left"}},vm=t("td",{style:{"text-align":"center"}},"642",-1),wm={style:{"text-align":"left"}},Hm={href:"https://leetcode.com/problems/design-search-autocomplete-system",target:"_blank",rel:"noopener noreferrer"},Em=t("td",{style:{"text-align":"center"}},null,-1),zm={style:{"text-align":"left"}},Om=t("code",null,"深度优先搜索",-1),jm=t("code",null,"设计",-1),Lm=t("code",null,"字典树",-1),qm=t("code",null,"4+",-1),Cm={style:{"text-align":"left"}},Nm=t("td",{style:{"text-align":"center"}},"652",-1),Pm={style:{"text-align":"left"}},Km={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},Vm=t("td",{style:{"text-align":"center"}},null,-1),Bm={style:{"text-align":"left"}},Tm=t("code",null,"树",-1),Um=t("code",null,"深度优先搜索",-1),Am=t("code",null,"哈希表",-1),Wm=t("code",null,"1+",-1),Dm={style:{"text-align":"left"}},Ym=t("td",{style:{"text-align":"center"}},"653",-1),Jm={style:{"text-align":"left"}},Qm={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},Rm=t("td",{style:{"text-align":"center"}},null,-1),Sm={style:{"text-align":"left"}},Zm=t("code",null,"树",-1),Fm=t("code",null,"深度优先搜索",-1),Gm=t("code",null,"广度优先搜索",-1),Xm=t("code",null,"4+",-1),$m={style:{"text-align":"left"}},t2=t("td",{style:{"text-align":"center"}},"655",-1),e2={style:{"text-align":"left"}},l2={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},o2=t("td",{style:{"text-align":"center"}},null,-1),n2={style:{"text-align":"left"}},s2=t("code",null,"树",-1),d2=t("code",null,"深度优先搜索",-1),_2=t("code",null,"广度优先搜索",-1),c2=t("code",null,"1+",-1),i2={style:{"text-align":"left"}},r2=t("td",{style:{"text-align":"center"}},"662",-1),a2={style:{"text-align":"left"}},h2={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},u2={style:{"text-align":"center"}},f2={style:{"text-align":"left"}},g2=t("code",null,"树",-1),m2=t("code",null,"深度优先搜索",-1),y2=t("code",null,"广度优先搜索",-1),x2=t("code",null,"1+",-1),p2={style:{"text-align":"left"}},b2=t("td",{style:{"text-align":"center"}},"663",-1),k2={style:{"text-align":"left"}},M2={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},I2=t("td",{style:{"text-align":"center"}},null,-1),v2={style:{"text-align":"left"}},w2=t("code",null,"树",-1),H2=t("code",null,"深度优先搜索",-1),E2=t("code",null,"二叉树",-1),z2={style:{"text-align":"left"}},O2=t("td",{style:{"text-align":"center"}},"666",-1),j2={style:{"text-align":"left"}},L2={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},q2=t("td",{style:{"text-align":"center"}},null,-1),C2={style:{"text-align":"left"}},N2=t("code",null,"树",-1),P2=t("code",null,"深度优先搜索",-1),K2=t("code",null,"数组",-1),V2=t("code",null,"2+",-1),B2={style:{"text-align":"left"}},T2=t("td",{style:{"text-align":"center"}},"669",-1),U2={style:{"text-align":"left"}},A2={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},W2=t("td",{style:{"text-align":"center"}},null,-1),D2={style:{"text-align":"left"}},Y2=t("code",null,"树",-1),J2=t("code",null,"深度优先搜索",-1),Q2=t("code",null,"二叉搜索树",-1),R2=t("code",null,"1+",-1),S2={style:{"text-align":"left"}},Z2=t("td",{style:{"text-align":"center"}},"671",-1),F2={style:{"text-align":"left"}},G2={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},X2=t("td",{style:{"text-align":"center"}},null,-1),$2={style:{"text-align":"left"}},ty=t("code",null,"树",-1),ey=t("code",null,"深度优先搜索",-1),ly=t("code",null,"二叉树",-1),oy={style:{"text-align":"left"}},ny=t("td",{style:{"text-align":"center"}},"672",-1),sy={style:{"text-align":"left"}},dy={href:"https://leetcode.com/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},_y=t("td",{style:{"text-align":"center"}},null,-1),cy={style:{"text-align":"left"}},iy=t("code",null,"位运算",-1),ry=t("code",null,"深度优先搜索",-1),ay=t("code",null,"广度优先搜索",-1),hy=t("code",null,"1+",-1),uy={style:{"text-align":"left"}},fy=t("td",{style:{"text-align":"center"}},"676",-1),gy={style:{"text-align":"left"}},my={href:"https://leetcode.com/problems/implement-magic-dictionary",target:"_blank",rel:"noopener noreferrer"},yy=t("td",{style:{"text-align":"center"}},null,-1),xy={style:{"text-align":"left"}},py=t("code",null,"深度优先搜索",-1),by=t("code",null,"设计",-1),ky=t("code",null,"字典树",-1),My=t("code",null,"2+",-1),Iy={style:{"text-align":"left"}},vy=t("td",{style:{"text-align":"center"}},"684",-1),wy={style:{"text-align":"left"}},Hy={href:"https://leetcode.com/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},Ey=t("td",{style:{"text-align":"center"}},null,-1),zy={style:{"text-align":"left"}},Oy=t("code",null,"深度优先搜索",-1),jy=t("code",null,"广度优先搜索",-1),Ly=t("code",null,"并查集",-1),qy=t("code",null,"1+",-1),Cy={style:{"text-align":"left"}},Ny=t("td",{style:{"text-align":"center"}},"685",-1),Py={style:{"text-align":"left"}},Ky={href:"https://leetcode.com/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},Vy=t("td",{style:{"text-align":"center"}},null,-1),By={style:{"text-align":"left"}},Ty=t("code",null,"深度优先搜索",-1),Uy=t("code",null,"广度优先搜索",-1),Ay=t("code",null,"并查集",-1),Wy=t("code",null,"1+",-1),Dy={style:{"text-align":"left"}},Yy=t("td",{style:{"text-align":"center"}},"687",-1),Jy={style:{"text-align":"left"}},Qy={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},Ry=t("td",{style:{"text-align":"center"}},null,-1),Sy={style:{"text-align":"left"}},Zy=t("code",null,"树",-1),Fy=t("code",null,"深度优先搜索",-1),Gy=t("code",null,"二叉树",-1),Xy={style:{"text-align":"left"}},$y=t("td",{style:{"text-align":"center"}},"690",-1),t3={style:{"text-align":"left"}},e3={href:"https://leetcode.com/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},l3=t("td",{style:{"text-align":"center"}},null,-1),o3={style:{"text-align":"left"}},n3=t("code",null,"树",-1),s3=t("code",null,"深度优先搜索",-1),d3=t("code",null,"广度优先搜索",-1),_3=t("code",null,"2+",-1),c3={style:{"text-align":"left"}},i3=t("td",{style:{"text-align":"center"}},"694",-1),r3={style:{"text-align":"left"}},a3={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},h3=t("td",{style:{"text-align":"center"}},null,-1),u3={style:{"text-align":"left"}},f3=t("code",null,"深度优先搜索",-1),g3=t("code",null,"广度优先搜索",-1),m3=t("code",null,"并查集",-1),y3=t("code",null,"2+",-1),x3={style:{"text-align":"left"}},p3=t("td",{style:{"text-align":"center"}},"695",-1),b3={style:{"text-align":"left"}},k3={href:"https://leetcode.com/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},M3={style:{"text-align":"center"}},I3={style:{"text-align":"left"}},v3=t("code",null,"深度优先搜索",-1),w3=t("code",null,"广度优先搜索",-1),H3=t("code",null,"并查集",-1),E3=t("code",null,"2+",-1),z3={style:{"text-align":"left"}},O3=t("td",{style:{"text-align":"center"}},"711",-1),j3={style:{"text-align":"left"}},L3={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},q3=t("td",{style:{"text-align":"center"}},null,-1),C3={style:{"text-align":"left"}},N3=t("code",null,"深度优先搜索",-1),P3=t("code",null,"广度优先搜索",-1),K3=t("code",null,"并查集",-1),V3=t("code",null,"2+",-1),B3={style:{"text-align":"left"}},T3=t("td",{style:{"text-align":"center"}},"721",-1),U3={style:{"text-align":"left"}},A3={href:"https://leetcode.com/problems/accounts-merge",target:"_blank",rel:"noopener noreferrer"},W3=t("td",{style:{"text-align":"center"}},null,-1),D3={style:{"text-align":"left"}},Y3=t("code",null,"深度优先搜索",-1),J3=t("code",null,"广度优先搜索",-1),Q3=t("code",null,"并查集",-1),R3=t("code",null,"4+",-1),S3={style:{"text-align":"left"}},Z3=t("td",{style:{"text-align":"center"}},"733",-1),F3={style:{"text-align":"left"}},G3={href:"https://leetcode.com/problems/flood-fill",target:"_blank",rel:"noopener noreferrer"},X3=t("td",{style:{"text-align":"center"}},null,-1),$3={style:{"text-align":"left"}},tx=t("code",null,"深度优先搜索",-1),ex=t("code",null,"广度优先搜索",-1),lx=t("code",null,"数组",-1),ox=t("code",null,"1+",-1),nx={style:{"text-align":"left"}},sx=t("td",{style:{"text-align":"center"}},"737",-1),dx={style:{"text-align":"left"}},_x={href:"https://leetcode.com/problems/sentence-similarity-ii",target:"_blank",rel:"noopener noreferrer"},cx=t("td",{style:{"text-align":"center"}},null,-1),ix={style:{"text-align":"left"}},rx=t("code",null,"深度优先搜索",-1),ax=t("code",null,"广度优先搜索",-1),hx=t("code",null,"并查集",-1),ux=t("code",null,"3+",-1),fx={style:{"text-align":"left"}},gx=t("td",{style:{"text-align":"center"}},"742",-1),mx={style:{"text-align":"left"}},yx={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},xx=t("td",{style:{"text-align":"center"}},null,-1),px={style:{"text-align":"left"}},bx=t("code",null,"树",-1),kx=t("code",null,"深度优先搜索",-1),Mx=t("code",null,"广度优先搜索",-1),Ix=t("code",null,"1+",-1),vx={style:{"text-align":"left"}},wx=t("td",{style:{"text-align":"center"}},"743",-1),Hx={style:{"text-align":"left"}},Ex={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},zx=t("td",{style:{"text-align":"center"}},null,-1),Ox={style:{"text-align":"left"}},jx=t("code",null,"深度优先搜索",-1),Lx=t("code",null,"广度优先搜索",-1),qx=t("code",null,"图",-1),Cx=t("code",null,"2+",-1),Nx={style:{"text-align":"left"}},Px=t("td",{style:{"text-align":"center"}},"749",-1),Kx={style:{"text-align":"left"}},Vx={href:"https://leetcode.com/problems/contain-virus",target:"_blank",rel:"noopener noreferrer"},Bx=t("td",{style:{"text-align":"center"}},null,-1),Tx={style:{"text-align":"left"}},Ux=t("code",null,"深度优先搜索",-1),Ax=t("code",null,"广度优先搜索",-1),Wx=t("code",null,"数组",-1),Dx=t("code",null,"2+",-1),Yx={style:{"text-align":"left"}},Jx=t("td",{style:{"text-align":"center"}},"753",-1),Qx={style:{"text-align":"left"}},Rx={href:"https://leetcode.com/problems/cracking-the-safe",target:"_blank",rel:"noopener noreferrer"},Sx=t("td",{style:{"text-align":"center"}},null,-1),Zx={style:{"text-align":"left"}},Fx=t("code",null,"深度优先搜索",-1),Gx=t("code",null,"图",-1),Xx=t("code",null,"欧拉回路",-1),$x={style:{"text-align":"left"}},tp=t("td",{style:{"text-align":"center"}},"756",-1),ep={style:{"text-align":"left"}},lp={href:"https://leetcode.com/problems/pyramid-transition-matrix",target:"_blank",rel:"noopener noreferrer"},op=t("td",{style:{"text-align":"center"}},null,-1),np={style:{"text-align":"left"}},sp=t("code",null,"位运算",-1),dp=t("code",null,"深度优先搜索",-1),_p=t("code",null,"广度优先搜索",-1),cp={style:{"text-align":"left"}},ip=t("td",{style:{"text-align":"center"}},"765",-1),rp={style:{"text-align":"left"}},ap={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},hp=t("td",{style:{"text-align":"center"}},null,-1),up={style:{"text-align":"left"}},fp=t("code",null,"贪心",-1),gp=t("code",null,"深度优先搜索",-1),mp=t("code",null,"广度优先搜索",-1),yp=t("code",null,"2+",-1),xp={style:{"text-align":"left"}},pp=t("td",{style:{"text-align":"center"}},"778",-1),bp={style:{"text-align":"left"}},kp={href:"https://leetcode.com/problems/swim-in-rising-water",target:"_blank",rel:"noopener noreferrer"},Mp=t("td",{style:{"text-align":"center"}},null,-1),Ip={style:{"text-align":"left"}},vp=t("code",null,"深度优先搜索",-1),wp=t("code",null,"广度优先搜索",-1),Hp=t("code",null,"并查集",-1),Ep=t("code",null,"4+",-1),zp={style:{"text-align":"left"}},Op=t("td",{style:{"text-align":"center"}},"783",-1),jp={style:{"text-align":"left"}},Lp={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},qp={style:{"text-align":"center"}},Cp={style:{"text-align":"left"}},Np=t("code",null,"树",-1),Pp=t("code",null,"深度优先搜索",-1),Kp=t("code",null,"广度优先搜索",-1),Vp=t("code",null,"2+",-1),Bp={style:{"text-align":"left"}},Tp=t("td",{style:{"text-align":"center"}},"785",-1),Up={style:{"text-align":"left"}},Ap={href:"https://leetcode.com/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},Wp=t("td",{style:{"text-align":"center"}},null,-1),Dp={style:{"text-align":"left"}},Yp=t("code",null,"深度优先搜索",-1),Jp=t("code",null,"广度优先搜索",-1),Qp=t("code",null,"并查集",-1),Rp=t("code",null,"1+",-1),Sp={style:{"text-align":"left"}},Zp=t("td",{style:{"text-align":"center"}},"787",-1),Fp={style:{"text-align":"left"}},Gp={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},Xp=t("td",{style:{"text-align":"center"}},null,-1),$p={style:{"text-align":"left"}},tb=t("code",null,"深度优先搜索",-1),eb=t("code",null,"广度优先搜索",-1),lb=t("code",null,"图",-1),ob=t("code",null,"3+",-1),nb={style:{"text-align":"left"}},sb=t("td",{style:{"text-align":"center"}},"797",-1),db={style:{"text-align":"left"}},_b={href:"https://leetcode.com/problems/all-paths-from-source-to-target",target:"_blank",rel:"noopener noreferrer"},cb=t("td",{style:{"text-align":"center"}},null,-1),ib={style:{"text-align":"left"}},rb=t("code",null,"深度优先搜索",-1),ab=t("code",null,"广度优先搜索",-1),hb=t("code",null,"图",-1),ub=t("code",null,"1+",-1),fb={style:{"text-align":"left"}},gb=t("td",{style:{"text-align":"center"}},"802",-1),mb={style:{"text-align":"left"}},yb={href:"https://leetcode.com/problems/find-eventual-safe-states",target:"_blank",rel:"noopener noreferrer"},xb=t("td",{style:{"text-align":"center"}},null,-1),pb={style:{"text-align":"left"}},bb=t("code",null,"深度优先搜索",-1),kb=t("code",null,"广度优先搜索",-1),Mb=t("code",null,"图",-1),Ib=t("code",null,"1+",-1),vb={style:{"text-align":"left"}},wb=t("td",{style:{"text-align":"center"}},"814",-1),Hb={style:{"text-align":"left"}},Eb={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},zb=t("td",{style:{"text-align":"center"}},null,-1),Ob={style:{"text-align":"left"}},jb=t("code",null,"树",-1),Lb=t("code",null,"深度优先搜索",-1),qb=t("code",null,"二叉树",-1),Cb={style:{"text-align":"left"}},Nb=t("td",{style:{"text-align":"center"}},"827",-1),Pb={style:{"text-align":"left"}},Kb={href:"https://leetcode.com/problems/making-a-large-island",target:"_blank",rel:"noopener noreferrer"},Vb=t("td",{style:{"text-align":"center"}},null,-1),Bb={style:{"text-align":"left"}},Tb=t("code",null,"深度优先搜索",-1),Ub=t("code",null,"广度优先搜索",-1),Ab=t("code",null,"并查集",-1),Wb=t("code",null,"2+",-1),Db={style:{"text-align":"left"}},Yb=t("td",{style:{"text-align":"center"}},"834",-1),Jb={style:{"text-align":"left"}},Qb={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},Rb=t("td",{style:{"text-align":"center"}},null,-1),Sb={style:{"text-align":"left"}},Zb=t("code",null,"树",-1),Fb=t("code",null,"深度优先搜索",-1),Gb=t("code",null,"图",-1),Xb=t("code",null,"1+",-1),$b={style:{"text-align":"left"}},t0=t("td",{style:{"text-align":"center"}},"839",-1),e0={style:{"text-align":"left"}},l0={href:"https://leetcode.com/problems/similar-string-groups",target:"_blank",rel:"noopener noreferrer"},o0=t("td",{style:{"text-align":"center"}},null,-1),n0={style:{"text-align":"left"}},s0=t("code",null,"深度优先搜索",-1),d0=t("code",null,"广度优先搜索",-1),_0=t("code",null,"并查集",-1),c0=t("code",null,"3+",-1),i0={style:{"text-align":"left"}},r0=t("td",{style:{"text-align":"center"}},"841",-1),a0={style:{"text-align":"left"}},h0={href:"https://leetcode.com/problems/keys-and-rooms",target:"_blank",rel:"noopener noreferrer"},u0=t("td",{style:{"text-align":"center"}},null,-1),f0={style:{"text-align":"left"}},g0=t("code",null,"深度优先搜索",-1),m0=t("code",null,"广度优先搜索",-1),y0=t("code",null,"图",-1),x0={style:{"text-align":"left"}},p0=t("td",{style:{"text-align":"center"}},"851",-1),b0={style:{"text-align":"left"}},k0={href:"https://leetcode.com/problems/loud-and-rich",target:"_blank",rel:"noopener noreferrer"},M0=t("td",{style:{"text-align":"center"}},null,-1),I0={style:{"text-align":"left"}},v0=t("code",null,"深度优先搜索",-1),w0=t("code",null,"图",-1),H0=t("code",null,"拓扑排序",-1),E0=t("code",null,"1+",-1),z0={style:{"text-align":"left"}},O0=t("td",{style:{"text-align":"center"}},"863",-1),j0={style:{"text-align":"left"}},L0={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},q0=t("td",{style:{"text-align":"center"}},null,-1),C0={style:{"text-align":"left"}},N0=t("code",null,"树",-1),P0=t("code",null,"深度优先搜索",-1),K0=t("code",null,"广度优先搜索",-1),V0=t("code",null,"2+",-1),B0={style:{"text-align":"left"}},T0=t("td",{style:{"text-align":"center"}},"865",-1),U0={style:{"text-align":"left"}},A0={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},W0=t("td",{style:{"text-align":"center"}},null,-1),D0={style:{"text-align":"left"}},Y0=t("code",null,"树",-1),J0=t("code",null,"深度优先搜索",-1),Q0=t("code",null,"广度优先搜索",-1),R0=t("code",null,"2+",-1),S0={style:{"text-align":"left"}},Z0=t("td",{style:{"text-align":"center"}},"872",-1),F0={style:{"text-align":"left"}},G0={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},X0=t("td",{style:{"text-align":"center"}},null,-1),$0={style:{"text-align":"left"}},t4=t("code",null,"树",-1),e4=t("code",null,"深度优先搜索",-1),l4=t("code",null,"二叉树",-1),o4={style:{"text-align":"left"}},n4=t("td",{style:{"text-align":"center"}},"886",-1),s4={style:{"text-align":"left"}},d4={href:"https://leetcode.com/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},_4=t("td",{style:{"text-align":"center"}},null,-1),c4={style:{"text-align":"left"}},i4=t("code",null,"深度优先搜索",-1),r4=t("code",null,"广度优先搜索",-1),a4=t("code",null,"并查集",-1),h4=t("code",null,"1+",-1),u4={style:{"text-align":"left"}},f4=t("td",{style:{"text-align":"center"}},"897",-1),g4={style:{"text-align":"left"}},m4={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},y4=t("td",{style:{"text-align":"center"}},null,-1),x4={style:{"text-align":"left"}},p4=t("code",null,"栈",-1),b4=t("code",null,"树",-1),k4=t("code",null,"深度优先搜索",-1),M4=t("code",null,"2+",-1),I4={style:{"text-align":"left"}},v4=t("td",{style:{"text-align":"center"}},"924",-1),w4={style:{"text-align":"left"}},H4={href:"https://leetcode.com/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},E4=t("td",{style:{"text-align":"center"}},null,-1),z4={style:{"text-align":"left"}},O4=t("code",null,"深度优先搜索",-1),j4=t("code",null,"广度优先搜索",-1),L4=t("code",null,"并查集",-1),q4=t("code",null,"3+",-1),C4={style:{"text-align":"left"}},N4=t("td",{style:{"text-align":"center"}},"928",-1),P4={style:{"text-align":"left"}},K4={href:"https://leetcode.com/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},V4=t("td",{style:{"text-align":"center"}},null,-1),B4={style:{"text-align":"left"}},T4=t("code",null,"深度优先搜索",-1),U4=t("code",null,"广度优先搜索",-1),A4=t("code",null,"并查集",-1),W4=t("code",null,"3+",-1),D4={style:{"text-align":"left"}},Y4=t("td",{style:{"text-align":"center"}},"934",-1),J4={style:{"text-align":"left"}},Q4={href:"https://leetcode.com/problems/shortest-bridge",target:"_blank",rel:"noopener noreferrer"},R4=t("td",{style:{"text-align":"center"}},null,-1),S4={style:{"text-align":"left"}},Z4=t("code",null,"深度优先搜索",-1),F4=t("code",null,"广度优先搜索",-1),G4=t("code",null,"数组",-1),X4=t("code",null,"1+",-1),$4={style:{"text-align":"left"}},t8=t("td",{style:{"text-align":"center"}},"938",-1),e8={style:{"text-align":"left"}},l8={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},o8=t("td",{style:{"text-align":"center"}},null,-1),n8={style:{"text-align":"left"}},s8=t("code",null,"树",-1),d8=t("code",null,"深度优先搜索",-1),_8=t("code",null,"二叉搜索树",-1),c8=t("code",null,"1+",-1),i8={style:{"text-align":"left"}},r8=t("td",{style:{"text-align":"center"}},"947",-1),a8={style:{"text-align":"left"}},h8={href:"https://leetcode.com/problems/most-stones-removed-with-same-row-or-column",target:"_blank",rel:"noopener noreferrer"},u8=t("td",{style:{"text-align":"center"}},null,-1),f8={style:{"text-align":"left"}},g8=t("code",null,"深度优先搜索",-1),m8=t("code",null,"并查集",-1),y8=t("code",null,"图",-1),x8=t("code",null,"1+",-1),p8={style:{"text-align":"left"}},b8=t("td",{style:{"text-align":"center"}},"951",-1),k8={style:{"text-align":"left"}},M8={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},I8=t("td",{style:{"text-align":"center"}},null,-1),v8={style:{"text-align":"left"}},w8=t("code",null,"树",-1),H8=t("code",null,"深度优先搜索",-1),E8=t("code",null,"二叉树",-1),z8={style:{"text-align":"left"}},O8=t("td",{style:{"text-align":"center"}},"959",-1),j8={style:{"text-align":"left"}},L8={href:"https://leetcode.com/problems/regions-cut-by-slashes",target:"_blank",rel:"noopener noreferrer"},q8=t("td",{style:{"text-align":"center"}},null,-1),C8={style:{"text-align":"left"}},N8=t("code",null,"深度优先搜索",-1),P8=t("code",null,"广度优先搜索",-1),K8=t("code",null,"并查集",-1),V8=t("code",null,"3+",-1),B8={style:{"text-align":"left"}},T8=t("td",{style:{"text-align":"center"}},"965",-1),U8={style:{"text-align":"left"}},A8={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},W8=t("td",{style:{"text-align":"center"}},null,-1),D8={style:{"text-align":"left"}},Y8=t("code",null,"树",-1),J8=t("code",null,"深度优先搜索",-1),Q8=t("code",null,"广度优先搜索",-1),R8=t("code",null,"1+",-1),S8={style:{"text-align":"left"}},Z8=t("td",{style:{"text-align":"center"}},"968",-1),F8={style:{"text-align":"left"}},G8={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},X8=t("td",{style:{"text-align":"center"}},null,-1),$8={style:{"text-align":"left"}},t6=t("code",null,"树",-1),e6=t("code",null,"深度优先搜索",-1),l6=t("code",null,"动态规划",-1),o6=t("code",null,"1+",-1),n6={style:{"text-align":"left"}},s6=t("td",{style:{"text-align":"center"}},"971",-1),d6={style:{"text-align":"left"}},_6={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},c6=t("td",{style:{"text-align":"center"}},null,-1),i6={style:{"text-align":"left"}},r6=t("code",null,"树",-1),a6=t("code",null,"深度优先搜索",-1),h6=t("code",null,"二叉树",-1),u6={style:{"text-align":"left"}},f6=t("td",{style:{"text-align":"center"}},"979",-1),g6={style:{"text-align":"left"}},m6={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},y6=t("td",{style:{"text-align":"center"}},null,-1),x6={style:{"text-align":"left"}},p6=t("code",null,"树",-1),b6=t("code",null,"深度优先搜索",-1),k6=t("code",null,"二叉树",-1),M6={style:{"text-align":"left"}},I6=t("td",{style:{"text-align":"center"}},"987",-1),v6={style:{"text-align":"left"}},w6={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},H6=t("td",{style:{"text-align":"center"}},null,-1),E6={style:{"text-align":"left"}},z6=t("code",null,"树",-1),O6=t("code",null,"深度优先搜索",-1),j6=t("code",null,"广度优先搜索",-1),L6=t("code",null,"3+",-1),q6={style:{"text-align":"left"}},C6=t("td",{style:{"text-align":"center"}},"988",-1),N6={style:{"text-align":"left"}},P6={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},K6=t("td",{style:{"text-align":"center"}},null,-1),V6={style:{"text-align":"left"}},B6=t("code",null,"树",-1),T6=t("code",null,"深度优先搜索",-1),U6=t("code",null,"字符串",-1),A6=t("code",null,"2+",-1),W6={style:{"text-align":"left"}},D6=t("td",{style:{"text-align":"center"}},"993",-1),Y6={style:{"text-align":"left"}},J6={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Q6=t("td",{style:{"text-align":"center"}},null,-1),R6={style:{"text-align":"left"}},S6=t("code",null,"树",-1),Z6=t("code",null,"深度优先搜索",-1),F6=t("code",null,"广度优先搜索",-1),G6=t("code",null,"1+",-1),X6={style:{"text-align":"left"}},$6=t("td",{style:{"text-align":"center"}},"1020",-1),t5={style:{"text-align":"left"}},e5={href:"https://leetcode.com/problems/number-of-enclaves",target:"_blank",rel:"noopener noreferrer"},l5=t("td",{style:{"text-align":"center"}},null,-1),o5={style:{"text-align":"left"}},n5=t("code",null,"深度优先搜索",-1),s5=t("code",null,"广度优先搜索",-1),d5=t("code",null,"并查集",-1),_5=t("code",null,"2+",-1),c5={style:{"text-align":"left"}},i5=t("td",{style:{"text-align":"center"}},"1022",-1),r5={style:{"text-align":"left"}},a5={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},h5=t("td",{style:{"text-align":"center"}},null,-1),u5={style:{"text-align":"left"}},f5=t("code",null,"树",-1),g5=t("code",null,"深度优先搜索",-1),m5=t("code",null,"二叉树",-1),y5={style:{"text-align":"left"}},x5=t("td",{style:{"text-align":"center"}},"1026",-1),p5={style:{"text-align":"left"}},b5={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},k5=t("td",{style:{"text-align":"center"}},null,-1),M5={style:{"text-align":"left"}},I5=t("code",null,"树",-1),v5=t("code",null,"深度优先搜索",-1),w5=t("code",null,"二叉树",-1),H5={style:{"text-align":"left"}},E5=t("td",{style:{"text-align":"center"}},"1028",-1),z5={style:{"text-align":"left"}},O5={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},j5=t("td",{style:{"text-align":"center"}},null,-1),L5={style:{"text-align":"left"}},q5=t("code",null,"树",-1),C5=t("code",null,"深度优先搜索",-1),N5=t("code",null,"字符串",-1),P5=t("code",null,"1+",-1),K5={style:{"text-align":"left"}},V5=t("td",{style:{"text-align":"center"}},"1034",-1),B5={style:{"text-align":"left"}},T5={href:"https://leetcode.com/problems/coloring-a-border",target:"_blank",rel:"noopener noreferrer"},U5=t("td",{style:{"text-align":"center"}},null,-1),A5={style:{"text-align":"left"}},W5=t("code",null,"深度优先搜索",-1),D5=t("code",null,"广度优先搜索",-1),Y5=t("code",null,"数组",-1),J5=t("code",null,"1+",-1),Q5={style:{"text-align":"left"}},R5=t("td",{style:{"text-align":"center"}},"1036",-1),S5={style:{"text-align":"left"}},Z5={href:"https://leetcode.com/problems/escape-a-large-maze",target:"_blank",rel:"noopener noreferrer"},F5=t("td",{style:{"text-align":"center"}},null,-1),G5={style:{"text-align":"left"}},X5=t("code",null,"深度优先搜索",-1),$5=t("code",null,"广度优先搜索",-1),t7=t("code",null,"数组",-1),e7=t("code",null,"1+",-1),l7={style:{"text-align":"left"}},o7=t("td",{style:{"text-align":"center"}},"1038",-1),n7={style:{"text-align":"left"}},s7={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},d7=t("td",{style:{"text-align":"center"}},null,-1),_7={style:{"text-align":"left"}},c7=t("code",null,"树",-1),i7=t("code",null,"深度优先搜索",-1),r7=t("code",null,"二叉搜索树",-1),a7=t("code",null,"1+",-1),h7={style:{"text-align":"left"}},u7=t("td",{style:{"text-align":"center"}},"1042",-1),f7={style:{"text-align":"left"}},g7={href:"https://leetcode.com/problems/flower-planting-with-no-adjacent",target:"_blank",rel:"noopener noreferrer"},m7=t("td",{style:{"text-align":"center"}},null,-1),y7={style:{"text-align":"left"}},x7=t("code",null,"深度优先搜索",-1),p7=t("code",null,"广度优先搜索",-1),b7=t("code",null,"图",-1),k7={style:{"text-align":"left"}},M7=t("td",{style:{"text-align":"center"}},"1080",-1),I7={style:{"text-align":"left"}},v7={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},w7=t("td",{style:{"text-align":"center"}},null,-1),H7={style:{"text-align":"left"}},E7=t("code",null,"树",-1),z7=t("code",null,"深度优先搜索",-1),O7=t("code",null,"二叉树",-1),j7={style:{"text-align":"left"}},L7=t("td",{style:{"text-align":"center"}},"1102",-1),q7={style:{"text-align":"left"}},C7={href:"https://leetcode.com/problems/path-with-maximum-minimum-value",target:"_blank",rel:"noopener noreferrer"},N7=t("td",{style:{"text-align":"center"}},null,-1),P7={style:{"text-align":"left"}},K7=t("code",null,"深度优先搜索",-1),V7=t("code",null,"广度优先搜索",-1),B7=t("code",null,"并查集",-1),T7=t("code",null,"4+",-1),U7={style:{"text-align":"left"}},A7=t("td",{style:{"text-align":"center"}},"1110",-1),W7={style:{"text-align":"left"}},D7={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},Y7=t("td",{style:{"text-align":"center"}},null,-1),J7={style:{"text-align":"left"}},Q7=t("code",null,"树",-1),R7=t("code",null,"深度优先搜索",-1),S7=t("code",null,"数组",-1),Z7=t("code",null,"2+",-1),F7={style:{"text-align":"left"}},G7=t("td",{style:{"text-align":"center"}},"1120",-1),X7={style:{"text-align":"left"}},$7={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},t9=t("td",{style:{"text-align":"center"}},null,-1),e9={style:{"text-align":"left"}},l9=t("code",null,"树",-1),o9=t("code",null,"深度优先搜索",-1),n9=t("code",null,"二叉树",-1),s9={style:{"text-align":"left"}},d9=t("td",{style:{"text-align":"center"}},"1123",-1),_9={style:{"text-align":"left"}},c9={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},i9=t("td",{style:{"text-align":"center"}},null,-1),r9={style:{"text-align":"left"}},a9=t("code",null,"树",-1),h9=t("code",null,"深度优先搜索",-1),u9=t("code",null,"广度优先搜索",-1),f9=t("code",null,"2+",-1),g9={style:{"text-align":"left"}},m9=t("td",{style:{"text-align":"center"}},"1145",-1),y9={style:{"text-align":"left"}},x9={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},p9=t("td",{style:{"text-align":"center"}},null,-1),b9={style:{"text-align":"left"}},k9=t("code",null,"树",-1),M9=t("code",null,"深度优先搜索",-1),I9=t("code",null,"二叉树",-1),v9={style:{"text-align":"left"}},w9=t("td",{style:{"text-align":"center"}},"1161",-1),H9={style:{"text-align":"left"}},E9={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},z9=t("td",{style:{"text-align":"center"}},null,-1),O9={style:{"text-align":"left"}},j9=t("code",null,"树",-1),L9=t("code",null,"深度优先搜索",-1),q9=t("code",null,"广度优先搜索",-1),C9=t("code",null,"1+",-1),N9={style:{"text-align":"left"}},P9=t("td",{style:{"text-align":"center"}},"1192",-1),K9={style:{"text-align":"left"}},V9={href:"https://leetcode.com/problems/critical-connections-in-a-network",target:"_blank",rel:"noopener noreferrer"},B9=t("td",{style:{"text-align":"center"}},null,-1),T9={style:{"text-align":"left"}},U9=t("code",null,"深度优先搜索",-1),A9=t("code",null,"图",-1),W9=t("code",null,"双连通分量",-1),D9={style:{"text-align":"left"}},Y9=t("td",{style:{"text-align":"center"}},"1202",-1),J9={style:{"text-align":"left"}},Q9={href:"https://leetcode.com/problems/smallest-string-with-swaps",target:"_blank",rel:"noopener noreferrer"},R9=t("td",{style:{"text-align":"center"}},null,-1),S9={style:{"text-align":"left"}},Z9=t("code",null,"深度优先搜索",-1),F9=t("code",null,"广度优先搜索",-1),G9=t("code",null,"并查集",-1),X9=t("code",null,"4+",-1),$9={style:{"text-align":"left"}},tk=t("td",{style:{"text-align":"center"}},"1203",-1),ek={style:{"text-align":"left"}},lk={href:"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",target:"_blank",rel:"noopener noreferrer"},ok=t("td",{style:{"text-align":"center"}},null,-1),nk={style:{"text-align":"left"}},sk=t("code",null,"深度优先搜索",-1),dk=t("code",null,"广度优先搜索",-1),_k=t("code",null,"图",-1),ck=t("code",null,"1+",-1),ik={style:{"text-align":"left"}},rk=t("td",{style:{"text-align":"center"}},"1214",-1),ak={style:{"text-align":"left"}},hk={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},uk=t("td",{style:{"text-align":"center"}},null,-1),fk={style:{"text-align":"left"}},gk=t("code",null,"栈",-1),mk=t("code",null,"树",-1),yk=t("code",null,"深度优先搜索",-1),xk=t("code",null,"4+",-1),pk={style:{"text-align":"left"}},bk=t("td",{style:{"text-align":"center"}},"1233",-1),kk={style:{"text-align":"left"}},Mk={href:"https://leetcode.com/problems/remove-sub-folders-from-the-filesystem",target:"_blank",rel:"noopener noreferrer"},Ik=t("td",{style:{"text-align":"center"}},null,-1),vk={style:{"text-align":"left"}},wk=t("code",null,"深度优先搜索",-1),Hk=t("code",null,"字典树",-1),Ek=t("code",null,"数组",-1),zk=t("code",null,"1+",-1),Ok={style:{"text-align":"left"}},jk=t("td",{style:{"text-align":"center"}},"1236",-1),Lk={style:{"text-align":"left"}},qk={href:"https://leetcode.com/problems/web-crawler",target:"_blank",rel:"noopener noreferrer"},Ck=t("td",{style:{"text-align":"center"}},null,-1),Nk={style:{"text-align":"left"}},Pk=t("code",null,"深度优先搜索",-1),Kk=t("code",null,"广度优先搜索",-1),Vk=t("code",null,"字符串",-1),Bk=t("code",null,"1+",-1),Tk={style:{"text-align":"left"}},Uk=t("td",{style:{"text-align":"center"}},"1242",-1),Ak={style:{"text-align":"left"}},Wk={href:"https://leetcode.com/problems/web-crawler-multithreaded",target:"_blank",rel:"noopener noreferrer"},Dk=t("td",{style:{"text-align":"center"}},null,-1),Yk={style:{"text-align":"left"}},Jk=t("code",null,"深度优先搜索",-1),Qk=t("code",null,"广度优先搜索",-1),Rk=t("code",null,"多线程",-1),Sk={style:{"text-align":"left"}},Zk=t("td",{style:{"text-align":"center"}},"1245",-1),Fk={style:{"text-align":"left"}},Gk={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},Xk=t("td",{style:{"text-align":"center"}},null,-1),$k={style:{"text-align":"left"}},tM=t("code",null,"树",-1),eM=t("code",null,"深度优先搜索",-1),lM=t("code",null,"广度优先搜索",-1),oM=t("code",null,"2+",-1),nM={style:{"text-align":"left"}},sM=t("td",{style:{"text-align":"center"}},"1254",-1),dM={style:{"text-align":"left"}},_M={href:"https://leetcode.com/problems/number-of-closed-islands",target:"_blank",rel:"noopener noreferrer"},cM=t("td",{style:{"text-align":"center"}},null,-1),iM={style:{"text-align":"left"}},rM=t("code",null,"深度优先搜索",-1),aM=t("code",null,"广度优先搜索",-1),hM=t("code",null,"并查集",-1),uM=t("code",null,"2+",-1),fM={style:{"text-align":"left"}},gM=t("td",{style:{"text-align":"center"}},"1257",-1),mM={style:{"text-align":"left"}},yM={href:"https://leetcode.com/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},xM=t("td",{style:{"text-align":"center"}},null,-1),pM={style:{"text-align":"left"}},bM=t("code",null,"树",-1),kM=t("code",null,"深度优先搜索",-1),MM=t("code",null,"广度优先搜索",-1),IM=t("code",null,"3+",-1),vM={style:{"text-align":"left"}},wM=t("td",{style:{"text-align":"center"}},"1261",-1),HM={style:{"text-align":"left"}},EM={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},zM=t("td",{style:{"text-align":"center"}},null,-1),OM={style:{"text-align":"left"}},jM=t("code",null,"树",-1),LM=t("code",null,"深度优先搜索",-1),qM=t("code",null,"广度优先搜索",-1),CM=t("code",null,"3+",-1),NM={style:{"text-align":"left"}},PM=t("td",{style:{"text-align":"center"}},"1267",-1),KM={style:{"text-align":"left"}},VM={href:"https://leetcode.com/problems/count-servers-that-communicate",target:"_blank",rel:"noopener noreferrer"},BM=t("td",{style:{"text-align":"center"}},null,-1),TM={style:{"text-align":"left"}},UM=t("code",null,"深度优先搜索",-1),AM=t("code",null,"广度优先搜索",-1),WM=t("code",null,"并查集",-1),DM=t("code",null,"3+",-1),YM={style:{"text-align":"left"}},JM=t("td",{style:{"text-align":"center"}},"1273",-1),QM={style:{"text-align":"left"}},RM={href:"https://leetcode.com/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},SM=t("td",{style:{"text-align":"center"}},null,-1),ZM={style:{"text-align":"left"}},FM=t("code",null,"树",-1),GM=t("code",null,"深度优先搜索",-1),XM=t("code",null,"广度优先搜索",-1),$M=t("code",null,"1+",-1),tI={style:{"text-align":"left"}},eI=t("td",{style:{"text-align":"center"}},"1302",-1),lI={style:{"text-align":"left"}},oI={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},nI=t("td",{style:{"text-align":"center"}},null,-1),sI={style:{"text-align":"left"}},dI=t("code",null,"树",-1),_I=t("code",null,"深度优先搜索",-1),cI=t("code",null,"广度优先搜索",-1),iI=t("code",null,"1+",-1),rI={style:{"text-align":"left"}},aI=t("td",{style:{"text-align":"center"}},"1305",-1),hI={style:{"text-align":"left"}},uI={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},fI=t("td",{style:{"text-align":"center"}},null,-1),gI={style:{"text-align":"left"}},mI=t("code",null,"树",-1),yI=t("code",null,"深度优先搜索",-1),xI=t("code",null,"二叉搜索树",-1),pI=t("code",null,"2+",-1),bI={style:{"text-align":"left"}},kI=t("td",{style:{"text-align":"center"}},"1306",-1),MI={style:{"text-align":"left"}},II={href:"https://leetcode.com/problems/jump-game-iii",target:"_blank",rel:"noopener noreferrer"},vI=t("td",{style:{"text-align":"center"}},null,-1),wI={style:{"text-align":"left"}},HI=t("code",null,"深度优先搜索",-1),EI=t("code",null,"广度优先搜索",-1),zI=t("code",null,"数组",-1),OI={style:{"text-align":"left"}},jI=t("td",{style:{"text-align":"center"}},"1315",-1),LI={style:{"text-align":"left"}},qI={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},CI=t("td",{style:{"text-align":"center"}},null,-1),NI={style:{"text-align":"left"}},PI=t("code",null,"树",-1),KI=t("code",null,"深度优先搜索",-1),VI=t("code",null,"广度优先搜索",-1),BI=t("code",null,"1+",-1),TI={style:{"text-align":"left"}},UI=t("td",{style:{"text-align":"center"}},"1319",-1),AI={style:{"text-align":"left"}},WI={href:"https://leetcode.com/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},DI=t("td",{style:{"text-align":"center"}},null,-1),YI={style:{"text-align":"left"}},JI=t("code",null,"深度优先搜索",-1),QI=t("code",null,"广度优先搜索",-1),RI=t("code",null,"并查集",-1),SI=t("code",null,"1+",-1),ZI={style:{"text-align":"left"}},FI=t("td",{style:{"text-align":"center"}},"1325",-1),GI={style:{"text-align":"left"}},XI={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},$I=t("td",{style:{"text-align":"center"}},null,-1),tv={style:{"text-align":"left"}},ev=t("code",null,"树",-1),lv=t("code",null,"深度优先搜索",-1),ov=t("code",null,"二叉树",-1),nv={style:{"text-align":"left"}},sv=t("td",{style:{"text-align":"center"}},"1339",-1),dv={style:{"text-align":"left"}},_v={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},cv=t("td",{style:{"text-align":"center"}},null,-1),iv={style:{"text-align":"left"}},rv=t("code",null,"树",-1),av=t("code",null,"深度优先搜索",-1),hv=t("code",null,"二叉树",-1),uv={style:{"text-align":"left"}},fv=t("td",{style:{"text-align":"center"}},"1361",-1),gv={style:{"text-align":"left"}},mv={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},yv=t("td",{style:{"text-align":"center"}},null,-1),xv={style:{"text-align":"left"}},pv=t("code",null,"树",-1),bv=t("code",null,"深度优先搜索",-1),kv=t("code",null,"广度优先搜索",-1),Mv=t("code",null,"3+",-1),Iv={style:{"text-align":"left"}},vv=t("td",{style:{"text-align":"center"}},"1367",-1),wv={style:{"text-align":"left"}},Hv={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ev=t("td",{style:{"text-align":"center"}},null,-1),zv={style:{"text-align":"left"}},Ov=t("code",null,"树",-1),jv=t("code",null,"深度优先搜索",-1),Lv=t("code",null,"链表",-1),qv=t("code",null,"1+",-1),Cv={style:{"text-align":"left"}},Nv=t("td",{style:{"text-align":"center"}},"1372",-1),Pv={style:{"text-align":"left"}},Kv={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Vv=t("td",{style:{"text-align":"center"}},null,-1),Bv={style:{"text-align":"left"}},Tv=t("code",null,"树",-1),Uv=t("code",null,"深度优先搜索",-1),Av=t("code",null,"动态规划",-1),Wv=t("code",null,"1+",-1),Dv={style:{"text-align":"left"}},Yv=t("td",{style:{"text-align":"center"}},"1373",-1),Jv={style:{"text-align":"left"}},Qv={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Rv=t("td",{style:{"text-align":"center"}},null,-1),Sv={style:{"text-align":"left"}},Zv=t("code",null,"树",-1),Fv=t("code",null,"深度优先搜索",-1),Gv=t("code",null,"二叉搜索树",-1),Xv=t("code",null,"2+",-1),$v={style:{"text-align":"left"}},tw=t("td",{style:{"text-align":"center"}},"1376",-1),ew={style:{"text-align":"left"}},lw={href:"https://leetcode.com/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},ow=t("td",{style:{"text-align":"center"}},null,-1),nw={style:{"text-align":"left"}},sw=t("code",null,"树",-1),dw=t("code",null,"深度优先搜索",-1),_w=t("code",null,"广度优先搜索",-1),cw={style:{"text-align":"left"}},iw=t("td",{style:{"text-align":"center"}},"1377",-1),rw={style:{"text-align":"left"}},aw={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},hw=t("td",{style:{"text-align":"center"}},null,-1),uw={style:{"text-align":"left"}},fw=t("code",null,"树",-1),gw=t("code",null,"深度优先搜索",-1),mw=t("code",null,"广度优先搜索",-1),yw=t("code",null,"1+",-1),xw={style:{"text-align":"left"}},pw=t("td",{style:{"text-align":"center"}},"1379",-1),bw={style:{"text-align":"left"}},kw={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},Mw=t("td",{style:{"text-align":"center"}},null,-1),Iw={style:{"text-align":"left"}},vw=t("code",null,"树",-1),ww=t("code",null,"深度优先搜索",-1),Hw=t("code",null,"广度优先搜索",-1),Ew=t("code",null,"1+",-1),zw={style:{"text-align":"left"}},Ow=t("td",{style:{"text-align":"center"}},"1382",-1),jw={style:{"text-align":"left"}},Lw={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},qw=t("td",{style:{"text-align":"center"}},null,-1),Cw={style:{"text-align":"left"}},Nw=t("code",null,"贪心",-1),Pw=t("code",null,"树",-1),Kw=t("code",null,"深度优先搜索",-1),Vw=t("code",null,"3+",-1),Bw={style:{"text-align":"left"}},Tw=t("td",{style:{"text-align":"center"}},"1391",-1),Uw={style:{"text-align":"left"}},Aw={href:"https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Ww=t("td",{style:{"text-align":"center"}},null,-1),Dw={style:{"text-align":"left"}},Yw=t("code",null,"深度优先搜索",-1),Jw=t("code",null,"广度优先搜索",-1),Qw=t("code",null,"并查集",-1),Rw=t("code",null,"2+",-1),Sw={style:{"text-align":"left"}},Zw=t("td",{style:{"text-align":"center"}},"1430",-1),Fw={style:{"text-align":"left"}},Gw={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Xw=t("td",{style:{"text-align":"center"}},null,-1),$w={style:{"text-align":"left"}},tH=t("code",null,"树",-1),eH=t("code",null,"深度优先搜索",-1),lH=t("code",null,"广度优先搜索",-1),oH=t("code",null,"1+",-1),nH={style:{"text-align":"left"}},sH=t("td",{style:{"text-align":"center"}},"1443",-1),dH={style:{"text-align":"left"}},_H={href:"https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},cH=t("td",{style:{"text-align":"center"}},null,-1),iH={style:{"text-align":"left"}},rH=t("code",null,"树",-1),aH=t("code",null,"深度优先搜索",-1),hH=t("code",null,"广度优先搜索",-1),uH=t("code",null,"1+",-1),fH={style:{"text-align":"left"}},gH=t("td",{style:{"text-align":"center"}},"1448",-1),mH={style:{"text-align":"left"}},yH={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},xH=t("td",{style:{"text-align":"center"}},null,-1),pH={style:{"text-align":"left"}},bH=t("code",null,"树",-1),kH=t("code",null,"深度优先搜索",-1),MH=t("code",null,"广度优先搜索",-1),IH=t("code",null,"1+",-1),vH={style:{"text-align":"left"}},wH=t("td",{style:{"text-align":"center"}},"1457",-1),HH={style:{"text-align":"left"}},EH={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},zH=t("td",{style:{"text-align":"center"}},null,-1),OH={style:{"text-align":"left"}},jH=t("code",null,"位运算",-1),LH=t("code",null,"树",-1),qH=t("code",null,"深度优先搜索",-1),CH=t("code",null,"2+",-1),NH={style:{"text-align":"left"}},PH=t("td",{style:{"text-align":"center"}},"1462",-1),KH={style:{"text-align":"left"}},VH={href:"https://leetcode.com/problems/course-schedule-iv",target:"_blank",rel:"noopener noreferrer"},BH=t("td",{style:{"text-align":"center"}},null,-1),TH={style:{"text-align":"left"}},UH=t("code",null,"深度优先搜索",-1),AH=t("code",null,"广度优先搜索",-1),WH=t("code",null,"图",-1),DH=t("code",null,"1+",-1),YH={style:{"text-align":"left"}},JH=t("td",{style:{"text-align":"center"}},"1466",-1),QH={style:{"text-align":"left"}},RH={href:"https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero",target:"_blank",rel:"noopener noreferrer"},SH=t("td",{style:{"text-align":"center"}},null,-1),ZH={style:{"text-align":"left"}},FH=t("code",null,"深度优先搜索",-1),GH=t("code",null,"广度优先搜索",-1),XH=t("code",null,"图",-1),$H={style:{"text-align":"left"}},tE=t("td",{style:{"text-align":"center"}},"1469",-1),eE={style:{"text-align":"left"}},lE={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},oE=t("td",{style:{"text-align":"center"}},null,-1),nE={style:{"text-align":"left"}},sE=t("code",null,"树",-1),dE=t("code",null,"深度优先搜索",-1),_E=t("code",null,"广度优先搜索",-1),cE=t("code",null,"1+",-1),iE={style:{"text-align":"left"}},rE=t("td",{style:{"text-align":"center"}},"1483",-1),aE={style:{"text-align":"left"}},hE={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},uE=t("td",{style:{"text-align":"center"}},null,-1),fE={style:{"text-align":"left"}},gE=t("code",null,"树",-1),mE=t("code",null,"深度优先搜索",-1),yE=t("code",null,"广度优先搜索",-1),xE=t("code",null,"3+",-1),pE={style:{"text-align":"left"}},bE=t("td",{style:{"text-align":"center"}},"1485",-1),kE={style:{"text-align":"left"}},ME={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},IE=t("td",{style:{"text-align":"center"}},null,-1),vE={style:{"text-align":"left"}},wE=t("code",null,"树",-1),HE=t("code",null,"深度优先搜索",-1),EE=t("code",null,"广度优先搜索",-1),zE=t("code",null,"2+",-1),OE={style:{"text-align":"left"}},jE=t("td",{style:{"text-align":"center"}},"1490",-1),LE={style:{"text-align":"left"}},qE={href:"https://leetcode.com/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},CE=t("td",{style:{"text-align":"center"}},null,-1),NE={style:{"text-align":"left"}},PE=t("code",null,"树",-1),KE=t("code",null,"深度优先搜索",-1),VE=t("code",null,"广度优先搜索",-1),BE=t("code",null,"1+",-1),TE={style:{"text-align":"left"}},UE=t("td",{style:{"text-align":"center"}},"1506",-1),AE={style:{"text-align":"left"}},WE={href:"https://leetcode.com/problems/find-root-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},DE=t("td",{style:{"text-align":"center"}},null,-1),YE={style:{"text-align":"left"}},JE=t("code",null,"位运算",-1),QE=t("code",null,"树",-1),RE=t("code",null,"深度优先搜索",-1),SE=t("code",null,"1+",-1),ZE={style:{"text-align":"left"}},FE=t("td",{style:{"text-align":"center"}},"1516",-1),GE={style:{"text-align":"left"}},XE={href:"https://leetcode.com/problems/move-sub-tree-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},$E=t("td",{style:{"text-align":"center"}},null,-1),tz={style:{"text-align":"left"}},ez=t("code",null,"树",-1),lz=t("code",null,"深度优先搜索",-1),oz={style:{"text-align":"left"}},nz=t("td",{style:{"text-align":"center"}},"1519",-1),sz={style:{"text-align":"left"}},dz={href:"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},_z=t("td",{style:{"text-align":"center"}},null,-1),cz={style:{"text-align":"left"}},iz=t("code",null,"树",-1),rz=t("code",null,"深度优先搜索",-1),az=t("code",null,"广度优先搜索",-1),hz=t("code",null,"2+",-1),uz={style:{"text-align":"left"}},fz=t("td",{style:{"text-align":"center"}},"1522",-1),gz={style:{"text-align":"left"}},mz={href:"https://leetcode.com/problems/diameter-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},yz={style:{"text-align":"center"}},xz={style:{"text-align":"left"}},pz=t("code",null,"树",-1),bz=t("code",null,"深度优先搜索",-1),kz={style:{"text-align":"left"}},Mz=t("td",{style:{"text-align":"center"}},"1530",-1),Iz={style:{"text-align":"left"}},vz={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},wz=t("td",{style:{"text-align":"center"}},null,-1),Hz={style:{"text-align":"left"}},Ez=t("code",null,"树",-1),zz=t("code",null,"深度优先搜索",-1),Oz=t("code",null,"二叉树",-1),jz={style:{"text-align":"left"}},Lz=t("td",{style:{"text-align":"center"}},"1559",-1),qz={style:{"text-align":"left"}},Cz={href:"https://leetcode.com/problems/detect-cycles-in-2d-grid",target:"_blank",rel:"noopener noreferrer"},Nz=t("td",{style:{"text-align":"center"}},null,-1),Pz={style:{"text-align":"left"}},Kz=t("code",null,"深度优先搜索",-1),Vz=t("code",null,"广度优先搜索",-1),Bz=t("code",null,"并查集",-1),Tz=t("code",null,"2+",-1),Uz={style:{"text-align":"left"}},Az=t("td",{style:{"text-align":"center"}},"1568",-1),Wz={style:{"text-align":"left"}},Dz={href:"https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island",target:"_blank",rel:"noopener noreferrer"},Yz=t("td",{style:{"text-align":"center"}},null,-1),Jz={style:{"text-align":"left"}},Qz=t("code",null,"深度优先搜索",-1),Rz=t("code",null,"广度优先搜索",-1),Sz=t("code",null,"数组",-1),Zz=t("code",null,"2+",-1),Fz={style:{"text-align":"left"}},Gz=t("td",{style:{"text-align":"center"}},"1600",-1),Xz={style:{"text-align":"left"}},$z={href:"https://leetcode.com/problems/throne-inheritance",target:"_blank",rel:"noopener noreferrer"},tO=t("td",{style:{"text-align":"center"}},null,-1),eO={style:{"text-align":"left"}},lO=t("code",null,"树",-1),oO=t("code",null,"深度优先搜索",-1),nO=t("code",null,"设计",-1),sO=t("code",null,"1+",-1),dO={style:{"text-align":"left"}},_O=t("td",{style:{"text-align":"center"}},"1612",-1),cO={style:{"text-align":"left"}},iO={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},rO=t("td",{style:{"text-align":"center"}},null,-1),aO={style:{"text-align":"left"}},hO=t("code",null,"树",-1),uO=t("code",null,"深度优先搜索",-1),fO=t("code",null,"哈希表",-1),gO=t("code",null,"2+",-1),mO={style:{"text-align":"left"}},yO=t("td",{style:{"text-align":"center"}},"1625",-1),xO={style:{"text-align":"left"}},pO={href:"https://leetcode.com/problems/lexicographically-smallest-string-after-applying-operations",target:"_blank",rel:"noopener noreferrer"},bO=t("td",{style:{"text-align":"center"}},null,-1),kO={style:{"text-align":"left"}},MO=t("code",null,"深度优先搜索",-1),IO=t("code",null,"广度优先搜索",-1),vO=t("code",null,"字符串",-1),wO=t("code",null,"1+",-1),HO={style:{"text-align":"left"}},EO=t("td",{style:{"text-align":"center"}},"1631",-1),zO={style:{"text-align":"left"}},OO={href:"https://leetcode.com/problems/path-with-minimum-effort",target:"_blank",rel:"noopener noreferrer"},jO=t("td",{style:{"text-align":"center"}},null,-1),LO={style:{"text-align":"left"}},qO=t("code",null,"深度优先搜索",-1),CO=t("code",null,"广度优先搜索",-1),NO=t("code",null,"并查集",-1),PO=t("code",null,"4+",-1),KO={style:{"text-align":"left"}},VO=t("td",{style:{"text-align":"center"}},"1644",-1),BO={style:{"text-align":"left"}},TO={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},UO=t("td",{style:{"text-align":"center"}},null,-1),AO={style:{"text-align":"left"}},WO=t("code",null,"树",-1),DO=t("code",null,"深度优先搜索",-1),YO=t("code",null,"二叉树",-1),JO={style:{"text-align":"left"}},QO=t("td",{style:{"text-align":"center"}},"1660",-1),RO={style:{"text-align":"left"}},SO={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ZO=t("td",{style:{"text-align":"center"}},null,-1),FO={style:{"text-align":"left"}},GO=t("code",null,"树",-1),XO=t("code",null,"深度优先搜索",-1),$O=t("code",null,"广度优先搜索",-1),tj=t("code",null,"2+",-1),ej={style:{"text-align":"left"}},lj=t("td",{style:{"text-align":"center"}},"1666",-1),oj={style:{"text-align":"left"}},nj={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},sj=t("td",{style:{"text-align":"center"}},null,-1),dj={style:{"text-align":"left"}},_j=t("code",null,"树",-1),cj=t("code",null,"深度优先搜索",-1),ij=t("code",null,"二叉树",-1),rj={style:{"text-align":"left"}},aj=t("td",{style:{"text-align":"center"}},"1676",-1),hj={style:{"text-align":"left"}},uj={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},fj=t("td",{style:{"text-align":"center"}},null,-1),gj={style:{"text-align":"left"}},mj=t("code",null,"树",-1),yj=t("code",null,"深度优先搜索",-1),xj=t("code",null,"哈希表",-1),pj=t("code",null,"1+",-1),bj={style:{"text-align":"left"}},kj=t("td",{style:{"text-align":"center"}},"1722",-1),Mj={style:{"text-align":"left"}},Ij={href:"https://leetcode.com/problems/minimize-hamming-distance-after-swap-operations",target:"_blank",rel:"noopener noreferrer"},vj=t("td",{style:{"text-align":"center"}},null,-1),wj={style:{"text-align":"left"}},Hj=t("code",null,"深度优先搜索",-1),Ej=t("code",null,"并查集",-1),zj=t("code",null,"数组",-1),Oj={style:{"text-align":"left"}},jj=t("td",{style:{"text-align":"center"}},"1740",-1),Lj={style:{"text-align":"left"}},qj={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Cj=t("td",{style:{"text-align":"center"}},null,-1),Nj={style:{"text-align":"left"}},Pj=t("code",null,"树",-1),Kj=t("code",null,"深度优先搜索",-1),Vj=t("code",null,"广度优先搜索",-1),Bj=t("code",null,"2+",-1),Tj={style:{"text-align":"left"}},Uj=t("td",{style:{"text-align":"center"}},"1743",-1),Aj={style:{"text-align":"left"}},Wj={href:"https://leetcode.com/problems/restore-the-array-from-adjacent-pairs",target:"_blank",rel:"noopener noreferrer"},Dj=t("td",{style:{"text-align":"center"}},null,-1),Yj={style:{"text-align":"left"}},Jj=t("code",null,"深度优先搜索",-1),Qj=t("code",null,"数组",-1),Rj=t("code",null,"哈希表",-1),Sj={style:{"text-align":"left"}},Zj=t("td",{style:{"text-align":"center"}},"1766",-1),Fj={style:{"text-align":"left"}},Gj={href:"https://leetcode.com/problems/tree-of-coprimes",target:"_blank",rel:"noopener noreferrer"},Xj=t("td",{style:{"text-align":"center"}},null,-1),$j={style:{"text-align":"left"}},tL=t("code",null,"树",-1),eL=t("code",null,"深度优先搜索",-1),lL=t("code",null,"数组",-1),oL=t("code",null,"2+",-1),nL={style:{"text-align":"left"}},sL=t("td",{style:{"text-align":"center"}},"1778",-1),dL={style:{"text-align":"left"}},_L={href:"https://leetcode.com/problems/shortest-path-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},cL=t("td",{style:{"text-align":"center"}},null,-1),iL={style:{"text-align":"left"}},rL=t("code",null,"深度优先搜索",-1),aL=t("code",null,"广度优先搜索",-1),hL=t("code",null,"图",-1),uL=t("code",null,"1+",-1),fL={style:{"text-align":"left"}},gL=t("td",{style:{"text-align":"center"}},"1810",-1),mL={style:{"text-align":"left"}},yL={href:"https://leetcode.com/problems/minimum-path-cost-in-a-hidden-grid",target:"_blank",rel:"noopener noreferrer"},xL=t("td",{style:{"text-align":"center"}},null,-1),pL={style:{"text-align":"left"}},bL=t("code",null,"深度优先搜索",-1),kL=t("code",null,"广度优先搜索",-1),ML=t("code",null,"图",-1),IL=t("code",null,"2+",-1),vL={style:{"text-align":"left"}},wL=t("td",{style:{"text-align":"center"}},"1820",-1),HL={style:{"text-align":"left"}},EL={href:"https://leetcode.com/problems/maximum-number-of-accepted-invitations",target:"_blank",rel:"noopener noreferrer"},zL=t("td",{style:{"text-align":"center"}},null,-1),OL={style:{"text-align":"left"}},jL=t("code",null,"深度优先搜索",-1),LL=t("code",null,"图",-1),qL=t("code",null,"数组",-1),CL=t("code",null,"1+",-1),NL={style:{"text-align":"left"}},PL=t("td",{style:{"text-align":"center"}},"1858",-1),KL={style:{"text-align":"left"}},VL={href:"https://leetcode.com/problems/longest-word-with-all-prefixes",target:"_blank",rel:"noopener noreferrer"},BL=t("td",{style:{"text-align":"center"}},null,-1),TL={style:{"text-align":"left"}},UL=t("code",null,"深度优先搜索",-1),AL=t("code",null,"字典树",-1),WL={style:{"text-align":"left"}},DL=t("td",{style:{"text-align":"center"}},"1905",-1),YL={style:{"text-align":"left"}},JL={href:"https://leetcode.com/problems/count-sub-islands",target:"_blank",rel:"noopener noreferrer"},QL=t("td",{style:{"text-align":"center"}},null,-1),RL={style:{"text-align":"left"}},SL=t("code",null,"深度优先搜索",-1),ZL=t("code",null,"广度优先搜索",-1),FL=t("code",null,"并查集",-1),GL=t("code",null,"2+",-1),XL={style:{"text-align":"left"}},$L=t("td",{style:{"text-align":"center"}},"1932",-1),tq={style:{"text-align":"left"}},eq={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},lq=t("td",{style:{"text-align":"center"}},null,-1),oq={style:{"text-align":"left"}},nq=t("code",null,"树",-1),sq=t("code",null,"深度优先搜索",-1),dq=t("code",null,"哈希表",-1),_q=t("code",null,"2+",-1),cq={style:{"text-align":"left"}},iq=t("td",{style:{"text-align":"center"}},"1938",-1),rq={style:{"text-align":"left"}},aq={href:"https://leetcode.com/problems/maximum-genetic-difference-query",target:"_blank",rel:"noopener noreferrer"},hq=t("td",{style:{"text-align":"center"}},null,-1),uq={style:{"text-align":"left"}},fq=t("code",null,"位运算",-1),gq=t("code",null,"深度优先搜索",-1),mq=t("code",null,"字典树",-1),yq=t("code",null,"2+",-1),xq={style:{"text-align":"left"}},pq=t("td",{style:{"text-align":"center"}},"1970",-1),bq={style:{"text-align":"left"}},kq={href:"https://leetcode.com/problems/last-day-where-you-can-still-cross",target:"_blank",rel:"noopener noreferrer"},Mq=t("td",{style:{"text-align":"center"}},null,-1),Iq={style:{"text-align":"left"}},vq=t("code",null,"深度优先搜索",-1),wq=t("code",null,"广度优先搜索",-1),Hq=t("code",null,"并查集",-1),Eq=t("code",null,"3+",-1),zq={style:{"text-align":"left"}},Oq=t("td",{style:{"text-align":"center"}},"1971",-1),jq={style:{"text-align":"left"}},Lq={href:"https://leetcode.com/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},qq=t("td",{style:{"text-align":"center"}},null,-1),Cq={style:{"text-align":"left"}},Nq=t("code",null,"深度优先搜索",-1),Pq=t("code",null,"广度优先搜索",-1),Kq=t("code",null,"并查集",-1),Vq=t("code",null,"1+",-1),Bq={style:{"text-align":"left"}},Tq=t("td",{style:{"text-align":"center"}},"1973",-1),Uq={style:{"text-align":"left"}},Aq={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},Wq=t("td",{style:{"text-align":"center"}},null,-1),Dq={style:{"text-align":"left"}},Yq=t("code",null,"树",-1),Jq=t("code",null,"深度优先搜索",-1),Qq=t("code",null,"二叉树",-1),Rq={style:{"text-align":"left"}},Sq=t("td",{style:{"text-align":"center"}},"1992",-1),Zq={style:{"text-align":"left"}},Fq={href:"https://leetcode.com/problems/find-all-groups-of-farmland",target:"_blank",rel:"noopener noreferrer"},Gq=t("td",{style:{"text-align":"center"}},null,-1),Xq={style:{"text-align":"left"}},$q=t("code",null,"深度优先搜索",-1),tC=t("code",null,"广度优先搜索",-1),eC=t("code",null,"数组",-1),lC=t("code",null,"1+",-1),oC={style:{"text-align":"left"}},nC=t("td",{style:{"text-align":"center"}},"1993",-1),sC={style:{"text-align":"left"}},dC={href:"https://leetcode.com/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},_C=t("td",{style:{"text-align":"center"}},null,-1),cC={style:{"text-align":"left"}},iC=t("code",null,"树",-1),rC=t("code",null,"深度优先搜索",-1),aC=t("code",null,"广度优先搜索",-1),hC=t("code",null,"3+",-1),uC={style:{"text-align":"left"}},fC=t("td",{style:{"text-align":"center"}},"2003",-1),gC={style:{"text-align":"left"}},mC={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},yC=t("td",{style:{"text-align":"center"}},null,-1),xC={style:{"text-align":"left"}},pC=t("code",null,"树",-1),bC=t("code",null,"深度优先搜索",-1),kC=t("code",null,"并查集",-1),MC=t("code",null,"1+",-1),IC={style:{"text-align":"left"}},vC=t("td",{style:{"text-align":"center"}},"2049",-1),wC={style:{"text-align":"left"}},HC={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},EC=t("td",{style:{"text-align":"center"}},null,-1),zC={style:{"text-align":"left"}},OC=t("code",null,"树",-1),jC=t("code",null,"深度优先搜索",-1),LC=t("code",null,"数组",-1),qC=t("code",null,"1+",-1),CC={style:{"text-align":"left"}},NC=t("td",{style:{"text-align":"center"}},"2092",-1),PC={style:{"text-align":"left"}},KC={href:"https://leetcode.com/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},VC=t("td",{style:{"text-align":"center"}},null,-1),BC={style:{"text-align":"left"}},TC=t("code",null,"深度优先搜索",-1),UC=t("code",null,"广度优先搜索",-1),AC=t("code",null,"并查集",-1),WC=t("code",null,"2+",-1),DC={style:{"text-align":"left"}},YC=t("td",{style:{"text-align":"center"}},"2096",-1),JC={style:{"text-align":"left"}},QC={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},RC=t("td",{style:{"text-align":"center"}},null,-1),SC={style:{"text-align":"left"}},ZC=t("code",null,"树",-1),FC=t("code",null,"深度优先搜索",-1),GC=t("code",null,"字符串",-1),XC=t("code",null,"1+",-1),$C={style:{"text-align":"left"}},tN=t("td",{style:{"text-align":"center"}},"2097",-1),eN={style:{"text-align":"left"}},lN={href:"https://leetcode.com/problems/valid-arrangement-of-pairs",target:"_blank",rel:"noopener noreferrer"},oN=t("td",{style:{"text-align":"center"}},null,-1),nN={style:{"text-align":"left"}},sN=t("code",null,"深度优先搜索",-1),dN=t("code",null,"图",-1),_N=t("code",null,"欧拉回路",-1),cN={style:{"text-align":"left"}},iN=t("td",{style:{"text-align":"center"}},"2101",-1),rN={style:{"text-align":"left"}},aN={href:"https://leetcode.com/problems/detonate-the-maximum-bombs",target:"_blank",rel:"noopener noreferrer"},hN=t("td",{style:{"text-align":"center"}},null,-1),uN={style:{"text-align":"left"}},fN=t("code",null,"深度优先搜索",-1),gN=t("code",null,"广度优先搜索",-1),mN=t("code",null,"图",-1),yN=t("code",null,"3+",-1),xN={style:{"text-align":"left"}},pN=t("td",{style:{"text-align":"center"}},"2127",-1),bN={style:{"text-align":"left"}},kN={href:"https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting",target:"_blank",rel:"noopener noreferrer"},MN=t("td",{style:{"text-align":"center"}},null,-1),IN={style:{"text-align":"left"}},vN=t("code",null,"深度优先搜索",-1),wN=t("code",null,"图",-1),HN=t("code",null,"拓扑排序",-1),EN={style:{"text-align":"left"}},zN=t("td",{style:{"text-align":"center"}},"2192",-1),ON={style:{"text-align":"left"}},jN={href:"https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph",target:"_blank",rel:"noopener noreferrer"},LN=t("td",{style:{"text-align":"center"}},null,-1),qN={style:{"text-align":"left"}},CN=t("code",null,"深度优先搜索",-1),NN=t("code",null,"广度优先搜索",-1),PN=t("code",null,"图",-1),KN=t("code",null,"1+",-1),VN={style:{"text-align":"left"}},BN=t("td",{style:{"text-align":"center"}},"2204",-1),TN={style:{"text-align":"left"}},UN={href:"https://leetcode.com/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},AN=t("td",{style:{"text-align":"center"}},null,-1),WN={style:{"text-align":"left"}},DN=t("code",null,"深度优先搜索",-1),YN=t("code",null,"广度优先搜索",-1),JN=t("code",null,"并查集",-1),QN=t("code",null,"1+",-1),RN={style:{"text-align":"left"}},SN=t("td",{style:{"text-align":"center"}},"2246",-1),ZN={style:{"text-align":"left"}},FN={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},GN=t("td",{style:{"text-align":"center"}},null,-1),XN={style:{"text-align":"left"}},$N=t("code",null,"树",-1),tP=t("code",null,"深度优先搜索",-1),eP=t("code",null,"图",-1),lP=t("code",null,"3+",-1),oP={style:{"text-align":"left"}},nP=t("td",{style:{"text-align":"center"}},"2265",-1),sP={style:{"text-align":"left"}},dP={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},_P=t("td",{style:{"text-align":"center"}},null,-1),cP={style:{"text-align":"left"}},iP=t("code",null,"树",-1),rP=t("code",null,"深度优先搜索",-1),aP=t("code",null,"二叉树",-1),hP={style:{"text-align":"left"}},uP=t("td",{style:{"text-align":"center"}},"2277",-1),fP={style:{"text-align":"left"}},gP={href:"https://leetcode.com/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},mP=t("td",{style:{"text-align":"center"}},null,-1),yP={style:{"text-align":"left"}},xP=t("code",null,"树",-1),pP=t("code",null,"深度优先搜索",-1),bP=t("code",null,"广度优先搜索",-1),kP=t("code",null,"1+",-1),MP={style:{"text-align":"left"}},IP=t("td",{style:{"text-align":"center"}},"2307",-1),vP={style:{"text-align":"left"}},wP={href:"https://leetcode.com/problems/check-for-contradictions-in-equations",target:"_blank",rel:"noopener noreferrer"},HP=t("td",{style:{"text-align":"center"}},null,-1),EP={style:{"text-align":"left"}},zP=t("code",null,"深度优先搜索",-1),OP=t("code",null,"并查集",-1),jP=t("code",null,"图",-1),LP=t("code",null,"1+",-1),qP={style:{"text-align":"left"}},CP=t("td",{style:{"text-align":"center"}},"2313",-1),NP={style:{"text-align":"left"}},PP={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},KP=t("td",{style:{"text-align":"center"}},null,-1),VP={style:{"text-align":"left"}},BP=t("code",null,"树",-1),TP=t("code",null,"深度优先搜索",-1),UP=t("code",null,"动态规划",-1),AP=t("code",null,"1+",-1),WP={style:{"text-align":"left"}},DP=t("td",{style:{"text-align":"center"}},"2316",-1),YP={style:{"text-align":"left"}},JP={href:"https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},QP=t("td",{style:{"text-align":"center"}},null,-1),RP={style:{"text-align":"left"}},SP=t("code",null,"深度优先搜索",-1),ZP=t("code",null,"广度优先搜索",-1),FP=t("code",null,"并查集",-1),GP=t("code",null,"1+",-1),XP={style:{"text-align":"left"}},$P=t("td",{style:{"text-align":"center"}},"2322",-1),tK={style:{"text-align":"left"}},eK={href:"https://leetcode.com/problems/minimum-score-after-removals-on-a-tree",target:"_blank",rel:"noopener noreferrer"},lK=t("td",{style:{"text-align":"center"}},null,-1),oK={style:{"text-align":"left"}},nK=t("code",null,"位运算",-1),sK=t("code",null,"树",-1),dK=t("code",null,"深度优先搜索",-1),_K=t("code",null,"1+",-1),cK={style:{"text-align":"left"}},iK=t("td",{style:{"text-align":"center"}},"2328",-1),rK={style:{"text-align":"left"}},aK={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},hK=t("td",{style:{"text-align":"center"}},null,-1),uK={style:{"text-align":"left"}},fK=t("code",null,"深度优先搜索",-1),gK=t("code",null,"广度优先搜索",-1),mK=t("code",null,"图",-1),yK=t("code",null,"5+",-1),xK={style:{"text-align":"left"}},pK=t("td",{style:{"text-align":"center"}},"2331",-1),bK={style:{"text-align":"left"}},kK={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},MK=t("td",{style:{"text-align":"center"}},null,-1),IK={style:{"text-align":"left"}},vK=t("code",null,"树",-1),wK=t("code",null,"深度优先搜索",-1),HK=t("code",null,"二叉树",-1),EK={style:{"text-align":"left"}},zK=t("td",{style:{"text-align":"center"}},"2359",-1),OK={style:{"text-align":"left"}},jK={href:"https://leetcode.com/problems/find-closest-node-to-given-two-nodes",target:"_blank",rel:"noopener noreferrer"},LK=t("td",{style:{"text-align":"center"}},null,-1),qK={style:{"text-align":"left"}},CK=t("code",null,"深度优先搜索",-1),NK=t("code",null,"图",-1),PK={style:{"text-align":"left"}},KK=t("td",{style:{"text-align":"center"}},"2360",-1),VK={style:{"text-align":"left"}},BK={href:"https://leetcode.com/problems/longest-cycle-in-a-graph",target:"_blank",rel:"noopener noreferrer"},TK=t("td",{style:{"text-align":"center"}},null,-1),UK={style:{"text-align":"left"}},AK=t("code",null,"深度优先搜索",-1),WK=t("code",null,"图",-1),DK=t("code",null,"拓扑排序",-1),YK={style:{"text-align":"left"}},JK=t("td",{style:{"text-align":"center"}},"2368",-1),QK={style:{"text-align":"left"}},RK={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},SK=t("td",{style:{"text-align":"center"}},null,-1),ZK={style:{"text-align":"left"}},FK=t("code",null,"树",-1),GK=t("code",null,"深度优先搜索",-1),XK=t("code",null,"广度优先搜索",-1),$K=t("code",null,"4+",-1),tV={style:{"text-align":"left"}},eV=t("td",{style:{"text-align":"center"}},"2378",-1),lV={style:{"text-align":"left"}},oV={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},nV=t("td",{style:{"text-align":"center"}},null,-1),sV={style:{"text-align":"left"}},dV=t("code",null,"树",-1),_V=t("code",null,"深度优先搜索",-1),cV=t("code",null,"动态规划",-1),iV={style:{"text-align":"left"}},rV=t("td",{style:{"text-align":"center"}},"2385",-1),aV={style:{"text-align":"left"}},hV={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},uV=t("td",{style:{"text-align":"center"}},null,-1),fV={style:{"text-align":"left"}},gV=t("code",null,"树",-1),mV=t("code",null,"深度优先搜索",-1),yV=t("code",null,"广度优先搜索",-1),xV=t("code",null,"2+",-1),pV={style:{"text-align":"left"}},bV=t("td",{style:{"text-align":"center"}},"2415",-1),kV={style:{"text-align":"left"}},MV={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},IV=t("td",{style:{"text-align":"center"}},null,-1),vV={style:{"text-align":"left"}},wV=t("code",null,"树",-1),HV=t("code",null,"深度优先搜索",-1),EV=t("code",null,"广度优先搜索",-1),zV=t("code",null,"1+",-1),OV={style:{"text-align":"left"}},jV=t("td",{style:{"text-align":"center"}},"2440",-1),LV={style:{"text-align":"left"}},qV={href:"https://leetcode.com/problems/create-components-with-same-value",target:"_blank",rel:"noopener noreferrer"},CV=t("td",{style:{"text-align":"center"}},null,-1),NV={style:{"text-align":"left"}},PV=t("code",null,"树",-1),KV=t("code",null,"深度优先搜索",-1),VV=t("code",null,"数组",-1),BV=t("code",null,"2+",-1),TV={style:{"text-align":"left"}},UV=t("td",{style:{"text-align":"center"}},"2445",-1),AV={style:{"text-align":"left"}},WV={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},DV=t("td",{style:{"text-align":"center"}},null,-1),YV={style:{"text-align":"left"}},JV=t("code",null,"树",-1),QV=t("code",null,"深度优先搜索",-1),RV=t("code",null,"广度优先搜索",-1),SV=t("code",null,"1+",-1),ZV={style:{"text-align":"left"}},FV=t("td",{style:{"text-align":"center"}},"2458",-1),GV={style:{"text-align":"left"}},XV={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},$V=t("td",{style:{"text-align":"center"}},null,-1),tB={style:{"text-align":"left"}},eB=t("code",null,"树",-1),lB=t("code",null,"深度优先搜索",-1),oB=t("code",null,"广度优先搜索",-1),nB=t("code",null,"2+",-1),sB={style:{"text-align":"left"}},dB=t("td",{style:{"text-align":"center"}},"2467",-1),_B={style:{"text-align":"left"}},cB={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},iB=t("td",{style:{"text-align":"center"}},null,-1),rB={style:{"text-align":"left"}},aB=t("code",null,"树",-1),hB=t("code",null,"深度优先搜索",-1),uB=t("code",null,"广度优先搜索",-1),fB=t("code",null,"2+",-1),gB={style:{"text-align":"left"}},mB=t("td",{style:{"text-align":"center"}},"2476",-1),yB={style:{"text-align":"left"}},xB={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},pB=t("td",{style:{"text-align":"center"}},null,-1),bB={style:{"text-align":"left"}},kB=t("code",null,"树",-1),MB=t("code",null,"深度优先搜索",-1),IB=t("code",null,"二叉搜索树",-1),vB=t("code",null,"3+",-1),wB={style:{"text-align":"left"}},HB=t("td",{style:{"text-align":"center"}},"2477",-1),EB={style:{"text-align":"left"}},zB={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},OB=t("td",{style:{"text-align":"center"}},null,-1),jB={style:{"text-align":"left"}},LB=t("code",null,"树",-1),qB=t("code",null,"深度优先搜索",-1),CB=t("code",null,"广度优先搜索",-1),NB=t("code",null,"1+",-1),PB={style:{"text-align":"left"}},KB=t("td",{style:{"text-align":"center"}},"2479",-1),VB={style:{"text-align":"left"}},BB={href:"https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},TB=t("td",{style:{"text-align":"center"}},null,-1),UB={style:{"text-align":"left"}},AB=t("code",null,"树",-1),WB=t("code",null,"深度优先搜索",-1),DB=t("code",null,"图",-1),YB=t("code",null,"1+",-1),JB={style:{"text-align":"left"}},QB=t("td",{style:{"text-align":"center"}},"2492",-1),RB={style:{"text-align":"left"}},SB={href:"https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},ZB=t("td",{style:{"text-align":"center"}},null,-1),FB={style:{"text-align":"left"}},GB=t("code",null,"深度优先搜索",-1),XB=t("code",null,"广度优先搜索",-1),$B=t("code",null,"并查集",-1),tT=t("code",null,"1+",-1),eT={style:{"text-align":"left"}},lT=t("td",{style:{"text-align":"center"}},"2538",-1),oT={style:{"text-align":"left"}},nT={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},sT=t("td",{style:{"text-align":"center"}},null,-1),dT={style:{"text-align":"left"}},_T=t("code",null,"树",-1),cT=t("code",null,"深度优先搜索",-1),iT=t("code",null,"数组",-1),rT=t("code",null,"1+",-1),aT={style:{"text-align":"left"}},hT=t("td",{style:{"text-align":"center"}},"2556",-1),uT={style:{"text-align":"left"}},fT={href:"https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},gT=t("td",{style:{"text-align":"center"}},null,-1),mT={style:{"text-align":"left"}},yT=t("code",null,"深度优先搜索",-1),xT=t("code",null,"广度优先搜索",-1),pT=t("code",null,"数组",-1),bT=t("code",null,"2+",-1),kT={style:{"text-align":"left"}},MT=t("td",{style:{"text-align":"center"}},"2581",-1),IT={style:{"text-align":"left"}},vT={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},wT=t("td",{style:{"text-align":"center"}},null,-1),HT={style:{"text-align":"left"}},ET=t("code",null,"树",-1),zT=t("code",null,"深度优先搜索",-1),OT=t("code",null,"数组",-1),jT=t("code",null,"2+",-1),LT={style:{"text-align":"left"}},qT=t("td",{style:{"text-align":"center"}},"2596",-1),CT={style:{"text-align":"left"}},NT={href:"https://leetcode.com/problems/check-knight-tour-configuration",target:"_blank",rel:"noopener noreferrer"},PT=t("td",{style:{"text-align":"center"}},null,-1),KT={style:{"text-align":"left"}},VT=t("code",null,"深度优先搜索",-1),BT=t("code",null,"广度优先搜索",-1),TT=t("code",null,"数组",-1),UT=t("code",null,"2+",-1),AT={style:{"text-align":"left"}},WT=t("td",{style:{"text-align":"center"}},"2641",-1),DT={style:{"text-align":"left"}},YT={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},JT=t("td",{style:{"text-align":"center"}},null,-1),QT={style:{"text-align":"left"}},RT=t("code",null,"树",-1),ST=t("code",null,"深度优先搜索",-1),ZT=t("code",null,"广度优先搜索",-1),FT=t("code",null,"2+",-1),GT={style:{"text-align":"left"}},XT=t("td",{style:{"text-align":"center"}},"2646",-1),$T={style:{"text-align":"left"}},tU={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},eU=t("td",{style:{"text-align":"center"}},null,-1),lU={style:{"text-align":"left"}},oU=t("code",null,"树",-1),nU=t("code",null,"深度优先搜索",-1),sU=t("code",null,"图",-1),dU=t("code",null,"2+",-1),_U={style:{"text-align":"left"}},cU=t("td",{style:{"text-align":"center"}},"2658",-1),iU={style:{"text-align":"left"}},rU={href:"https://leetcode.com/problems/maximum-number-of-fish-in-a-grid",target:"_blank",rel:"noopener noreferrer"},aU=t("td",{style:{"text-align":"center"}},null,-1),hU={style:{"text-align":"left"}},uU=t("code",null,"深度优先搜索",-1),fU=t("code",null,"广度优先搜索",-1),gU=t("code",null,"并查集",-1),mU=t("code",null,"2+",-1),yU={style:{"text-align":"left"}},xU=t("td",{style:{"text-align":"center"}},"2685",-1),pU={style:{"text-align":"left"}},bU={href:"https://leetcode.com/problems/count-the-number-of-complete-components",target:"_blank",rel:"noopener noreferrer"},kU=t("td",{style:{"text-align":"center"}},null,-1),MU={style:{"text-align":"left"}},IU=t("code",null,"深度优先搜索",-1),vU=t("code",null,"广度优先搜索",-1),wU=t("code",null,"图",-1),HU={style:{"text-align":"left"}},EU=t("td",{style:{"text-align":"center"}},"2689",-1),zU={style:{"text-align":"left"}},OU={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},jU=t("td",{style:{"text-align":"center"}},null,-1),LU={style:{"text-align":"left"}},qU=t("code",null,"树",-1),CU=t("code",null,"深度优先搜索",-1),NU=t("code",null,"二叉树",-1),PU={style:{"text-align":"left"}},KU=t("td",{style:{"text-align":"center"}},"2764",-1),VU={style:{"text-align":"left"}},BU={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},TU=t("td",{style:{"text-align":"center"}},null,-1),UU={style:{"text-align":"left"}},AU=t("code",null,"栈",-1),WU=t("code",null,"树",-1),DU=t("code",null,"深度优先搜索",-1),YU=t("code",null,"1+",-1),JU={style:{"text-align":"left"}},QU=t("td",{style:{"text-align":"center"}},"2773",-1),RU={style:{"text-align":"left"}},SU={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},ZU=t("td",{style:{"text-align":"center"}},null,-1),FU={style:{"text-align":"left"}},GU=t("code",null,"树",-1),XU=t("code",null,"深度优先搜索",-1),$U=t("code",null,"广度优先搜索",-1),tA=t("code",null,"1+",-1),eA={style:{"text-align":"left"}},lA=t("td",{style:{"text-align":"center"}},"2791",-1),oA={style:{"text-align":"left"}},nA={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},sA=t("td",{style:{"text-align":"center"}},null,-1),dA={style:{"text-align":"left"}},_A=t("code",null,"位运算",-1),cA=t("code",null,"树",-1),iA=t("code",null,"深度优先搜索",-1),rA=t("code",null,"2+",-1),aA={style:{"text-align":"left"}},hA=t("td",{style:{"text-align":"center"}},"2792",-1),uA={style:{"text-align":"left"}},fA={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},gA=t("td",{style:{"text-align":"center"}},null,-1),mA={style:{"text-align":"left"}},yA=t("code",null,"树",-1),xA=t("code",null,"深度优先搜索",-1),pA=t("code",null,"分治",-1),bA=t("code",null,"1+",-1),kA={style:{"text-align":"left"}},MA=t("td",{style:{"text-align":"center"}},"2852",-1),IA={style:{"text-align":"left"}},vA={href:"https://leetcode.com/problems/sum-of-remoteness-of-all-cells",target:"_blank",rel:"noopener noreferrer"},wA=t("td",{style:{"text-align":"center"}},null,-1),HA={style:{"text-align":"left"}},EA=t("code",null,"深度优先搜索",-1),zA=t("code",null,"广度优先搜索",-1),OA=t("code",null,"并查集",-1),jA=t("code",null,"3+",-1),LA={style:{"text-align":"left"}},qA=t("td",{style:{"text-align":"center"}},"2858",-1),CA={style:{"text-align":"left"}},NA={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},PA=t("td",{style:{"text-align":"center"}},null,-1),KA={style:{"text-align":"left"}},VA=t("code",null,"深度优先搜索",-1),BA=t("code",null,"广度优先搜索",-1),TA=t("code",null,"图",-1),UA=t("code",null,"1+",-1),AA={style:{"text-align":"left"}},WA=t("td",{style:{"text-align":"center"}},"2867",-1),DA={style:{"text-align":"left"}},YA={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},JA=t("td",{style:{"text-align":"center"}},null,-1),QA={style:{"text-align":"left"}},RA=t("code",null,"树",-1),SA=t("code",null,"深度优先搜索",-1),ZA=t("code",null,"数学",-1),FA=t("code",null,"2+",-1),GA={style:{"text-align":"left"}},XA=t("td",{style:{"text-align":"center"}},"2872",-1),$A={style:{"text-align":"left"}},tW={href:"https://leetcode.com/problems/maximum-number-of-k-divisible-components",target:"_blank",rel:"noopener noreferrer"},eW=t("td",{style:{"text-align":"center"}},null,-1),lW={style:{"text-align":"left"}},oW=t("code",null,"树",-1),nW=t("code",null,"深度优先搜索",-1),sW={style:{"text-align":"left"}},dW=t("td",{style:{"text-align":"center"}},"2920",-1),_W={style:{"text-align":"left"}},cW={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},iW=t("td",{style:{"text-align":"center"}},null,-1),rW={style:{"text-align":"left"}},aW=t("code",null,"位运算",-1),hW=t("code",null,"树",-1),uW=t("code",null,"深度优先搜索",-1),fW=t("code",null,"2+",-1),gW={style:{"text-align":"left"}},mW=t("td",{style:{"text-align":"center"}},"2925",-1),yW={style:{"text-align":"left"}},xW={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},pW=t("td",{style:{"text-align":"center"}},null,-1),bW={style:{"text-align":"left"}},kW=t("code",null,"树",-1),MW=t("code",null,"深度优先搜索",-1),IW=t("code",null,"动态规划",-1),vW={style:{"text-align":"left"}},wW=t("td",{style:{"text-align":"center"}},"2973",-1),HW={style:{"text-align":"left"}},EW={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},zW=t("td",{style:{"text-align":"center"}},null,-1),OW={style:{"text-align":"left"}},jW=t("code",null,"树",-1),LW=t("code",null,"深度优先搜索",-1),qW=t("code",null,"动态规划",-1),CW=t("code",null,"2+",-1),NW={style:{"text-align":"left"}},PW=t("td",{style:{"text-align":"center"}},"3004",-1),KW={style:{"text-align":"left"}},VW={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},BW=t("td",{style:{"text-align":"center"}},null,-1),TW={style:{"text-align":"left"}},UW=t("code",null,"树",-1),AW=t("code",null,"深度优先搜索",-1),WW=t("code",null,"数组",-1),DW=t("code",null,"1+",-1),YW={style:{"text-align":"left"}},JW=t("td",{style:{"text-align":"center"}},"3067",-1),QW={style:{"text-align":"left"}},RW={href:"https://leetcode.com/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network",target:"_blank",rel:"noopener noreferrer"},SW=t("td",{style:{"text-align":"center"}},null,-1),ZW={style:{"text-align":"left"}},FW=t("code",null,"树",-1),GW=t("code",null,"深度优先搜索",-1),XW=t("code",null,"数组",-1),$W={style:{"text-align":"left"}},tD=t("td",{style:{"text-align":"center"}},"3123",-1),eD={style:{"text-align":"left"}},lD={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},oD=t("td",{style:{"text-align":"center"}},null,-1),nD={style:{"text-align":"left"}},sD=t("code",null,"深度优先搜索",-1),dD=t("code",null,"广度优先搜索",-1),_D=t("code",null,"图",-1),cD=t("code",null,"2+",-1),iD={style:{"text-align":"left"}},rD=t("td",{style:{"text-align":"center"}},"3157",-1),aD={style:{"text-align":"left"}},hD={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},uD=t("td",{style:{"text-align":"center"}},null,-1),fD={style:{"text-align":"left"}},gD=t("code",null,"树",-1),mD=t("code",null,"深度优先搜索",-1),yD=t("code",null,"广度优先搜索",-1),xD=t("code",null,"1+",-1),pD={style:{"text-align":"left"}},bD=t("td",{style:{"text-align":"center"}},"3203",-1),kD={style:{"text-align":"left"}},MD={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},ID=t("td",{style:{"text-align":"center"}},null,-1),vD={style:{"text-align":"left"}},wD=t("code",null,"树",-1),HD=t("code",null,"深度优先搜索",-1),ED=t("code",null,"广度优先搜索",-1),zD=t("code",null,"1+",-1),OD={style:{"text-align":"left"}},jD=t("td",{style:{"text-align":"center"}},"3235",-1),LD={style:{"text-align":"left"}},qD={href:"https://leetcode.com/problems/check-if-the-rectangle-corner-is-reachable",target:"_blank",rel:"noopener noreferrer"},CD=t("td",{style:{"text-align":"center"}},null,-1),ND={style:{"text-align":"left"}},PD=t("code",null,"深度优先搜索",-1),KD=t("code",null,"广度优先搜索",-1),VD=t("code",null,"并查集",-1),BD=t("code",null,"3+",-1),TD={style:{"text-align":"left"}},UD=t("td",{style:{"text-align":"center"}},"3241",-1),AD={style:{"text-align":"left"}},WD={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},DD=t("td",{style:{"text-align":"center"}},null,-1),YD={style:{"text-align":"left"}},JD=t("code",null,"树",-1),QD=t("code",null,"深度优先搜索",-1),RD=t("code",null,"图",-1),SD=t("code",null,"1+",-1),ZD={style:{"text-align":"left"}},FD=t("td",{style:{"text-align":"center"}},"3249",-1),GD={style:{"text-align":"left"}},XD={href:"https://leetcode.com/problems/count-the-number-of-good-nodes",target:"_blank",rel:"noopener noreferrer"},$D=t("td",{style:{"text-align":"center"}},null,-1),tY={style:{"text-align":"left"}},eY=t("code",null,"树",-1),lY=t("code",null,"深度优先搜索",-1),oY={style:{"text-align":"left"}},nY=t("td",{style:{"text-align":"center"}},"3310",-1),sY={style:{"text-align":"left"}},dY={href:"https://leetcode.com/problems/remove-methods-from-project",target:"_blank",rel:"noopener noreferrer"},_Y=t("td",{style:{"text-align":"center"}},null,-1),cY={style:{"text-align":"left"}},iY=t("code",null,"深度优先搜索",-1),rY=t("code",null,"广度优先搜索",-1),aY=t("code",null,"图",-1),hY={style:{"text-align":"left"}},uY=t("td",{style:{"text-align":"center"}},"3313",-1),fY={style:{"text-align":"left"}},gY={href:"https://leetcode.com/problems/find-the-last-marked-nodes-in-tree",target:"_blank",rel:"noopener noreferrer"},mY=t("td",{style:{"text-align":"center"}},null,-1),yY={style:{"text-align":"left"}},xY=t("code",null,"树",-1),pY=t("code",null,"深度优先搜索",-1),bY={style:{"text-align":"left"}},kY=t("td",{style:{"text-align":"center"}},"3319",-1),MY={style:{"text-align":"left"}},IY={href:"https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},vY={style:{"text-align":"center"}},wY={style:{"text-align":"left"}},HY=t("code",null,"树",-1),EY=t("code",null,"深度优先搜索",-1),zY=t("code",null,"二叉树",-1),OY=t("code",null,"1+",-1),jY={style:{"text-align":"left"}},LY=t("td",{style:{"text-align":"center"}},"LCP 07",-1),qY={style:{"text-align":"left"}},CY={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},NY=t("td",{style:{"text-align":"center"}},null,-1),PY={style:{"text-align":"left"}},KY=t("code",null,"深度优先搜索",-1),VY=t("code",null,"广度优先搜索",-1),BY=t("code",null,"图",-1),TY=t("code",null,"1+",-1),UY={style:{"text-align":"left"}},AY=t("td",{style:{"text-align":"center"}},"LCP 10",-1),WY={style:{"text-align":"left"}},DY={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},YY=t("td",{style:{"text-align":"center"}},null,-1),JY={style:{"text-align":"left"}},QY=t("code",null,"树",-1),RY=t("code",null,"深度优先搜索",-1),SY=t("code",null,"动态规划",-1),ZY=t("code",null,"1+",-1),FY={style:{"text-align":"left"}},GY=t("td",{style:{"text-align":"center"}},"LCP 21",-1),XY={style:{"text-align":"left"}},$Y={href:"https://leetcode.cn/problems/Za25hA",target:"_blank",rel:"noopener noreferrer"},tJ=t("td",{style:{"text-align":"center"}},null,-1),eJ={style:{"text-align":"left"}},lJ=t("code",null,"深度优先搜索",-1),oJ=t("code",null,"广度优先搜索",-1),nJ=t("code",null,"图",-1),sJ=t("code",null,"1+",-1),dJ={style:{"text-align":"left"}},_J=t("td",{style:{"text-align":"center"}},"LCP 31",-1),cJ={style:{"text-align":"left"}},iJ={href:"https://leetcode.cn/problems/Db3wC1",target:"_blank",rel:"noopener noreferrer"},rJ=t("td",{style:{"text-align":"center"}},null,-1),aJ={style:{"text-align":"left"}},hJ=t("code",null,"深度优先搜索",-1),uJ=t("code",null,"广度优先搜索",-1),fJ=t("code",null,"数组",-1),gJ=t("code",null,"2+",-1),mJ={style:{"text-align":"left"}},yJ=t("td",{style:{"text-align":"center"}},"LCP 44",-1),xJ={style:{"text-align":"left"}},pJ={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},bJ=t("td",{style:{"text-align":"center"}},null,-1),kJ={style:{"text-align":"left"}},MJ=t("code",null,"树",-1),IJ=t("code",null,"深度优先搜索",-1),vJ=t("code",null,"广度优先搜索",-1),wJ=t("code",null,"2+",-1),HJ={style:{"text-align":"left"}},EJ=t("td",{style:{"text-align":"center"}},"LCP 45",-1),zJ={style:{"text-align":"left"}},OJ={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},jJ=t("td",{style:{"text-align":"center"}},null,-1),LJ={style:{"text-align":"left"}},qJ=t("code",null,"深度优先搜索",-1),CJ=t("code",null,"广度优先搜索",-1),NJ=t("code",null,"记忆化搜索",-1),PJ=t("code",null,"3+",-1),KJ={style:{"text-align":"left"}},VJ=t("td",{style:{"text-align":"center"}},"LCP 63",-1),BJ={style:{"text-align":"left"}},TJ={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},UJ=t("td",{style:{"text-align":"center"}},null,-1),AJ={style:{"text-align":"left"}},WJ=t("code",null,"深度优先搜索",-1),DJ=t("code",null,"广度优先搜索",-1),YJ=t("code",null,"图",-1),JJ=t("code",null,"5+",-1),QJ={style:{"text-align":"left"}},RJ=t("td",{style:{"text-align":"center"}},"LCP 64",-1),SJ={style:{"text-align":"left"}},ZJ={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},FJ=t("td",{style:{"text-align":"center"}},null,-1),GJ={style:{"text-align":"left"}},XJ=t("code",null,"树",-1),$J=t("code",null,"深度优先搜索",-1),tQ=t("code",null,"动态规划",-1),eQ=t("code",null,"1+",-1),lQ={style:{"text-align":"left"}},oQ=t("td",{style:{"text-align":"center"}},"LCP 67",-1),nQ={style:{"text-align":"left"}},sQ={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},dQ=t("td",{style:{"text-align":"center"}},null,-1),_Q={style:{"text-align":"left"}},cQ=t("code",null,"树",-1),iQ=t("code",null,"深度优先搜索",-1),rQ=t("code",null,"广度优先搜索",-1),aQ=t("code",null,"1+",-1),hQ={style:{"text-align":"left"}},uQ=t("td",{style:{"text-align":"center"}},"LCS 03",-1),fQ={style:{"text-align":"left"}},gQ={href:"https://leetcode.cn/problems/YesdPw",target:"_blank",rel:"noopener noreferrer"},mQ=t("td",{style:{"text-align":"center"}},null,-1),yQ={style:{"text-align":"left"}},xQ=t("code",null,"深度优先搜索",-1),pQ=t("code",null,"广度优先搜索",-1),bQ=t("code",null,"并查集",-1),kQ=t("code",null,"2+",-1),MQ={style:{"text-align":"left"}},IQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 13",-1),vQ={style:{"text-align":"left"}},wQ={href:"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof",target:"_blank",rel:"noopener noreferrer"},HQ={style:{"text-align":"center"}},EQ={style:{"text-align":"left"}},zQ=t("code",null,"深度优先搜索",-1),OQ=t("code",null,"广度优先搜索",-1),jQ=t("code",null,"动态规划",-1),LQ={style:{"text-align":"left"}},qQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),CQ={style:{"text-align":"left"}},NQ={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},PQ={style:{"text-align":"center"}},KQ={style:{"text-align":"left"}},VQ=t("code",null,"树",-1),BQ=t("code",null,"深度优先搜索",-1),TQ=t("code",null,"二叉树",-1),UQ={style:{"text-align":"left"}},AQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),WQ={style:{"text-align":"left"}},DQ={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},YQ={style:{"text-align":"center"}},JQ={style:{"text-align":"left"}},QQ=t("code",null,"树",-1),RQ=t("code",null,"深度优先搜索",-1),SQ=t("code",null,"广度优先搜索",-1),ZQ=t("code",null,"1+",-1),FQ={style:{"text-align":"left"}},GQ=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),XQ={style:{"text-align":"left"}},$Q={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},tR={style:{"text-align":"center"}},eR={style:{"text-align":"left"}},lR=t("code",null,"树",-1),oR=t("code",null,"深度优先搜索",-1),nR=t("code",null,"广度优先搜索",-1),sR=t("code",null,"1+",-1),dR={style:{"text-align":"left"}},_R=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),cR={style:{"text-align":"left"}},iR={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},rR={style:{"text-align":"center"}},aR={style:{"text-align":"left"}},hR=t("code",null,"树",-1),uR=t("code",null,"深度优先搜索",-1),fR=t("code",null,"回溯",-1),gR=t("code",null,"1+",-1),mR={style:{"text-align":"left"}},yR=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),xR={style:{"text-align":"left"}},pR={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},bR={style:{"text-align":"center"}},kR={style:{"text-align":"left"}},MR=t("code",null,"栈",-1),IR=t("code",null,"树",-1),vR=t("code",null,"深度优先搜索",-1),wR=t("code",null,"4+",-1),HR={style:{"text-align":"left"}},ER=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),zR={style:{"text-align":"left"}},OR={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},jR={style:{"text-align":"center"}},LR={style:{"text-align":"left"}},qR=t("code",null,"树",-1),CR=t("code",null,"深度优先搜索",-1),NR=t("code",null,"广度优先搜索",-1),PR=t("code",null,"3+",-1),KR={style:{"text-align":"left"}},VR=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),BR={style:{"text-align":"left"}},TR={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},UR={style:{"text-align":"center"}},AR={style:{"text-align":"left"}},WR=t("code",null,"树",-1),DR=t("code",null,"深度优先搜索",-1),YR=t("code",null,"二叉搜索树",-1),JR=t("code",null,"1+",-1),QR={style:{"text-align":"left"}},RR=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - I",-1),SR={style:{"text-align":"left"}},ZR={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},FR={style:{"text-align":"center"}},GR={style:{"text-align":"left"}},XR=t("code",null,"树",-1),$R=t("code",null,"深度优先搜索",-1),tS=t("code",null,"广度优先搜索",-1),eS=t("code",null,"1+",-1),lS={style:{"text-align":"left"}},oS=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - II",-1),nS={style:{"text-align":"left"}},sS={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},dS=t("td",{style:{"text-align":"center"}},null,-1),_S={style:{"text-align":"left"}},cS=t("code",null,"树",-1),iS=t("code",null,"深度优先搜索",-1),rS=t("code",null,"二叉树",-1),aS={style:{"text-align":"left"}},hS=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - I",-1),uS={style:{"text-align":"left"}},fS={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},gS=t("td",{style:{"text-align":"center"}},null,-1),mS={style:{"text-align":"left"}},yS=t("code",null,"树",-1),xS=t("code",null,"深度优先搜索",-1),pS=t("code",null,"二叉搜索树",-1),bS=t("code",null,"1+",-1),kS={style:{"text-align":"left"}},MS=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - II",-1),IS={style:{"text-align":"left"}},vS={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},wS=t("td",{style:{"text-align":"center"}},null,-1),HS={style:{"text-align":"left"}},ES=t("code",null,"树",-1),zS=t("code",null,"深度优先搜索",-1),OS=t("code",null,"二叉树",-1),jS={style:{"text-align":"left"}},LS=t("td",{style:{"text-align":"center"}},"剑指 Offer II 105",-1),qS={style:{"text-align":"left"}},CS={href:"https://leetcode.cn/problems/ZL6zAn",target:"_blank",rel:"noopener noreferrer"},NS=t("td",{style:{"text-align":"center"}},null,-1),PS={style:{"text-align":"left"}},KS=t("code",null,"深度优先搜索",-1),VS=t("code",null,"广度优先搜索",-1),BS=t("code",null,"并查集",-1),TS=t("code",null,"2+",-1),US={style:{"text-align":"left"}},AS=t("td",{style:{"text-align":"center"}},"剑指 Offer II 106",-1),WS={style:{"text-align":"left"}},DS={href:"https://leetcode.cn/problems/vEAB3K",target:"_blank",rel:"noopener noreferrer"},YS=t("td",{style:{"text-align":"center"}},null,-1),JS={style:{"text-align":"left"}},QS=t("code",null,"深度优先搜索",-1),RS=t("code",null,"广度优先搜索",-1),SS=t("code",null,"并查集",-1),ZS=t("code",null,"1+",-1),FS={style:{"text-align":"left"}},GS=t("td",{style:{"text-align":"center"}},"剑指 Offer II 110",-1),XS={style:{"text-align":"left"}},$S={href:"https://leetcode.cn/problems/bP4bmD",target:"_blank",rel:"noopener noreferrer"},tZ=t("td",{style:{"text-align":"center"}},null,-1),eZ={style:{"text-align":"left"}},lZ=t("code",null,"深度优先搜索",-1),oZ=t("code",null,"广度优先搜索",-1),nZ=t("code",null,"图",-1),sZ=t("code",null,"1+",-1),dZ={style:{"text-align":"left"}},_Z=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),cZ={style:{"text-align":"left"}},iZ={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},rZ=t("td",{style:{"text-align":"center"}},null,-1),aZ={style:{"text-align":"left"}},hZ=t("code",null,"深度优先搜索",-1),uZ=t("code",null,"广度优先搜索",-1),fZ=t("code",null,"并查集",-1),gZ=t("code",null,"3+",-1),mZ={style:{"text-align":"left"}},yZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),xZ={style:{"text-align":"left"}},pZ={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},bZ=t("td",{style:{"text-align":"center"}},null,-1),kZ={style:{"text-align":"left"}},MZ=t("code",null,"深度优先搜索",-1),IZ=t("code",null,"广度优先搜索",-1),vZ=t("code",null,"图",-1),wZ=t("code",null,"5+",-1),HZ={style:{"text-align":"left"}},EZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 113",-1),zZ={style:{"text-align":"left"}},OZ={href:"https://leetcode.cn/problems/QA2IGt",target:"_blank",rel:"noopener noreferrer"},jZ=t("td",{style:{"text-align":"center"}},null,-1),LZ={style:{"text-align":"left"}},qZ=t("code",null,"深度优先搜索",-1),CZ=t("code",null,"广度优先搜索",-1),NZ=t("code",null,"图",-1),PZ=t("code",null,"1+",-1),KZ={style:{"text-align":"left"}},VZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 114",-1),BZ={style:{"text-align":"left"}},TZ={href:"https://leetcode.cn/problems/Jf1JuT",target:"_blank",rel:"noopener noreferrer"},UZ=t("td",{style:{"text-align":"center"}},null,-1),AZ={style:{"text-align":"left"}},WZ=t("code",null,"深度优先搜索",-1),DZ=t("code",null,"广度优先搜索",-1),YZ=t("code",null,"图",-1),JZ=t("code",null,"3+",-1),QZ={style:{"text-align":"left"}},RZ=t("td",{style:{"text-align":"center"}},"剑指 Offer II 116",-1),SZ={style:{"text-align":"left"}},ZZ={href:"https://leetcode.cn/problems/bLyHh0",target:"_blank",rel:"noopener noreferrer"},FZ=t("td",{style:{"text-align":"center"}},null,-1),GZ={style:{"text-align":"left"}},XZ=t("code",null,"深度优先搜索",-1),$Z=t("code",null,"广度优先搜索",-1),tF=t("code",null,"并查集",-1),eF=t("code",null,"1+",-1),lF={style:{"text-align":"left"}},oF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 117",-1),nF={style:{"text-align":"left"}},sF={href:"https://leetcode.cn/problems/H6lPxb",target:"_blank",rel:"noopener noreferrer"},dF=t("td",{style:{"text-align":"center"}},null,-1),_F={style:{"text-align":"left"}},cF=t("code",null,"深度优先搜索",-1),iF=t("code",null,"广度优先搜索",-1),rF=t("code",null,"并查集",-1),aF=t("code",null,"3+",-1),hF={style:{"text-align":"left"}},uF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 118",-1),fF={style:{"text-align":"left"}},gF={href:"https://leetcode.cn/problems/7LpjUW",target:"_blank",rel:"noopener noreferrer"},mF=t("td",{style:{"text-align":"center"}},null,-1),yF={style:{"text-align":"left"}},xF=t("code",null,"深度优先搜索",-1),pF=t("code",null,"广度优先搜索",-1),bF=t("code",null,"并查集",-1),kF=t("code",null,"1+",-1),MF={style:{"text-align":"left"}},IF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 28",-1),vF={style:{"text-align":"left"}},wF={href:"https://leetcode.cn/problems/Qv1Da2",target:"_blank",rel:"noopener noreferrer"},HF=t("td",{style:{"text-align":"center"}},null,-1),EF={style:{"text-align":"left"}},zF=t("code",null,"深度优先搜索",-1),OF=t("code",null,"链表",-1),jF=t("code",null,"双向链表",-1),LF={style:{"text-align":"left"}},qF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),CF={style:{"text-align":"left"}},NF={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},PF=t("td",{style:{"text-align":"center"}},null,-1),KF={style:{"text-align":"left"}},VF=t("code",null,"树",-1),BF=t("code",null,"深度优先搜索",-1),TF=t("code",null,"广度优先搜索",-1),UF=t("code",null,"1+",-1),AF={style:{"text-align":"left"}},WF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),DF={style:{"text-align":"left"}},YF={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},JF=t("td",{style:{"text-align":"center"}},null,-1),QF={style:{"text-align":"left"}},RF=t("code",null,"树",-1),SF=t("code",null,"深度优先搜索",-1),ZF=t("code",null,"广度优先搜索",-1),FF=t("code",null,"1+",-1),GF={style:{"text-align":"left"}},XF=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),$F={style:{"text-align":"left"}},tG={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},eG=t("td",{style:{"text-align":"center"}},null,-1),lG={style:{"text-align":"left"}},oG=t("code",null,"树",-1),nG=t("code",null,"深度优先搜索",-1),sG=t("code",null,"广度优先搜索",-1),dG=t("code",null,"1+",-1),_G={style:{"text-align":"left"}},cG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),iG={style:{"text-align":"left"}},rG={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},aG=t("td",{style:{"text-align":"center"}},null,-1),hG={style:{"text-align":"left"}},uG=t("code",null,"树",-1),fG=t("code",null,"深度优先搜索",-1),gG=t("code",null,"二叉树",-1),mG={style:{"text-align":"left"}},yG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),xG={style:{"text-align":"left"}},pG={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},bG=t("td",{style:{"text-align":"center"}},null,-1),kG={style:{"text-align":"left"}},MG=t("code",null,"树",-1),IG=t("code",null,"深度优先搜索",-1),vG=t("code",null,"广度优先搜索",-1),wG=t("code",null,"3+",-1),HG={style:{"text-align":"left"}},EG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),zG={style:{"text-align":"left"}},OG={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},jG=t("td",{style:{"text-align":"center"}},null,-1),LG={style:{"text-align":"left"}},qG=t("code",null,"树",-1),CG=t("code",null,"深度优先搜索",-1),NG=t("code",null,"二叉树",-1),PG={style:{"text-align":"left"}},KG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),VG={style:{"text-align":"left"}},BG={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},TG=t("td",{style:{"text-align":"center"}},null,-1),UG={style:{"text-align":"left"}},AG=t("code",null,"树",-1),WG=t("code",null,"深度优先搜索",-1),DG=t("code",null,"二叉树",-1),YG={style:{"text-align":"left"}},JG=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),QG={style:{"text-align":"left"}},RG={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},SG=t("td",{style:{"text-align":"center"}},null,-1),ZG={style:{"text-align":"left"}},FG=t("code",null,"树",-1),GG=t("code",null,"深度优先搜索",-1),XG=t("code",null,"动态规划",-1),$G=t("code",null,"1+",-1),tX={style:{"text-align":"left"}},eX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),lX={style:{"text-align":"left"}},oX={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},nX=t("td",{style:{"text-align":"center"}},null,-1),sX={style:{"text-align":"left"}},dX=t("code",null,"栈",-1),_X=t("code",null,"树",-1),cX=t("code",null,"深度优先搜索",-1),iX=t("code",null,"2+",-1),rX={style:{"text-align":"left"}},aX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),hX={style:{"text-align":"left"}},uX={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},fX=t("td",{style:{"text-align":"center"}},null,-1),gX={style:{"text-align":"left"}},mX=t("code",null,"树",-1),yX=t("code",null,"深度优先搜索",-1),xX=t("code",null,"二叉搜索树",-1),pX=t("code",null,"1+",-1),bX={style:{"text-align":"left"}},kX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),MX={style:{"text-align":"left"}},IX={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},vX=t("td",{style:{"text-align":"center"}},null,-1),wX={style:{"text-align":"left"}},HX=t("code",null,"树",-1),EX=t("code",null,"深度优先搜索",-1),zX=t("code",null,"二叉搜索树",-1),OX=t("code",null,"1+",-1),jX={style:{"text-align":"left"}},LX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 64",-1),qX={style:{"text-align":"left"}},CX={href:"https://leetcode.cn/problems/US1pGT",target:"_blank",rel:"noopener noreferrer"},NX=t("td",{style:{"text-align":"center"}},null,-1),PX={style:{"text-align":"left"}},KX=t("code",null,"深度优先搜索",-1),VX=t("code",null,"设计",-1),BX=t("code",null,"字典树",-1),TX=t("code",null,"2+",-1),UX={style:{"text-align":"left"}},AX=t("td",{style:{"text-align":"center"}},"剑指 Offer II 86",-1),WX={style:{"text-align":"left"}},DX={href:"https://leetcode.cn/problems/M99OJA",target:"_blank",rel:"noopener noreferrer"},YX=t("td",{style:{"text-align":"center"}},null,-1),JX={style:{"text-align":"left"}},QX=t("code",null,"深度优先搜索",-1),RX=t("code",null,"广度优先搜索",-1),SX=t("code",null,"图",-1),ZX=t("code",null,"1+",-1),FX={style:{"text-align":"left"}},GX=t("td",{style:{"text-align":"center"}},"面试题 04.01",-1),XX={style:{"text-align":"left"}},$X={href:"https://leetcode.cn/problems/route-between-nodes-lcci",target:"_blank",rel:"noopener noreferrer"},t$=t("td",{style:{"text-align":"center"}},null,-1),e$={style:{"text-align":"left"}},l$=t("code",null,"深度优先搜索",-1),o$=t("code",null,"广度优先搜索",-1),n$=t("code",null,"图",-1),s$={style:{"text-align":"left"}},d$=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),_$={style:{"text-align":"left"}},c$={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},i$=t("td",{style:{"text-align":"center"}},null,-1),r$={style:{"text-align":"left"}},a$=t("code",null,"树",-1),h$=t("code",null,"深度优先搜索",-1),u$=t("code",null,"二叉树",-1),f$={style:{"text-align":"left"}},g$=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),m$={style:{"text-align":"left"}},y$={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},x$=t("td",{style:{"text-align":"center"}},null,-1),p$={style:{"text-align":"left"}},b$=t("code",null,"树",-1),k$=t("code",null,"深度优先搜索",-1),M$=t("code",null,"二叉搜索树",-1),I$=t("code",null,"1+",-1),v$={style:{"text-align":"left"}},w$=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),H$={style:{"text-align":"left"}},E$={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},z$=t("td",{style:{"text-align":"center"}},null,-1),O$={style:{"text-align":"left"}},j$=t("code",null,"树",-1),L$=t("code",null,"深度优先搜索",-1),q$=t("code",null,"二叉搜索树",-1),C$=t("code",null,"1+",-1),N$={style:{"text-align":"left"}},P$=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),K$={style:{"text-align":"left"}},V$={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},B$=t("td",{style:{"text-align":"center"}},null,-1),T$={style:{"text-align":"left"}},U$=t("code",null,"树",-1),A$=t("code",null,"深度优先搜索",-1),W$=t("code",null,"二叉树",-1),D$={style:{"text-align":"left"}},Y$=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),J$={style:{"text-align":"left"}},Q$={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},R$=t("td",{style:{"text-align":"center"}},null,-1),S$={style:{"text-align":"left"}},Z$=t("code",null,"树",-1),F$=t("code",null,"深度优先搜索",-1),G$=t("code",null,"二叉树",-1),X$=t("code",null,"2+",-1),$$={style:{"text-align":"left"}},ttt=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),ett={style:{"text-align":"left"}},ltt={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},ott=t("td",{style:{"text-align":"center"}},null,-1),ntt={style:{"text-align":"left"}},stt=t("code",null,"树",-1),dtt=t("code",null,"深度优先搜索",-1),_tt=t("code",null,"二叉树",-1),ctt={style:{"text-align":"left"}},itt=t("td",{style:{"text-align":"center"}},"面试题 08.10",-1),rtt={style:{"text-align":"left"}},att={href:"https://leetcode.cn/problems/color-fill-lcci",target:"_blank",rel:"noopener noreferrer"},htt=t("td",{style:{"text-align":"center"}},null,-1),utt={style:{"text-align":"left"}},ftt=t("code",null,"深度优先搜索",-1),gtt=t("code",null,"广度优先搜索",-1),mtt=t("code",null,"数组",-1),ytt=t("code",null,"1+",-1),xtt={style:{"text-align":"left"}},ptt=t("td",{style:{"text-align":"center"}},"面试题 16.19",-1),btt={style:{"text-align":"left"}},ktt={href:"https://leetcode.cn/problems/pond-sizes-lcci",target:"_blank",rel:"noopener noreferrer"},Mtt=t("td",{style:{"text-align":"center"}},null,-1),Itt={style:{"text-align":"left"}},vtt=t("code",null,"深度优先搜索",-1),wtt=t("code",null,"广度优先搜索",-1),Htt=t("code",null,"并查集",-1),Ett=t("code",null,"2+",-1),ztt={style:{"text-align":"left"}},Ott=t("td",{style:{"text-align":"center"}},"面试题 17.07",-1),jtt={style:{"text-align":"left"}},Ltt={href:"https://leetcode.cn/problems/baby-names-lcci",target:"_blank",rel:"noopener noreferrer"},qtt=t("td",{style:{"text-align":"center"}},null,-1),Ctt={style:{"text-align":"left"}},Ntt=t("code",null,"深度优先搜索",-1),Ptt=t("code",null,"广度优先搜索",-1),Ktt=t("code",null,"并查集",-1),Vtt=t("code",null,"4+",-1),Btt={style:{"text-align":"left"}},Ttt=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),Utt={style:{"text-align":"left"}},Att={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},Wtt=t("td",{style:{"text-align":"center"}},null,-1),Dtt={style:{"text-align":"left"}},Ytt=t("code",null,"栈",-1),Jtt=t("code",null,"树",-1),Qtt=t("code",null,"深度优先搜索",-1),Rtt=t("code",null,"3+",-1),Stt={style:{"text-align":"left"}};function Ztt(Ftt,Gtt){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),r("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[Y]),_:1})]),J,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),dt,l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Nt]),_:1})])]),Pt,a(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Vt,t("td",Bt,[t("a",Tt,[l("二叉树的中序遍历"),e(s)])]),t("td",Ut,[e(n,{to:"/leetcode/problem/0094.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",At,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Dt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Yt]),_:1}),l(),Jt]),t("td",Qt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Rt,t("td",St,[t("a",Zt,[l("验证二叉搜索树"),e(s)])]),t("td",Ft,[e(n,{to:"/leetcode/problem/0098.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[te]),_:1}),l(),ee]),t("td",le,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oe,t("td",ne,[t("a",se,[l("恢复二叉搜索树"),e(s)])]),t("td",de,[e(n,{to:"/leetcode/problem/0099.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_e,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ie]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[re]),_:1}),l(),ae]),t("td",he,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[l("相同的树"),e(s)])]),t("td",me,[e(n,{to:"/leetcode/problem/0100.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ye,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[xe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[pe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[be]),_:1}),l(),ke]),t("td",Me,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ie,t("td",ve,[t("a",we,[l("对称二叉树"),e(s)])]),t("td",He,[e(n,{to:"/leetcode/problem/0101.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ee,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ze]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Oe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[je]),_:1}),l(),Le]),t("td",qe,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ce,t("td",Ne,[t("a",Pe,[l("二叉树的最大深度"),e(s)])]),t("td",Ke,[e(n,{to:"/leetcode/problem/0104.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ve,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Be]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Te]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ue]),_:1}),l(),Ae]),t("td",We,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[De,t("td",Ye,[t("a",Je,[l("平衡二叉树"),e(s)])]),t("td",Qe,[e(n,{to:"/leetcode/problem/0110.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Re,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Se]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ze]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Fe]),_:1})]),t("td",Ge,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xe,t("td",$e,[t("a",tl,[l("二叉树的最小深度"),e(s)])]),t("td",el,[e(n,{to:"/leetcode/problem/0111.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ll,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ol]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[sl]),_:1}),l(),dl]),t("td",_l,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[cl,t("td",il,[t("a",rl,[l("路径总和"),e(s)])]),t("td",al,[e(n,{to:"/leetcode/problem/0112.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ul]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[gl]),_:1}),l(),ml]),t("td",yl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xl,t("td",pl,[t("a",bl,[l("路径总和 II"),e(s)])]),t("td",kl,[e(n,{to:"/leetcode/problem/0113.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ml,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Il]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[vl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[wl]),_:1}),l(),Hl]),t("td",El,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zl,t("td",Ol,[t("a",jl,[l("二叉树展开为链表"),e(s)])]),t("td",Ll,[e(n,{to:"/leetcode/problem/0114.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ql,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Cl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Nl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Pl]),_:1}),l(),Kl]),t("td",Vl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bl,t("td",Tl,[t("a",Ul,[l("填充每个节点的下一个右侧节点指针"),e(s)])]),t("td",Al,[e(n,{to:"/leetcode/problem/0116.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Wl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Dl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Yl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Jl]),_:1}),l(),Ql]),t("td",Rl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sl,t("td",Zl,[t("a",Fl,[l("填充每个节点的下一个右侧节点指针 II"),e(s)])]),t("td",Gl,[e(n,{to:"/leetcode/problem/0117.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Xl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$l]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[to]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[eo]),_:1}),l(),lo]),t("td",oo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[no,t("td",so,[t("a",_o,[l("二叉树中的最大路径和"),e(s)])]),t("td",co,[e(n,{to:"/leetcode/problem/0124.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",io,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ro]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ao]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[ho]),_:1}),l(),uo]),t("td",fo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[go,t("td",mo,[t("a",yo,[l("求根节点到叶节点数字之和"),e(s)])]),t("td",xo,[e(n,{to:"/leetcode/problem/0129.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",po,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[bo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ko]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Mo]),_:1})]),t("td",Io,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vo,t("td",wo,[t("a",Ho,[l("被围绕的区域"),e(s)])]),t("td",Eo,[e(n,{to:"/leetcode/problem/0130.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",zo,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Oo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[jo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Lo]),_:1}),l(),qo]),t("td",Co,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[No,t("td",Po,[t("a",Ko,[l("克隆图"),e(s)])]),t("td",Vo,[e(n,{to:"/leetcode/problem/0133.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Bo,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[To]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Uo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Ao]),_:1}),l(),Wo]),t("td",Do,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yo,t("td",Jo,[t("a",Qo,[l("二叉树的前序遍历"),e(s)])]),t("td",Ro,[e(n,{to:"/leetcode/problem/0144.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",So,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Zo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Fo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Go]),_:1}),l(),Xo]),t("td",$o,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[tn,t("td",en,[t("a",ln,[l("二叉树的后序遍历"),e(s)])]),t("td",on,[e(n,{to:"/leetcode/problem/0145.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",nn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[dn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[_n]),_:1}),l(),cn]),t("td",rn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[an,t("td",hn,[t("a",un,[l("上下翻转二叉树"),e(s)])]),t("td",fn,[e(n,{to:"/leetcode/problem/0156.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",gn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[xn]),_:1})]),t("td",pn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bn,t("td",kn,[t("a",Mn,[l("二叉树的右视图"),e(s)])]),t("td",In,[e(n,{to:"/leetcode/problem/0199.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[wn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Hn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[En]),_:1}),l(),zn]),t("td",On,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jn,t("td",Ln,[t("a",qn,[l("岛屿数量"),e(s)])]),t("td",Cn,[e(n,{to:"/leetcode/problem/0200.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Nn,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Pn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Kn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Vn]),_:1}),l(),Bn]),t("td",Tn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Un,t("td",An,[t("a",Wn,[l("课程表"),e(s)])]),t("td",Dn,[e(n,{to:"/leetcode/problem/0207.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yn,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Jn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Rn]),_:1}),l(),Sn]),t("td",Zn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fn,t("td",Gn,[t("a",Xn,[l("课程表 II"),e(s)])]),t("td",$n,[e(n,{to:"/leetcode/problem/0210.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ts,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[es]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ls]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[os]),_:1}),l(),ns]),t("td",ss,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ds,t("td",_s,[t("a",cs,[l("添加与搜索单词 - 数据结构设计"),e(s)])]),t("td",is,[e(n,{to:"/leetcode/problem/0211.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",rs,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[as]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[hs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[us]),_:1}),l(),fs]),t("td",gs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ms,t("td",ys,[t("a",xs,[l("翻转二叉树"),e(s)])]),t("td",ps,[e(n,{to:"/leetcode/problem/0226.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",bs,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ks]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ms]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Is]),_:1}),l(),vs]),t("td",ws,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Hs,t("td",Es,[t("a",zs,[l("二叉搜索树中第 K 小的元素"),e(s)])]),t("td",Os,[e(n,{to:"/leetcode/problem/0230.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",js,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ls]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Cs]),_:1}),l(),Ns]),t("td",Ps,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ks,t("td",Vs,[t("a",Bs,[l("二叉搜索树的最近公共祖先"),e(s)])]),t("td",Ts,[e(n,{to:"/leetcode/problem/0235.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Us,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[As]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ws]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Ds]),_:1}),l(),Ys]),t("td",Js,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qs,t("td",Rs,[t("a",Ss,[l("二叉树的最近公共祖先"),e(s)])]),t("td",Zs,[e(n,{to:"/leetcode/problem/0236.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Fs,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Gs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Xs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[$s]),_:1})]),t("td",td,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ed,t("td",ld,[t("a",od,[l("统计同值子树"),e(s)])]),nd,t("td",sd,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[dd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[_d]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[cd]),_:1})]),t("td",id,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rd,t("td",ad,[t("a",hd,[l("二叉树的所有路径"),e(s)])]),t("td",ud,[e(n,{to:"/leetcode/problem/0257.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fd,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[md]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[yd]),_:1}),l(),xd]),t("td",pd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[bd,t("td",kd,[t("a",Md,[l("以图判树"),e(s)])]),Id,t("td",vd,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Hd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Ed]),_:1}),l(),zd]),t("td",Od,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jd,t("td",Ld,[t("a",qd,[l("火星词典"),e(s)])]),Cd,t("td",Nd,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Pd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Kd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Vd]),_:1}),l(),Bd]),t("td",Td,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ud,t("td",Ad,[t("a",Wd,[l("最接近的二叉搜索树值"),e(s)])]),Dd,t("td",Yd,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Jd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Qd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Rd]),_:1}),l(),Sd]),t("td",Zd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fd,t("td",Gd,[t("a",Xd,[l("最接近的二叉搜索树值 II"),e(s)])]),$d,t("td",t_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[e_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[l_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[o_]),_:1}),l(),n_]),t("td",s_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d_,t("td",__,[t("a",c_,[l("二叉搜索树中的中序后继"),e(s)])]),i_,t("td",r_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[a_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[h_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[u_]),_:1}),l(),f_]),t("td",g_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m_,t("td",y_,[t("a",x_,[l("二叉树的序列化与反序列化"),e(s)])]),t("td",p_,[e(n,{to:"/leetcode/problem/0297.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",b_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[k_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[M_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[I_]),_:1}),l(),v_]),t("td",w_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H_,t("td",E_,[t("a",z_,[l("二叉树最长连续序列"),e(s)])]),O_,t("td",j_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[L_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[q_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[C_]),_:1})]),t("td",N_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P_,t("td",K_,[t("a",V_,[l("包含全部黑色像素的最小矩形"),e(s)])]),B_,t("td",T_,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[U_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[A_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[W_]),_:1}),l(),D_]),t("td",Y_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[J_,t("td",Q_,[t("a",R_,[l("最小高度树"),e(s)])]),S_,t("td",Z_,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[F_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[G_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[X_]),_:1}),l(),$_]),t("td",tc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ec,t("td",lc,[t("a",oc,[l("二叉树的垂直遍历"),e(s)])]),nc,t("td",sc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[dc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[_c]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[cc]),_:1}),l(),ic]),t("td",rc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ac,t("td",hc,[t("a",uc,[l("无向图中连通分量的数目"),e(s)])]),fc,t("td",gc,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[mc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[yc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[xc]),_:1}),l(),pc]),t("td",bc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kc,t("td",Mc,[t("a",Ic,[l("矩阵中的最长递增路径"),e(s)])]),vc,t("td",wc,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Hc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ec]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[zc]),_:1}),l(),Oc]),t("td",jc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lc,t("td",qc,[t("a",Cc,[l("重新安排行程"),e(s)])]),Nc,t("td",Pc,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Kc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Vc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[Bc]),_:1})]),t("td",Tc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Uc,t("td",Ac,[t("a",Wc,[l("最大二叉搜索子树"),e(s)])]),Dc,t("td",Yc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Jc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Qc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Rc]),_:1}),l(),Sc]),t("td",Zc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fc,t("td",Gc,[t("a",Xc,[l("打家劫舍 III"),e(s)])]),$c,t("td",ti,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ei]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[li]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[oi]),_:1}),l(),ni]),t("td",si,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[di,t("td",_i,[t("a",ci,[l("嵌套列表加权和"),e(s)])]),ii,t("td",ri,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ai]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[hi]),_:1})]),t("td",ui,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fi,t("td",gi,[t("a",mi,[l("扁平化嵌套列表迭代器"),e(s)])]),yi,t("td",xi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[pi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[bi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ki]),_:1}),l(),Mi]),t("td",Ii,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vi,t("td",wi,[t("a",Hi,[l("嵌套列表加权和 II"),e(s)])]),Ei,t("td",zi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Oi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ji]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Li]),_:1})]),t("td",qi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ci,t("td",Ni,[t("a",Pi,[l("水壶问题"),e(s)])]),Ki,t("td",Vi,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Bi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ti]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[Ui]),_:1})]),t("td",Ai,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wi,t("td",Di,[t("a",Yi,[l("寻找二叉树的叶子节点"),e(s)])]),t("td",Ji,[e(n,{to:"/leetcode/problem/0366.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qi,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ri]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Si]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Zi]),_:1})]),t("td",Fi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gi,t("td",Xi,[t("a",$i,[l("迷你语法分析器"),e(s)])]),tr,t("td",er,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[lr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[or]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[nr]),_:1})]),t("td",sr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dr,t("td",_r,[t("a",cr,[l("字典序排数"),e(s)])]),ir,t("td",rr,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ar]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[hr]),_:1})]),t("td",ur,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fr,t("td",gr,[t("a",mr,[l("文件的最长绝对路径"),e(s)])]),yr,t("td",xr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[pr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[br]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[kr]),_:1})]),t("td",Mr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ir,t("td",vr,[t("a",wr,[l("除法求值"),e(s)])]),t("td",Hr,[e(n,{to:"/leetcode/problem/0399.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Er,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[zr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Or]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[jr]),_:1}),l(),Lr]),t("td",qr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cr,t("td",Nr,[t("a",Pr,[l("左叶子之和"),e(s)])]),Kr,t("td",Vr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Br]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Tr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ur]),_:1}),l(),Ar]),t("td",Wr,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Dr,t("td",Yr,[t("a",Jr,[l("太平洋大西洋水流问题"),e(s)])]),Qr,t("td",Rr,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Sr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Zr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Fr]),_:1}),l(),Gr]),t("td",Xr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$r,t("td",ta,[t("a",ea,[l("棋盘上的战舰"),e(s)])]),la,t("td",oa,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[na]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[sa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[da]),_:1})]),t("td",_a,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ca,t("td",ia,[t("a",ra,[l("将二叉搜索树转化为排序的双向链表"),e(s)])]),t("td",aa,[e(n,{to:"/leetcode/problem/0426.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ha,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ua]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[fa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ga]),_:1}),l(),ma]),t("td",ya,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xa,t("td",pa,[t("a",ba,[l("序列化和反序列化 N 叉树"),e(s)])]),ka,t("td",Ma,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ia]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[va]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[wa]),_:1}),l(),Ha]),t("td",Ea,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[za,t("td",Oa,[t("a",ja,[l("扁平化多级双向链表"),e(s)])]),t("td",La,[e(n,{to:"/leetcode/problem/0430.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",qa,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ca]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[Na]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[Pa]),_:1})]),t("td",Ka,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Va,t("td",Ba,[t("a",Ta,[l("将 N 叉树编码为二叉树"),e(s)])]),Ua,t("td",Aa,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Wa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Da]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ya]),_:1}),l(),Ja]),t("td",Qa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ra,t("td",Sa,[t("a",Za,[l("路径总和 III"),e(s)])]),t("td",Fa,[e(n,{to:"/leetcode/problem/0437.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ga,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Xa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[$a]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[th]),_:1})]),t("td",eh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lh,t("td",oh,[t("a",nh,[l("序列化和反序列化二叉搜索树"),e(s)])]),sh,t("td",dh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_h]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ch]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ih]),_:1}),l(),rh]),t("td",ah,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hh,t("td",uh,[t("a",fh,[l("岛屿的周长"),e(s)])]),gh,t("td",mh,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[xh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ph]),_:1}),l(),bh]),t("td",kh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mh,t("td",Ih,[t("a",vh,[l("连接词"),e(s)])]),wh,t("td",Hh,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Eh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[zh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Oh]),_:1}),l(),jh]),t("td",Lh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qh,t("td",Ch,[t("a",Nh,[l("迷宫"),e(s)])]),Ph,t("td",Kh,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Vh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Bh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Th]),_:1}),l(),Uh]),t("td",Ah,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wh,t("td",Dh,[t("a",Yh,[l("迷宫 III"),e(s)])]),Jh,t("td",Qh,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Rh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Sh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Zh]),_:1}),l(),Fh]),t("td",Gh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xh,t("td",$h,[t("a",t1,[l("二叉搜索树中的众数"),e(s)])]),e1,t("td",l1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[o1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[n1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[s1]),_:1}),l(),d1]),t("td",_1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[c1,t("td",i1,[t("a",r1,[l("迷宫 II"),e(s)])]),a1,t("td",h1,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[u1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[f1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[g1]),_:1}),l(),m1]),t("td",y1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[x1,t("td",p1,[t("a",b1,[l("出现次数最多的子树元素和"),e(s)])]),k1,t("td",M1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[I1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[v1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[w1]),_:1}),l(),H1]),t("td",E1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z1,t("td",O1,[t("a",j1,[l("找树左下角的值"),e(s)])]),L1,t("td",q1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[C1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[N1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[P1]),_:1}),l(),K1]),t("td",V1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B1,t("td",T1,[t("a",U1,[l("自由之路"),e(s)])]),t("td",A1,[e(n,{to:"/leetcode/problem/0514.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",W1,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[D1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Y1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[J1]),_:1}),l(),Q1]),t("td",R1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[S1,t("td",Z1,[t("a",F1,[l("在每个树行中找最大值"),e(s)])]),G1,t("td",X1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[tu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[eu]),_:1}),l(),lu]),t("td",ou,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nu,t("td",su,[t("a",du,[l("扫雷游戏"),e(s)])]),_u,t("td",cu,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[iu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ru]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[au]),_:1}),l(),hu]),t("td",uu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fu,t("td",gu,[t("a",mu,[l("二叉搜索树的最小绝对差"),e(s)])]),t("td",yu,[e(n,{to:"/leetcode/problem/0530.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xu,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[pu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[bu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ku]),_:1}),l(),Mu]),t("td",Iu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vu,t("td",wu,[t("a",Hu,[l("从字符串生成二叉树"),e(s)])]),Eu,t("td",zu,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ou]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ju]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Lu]),_:1}),l(),qu]),t("td",Cu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nu,t("td",Pu,[t("a",Ku,[l("把二叉搜索树转换为累加树"),e(s)])]),Vu,t("td",Bu,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Tu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Uu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Au]),_:1}),l(),Wu]),t("td",Du,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yu,t("td",Ju,[t("a",Qu,[l("二叉树的直径"),e(s)])]),t("td",Ru,[e(n,{to:"/leetcode/problem/0543.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Su,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Zu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Fu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Gu]),_:1})]),t("td",Xu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$u,t("td",tf,[t("a",ef,[l("二叉树的边界"),e(s)])]),lf,t("td",of,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[nf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[sf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[df]),_:1})]),t("td",_f,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cf,t("td",rf,[t("a",af,[l("省份数量"),e(s)])]),hf,t("td",uf,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ff]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[gf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[mf]),_:1}),l(),yf]),t("td",xf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pf,t("td",bf,[t("a",kf,[l("二叉树最长连续序列 II"),e(s)])]),Mf,t("td",If,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Hf]),_:1})]),t("td",Ef,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zf,t("td",Of,[t("a",jf,[l("N 叉树的最大深度"),e(s)])]),t("td",Lf,[e(n,{to:"/leetcode/problem/0559.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",qf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Cf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Nf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Pf]),_:1})]),t("td",Kf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Vf,t("td",Bf,[t("a",Tf,[l("二叉树的坡度"),e(s)])]),Uf,t("td",Af,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Wf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Df]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Yf]),_:1})]),t("td",Jf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Qf,t("td",Rf,[t("a",Sf,[l("数组嵌套"),e(s)])]),Zf,t("td",Ff,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Gf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Xf]),_:1})]),t("td",$f,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tg,t("td",eg,[t("a",lg,[l("另一棵树的子树"),e(s)])]),t("td",og,[e(n,{to:"/leetcode/problem/0572.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ng,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[sg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[_g]),_:1}),l(),cg]),t("td",ig,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[rg,t("td",ag,[t("a",hg,[l("杀掉进程"),e(s)])]),ug,t("td",fg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[mg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[yg]),_:1}),l(),xg]),t("td",pg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bg,t("td",kg,[t("a",Mg,[l("N 叉树的前序遍历"),e(s)])]),t("td",Ig,[e(n,{to:"/leetcode/problem/0589.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vg,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[wg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Hg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Eg]),_:1})]),t("td",zg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Og,t("td",jg,[t("a",Lg,[l("N 叉树的后序遍历"),e(s)])]),t("td",qg,[e(n,{to:"/leetcode/problem/0590.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Cg,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ng]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Pg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Kg]),_:1})]),t("td",Vg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Bg,t("td",Tg,[t("a",Ug,[l("根据二叉树创建字符串"),e(s)])]),Ag,t("td",Wg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Dg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Yg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Jg]),_:1}),l(),Qg]),t("td",Rg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sg,t("td",Zg,[t("a",Fg,[l("合并二叉树"),e(s)])]),t("td",Gg,[e(n,{to:"/leetcode/problem/0617.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Xg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$g]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[tm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[em]),_:1}),l(),lm]),t("td",om,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[nm,t("td",sm,[t("a",dm,[l("在二叉树中增加一行"),e(s)])]),_m,t("td",cm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[im]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[rm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[am]),_:1}),l(),hm]),t("td",um,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fm,t("td",gm,[t("a",mm,[l("二叉树的层平均值"),e(s)])]),t("td",ym,[e(n,{to:"/leetcode/problem/0637.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[pm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[bm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[km]),_:1}),l(),Mm]),t("td",Im,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vm,t("td",wm,[t("a",Hm,[l("设计搜索自动补全系统"),e(s)])]),Em,t("td",zm,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Om]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[jm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Lm]),_:1}),l(),qm]),t("td",Cm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nm,t("td",Pm,[t("a",Km,[l("寻找重复的子树"),e(s)])]),Vm,t("td",Bm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Tm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Um]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Am]),_:1}),l(),Wm]),t("td",Dm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ym,t("td",Jm,[t("a",Qm,[l("两数之和 IV - 输入二叉搜索树"),e(s)])]),Rm,t("td",Sm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Zm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Fm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Gm]),_:1}),l(),Xm]),t("td",$m,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[t2,t("td",e2,[t("a",l2,[l("输出二叉树"),e(s)])]),o2,t("td",n2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[s2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[d2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_2]),_:1}),l(),c2]),t("td",i2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r2,t("td",a2,[t("a",h2,[l("二叉树最大宽度"),e(s)])]),t("td",u2,[e(n,{to:"/leetcode/problem/0662.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",f2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[g2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[m2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[y2]),_:1}),l(),x2]),t("td",p2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b2,t("td",k2,[t("a",M2,[l("均匀树划分"),e(s)])]),I2,t("td",v2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[w2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[H2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[E2]),_:1})]),t("td",z2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O2,t("td",j2,[t("a",L2,[l("路径总和 IV"),e(s)])]),q2,t("td",C2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[N2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[P2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[K2]),_:1}),l(),V2]),t("td",B2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T2,t("td",U2,[t("a",A2,[l("修剪二叉搜索树"),e(s)])]),W2,t("td",D2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Y2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[J2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Q2]),_:1}),l(),R2]),t("td",S2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z2,t("td",F2,[t("a",G2,[l("二叉树中第二小的节点"),e(s)])]),X2,t("td",$2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ty]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ey]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[ly]),_:1})]),t("td",oy,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ny,t("td",sy,[t("a",dy,[l("灯泡开关 Ⅱ"),e(s)])]),_y,t("td",cy,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[iy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ry]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ay]),_:1}),l(),hy]),t("td",uy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fy,t("td",gy,[t("a",my,[l("实现一个魔法字典"),e(s)])]),yy,t("td",xy,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[py]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[by]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[ky]),_:1}),l(),My]),t("td",Iy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vy,t("td",wy,[t("a",Hy,[l("冗余连接"),e(s)])]),Ey,t("td",zy,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Oy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[jy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Ly]),_:1}),l(),qy]),t("td",Cy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ny,t("td",Py,[t("a",Ky,[l("冗余连接 II"),e(s)])]),Vy,t("td",By,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ty]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Uy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Ay]),_:1}),l(),Wy]),t("td",Dy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yy,t("td",Jy,[t("a",Qy,[l("最长同值路径"),e(s)])]),Ry,t("td",Sy,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Zy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Fy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Gy]),_:1})]),t("td",Xy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$y,t("td",t3,[t("a",e3,[l("员工的重要性"),e(s)])]),l3,t("td",o3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[n3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[s3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[d3]),_:1}),l(),_3]),t("td",c3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i3,t("td",r3,[t("a",a3,[l("不同岛屿的数量"),e(s)])]),h3,t("td",u3,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[f3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[g3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[m3]),_:1}),l(),y3]),t("td",x3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p3,t("td",b3,[t("a",k3,[l("岛屿的最大面积"),e(s)])]),t("td",M3,[e(n,{to:"/leetcode/problem/0695.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",I3,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[v3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[w3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[H3]),_:1}),l(),E3]),t("td",z3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O3,t("td",j3,[t("a",L3,[l("不同岛屿的数量 II"),e(s)])]),q3,t("td",C3,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[N3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[P3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[K3]),_:1}),l(),V3]),t("td",B3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[T3,t("td",U3,[t("a",A3,[l("账户合并"),e(s)])]),W3,t("td",D3,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Y3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[J3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Q3]),_:1}),l(),R3]),t("td",S3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z3,t("td",F3,[t("a",G3,[l("图像渲染"),e(s)])]),X3,t("td",$3,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[tx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ex]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[lx]),_:1}),l(),ox]),t("td",nx,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[sx,t("td",dx,[t("a",_x,[l("句子相似性 II"),e(s)])]),cx,t("td",ix,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[rx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ax]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[hx]),_:1}),l(),ux]),t("td",fx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gx,t("td",mx,[t("a",yx,[l("二叉树最近的叶节点"),e(s)])]),xx,t("td",px,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[bx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[kx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Mx]),_:1}),l(),Ix]),t("td",vx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wx,t("td",Hx,[t("a",Ex,[l("网络延迟时间"),e(s)])]),zx,t("td",Ox,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[jx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Lx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[qx]),_:1}),l(),Cx]),t("td",Nx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Px,t("td",Kx,[t("a",Vx,[l("隔离病毒"),e(s)])]),Bx,t("td",Tx,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ux]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ax]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Wx]),_:1}),l(),Dx]),t("td",Yx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jx,t("td",Qx,[t("a",Rx,[l("破解保险箱"),e(s)])]),Sx,t("td",Zx,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Fx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Gx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[Xx]),_:1})]),t("td",$x,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tp,t("td",ep,[t("a",lp,[l("金字塔转换矩阵"),e(s)])]),op,t("td",np,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[sp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_p]),_:1})]),t("td",cp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ip,t("td",rp,[t("a",ap,[l("情侣牵手"),e(s)])]),hp,t("td",up,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[fp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[mp]),_:1}),l(),yp]),t("td",xp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pp,t("td",bp,[t("a",kp,[l("水位上升的泳池中游泳"),e(s)])]),Mp,t("td",Ip,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[vp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[wp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Hp]),_:1}),l(),Ep]),t("td",zp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Op,t("td",jp,[t("a",Lp,[l("二叉搜索树节点最小距离"),e(s)])]),t("td",qp,[e(n,{to:"/leetcode/problem/0783.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Cp,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Np]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Pp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Kp]),_:1}),l(),Vp]),t("td",Bp,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Tp,t("td",Up,[t("a",Ap,[l("判断二分图"),e(s)])]),Wp,t("td",Dp,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Yp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Jp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Qp]),_:1}),l(),Rp]),t("td",Sp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zp,t("td",Fp,[t("a",Gp,[l("K 站中转内最便宜的航班"),e(s)])]),Xp,t("td",$p,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[tb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[eb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[lb]),_:1}),l(),ob]),t("td",nb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sb,t("td",db,[t("a",_b,[l("所有可能的路径"),e(s)])]),cb,t("td",ib,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[rb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ab]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[hb]),_:1}),l(),ub]),t("td",fb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gb,t("td",mb,[t("a",yb,[l("找到最终的安全状态"),e(s)])]),xb,t("td",pb,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[bb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[kb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Mb]),_:1}),l(),Ib]),t("td",vb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wb,t("td",Hb,[t("a",Eb,[l("二叉树剪枝"),e(s)])]),zb,t("td",Ob,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[jb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Lb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[qb]),_:1})]),t("td",Cb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nb,t("td",Pb,[t("a",Kb,[l("最大人工岛"),e(s)])]),Vb,t("td",Bb,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Tb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ub]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Ab]),_:1}),l(),Wb]),t("td",Db,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yb,t("td",Jb,[t("a",Qb,[l("树中距离之和"),e(s)])]),Rb,t("td",Sb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Zb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Fb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Gb]),_:1}),l(),Xb]),t("td",$b,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t0,t("td",e0,[t("a",l0,[l("相似字符串组"),e(s)])]),o0,t("td",n0,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[s0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[d0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[_0]),_:1}),l(),c0]),t("td",i0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[r0,t("td",a0,[t("a",h0,[l("钥匙和房间"),e(s)])]),u0,t("td",f0,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[g0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[m0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[y0]),_:1})]),t("td",x0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p0,t("td",b0,[t("a",k0,[l("喧闹和富有"),e(s)])]),M0,t("td",I0,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[v0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[w0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[H0]),_:1}),l(),E0]),t("td",z0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O0,t("td",j0,[t("a",L0,[l("二叉树中所有距离为 K 的结点"),e(s)])]),q0,t("td",C0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[N0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[P0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[K0]),_:1}),l(),V0]),t("td",B0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T0,t("td",U0,[t("a",A0,[l("具有所有最深节点的最小子树"),e(s)])]),W0,t("td",D0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Y0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[J0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Q0]),_:1}),l(),R0]),t("td",S0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z0,t("td",F0,[t("a",G0,[l("叶子相似的树"),e(s)])]),X0,t("td",$0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[t4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[e4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[l4]),_:1})]),t("td",o4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[n4,t("td",s4,[t("a",d4,[l("可能的二分法"),e(s)])]),_4,t("td",c4,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[i4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[r4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[a4]),_:1}),l(),h4]),t("td",u4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f4,t("td",g4,[t("a",m4,[l("递增顺序搜索树"),e(s)])]),y4,t("td",x4,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[p4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[b4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[k4]),_:1}),l(),M4]),t("td",I4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[v4,t("td",w4,[t("a",H4,[l("尽量减少恶意软件的传播"),e(s)])]),E4,t("td",z4,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[O4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[j4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[L4]),_:1}),l(),q4]),t("td",C4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[N4,t("td",P4,[t("a",K4,[l("尽量减少恶意软件的传播 II"),e(s)])]),V4,t("td",B4,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[T4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[U4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[A4]),_:1}),l(),W4]),t("td",D4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y4,t("td",J4,[t("a",Q4,[l("最短的桥"),e(s)])]),R4,t("td",S4,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Z4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[F4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[G4]),_:1}),l(),X4]),t("td",$4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t8,t("td",e8,[t("a",l8,[l("二叉搜索树的范围和"),e(s)])]),o8,t("td",n8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[s8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[d8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[_8]),_:1}),l(),c8]),t("td",i8,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[r8,t("td",a8,[t("a",h8,[l("移除最多的同行或同列石头"),e(s)])]),u8,t("td",f8,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[g8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[m8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[y8]),_:1}),l(),x8]),t("td",p8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b8,t("td",k8,[t("a",M8,[l("翻转等价二叉树"),e(s)])]),I8,t("td",v8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[w8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[H8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[E8]),_:1})]),t("td",z8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O8,t("td",j8,[t("a",L8,[l("由斜杠划分区域"),e(s)])]),q8,t("td",C8,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[N8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[P8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[K8]),_:1}),l(),V8]),t("td",B8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T8,t("td",U8,[t("a",A8,[l("单值二叉树"),e(s)])]),W8,t("td",D8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Y8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[J8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Q8]),_:1}),l(),R8]),t("td",S8,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Z8,t("td",F8,[t("a",G8,[l("监控二叉树"),e(s)])]),X8,t("td",$8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[t6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[e6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[l6]),_:1}),l(),o6]),t("td",n6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[s6,t("td",d6,[t("a",_6,[l("翻转二叉树以匹配先序遍历"),e(s)])]),c6,t("td",i6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[r6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[a6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[h6]),_:1})]),t("td",u6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f6,t("td",g6,[t("a",m6,[l("在二叉树中分配硬币"),e(s)])]),y6,t("td",x6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[p6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[b6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[k6]),_:1})]),t("td",M6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I6,t("td",v6,[t("a",w6,[l("二叉树的垂序遍历"),e(s)])]),H6,t("td",E6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[z6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[O6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[j6]),_:1}),l(),L6]),t("td",q6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[C6,t("td",N6,[t("a",P6,[l("从叶结点开始的最小字符串"),e(s)])]),K6,t("td",V6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[B6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[T6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[U6]),_:1}),l(),A6]),t("td",W6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D6,t("td",Y6,[t("a",J6,[l("二叉树的堂兄弟节点"),e(s)])]),Q6,t("td",R6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[S6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Z6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[F6]),_:1}),l(),G6]),t("td",X6,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$6,t("td",t5,[t("a",e5,[l("飞地的数量"),e(s)])]),l5,t("td",o5,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[n5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[s5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[d5]),_:1}),l(),_5]),t("td",c5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i5,t("td",r5,[t("a",a5,[l("从根到叶的二进制数之和"),e(s)])]),h5,t("td",u5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[f5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[g5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[m5]),_:1})]),t("td",y5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[x5,t("td",p5,[t("a",b5,[l("节点与其祖先之间的最大差值"),e(s)])]),k5,t("td",M5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[I5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[v5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[w5]),_:1})]),t("td",H5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E5,t("td",z5,[t("a",O5,[l("从先序遍历还原二叉树"),e(s)])]),j5,t("td",L5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[q5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[C5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[N5]),_:1}),l(),P5]),t("td",K5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[V5,t("td",B5,[t("a",T5,[l("边界着色"),e(s)])]),U5,t("td",A5,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[W5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[D5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Y5]),_:1}),l(),J5]),t("td",Q5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R5,t("td",S5,[t("a",Z5,[l("逃离大迷宫"),e(s)])]),F5,t("td",G5,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[X5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[t7]),_:1}),l(),e7]),t("td",l7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o7,t("td",n7,[t("a",s7,[l("从二叉搜索树到更大和树"),e(s)])]),d7,t("td",_7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[c7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[i7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[r7]),_:1}),l(),a7]),t("td",h7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u7,t("td",f7,[t("a",g7,[l("不邻接植花"),e(s)])]),m7,t("td",y7,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[x7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[p7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[b7]),_:1})]),t("td",k7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M7,t("td",I7,[t("a",v7,[l("根到叶路径上的不足节点"),e(s)])]),w7,t("td",H7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[E7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[z7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[O7]),_:1})]),t("td",j7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[L7,t("td",q7,[t("a",C7,[l("得分最高的路径"),e(s)])]),N7,t("td",P7,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[K7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[V7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[B7]),_:1}),l(),T7]),t("td",U7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A7,t("td",W7,[t("a",D7,[l("删点成林"),e(s)])]),Y7,t("td",J7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Q7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[R7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[S7]),_:1}),l(),Z7]),t("td",F7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G7,t("td",X7,[t("a",$7,[l("子树的最大平均值"),e(s)])]),t9,t("td",e9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[l9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[o9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[n9]),_:1})]),t("td",s9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d9,t("td",_9,[t("a",c9,[l("最深叶节点的最近公共祖先"),e(s)])]),i9,t("td",r9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[a9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[h9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[u9]),_:1}),l(),f9]),t("td",g9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m9,t("td",y9,[t("a",x9,[l("二叉树着色游戏"),e(s)])]),p9,t("td",b9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[k9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[M9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[I9]),_:1})]),t("td",v9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w9,t("td",H9,[t("a",E9,[l("最大层内元素和"),e(s)])]),z9,t("td",O9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[j9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[L9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[q9]),_:1}),l(),C9]),t("td",N9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P9,t("td",K9,[t("a",V9,[l("查找集群内的关键连接"),e(s)])]),B9,t("td",T9,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[U9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[A9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[W9]),_:1})]),t("td",D9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y9,t("td",J9,[t("a",Q9,[l("交换字符串中的元素"),e(s)])]),R9,t("td",S9,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Z9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[F9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[G9]),_:1}),l(),X9]),t("td",$9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tk,t("td",ek,[t("a",lk,[l("项目管理"),e(s)])]),ok,t("td",nk,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[sk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[dk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[_k]),_:1}),l(),ck]),t("td",ik,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rk,t("td",ak,[t("a",hk,[l("查找两棵二叉搜索树之和"),e(s)])]),uk,t("td",fk,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[gk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[mk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yk]),_:1}),l(),xk]),t("td",pk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bk,t("td",kk,[t("a",Mk,[l("删除子文件夹"),e(s)])]),Ik,t("td",vk,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Hk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ek]),_:1}),l(),zk]),t("td",Ok,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jk,t("td",Lk,[t("a",qk,[l("网络爬虫"),e(s)])]),Ck,t("td",Nk,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Pk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Kk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Vk]),_:1}),l(),Bk]),t("td",Tk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Uk,t("td",Ak,[t("a",Wk,[l("多线程网页爬虫"),e(s)])]),Dk,t("td",Yk,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Jk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Qk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Rk]),_:1})]),t("td",Sk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zk,t("td",Fk,[t("a",Gk,[l("树的直径"),e(s)])]),Xk,t("td",$k,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[tM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[eM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[lM]),_:1}),l(),oM]),t("td",nM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sM,t("td",dM,[t("a",_M,[l("统计封闭岛屿的数目"),e(s)])]),cM,t("td",iM,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[rM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[aM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[hM]),_:1}),l(),uM]),t("td",fM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gM,t("td",mM,[t("a",yM,[l("最小公共区域"),e(s)])]),xM,t("td",pM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[bM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[kM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[MM]),_:1}),l(),IM]),t("td",vM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wM,t("td",HM,[t("a",EM,[l("在受污染的二叉树中查找元素"),e(s)])]),zM,t("td",OM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[jM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[LM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[qM]),_:1}),l(),CM]),t("td",NM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PM,t("td",KM,[t("a",VM,[l("统计参与通信的服务器"),e(s)])]),BM,t("td",TM,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[UM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[AM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[WM]),_:1}),l(),DM]),t("td",YM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JM,t("td",QM,[t("a",RM,[l("删除树节点"),e(s)])]),SM,t("td",ZM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[FM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[GM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[XM]),_:1}),l(),$M]),t("td",tI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eI,t("td",lI,[t("a",oI,[l("层数最深叶子节点的和"),e(s)])]),nI,t("td",sI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[dI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[_I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[cI]),_:1}),l(),iI]),t("td",rI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aI,t("td",hI,[t("a",uI,[l("两棵二叉搜索树中的所有元素"),e(s)])]),fI,t("td",gI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[mI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[xI]),_:1}),l(),pI]),t("td",bI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kI,t("td",MI,[t("a",II,[l("跳跃游戏 III"),e(s)])]),vI,t("td",wI,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[HI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[EI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[zI]),_:1})]),t("td",OI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jI,t("td",LI,[t("a",qI,[l("祖父节点值为偶数的节点和"),e(s)])]),CI,t("td",NI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[PI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[KI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[VI]),_:1}),l(),BI]),t("td",TI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[UI,t("td",AI,[t("a",WI,[l("连通网络的操作次数"),e(s)])]),DI,t("td",YI,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[JI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[QI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[RI]),_:1}),l(),SI]),t("td",ZI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FI,t("td",GI,[t("a",XI,[l("删除给定值的叶子节点"),e(s)])]),$I,t("td",tv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ev]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[lv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[ov]),_:1})]),t("td",nv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sv,t("td",dv,[t("a",_v,[l("分裂二叉树的最大乘积"),e(s)])]),cv,t("td",iv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[rv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[av]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[hv]),_:1})]),t("td",uv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fv,t("td",gv,[t("a",mv,[l("验证二叉树"),e(s)])]),yv,t("td",xv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[pv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[bv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[kv]),_:1}),l(),Mv]),t("td",Iv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vv,t("td",wv,[t("a",Hv,[l("二叉树中的链表"),e(s)])]),Ev,t("td",zv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ov]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[jv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[Lv]),_:1}),l(),qv]),t("td",Cv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nv,t("td",Pv,[t("a",Kv,[l("二叉树中的最长交错路径"),e(s)])]),Vv,t("td",Bv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Tv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Uv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Av]),_:1}),l(),Wv]),t("td",Dv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yv,t("td",Jv,[t("a",Qv,[l("二叉搜索子树的最大键值和"),e(s)])]),Rv,t("td",Sv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Zv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Fv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Gv]),_:1}),l(),Xv]),t("td",$v,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tw,t("td",ew,[t("a",lw,[l("通知所有员工所需的时间"),e(s)])]),ow,t("td",nw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[sw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_w]),_:1})]),t("td",cw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iw,t("td",rw,[t("a",aw,[l("T 秒后青蛙的位置"),e(s)])]),hw,t("td",uw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[fw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[mw]),_:1}),l(),yw]),t("td",xw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pw,t("td",bw,[t("a",kw,[l("找出克隆二叉树中的相同节点"),e(s)])]),Mw,t("td",Iw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ww]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Hw]),_:1}),l(),Ew]),t("td",zw,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ow,t("td",jw,[t("a",Lw,[l("将二叉搜索树变平衡"),e(s)])]),qw,t("td",Cw,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Nw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Pw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Kw]),_:1}),l(),Vw]),t("td",Bw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tw,t("td",Uw,[t("a",Aw,[l("检查网格中是否存在有效路径"),e(s)])]),Ww,t("td",Dw,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Yw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Jw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Qw]),_:1}),l(),Rw]),t("td",Sw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zw,t("td",Fw,[t("a",Gw,[l("判断给定的序列是否是二叉树从根到叶的路径"),e(s)])]),Xw,t("td",$w,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[tH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[eH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[lH]),_:1}),l(),oH]),t("td",nH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sH,t("td",dH,[t("a",_H,[l("收集树上所有苹果的最少时间"),e(s)])]),cH,t("td",iH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[rH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[aH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[hH]),_:1}),l(),uH]),t("td",fH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gH,t("td",mH,[t("a",yH,[l("统计二叉树中好节点的数目"),e(s)])]),xH,t("td",pH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[bH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[kH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[MH]),_:1}),l(),IH]),t("td",vH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wH,t("td",HH,[t("a",EH,[l("二叉树中的伪回文路径"),e(s)])]),zH,t("td",OH,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[jH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[LH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qH]),_:1}),l(),CH]),t("td",NH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PH,t("td",KH,[t("a",VH,[l("课程表 IV"),e(s)])]),BH,t("td",TH,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[UH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[AH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[WH]),_:1}),l(),DH]),t("td",YH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JH,t("td",QH,[t("a",RH,[l("重新规划路线"),e(s)])]),SH,t("td",ZH,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[FH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[GH]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[XH]),_:1})]),t("td",$H,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tE,t("td",eE,[t("a",lE,[l("寻找所有的独生节点"),e(s)])]),oE,t("td",nE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[sE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_E]),_:1}),l(),cE]),t("td",iE,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[rE,t("td",aE,[t("a",hE,[l("树节点的第 K 个祖先"),e(s)])]),uE,t("td",fE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[mE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[yE]),_:1}),l(),xE]),t("td",pE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bE,t("td",kE,[t("a",ME,[l("克隆含随机指针的二叉树"),e(s)])]),IE,t("td",vE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[wE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[HE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[EE]),_:1}),l(),zE]),t("td",OE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jE,t("td",LE,[t("a",qE,[l("克隆 N 叉树"),e(s)])]),CE,t("td",NE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[PE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[KE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[VE]),_:1}),l(),BE]),t("td",TE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[UE,t("td",AE,[t("a",WE,[l("找到 N 叉树的根节点"),e(s)])]),DE,t("td",YE,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[JE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[QE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[RE]),_:1}),l(),SE]),t("td",ZE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FE,t("td",GE,[t("a",XE,[l("移动 N 叉树的子树"),e(s)])]),$E,t("td",tz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ez]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[lz]),_:1})]),t("td",oz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nz,t("td",sz,[t("a",dz,[l("子树中标签相同的节点数"),e(s)])]),_z,t("td",cz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[iz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[rz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[az]),_:1}),l(),hz]),t("td",uz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fz,t("td",gz,[t("a",mz,[l("N 叉树的直径"),e(s)])]),t("td",yz,[e(n,{to:"/leetcode/problem/1522.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[pz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[bz]),_:1})]),t("td",kz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mz,t("td",Iz,[t("a",vz,[l("好叶子节点对的数量"),e(s)])]),wz,t("td",Hz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ez]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[zz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Oz]),_:1})]),t("td",jz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lz,t("td",qz,[t("a",Cz,[l("二维网格图中探测环"),e(s)])]),Nz,t("td",Pz,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Kz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Vz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Bz]),_:1}),l(),Tz]),t("td",Uz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Az,t("td",Wz,[t("a",Dz,[l("使陆地分离的最少天数"),e(s)])]),Yz,t("td",Jz,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Qz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Rz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Sz]),_:1}),l(),Zz]),t("td",Fz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gz,t("td",Xz,[t("a",$z,[l("王位继承顺序"),e(s)])]),tO,t("td",eO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[lO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[oO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[nO]),_:1}),l(),sO]),t("td",dO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_O,t("td",cO,[t("a",iO,[l("检查两棵二叉表达式树是否等价"),e(s)])]),rO,t("td",aO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[hO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[uO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[fO]),_:1}),l(),gO]),t("td",mO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yO,t("td",xO,[t("a",pO,[l("执行操作后字典序最小的字符串"),e(s)])]),bO,t("td",kO,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[MO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[IO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[vO]),_:1}),l(),wO]),t("td",HO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EO,t("td",zO,[t("a",OO,[l("最小体力消耗路径"),e(s)])]),jO,t("td",LO,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[CO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[NO]),_:1}),l(),PO]),t("td",KO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VO,t("td",BO,[t("a",TO,[l("二叉树的最近公共祖先 II"),e(s)])]),UO,t("td",AO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[WO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[DO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[YO]),_:1})]),t("td",JO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[QO,t("td",RO,[t("a",SO,[l("纠正二叉树"),e(s)])]),ZO,t("td",FO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[GO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[XO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$O]),_:1}),l(),tj]),t("td",ej,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lj,t("td",oj,[t("a",nj,[l("改变二叉树的根节点"),e(s)])]),sj,t("td",dj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_j]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[cj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[ij]),_:1})]),t("td",rj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aj,t("td",hj,[t("a",uj,[l("二叉树的最近公共祖先 IV"),e(s)])]),fj,t("td",gj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[mj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[xj]),_:1}),l(),pj]),t("td",bj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kj,t("td",Mj,[t("a",Ij,[l("执行交换操作后的最小汉明距离"),e(s)])]),vj,t("td",wj,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Hj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Ej]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[zj]),_:1})]),t("td",Oj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jj,t("td",Lj,[t("a",qj,[l("找到二叉树中的距离"),e(s)])]),Cj,t("td",Nj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Pj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Kj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Vj]),_:1}),l(),Bj]),t("td",Tj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Uj,t("td",Aj,[t("a",Wj,[l("从相邻元素对还原数组"),e(s)])]),Dj,t("td",Yj,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Jj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Qj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Rj]),_:1})]),t("td",Sj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zj,t("td",Fj,[t("a",Gj,[l("互质树"),e(s)])]),Xj,t("td",$j,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[tL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[eL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[lL]),_:1}),l(),oL]),t("td",nL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sL,t("td",dL,[t("a",_L,[l("未知网格中的最短路径"),e(s)])]),cL,t("td",iL,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[rL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[aL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[hL]),_:1}),l(),uL]),t("td",fL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gL,t("td",mL,[t("a",yL,[l("隐藏网格下的最小消耗路径"),e(s)])]),xL,t("td",pL,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[bL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[kL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[ML]),_:1}),l(),IL]),t("td",vL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wL,t("td",HL,[t("a",EL,[l("最多邀请的个数"),e(s)])]),zL,t("td",OL,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[jL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[LL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[qL]),_:1}),l(),CL]),t("td",NL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PL,t("td",KL,[t("a",VL,[l("包含所有前缀的最长单词"),e(s)])]),BL,t("td",TL,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[UL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[AL]),_:1})]),t("td",WL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DL,t("td",YL,[t("a",JL,[l("统计子岛屿"),e(s)])]),QL,t("td",RL,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[SL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ZL]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[FL]),_:1}),l(),GL]),t("td",XL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$L,t("td",tq,[t("a",eq,[l("合并多棵二叉搜索树"),e(s)])]),lq,t("td",oq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[nq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[sq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[dq]),_:1}),l(),_q]),t("td",cq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[iq,t("td",rq,[t("a",aq,[l("查询最大基因差"),e(s)])]),hq,t("td",uq,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[fq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[mq]),_:1}),l(),yq]),t("td",xq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pq,t("td",bq,[t("a",kq,[l("你能穿过矩阵的最后一天"),e(s)])]),Mq,t("td",Iq,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[vq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[wq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Hq]),_:1}),l(),Eq]),t("td",zq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oq,t("td",jq,[t("a",Lq,[l("寻找图中是否存在路径"),e(s)])]),qq,t("td",Cq,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Nq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Pq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Kq]),_:1}),l(),Vq]),t("td",Bq,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Tq,t("td",Uq,[t("a",Aq,[l("值等于子节点值之和的节点数量"),e(s)])]),Wq,t("td",Dq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Yq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Jq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Qq]),_:1})]),t("td",Rq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sq,t("td",Zq,[t("a",Fq,[l("找到所有的农场组"),e(s)])]),Gq,t("td",Xq,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[$q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[tC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[eC]),_:1}),l(),lC]),t("td",oC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nC,t("td",sC,[t("a",dC,[l("树上的操作"),e(s)])]),_C,t("td",cC,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[iC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[rC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[aC]),_:1}),l(),hC]),t("td",uC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fC,t("td",gC,[t("a",mC,[l("每棵子树内缺失的最小基因值"),e(s)])]),yC,t("td",xC,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[pC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[bC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[kC]),_:1}),l(),MC]),t("td",IC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vC,t("td",wC,[t("a",HC,[l("统计最高分的节点数目"),e(s)])]),EC,t("td",zC,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[OC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[jC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[LC]),_:1}),l(),qC]),t("td",CC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NC,t("td",PC,[t("a",KC,[l("找出知晓秘密的所有专家"),e(s)])]),VC,t("td",BC,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[TC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[UC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[AC]),_:1}),l(),WC]),t("td",DC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[YC,t("td",JC,[t("a",QC,[l("从二叉树一个节点到另一个节点每一步的方向"),e(s)])]),RC,t("td",SC,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ZC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[FC]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[GC]),_:1}),l(),XC]),t("td",$C,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tN,t("td",eN,[t("a",lN,[l("合法重新排列数对"),e(s)])]),oN,t("td",nN,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[sN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[dN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[_N]),_:1})]),t("td",cN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[iN,t("td",rN,[t("a",aN,[l("引爆最多的炸弹"),e(s)])]),hN,t("td",uN,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[gN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[mN]),_:1}),l(),yN]),t("td",xN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pN,t("td",bN,[t("a",kN,[l("参加会议的最多员工数"),e(s)])]),MN,t("td",IN,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[vN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[wN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[HN]),_:1})]),t("td",EN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zN,t("td",ON,[t("a",jN,[l("有向无环图中一个节点的所有祖先"),e(s)])]),LN,t("td",qN,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[CN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[NN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[PN]),_:1}),l(),KN]),t("td",VN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[BN,t("td",TN,[t("a",UN,[l("无向图中到环的距离"),e(s)])]),AN,t("td",WN,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[DN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[YN]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[JN]),_:1}),l(),QN]),t("td",RN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[SN,t("td",ZN,[t("a",FN,[l("相邻字符不同的最长路径"),e(s)])]),GN,t("td",XN,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$N]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[tP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[eP]),_:1}),l(),lP]),t("td",oP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nP,t("td",sP,[t("a",dP,[l("统计值等于子树平均值的节点数"),e(s)])]),_P,t("td",cP,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[iP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[rP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[aP]),_:1})]),t("td",hP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uP,t("td",fP,[t("a",gP,[l("树中最接近路径的节点"),e(s)])]),mP,t("td",yP,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[xP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[pP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[bP]),_:1}),l(),kP]),t("td",MP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[IP,t("td",vP,[t("a",wP,[l("检查方程中的矛盾之处"),e(s)])]),HP,t("td",EP,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[zP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[OP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[jP]),_:1}),l(),LP]),t("td",qP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[CP,t("td",NP,[t("a",PP,[l("二叉树中得到结果所需的最少翻转次数"),e(s)])]),KP,t("td",VP,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[BP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[TP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[UP]),_:1}),l(),AP]),t("td",WP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[DP,t("td",YP,[t("a",JP,[l("统计无向图中无法互相到达点对数"),e(s)])]),QP,t("td",RP,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[SP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ZP]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[FP]),_:1}),l(),GP]),t("td",XP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$P,t("td",tK,[t("a",eK,[l("从树中删除边的最小分数"),e(s)])]),lK,t("td",oK,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[nK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[sK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dK]),_:1}),l(),_K]),t("td",cK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[iK,t("td",rK,[t("a",aK,[l("网格图中递增路径的数目"),e(s)])]),hK,t("td",uK,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[gK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[mK]),_:1}),l(),yK]),t("td",xK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pK,t("td",bK,[t("a",kK,[l("计算布尔二叉树的值"),e(s)])]),MK,t("td",IK,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[HK]),_:1})]),t("td",EK,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zK,t("td",OK,[t("a",jK,[l("找到离给定两个节点最近的节点"),e(s)])]),LK,t("td",qK,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[CK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[NK]),_:1})]),t("td",PK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KK,t("td",VK,[t("a",BK,[l("图中的最长环"),e(s)])]),TK,t("td",UK,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[AK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[WK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[DK]),_:1})]),t("td",YK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[JK,t("td",QK,[t("a",RK,[l("受限条件下可到达节点的数目"),e(s)])]),SK,t("td",ZK,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[FK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[GK]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[XK]),_:1}),l(),$K]),t("td",tV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eV,t("td",lV,[t("a",oV,[l("选择边来最大化树的得分"),e(s)])]),nV,t("td",sV,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[dV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[_V]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[cV]),_:1})]),t("td",iV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rV,t("td",aV,[t("a",hV,[l("感染二叉树需要的总时间"),e(s)])]),uV,t("td",fV,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[mV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[yV]),_:1}),l(),xV]),t("td",pV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bV,t("td",kV,[t("a",MV,[l("反转二叉树的奇数层"),e(s)])]),IV,t("td",vV,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[wV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[HV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[EV]),_:1}),l(),zV]),t("td",OV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jV,t("td",LV,[t("a",qV,[l("创建价值相同的连通块"),e(s)])]),CV,t("td",NV,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[PV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[KV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[VV]),_:1}),l(),BV]),t("td",TV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[UV,t("td",AV,[t("a",WV,[l("值为 1 的节点数"),e(s)])]),DV,t("td",YV,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[JV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[QV]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[RV]),_:1}),l(),SV]),t("td",ZV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FV,t("td",GV,[t("a",XV,[l("移除子树后的二叉树高度"),e(s)])]),$V,t("td",tB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[eB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[lB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[oB]),_:1}),l(),nB]),t("td",sB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dB,t("td",_B,[t("a",cB,[l("树上最大得分和路径"),e(s)])]),iB,t("td",rB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[aB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[hB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[uB]),_:1}),l(),fB]),t("td",gB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mB,t("td",yB,[t("a",xB,[l("二叉搜索树最近节点查询"),e(s)])]),pB,t("td",bB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[kB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[MB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[IB]),_:1}),l(),vB]),t("td",wB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HB,t("td",EB,[t("a",zB,[l("到达首都的最少油耗"),e(s)])]),OB,t("td",jB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[LB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[CB]),_:1}),l(),NB]),t("td",PB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KB,t("td",VB,[t("a",BB,[l("两个不重叠子树的最大异或值"),e(s)])]),TB,t("td",UB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[AB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[WB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[DB]),_:1}),l(),YB]),t("td",JB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QB,t("td",RB,[t("a",SB,[l("两个城市间路径的最小分数"),e(s)])]),ZB,t("td",FB,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[GB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[XB]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[$B]),_:1}),l(),tT]),t("td",eT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lT,t("td",oT,[t("a",nT,[l("最大价值和与最小价值和的差值"),e(s)])]),sT,t("td",dT,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_T]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[cT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[iT]),_:1}),l(),rT]),t("td",aT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hT,t("td",uT,[t("a",fT,[l("二进制矩阵中翻转最多一次使路径不连通"),e(s)])]),gT,t("td",mT,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[xT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[pT]),_:1}),l(),bT]),t("td",kT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MT,t("td",IT,[t("a",vT,[l("统计可能的树根数目"),e(s)])]),wT,t("td",HT,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ET]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[zT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[OT]),_:1}),l(),jT]),t("td",LT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qT,t("td",CT,[t("a",NT,[l("检查骑士巡视方案"),e(s)])]),PT,t("td",KT,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[VT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[BT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[TT]),_:1}),l(),UT]),t("td",AT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[WT,t("td",DT,[t("a",YT,[l("二叉树的堂兄弟节点 II"),e(s)])]),JT,t("td",QT,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[RT]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ST]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ZT]),_:1}),l(),FT]),t("td",GT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[XT,t("td",$T,[t("a",tU,[l("最小化旅行的价格总和"),e(s)])]),eU,t("td",lU,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[oU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[sU]),_:1}),l(),dU]),t("td",_U,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cU,t("td",iU,[t("a",rU,[l("网格图中鱼的最大数目"),e(s)])]),aU,t("td",hU,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[uU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[fU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[gU]),_:1}),l(),mU]),t("td",yU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xU,t("td",pU,[t("a",bU,[l("统计完全连通分量的数量"),e(s)])]),kU,t("td",MU,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[IU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[vU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[wU]),_:1})]),t("td",HU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EU,t("td",zU,[t("a",OU,[l("从 Rope 树中提取第 K 个字符"),e(s)])]),jU,t("td",LU,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[qU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[CU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[NU]),_:1})]),t("td",PU,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[KU,t("td",VU,[t("a",BU,[l("数组是否表示某二叉树的前序遍历"),e(s)])]),TU,t("td",UU,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[AU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[WU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[DU]),_:1}),l(),YU]),t("td",JU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[QU,t("td",RU,[t("a",SU,[l("特殊二叉树的高度"),e(s)])]),ZU,t("td",FU,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[GU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[XU]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$U]),_:1}),l(),tA]),t("td",eA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lA,t("td",oA,[t("a",nA,[l("树中可以形成回文的路径数"),e(s)])]),sA,t("td",dA,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[_A]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[cA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[iA]),_:1}),l(),rA]),t("td",aA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hA,t("td",uA,[t("a",fA,[l("计算足够大的节点数"),e(s)])]),gA,t("td",mA,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[yA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[xA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[pA]),_:1}),l(),bA]),t("td",kA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[MA,t("td",IA,[t("a",vA,[l("所有单元格的远离程度之和"),e(s)])]),wA,t("td",HA,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[EA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[zA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[OA]),_:1}),l(),jA]),t("td",LA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qA,t("td",CA,[t("a",NA,[l("可以到达每一个节点的最少边反转次数"),e(s)])]),PA,t("td",KA,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[VA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[BA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[TA]),_:1}),l(),UA]),t("td",AA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[WA,t("td",DA,[t("a",YA,[l("统计树中的合法路径数目"),e(s)])]),JA,t("td",QA,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[RA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[SA]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[ZA]),_:1}),l(),FA]),t("td",GA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XA,t("td",$A,[t("a",tW,[l("可以被 K 整除连通块的最大数目"),e(s)])]),eW,t("td",lW,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[oW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nW]),_:1})]),t("td",sW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dW,t("td",_W,[t("a",cW,[l("收集所有金币可获得的最大积分"),e(s)])]),iW,t("td",rW,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[aW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[hW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[uW]),_:1}),l(),fW]),t("td",gW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mW,t("td",yW,[t("a",xW,[l("在树上执行操作以后得到的最大分数"),e(s)])]),pW,t("td",bW,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[kW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[MW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[IW]),_:1})]),t("td",vW,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wW,t("td",HW,[t("a",EW,[l("树中每个节点放置的金币数目"),e(s)])]),zW,t("td",OW,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[jW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[LW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[qW]),_:1}),l(),CW]),t("td",NW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[PW,t("td",KW,[t("a",VW,[l("相同颜色的最大子树"),e(s)])]),BW,t("td",TW,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[UW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[AW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[WW]),_:1}),l(),DW]),t("td",YW,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JW,t("td",QW,[t("a",RW,[l("在带权树网络中统计可连接服务器对数目"),e(s)])]),SW,t("td",ZW,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[FW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[GW]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[XW]),_:1})]),t("td",$W,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tD,t("td",eD,[t("a",lD,[l("最短路径中的边"),e(s)])]),oD,t("td",nD,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[sD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[dD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[_D]),_:1}),l(),cD]),t("td",iD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rD,t("td",aD,[t("a",hD,[l("找到具有最小和的树的层数"),e(s)])]),uD,t("td",fD,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[mD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[yD]),_:1}),l(),xD]),t("td",pD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bD,t("td",kD,[t("a",MD,[l("合并两棵树后的最小直径"),e(s)])]),ID,t("td",vD,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[wD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[HD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ED]),_:1}),l(),zD]),t("td",OD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jD,t("td",LD,[t("a",qD,[l("判断矩形的两个角落是否可达"),e(s)])]),CD,t("td",ND,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[PD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[KD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[VD]),_:1}),l(),BD]),t("td",TD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[UD,t("td",AD,[t("a",WD,[l("标记所有节点需要的时间"),e(s)])]),DD,t("td",YD,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[JD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[QD]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[RD]),_:1}),l(),SD]),t("td",ZD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[FD,t("td",GD,[t("a",XD,[l("统计好节点的数目"),e(s)])]),$D,t("td",tY,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[eY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[lY]),_:1})]),t("td",oY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nY,t("td",sY,[t("a",dY,[l("移除可疑的方法"),e(s)])]),_Y,t("td",cY,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[iY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[rY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[aY]),_:1})]),t("td",hY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uY,t("td",fY,[t("a",gY,[l("查找树中最后标记的节点"),e(s)])]),mY,t("td",yY,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[xY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[pY]),_:1})]),t("td",bY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kY,t("td",MY,[t("a",IY,[l("第 K 大的完美二叉子树的大小"),e(s)])]),t("td",vY,[e(n,{to:"/leetcode/problem/3319.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wY,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[HY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[EY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[zY]),_:1}),l(),OY]),t("td",jY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LY,t("td",qY,[t("a",CY,[l("传递信息"),e(s)])]),NY,t("td",PY,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[KY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[VY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[BY]),_:1}),l(),TY]),t("td",UY,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[AY,t("td",WY,[t("a",DY,[l("二叉树任务调度"),e(s)])]),YY,t("td",JY,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[QY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[RY]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[SY]),_:1}),l(),ZY]),t("td",FY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[GY,t("td",XY,[t("a",$Y,[l("追逐游戏"),e(s)])]),tJ,t("td",eJ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[lJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[oJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[nJ]),_:1}),l(),sJ]),t("td",dJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_J,t("td",cJ,[t("a",iJ,[l("变换的迷宫"),e(s)])]),rJ,t("td",aJ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[hJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[uJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[fJ]),_:1}),l(),gJ]),t("td",mJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yJ,t("td",xJ,[t("a",pJ,[l("开幕式焰火"),e(s)])]),bJ,t("td",kJ,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[MJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[IJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[vJ]),_:1}),l(),wJ]),t("td",HJ,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[EJ,t("td",zJ,[t("a",OJ,[l("自行车炫技赛场"),e(s)])]),jJ,t("td",LJ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[CJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[NJ]),_:1}),l(),PJ]),t("td",KJ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VJ,t("td",BJ,[t("a",TJ,[l("弹珠游戏"),e(s)])]),UJ,t("td",AJ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[WJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[DJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[YJ]),_:1}),l(),JJ]),t("td",QJ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[RJ,t("td",SJ,[t("a",ZJ,[l("二叉树灯饰"),e(s)])]),FJ,t("td",GJ,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[XJ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[$J]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[tQ]),_:1}),l(),eQ]),t("td",lQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oQ,t("td",nQ,[t("a",sQ,[l("装饰树"),e(s)])]),dQ,t("td",_Q,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[cQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[iQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[rQ]),_:1}),l(),aQ]),t("td",hQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uQ,t("td",fQ,[t("a",gQ,[l("主题空间"),e(s)])]),mQ,t("td",yQ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[xQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[pQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[bQ]),_:1}),l(),kQ]),t("td",MQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[IQ,t("td",vQ,[t("a",wQ,[l("机器人的运动范围"),e(s)])]),t("td",HQ,[e(n,{to:"/leetcode/problem/jz_offer_13_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",EQ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[zQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[OQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[jQ]),_:1})]),t("td",LQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qQ,t("td",CQ,[t("a",NQ,[l("树的子结构"),e(s)])]),t("td",PQ,[e(n,{to:"/leetcode/problem/jz_offer_26_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",KQ,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[VQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[BQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[TQ]),_:1})]),t("td",UQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AQ,t("td",WQ,[t("a",DQ,[l("二叉树的镜像"),e(s)])]),t("td",YQ,[e(n,{to:"/leetcode/problem/jz_offer_27_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",JQ,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[QQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[RQ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[SQ]),_:1}),l(),ZQ]),t("td",FQ,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[GQ,t("td",XQ,[t("a",$Q,[l("对称的二叉树"),e(s)])]),t("td",tR,[e(n,{to:"/leetcode/problem/jz_offer_28_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",eR,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[lR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[oR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[nR]),_:1}),l(),sR]),t("td",dR,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[_R,t("td",cR,[t("a",iR,[l("二叉树中和为某一值的路径"),e(s)])]),t("td",rR,[e(n,{to:"/leetcode/problem/jz_offer_34_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",aR,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[hR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[uR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[fR]),_:1}),l(),gR]),t("td",mR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yR,t("td",xR,[t("a",pR,[l("二叉搜索树与双向链表"),e(s)])]),t("td",bR,[e(n,{to:"/leetcode/problem/jz_offer_36_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",kR,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[MR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[IR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[vR]),_:1}),l(),wR]),t("td",HR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ER,t("td",zR,[t("a",OR,[l("序列化二叉树"),e(s)])]),t("td",jR,[e(n,{to:"/leetcode/problem/jz_offer_37_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",LR,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[qR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[CR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[NR]),_:1}),l(),PR]),t("td",KR,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[VR,t("td",BR,[t("a",TR,[l("二叉搜索树的第k大节点"),e(s)])]),t("td",UR,[e(n,{to:"/leetcode/problem/jz_offer_54_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",AR,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[WR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[DR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[YR]),_:1}),l(),JR]),t("td",QR,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[RR,t("td",SR,[t("a",ZR,[l("二叉树的深度"),e(s)])]),t("td",FR,[e(n,{to:"/leetcode/problem/jz_offer_55_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",GR,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[XR]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[$R]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[tS]),_:1}),l(),eS]),t("td",lS,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[oS,t("td",nS,[t("a",sS,[l("平衡二叉树"),e(s)])]),dS,t("td",_S,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[cS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[iS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[rS]),_:1})]),t("td",aS,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[hS,t("td",uS,[t("a",fS,[l("二叉搜索树的最近公共祖先"),e(s)])]),gS,t("td",mS,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[yS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[xS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[pS]),_:1}),l(),bS]),t("td",kS,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[MS,t("td",IS,[t("a",vS,[l("二叉树的最近公共祖先"),e(s)])]),wS,t("td",HS,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ES]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[zS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[OS]),_:1})]),t("td",jS,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[LS,t("td",qS,[t("a",CS,[l("岛屿的最大面积"),e(s)])]),NS,t("td",PS,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[KS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[VS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[BS]),_:1}),l(),TS]),t("td",US,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AS,t("td",WS,[t("a",DS,[l("二分图"),e(s)])]),YS,t("td",JS,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[QS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[RS]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[SS]),_:1}),l(),ZS]),t("td",FS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GS,t("td",XS,[t("a",$S,[l("所有路径"),e(s)])]),tZ,t("td",eZ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[lZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[oZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[nZ]),_:1}),l(),sZ]),t("td",dZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_Z,t("td",cZ,[t("a",iZ,[l("计算除法"),e(s)])]),rZ,t("td",aZ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[hZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[uZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[fZ]),_:1}),l(),gZ]),t("td",mZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yZ,t("td",xZ,[t("a",pZ,[l("最长递增路径"),e(s)])]),bZ,t("td",kZ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[MZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[IZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[vZ]),_:1}),l(),wZ]),t("td",HZ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[EZ,t("td",zZ,[t("a",OZ,[l("课程顺序"),e(s)])]),jZ,t("td",LZ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[CZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[NZ]),_:1}),l(),PZ]),t("td",KZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VZ,t("td",BZ,[t("a",TZ,[l("外星文字典"),e(s)])]),UZ,t("td",AZ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[WZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[DZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[YZ]),_:1}),l(),JZ]),t("td",QZ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[RZ,t("td",SZ,[t("a",ZZ,[l("省份数量"),e(s)])]),FZ,t("td",GZ,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[XZ]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[tF]),_:1}),l(),eF]),t("td",lF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oF,t("td",nF,[t("a",sF,[l("相似的字符串"),e(s)])]),dF,t("td",_F,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[cF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[iF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[rF]),_:1}),l(),aF]),t("td",hF,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uF,t("td",fF,[t("a",gF,[l("多余的边"),e(s)])]),mF,t("td",yF,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[xF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[pF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[bF]),_:1}),l(),kF]),t("td",MF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[IF,t("td",vF,[t("a",wF,[l("展平多级双向链表"),e(s)])]),HF,t("td",EF,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[zF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[OF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[jF]),_:1})]),t("td",LF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qF,t("td",CF,[t("a",NF,[l("二叉树每层的最大值"),e(s)])]),PF,t("td",KF,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[VF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[BF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[TF]),_:1}),l(),UF]),t("td",AF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[WF,t("td",DF,[t("a",YF,[l("二叉树最底层最左边的值"),e(s)])]),JF,t("td",QF,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[RF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[SF]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ZF]),_:1}),l(),FF]),t("td",GF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[XF,t("td",$F,[t("a",tG,[l("二叉树的右侧视图"),e(s)])]),eG,t("td",lG,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[oG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[sG]),_:1}),l(),dG]),t("td",_G,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cG,t("td",iG,[t("a",rG,[l("二叉树剪枝"),e(s)])]),aG,t("td",hG,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[uG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[gG]),_:1})]),t("td",mG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yG,t("td",xG,[t("a",pG,[l("序列化与反序列化二叉树"),e(s)])]),bG,t("td",kG,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[MG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[IG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[vG]),_:1}),l(),wG]),t("td",HG,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[EG,t("td",zG,[t("a",OG,[l("从根节点到叶节点的路径数字之和"),e(s)])]),jG,t("td",LG,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[qG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[CG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[NG]),_:1})]),t("td",PG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KG,t("td",VG,[t("a",BG,[l("向下的路径节点之和"),e(s)])]),TG,t("td",UG,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[AG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[WG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[DG]),_:1})]),t("td",YG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JG,t("td",QG,[t("a",RG,[l("节点之和最大的路径"),e(s)])]),SG,t("td",ZG,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[FG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[GG]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[XG]),_:1}),l(),$G]),t("td",tX,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eX,t("td",lX,[t("a",oX,[l("展平二叉搜索树"),e(s)])]),nX,t("td",sX,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[dX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_X]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[cX]),_:1}),l(),iX]),t("td",rX,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[aX,t("td",hX,[t("a",uX,[l("二叉搜索树中的中序后继"),e(s)])]),fX,t("td",gX,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[mX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[xX]),_:1}),l(),pX]),t("td",bX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kX,t("td",MX,[t("a",IX,[l("所有大于等于节点的值之和"),e(s)])]),vX,t("td",wX,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[HX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[EX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[zX]),_:1}),l(),OX]),t("td",jX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LX,t("td",qX,[t("a",CX,[l("神奇的字典"),e(s)])]),NX,t("td",PX,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[KX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[VX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[BX]),_:1}),l(),TX]),t("td",UX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AX,t("td",WX,[t("a",DX,[l("分割回文子字符串"),e(s)])]),YX,t("td",JX,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[QX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[RX]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[SX]),_:1}),l(),ZX]),t("td",FX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GX,t("td",XX,[t("a",$X,[l("节点间通路"),e(s)])]),t$,t("td",e$,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[l$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[o$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[n$]),_:1})]),t("td",s$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d$,t("td",_$,[t("a",c$,[l("检查平衡性"),e(s)])]),i$,t("td",r$,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[a$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[h$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[u$]),_:1})]),t("td",f$,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[g$,t("td",m$,[t("a",y$,[l("合法二叉搜索树"),e(s)])]),x$,t("td",p$,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[b$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[k$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[M$]),_:1}),l(),I$]),t("td",v$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w$,t("td",H$,[t("a",E$,[l("后继者"),e(s)])]),z$,t("td",O$,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[j$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[L$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[q$]),_:1}),l(),C$]),t("td",N$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P$,t("td",K$,[t("a",V$,[l("首个共同祖先"),e(s)])]),B$,t("td",T$,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[U$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[A$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[W$]),_:1})]),t("td",D$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y$,t("td",J$,[t("a",Q$,[l("检查子树"),e(s)])]),R$,t("td",S$,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Z$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[F$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[G$]),_:1}),l(),X$]),t("td",$$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ttt,t("td",ett,[t("a",ltt,[l("求和路径"),e(s)])]),ott,t("td",ntt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[stt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dtt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[_tt]),_:1})]),t("td",ctt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[itt,t("td",rtt,[t("a",att,[l("颜色填充"),e(s)])]),htt,t("td",utt,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ftt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[gtt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[mtt]),_:1}),l(),ytt]),t("td",xtt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ptt,t("td",btt,[t("a",ktt,[l("水域大小"),e(s)])]),Mtt,t("td",Itt,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[vtt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[wtt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Htt]),_:1}),l(),Ett]),t("td",ztt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ott,t("td",jtt,[t("a",Ltt,[l("婴儿名字"),e(s)])]),qtt,t("td",Ctt,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ntt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ptt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Ktt]),_:1}),l(),Vtt]),t("td",Btt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ttt,t("td",Utt,[t("a",Att,[l("BiNode"),e(s)])]),Wtt,t("td",Dtt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ytt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Jtt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Qtt]),_:1}),l(),Rtt]),t("td",Stt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const $tt=c(h,[["render",Ztt],["__file","depth-first-search.html.vue"]]);export{$tt as default};
