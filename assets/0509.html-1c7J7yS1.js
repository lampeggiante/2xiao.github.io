import{_ as r,r as p,o as d,c as k,a as n,b as t,d as e,w as s,f as m,e as _}from"./app-GnK0vSxb.js";const h={},b={id:"_509-斐波那契数",tabindex:"-1"},f=n("a",{class:"header-anchor",href:"#_509-斐波那契数","aria-hidden":"true"},"#",-1),v={href:"https://leetcode.com/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"递归",-1),y=n("code",null,"记忆化搜索",-1),x=n("code",null,"数学",-1),w=n("code",null,"动态规划",-1),F={href:"https://leetcode.com/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"LeetCode",-1),j=_(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>The <strong>Fibonacci numbers</strong> , commonly denoted <code>F(n)</code> form a sequence, called the <strong>Fibonacci sequence</strong> , such that each number is the sum of the two preceding ones, starting from <code>0</code> and <code>1</code>. That is,</p><blockquote><p>F(0) = 0, F(1) = 1</p><p>F(n) = F(n - 1) + F(n - 2), for n &gt; 1.</p></blockquote><p>Given <code>n</code>, calculate <code>F(n)</code>.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: n = 2</p><p>Output: 1</p><p>Explanation: F(2) = F(1) + F(0) = 1 + 0 = 1.</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: n = 3</p><p>Output: 2</p><p>Explanation: F(3) = F(2) + F(1) = 1 + 1 = 2.</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: n = 4</p><p>Output: 3</p><p>Explanation: F(4) = F(3) + F(2) = 2 + 1 = 3.</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>0 &lt;= n &lt;= 30</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>斐波那契数，通常用 F(n) 表示，形成的序列称为斐波那契数列。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>F(0) = 0, F(1) = 1

F(N) = F(N - 1) + F(N - 2), 其中 N &gt; 1.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>给定 N，计算 F(N)。</p><p>提示：0 ≤ N ≤ 30</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><p>这一题解法很多，大的分类是四种：</p><ul><li>递归</li><li>记忆化搜索(dp)</li><li>矩阵快速幂</li><li>通项公式</li></ul><p>其中记忆化搜索可以写 3 种方法：</p><ul><li>自底向上的</li><li>自顶向下的</li><li>优化空间复杂度版的</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2>`,23),q=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 解法一 暴力递归法 时间复杂度 O(2^n)，空间复杂度 O(n)"),t(`
`),n("span",{class:"token keyword"},"var"),t(),n("span",{class:"token function-variable function"},"fib"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"n"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
	`),n("span",{class:"token keyword"},"if"),t(),n("span",{class:"token punctuation"},"("),t("n "),n("span",{class:"token operator"},"<="),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
		`),n("span",{class:"token keyword"},"return"),t(" n"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token punctuation"},"}"),t(`
	`),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token function"},"fib"),n("span",{class:"token punctuation"},"("),t("n "),n("span",{class:"token operator"},"-"),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"+"),t(),n("span",{class:"token function"},"fib"),n("span",{class:"token punctuation"},"("),t("n "),n("span",{class:"token operator"},"-"),t(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),t(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),E=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 解法二 自底向上的记忆化搜索 时间复杂度 O(n)，空间复杂度 O(n)"),t(`
`),n("span",{class:"token keyword"},"var"),t(),n("span",{class:"token function-variable function"},"fib"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"n"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
	`),n("span",{class:"token keyword"},"if"),t(),n("span",{class:"token punctuation"},"("),t("n "),n("span",{class:"token operator"},"<="),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
		`),n("span",{class:"token keyword"},"return"),t(" n"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token punctuation"},"}"),t(`
	`),n("span",{class:"token keyword"},"const"),t(" arr "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token keyword"},"for"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),t(" i "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),t(" i "),n("span",{class:"token operator"},"<="),t(" n"),n("span",{class:"token punctuation"},";"),t(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
		arr`),n("span",{class:"token punctuation"},"["),t("i"),n("span",{class:"token punctuation"},"]"),t(),n("span",{class:"token operator"},"="),t(" arr"),n("span",{class:"token punctuation"},"["),t("i "),n("span",{class:"token operator"},"-"),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),t(),n("span",{class:"token operator"},"+"),t(" arr"),n("span",{class:"token punctuation"},"["),t("i "),n("span",{class:"token operator"},"-"),t(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token punctuation"},"}"),t(`
	`),n("span",{class:"token keyword"},"return"),t(" arr"),n("span",{class:"token punctuation"},"["),t("n"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),t(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),O=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 解法三 自顶向下的记忆化搜索 时间复杂度 O(n)，空间复杂度 O(n)"),t(`
`),n("span",{class:"token keyword"},"var"),t(),n("span",{class:"token function-variable function"},"fib"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"n"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
	`),n("span",{class:"token keyword"},"let"),t(" map "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"new"),t(),n("span",{class:"token class-name"},"Map"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token keyword"},"const"),t(),n("span",{class:"token function-variable function"},"helper"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"n"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"=>"),t(),n("span",{class:"token punctuation"},"{"),t(`
		`),n("span",{class:"token keyword"},"if"),t(),n("span",{class:"token punctuation"},"("),t("n "),n("span",{class:"token operator"},"<"),t(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token keyword"},"return"),t(" n"),n("span",{class:"token punctuation"},";"),t(`
		`),n("span",{class:"token keyword"},"if"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),t("map"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"has"),n("span",{class:"token punctuation"},"("),t("n"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
			map`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),t("n"),n("span",{class:"token punctuation"},","),t(),n("span",{class:"token function"},"helper"),n("span",{class:"token punctuation"},"("),t("n "),n("span",{class:"token operator"},"-"),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token operator"},"+"),t(),n("span",{class:"token function"},"helper"),n("span",{class:"token punctuation"},"("),t("n "),n("span",{class:"token operator"},"-"),t(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`
		`),n("span",{class:"token punctuation"},"}"),t(`
		`),n("span",{class:"token keyword"},"return"),t(" map"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),t("n"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token keyword"},"return"),t(),n("span",{class:"token function"},"helper"),n("span",{class:"token punctuation"},"("),t("n"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),t(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 解法四 滚动数组优化版的 dp，节约内存空间 时间复杂度 O(n)，空间复杂度 O(1)"),t(`
`),n("span",{class:"token keyword"},"var"),t(),n("span",{class:"token function-variable function"},"fib"),t(),n("span",{class:"token operator"},"="),t(),n("span",{class:"token keyword"},"function"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"n"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
	`),n("span",{class:"token keyword"},"if"),t(),n("span",{class:"token punctuation"},"("),t("n "),n("span",{class:"token operator"},"<="),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token keyword"},"return"),t(" n"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token keyword"},"let"),t(" result "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token keyword"},"let"),t(" prev1 "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token keyword"},"let"),t(" prev2 "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token keyword"},"for"),t(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),t(" i "),n("span",{class:"token operator"},"="),t(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),t(" i "),n("span",{class:"token operator"},"<="),t(" n"),n("span",{class:"token punctuation"},";"),t(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),t(),n("span",{class:"token punctuation"},"{"),t(`
		result `),n("span",{class:"token operator"},"="),t(" prev1 "),n("span",{class:"token operator"},"+"),t(" prev2"),n("span",{class:"token punctuation"},";"),t(`
		prev1 `),n("span",{class:"token operator"},"="),t(" prev2"),n("span",{class:"token punctuation"},";"),t(`
		prev2 `),n("span",{class:"token operator"},"="),t(" result"),n("span",{class:"token punctuation"},";"),t(`
	`),n("span",{class:"token punctuation"},"}"),t(`
	`),n("span",{class:"token keyword"},"return"),t(" result"),n("span",{class:"token punctuation"},";"),t(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),t(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=n("h2",{id:"相关题目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),t(" 相关题目")],-1),I=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"题号"),n("th",{style:{"text-align":"left"}},"标题"),n("th",{style:{"text-align":"center"}},"题解"),n("th",{style:{"text-align":"left"}},"标签"),n("th",{style:{"text-align":"left"}},"难度")])],-1),L=n("td",{style:{"text-align":"center"}},"70",-1),T={style:{"text-align":"left"}},V={href:"https://leetcode.com/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},z={style:{"text-align":"center"}},B={style:{"text-align":"left"}},M=n("code",null,"记忆化搜索",-1),R=n("code",null,"数学",-1),G=n("code",null,"动态规划",-1),S={style:{"text-align":"left"}},D=n("td",{style:{"text-align":"center"}},"842",-1),H={style:{"text-align":"left"}},J={href:"https://leetcode.com/problems/split-array-into-fibonacci-sequence",target:"_blank",rel:"noopener noreferrer"},K=n("td",{style:{"text-align":"center"}},null,-1),P={style:{"text-align":"left"}},Q=n("code",null,"字符串",-1),U=n("code",null,"回溯",-1),W={style:{"text-align":"left"}},X=n("td",{style:{"text-align":"center"}},"873",-1),Y={style:{"text-align":"left"}},Z={href:"https://leetcode.com/problems/length-of-longest-fibonacci-subsequence",target:"_blank",rel:"noopener noreferrer"},$=n("td",{style:{"text-align":"center"}},null,-1),nn={style:{"text-align":"left"}},tn=n("code",null,"数组",-1),sn=n("code",null,"哈希表",-1),en=n("code",null,"动态规划",-1),an={style:{"text-align":"left"}},on=n("td",{style:{"text-align":"center"}},"1137",-1),ln={style:{"text-align":"left"}},cn={href:"https://leetcode.com/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},pn={style:{"text-align":"center"}},un={style:{"text-align":"left"}},rn=n("code",null,"记忆化搜索",-1),dn=n("code",null,"数学",-1),kn=n("code",null,"动态规划",-1),mn={style:{"text-align":"left"}};function _n(hn,bn){const c=p("ExternalLinkIcon"),i=p("font"),a=p("RouterLink"),u=p("CodeTabs");return d(),k("div",null,[n("h1",b,[f,t(),n("a",v,[t("509. 斐波那契数"),e(c)])]),n("p",null,[t("🟢 "),e(i,{color:"#15bd66"},{default:s(()=>[t("Easy")]),_:1}),t("  🔖  "),e(a,{to:"/leetcode/outline/tag/recursion.html"},{default:s(()=>[g]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/memoization.html"},{default:s(()=>[y]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/math.html"},{default:s(()=>[x]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:s(()=>[w]),_:1}),t("  🔗 "),n("a",F,[N,e(c)])]),j,e(u,{id:"139",data:[{id:"暴力递归法"},{id:"自底向上的记忆化搜索"},{id:"自顶向下的记忆化搜索"},{id:"滚动数组优化版的 dp"}]},{title0:s(({value:o,isActive:l})=>[t("暴力递归法")]),title1:s(({value:o,isActive:l})=>[t("自底向上的记忆化搜索")]),title2:s(({value:o,isActive:l})=>[t("自顶向下的记忆化搜索")]),title3:s(({value:o,isActive:l})=>[t("滚动数组优化版的 dp")]),tab0:s(({value:o,isActive:l})=>[q]),tab1:s(({value:o,isActive:l})=>[E]),tab2:s(({value:o,isActive:l})=>[O]),tab3:s(({value:o,isActive:l})=>[A]),_:1}),C,m(" prettier-ignore "),n("table",null,[I,n("tbody",null,[n("tr",null,[L,n("td",T,[n("a",V,[t("爬楼梯"),e(c)])]),n("td",z,[e(a,{to:"/leetcode/problem/0070.html"},{default:s(()=>[t("[✓]")]),_:1})]),n("td",B,[e(a,{to:"/leetcode/outline/tag/memoization.html"},{default:s(()=>[M]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/math.html"},{default:s(()=>[R]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:s(()=>[G]),_:1})]),n("td",S,[e(i,{color:"#15bd66"},{default:s(()=>[t("Easy")]),_:1})])]),n("tr",null,[D,n("td",H,[n("a",J,[t("将数组拆分成斐波那契序列"),e(c)])]),K,n("td",P,[e(a,{to:"/leetcode/outline/tag/string.html"},{default:s(()=>[Q]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/backtracking.html"},{default:s(()=>[U]),_:1})]),n("td",W,[e(i,{color:"#ffb800"},{default:s(()=>[t("Medium")]),_:1})])]),n("tr",null,[X,n("td",Y,[n("a",Z,[t("最长的斐波那契子序列的长度"),e(c)])]),$,n("td",nn,[e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[tn]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/hash-table.html"},{default:s(()=>[sn]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:s(()=>[en]),_:1})]),n("td",an,[e(i,{color:"#ffb800"},{default:s(()=>[t("Medium")]),_:1})])]),n("tr",null,[on,n("td",ln,[n("a",cn,[t("第 N 个泰波那契数"),e(c)])]),n("td",pn,[e(a,{to:"/leetcode/problem/1137.html"},{default:s(()=>[t("[✓]")]),_:1})]),n("td",un,[e(a,{to:"/leetcode/outline/tag/memoization.html"},{default:s(()=>[rn]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/math.html"},{default:s(()=>[dn]),_:1}),t(),e(a,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:s(()=>[kn]),_:1})]),n("td",mn,[e(i,{color:"#15bd66"},{default:s(()=>[t("Easy")]),_:1})])])])])])}const vn=r(h,[["render",_n],["__file","0509.html.vue"]]);export{vn as default};
