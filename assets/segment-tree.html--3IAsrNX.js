import{_ as c,r as _,o as i,c as a,a as t,d as e,w as o,b as l,f as r}from"./app-qrCIIj1V.js";const u={},h=t("h1",{id:"线段树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#线段树","aria-hidden":"true"},"#"),l(" 线段树")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),j=t("code",null,"双向链表",-1),p=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),H=t("code",null,"队列",-1),q=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),M=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),C=t("code",null,"二叉树",-1),z=t("code",null,"二叉搜索树",-1),K=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),E=t("code",null,"强连通分量",-1),O=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),Q=t("code",null,"并查集",-1),T=t("code",null,"字典树",-1),A=t("span",{class:"blue"},"线段树",-1),G=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),D=t("p",null,[t("strong",null,"算法")],-1),F=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ut=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),jt=t("code",null,"几何",-1),pt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Ht=t("code",null,"组合数学",-1),qt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),Mt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),Ct=t("code",null,"数据流",-1),zt=t("code",null,"脑筋急转弯",-1),Kt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Et=t("td",{style:{"text-align":"center"}},"218",-1),Ot={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},Qt=t("td",{style:{"text-align":"center"}},null,-1),Tt={style:{"text-align":"left"}},At=t("code",null,"树状数组",-1),Gt=t("code",null,"线段树",-1),Jt=t("code",null,"数组",-1),Dt=t("code",null,"4+",-1),Ft={style:{"text-align":"left"}},St=t("td",{style:{"text-align":"center"}},"307",-1),Ut={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/range-sum-query-mutable",target:"_blank",rel:"noopener noreferrer"},Xt={style:{"text-align":"center"}},Yt={style:{"text-align":"left"}},Zt=t("code",null,"设计",-1),$t=t("code",null,"树状数组",-1),te=t("code",null,"线段树",-1),ee=t("code",null,"1+",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"308",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/range-sum-query-2d-mutable",target:"_blank",rel:"noopener noreferrer"},de=t("td",{style:{"text-align":"center"}},null,-1),_e={style:{"text-align":"left"}},ce=t("code",null,"设计",-1),ie=t("code",null,"树状数组",-1),ae=t("code",null,"线段树",-1),re=t("code",null,"2+",-1),ue={style:{"text-align":"left"}},he=t("td",{style:{"text-align":"center"}},"315",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},me=t("td",{style:{"text-align":"center"}},null,-1),ye={style:{"text-align":"left"}},xe=t("code",null,"树状数组",-1),be=t("code",null,"线段树",-1),je=t("code",null,"数组",-1),pe=t("code",null,"4+",-1),ke={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"327",-1),qe={style:{"text-align":"left"}},Ie={href:"https://leetcode.com/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},ve=t("td",{style:{"text-align":"center"}},null,-1),we={style:{"text-align":"left"}},Me=t("code",null,"树状数组",-1),Le=t("code",null,"线段树",-1),Ce=t("code",null,"数组",-1),ze=t("code",null,"4+",-1),Ke={style:{"text-align":"left"}},Be=t("td",{style:{"text-align":"center"}},"406",-1),Ne={style:{"text-align":"left"}},Pe={href:"https://leetcode.com/problems/queue-reconstruction-by-height",target:"_blank",rel:"noopener noreferrer"},Ve=t("td",{style:{"text-align":"center"}},null,-1),Ee={style:{"text-align":"left"}},Oe=t("code",null,"树状数组",-1),Re=t("code",null,"线段树",-1),Qe=t("code",null,"数组",-1),Te=t("code",null,"1+",-1),Ae={style:{"text-align":"left"}},Ge=t("td",{style:{"text-align":"center"}},"493",-1),Je={style:{"text-align":"left"}},De={href:"https://leetcode.com/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},Fe=t("td",{style:{"text-align":"center"}},null,-1),Se={style:{"text-align":"left"}},Ue=t("code",null,"树状数组",-1),We=t("code",null,"线段树",-1),Xe=t("code",null,"数组",-1),Ye=t("code",null,"4+",-1),Ze={style:{"text-align":"left"}},$e=t("td",{style:{"text-align":"center"}},"673",-1),tl={style:{"text-align":"left"}},el={href:"https://leetcode.com/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},ll=t("td",{style:{"text-align":"center"}},null,-1),ol={style:{"text-align":"left"}},nl=t("code",null,"树状数组",-1),sl=t("code",null,"线段树",-1),dl=t("code",null,"数组",-1),_l=t("code",null,"1+",-1),cl={style:{"text-align":"left"}},il=t("td",{style:{"text-align":"center"}},"683",-1),al={style:{"text-align":"left"}},rl={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},ul=t("td",{style:{"text-align":"center"}},null,-1),hl={style:{"text-align":"left"}},fl=t("code",null,"树状数组",-1),gl=t("code",null,"线段树",-1),ml=t("code",null,"队列",-1),yl=t("code",null,"5+",-1),xl={style:{"text-align":"left"}},bl=t("td",{style:{"text-align":"center"}},"699",-1),jl={style:{"text-align":"left"}},pl={href:"https://leetcode.com/problems/falling-squares",target:"_blank",rel:"noopener noreferrer"},kl=t("td",{style:{"text-align":"center"}},null,-1),Hl={style:{"text-align":"left"}},ql=t("code",null,"线段树",-1),Il=t("code",null,"数组",-1),vl=t("code",null,"有序集合",-1),wl={style:{"text-align":"left"}},Ml=t("td",{style:{"text-align":"center"}},"715",-1),Ll={style:{"text-align":"left"}},Cl={href:"https://leetcode.com/problems/range-module",target:"_blank",rel:"noopener noreferrer"},zl=t("td",{style:{"text-align":"center"}},null,-1),Kl={style:{"text-align":"left"}},Bl=t("code",null,"设计",-1),Nl=t("code",null,"线段树",-1),Pl=t("code",null,"有序集合",-1),Vl={style:{"text-align":"left"}},El=t("td",{style:{"text-align":"center"}},"729",-1),Ol={style:{"text-align":"left"}},Rl={href:"https://leetcode.com/problems/my-calendar-i",target:"_blank",rel:"noopener noreferrer"},Ql={style:{"text-align":"center"}},Tl={style:{"text-align":"left"}},Al=t("code",null,"设计",-1),Gl=t("code",null,"线段树",-1),Jl=t("code",null,"数组",-1),Dl=t("code",null,"2+",-1),Fl={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"731",-1),Ul={style:{"text-align":"left"}},Wl={href:"https://leetcode.com/problems/my-calendar-ii",target:"_blank",rel:"noopener noreferrer"},Xl={style:{"text-align":"center"}},Yl={style:{"text-align":"left"}},Zl=t("code",null,"设计",-1),$l=t("code",null,"线段树",-1),to=t("code",null,"数组",-1),eo=t("code",null,"3+",-1),lo={style:{"text-align":"left"}},oo=t("td",{style:{"text-align":"center"}},"732",-1),no={style:{"text-align":"left"}},so={href:"https://leetcode.com/problems/my-calendar-iii",target:"_blank",rel:"noopener noreferrer"},_o=t("td",{style:{"text-align":"center"}},null,-1),co={style:{"text-align":"left"}},io=t("code",null,"设计",-1),ao=t("code",null,"线段树",-1),ro=t("code",null,"二分查找",-1),uo=t("code",null,"2+",-1),ho={style:{"text-align":"left"}},fo=t("td",{style:{"text-align":"center"}},"850",-1),go={style:{"text-align":"left"}},mo={href:"https://leetcode.com/problems/rectangle-area-ii",target:"_blank",rel:"noopener noreferrer"},yo=t("td",{style:{"text-align":"center"}},null,-1),xo={style:{"text-align":"left"}},bo=t("code",null,"线段树",-1),jo=t("code",null,"数组",-1),po=t("code",null,"有序集合",-1),ko=t("code",null,"1+",-1),Ho={style:{"text-align":"left"}},qo=t("td",{style:{"text-align":"center"}},"1157",-1),Io={style:{"text-align":"left"}},vo={href:"https://leetcode.com/problems/online-majority-element-in-subarray",target:"_blank",rel:"noopener noreferrer"},wo=t("td",{style:{"text-align":"center"}},null,-1),Mo={style:{"text-align":"left"}},Lo=t("code",null,"设计",-1),Co=t("code",null,"树状数组",-1),zo=t("code",null,"线段树",-1),Ko=t("code",null,"2+",-1),Bo={style:{"text-align":"left"}},No=t("td",{style:{"text-align":"center"}},"1395",-1),Po={style:{"text-align":"left"}},Vo={href:"https://leetcode.com/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},Eo=t("td",{style:{"text-align":"center"}},null,-1),Oo={style:{"text-align":"left"}},Ro=t("code",null,"树状数组",-1),Qo=t("code",null,"线段树",-1),To=t("code",null,"数组",-1),Ao=t("code",null,"1+",-1),Go={style:{"text-align":"left"}},Jo=t("td",{style:{"text-align":"center"}},"1505",-1),Do={style:{"text-align":"left"}},Fo={href:"https://leetcode.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",target:"_blank",rel:"noopener noreferrer"},So=t("td",{style:{"text-align":"center"}},null,-1),Uo={style:{"text-align":"left"}},Wo=t("code",null,"贪心",-1),Xo=t("code",null,"树状数组",-1),Yo=t("code",null,"线段树",-1),Zo=t("code",null,"1+",-1),$o={style:{"text-align":"left"}},tn=t("td",{style:{"text-align":"center"}},"1521",-1),en={style:{"text-align":"left"}},ln={href:"https://leetcode.com/problems/find-a-value-of-a-mysterious-function-closest-to-target",target:"_blank",rel:"noopener noreferrer"},on=t("td",{style:{"text-align":"center"}},null,-1),nn={style:{"text-align":"left"}},sn=t("code",null,"位运算",-1),dn=t("code",null,"线段树",-1),_n=t("code",null,"数组",-1),cn=t("code",null,"1+",-1),an={style:{"text-align":"left"}},rn=t("td",{style:{"text-align":"center"}},"1622",-1),un={style:{"text-align":"left"}},hn={href:"https://leetcode.com/problems/fancy-sequence",target:"_blank",rel:"noopener noreferrer"},fn=t("td",{style:{"text-align":"center"}},null,-1),gn={style:{"text-align":"left"}},mn=t("code",null,"设计",-1),yn=t("code",null,"线段树",-1),xn=t("code",null,"数学",-1),bn={style:{"text-align":"left"}},jn=t("td",{style:{"text-align":"center"}},"1649",-1),pn={style:{"text-align":"left"}},kn={href:"https://leetcode.com/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},Hn=t("td",{style:{"text-align":"center"}},null,-1),qn={style:{"text-align":"left"}},In=t("code",null,"树状数组",-1),vn=t("code",null,"线段树",-1),wn=t("code",null,"数组",-1),Mn=t("code",null,"4+",-1),Ln={style:{"text-align":"left"}},Cn=t("td",{style:{"text-align":"center"}},"1687",-1),zn={style:{"text-align":"left"}},Kn={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},Bn=t("td",{style:{"text-align":"center"}},null,-1),Nn={style:{"text-align":"left"}},Pn=t("code",null,"线段树",-1),Vn=t("code",null,"队列",-1),En=t("code",null,"数组",-1),On=t("code",null,"4+",-1),Rn={style:{"text-align":"left"}},Qn=t("td",{style:{"text-align":"center"}},"2031",-1),Tn={style:{"text-align":"left"}},An={href:"https://leetcode.com/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},Gn=t("td",{style:{"text-align":"center"}},null,-1),Jn={style:{"text-align":"left"}},Dn=t("code",null,"树状数组",-1),Fn=t("code",null,"线段树",-1),Sn=t("code",null,"数组",-1),Un=t("code",null,"4+",-1),Wn={style:{"text-align":"left"}},Xn=t("td",{style:{"text-align":"center"}},"2080",-1),Yn={style:{"text-align":"left"}},Zn={href:"https://leetcode.com/problems/range-frequency-queries",target:"_blank",rel:"noopener noreferrer"},$n=t("td",{style:{"text-align":"center"}},null,-1),ts={style:{"text-align":"left"}},es=t("code",null,"设计",-1),ls=t("code",null,"线段树",-1),os=t("code",null,"数组",-1),ns=t("code",null,"2+",-1),ss={style:{"text-align":"left"}},ds=t("td",{style:{"text-align":"center"}},"2158",-1),_s={style:{"text-align":"left"}},cs={href:"https://leetcode.com/problems/amount-of-new-area-painted-each-day",target:"_blank",rel:"noopener noreferrer"},is=t("td",{style:{"text-align":"center"}},null,-1),as={style:{"text-align":"left"}},rs=t("code",null,"线段树",-1),us=t("code",null,"数组",-1),hs=t("code",null,"有序集合",-1),fs={style:{"text-align":"left"}},gs=t("td",{style:{"text-align":"center"}},"2179",-1),ms={style:{"text-align":"left"}},ys={href:"https://leetcode.com/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},xs=t("td",{style:{"text-align":"center"}},null,-1),bs={style:{"text-align":"left"}},js=t("code",null,"树状数组",-1),ps=t("code",null,"线段树",-1),ks=t("code",null,"数组",-1),Hs=t("code",null,"4+",-1),qs={style:{"text-align":"left"}},Is=t("td",{style:{"text-align":"center"}},"2213",-1),vs={style:{"text-align":"left"}},ws={href:"https://leetcode.com/problems/longest-substring-of-one-repeating-character",target:"_blank",rel:"noopener noreferrer"},Ms=t("td",{style:{"text-align":"center"}},null,-1),Ls={style:{"text-align":"left"}},Cs=t("code",null,"线段树",-1),zs=t("code",null,"数组",-1),Ks=t("code",null,"字符串",-1),Bs=t("code",null,"1+",-1),Ns={style:{"text-align":"left"}},Ps=t("td",{style:{"text-align":"center"}},"2276",-1),Vs={style:{"text-align":"left"}},Es={href:"https://leetcode.com/problems/count-integers-in-intervals",target:"_blank",rel:"noopener noreferrer"},Os=t("td",{style:{"text-align":"center"}},null,-1),Rs={style:{"text-align":"left"}},Qs=t("code",null,"设计",-1),Ts=t("code",null,"线段树",-1),As=t("code",null,"有序集合",-1),Gs={style:{"text-align":"left"}},Js=t("td",{style:{"text-align":"center"}},"2286",-1),Ds={style:{"text-align":"left"}},Fs={href:"https://leetcode.com/problems/booking-concert-tickets-in-groups",target:"_blank",rel:"noopener noreferrer"},Ss=t("td",{style:{"text-align":"center"}},null,-1),Us={style:{"text-align":"left"}},Ws=t("code",null,"设计",-1),Xs=t("code",null,"树状数组",-1),Ys=t("code",null,"线段树",-1),Zs=t("code",null,"1+",-1),$s={style:{"text-align":"left"}},td=t("td",{style:{"text-align":"center"}},"2407",-1),ed={style:{"text-align":"left"}},ld={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},od=t("td",{style:{"text-align":"center"}},null,-1),nd={style:{"text-align":"left"}},sd=t("code",null,"树状数组",-1),dd=t("code",null,"线段树",-1),_d=t("code",null,"队列",-1),cd=t("code",null,"4+",-1),id={style:{"text-align":"left"}},ad=t("td",{style:{"text-align":"center"}},"2424",-1),rd={style:{"text-align":"left"}},ud={href:"https://leetcode.com/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},hd=t("td",{style:{"text-align":"center"}},null,-1),fd={style:{"text-align":"left"}},gd=t("code",null,"并查集",-1),md=t("code",null,"设计",-1),yd=t("code",null,"树状数组",-1),xd=t("code",null,"4+",-1),bd={style:{"text-align":"left"}},jd=t("td",{style:{"text-align":"center"}},"2426",-1),pd={style:{"text-align":"left"}},kd={href:"https://leetcode.com/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},Hd=t("td",{style:{"text-align":"center"}},null,-1),qd={style:{"text-align":"left"}},Id=t("code",null,"树状数组",-1),vd=t("code",null,"线段树",-1),wd=t("code",null,"数组",-1),Md=t("code",null,"4+",-1),Ld={style:{"text-align":"left"}},Cd=t("td",{style:{"text-align":"center"}},"2519",-1),zd={style:{"text-align":"left"}},Kd={href:"https://leetcode.com/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},Bd=t("td",{style:{"text-align":"center"}},null,-1),Nd={style:{"text-align":"left"}},Pd=t("code",null,"树状数组",-1),Vd=t("code",null,"线段树",-1),Ed=t("code",null,"数组",-1),Od=t("code",null,"4+",-1),Rd={style:{"text-align":"left"}},Qd=t("td",{style:{"text-align":"center"}},"2569",-1),Td={style:{"text-align":"left"}},Ad={href:"https://leetcode.com/problems/handling-sum-queries-after-update",target:"_blank",rel:"noopener noreferrer"},Gd=t("td",{style:{"text-align":"center"}},null,-1),Jd={style:{"text-align":"left"}},Dd=t("code",null,"线段树",-1),Fd=t("code",null,"数组",-1),Sd={style:{"text-align":"left"}},Ud=t("td",{style:{"text-align":"center"}},"2659",-1),Wd={style:{"text-align":"left"}},Xd={href:"https://leetcode.com/problems/make-array-empty",target:"_blank",rel:"noopener noreferrer"},Yd=t("td",{style:{"text-align":"center"}},null,-1),Zd={style:{"text-align":"left"}},$d=t("code",null,"贪心",-1),t_=t("code",null,"树状数组",-1),e_=t("code",null,"线段树",-1),l_=t("code",null,"4+",-1),o_={style:{"text-align":"left"}},n_=t("td",{style:{"text-align":"center"}},"2736",-1),s_={style:{"text-align":"left"}},d_={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},__=t("td",{style:{"text-align":"center"}},null,-1),c_={style:{"text-align":"left"}},i_=t("code",null,"栈",-1),a_=t("code",null,"树状数组",-1),r_=t("code",null,"线段树",-1),u_=t("code",null,"4+",-1),h_={style:{"text-align":"left"}},f_=t("td",{style:{"text-align":"center"}},"2907",-1),g_={style:{"text-align":"left"}},m_={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-i",target:"_blank",rel:"noopener noreferrer"},y_=t("td",{style:{"text-align":"center"}},null,-1),x_={style:{"text-align":"left"}},b_=t("code",null,"树状数组",-1),j_=t("code",null,"线段树",-1),p_=t("code",null,"数组",-1),k_={style:{"text-align":"left"}},H_=t("td",{style:{"text-align":"center"}},"2916",-1),q_={style:{"text-align":"left"}},I_={href:"https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},v_=t("td",{style:{"text-align":"center"}},null,-1),w_={style:{"text-align":"left"}},M_=t("code",null,"树状数组",-1),L_=t("code",null,"线段树",-1),C_=t("code",null,"数组",-1),z_=t("code",null,"1+",-1),K_={style:{"text-align":"left"}},B_=t("td",{style:{"text-align":"center"}},"2921",-1),N_={style:{"text-align":"left"}},P_={href:"https://leetcode.com/problems/maximum-profitable-triplets-with-increasing-prices-ii",target:"_blank",rel:"noopener noreferrer"},V_=t("td",{style:{"text-align":"center"}},null,-1),E_={style:{"text-align":"left"}},O_=t("code",null,"树状数组",-1),R_=t("code",null,"线段树",-1),Q_=t("code",null,"数组",-1),T_={style:{"text-align":"left"}},A_=t("td",{style:{"text-align":"center"}},"2926",-1),G_={style:{"text-align":"left"}},J_={href:"https://leetcode.com/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},D_=t("td",{style:{"text-align":"center"}},null,-1),F_={style:{"text-align":"left"}},S_=t("code",null,"树状数组",-1),U_=t("code",null,"线段树",-1),W_=t("code",null,"数组",-1),X_=t("code",null,"2+",-1),Y_={style:{"text-align":"left"}},Z_=t("td",{style:{"text-align":"center"}},"2940",-1),$_={style:{"text-align":"left"}},tc={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},ec=t("td",{style:{"text-align":"center"}},null,-1),lc={style:{"text-align":"left"}},oc=t("code",null,"栈",-1),nc=t("code",null,"树状数组",-1),sc=t("code",null,"线段树",-1),dc=t("code",null,"4+",-1),_c={style:{"text-align":"left"}},cc=t("td",{style:{"text-align":"center"}},"3072",-1),ic={style:{"text-align":"left"}},ac={href:"https://leetcode.com/problems/distribute-elements-into-two-arrays-ii",target:"_blank",rel:"noopener noreferrer"},rc=t("td",{style:{"text-align":"center"}},null,-1),uc={style:{"text-align":"left"}},hc=t("code",null,"树状数组",-1),fc=t("code",null,"线段树",-1),gc=t("code",null,"数组",-1),mc=t("code",null,"1+",-1),yc={style:{"text-align":"left"}},xc=t("td",{style:{"text-align":"center"}},"3109",-1),bc={style:{"text-align":"left"}},jc={href:"https://leetcode.com/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},pc=t("td",{style:{"text-align":"center"}},null,-1),kc={style:{"text-align":"left"}},Hc=t("code",null,"树状数组",-1),qc=t("code",null,"线段树",-1),Ic=t("code",null,"数组",-1),vc=t("code",null,"4+",-1),wc={style:{"text-align":"left"}},Mc=t("td",{style:{"text-align":"center"}},"3117",-1),Lc={style:{"text-align":"left"}},Cc={href:"https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},zc=t("td",{style:{"text-align":"center"}},null,-1),Kc={style:{"text-align":"left"}},Bc=t("code",null,"位运算",-1),Nc=t("code",null,"线段树",-1),Pc=t("code",null,"队列",-1),Vc=t("code",null,"3+",-1),Ec={style:{"text-align":"left"}},Oc=t("td",{style:{"text-align":"center"}},"3161",-1),Rc={style:{"text-align":"left"}},Qc={href:"https://leetcode.com/problems/block-placement-queries",target:"_blank",rel:"noopener noreferrer"},Tc=t("td",{style:{"text-align":"center"}},null,-1),Ac={style:{"text-align":"left"}},Gc=t("code",null,"树状数组",-1),Jc=t("code",null,"线段树",-1),Dc=t("code",null,"数组",-1),Fc=t("code",null,"1+",-1),Sc={style:{"text-align":"left"}},Uc=t("td",{style:{"text-align":"center"}},"3165",-1),Wc={style:{"text-align":"left"}},Xc={href:"https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},Yc=t("td",{style:{"text-align":"center"}},null,-1),Zc={style:{"text-align":"left"}},$c=t("code",null,"线段树",-1),ti=t("code",null,"数组",-1),ei=t("code",null,"分治",-1),li=t("code",null,"1+",-1),oi={style:{"text-align":"left"}},ni=t("td",{style:{"text-align":"center"}},"3171",-1),si={style:{"text-align":"left"}},di={href:"https://leetcode.com/problems/find-subarray-with-bitwise-or-closest-to-k",target:"_blank",rel:"noopener noreferrer"},_i=t("td",{style:{"text-align":"center"}},null,-1),ci={style:{"text-align":"left"}},ii=t("code",null,"位运算",-1),ai=t("code",null,"线段树",-1),ri=t("code",null,"数组",-1),ui=t("code",null,"1+",-1),hi={style:{"text-align":"left"}},fi=t("td",{style:{"text-align":"center"}},"3187",-1),gi={style:{"text-align":"left"}},mi={href:"https://leetcode.com/problems/peaks-in-array",target:"_blank",rel:"noopener noreferrer"},yi=t("td",{style:{"text-align":"center"}},null,-1),xi={style:{"text-align":"left"}},bi=t("code",null,"树状数组",-1),ji=t("code",null,"线段树",-1),pi=t("code",null,"数组",-1),ki={style:{"text-align":"left"}},Hi=t("td",{style:{"text-align":"center"}},"3209",-1),qi={style:{"text-align":"left"}},Ii={href:"https://leetcode.com/problems/number-of-subarrays-with-and-value-of-k",target:"_blank",rel:"noopener noreferrer"},vi=t("td",{style:{"text-align":"center"}},null,-1),wi={style:{"text-align":"left"}},Mi=t("code",null,"位运算",-1),Li=t("code",null,"线段树",-1),Ci=t("code",null,"数组",-1),zi=t("code",null,"1+",-1),Ki={style:{"text-align":"left"}},Bi=t("td",{style:{"text-align":"center"}},"3291",-1),Ni={style:{"text-align":"left"}},Pi={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Vi=t("td",{style:{"text-align":"center"}},null,-1),Ei={style:{"text-align":"left"}},Oi=t("code",null,"字典树",-1),Ri=t("code",null,"线段树",-1),Qi=t("code",null,"数组",-1),Ti=t("code",null,"6+",-1),Ai={style:{"text-align":"left"}},Gi=t("td",{style:{"text-align":"center"}},"3292",-1),Ji={style:{"text-align":"left"}},Di={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},Fi=t("td",{style:{"text-align":"center"}},null,-1),Si={style:{"text-align":"left"}},Ui=t("code",null,"线段树",-1),Wi=t("code",null,"数组",-1),Xi=t("code",null,"字符串",-1),Yi=t("code",null,"5+",-1),Zi={style:{"text-align":"left"}},$i=t("td",{style:{"text-align":"center"}},"LCP 05",-1),ta={style:{"text-align":"left"}},ea={href:"https://leetcode.cn/problems/coin-bonus",target:"_blank",rel:"noopener noreferrer"},la=t("td",{style:{"text-align":"center"}},null,-1),oa={style:{"text-align":"left"}},na=t("code",null,"树状数组",-1),sa=t("code",null,"线段树",-1),da=t("code",null,"数组",-1),_a={style:{"text-align":"left"}},ca=t("td",{style:{"text-align":"center"}},"LCP 09",-1),ia={style:{"text-align":"left"}},aa={href:"https://leetcode.cn/problems/zui-xiao-tiao-yue-ci-shu",target:"_blank",rel:"noopener noreferrer"},ra=t("td",{style:{"text-align":"center"}},null,-1),ua={style:{"text-align":"left"}},ha=t("code",null,"广度优先搜索",-1),fa=t("code",null,"线段树",-1),ga=t("code",null,"数组",-1),ma=t("code",null,"1+",-1),ya={style:{"text-align":"left"}},xa=t("td",{style:{"text-align":"center"}},"LCP 27",-1),ba={style:{"text-align":"left"}},ja={href:"https://leetcode.cn/problems/IQvJ9i",target:"_blank",rel:"noopener noreferrer"},pa=t("td",{style:{"text-align":"center"}},null,-1),ka={style:{"text-align":"left"}},Ha=t("code",null,"设计",-1),qa=t("code",null,"线段树",-1),Ia=t("code",null,"数学",-1),va=t("code",null,"1+",-1),wa={style:{"text-align":"left"}},Ma=t("td",{style:{"text-align":"center"}},"LCP 52",-1),La={style:{"text-align":"left"}},Ca={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},za=t("td",{style:{"text-align":"center"}},null,-1),Ka={style:{"text-align":"left"}},Ba=t("code",null,"树",-1),Na=t("code",null,"线段树",-1),Pa=t("code",null,"二叉搜索树",-1),Va=t("code",null,"4+",-1),Ea={style:{"text-align":"left"}},Oa=t("td",{style:{"text-align":"center"}},"剑指 Offer 51",-1),Ra={style:{"text-align":"left"}},Qa={href:"https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof",target:"_blank",rel:"noopener noreferrer"},Ta=t("td",{style:{"text-align":"center"}},null,-1),Aa={style:{"text-align":"left"}},Ga=t("code",null,"树状数组",-1),Ja=t("code",null,"线段树",-1),Da=t("code",null,"数组",-1),Fa=t("code",null,"4+",-1),Sa={style:{"text-align":"left"}},Ua=t("td",{style:{"text-align":"center"}},"剑指 Offer II 58",-1),Wa={style:{"text-align":"left"}},Xa={href:"https://leetcode.cn/problems/fi9suh",target:"_blank",rel:"noopener noreferrer"},Ya=t("td",{style:{"text-align":"center"}},null,-1),Za={style:{"text-align":"left"}},$a=t("code",null,"设计",-1),tr=t("code",null,"线段树",-1),er=t("code",null,"二分查找",-1),lr=t("code",null,"1+",-1),or={style:{"text-align":"left"}};function nr(sr,dr){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),a("div",null,[h,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-queue.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/strongly-connected-component.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[T]),_:1}),l(),A,l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[J]),_:1})]),D,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/randomized.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/reservoir-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rejection-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/database.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/interactive.html"},{default:o(()=>[Kt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/iterator.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/concurrency.html"},{default:o(()=>[Nt]),_:1})])]),Pt,r(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Et,t("td",Ot,[t("a",Rt,[l("天际线问题"),e(s)])]),Qt,t("td",Tt,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[At]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Gt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Jt]),_:1}),l(),Dt]),t("td",Ft,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[St,t("td",Ut,[t("a",Wt,[l("区域和检索 - 数组可修改"),e(s)])]),t("td",Xt,[e(n,{to:"/leetcode-js/problem/0307.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yt,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[te]),_:1}),l(),ee]),t("td",le,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oe,t("td",ne,[t("a",se,[l("二维区域和检索 - 矩阵可修改"),e(s)])]),de,t("td",_e,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ie]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[ae]),_:1}),l(),re]),t("td",ue,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[he,t("td",fe,[t("a",ge,[l("计算右侧小于当前元素的个数"),e(s)])]),me,t("td",ye,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[xe]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[be]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[je]),_:1}),l(),pe]),t("td",ke,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[He,t("td",qe,[t("a",Ie,[l("区间和的个数"),e(s)])]),ve,t("td",we,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Me]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Le]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ce]),_:1}),l(),ze]),t("td",Ke,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Be,t("td",Ne,[t("a",Pe,[l("根据身高重建队列"),e(s)])]),Ve,t("td",Ee,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Oe]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Re]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Qe]),_:1}),l(),Te]),t("td",Ae,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ge,t("td",Je,[t("a",De,[l("翻转对"),e(s)])]),Fe,t("td",Se,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ue]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[We]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Xe]),_:1}),l(),Ye]),t("td",Ze,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$e,t("td",tl,[t("a",el,[l("最长递增子序列的个数"),e(s)])]),ll,t("td",ol,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[nl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[sl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[dl]),_:1}),l(),_l]),t("td",cl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[il,t("td",al,[t("a",rl,[l("K 个关闭的灯泡"),e(s)])]),ul,t("td",hl,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[fl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[gl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[ml]),_:1}),l(),yl]),t("td",xl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bl,t("td",jl,[t("a",pl,[l("掉落的方块"),e(s)])]),kl,t("td",Hl,[e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[ql]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Il]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[vl]),_:1})]),t("td",wl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ml,t("td",Ll,[t("a",Cl,[l("Range 模块"),e(s)])]),zl,t("td",Kl,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Bl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Nl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[Pl]),_:1})]),t("td",Vl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[El,t("td",Ol,[t("a",Rl,[l("我的日程安排表 I"),e(s)])]),t("td",Ql,[e(n,{to:"/leetcode-js/problem/0729.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Tl,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Al]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Gl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Jl]),_:1}),l(),Dl]),t("td",Fl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sl,t("td",Ul,[t("a",Wl,[l("我的日程安排表 II"),e(s)])]),t("td",Xl,[e(n,{to:"/leetcode-js/problem/0731.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yl,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Zl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[$l]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[to]),_:1}),l(),eo]),t("td",lo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oo,t("td",no,[t("a",so,[l("我的日程安排表 III"),e(s)])]),_o,t("td",co,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[io]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[ao]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[ro]),_:1}),l(),uo]),t("td",ho,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fo,t("td",go,[t("a",mo,[l("矩形面积 II"),e(s)])]),yo,t("td",xo,[e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[bo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[jo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[po]),_:1}),l(),ko]),t("td",Ho,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qo,t("td",Io,[t("a",vo,[l("子数组中占绝大多数的元素"),e(s)])]),wo,t("td",Mo,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Lo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Co]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[zo]),_:1}),l(),Ko]),t("td",Bo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[No,t("td",Po,[t("a",Vo,[l("统计作战单位数"),e(s)])]),Eo,t("td",Oo,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ro]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Qo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[To]),_:1}),l(),Ao]),t("td",Go,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jo,t("td",Do,[t("a",Fo,[l("最多 K 次交换相邻数位后得到的最小整数"),e(s)])]),So,t("td",Uo,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Wo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Xo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Yo]),_:1}),l(),Zo]),t("td",$o,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tn,t("td",en,[t("a",ln,[l("找到最接近目标值的函数值"),e(s)])]),on,t("td",nn,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[dn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[_n]),_:1}),l(),cn]),t("td",an,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rn,t("td",un,[t("a",hn,[l("奇妙序列"),e(s)])]),fn,t("td",gn,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[yn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[xn]),_:1})]),t("td",bn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jn,t("td",pn,[t("a",kn,[l("通过指令创建有序数组"),e(s)])]),Hn,t("td",qn,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[In]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[vn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[wn]),_:1}),l(),Mn]),t("td",Ln,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cn,t("td",zn,[t("a",Kn,[l("从仓库到码头运输箱子"),e(s)])]),Bn,t("td",Nn,[e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Pn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[Vn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[En]),_:1}),l(),On]),t("td",Rn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qn,t("td",Tn,[t("a",An,[l("1 比 0 多的子数组个数"),e(s)])]),Gn,t("td",Jn,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Dn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Fn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Sn]),_:1}),l(),Un]),t("td",Wn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xn,t("td",Yn,[t("a",Zn,[l("区间内查询数字的频率"),e(s)])]),$n,t("td",ts,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[es]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[ls]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[os]),_:1}),l(),ns]),t("td",ss,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ds,t("td",_s,[t("a",cs,[l("每天绘制新区域的数量"),e(s)])]),is,t("td",as,[e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[rs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[us]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[hs]),_:1})]),t("td",fs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gs,t("td",ms,[t("a",ys,[l("统计数组中好三元组数目"),e(s)])]),xs,t("td",bs,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[js]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[ps]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ks]),_:1}),l(),Hs]),t("td",qs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Is,t("td",vs,[t("a",ws,[l("由单个字符重复的最长子字符串"),e(s)])]),Ms,t("td",Ls,[e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Cs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[zs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Ks]),_:1}),l(),Bs]),t("td",Ns,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ps,t("td",Vs,[t("a",Es,[l("统计区间中的整数数目"),e(s)])]),Os,t("td",Rs,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Qs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Ts]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[As]),_:1})]),t("td",Gs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Js,t("td",Ds,[t("a",Fs,[l("以组为单位订音乐会的门票"),e(s)])]),Ss,t("td",Us,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Ws]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Xs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Ys]),_:1}),l(),Zs]),t("td",$s,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[td,t("td",ed,[t("a",ld,[l("最长递增子序列 II"),e(s)])]),od,t("td",nd,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[sd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[dd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[_d]),_:1}),l(),cd]),t("td",id,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ad,t("td",rd,[t("a",ud,[l("最长上传前缀"),e(s)])]),hd,t("td",fd,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[gd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[md]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[yd]),_:1}),l(),xd]),t("td",bd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jd,t("td",pd,[t("a",kd,[l("满足不等式的数对数目"),e(s)])]),Hd,t("td",qd,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Id]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[vd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[wd]),_:1}),l(),Md]),t("td",Ld,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cd,t("td",zd,[t("a",Kd,[l("统计 K-Big 索引的数量"),e(s)])]),Bd,t("td",Nd,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Pd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Vd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ed]),_:1}),l(),Od]),t("td",Rd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qd,t("td",Td,[t("a",Ad,[l("更新数组后处理求和查询"),e(s)])]),Gd,t("td",Jd,[e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Dd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Fd]),_:1})]),t("td",Sd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ud,t("td",Wd,[t("a",Xd,[l("将数组清空"),e(s)])]),Yd,t("td",Zd,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[$d]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[t_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[e_]),_:1}),l(),l_]),t("td",o_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n_,t("td",s_,[t("a",d_,[l("最大和查询"),e(s)])]),__,t("td",c_,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[i_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[a_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[r_]),_:1}),l(),u_]),t("td",h_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f_,t("td",g_,[t("a",m_,[l("价格递增的最大利润三元组 I"),e(s)])]),y_,t("td",x_,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[b_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[j_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[p_]),_:1})]),t("td",k_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H_,t("td",q_,[t("a",I_,[l("子数组不同元素数目的平方和 II"),e(s)])]),v_,t("td",w_,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[M_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[L_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[C_]),_:1}),l(),z_]),t("td",K_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B_,t("td",N_,[t("a",P_,[l("价格递增的最大利润三元组 II"),e(s)])]),V_,t("td",E_,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[O_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[R_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Q_]),_:1})]),t("td",T_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[A_,t("td",G_,[t("a",J_,[l("平衡子序列的最大和"),e(s)])]),D_,t("td",F_,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[S_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[U_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[W_]),_:1}),l(),X_]),t("td",Y_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Z_,t("td",$_,[t("a",tc,[l("找到 Alice 和 Bob 可以相遇的建筑"),e(s)])]),ec,t("td",lc,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[oc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[nc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[sc]),_:1}),l(),dc]),t("td",_c,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cc,t("td",ic,[t("a",ac,[l("将元素分配到两个数组中 II"),e(s)])]),rc,t("td",uc,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[hc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[fc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[gc]),_:1}),l(),mc]),t("td",yc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xc,t("td",bc,[t("a",jc,[l("查找排列的下标"),e(s)])]),pc,t("td",kc,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Hc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[qc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ic]),_:1}),l(),vc]),t("td",wc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mc,t("td",Lc,[t("a",Cc,[l("划分数组得到最小的值之和"),e(s)])]),zc,t("td",Kc,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Bc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Nc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[Pc]),_:1}),l(),Vc]),t("td",Ec,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oc,t("td",Rc,[t("a",Qc,[l("物块放置查询"),e(s)])]),Tc,t("td",Ac,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Gc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Jc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Dc]),_:1}),l(),Fc]),t("td",Sc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Uc,t("td",Wc,[t("a",Xc,[l("不包含相邻元素的子序列的最大和"),e(s)])]),Yc,t("td",Zc,[e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[$c]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ti]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[ei]),_:1}),l(),li]),t("td",oi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ni,t("td",si,[t("a",di,[l("找到按位或最接近 K 的子数组"),e(s)])]),_i,t("td",ci,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[ii]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[ai]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ri]),_:1}),l(),ui]),t("td",hi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fi,t("td",gi,[t("a",mi,[l("数组中的峰值"),e(s)])]),yi,t("td",xi,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[bi]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[ji]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[pi]),_:1})]),t("td",ki,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hi,t("td",qi,[t("a",Ii,[l("子数组按位与值为 K 的数目"),e(s)])]),vi,t("td",wi,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Mi]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Li]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ci]),_:1}),l(),zi]),t("td",Ki,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bi,t("td",Ni,[t("a",Pi,[l("形成目标字符串需要的最少字符串数 I"),e(s)])]),Vi,t("td",Ei,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[Oi]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Ri]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Qi]),_:1}),l(),Ti]),t("td",Ai,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gi,t("td",Ji,[t("a",Di,[l("形成目标字符串需要的最少字符串数 II"),e(s)])]),Fi,t("td",Si,[e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Ui]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Wi]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Xi]),_:1}),l(),Yi]),t("td",Zi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$i,t("td",ta,[t("a",ea,[l("发 LeetCoin"),e(s)])]),la,t("td",oa,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[na]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[sa]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[da]),_:1})]),t("td",_a,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ca,t("td",ia,[t("a",aa,[l("最小跳跃次数"),e(s)])]),ra,t("td",ua,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ha]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[fa]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ga]),_:1}),l(),ma]),t("td",ya,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xa,t("td",ba,[t("a",ja,[l("黑盒光线反射"),e(s)])]),pa,t("td",ka,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Ha]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[qa]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Ia]),_:1}),l(),va]),t("td",wa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ma,t("td",La,[t("a",Ca,[l("二叉搜索树染色"),e(s)])]),za,t("td",Ka,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ba]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Na]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Pa]),_:1}),l(),Va]),t("td",Ea,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oa,t("td",Ra,[t("a",Qa,[l("数组中的逆序对"),e(s)])]),Ta,t("td",Aa,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Ga]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Ja]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Da]),_:1}),l(),Fa]),t("td",Sa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ua,t("td",Wa,[t("a",Xa,[l("日程表"),e(s)])]),Ya,t("td",Za,[e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[$a]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[tr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[er]),_:1}),l(),lr]),t("td",or,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const cr=c(u,[["render",nr],["__file","segment-tree.html.vue"]]);export{cr as default};
