import{_ as c,r as _,o as i,c as a,a as t,d as e,w as o,b as l,f as u}from"./app-GnK0vSxb.js";const r={},h=t("h1",{id:"队列",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#队列","aria-hidden":"true"},"#"),l(" 队列")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),q=t("code",null,"单调栈",-1),M=t("span",{class:"blue"},"队列",-1),w=t("code",null,"单调队列",-1),H=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),E=t("code",null,"字符串",-1),I=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),O=t("code",null,"二叉树",-1),K=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),V=t("code",null,"图",-1),j=t("code",null,"有序集合",-1),C=t("code",null,"拓扑排序",-1),N=t("code",null,"最短路",-1),B=t("code",null,"强连通分量",-1),R=t("code",null,"欧拉回路",-1),D=t("code",null,"双连通分量",-1),P=t("code",null,"并查集",-1),Q=t("code",null,"字典树",-1),T=t("code",null,"线段树",-1),U=t("code",null,"树状数组",-1),A=t("code",null,"后缀数组",-1),F=t("p",null,[t("strong",null,"算法")],-1),G=t("code",null,"枚举",-1),J=t("code",null,"递归",-1),S=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),qt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),wt=t("code",null,"随机化",-1),Ht=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),Et=t("code",null,"拒绝采样",-1),It=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),Kt=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Vt=t("code",null,"迭代器",-1),jt=t("code",null,"多线程",-1),Ct=t("hr",null,null,-1),Nt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Bt=t("td",{style:{"text-align":"center"}},"225",-1),Rt={style:{"text-align":"left"}},Dt={href:"https://leetcode.com/problems/implement-stack-using-queues",target:"_blank",rel:"noopener noreferrer"},Pt={style:{"text-align":"center"}},Qt={style:{"text-align":"left"}},Tt=t("code",null,"栈",-1),Ut=t("code",null,"设计",-1),At=t("code",null,"队列",-1),Ft={style:{"text-align":"left"}},Gt=t("td",{style:{"text-align":"center"}},"232",-1),Jt={style:{"text-align":"left"}},St={href:"https://leetcode.com/problems/implement-queue-using-stacks",target:"_blank",rel:"noopener noreferrer"},Wt={style:{"text-align":"center"}},Xt={style:{"text-align":"left"}},Yt=t("code",null,"栈",-1),Zt=t("code",null,"设计",-1),$t=t("code",null,"队列",-1),te={style:{"text-align":"left"}},ee=t("td",{style:{"text-align":"center"}},"239",-1),le={style:{"text-align":"left"}},oe={href:"https://leetcode.com/problems/sliding-window-maximum",target:"_blank",rel:"noopener noreferrer"},ne={style:{"text-align":"center"}},de={style:{"text-align":"left"}},se=t("code",null,"队列",-1),_e=t("code",null,"数组",-1),ce=t("code",null,"滑动窗口",-1),ie=t("code",null,"2+",-1),ae={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"281",-1),re={style:{"text-align":"left"}},he={href:"https://leetcode.com/problems/zigzag-iterator",target:"_blank",rel:"noopener noreferrer"},fe=t("td",{style:{"text-align":"center"}},null,-1),ge={style:{"text-align":"left"}},me=t("code",null,"设计",-1),ye=t("code",null,"队列",-1),xe=t("code",null,"数组",-1),be=t("code",null,"1+",-1),pe={style:{"text-align":"left"}},ke=t("td",{style:{"text-align":"center"}},"341",-1),qe={style:{"text-align":"left"}},Me={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},we=t("td",{style:{"text-align":"center"}},null,-1),He={style:{"text-align":"left"}},ve=t("code",null,"栈",-1),Ee=t("code",null,"树",-1),Ie=t("code",null,"深度优先搜索",-1),ze=t("code",null,"3+",-1),Oe={style:{"text-align":"left"}},Ke=t("td",{style:{"text-align":"center"}},"346",-1),Le={style:{"text-align":"left"}},Ve={href:"https://leetcode.com/problems/moving-average-from-data-stream",target:"_blank",rel:"noopener noreferrer"},je={style:{"text-align":"center"}},Ce={style:{"text-align":"left"}},Ne=t("code",null,"设计",-1),Be=t("code",null,"队列",-1),Re=t("code",null,"数组",-1),De=t("code",null,"1+",-1),Pe={style:{"text-align":"left"}},Qe=t("td",{style:{"text-align":"center"}},"353",-1),Te={style:{"text-align":"left"}},Ue={href:"https://leetcode.com/problems/design-snake-game",target:"_blank",rel:"noopener noreferrer"},Ae=t("td",{style:{"text-align":"center"}},null,-1),Fe={style:{"text-align":"left"}},Ge=t("code",null,"设计",-1),Je=t("code",null,"队列",-1),Se=t("code",null,"数组",-1),We=t("code",null,"2+",-1),Xe={style:{"text-align":"left"}},Ye=t("td",{style:{"text-align":"center"}},"362",-1),Ze={style:{"text-align":"left"}},$e={href:"https://leetcode.com/problems/design-hit-counter",target:"_blank",rel:"noopener noreferrer"},tl=t("td",{style:{"text-align":"center"}},null,-1),el={style:{"text-align":"left"}},ll=t("code",null,"设计",-1),ol=t("code",null,"队列",-1),nl=t("code",null,"数组",-1),dl=t("code",null,"2+",-1),sl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"379",-1),cl={style:{"text-align":"left"}},il={href:"https://leetcode.com/problems/design-phone-directory",target:"_blank",rel:"noopener noreferrer"},al={style:{"text-align":"center"}},ul={style:{"text-align":"left"}},rl=t("code",null,"设计",-1),hl=t("code",null,"队列",-1),fl=t("code",null,"数组",-1),gl=t("code",null,"2+",-1),ml={style:{"text-align":"left"}},yl=t("td",{style:{"text-align":"center"}},"387",-1),xl={style:{"text-align":"left"}},bl={href:"https://leetcode.com/problems/first-unique-character-in-a-string",target:"_blank",rel:"noopener noreferrer"},pl=t("td",{style:{"text-align":"center"}},null,-1),kl={style:{"text-align":"left"}},ql=t("code",null,"队列",-1),Ml=t("code",null,"哈希表",-1),wl=t("code",null,"字符串",-1),Hl=t("code",null,"1+",-1),vl={style:{"text-align":"left"}},El=t("td",{style:{"text-align":"center"}},"622",-1),Il={style:{"text-align":"left"}},zl={href:"https://leetcode.com/problems/design-circular-queue",target:"_blank",rel:"noopener noreferrer"},Ol={style:{"text-align":"center"}},Kl={style:{"text-align":"left"}},Ll=t("code",null,"设计",-1),Vl=t("code",null,"队列",-1),jl=t("code",null,"数组",-1),Cl=t("code",null,"1+",-1),Nl={style:{"text-align":"left"}},Bl=t("td",{style:{"text-align":"center"}},"641",-1),Rl={style:{"text-align":"left"}},Dl={href:"https://leetcode.com/problems/design-circular-deque",target:"_blank",rel:"noopener noreferrer"},Pl={style:{"text-align":"center"}},Ql={style:{"text-align":"left"}},Tl=t("code",null,"设计",-1),Ul=t("code",null,"队列",-1),Al=t("code",null,"数组",-1),Fl=t("code",null,"1+",-1),Gl={style:{"text-align":"left"}},Jl=t("td",{style:{"text-align":"center"}},"649",-1),Sl={style:{"text-align":"left"}},Wl={href:"https://leetcode.com/problems/dota2-senate",target:"_blank",rel:"noopener noreferrer"},Xl=t("td",{style:{"text-align":"center"}},null,-1),Yl={style:{"text-align":"left"}},Zl=t("code",null,"贪心",-1),$l=t("code",null,"队列",-1),to=t("code",null,"字符串",-1),eo={style:{"text-align":"left"}},lo=t("td",{style:{"text-align":"center"}},"683",-1),oo={style:{"text-align":"left"}},no={href:"https://leetcode.com/problems/k-empty-slots",target:"_blank",rel:"noopener noreferrer"},so=t("td",{style:{"text-align":"center"}},null,-1),_o={style:{"text-align":"left"}},co=t("code",null,"树状数组",-1),io=t("code",null,"线段树",-1),ao=t("code",null,"队列",-1),uo=t("code",null,"5+",-1),ro={style:{"text-align":"left"}},ho=t("td",{style:{"text-align":"center"}},"862",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k",target:"_blank",rel:"noopener noreferrer"},mo=t("td",{style:{"text-align":"center"}},null,-1),yo={style:{"text-align":"left"}},xo=t("code",null,"队列",-1),bo=t("code",null,"数组",-1),po=t("code",null,"二分查找",-1),ko=t("code",null,"4+",-1),qo={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"center"}},"918",-1),wo={style:{"text-align":"left"}},Ho={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},vo={style:{"text-align":"center"}},Eo={style:{"text-align":"left"}},Io=t("code",null,"队列",-1),zo=t("code",null,"数组",-1),Oo=t("code",null,"分治",-1),Ko=t("code",null,"2+",-1),Lo={style:{"text-align":"left"}},Vo=t("td",{style:{"text-align":"center"}},"933",-1),jo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/number-of-recent-calls",target:"_blank",rel:"noopener noreferrer"},No=t("td",{style:{"text-align":"center"}},null,-1),Bo={style:{"text-align":"left"}},Ro=t("code",null,"设计",-1),Do=t("code",null,"队列",-1),Po=t("code",null,"数据流",-1),Qo={style:{"text-align":"left"}},To=t("td",{style:{"text-align":"center"}},"936",-1),Uo={style:{"text-align":"left"}},Ao={href:"https://leetcode.com/problems/stamping-the-sequence",target:"_blank",rel:"noopener noreferrer"},Fo=t("td",{style:{"text-align":"center"}},null,-1),Go={style:{"text-align":"left"}},Jo=t("code",null,"栈",-1),So=t("code",null,"贪心",-1),Wo=t("code",null,"队列",-1),Xo=t("code",null,"1+",-1),Yo={style:{"text-align":"left"}},Zo=t("td",{style:{"text-align":"center"}},"950",-1),$o={style:{"text-align":"left"}},tn={href:"https://leetcode.com/problems/reveal-cards-in-increasing-order",target:"_blank",rel:"noopener noreferrer"},en=t("td",{style:{"text-align":"center"}},null,-1),ln={style:{"text-align":"left"}},on=t("code",null,"队列",-1),nn=t("code",null,"数组",-1),dn=t("code",null,"排序",-1),sn=t("code",null,"1+",-1),_n={style:{"text-align":"left"}},cn=t("td",{style:{"text-align":"center"}},"995",-1),an={style:{"text-align":"left"}},un={href:"https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips",target:"_blank",rel:"noopener noreferrer"},rn=t("td",{style:{"text-align":"center"}},null,-1),hn={style:{"text-align":"left"}},fn=t("code",null,"位运算",-1),gn=t("code",null,"队列",-1),mn=t("code",null,"数组",-1),yn=t("code",null,"2+",-1),xn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"1352",-1),pn={style:{"text-align":"left"}},kn={href:"https://leetcode.com/problems/product-of-the-last-k-numbers",target:"_blank",rel:"noopener noreferrer"},qn=t("td",{style:{"text-align":"center"}},null,-1),Mn={style:{"text-align":"left"}},wn=t("code",null,"设计",-1),Hn=t("code",null,"队列",-1),vn=t("code",null,"数组",-1),En=t("code",null,"2+",-1),In={style:{"text-align":"left"}},zn=t("td",{style:{"text-align":"center"}},"1425",-1),On={style:{"text-align":"left"}},Kn={href:"https://leetcode.com/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},Ln=t("td",{style:{"text-align":"center"}},null,-1),Vn={style:{"text-align":"left"}},jn=t("code",null,"队列",-1),Cn=t("code",null,"数组",-1),Nn=t("code",null,"动态规划",-1),Bn=t("code",null,"3+",-1),Rn={style:{"text-align":"left"}},Dn=t("td",{style:{"text-align":"center"}},"1429",-1),Pn={style:{"text-align":"left"}},Qn={href:"https://leetcode.com/problems/first-unique-number",target:"_blank",rel:"noopener noreferrer"},Tn=t("td",{style:{"text-align":"center"}},null,-1),Un={style:{"text-align":"left"}},An=t("code",null,"设计",-1),Fn=t("code",null,"队列",-1),Gn=t("code",null,"数组",-1),Jn=t("code",null,"2+",-1),Sn={style:{"text-align":"left"}},Wn=t("td",{style:{"text-align":"center"}},"1438",-1),Xn={style:{"text-align":"left"}},Yn={href:"https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",target:"_blank",rel:"noopener noreferrer"},Zn=t("td",{style:{"text-align":"center"}},null,-1),$n={style:{"text-align":"left"}},td=t("code",null,"队列",-1),ed=t("code",null,"数组",-1),ld=t("code",null,"有序集合",-1),od=t("code",null,"3+",-1),nd={style:{"text-align":"left"}},dd=t("td",{style:{"text-align":"center"}},"1499",-1),sd={style:{"text-align":"left"}},_d={href:"https://leetcode.com/problems/max-value-of-equation",target:"_blank",rel:"noopener noreferrer"},cd=t("td",{style:{"text-align":"center"}},null,-1),id={style:{"text-align":"left"}},ad=t("code",null,"队列",-1),ud=t("code",null,"数组",-1),rd=t("code",null,"滑动窗口",-1),hd=t("code",null,"2+",-1),fd={style:{"text-align":"left"}},gd=t("td",{style:{"text-align":"center"}},"1670",-1),md={style:{"text-align":"left"}},yd={href:"https://leetcode.com/problems/design-front-middle-back-queue",target:"_blank",rel:"noopener noreferrer"},xd=t("td",{style:{"text-align":"center"}},null,-1),bd={style:{"text-align":"left"}},pd=t("code",null,"设计",-1),kd=t("code",null,"队列",-1),qd=t("code",null,"数组",-1),Md=t("code",null,"2+",-1),wd={style:{"text-align":"left"}},Hd=t("td",{style:{"text-align":"center"}},"1687",-1),vd={style:{"text-align":"left"}},Ed={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},Id=t("td",{style:{"text-align":"center"}},null,-1),zd={style:{"text-align":"left"}},Od=t("code",null,"线段树",-1),Kd=t("code",null,"队列",-1),Ld=t("code",null,"数组",-1),Vd=t("code",null,"4+",-1),jd={style:{"text-align":"left"}},Cd=t("td",{style:{"text-align":"center"}},"1696",-1),Nd={style:{"text-align":"left"}},Bd={href:"https://leetcode.com/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},Rd=t("td",{style:{"text-align":"center"}},null,-1),Dd={style:{"text-align":"left"}},Pd=t("code",null,"队列",-1),Qd=t("code",null,"数组",-1),Td=t("code",null,"动态规划",-1),Ud=t("code",null,"2+",-1),Ad={style:{"text-align":"left"}},Fd=t("td",{style:{"text-align":"center"}},"1700",-1),Gd={style:{"text-align":"left"}},Jd={href:"https://leetcode.com/problems/number-of-students-unable-to-eat-lunch",target:"_blank",rel:"noopener noreferrer"},Sd=t("td",{style:{"text-align":"center"}},null,-1),Wd={style:{"text-align":"left"}},Xd=t("code",null,"栈",-1),Yd=t("code",null,"队列",-1),Zd=t("code",null,"数组",-1),$d=t("code",null,"1+",-1),ts={style:{"text-align":"left"}},es=t("td",{style:{"text-align":"center"}},"1823",-1),ls={style:{"text-align":"left"}},os={href:"https://leetcode.com/problems/find-the-winner-of-the-circular-game",target:"_blank",rel:"noopener noreferrer"},ns=t("td",{style:{"text-align":"center"}},null,-1),ds={style:{"text-align":"left"}},ss=t("code",null,"递归",-1),_s=t("code",null,"队列",-1),cs=t("code",null,"数组",-1),is=t("code",null,"2+",-1),as={style:{"text-align":"left"}},us=t("td",{style:{"text-align":"center"}},"1825",-1),rs={style:{"text-align":"left"}},hs={href:"https://leetcode.com/problems/finding-mk-average",target:"_blank",rel:"noopener noreferrer"},fs=t("td",{style:{"text-align":"center"}},null,-1),gs={style:{"text-align":"left"}},ms=t("code",null,"设计",-1),ys=t("code",null,"队列",-1),xs=t("code",null,"数据流",-1),bs=t("code",null,"2+",-1),ps={style:{"text-align":"left"}},ks=t("td",{style:{"text-align":"center"}},"2071",-1),qs={style:{"text-align":"left"}},Ms={href:"https://leetcode.com/problems/maximum-number-of-tasks-you-can-assign",target:"_blank",rel:"noopener noreferrer"},ws=t("td",{style:{"text-align":"center"}},null,-1),Hs={style:{"text-align":"left"}},vs=t("code",null,"贪心",-1),Es=t("code",null,"队列",-1),Is=t("code",null,"数组",-1),zs=t("code",null,"3+",-1),Os={style:{"text-align":"left"}},Ks=t("td",{style:{"text-align":"center"}},"2073",-1),Ls={style:{"text-align":"left"}},Vs={href:"https://leetcode.com/problems/time-needed-to-buy-tickets",target:"_blank",rel:"noopener noreferrer"},js=t("td",{style:{"text-align":"center"}},null,-1),Cs={style:{"text-align":"left"}},Ns=t("code",null,"队列",-1),Bs=t("code",null,"数组",-1),Rs=t("code",null,"模拟",-1),Ds={style:{"text-align":"left"}},Ps=t("td",{style:{"text-align":"center"}},"2327",-1),Qs={style:{"text-align":"left"}},Ts={href:"https://leetcode.com/problems/number-of-people-aware-of-a-secret",target:"_blank",rel:"noopener noreferrer"},Us=t("td",{style:{"text-align":"center"}},null,-1),As={style:{"text-align":"left"}},Fs=t("code",null,"队列",-1),Gs=t("code",null,"动态规划",-1),Js=t("code",null,"模拟",-1),Ss={style:{"text-align":"left"}},Ws=t("td",{style:{"text-align":"center"}},"2398",-1),Xs={style:{"text-align":"left"}},Ys={href:"https://leetcode.com/problems/maximum-number-of-robots-within-budget",target:"_blank",rel:"noopener noreferrer"},Zs=t("td",{style:{"text-align":"center"}},null,-1),$s={style:{"text-align":"left"}},t_=t("code",null,"队列",-1),e_=t("code",null,"数组",-1),l_=t("code",null,"二分查找",-1),o_=t("code",null,"4+",-1),n_={style:{"text-align":"left"}},d_=t("td",{style:{"text-align":"center"}},"2407",-1),s_={style:{"text-align":"left"}},__={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},c_=t("td",{style:{"text-align":"center"}},null,-1),i_={style:{"text-align":"left"}},a_=t("code",null,"树状数组",-1),u_=t("code",null,"线段树",-1),r_=t("code",null,"队列",-1),h_=t("code",null,"4+",-1),f_={style:{"text-align":"left"}},g_=t("td",{style:{"text-align":"center"}},"2444",-1),m_={style:{"text-align":"left"}},y_={href:"https://leetcode.com/problems/count-subarrays-with-fixed-bounds",target:"_blank",rel:"noopener noreferrer"},x_=t("td",{style:{"text-align":"center"}},null,-1),b_={style:{"text-align":"left"}},p_=t("code",null,"队列",-1),k_=t("code",null,"数组",-1),q_=t("code",null,"滑动窗口",-1),M_=t("code",null,"1+",-1),w_={style:{"text-align":"left"}},H_=t("td",{style:{"text-align":"center"}},"2526",-1),v_={style:{"text-align":"left"}},E_={href:"https://leetcode.com/problems/find-consecutive-integers-from-a-data-stream",target:"_blank",rel:"noopener noreferrer"},I_=t("td",{style:{"text-align":"center"}},null,-1),z_={style:{"text-align":"left"}},O_=t("code",null,"设计",-1),K_=t("code",null,"队列",-1),L_=t("code",null,"哈希表",-1),V_=t("code",null,"2+",-1),j_={style:{"text-align":"left"}},C_=t("td",{style:{"text-align":"center"}},"2528",-1),N_={style:{"text-align":"left"}},B_={href:"https://leetcode.com/problems/maximize-the-minimum-powered-city",target:"_blank",rel:"noopener noreferrer"},R_=t("td",{style:{"text-align":"center"}},null,-1),D_={style:{"text-align":"left"}},P_=t("code",null,"贪心",-1),Q_=t("code",null,"队列",-1),T_=t("code",null,"数组",-1),U_=t("code",null,"3+",-1),A_={style:{"text-align":"left"}},F_=t("td",{style:{"text-align":"center"}},"2534",-1),G_={style:{"text-align":"left"}},J_={href:"https://leetcode.com/problems/time-taken-to-cross-the-door",target:"_blank",rel:"noopener noreferrer"},S_=t("td",{style:{"text-align":"center"}},null,-1),W_={style:{"text-align":"left"}},X_=t("code",null,"队列",-1),Y_=t("code",null,"数组",-1),Z_=t("code",null,"模拟",-1),$_={style:{"text-align":"left"}},tc=t("td",{style:{"text-align":"center"}},"2762",-1),ec={style:{"text-align":"left"}},lc={href:"https://leetcode.com/problems/continuous-subarrays",target:"_blank",rel:"noopener noreferrer"},oc=t("td",{style:{"text-align":"center"}},null,-1),nc={style:{"text-align":"left"}},dc=t("code",null,"队列",-1),sc=t("code",null,"数组",-1),_c=t("code",null,"有序集合",-1),cc=t("code",null,"3+",-1),ic={style:{"text-align":"left"}},ac=t("td",{style:{"text-align":"center"}},"2944",-1),uc={style:{"text-align":"left"}},rc={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},hc=t("td",{style:{"text-align":"center"}},null,-1),fc={style:{"text-align":"left"}},gc=t("code",null,"队列",-1),mc=t("code",null,"数组",-1),yc=t("code",null,"动态规划",-1),xc=t("code",null,"2+",-1),bc={style:{"text-align":"left"}},pc=t("td",{style:{"text-align":"center"}},"2945",-1),kc={style:{"text-align":"left"}},qc={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},Mc=t("td",{style:{"text-align":"center"}},null,-1),wc={style:{"text-align":"left"}},Hc=t("code",null,"栈",-1),vc=t("code",null,"队列",-1),Ec=t("code",null,"数组",-1),Ic=t("code",null,"4+",-1),zc={style:{"text-align":"left"}},Oc=t("td",{style:{"text-align":"center"}},"2969",-1),Kc={style:{"text-align":"left"}},Lc={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},Vc=t("td",{style:{"text-align":"center"}},null,-1),jc={style:{"text-align":"left"}},Cc=t("code",null,"队列",-1),Nc=t("code",null,"数组",-1),Bc=t("code",null,"动态规划",-1),Rc=t("code",null,"2+",-1),Dc={style:{"text-align":"left"}},Pc=t("td",{style:{"text-align":"center"}},"3117",-1),Qc={style:{"text-align":"left"}},Tc={href:"https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},Uc=t("td",{style:{"text-align":"center"}},null,-1),Ac={style:{"text-align":"left"}},Fc=t("code",null,"位运算",-1),Gc=t("code",null,"线段树",-1),Jc=t("code",null,"队列",-1),Sc=t("code",null,"3+",-1),Wc={style:{"text-align":"left"}},Xc=t("td",{style:{"text-align":"center"}},"3191",-1),Yc={style:{"text-align":"left"}},Zc={href:"https://leetcode.com/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-i",target:"_blank",rel:"noopener noreferrer"},$c=t("td",{style:{"text-align":"center"}},null,-1),ti={style:{"text-align":"left"}},ei=t("code",null,"位运算",-1),li=t("code",null,"队列",-1),oi=t("code",null,"数组",-1),ni=t("code",null,"2+",-1),di={style:{"text-align":"left"}},si=t("td",{style:{"text-align":"center"}},"LCP 23",-1),_i={style:{"text-align":"left"}},ci={href:"https://leetcode.cn/problems/er94lq",target:"_blank",rel:"noopener noreferrer"},ii=t("td",{style:{"text-align":"center"}},null,-1),ai={style:{"text-align":"left"}},ui=t("code",null,"队列",-1),ri=t("code",null,"数组",-1),hi=t("code",null,"模拟",-1),fi={style:{"text-align":"left"}},gi=t("td",{style:{"text-align":"center"}},"剑指 Offer 09",-1),mi={style:{"text-align":"left"}},yi={href:"https://leetcode.cn/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof",target:"_blank",rel:"noopener noreferrer"},xi={style:{"text-align":"center"}},bi={style:{"text-align":"left"}},pi=t("code",null,"栈",-1),ki=t("code",null,"设计",-1),qi=t("code",null,"队列",-1),Mi={style:{"text-align":"left"}},wi=t("td",{style:{"text-align":"center"}},"剑指 Offer 50",-1),Hi={style:{"text-align":"left"}},vi={href:"https://leetcode.cn/problems/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof",target:"_blank",rel:"noopener noreferrer"},Ei={style:{"text-align":"center"}},Ii={style:{"text-align":"left"}},zi=t("code",null,"队列",-1),Oi=t("code",null,"哈希表",-1),Ki=t("code",null,"字符串",-1),Li=t("code",null,"1+",-1),Vi={style:{"text-align":"left"}},ji=t("td",{style:{"text-align":"center"}},"剑指 Offer 59 - I",-1),Ci={style:{"text-align":"left"}},Ni={href:"https://leetcode.cn/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},Bi=t("td",{style:{"text-align":"center"}},null,-1),Ri={style:{"text-align":"left"}},Di=t("code",null,"队列",-1),Pi=t("code",null,"数组",-1),Qi=t("code",null,"滑动窗口",-1),Ti=t("code",null,"2+",-1),Ui={style:{"text-align":"left"}},Ai=t("td",{style:{"text-align":"center"}},"剑指 Offer 59 - II",-1),Fi={style:{"text-align":"left"}},Gi={href:"https://leetcode.cn/problems/dui-lie-de-zui-da-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},Ji=t("td",{style:{"text-align":"center"}},null,-1),Si={style:{"text-align":"left"}},Wi=t("code",null,"设计",-1),Xi=t("code",null,"队列",-1),Yi=t("code",null,"单调队列",-1),Zi={style:{"text-align":"left"}},$i=t("td",{style:{"text-align":"center"}},"剑指 Offer II 41",-1),ta={style:{"text-align":"left"}},ea={href:"https://leetcode.cn/problems/qIsx9U",target:"_blank",rel:"noopener noreferrer"},la=t("td",{style:{"text-align":"center"}},null,-1),oa={style:{"text-align":"left"}},na=t("code",null,"设计",-1),da=t("code",null,"队列",-1),sa=t("code",null,"数组",-1),_a=t("code",null,"1+",-1),ca={style:{"text-align":"left"}},ia=t("td",{style:{"text-align":"center"}},"剑指 Offer II 42",-1),aa={style:{"text-align":"left"}},ua={href:"https://leetcode.cn/problems/H8086Q",target:"_blank",rel:"noopener noreferrer"},ra=t("td",{style:{"text-align":"center"}},null,-1),ha={style:{"text-align":"left"}},fa=t("code",null,"设计",-1),ga=t("code",null,"队列",-1),ma=t("code",null,"数据流",-1),ya={style:{"text-align":"left"}},xa=t("td",{style:{"text-align":"center"}},"面试题 03.04",-1),ba={style:{"text-align":"left"}},pa={href:"https://leetcode.cn/problems/implement-queue-using-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},ka=t("td",{style:{"text-align":"center"}},null,-1),qa={style:{"text-align":"left"}},Ma=t("code",null,"栈",-1),wa=t("code",null,"设计",-1),Ha=t("code",null,"队列",-1),va={style:{"text-align":"left"}},Ea=t("td",{style:{"text-align":"center"}},"面试题 03.06",-1),Ia={style:{"text-align":"left"}},za={href:"https://leetcode.cn/problems/animal-shelter-lcci",target:"_blank",rel:"noopener noreferrer"},Oa=t("td",{style:{"text-align":"center"}},null,-1),Ka={style:{"text-align":"left"}},La=t("code",null,"设计",-1),Va=t("code",null,"队列",-1),ja={style:{"text-align":"left"}};function Ca(Na,Ba){const n=_("RouterLink"),d=_("ExternalLinkIcon"),s=_("font");return i(),a("div",null,[h,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[q]),_:1}),l(),M,l(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[A]),_:1})]),F,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:o(()=>[Kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:o(()=>[Vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[jt]),_:1})])]),Ct,u(" prettier-ignore "),t("table",null,[Nt,t("tbody",null,[t("tr",null,[Bt,t("td",Rt,[t("a",Dt,[l("用队列实现栈"),e(d)])]),t("td",Pt,[e(n,{to:"/leetcode/problem/0225.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[At]),_:1})]),t("td",Ft,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Gt,t("td",Jt,[t("a",St,[l("用栈实现队列"),e(d)])]),t("td",Wt,[e(n,{to:"/leetcode/problem/0232.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Xt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[$t]),_:1})]),t("td",te,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ee,t("td",le,[t("a",oe,[l("滑动窗口最大值"),e(d)])]),t("td",ne,[e(n,{to:"/leetcode/problem/0239.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",de,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[se]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[_e]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[ce]),_:1}),l(),ie]),t("td",ae,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ue,t("td",re,[t("a",he,[l("锯齿迭代器"),e(d)])]),fe,t("td",ge,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[me]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[ye]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[xe]),_:1}),l(),be]),t("td",pe,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ke,t("td",qe,[t("a",Me,[l("扁平化嵌套列表迭代器"),e(d)])]),we,t("td",He,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ve]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ee]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ie]),_:1}),l(),ze]),t("td",Oe,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ke,t("td",Le,[t("a",Ve,[l("数据流中的移动平均值"),e(d)])]),t("td",je,[e(n,{to:"/leetcode/problem/0346.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ce,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Ne]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Be]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Re]),_:1}),l(),De]),t("td",Pe,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Qe,t("td",Te,[t("a",Ue,[l("贪吃蛇"),e(d)])]),Ae,t("td",Fe,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Ge]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Je]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Se]),_:1}),l(),We]),t("td",Xe,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ye,t("td",Ze,[t("a",$e,[l("敲击计数器"),e(d)])]),tl,t("td",el,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[ll]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[ol]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[nl]),_:1}),l(),dl]),t("td",sl,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_l,t("td",cl,[t("a",il,[l("电话目录管理系统"),e(d)])]),t("td",al,[e(n,{to:"/leetcode/problem/0379.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ul,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[rl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[hl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[fl]),_:1}),l(),gl]),t("td",ml,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yl,t("td",xl,[t("a",bl,[l("字符串中的第一个唯一字符"),e(d)])]),pl,t("td",kl,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[ql]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Ml]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[wl]),_:1}),l(),Hl]),t("td",vl,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[El,t("td",Il,[t("a",zl,[l("设计循环队列"),e(d)])]),t("td",Ol,[e(n,{to:"/leetcode/problem/0622.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Kl,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Ll]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Vl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[jl]),_:1}),l(),Cl]),t("td",Nl,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bl,t("td",Rl,[t("a",Dl,[l("设计循环双端队列"),e(d)])]),t("td",Pl,[e(n,{to:"/leetcode/problem/0641.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ql,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Tl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Ul]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Al]),_:1}),l(),Fl]),t("td",Gl,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jl,t("td",Sl,[t("a",Wl,[l("Dota2 参议院"),e(d)])]),Xl,t("td",Yl,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Zl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[$l]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[to]),_:1})]),t("td",eo,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lo,t("td",oo,[t("a",no,[l("K 个关闭的灯泡"),e(d)])]),so,t("td",_o,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[co]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[io]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[ao]),_:1}),l(),uo]),t("td",ro,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ho,t("td",fo,[t("a",go,[l("和至少为 K 的最短子数组"),e(d)])]),mo,t("td",yo,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[xo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[bo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[po]),_:1}),l(),ko]),t("td",qo,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mo,t("td",wo,[t("a",Ho,[l("环形子数组的最大和"),e(d)])]),t("td",vo,[e(n,{to:"/leetcode/problem/0918.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Eo,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Io]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[zo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Oo]),_:1}),l(),Ko]),t("td",Lo,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vo,t("td",jo,[t("a",Co,[l("最近的请求次数"),e(d)])]),No,t("td",Bo,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Ro]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Do]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[Po]),_:1})]),t("td",Qo,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[To,t("td",Uo,[t("a",Ao,[l("戳印序列"),e(d)])]),Fo,t("td",Go,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Jo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[So]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Wo]),_:1}),l(),Xo]),t("td",Yo,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zo,t("td",$o,[t("a",tn,[l("按递增顺序显示卡牌"),e(d)])]),en,t("td",ln,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[on]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[nn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[dn]),_:1}),l(),sn]),t("td",_n,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cn,t("td",an,[t("a",un,[l("K 连续位的最小翻转次数"),e(d)])]),rn,t("td",hn,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[fn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[gn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[mn]),_:1}),l(),yn]),t("td",xn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bn,t("td",pn,[t("a",kn,[l("最后 K 个数的乘积"),e(d)])]),qn,t("td",Mn,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[wn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Hn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[vn]),_:1}),l(),En]),t("td",In,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zn,t("td",On,[t("a",Kn,[l("带限制的子序列和"),e(d)])]),Ln,t("td",Vn,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[jn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Cn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Nn]),_:1}),l(),Bn]),t("td",Rn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dn,t("td",Pn,[t("a",Qn,[l("第一个唯一数字"),e(d)])]),Tn,t("td",Un,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[An]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Fn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Gn]),_:1}),l(),Jn]),t("td",Sn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wn,t("td",Xn,[t("a",Yn,[l("绝对差不超过限制的最长连续子数组"),e(d)])]),Zn,t("td",$n,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[td]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ed]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[ld]),_:1}),l(),od]),t("td",nd,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dd,t("td",sd,[t("a",_d,[l("满足不等式的最大值"),e(d)])]),cd,t("td",id,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[ad]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ud]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[rd]),_:1}),l(),hd]),t("td",fd,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gd,t("td",md,[t("a",yd,[l("设计前中后队列"),e(d)])]),xd,t("td",bd,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[pd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[kd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[qd]),_:1}),l(),Md]),t("td",wd,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hd,t("td",vd,[t("a",Ed,[l("从仓库到码头运输箱子"),e(d)])]),Id,t("td",zd,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Od]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Kd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ld]),_:1}),l(),Vd]),t("td",jd,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cd,t("td",Nd,[t("a",Bd,[l("跳跃游戏 VI"),e(d)])]),Rd,t("td",Dd,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Pd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Qd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Td]),_:1}),l(),Ud]),t("td",Ad,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fd,t("td",Gd,[t("a",Jd,[l("无法吃午餐的学生数量"),e(d)])]),Sd,t("td",Wd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Xd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Yd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Zd]),_:1}),l(),$d]),t("td",ts,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[es,t("td",ls,[t("a",os,[l("找出游戏的获胜者"),e(d)])]),ns,t("td",ds,[e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[ss]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[_s]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[cs]),_:1}),l(),is]),t("td",as,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[us,t("td",rs,[t("a",hs,[l("求出 MK 平均值"),e(d)])]),fs,t("td",gs,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[ms]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[ys]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[xs]),_:1}),l(),bs]),t("td",ps,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ks,t("td",qs,[t("a",Ms,[l("你可以安排的最多任务数目"),e(d)])]),ws,t("td",Hs,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[vs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Es]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Is]),_:1}),l(),zs]),t("td",Os,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ks,t("td",Ls,[t("a",Vs,[l("买票需要的时间"),e(d)])]),js,t("td",Cs,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Ns]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Bs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[Rs]),_:1})]),t("td",Ds,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ps,t("td",Qs,[t("a",Ts,[l("知道秘密的人数"),e(d)])]),Us,t("td",As,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Fs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Gs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[Js]),_:1})]),t("td",Ss,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ws,t("td",Xs,[t("a",Ys,[l("预算内的最多机器人数目"),e(d)])]),Zs,t("td",$s,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[t_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[e_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[l_]),_:1}),l(),o_]),t("td",n_,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d_,t("td",s_,[t("a",__,[l("最长递增子序列 II"),e(d)])]),c_,t("td",i_,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[a_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[u_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[r_]),_:1}),l(),h_]),t("td",f_,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[g_,t("td",m_,[t("a",y_,[l("统计定界子数组的数目"),e(d)])]),x_,t("td",b_,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[p_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[k_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[q_]),_:1}),l(),M_]),t("td",w_,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H_,t("td",v_,[t("a",E_,[l("找到数据流中的连续整数"),e(d)])]),I_,t("td",z_,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[O_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[K_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[L_]),_:1}),l(),V_]),t("td",j_,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C_,t("td",N_,[t("a",B_,[l("最大化城市的最小电量"),e(d)])]),R_,t("td",D_,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[P_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Q_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[T_]),_:1}),l(),U_]),t("td",A_,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[F_,t("td",G_,[t("a",J_,[l("通过门的时间"),e(d)])]),S_,t("td",W_,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[X_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Y_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[Z_]),_:1})]),t("td",$_,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tc,t("td",ec,[t("a",lc,[l("不间断子数组"),e(d)])]),oc,t("td",nc,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[dc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[sc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[_c]),_:1}),l(),cc]),t("td",ic,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ac,t("td",uc,[t("a",rc,[l("购买水果需要的最少金币数"),e(d)])]),hc,t("td",fc,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[gc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[mc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[yc]),_:1}),l(),xc]),t("td",bc,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pc,t("td",kc,[t("a",qc,[l("找到最大非递减数组的长度"),e(d)])]),Mc,t("td",wc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Hc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[vc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ec]),_:1}),l(),Ic]),t("td",zc,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oc,t("td",Kc,[t("a",Lc,[l("购买水果需要的最少金币数 II"),e(d)])]),Vc,t("td",jc,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Cc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Nc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Bc]),_:1}),l(),Rc]),t("td",Dc,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pc,t("td",Qc,[t("a",Tc,[l("划分数组得到最小的值之和"),e(d)])]),Uc,t("td",Ac,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[Fc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Gc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Jc]),_:1}),l(),Sc]),t("td",Wc,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xc,t("td",Yc,[t("a",Zc,[l("使二进制数组全部等于 1 的最少操作次数 I"),e(d)])]),$c,t("td",ti,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[ei]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[li]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[oi]),_:1}),l(),ni]),t("td",di,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[si,t("td",_i,[t("a",ci,[l("魔术排列"),e(d)])]),ii,t("td",ai,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[ui]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ri]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[hi]),_:1})]),t("td",fi,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gi,t("td",mi,[t("a",yi,[l("用两个栈实现队列"),e(d)])]),t("td",xi,[e(n,{to:"/leetcode/problem/jz_offer_09_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",bi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[pi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[ki]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[qi]),_:1})]),t("td",Mi,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wi,t("td",Hi,[t("a",vi,[l("第一个只出现一次的字符"),e(d)])]),t("td",Ei,[e(n,{to:"/leetcode/problem/jz_offer_50_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ii,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[zi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Oi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Ki]),_:1}),l(),Li]),t("td",Vi,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ji,t("td",Ci,[t("a",Ni,[l("滑动窗口的最大值"),e(d)])]),Bi,t("td",Ri,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Di]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Pi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[Qi]),_:1}),l(),Ti]),t("td",Ui,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ai,t("td",Fi,[t("a",Gi,[l("队列的最大值"),e(d)])]),Ji,t("td",Si,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Wi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Xi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:o(()=>[Yi]),_:1})]),t("td",Zi,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$i,t("td",ta,[t("a",ea,[l("滑动窗口的平均值"),e(d)])]),la,t("td",oa,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[na]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[da]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[sa]),_:1}),l(),_a]),t("td",ca,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ia,t("td",aa,[t("a",ua,[l("最近请求次数"),e(d)])]),ra,t("td",ha,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[fa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[ga]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[ma]),_:1})]),t("td",ya,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xa,t("td",ba,[t("a",pa,[l("化栈为队"),e(d)])]),ka,t("td",qa,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ma]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[wa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Ha]),_:1})]),t("td",va,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ea,t("td",Ia,[t("a",za,[l("动物收容所"),e(d)])]),Oa,t("td",Ka,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[La]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Va]),_:1})]),t("td",ja,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const Da=c(r,[["render",Ca],["__file","queue.html.vue"]]);export{Da as default};
