import{_ as a,r as c,o as i,c as r,f as _,a as t,b as o,d as e,w as l}from"./app-GnK0vSxb.js";const h={},u=t("h1",{id:"_3-3-分治算法",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_3-3-分治算法","aria-hidden":"true"},"#"),o(" 3.3 分治算法")],-1),f=t("h2",{id:"相关题目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#相关题目","aria-hidden":"true"},"#"),o(" 相关题目")],-1),m=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),g=t("td",{style:{"text-align":"center"}},"4",-1),x={style:{"text-align":"left"}},y={href:"https://leetcode.com/problems/median-of-two-sorted-arrays",target:"_blank",rel:"noopener noreferrer"},p={style:{"text-align":"center"}},b={style:{"text-align":"left"}},k=t("code",null,"数组",-1),E=t("code",null,"二分查找",-1),T=t("code",null,"分治",-1),v={style:{"text-align":"left"}},N=t("td",{style:{"text-align":"center"}},"23",-1),q={style:{"text-align":"left"}},w={href:"https://leetcode.com/problems/merge-k-sorted-lists",target:"_blank",rel:"noopener noreferrer"},I={style:{"text-align":"center"}},L={style:{"text-align":"left"}},R=t("code",null,"链表",-1),A=t("code",null,"分治",-1),B=t("code",null,"堆（优先队列）",-1),C=t("code",null,"1+",-1),D={style:{"text-align":"left"}},M=t("td",{style:{"text-align":"center"}},"53",-1),O={style:{"text-align":"left"}},S={href:"https://leetcode.com/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},V={style:{"text-align":"center"}},H={style:{"text-align":"left"}},P=t("code",null,"数组",-1),j=t("code",null,"分治",-1),z=t("code",null,"动态规划",-1),U={style:{"text-align":"left"}},K=t("td",{style:{"text-align":"center"}},"241",-1),F={style:{"text-align":"left"}},G={href:"https://leetcode.com/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},J=t("td",{style:{"text-align":"center"}},null,-1),Q={style:{"text-align":"left"}},W=t("code",null,"递归",-1),X=t("code",null,"记忆化搜索",-1),Y=t("code",null,"数学",-1),Z=t("code",null,"2+",-1),$={style:{"text-align":"left"}},tt=t("td",{style:{"text-align":"center"}},"169",-1),et={style:{"text-align":"left"}},ot={href:"https://leetcode.com/problems/majority-element",target:"_blank",rel:"noopener noreferrer"},lt={style:{"text-align":"center"}},nt={style:{"text-align":"left"}},dt=t("code",null,"数组",-1),st=t("code",null,"哈希表",-1),_t=t("code",null,"分治",-1),ct=t("code",null,"2+",-1),at={style:{"text-align":"left"}},it=t("td",{style:{"text-align":"center"}},"50",-1),rt={style:{"text-align":"left"}},ht={href:"https://leetcode.com/problems/powx-n",target:"_blank",rel:"noopener noreferrer"},ut={style:{"text-align":"center"}},ft={style:{"text-align":"left"}},mt=t("code",null,"递归",-1),gt=t("code",null,"数学",-1),xt={style:{"text-align":"left"}},yt=t("td",{style:{"text-align":"center"}},"14",-1),pt={style:{"text-align":"left"}},bt={href:"https://leetcode.com/problems/longest-common-prefix",target:"_blank",rel:"noopener noreferrer"},kt={style:{"text-align":"center"}},Et={style:{"text-align":"left"}},Tt=t("code",null,"字典树",-1),vt=t("code",null,"字符串",-1),Nt={style:{"text-align":"left"}},qt=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),wt={style:{"text-align":"left"}},It={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},Lt={style:{"text-align":"center"}},Rt={style:{"text-align":"left"}},At=t("code",null,"栈",-1),Bt=t("code",null,"树",-1),Ct=t("code",null,"二叉搜索树",-1),Dt=t("code",null,"4+",-1),Mt={style:{"text-align":"left"}};function Ot(St,Vt){const d=c("ExternalLinkIcon"),n=c("RouterLink"),s=c("font");return i(),r("div",null,[u,_(" START TABLE "),_(" Please keep comment here to allow auto update "),_(" DON'T EDIT THIS SECTION, INSTEAD RE-RUN `npm run lc` TO UPDATE "),f,_(" prettier-ignore "),t("table",null,[m,t("tbody",null,[t("tr",null,[g,t("td",x,[t("a",y,[o("寻找两个正序数组的中位数"),e(d)])]),t("td",p,[e(n,{to:"/leetcode/problem/0004.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",b,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[T]),_:1})]),t("td",v,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[N,t("td",q,[t("a",w,[o("合并 K 个升序链表"),e(d)])]),t("td",I,[e(n,{to:"/leetcode/problem/0023.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",L,[e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[B]),_:1}),o(),C]),t("td",D,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[M,t("td",O,[t("a",S,[o("最大子数组和"),e(d)])]),t("td",V,[e(n,{to:"/leetcode/problem/0053.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",H,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[z]),_:1})]),t("td",U,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[K,t("td",F,[t("a",G,[o("为运算表达式设计优先级"),e(d)])]),J,t("td",Q,[e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Y]),_:1}),o(),Z]),t("td",$,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[tt,t("td",et,[t("a",ot,[o("多数元素"),e(d)])]),t("td",lt,[e(n,{to:"/leetcode/problem/0169.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",nt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[_t]),_:1}),o(),ct]),t("td",at,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[it,t("td",rt,[t("a",ht,[o("Pow(x, n)"),e(d)])]),t("td",ut,[e(n,{to:"/leetcode/problem/0050.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",ft,[e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[gt]),_:1})]),t("td",xt,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yt,t("td",pt,[t("a",bt,[o("最长公共前缀"),e(d)])]),t("td",kt,[e(n,{to:"/leetcode/problem/0014.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",Et,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[Tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[vt]),_:1})]),t("td",Nt,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[qt,t("td",wt,[t("a",It,[o("二叉搜索树的后序遍历序列"),e(d)])]),t("td",Lt,[e(n,{to:"/leetcode/problem/jz_offer_33_1.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",Rt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[At]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Ct]),_:1}),o(),Dt]),t("td",Mt,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const Pt=a(h,[["render",Ot],["__file","divide_conquer.html.vue"]]);export{Pt as default};
