import{_ as i,r as c,o as d,c as r,a as t,b as n,d as e,w as s,f as p,e as u}from"./app-mvY9N9Pc.js";const _={},h={id:"_56-合并区间",tabindex:"-1"},f=t("a",{class:"header-anchor",href:"#_56-合并区间","aria-hidden":"true"},"#",-1),k={href:"https://leetcode.com/problems/merge-intervals",target:"_blank",rel:"noopener noreferrer"},g=t("code",null,"数组",-1),m=t("code",null,"排序",-1),b={href:"https://leetcode.com/problems/merge-intervals",target:"_blank",rel:"noopener noreferrer"},y=t("code",null,"LeetCode",-1),x=u(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given an array of <code>intervals</code> where <code>intervals[i] = [starti, endi]</code>, merge all overlapping intervals, and return <em>an array of the non-overlapping intervals that cover all the intervals in the input</em>.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: intervals = [[1,3],[2,6],[8,10],[15,18]]</p><p>Output: [[1,6],[8,10],[15,18]]</p><p>Explanation: Since intervals [1,3] and [2,6] overlap, merge them into [1,6].</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: intervals = [[1,4],[4,5]]</p><p>Output: [[1,5]]</p><p>Explanation: Intervals [1,4] and [4,5] are considered overlapping.</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= intervals.length &lt;= 10^4</code></li><li><code>intervals[i].length == 2</code></li><li><code>0 &lt;= starti &lt;= endi &lt;= 10^4</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>以数组 <code>intervals</code> 表示若干个区间的集合，其中单个区间为 <code>intervals[i] = [starti, endi]</code> 。请你合并所有重叠的区间，并返回 <em>一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间</em> 。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ul><li>一个区间可以表示为 <code>[start, end]</code>，先按区间的 <code>start</code> 排序</li><li>对于几个相交区间合并后的结果区间 <code>x</code>，<code>x.start</code> 一定是这些相交区间中 <code>start</code> 最小的，<code>x.end</code> 一定是这些相交区间中 <code>end</code> 最大的</li><li>由于已经排了序，<code>x.start</code> 很好确定，<code>求 x.end</code> 也很容易，可以类比在数组中找最大值的过程。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">intervals</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">merge</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">intervals</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

	<span class="token comment">// 先按区间的 \`start\` 排序</span>
	intervals <span class="token operator">=</span> intervals<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> intervals<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">let</span> start <span class="token operator">=</span> intervals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
			end <span class="token operator">=</span> intervals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

		<span class="token comment">// 如果区间相交，求结果区间 [start, end]</span>
		<span class="token keyword">while</span> <span class="token punctuation">(</span>intervals<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">inRange</span><span class="token punctuation">(</span>intervals<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			start <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> intervals<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			end <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>end<span class="token punctuation">,</span> intervals<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			i<span class="token operator">++</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>start<span class="token punctuation">,</span> end<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 判断区间是否相交</span>
<span class="token keyword">var</span> <span class="token function-variable function">inRange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">interval<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> <span class="token punctuation">[</span>m<span class="token punctuation">,</span> n<span class="token punctuation">]</span> <span class="token operator">=</span> interval<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">&lt;</span> start <span class="token operator">&amp;&amp;</span> n <span class="token operator">&lt;</span> start<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">&gt;</span> end <span class="token operator">&amp;&amp;</span> n <span class="token operator">&gt;</span> end<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,15),v=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),w=t("td",{style:{"text-align":"center"}},"57",-1),E={style:{"text-align":"left"}},M={href:"https://leetcode.com/problems/insert-interval",target:"_blank",rel:"noopener noreferrer"},j={style:{"text-align":"center"}},I={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0057",target:"_blank",rel:"noopener noreferrer"},q={style:{"text-align":"left"}},C=t("code",null,"数组",-1),H={style:{"text-align":"left"}},L=t("td",{style:{"text-align":"center"}},"252",-1),N={style:{"text-align":"left"}},R={href:"https://leetcode.com/problems/meeting-rooms",target:"_blank",rel:"noopener noreferrer"},V=t("td",{style:{"text-align":"center"}},null,-1),B={style:{"text-align":"left"}},O=t("code",null,"数组",-1),S=t("code",null,"排序",-1),G={style:{"text-align":"left"}},T=t("td",{style:{"text-align":"center"}},"253",-1),z={style:{"text-align":"left"}},A={href:"https://leetcode.com/problems/meeting-rooms-ii",target:"_blank",rel:"noopener noreferrer"},D=t("td",{style:{"text-align":"center"}},null,-1),F={style:{"text-align":"left"}},J=t("code",null,"贪心",-1),K=t("code",null,"数组",-1),P=t("code",null,"双指针",-1),Q=t("code",null,"3+",-1),U={style:{"text-align":"left"}},W=t("td",{style:{"text-align":"center"}},"495",-1),X={style:{"text-align":"left"}},Y={href:"https://leetcode.com/problems/teemo-attacking",target:"_blank",rel:"noopener noreferrer"},Z=t("td",{style:{"text-align":"center"}},null,-1),$={style:{"text-align":"left"}},tt=t("code",null,"数组",-1),et=t("code",null,"模拟",-1),nt={style:{"text-align":"left"}},st=t("td",{style:{"text-align":"center"}},"616",-1),at={style:{"text-align":"left"}},ot={href:"https://leetcode.com/problems/add-bold-tag-in-string",target:"_blank",rel:"noopener noreferrer"},lt=t("td",{style:{"text-align":"center"}},null,-1),ct={style:{"text-align":"left"}},it=t("code",null,"字典树",-1),dt=t("code",null,"数组",-1),rt=t("code",null,"哈希表",-1),pt=t("code",null,"2+",-1),ut={style:{"text-align":"left"}},_t=t("td",{style:{"text-align":"center"}},"715",-1),ht={style:{"text-align":"left"}},ft={href:"https://leetcode.com/problems/range-module",target:"_blank",rel:"noopener noreferrer"},kt=t("td",{style:{"text-align":"center"}},null,-1),gt={style:{"text-align":"left"}},mt=t("code",null,"设计",-1),bt=t("code",null,"线段树",-1),yt=t("code",null,"有序集合",-1),xt={style:{"text-align":"left"}},vt=t("td",{style:{"text-align":"center"}},"759",-1),wt={style:{"text-align":"left"}},Et={href:"https://leetcode.com/problems/employee-free-time",target:"_blank",rel:"noopener noreferrer"},Mt=t("td",{style:{"text-align":"center"}},null,-1),jt={style:{"text-align":"left"}},It=t("code",null,"数组",-1),qt=t("code",null,"排序",-1),Ct=t("code",null,"堆（优先队列）",-1),Ht={style:{"text-align":"left"}},Lt=t("td",{style:{"text-align":"center"}},"763",-1),Nt={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/partition-labels",target:"_blank",rel:"noopener noreferrer"},Vt={style:{"text-align":"center"}},Bt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0763",target:"_blank",rel:"noopener noreferrer"},Ot={style:{"text-align":"left"}},St=t("code",null,"贪心",-1),Gt=t("code",null,"哈希表",-1),Tt=t("code",null,"双指针",-1),zt=t("code",null,"1+",-1),At={style:{"text-align":"left"}},Dt=t("td",{style:{"text-align":"center"}},"986",-1),Ft={style:{"text-align":"left"}},Jt={href:"https://leetcode.com/problems/interval-list-intersections",target:"_blank",rel:"noopener noreferrer"},Kt={style:{"text-align":"center"}},Pt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0986",target:"_blank",rel:"noopener noreferrer"},Qt={style:{"text-align":"left"}},Ut=t("code",null,"数组",-1),Wt=t("code",null,"双指针",-1),Xt={style:{"text-align":"left"}},Yt=t("td",{style:{"text-align":"center"}},"2158",-1),Zt={style:{"text-align":"left"}},$t={href:"https://leetcode.com/problems/amount-of-new-area-painted-each-day",target:"_blank",rel:"noopener noreferrer"},te=t("td",{style:{"text-align":"center"}},null,-1),ee={style:{"text-align":"left"}},ne=t("code",null,"线段树",-1),se=t("code",null,"数组",-1),ae=t("code",null,"有序集合",-1),oe={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"2213",-1),ce={style:{"text-align":"left"}},ie={href:"https://leetcode.com/problems/longest-substring-of-one-repeating-character",target:"_blank",rel:"noopener noreferrer"},de=t("td",{style:{"text-align":"center"}},null,-1),re={style:{"text-align":"left"}},pe=t("code",null,"线段树",-1),ue=t("code",null,"数组",-1),_e=t("code",null,"字符串",-1),he=t("code",null,"1+",-1),fe={style:{"text-align":"left"}},ke=t("td",{style:{"text-align":"center"}},"2276",-1),ge={style:{"text-align":"left"}},me={href:"https://leetcode.com/problems/count-integers-in-intervals",target:"_blank",rel:"noopener noreferrer"},be=t("td",{style:{"text-align":"center"}},null,-1),ye={style:{"text-align":"left"}},xe=t("code",null,"设计",-1),ve=t("code",null,"线段树",-1),we=t("code",null,"有序集合",-1),Ee={style:{"text-align":"left"}},Me=t("td",{style:{"text-align":"center"}},"2406",-1),je={style:{"text-align":"left"}},Ie={href:"https://leetcode.com/problems/divide-intervals-into-minimum-number-of-groups",target:"_blank",rel:"noopener noreferrer"},qe={style:{"text-align":"center"}},Ce={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/2406",target:"_blank",rel:"noopener noreferrer"},He={style:{"text-align":"left"}},Le=t("code",null,"贪心",-1),Ne=t("code",null,"数组",-1),Re=t("code",null,"双指针",-1),Ve=t("code",null,"3+",-1),Be={style:{"text-align":"left"}},Oe=t("td",{style:{"text-align":"center"}},"2446",-1),Se={style:{"text-align":"left"}},Ge={href:"https://leetcode.com/problems/determine-if-two-events-have-conflict",target:"_blank",rel:"noopener noreferrer"},Te=t("td",{style:{"text-align":"center"}},null,-1),ze={style:{"text-align":"left"}},Ae=t("code",null,"数组",-1),De=t("code",null,"字符串",-1),Fe={style:{"text-align":"left"}},Je=t("td",{style:{"text-align":"center"}},"2580",-1),Ke={style:{"text-align":"left"}},Pe={href:"https://leetcode.com/problems/count-ways-to-group-overlapping-ranges",target:"_blank",rel:"noopener noreferrer"},Qe=t("td",{style:{"text-align":"center"}},null,-1),Ue={style:{"text-align":"left"}},We=t("code",null,"数组",-1),Xe=t("code",null,"排序",-1),Ye={style:{"text-align":"left"}},Ze=t("td",{style:{"text-align":"center"}},"2848",-1),$e={style:{"text-align":"left"}},tn={href:"https://leetcode.com/problems/points-that-intersect-with-cars",target:"_blank",rel:"noopener noreferrer"},en=t("td",{style:{"text-align":"center"}},null,-1),nn={style:{"text-align":"left"}},sn=t("code",null,"数组",-1),an=t("code",null,"哈希表",-1),on=t("code",null,"前缀和",-1),ln={style:{"text-align":"left"}},cn=t("td",{style:{"text-align":"center"}},"3169",-1),dn={style:{"text-align":"left"}},rn={href:"https://leetcode.com/problems/count-days-without-meetings",target:"_blank",rel:"noopener noreferrer"},pn=t("td",{style:{"text-align":"center"}},null,-1),un={style:{"text-align":"left"}},_n=t("code",null,"数组",-1),hn=t("code",null,"排序",-1),fn={style:{"text-align":"left"}};function kn(gn,mn){const o=c("ExternalLinkIcon"),l=c("font"),a=c("RouterLink");return d(),r("div",null,[t("h1",h,[f,n(),t("a",k,[n("56. 合并区间"),e(o)])]),t("p",null,[n("🟠 "),e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1}),n("  🔖  "),e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[g]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/sorting.html"},{default:s(()=>[m]),_:1}),n("  🔗 "),t("a",b,[y,e(o)])]),x,p(" prettier-ignore "),t("table",null,[v,t("tbody",null,[t("tr",null,[w,t("td",E,[t("a",M,[n("插入区间"),e(o)])]),t("td",j,[t("a",I,[n("[✓]"),e(o)])]),t("td",q,[e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[C]),_:1})]),t("td",H,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[L,t("td",N,[t("a",R,[n("会议室"),e(o)])]),V,t("td",B,[e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[O]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/sorting.html"},{default:s(()=>[S]),_:1})]),t("td",G,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])]),t("tr",null,[T,t("td",z,[t("a",A,[n("会议室 II"),e(o)])]),D,t("td",F,[e(a,{to:"/leetcode/outline/tag/greedy.html"},{default:s(()=>[J]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[K]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/two-pointers.html"},{default:s(()=>[P]),_:1}),n(),Q]),t("td",U,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[W,t("td",X,[t("a",Y,[n("提莫攻击"),e(o)])]),Z,t("td",$,[e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[tt]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/simulation.html"},{default:s(()=>[et]),_:1})]),t("td",nt,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])]),t("tr",null,[st,t("td",at,[t("a",ot,[n("给字符串添加加粗标签"),e(o)])]),lt,t("td",ct,[e(a,{to:"/leetcode/outline/tag/trie.html"},{default:s(()=>[it]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[dt]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/hash-table.html"},{default:s(()=>[rt]),_:1}),n(),pt]),t("td",ut,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[_t,t("td",ht,[t("a",ft,[n("Range 模块"),e(o)])]),kt,t("td",gt,[e(a,{to:"/leetcode/outline/tag/design.html"},{default:s(()=>[mt]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/segment-tree.html"},{default:s(()=>[bt]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/ordered-set.html"},{default:s(()=>[yt]),_:1})]),t("td",xt,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])]),t("tr",null,[vt,t("td",wt,[t("a",Et,[n("员工空闲时间"),e(o)])]),Mt,t("td",jt,[e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[It]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/sorting.html"},{default:s(()=>[qt]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:s(()=>[Ct]),_:1})]),t("td",Ht,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])]),t("tr",null,[Lt,t("td",Nt,[t("a",Rt,[n("划分字母区间"),e(o)])]),t("td",Vt,[t("a",Bt,[n("[✓]"),e(o)])]),t("td",Ot,[e(a,{to:"/leetcode/outline/tag/greedy.html"},{default:s(()=>[St]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/hash-table.html"},{default:s(()=>[Gt]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/two-pointers.html"},{default:s(()=>[Tt]),_:1}),n(),zt]),t("td",At,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[Dt,t("td",Ft,[t("a",Jt,[n("区间列表的交集"),e(o)])]),t("td",Kt,[t("a",Pt,[n("[✓]"),e(o)])]),t("td",Qt,[e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[Ut]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/two-pointers.html"},{default:s(()=>[Wt]),_:1})]),t("td",Xt,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[Yt,t("td",Zt,[t("a",$t,[n("每天绘制新区域的数量"),e(o)])]),te,t("td",ee,[e(a,{to:"/leetcode/outline/tag/segment-tree.html"},{default:s(()=>[ne]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[se]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/ordered-set.html"},{default:s(()=>[ae]),_:1})]),t("td",oe,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])]),t("tr",null,[le,t("td",ce,[t("a",ie,[n("由单个字符重复的最长子字符串"),e(o)])]),de,t("td",re,[e(a,{to:"/leetcode/outline/tag/segment-tree.html"},{default:s(()=>[pe]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[ue]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/string.html"},{default:s(()=>[_e]),_:1}),n(),he]),t("td",fe,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])]),t("tr",null,[ke,t("td",ge,[t("a",me,[n("统计区间中的整数数目"),e(o)])]),be,t("td",ye,[e(a,{to:"/leetcode/outline/tag/design.html"},{default:s(()=>[xe]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/segment-tree.html"},{default:s(()=>[ve]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/ordered-set.html"},{default:s(()=>[we]),_:1})]),t("td",Ee,[e(l,{color:"#ff334b"},{default:s(()=>[n("Hard")]),_:1})])]),t("tr",null,[Me,t("td",je,[t("a",Ie,[n("将区间分为最少组数"),e(o)])]),t("td",qe,[t("a",Ce,[n("[✓]"),e(o)])]),t("td",He,[e(a,{to:"/leetcode/outline/tag/greedy.html"},{default:s(()=>[Le]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[Ne]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/two-pointers.html"},{default:s(()=>[Re]),_:1}),n(),Ve]),t("td",Be,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[Oe,t("td",Se,[t("a",Ge,[n("判断两个事件是否存在冲突"),e(o)])]),Te,t("td",ze,[e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[Ae]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/string.html"},{default:s(()=>[De]),_:1})]),t("td",Fe,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])]),t("tr",null,[Je,t("td",Ke,[t("a",Pe,[n("统计将重叠区间合并成组的方案数"),e(o)])]),Qe,t("td",Ue,[e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[We]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/sorting.html"},{default:s(()=>[Xe]),_:1})]),t("td",Ye,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])]),t("tr",null,[Ze,t("td",$e,[t("a",tn,[n("与车相交的点"),e(o)])]),en,t("td",nn,[e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[sn]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/hash-table.html"},{default:s(()=>[an]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:s(()=>[on]),_:1})]),t("td",ln,[e(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])]),t("tr",null,[cn,t("td",dn,[t("a",rn,[n("无需开会的工作日"),e(o)])]),pn,t("td",un,[e(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[_n]),_:1}),n(),e(a,{to:"/leetcode/outline/tag/sorting.html"},{default:s(()=>[hn]),_:1})]),t("td",fn,[e(l,{color:"#ffb800"},{default:s(()=>[n("Medium")]),_:1})])])])])])}const yn=i(_,[["render",kn],["__file","0056.html.vue"]]);export{yn as default};
