import{_ as c,r as i,o as _,c as a,a as t,d as e,w as l,b as o,f as u}from"./app-mvY9N9Pc.js";const h={},r=t("h1",{id:"滚动哈希",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#滚动哈希","aria-hidden":"true"},"#"),o(" 滚动哈希")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),w=t("code",null,"单调栈",-1),I=t("code",null,"队列",-1),H=t("code",null,"单调队列",-1),v=t("code",null,"堆（优先队列）",-1),M=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),N=t("code",null,"字符串匹配",-1),E=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),V=t("code",null,"二叉搜索树",-1),z=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),j=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),R=t("code",null,"强连通分量",-1),A=t("code",null,"欧拉回路",-1),D=t("code",null,"双连通分量",-1),T=t("code",null,"并查集",-1),F=t("code",null,"字典树",-1),G=t("code",null,"线段树",-1),J=t("code",null,"树状数组",-1),O=t("code",null,"后缀数组",-1),P=t("p",null,[t("strong",null,"算法")],-1),Q=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),it=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("span",{class:"blue"},"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),wt=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),vt=t("code",null,"概率与统计",-1),Mt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Nt=t("code",null,"数据库",-1),Et=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Vt=t("code",null,"脑筋急转弯",-1),zt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),jt=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Rt=t("td",{style:{"text-align":"center"}},"187",-1),At={style:{"text-align":"left"}},Dt={href:"https://leetcode.com/problems/repeated-dna-sequences",target:"_blank",rel:"noopener noreferrer"},Tt=t("td",{style:{"text-align":"center"}},null,-1),Ft={style:{"text-align":"left"}},Gt=t("code",null,"位运算",-1),Jt=t("code",null,"哈希表",-1),Ot=t("code",null,"字符串",-1),Pt=t("code",null,"3+",-1),Qt={style:{"text-align":"left"}},St=t("td",{style:{"text-align":"center"}},"214",-1),Ut={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",{style:{"text-align":"center"}},null,-1),Yt={style:{"text-align":"left"}},Zt=t("code",null,"字符串",-1),$t=t("code",null,"字符串匹配",-1),te=t("code",null,"哈希函数",-1),ee=t("code",null,"1+",-1),oe={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"718",-1),ne={style:{"text-align":"left"}},de={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},null,-1),ie={style:{"text-align":"left"}},ce=t("code",null,"数组",-1),_e=t("code",null,"二分查找",-1),ae=t("code",null,"动态规划",-1),ue=t("code",null,"3+",-1),he={style:{"text-align":"left"}},re=t("td",{style:{"text-align":"center"}},"1044",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/longest-duplicate-substring",target:"_blank",rel:"noopener noreferrer"},me=t("td",{style:{"text-align":"center"}},null,-1),ye={style:{"text-align":"left"}},xe=t("code",null,"字符串",-1),pe=t("code",null,"二分查找",-1),be=t("code",null,"后缀数组",-1),ke=t("code",null,"3+",-1),we={style:{"text-align":"left"}},Ie=t("td",{style:{"text-align":"center"}},"1062",-1),He={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},Me=t("td",{style:{"text-align":"center"}},null,-1),qe={style:{"text-align":"left"}},Ne=t("code",null,"字符串",-1),Ee=t("code",null,"二分查找",-1),Le=t("code",null,"动态规划",-1),Ve=t("code",null,"3+",-1),ze={style:{"text-align":"left"}},Be=t("td",{style:{"text-align":"center"}},"1147",-1),Ce={style:{"text-align":"left"}},je={href:"https://leetcode.com/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},Ke=t("td",{style:{"text-align":"center"}},null,-1),Re={style:{"text-align":"left"}},Ae=t("code",null,"贪心",-1),De=t("code",null,"双指针",-1),Te=t("code",null,"字符串",-1),Fe=t("code",null,"3+",-1),Ge={style:{"text-align":"left"}},Je=t("td",{style:{"text-align":"center"}},"1316",-1),Oe={style:{"text-align":"left"}},Pe={href:"https://leetcode.com/problems/distinct-echo-substrings",target:"_blank",rel:"noopener noreferrer"},Qe=t("td",{style:{"text-align":"center"}},null,-1),Se={style:{"text-align":"left"}},Ue=t("code",null,"字典树",-1),We=t("code",null,"字符串",-1),Xe=t("code",null,"哈希函数",-1),Ye=t("code",null,"1+",-1),Ze={style:{"text-align":"left"}},$e=t("td",{style:{"text-align":"center"}},"1392",-1),to={style:{"text-align":"left"}},eo={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},oo=t("td",{style:{"text-align":"center"}},null,-1),lo={style:{"text-align":"left"}},no=t("code",null,"字符串",-1),so=t("code",null,"字符串匹配",-1),io=t("code",null,"哈希函数",-1),co=t("code",null,"1+",-1),_o={style:{"text-align":"left"}},ao=t("td",{style:{"text-align":"center"}},"1461",-1),uo={style:{"text-align":"left"}},ho={href:"https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k",target:"_blank",rel:"noopener noreferrer"},ro=t("td",{style:{"text-align":"center"}},null,-1),fo={style:{"text-align":"left"}},go=t("code",null,"位运算",-1),mo=t("code",null,"哈希表",-1),yo=t("code",null,"字符串",-1),xo=t("code",null,"2+",-1),po={style:{"text-align":"left"}},bo=t("td",{style:{"text-align":"center"}},"1554",-1),ko={style:{"text-align":"left"}},wo={href:"https://leetcode.com/problems/strings-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},Io=t("td",{style:{"text-align":"center"}},null,-1),Ho={style:{"text-align":"left"}},vo=t("code",null,"哈希表",-1),Mo=t("code",null,"字符串",-1),qo=t("code",null,"哈希函数",-1),No=t("code",null,"1+",-1),Eo={style:{"text-align":"left"}},Lo=t("td",{style:{"text-align":"center"}},"1698",-1),Vo={style:{"text-align":"left"}},zo={href:"https://leetcode.com/problems/number-of-distinct-substrings-in-a-string",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},null,-1),Co={style:{"text-align":"left"}},jo=t("code",null,"字典树",-1),Ko=t("code",null,"字符串",-1),Ro=t("code",null,"后缀数组",-1),Ao=t("code",null,"2+",-1),Do={style:{"text-align":"left"}},To=t("td",{style:{"text-align":"center"}},"1923",-1),Fo={style:{"text-align":"left"}},Go={href:"https://leetcode.com/problems/longest-common-subpath",target:"_blank",rel:"noopener noreferrer"},Jo=t("td",{style:{"text-align":"center"}},null,-1),Oo={style:{"text-align":"left"}},Po=t("code",null,"数组",-1),Qo=t("code",null,"二分查找",-1),So=t("code",null,"后缀数组",-1),Uo=t("code",null,"2+",-1),Wo={style:{"text-align":"left"}},Xo=t("td",{style:{"text-align":"center"}},"1960",-1),Yo={style:{"text-align":"left"}},Zo={href:"https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},$o=t("td",{style:{"text-align":"center"}},null,-1),tl={style:{"text-align":"left"}},el=t("code",null,"字符串",-1),ol=t("code",null,"哈希函数",-1),ll=t("code",null,"滚动哈希",-1),nl={style:{"text-align":"left"}},dl=t("td",{style:{"text-align":"center"}},"2156",-1),sl={style:{"text-align":"left"}},il={href:"https://leetcode.com/problems/find-substring-with-given-hash-value",target:"_blank",rel:"noopener noreferrer"},cl=t("td",{style:{"text-align":"center"}},null,-1),_l={style:{"text-align":"left"}},al=t("code",null,"字符串",-1),ul=t("code",null,"滑动窗口",-1),hl=t("code",null,"哈希函数",-1),rl=t("code",null,"1+",-1),fl={style:{"text-align":"left"}},gl=t("td",{style:{"text-align":"center"}},"2168",-1),ml={style:{"text-align":"left"}},yl={href:"https://leetcode.com/problems/unique-substrings-with-equal-digit-frequency",target:"_blank",rel:"noopener noreferrer"},xl=t("td",{style:{"text-align":"center"}},null,-1),pl={style:{"text-align":"left"}},bl=t("code",null,"哈希表",-1),kl=t("code",null,"字符串",-1),wl=t("code",null,"计数",-1),Il=t("code",null,"2+",-1),Hl={style:{"text-align":"left"}},vl=t("td",{style:{"text-align":"center"}},"2223",-1),Ml={style:{"text-align":"left"}},ql={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},Nl=t("td",{style:{"text-align":"center"}},null,-1),El={style:{"text-align":"left"}},Ll=t("code",null,"字符串",-1),Vl=t("code",null,"二分查找",-1),zl=t("code",null,"字符串匹配",-1),Bl=t("code",null,"3+",-1),Cl={style:{"text-align":"left"}},jl=t("td",{style:{"text-align":"center"}},"2261",-1),Kl={style:{"text-align":"left"}},Rl={href:"https://leetcode.com/problems/k-divisible-elements-subarrays",target:"_blank",rel:"noopener noreferrer"},Al={style:{"text-align":"center"}},Dl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/2261",target:"_blank",rel:"noopener noreferrer"},Tl={style:{"text-align":"left"}},Fl=t("code",null,"字典树",-1),Gl=t("code",null,"数组",-1),Jl=t("code",null,"哈希表",-1),Ol=t("code",null,"3+",-1),Pl={style:{"text-align":"left"}},Ql=t("td",{style:{"text-align":"center"}},"2430",-1),Sl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},Wl=t("td",{style:{"text-align":"center"}},null,-1),Xl={style:{"text-align":"left"}},Yl=t("code",null,"字符串",-1),Zl=t("code",null,"动态规划",-1),$l=t("code",null,"字符串匹配",-1),tn=t("code",null,"2+",-1),en={style:{"text-align":"left"}},on=t("td",{style:{"text-align":"center"}},"3006",-1),ln={style:{"text-align":"left"}},nn={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},dn=t("td",{style:{"text-align":"center"}},null,-1),sn={style:{"text-align":"left"}},cn=t("code",null,"双指针",-1),_n=t("code",null,"字符串",-1),an=t("code",null,"二分查找",-1),un=t("code",null,"3+",-1),hn={style:{"text-align":"left"}},rn=t("td",{style:{"text-align":"center"}},"3008",-1),fn={style:{"text-align":"left"}},gn={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},mn=t("td",{style:{"text-align":"center"}},null,-1),yn={style:{"text-align":"left"}},xn=t("code",null,"双指针",-1),pn=t("code",null,"字符串",-1),bn=t("code",null,"二分查找",-1),kn=t("code",null,"3+",-1),wn={style:{"text-align":"left"}},In=t("td",{style:{"text-align":"center"}},"3023",-1),Hn={style:{"text-align":"left"}},vn={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Mn=t("td",{style:{"text-align":"center"}},null,-1),qn={style:{"text-align":"left"}},Nn=t("code",null,"数组",-1),En=t("code",null,"字符串匹配",-1),Ln=t("code",null,"滑动窗口",-1),Vn=t("code",null,"2+",-1),zn={style:{"text-align":"left"}},Bn=t("td",{style:{"text-align":"center"}},"3029",-1),Cn={style:{"text-align":"left"}},jn={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},Kn=t("td",{style:{"text-align":"center"}},null,-1),Rn={style:{"text-align":"left"}},An=t("code",null,"字符串",-1),Dn=t("code",null,"字符串匹配",-1),Tn=t("code",null,"哈希函数",-1),Fn=t("code",null,"1+",-1),Gn={style:{"text-align":"left"}},Jn=t("td",{style:{"text-align":"center"}},"3031",-1),On={style:{"text-align":"left"}},Pn={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},Qn=t("td",{style:{"text-align":"center"}},null,-1),Sn={style:{"text-align":"left"}},Un=t("code",null,"字符串",-1),Wn=t("code",null,"字符串匹配",-1),Xn=t("code",null,"哈希函数",-1),Yn=t("code",null,"1+",-1),Zn={style:{"text-align":"left"}},$n=t("td",{style:{"text-align":"center"}},"3034",-1),td={style:{"text-align":"left"}},ed={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},od=t("td",{style:{"text-align":"center"}},null,-1),ld={style:{"text-align":"left"}},nd=t("code",null,"数组",-1),dd=t("code",null,"字符串匹配",-1),sd=t("code",null,"哈希函数",-1),id=t("code",null,"1+",-1),cd={style:{"text-align":"left"}},_d=t("td",{style:{"text-align":"center"}},"3036",-1),ad={style:{"text-align":"left"}},ud={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},hd=t("td",{style:{"text-align":"center"}},null,-1),rd={style:{"text-align":"left"}},fd=t("code",null,"数组",-1),gd=t("code",null,"字符串匹配",-1),md=t("code",null,"哈希函数",-1),yd=t("code",null,"1+",-1),xd={style:{"text-align":"left"}},pd=t("td",{style:{"text-align":"center"}},"3037",-1),bd={style:{"text-align":"left"}},kd={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},wd=t("td",{style:{"text-align":"center"}},null,-1),Id={style:{"text-align":"left"}},Hd=t("code",null,"数组",-1),vd=t("code",null,"字符串匹配",-1),Md=t("code",null,"滑动窗口",-1),qd=t("code",null,"2+",-1),Nd={style:{"text-align":"left"}},Ed=t("td",{style:{"text-align":"center"}},"3042",-1),Ld={style:{"text-align":"left"}},Vd={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},zd=t("td",{style:{"text-align":"center"}},null,-1),Bd={style:{"text-align":"left"}},Cd=t("code",null,"字典树",-1),jd=t("code",null,"数组",-1),Kd=t("code",null,"字符串",-1),Rd=t("code",null,"3+",-1),Ad={style:{"text-align":"left"}},Dd=t("td",{style:{"text-align":"center"}},"3045",-1),Td={style:{"text-align":"left"}},Fd={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},Gd=t("td",{style:{"text-align":"center"}},null,-1),Jd={style:{"text-align":"left"}},Od=t("code",null,"字典树",-1),Pd=t("code",null,"数组",-1),Qd=t("code",null,"字符串",-1),Sd=t("code",null,"3+",-1),Ud={style:{"text-align":"left"}},Wd=t("td",{style:{"text-align":"center"}},"3291",-1),Xd={style:{"text-align":"left"}},Yd={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Zd=t("td",{style:{"text-align":"center"}},null,-1),$d={style:{"text-align":"left"}},ts=t("code",null,"字典树",-1),es=t("code",null,"线段树",-1),os=t("code",null,"数组",-1),ls=t("code",null,"6+",-1),ns={style:{"text-align":"left"}},ds=t("td",{style:{"text-align":"center"}},"3292",-1),ss={style:{"text-align":"left"}},is={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},cs=t("td",{style:{"text-align":"center"}},null,-1),_s={style:{"text-align":"left"}},as=t("code",null,"线段树",-1),us=t("code",null,"数组",-1),hs=t("code",null,"字符串",-1),rs=t("code",null,"5+",-1),fs={style:{"text-align":"left"}},gs=t("td",{style:{"text-align":"center"}},"面试题 17.13",-1),ms={style:{"text-align":"left"}},ys={href:"https://leetcode.cn/problems/re-space-lcci",target:"_blank",rel:"noopener noreferrer"},xs=t("td",{style:{"text-align":"center"}},null,-1),ps={style:{"text-align":"left"}},bs=t("code",null,"字典树",-1),ks=t("code",null,"数组",-1),ws=t("code",null,"哈希表",-1),Is=t("code",null,"4+",-1),Hs={style:{"text-align":"left"}};function vs(Ms,qs){const n=i("RouterLink"),d=i("ExternalLinkIcon"),s=i("font");return _(),a("div",null,[r,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[O]),_:1})]),P,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),gt,o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[Bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Ct]),_:1})])]),jt,u(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Rt,t("td",At,[t("a",Dt,[o("重复的DNA序列"),e(d)])]),Tt,t("td",Ft,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ot]),_:1}),o(),Pt]),t("td",Qt,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[St,t("td",Ut,[t("a",Wt,[o("最短回文串"),e(d)])]),Xt,t("td",Yt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[te]),_:1}),o(),ee]),t("td",oe,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[le,t("td",ne,[t("a",de,[o("最长重复子数组"),e(d)])]),se,t("td",ie,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ce]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[_e]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ae]),_:1}),o(),ue]),t("td",he,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[re,t("td",fe,[t("a",ge,[o("最长重复子串"),e(d)])]),me,t("td",ye,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[xe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[pe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[be]),_:1}),o(),ke]),t("td",we,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ie,t("td",He,[t("a",ve,[o("最长重复子串"),e(d)])]),Me,t("td",qe,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ne]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Ee]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Le]),_:1}),o(),Ve]),t("td",ze,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Be,t("td",Ce,[t("a",je,[o("段式回文"),e(d)])]),Ke,t("td",Re,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Ae]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[De]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Te]),_:1}),o(),Fe]),t("td",Ge,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Je,t("td",Oe,[t("a",Pe,[o("不同的循环子字符串"),e(d)])]),Qe,t("td",Se,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[Ue]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[We]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[Xe]),_:1}),o(),Ye]),t("td",Ze,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$e,t("td",to,[t("a",eo,[o("最长快乐前缀"),e(d)])]),oo,t("td",lo,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[no]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[so]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[io]),_:1}),o(),co]),t("td",_o,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ao,t("td",uo,[t("a",ho,[o("检查一个字符串是否包含所有长度为 K 的二进制子串"),e(d)])]),ro,t("td",fo,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[go]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[mo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[yo]),_:1}),o(),xo]),t("td",po,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[bo,t("td",ko,[t("a",wo,[o("只有一个不同字符的字符串"),e(d)])]),Io,t("td",Ho,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[vo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Mo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[qo]),_:1}),o(),No]),t("td",Eo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Lo,t("td",Vo,[t("a",zo,[o("字符串的不同子字符串个数"),e(d)])]),Bo,t("td",Co,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[jo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ko]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[Ro]),_:1}),o(),Ao]),t("td",Do,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[To,t("td",Fo,[t("a",Go,[o("最长公共子路径"),e(d)])]),Jo,t("td",Oo,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Po]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Qo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[So]),_:1}),o(),Uo]),t("td",Wo,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Xo,t("td",Yo,[t("a",Zo,[o("两个回文子字符串长度的最大乘积"),e(d)])]),$o,t("td",tl,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[el]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ol]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[ll]),_:1})]),t("td",nl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[dl,t("td",sl,[t("a",il,[o("查找给定哈希值的子串"),e(d)])]),cl,t("td",_l,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[al]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ul]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[hl]),_:1}),o(),rl]),t("td",fl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gl,t("td",ml,[t("a",yl,[o("每个数字的频率都相同的独特子字符串的数量"),e(d)])]),xl,t("td",pl,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[bl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[kl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[wl]),_:1}),o(),Il]),t("td",Hl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[vl,t("td",Ml,[t("a",ql,[o("构造字符串的总得分和"),e(d)])]),Nl,t("td",El,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ll]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Vl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[zl]),_:1}),o(),Bl]),t("td",Cl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[jl,t("td",Kl,[t("a",Rl,[o("含最多 K 个可整除元素的子数组"),e(d)])]),t("td",Al,[t("a",Dl,[o("[✓]"),e(d)])]),t("td",Tl,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[Fl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Gl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Jl]),_:1}),o(),Ol]),t("td",Pl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ql,t("td",Sl,[t("a",Ul,[o("对字母串可执行的最大删除数"),e(d)])]),Wl,t("td",Xl,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Yl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Zl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[$l]),_:1}),o(),tn]),t("td",en,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[on,t("td",ln,[t("a",nn,[o("找出数组中的美丽下标 I"),e(d)])]),dn,t("td",sn,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[cn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[_n]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[an]),_:1}),o(),un]),t("td",hn,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[rn,t("td",fn,[t("a",gn,[o("找出数组中的美丽下标 II"),e(d)])]),mn,t("td",yn,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[xn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[pn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[bn]),_:1}),o(),kn]),t("td",wn,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[In,t("td",Hn,[t("a",vn,[o("在无限流中寻找模式 I"),e(d)])]),Mn,t("td",qn,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Nn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[En]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[Ln]),_:1}),o(),Vn]),t("td",zn,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Bn,t("td",Cn,[t("a",jn,[o("将单词恢复初始状态所需的最短时间 I"),e(d)])]),Kn,t("td",Rn,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[An]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[Dn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[Tn]),_:1}),o(),Fn]),t("td",Gn,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Jn,t("td",On,[t("a",Pn,[o("将单词恢复初始状态所需的最短时间 II"),e(d)])]),Qn,t("td",Sn,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Un]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[Wn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[Xn]),_:1}),o(),Yn]),t("td",Zn,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$n,t("td",td,[t("a",ed,[o("匹配模式数组的子数组数目 I"),e(d)])]),od,t("td",ld,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[nd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[dd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[sd]),_:1}),o(),id]),t("td",cd,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_d,t("td",ad,[t("a",ud,[o("匹配模式数组的子数组数目 II"),e(d)])]),hd,t("td",rd,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[fd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[gd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[md]),_:1}),o(),yd]),t("td",xd,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[pd,t("td",bd,[t("a",kd,[o("在无限流中寻找模式 II"),e(d)])]),wd,t("td",Id,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Hd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[vd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[Md]),_:1}),o(),qd]),t("td",Nd,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ed,t("td",Ld,[t("a",Vd,[o("统计前后缀下标对 I"),e(d)])]),zd,t("td",Bd,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[Cd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[jd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Kd]),_:1}),o(),Rd]),t("td",Ad,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Dd,t("td",Td,[t("a",Fd,[o("统计前后缀下标对 II"),e(d)])]),Gd,t("td",Jd,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[Od]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Pd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Qd]),_:1}),o(),Sd]),t("td",Ud,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Wd,t("td",Xd,[t("a",Yd,[o("形成目标字符串需要的最少字符串数 I"),e(d)])]),Zd,t("td",$d,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[ts]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[es]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[os]),_:1}),o(),ls]),t("td",ns,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ds,t("td",ss,[t("a",is,[o("形成目标字符串需要的最少字符串数 II"),e(d)])]),cs,t("td",_s,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[as]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[us]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[hs]),_:1}),o(),rs]),t("td",fs,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gs,t("td",ms,[t("a",ys,[o("恢复空格"),e(d)])]),xs,t("td",ps,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[bs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ks]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ws]),_:1}),o(),Is]),t("td",Hs,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const Es=c(h,[["render",vs],["__file","rolling-hash.html.vue"]]);export{Es as default};
