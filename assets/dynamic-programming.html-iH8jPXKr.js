import{_ as i,r as _,o as c,c as a,a as t,d as e,w as o,b as l,f as r}from"./app-qrCIIj1V.js";const h={},u=t("h1",{id:"动态规划",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#动态规划","aria-hidden":"true"},"#"),l(" 动态规划")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),j=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),H=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),v=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),C=t("code",null,"二叉树",-1),O=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),E=t("code",null,"图",-1),P=t("code",null,"有序集合",-1),K=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),N=t("code",null,"强连通分量",-1),D=t("code",null,"欧拉回路",-1),B=t("code",null,"双连通分量",-1),Y=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),J=t("code",null,"线段树",-1),R=t("code",null,"树状数组",-1),S=t("code",null,"后缀数组",-1),U=t("p",null,[t("strong",null,"算法")],-1),W=t("code",null,"枚举",-1),X=t("code",null,"递归",-1),F=t("code",null,"分治",-1),G=t("code",null,"回溯",-1),T=t("code",null,"贪心",-1),Q=t("span",{class:"blue"},"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),ct=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),jt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),vt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Ct=t("code",null,"数据流",-1),Ot=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Et=t("code",null,"迭代器",-1),Pt=t("code",null,"多线程",-1),Kt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Nt=t("td",{style:{"text-align":"center"}},"5",-1),Dt={style:{"text-align":"left"}},Bt={href:"https://leetcode.com/problems/longest-palindromic-substring",target:"_blank",rel:"noopener noreferrer"},Yt={style:{"text-align":"center"}},At={style:{"text-align":"left"}},Jt=t("code",null,"双指针",-1),Rt=t("code",null,"字符串",-1),St=t("code",null,"动态规划",-1),Ut={style:{"text-align":"left"}},Wt=t("td",{style:{"text-align":"center"}},"10",-1),Xt={style:{"text-align":"left"}},Ft={href:"https://leetcode.com/problems/regular-expression-matching",target:"_blank",rel:"noopener noreferrer"},Gt={style:{"text-align":"center"}},Tt={style:{"text-align":"left"}},Qt=t("code",null,"递归",-1),Zt=t("code",null,"字符串",-1),$t=t("code",null,"动态规划",-1),te={style:{"text-align":"left"}},ee=t("td",{style:{"text-align":"center"}},"22",-1),le={style:{"text-align":"left"}},oe={href:"https://leetcode.com/problems/generate-parentheses",target:"_blank",rel:"noopener noreferrer"},ne={style:{"text-align":"center"}},se={style:{"text-align":"left"}},de=t("code",null,"字符串",-1),_e=t("code",null,"动态规划",-1),ie=t("code",null,"回溯",-1),ce={style:{"text-align":"left"}},ae=t("td",{style:{"text-align":"center"}},"32",-1),re={style:{"text-align":"left"}},he={href:"https://leetcode.com/problems/longest-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},ue={style:{"text-align":"center"}},fe={style:{"text-align":"left"}},ge=t("code",null,"栈",-1),me=t("code",null,"字符串",-1),ye=t("code",null,"动态规划",-1),xe={style:{"text-align":"left"}},pe=t("td",{style:{"text-align":"center"}},"42",-1),be={style:{"text-align":"left"}},je={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},ke={style:{"text-align":"center"}},Me={style:{"text-align":"left"}},He=t("code",null,"栈",-1),Ie=t("code",null,"数组",-1),we=t("code",null,"双指针",-1),ve=t("code",null,"2+",-1),qe={style:{"text-align":"left"}},ze=t("td",{style:{"text-align":"center"}},"44",-1),Ce={style:{"text-align":"left"}},Oe={href:"https://leetcode.com/problems/wildcard-matching",target:"_blank",rel:"noopener noreferrer"},Le={style:{"text-align":"center"}},Ee={style:{"text-align":"left"}},Pe=t("code",null,"贪心",-1),Ke=t("code",null,"递归",-1),Ve=t("code",null,"字符串",-1),Ne=t("code",null,"1+",-1),De={style:{"text-align":"left"}},Be=t("td",{style:{"text-align":"center"}},"45",-1),Ye={style:{"text-align":"left"}},Ae={href:"https://leetcode.com/problems/jump-game-ii",target:"_blank",rel:"noopener noreferrer"},Je={style:{"text-align":"center"}},Re={style:{"text-align":"left"}},Se=t("code",null,"贪心",-1),Ue=t("code",null,"数组",-1),We=t("code",null,"动态规划",-1),Xe={style:{"text-align":"left"}},Fe=t("td",{style:{"text-align":"center"}},"53",-1),Ge={style:{"text-align":"left"}},Te={href:"https://leetcode.com/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},Qe={style:{"text-align":"center"}},Ze={style:{"text-align":"left"}},$e=t("code",null,"数组",-1),tl=t("code",null,"分治",-1),el=t("code",null,"动态规划",-1),ll={style:{"text-align":"left"}},ol=t("td",{style:{"text-align":"center"}},"55",-1),nl={style:{"text-align":"left"}},sl={href:"https://leetcode.com/problems/jump-game",target:"_blank",rel:"noopener noreferrer"},dl={style:{"text-align":"center"}},_l={style:{"text-align":"left"}},il=t("code",null,"贪心",-1),cl=t("code",null,"数组",-1),al=t("code",null,"动态规划",-1),rl={style:{"text-align":"left"}},hl=t("td",{style:{"text-align":"center"}},"62",-1),ul={style:{"text-align":"left"}},fl={href:"https://leetcode.com/problems/unique-paths",target:"_blank",rel:"noopener noreferrer"},gl={style:{"text-align":"center"}},ml={style:{"text-align":"left"}},yl=t("code",null,"数学",-1),xl=t("code",null,"动态规划",-1),pl=t("code",null,"组合数学",-1),bl={style:{"text-align":"left"}},jl=t("td",{style:{"text-align":"center"}},"63",-1),kl={style:{"text-align":"left"}},Ml={href:"https://leetcode.com/problems/unique-paths-ii",target:"_blank",rel:"noopener noreferrer"},Hl={style:{"text-align":"center"}},Il={style:{"text-align":"left"}},wl=t("code",null,"数组",-1),vl=t("code",null,"动态规划",-1),ql=t("code",null,"矩阵",-1),zl={style:{"text-align":"left"}},Cl=t("td",{style:{"text-align":"center"}},"64",-1),Ol={style:{"text-align":"left"}},Ll={href:"https://leetcode.com/problems/minimum-path-sum",target:"_blank",rel:"noopener noreferrer"},El={style:{"text-align":"center"}},Pl={style:{"text-align":"left"}},Kl=t("code",null,"数组",-1),Vl=t("code",null,"动态规划",-1),Nl=t("code",null,"矩阵",-1),Dl={style:{"text-align":"left"}},Bl=t("td",{style:{"text-align":"center"}},"70",-1),Yl={style:{"text-align":"left"}},Al={href:"https://leetcode.com/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},Jl={style:{"text-align":"center"}},Rl={style:{"text-align":"left"}},Sl=t("code",null,"记忆化搜索",-1),Ul=t("code",null,"数学",-1),Wl=t("code",null,"动态规划",-1),Xl={style:{"text-align":"left"}},Fl=t("td",{style:{"text-align":"center"}},"72",-1),Gl={style:{"text-align":"left"}},Tl={href:"https://leetcode.com/problems/edit-distance",target:"_blank",rel:"noopener noreferrer"},Ql={style:{"text-align":"center"}},Zl={style:{"text-align":"left"}},$l=t("code",null,"字符串",-1),to=t("code",null,"动态规划",-1),eo={style:{"text-align":"left"}},lo=t("td",{style:{"text-align":"center"}},"85",-1),oo={style:{"text-align":"left"}},no={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},so={style:{"text-align":"center"}},_o={style:{"text-align":"left"}},io=t("code",null,"栈",-1),co=t("code",null,"数组",-1),ao=t("code",null,"动态规划",-1),ro=t("code",null,"2+",-1),ho={style:{"text-align":"left"}},uo=t("td",{style:{"text-align":"center"}},"87",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/scramble-string",target:"_blank",rel:"noopener noreferrer"},mo=t("td",{style:{"text-align":"center"}},null,-1),yo={style:{"text-align":"left"}},xo=t("code",null,"字符串",-1),po=t("code",null,"动态规划",-1),bo={style:{"text-align":"left"}},jo=t("td",{style:{"text-align":"center"}},"91",-1),ko={style:{"text-align":"left"}},Mo={href:"https://leetcode.com/problems/decode-ways",target:"_blank",rel:"noopener noreferrer"},Ho=t("td",{style:{"text-align":"center"}},null,-1),Io={style:{"text-align":"left"}},wo=t("code",null,"字符串",-1),vo=t("code",null,"动态规划",-1),qo={style:{"text-align":"left"}},zo=t("td",{style:{"text-align":"center"}},"95",-1),Co={style:{"text-align":"left"}},Oo={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},Lo={style:{"text-align":"center"}},Eo={style:{"text-align":"left"}},Po=t("code",null,"树",-1),Ko=t("code",null,"二叉搜索树",-1),Vo=t("code",null,"动态规划",-1),No=t("code",null,"2+",-1),Do={style:{"text-align":"left"}},Bo=t("td",{style:{"text-align":"center"}},"96",-1),Yo={style:{"text-align":"left"}},Ao={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},Jo={style:{"text-align":"center"}},Ro={style:{"text-align":"left"}},So=t("code",null,"树",-1),Uo=t("code",null,"二叉搜索树",-1),Wo=t("code",null,"数学",-1),Xo=t("code",null,"2+",-1),Fo={style:{"text-align":"left"}},Go=t("td",{style:{"text-align":"center"}},"97",-1),To={style:{"text-align":"left"}},Qo={href:"https://leetcode.com/problems/interleaving-string",target:"_blank",rel:"noopener noreferrer"},Zo={style:{"text-align":"center"}},$o={style:{"text-align":"left"}},tn=t("code",null,"字符串",-1),en=t("code",null,"动态规划",-1),ln={style:{"text-align":"left"}},on=t("td",{style:{"text-align":"center"}},"115",-1),nn={style:{"text-align":"left"}},sn={href:"https://leetcode.com/problems/distinct-subsequences",target:"_blank",rel:"noopener noreferrer"},dn=t("td",{style:{"text-align":"center"}},null,-1),_n={style:{"text-align":"left"}},cn=t("code",null,"字符串",-1),an=t("code",null,"动态规划",-1),rn={style:{"text-align":"left"}},hn=t("td",{style:{"text-align":"center"}},"118",-1),un={style:{"text-align":"left"}},fn={href:"https://leetcode.com/problems/pascals-triangle",target:"_blank",rel:"noopener noreferrer"},gn={style:{"text-align":"center"}},mn={style:{"text-align":"left"}},yn=t("code",null,"数组",-1),xn=t("code",null,"动态规划",-1),pn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"119",-1),jn={style:{"text-align":"left"}},kn={href:"https://leetcode.com/problems/pascals-triangle-ii",target:"_blank",rel:"noopener noreferrer"},Mn=t("td",{style:{"text-align":"center"}},null,-1),Hn={style:{"text-align":"left"}},In=t("code",null,"数组",-1),wn=t("code",null,"动态规划",-1),vn={style:{"text-align":"left"}},qn=t("td",{style:{"text-align":"center"}},"120",-1),zn={style:{"text-align":"left"}},Cn={href:"https://leetcode.com/problems/triangle",target:"_blank",rel:"noopener noreferrer"},On={style:{"text-align":"center"}},Ln={style:{"text-align":"left"}},En=t("code",null,"数组",-1),Pn=t("code",null,"动态规划",-1),Kn={style:{"text-align":"left"}},Vn=t("td",{style:{"text-align":"center"}},"121",-1),Nn={style:{"text-align":"left"}},Dn={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock",target:"_blank",rel:"noopener noreferrer"},Bn={style:{"text-align":"center"}},Yn={style:{"text-align":"left"}},An=t("code",null,"数组",-1),Jn=t("code",null,"动态规划",-1),Rn={style:{"text-align":"left"}},Sn=t("td",{style:{"text-align":"center"}},"122",-1),Un={style:{"text-align":"left"}},Wn={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",target:"_blank",rel:"noopener noreferrer"},Xn={style:{"text-align":"center"}},Fn={style:{"text-align":"left"}},Gn=t("code",null,"贪心",-1),Tn=t("code",null,"数组",-1),Qn=t("code",null,"动态规划",-1),Zn={style:{"text-align":"left"}},$n=t("td",{style:{"text-align":"center"}},"123",-1),ts={style:{"text-align":"left"}},es={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",target:"_blank",rel:"noopener noreferrer"},ls={style:{"text-align":"center"}},os={style:{"text-align":"left"}},ns=t("code",null,"数组",-1),ss=t("code",null,"动态规划",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"124",-1),is={style:{"text-align":"left"}},cs={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},as={style:{"text-align":"center"}},rs={style:{"text-align":"left"}},hs=t("code",null,"树",-1),us=t("code",null,"深度优先搜索",-1),fs=t("code",null,"动态规划",-1),gs=t("code",null,"1+",-1),ms={style:{"text-align":"left"}},ys=t("td",{style:{"text-align":"center"}},"131",-1),xs={style:{"text-align":"left"}},ps={href:"https://leetcode.com/problems/palindrome-partitioning",target:"_blank",rel:"noopener noreferrer"},bs={style:{"text-align":"center"}},js={style:{"text-align":"left"}},ks=t("code",null,"字符串",-1),Ms=t("code",null,"动态规划",-1),Hs=t("code",null,"回溯",-1),Is={style:{"text-align":"left"}},ws=t("td",{style:{"text-align":"center"}},"132",-1),vs={style:{"text-align":"left"}},qs={href:"https://leetcode.com/problems/palindrome-partitioning-ii",target:"_blank",rel:"noopener noreferrer"},zs=t("td",{style:{"text-align":"center"}},null,-1),Cs={style:{"text-align":"left"}},Os=t("code",null,"字符串",-1),Ls=t("code",null,"动态规划",-1),Es={style:{"text-align":"left"}},Ps=t("td",{style:{"text-align":"center"}},"139",-1),Ks={style:{"text-align":"left"}},Vs={href:"https://leetcode.com/problems/word-break",target:"_blank",rel:"noopener noreferrer"},Ns={style:{"text-align":"center"}},Ds={style:{"text-align":"left"}},Bs=t("code",null,"字典树",-1),Ys=t("code",null,"记忆化搜索",-1),As=t("code",null,"数组",-1),Js=t("code",null,"3+",-1),Rs={style:{"text-align":"left"}},Ss=t("td",{style:{"text-align":"center"}},"140",-1),Us={style:{"text-align":"left"}},Ws={href:"https://leetcode.com/problems/word-break-ii",target:"_blank",rel:"noopener noreferrer"},Xs=t("td",{style:{"text-align":"center"}},null,-1),Fs={style:{"text-align":"left"}},Gs=t("code",null,"字典树",-1),Ts=t("code",null,"记忆化搜索",-1),Qs=t("code",null,"数组",-1),Zs=t("code",null,"4+",-1),$s={style:{"text-align":"left"}},td=t("td",{style:{"text-align":"center"}},"152",-1),ed={style:{"text-align":"left"}},ld={href:"https://leetcode.com/problems/maximum-product-subarray",target:"_blank",rel:"noopener noreferrer"},od={style:{"text-align":"center"}},nd={style:{"text-align":"left"}},sd=t("code",null,"数组",-1),dd=t("code",null,"动态规划",-1),_d={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"174",-1),cd={style:{"text-align":"left"}},ad={href:"https://leetcode.com/problems/dungeon-game",target:"_blank",rel:"noopener noreferrer"},rd={style:{"text-align":"center"}},hd={style:{"text-align":"left"}},ud=t("code",null,"数组",-1),fd=t("code",null,"动态规划",-1),gd=t("code",null,"矩阵",-1),md={style:{"text-align":"left"}},yd=t("td",{style:{"text-align":"center"}},"188",-1),xd={style:{"text-align":"left"}},pd={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",target:"_blank",rel:"noopener noreferrer"},bd={style:{"text-align":"center"}},jd={style:{"text-align":"left"}},kd=t("code",null,"数组",-1),Md=t("code",null,"动态规划",-1),Hd={style:{"text-align":"left"}},Id=t("td",{style:{"text-align":"center"}},"198",-1),wd={style:{"text-align":"left"}},vd={href:"https://leetcode.com/problems/house-robber",target:"_blank",rel:"noopener noreferrer"},qd={style:{"text-align":"center"}},zd={style:{"text-align":"left"}},Cd=t("code",null,"数组",-1),Od=t("code",null,"动态规划",-1),Ld={style:{"text-align":"left"}},Ed=t("td",{style:{"text-align":"center"}},"213",-1),Pd={style:{"text-align":"left"}},Kd={href:"https://leetcode.com/problems/house-robber-ii",target:"_blank",rel:"noopener noreferrer"},Vd=t("td",{style:{"text-align":"center"}},null,-1),Nd={style:{"text-align":"left"}},Dd=t("code",null,"数组",-1),Bd=t("code",null,"动态规划",-1),Yd={style:{"text-align":"left"}},Ad=t("td",{style:{"text-align":"center"}},"221",-1),Jd={style:{"text-align":"left"}},Rd={href:"https://leetcode.com/problems/maximal-square",target:"_blank",rel:"noopener noreferrer"},Sd={style:{"text-align":"center"}},Ud={style:{"text-align":"left"}},Wd=t("code",null,"数组",-1),Xd=t("code",null,"动态规划",-1),Fd=t("code",null,"矩阵",-1),Gd={style:{"text-align":"left"}},Td=t("td",{style:{"text-align":"center"}},"233",-1),Qd={style:{"text-align":"left"}},Zd={href:"https://leetcode.com/problems/number-of-digit-one",target:"_blank",rel:"noopener noreferrer"},$d=t("td",{style:{"text-align":"center"}},null,-1),t_={style:{"text-align":"left"}},e_=t("code",null,"递归",-1),l_=t("code",null,"数学",-1),o_=t("code",null,"动态规划",-1),n_={style:{"text-align":"left"}},s_=t("td",{style:{"text-align":"center"}},"241",-1),d_={style:{"text-align":"left"}},__={href:"https://leetcode.com/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},i_=t("td",{style:{"text-align":"center"}},null,-1),c_={style:{"text-align":"left"}},a_=t("code",null,"递归",-1),r_=t("code",null,"记忆化搜索",-1),h_=t("code",null,"数学",-1),u_=t("code",null,"2+",-1),f_={style:{"text-align":"left"}},g_=t("td",{style:{"text-align":"center"}},"256",-1),m_={style:{"text-align":"left"}},y_={href:"https://leetcode.com/problems/paint-house",target:"_blank",rel:"noopener noreferrer"},x_=t("td",{style:{"text-align":"center"}},null,-1),p_={style:{"text-align":"left"}},b_=t("code",null,"数组",-1),j_=t("code",null,"动态规划",-1),k_={style:{"text-align":"left"}},M_=t("td",{style:{"text-align":"center"}},"264",-1),H_={style:{"text-align":"left"}},I_={href:"https://leetcode.com/problems/ugly-number-ii",target:"_blank",rel:"noopener noreferrer"},w_={style:{"text-align":"center"}},v_={style:{"text-align":"left"}},q_=t("code",null,"哈希表",-1),z_=t("code",null,"数学",-1),C_=t("code",null,"动态规划",-1),O_=t("code",null,"1+",-1),L_={style:{"text-align":"left"}},E_=t("td",{style:{"text-align":"center"}},"265",-1),P_={style:{"text-align":"left"}},K_={href:"https://leetcode.com/problems/paint-house-ii",target:"_blank",rel:"noopener noreferrer"},V_=t("td",{style:{"text-align":"center"}},null,-1),N_={style:{"text-align":"left"}},D_=t("code",null,"数组",-1),B_=t("code",null,"动态规划",-1),Y_={style:{"text-align":"left"}},A_=t("td",{style:{"text-align":"center"}},"276",-1),J_={style:{"text-align":"left"}},R_={href:"https://leetcode.com/problems/paint-fence",target:"_blank",rel:"noopener noreferrer"},S_=t("td",{style:{"text-align":"center"}},null,-1),U_={style:{"text-align":"left"}},W_=t("code",null,"动态规划",-1),X_={style:{"text-align":"left"}},F_=t("td",{style:{"text-align":"center"}},"279",-1),G_={style:{"text-align":"left"}},T_={href:"https://leetcode.com/problems/perfect-squares",target:"_blank",rel:"noopener noreferrer"},Q_={style:{"text-align":"center"}},Z_={style:{"text-align":"left"}},$_=t("code",null,"广度优先搜索",-1),ti=t("code",null,"数学",-1),ei=t("code",null,"动态规划",-1),li={style:{"text-align":"left"}},oi=t("td",{style:{"text-align":"center"}},"294",-1),ni={style:{"text-align":"left"}},si={href:"https://leetcode.com/problems/flip-game-ii",target:"_blank",rel:"noopener noreferrer"},di=t("td",{style:{"text-align":"center"}},null,-1),_i={style:{"text-align":"left"}},ii=t("code",null,"记忆化搜索",-1),ci=t("code",null,"数学",-1),ai=t("code",null,"动态规划",-1),ri=t("code",null,"2+",-1),hi={style:{"text-align":"left"}},ui=t("td",{style:{"text-align":"center"}},"300",-1),fi={style:{"text-align":"left"}},gi={href:"https://leetcode.com/problems/longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},mi={style:{"text-align":"center"}},yi={style:{"text-align":"left"}},xi=t("code",null,"数组",-1),pi=t("code",null,"二分查找",-1),bi=t("code",null,"动态规划",-1),ji={style:{"text-align":"left"}},ki=t("td",{style:{"text-align":"center"}},"309",-1),Mi={style:{"text-align":"left"}},Hi={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown",target:"_blank",rel:"noopener noreferrer"},Ii={style:{"text-align":"center"}},wi={style:{"text-align":"left"}},vi=t("code",null,"数组",-1),qi=t("code",null,"动态规划",-1),zi={style:{"text-align":"left"}},Ci=t("td",{style:{"text-align":"center"}},"312",-1),Oi={style:{"text-align":"left"}},Li={href:"https://leetcode.com/problems/burst-balloons",target:"_blank",rel:"noopener noreferrer"},Ei=t("td",{style:{"text-align":"center"}},null,-1),Pi={style:{"text-align":"left"}},Ki=t("code",null,"数组",-1),Vi=t("code",null,"动态规划",-1),Ni={style:{"text-align":"left"}},Di=t("td",{style:{"text-align":"center"}},"313",-1),Bi={style:{"text-align":"left"}},Yi={href:"https://leetcode.com/problems/super-ugly-number",target:"_blank",rel:"noopener noreferrer"},Ai=t("td",{style:{"text-align":"center"}},null,-1),Ji={style:{"text-align":"left"}},Ri=t("code",null,"数组",-1),Si=t("code",null,"数学",-1),Ui=t("code",null,"动态规划",-1),Wi={style:{"text-align":"left"}},Xi=t("td",{style:{"text-align":"center"}},"322",-1),Fi={style:{"text-align":"left"}},Gi={href:"https://leetcode.com/problems/coin-change",target:"_blank",rel:"noopener noreferrer"},Ti={style:{"text-align":"center"}},Qi={style:{"text-align":"left"}},Zi=t("code",null,"广度优先搜索",-1),$i=t("code",null,"数组",-1),tc=t("code",null,"动态规划",-1),ec={style:{"text-align":"left"}},lc=t("td",{style:{"text-align":"center"}},"329",-1),oc={style:{"text-align":"left"}},nc={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},sc=t("td",{style:{"text-align":"center"}},null,-1),dc={style:{"text-align":"left"}},_c=t("code",null,"深度优先搜索",-1),ic=t("code",null,"广度优先搜索",-1),cc=t("code",null,"图",-1),ac=t("code",null,"5+",-1),rc={style:{"text-align":"left"}},hc=t("td",{style:{"text-align":"center"}},"333",-1),uc={style:{"text-align":"left"}},fc={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},gc=t("td",{style:{"text-align":"center"}},null,-1),mc={style:{"text-align":"left"}},yc=t("code",null,"树",-1),xc=t("code",null,"深度优先搜索",-1),pc=t("code",null,"二叉搜索树",-1),bc=t("code",null,"2+",-1),jc={style:{"text-align":"left"}},kc=t("td",{style:{"text-align":"center"}},"337",-1),Mc={style:{"text-align":"left"}},Hc={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Ic=t("td",{style:{"text-align":"center"}},null,-1),wc={style:{"text-align":"left"}},vc=t("code",null,"树",-1),qc=t("code",null,"深度优先搜索",-1),zc=t("code",null,"动态规划",-1),Cc=t("code",null,"1+",-1),Oc={style:{"text-align":"left"}},Lc=t("td",{style:{"text-align":"center"}},"338",-1),Ec={style:{"text-align":"left"}},Pc={href:"https://leetcode.com/problems/counting-bits",target:"_blank",rel:"noopener noreferrer"},Kc=t("td",{style:{"text-align":"center"}},null,-1),Vc={style:{"text-align":"left"}},Nc=t("code",null,"位运算",-1),Dc=t("code",null,"动态规划",-1),Bc={style:{"text-align":"left"}},Yc=t("td",{style:{"text-align":"center"}},"343",-1),Ac={style:{"text-align":"left"}},Jc={href:"https://leetcode.com/problems/integer-break",target:"_blank",rel:"noopener noreferrer"},Rc={style:{"text-align":"center"}},Sc={style:{"text-align":"left"}},Uc=t("code",null,"数学",-1),Wc=t("code",null,"动态规划",-1),Xc={style:{"text-align":"left"}},Fc=t("td",{style:{"text-align":"center"}},"351",-1),Gc={style:{"text-align":"left"}},Tc={href:"https://leetcode.com/problems/android-unlock-patterns",target:"_blank",rel:"noopener noreferrer"},Qc=t("td",{style:{"text-align":"center"}},null,-1),Zc={style:{"text-align":"left"}},$c=t("code",null,"位运算",-1),ta=t("code",null,"动态规划",-1),ea=t("code",null,"回溯",-1),la=t("code",null,"1+",-1),oa={style:{"text-align":"left"}},na=t("td",{style:{"text-align":"center"}},"354",-1),sa={style:{"text-align":"left"}},da={href:"https://leetcode.com/problems/russian-doll-envelopes",target:"_blank",rel:"noopener noreferrer"},_a={style:{"text-align":"center"}},ia={style:{"text-align":"left"}},ca=t("code",null,"数组",-1),aa=t("code",null,"二分查找",-1),ra=t("code",null,"动态规划",-1),ha=t("code",null,"1+",-1),ua={style:{"text-align":"left"}},fa=t("td",{style:{"text-align":"center"}},"357",-1),ga={style:{"text-align":"left"}},ma={href:"https://leetcode.com/problems/count-numbers-with-unique-digits",target:"_blank",rel:"noopener noreferrer"},ya=t("td",{style:{"text-align":"center"}},null,-1),xa={style:{"text-align":"left"}},pa=t("code",null,"数学",-1),ba=t("code",null,"动态规划",-1),ja=t("code",null,"回溯",-1),ka={style:{"text-align":"left"}},Ma=t("td",{style:{"text-align":"center"}},"361",-1),Ha={style:{"text-align":"left"}},Ia={href:"https://leetcode.com/problems/bomb-enemy",target:"_blank",rel:"noopener noreferrer"},wa=t("td",{style:{"text-align":"center"}},null,-1),va={style:{"text-align":"left"}},qa=t("code",null,"数组",-1),za=t("code",null,"动态规划",-1),Ca=t("code",null,"矩阵",-1),Oa={style:{"text-align":"left"}},La=t("td",{style:{"text-align":"center"}},"368",-1),Ea={style:{"text-align":"left"}},Pa={href:"https://leetcode.com/problems/largest-divisible-subset",target:"_blank",rel:"noopener noreferrer"},Ka=t("td",{style:{"text-align":"center"}},null,-1),Va={style:{"text-align":"left"}},Na=t("code",null,"数组",-1),Da=t("code",null,"数学",-1),Ba=t("code",null,"动态规划",-1),Ya=t("code",null,"1+",-1),Aa={style:{"text-align":"left"}},Ja=t("td",{style:{"text-align":"center"}},"375",-1),Ra={style:{"text-align":"left"}},Sa={href:"https://leetcode.com/problems/guess-number-higher-or-lower-ii",target:"_blank",rel:"noopener noreferrer"},Ua={style:{"text-align":"center"}},Wa={style:{"text-align":"left"}},Xa=t("code",null,"数学",-1),Fa=t("code",null,"动态规划",-1),Ga=t("code",null,"博弈",-1),Ta={style:{"text-align":"left"}},Qa=t("td",{style:{"text-align":"center"}},"376",-1),Za={style:{"text-align":"left"}},$a={href:"https://leetcode.com/problems/wiggle-subsequence",target:"_blank",rel:"noopener noreferrer"},tr=t("td",{style:{"text-align":"center"}},null,-1),er={style:{"text-align":"left"}},lr=t("code",null,"贪心",-1),or=t("code",null,"数组",-1),nr=t("code",null,"动态规划",-1),sr={style:{"text-align":"left"}},dr=t("td",{style:{"text-align":"center"}},"377",-1),_r={style:{"text-align":"left"}},ir={href:"https://leetcode.com/problems/combination-sum-iv",target:"_blank",rel:"noopener noreferrer"},cr=t("td",{style:{"text-align":"center"}},null,-1),ar={style:{"text-align":"left"}},rr=t("code",null,"数组",-1),hr=t("code",null,"动态规划",-1),ur={style:{"text-align":"left"}},fr=t("td",{style:{"text-align":"center"}},"392",-1),gr={style:{"text-align":"left"}},mr={href:"https://leetcode.com/problems/is-subsequence",target:"_blank",rel:"noopener noreferrer"},yr={style:{"text-align":"center"}},xr={style:{"text-align":"left"}},pr=t("code",null,"双指针",-1),br=t("code",null,"字符串",-1),jr=t("code",null,"动态规划",-1),kr={style:{"text-align":"left"}},Mr=t("td",{style:{"text-align":"center"}},"396",-1),Hr={style:{"text-align":"left"}},Ir={href:"https://leetcode.com/problems/rotate-function",target:"_blank",rel:"noopener noreferrer"},wr=t("td",{style:{"text-align":"center"}},null,-1),vr={style:{"text-align":"left"}},qr=t("code",null,"数组",-1),zr=t("code",null,"数学",-1),Cr=t("code",null,"动态规划",-1),Or={style:{"text-align":"left"}},Lr=t("td",{style:{"text-align":"center"}},"397",-1),Er={style:{"text-align":"left"}},Pr={href:"https://leetcode.com/problems/integer-replacement",target:"_blank",rel:"noopener noreferrer"},Kr=t("td",{style:{"text-align":"center"}},null,-1),Vr={style:{"text-align":"left"}},Nr=t("code",null,"贪心",-1),Dr=t("code",null,"位运算",-1),Br=t("code",null,"记忆化搜索",-1),Yr=t("code",null,"1+",-1),Ar={style:{"text-align":"left"}},Jr=t("td",{style:{"text-align":"center"}},"403",-1),Rr={style:{"text-align":"left"}},Sr={href:"https://leetcode.com/problems/frog-jump",target:"_blank",rel:"noopener noreferrer"},Ur=t("td",{style:{"text-align":"center"}},null,-1),Wr={style:{"text-align":"left"}},Xr=t("code",null,"数组",-1),Fr=t("code",null,"动态规划",-1),Gr={style:{"text-align":"left"}},Tr=t("td",{style:{"text-align":"center"}},"410",-1),Qr={style:{"text-align":"left"}},Zr={href:"https://leetcode.com/problems/split-array-largest-sum",target:"_blank",rel:"noopener noreferrer"},$r=t("td",{style:{"text-align":"center"}},null,-1),th={style:{"text-align":"left"}},eh=t("code",null,"贪心",-1),lh=t("code",null,"数组",-1),oh=t("code",null,"二分查找",-1),nh=t("code",null,"2+",-1),sh={style:{"text-align":"left"}},dh=t("td",{style:{"text-align":"center"}},"413",-1),_h={style:{"text-align":"left"}},ih={href:"https://leetcode.com/problems/arithmetic-slices",target:"_blank",rel:"noopener noreferrer"},ch=t("td",{style:{"text-align":"center"}},null,-1),ah={style:{"text-align":"left"}},rh=t("code",null,"数组",-1),hh=t("code",null,"动态规划",-1),uh=t("code",null,"滑动窗口",-1),fh={style:{"text-align":"left"}},gh=t("td",{style:{"text-align":"center"}},"416",-1),mh={style:{"text-align":"left"}},yh={href:"https://leetcode.com/problems/partition-equal-subset-sum",target:"_blank",rel:"noopener noreferrer"},xh={style:{"text-align":"center"}},ph={style:{"text-align":"left"}},bh=t("code",null,"数组",-1),jh=t("code",null,"动态规划",-1),kh={style:{"text-align":"left"}},Mh=t("td",{style:{"text-align":"center"}},"418",-1),Hh={style:{"text-align":"left"}},Ih={href:"https://leetcode.com/problems/sentence-screen-fitting",target:"_blank",rel:"noopener noreferrer"},wh=t("td",{style:{"text-align":"center"}},null,-1),vh={style:{"text-align":"left"}},qh=t("code",null,"数组",-1),zh=t("code",null,"字符串",-1),Ch=t("code",null,"动态规划",-1),Oh={style:{"text-align":"left"}},Lh=t("td",{style:{"text-align":"center"}},"435",-1),Eh={style:{"text-align":"left"}},Ph={href:"https://leetcode.com/problems/non-overlapping-intervals",target:"_blank",rel:"noopener noreferrer"},Kh=t("td",{style:{"text-align":"center"}},null,-1),Vh={style:{"text-align":"left"}},Nh=t("code",null,"贪心",-1),Dh=t("code",null,"数组",-1),Bh=t("code",null,"动态规划",-1),Yh=t("code",null,"1+",-1),Ah={style:{"text-align":"left"}},Jh=t("td",{style:{"text-align":"center"}},"446",-1),Rh={style:{"text-align":"left"}},Sh={href:"https://leetcode.com/problems/arithmetic-slices-ii-subsequence",target:"_blank",rel:"noopener noreferrer"},Uh=t("td",{style:{"text-align":"center"}},null,-1),Wh={style:{"text-align":"left"}},Xh=t("code",null,"数组",-1),Fh=t("code",null,"动态规划",-1),Gh={style:{"text-align":"left"}},Th=t("td",{style:{"text-align":"center"}},"458",-1),Qh={style:{"text-align":"left"}},Zh={href:"https://leetcode.com/problems/poor-pigs",target:"_blank",rel:"noopener noreferrer"},$h=t("td",{style:{"text-align":"center"}},null,-1),t1={style:{"text-align":"left"}},e1=t("code",null,"数学",-1),l1=t("code",null,"动态规划",-1),o1=t("code",null,"组合数学",-1),n1={style:{"text-align":"left"}},s1=t("td",{style:{"text-align":"center"}},"464",-1),d1={style:{"text-align":"left"}},_1={href:"https://leetcode.com/problems/can-i-win",target:"_blank",rel:"noopener noreferrer"},i1=t("td",{style:{"text-align":"center"}},null,-1),c1={style:{"text-align":"left"}},a1=t("code",null,"位运算",-1),r1=t("code",null,"记忆化搜索",-1),h1=t("code",null,"数学",-1),u1=t("code",null,"3+",-1),f1={style:{"text-align":"left"}},g1=t("td",{style:{"text-align":"center"}},"465",-1),m1={style:{"text-align":"left"}},y1={href:"https://leetcode.com/problems/optimal-account-balancing",target:"_blank",rel:"noopener noreferrer"},x1=t("td",{style:{"text-align":"center"}},null,-1),p1={style:{"text-align":"left"}},b1=t("code",null,"位运算",-1),j1=t("code",null,"数组",-1),k1=t("code",null,"动态规划",-1),M1=t("code",null,"2+",-1),H1={style:{"text-align":"left"}},I1=t("td",{style:{"text-align":"center"}},"466",-1),w1={style:{"text-align":"left"}},v1={href:"https://leetcode.com/problems/count-the-repetitions",target:"_blank",rel:"noopener noreferrer"},q1=t("td",{style:{"text-align":"center"}},null,-1),z1={style:{"text-align":"left"}},C1=t("code",null,"字符串",-1),O1=t("code",null,"动态规划",-1),L1={style:{"text-align":"left"}},E1=t("td",{style:{"text-align":"center"}},"467",-1),P1={style:{"text-align":"left"}},K1={href:"https://leetcode.com/problems/unique-substrings-in-wraparound-string",target:"_blank",rel:"noopener noreferrer"},V1=t("td",{style:{"text-align":"center"}},null,-1),N1={style:{"text-align":"left"}},D1=t("code",null,"字符串",-1),B1=t("code",null,"动态规划",-1),Y1={style:{"text-align":"left"}},A1=t("td",{style:{"text-align":"center"}},"471",-1),J1={style:{"text-align":"left"}},R1={href:"https://leetcode.com/problems/encode-string-with-shortest-length",target:"_blank",rel:"noopener noreferrer"},S1=t("td",{style:{"text-align":"center"}},null,-1),U1={style:{"text-align":"left"}},W1=t("code",null,"字符串",-1),X1=t("code",null,"动态规划",-1),F1={style:{"text-align":"left"}},G1=t("td",{style:{"text-align":"center"}},"472",-1),T1={style:{"text-align":"left"}},Q1={href:"https://leetcode.com/problems/concatenated-words",target:"_blank",rel:"noopener noreferrer"},Z1=t("td",{style:{"text-align":"center"}},null,-1),$1={style:{"text-align":"left"}},tu=t("code",null,"深度优先搜索",-1),eu=t("code",null,"字典树",-1),lu=t("code",null,"数组",-1),ou=t("code",null,"2+",-1),nu={style:{"text-align":"left"}},su=t("td",{style:{"text-align":"center"}},"473",-1),du={style:{"text-align":"left"}},_u={href:"https://leetcode.com/problems/matchsticks-to-square",target:"_blank",rel:"noopener noreferrer"},iu=t("td",{style:{"text-align":"center"}},null,-1),cu={style:{"text-align":"left"}},au=t("code",null,"位运算",-1),ru=t("code",null,"数组",-1),hu=t("code",null,"动态规划",-1),uu=t("code",null,"2+",-1),fu={style:{"text-align":"left"}},gu=t("td",{style:{"text-align":"center"}},"474",-1),mu={style:{"text-align":"left"}},yu={href:"https://leetcode.com/problems/ones-and-zeroes",target:"_blank",rel:"noopener noreferrer"},xu={style:{"text-align":"center"}},pu={style:{"text-align":"left"}},bu=t("code",null,"数组",-1),ju=t("code",null,"字符串",-1),ku=t("code",null,"动态规划",-1),Mu={style:{"text-align":"left"}},Hu=t("td",{style:{"text-align":"center"}},"486",-1),Iu={style:{"text-align":"left"}},wu={href:"https://leetcode.com/problems/predict-the-winner",target:"_blank",rel:"noopener noreferrer"},vu=t("td",{style:{"text-align":"center"}},null,-1),qu={style:{"text-align":"left"}},zu=t("code",null,"递归",-1),Cu=t("code",null,"数组",-1),Ou=t("code",null,"数学",-1),Lu=t("code",null,"2+",-1),Eu={style:{"text-align":"left"}},Pu=t("td",{style:{"text-align":"center"}},"487",-1),Ku={style:{"text-align":"left"}},Vu={href:"https://leetcode.com/problems/max-consecutive-ones-ii",target:"_blank",rel:"noopener noreferrer"},Nu=t("td",{style:{"text-align":"center"}},null,-1),Du={style:{"text-align":"left"}},Bu=t("code",null,"数组",-1),Yu=t("code",null,"动态规划",-1),Au=t("code",null,"滑动窗口",-1),Ju={style:{"text-align":"left"}},Ru=t("td",{style:{"text-align":"center"}},"488",-1),Su={style:{"text-align":"left"}},Uu={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},Wu=t("td",{style:{"text-align":"center"}},null,-1),Xu={style:{"text-align":"left"}},Fu=t("code",null,"栈",-1),Gu=t("code",null,"广度优先搜索",-1),Tu=t("code",null,"记忆化搜索",-1),Qu=t("code",null,"2+",-1),Zu={style:{"text-align":"left"}},$u=t("td",{style:{"text-align":"center"}},"494",-1),tf={style:{"text-align":"left"}},ef={href:"https://leetcode.com/problems/target-sum",target:"_blank",rel:"noopener noreferrer"},lf={style:{"text-align":"center"}},of={style:{"text-align":"left"}},nf=t("code",null,"数组",-1),sf=t("code",null,"动态规划",-1),df=t("code",null,"回溯",-1),_f={style:{"text-align":"left"}},cf=t("td",{style:{"text-align":"center"}},"509",-1),af={style:{"text-align":"left"}},rf={href:"https://leetcode.com/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},hf={style:{"text-align":"center"}},uf={style:{"text-align":"left"}},ff=t("code",null,"递归",-1),gf=t("code",null,"记忆化搜索",-1),mf=t("code",null,"数学",-1),yf=t("code",null,"1+",-1),xf={style:{"text-align":"left"}},pf=t("td",{style:{"text-align":"center"}},"514",-1),bf={style:{"text-align":"left"}},jf={href:"https://leetcode.com/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},kf={style:{"text-align":"center"}},Mf={style:{"text-align":"left"}},Hf=t("code",null,"深度优先搜索",-1),If=t("code",null,"广度优先搜索",-1),wf=t("code",null,"字符串",-1),vf=t("code",null,"1+",-1),qf={style:{"text-align":"left"}},zf=t("td",{style:{"text-align":"center"}},"516",-1),Cf={style:{"text-align":"left"}},Of={href:"https://leetcode.com/problems/longest-palindromic-subsequence",target:"_blank",rel:"noopener noreferrer"},Lf={style:{"text-align":"center"}},Ef={style:{"text-align":"left"}},Pf=t("code",null,"字符串",-1),Kf=t("code",null,"动态规划",-1),Vf={style:{"text-align":"left"}},Nf=t("td",{style:{"text-align":"center"}},"518",-1),Df={style:{"text-align":"left"}},Bf={href:"https://leetcode.com/problems/coin-change-ii",target:"_blank",rel:"noopener noreferrer"},Yf={style:{"text-align":"center"}},Af={style:{"text-align":"left"}},Jf=t("code",null,"数组",-1),Rf=t("code",null,"动态规划",-1),Sf={style:{"text-align":"left"}},Uf=t("td",{style:{"text-align":"center"}},"526",-1),Wf={style:{"text-align":"left"}},Xf={href:"https://leetcode.com/problems/beautiful-arrangement",target:"_blank",rel:"noopener noreferrer"},Ff=t("td",{style:{"text-align":"center"}},null,-1),Gf={style:{"text-align":"left"}},Tf=t("code",null,"位运算",-1),Qf=t("code",null,"数组",-1),Zf=t("code",null,"动态规划",-1),$f=t("code",null,"2+",-1),tg={style:{"text-align":"left"}},eg=t("td",{style:{"text-align":"center"}},"542",-1),lg={style:{"text-align":"left"}},og={href:"https://leetcode.com/problems/01-matrix",target:"_blank",rel:"noopener noreferrer"},ng=t("td",{style:{"text-align":"center"}},null,-1),sg={style:{"text-align":"left"}},dg=t("code",null,"广度优先搜索",-1),_g=t("code",null,"数组",-1),ig=t("code",null,"动态规划",-1),cg=t("code",null,"1+",-1),ag={style:{"text-align":"left"}},rg=t("td",{style:{"text-align":"center"}},"546",-1),hg={style:{"text-align":"left"}},ug={href:"https://leetcode.com/problems/remove-boxes",target:"_blank",rel:"noopener noreferrer"},fg=t("td",{style:{"text-align":"center"}},null,-1),gg={style:{"text-align":"left"}},mg=t("code",null,"记忆化搜索",-1),yg=t("code",null,"数组",-1),xg=t("code",null,"动态规划",-1),pg={style:{"text-align":"left"}},bg=t("td",{style:{"text-align":"center"}},"552",-1),jg={style:{"text-align":"left"}},kg={href:"https://leetcode.com/problems/student-attendance-record-ii",target:"_blank",rel:"noopener noreferrer"},Mg=t("td",{style:{"text-align":"center"}},null,-1),Hg={style:{"text-align":"left"}},Ig=t("code",null,"动态规划",-1),wg={style:{"text-align":"left"}},vg=t("td",{style:{"text-align":"center"}},"553",-1),qg={style:{"text-align":"left"}},zg={href:"https://leetcode.com/problems/optimal-division",target:"_blank",rel:"noopener noreferrer"},Cg=t("td",{style:{"text-align":"center"}},null,-1),Og={style:{"text-align":"left"}},Lg=t("code",null,"数组",-1),Eg=t("code",null,"数学",-1),Pg=t("code",null,"动态规划",-1),Kg={style:{"text-align":"left"}},Vg=t("td",{style:{"text-align":"center"}},"562",-1),Ng={style:{"text-align":"left"}},Dg={href:"https://leetcode.com/problems/longest-line-of-consecutive-one-in-matrix",target:"_blank",rel:"noopener noreferrer"},Bg=t("td",{style:{"text-align":"center"}},null,-1),Yg={style:{"text-align":"left"}},Ag=t("code",null,"数组",-1),Jg=t("code",null,"动态规划",-1),Rg=t("code",null,"矩阵",-1),Sg={style:{"text-align":"left"}},Ug=t("td",{style:{"text-align":"center"}},"568",-1),Wg={style:{"text-align":"left"}},Xg={href:"https://leetcode.com/problems/maximum-vacation-days",target:"_blank",rel:"noopener noreferrer"},Fg=t("td",{style:{"text-align":"center"}},null,-1),Gg={style:{"text-align":"left"}},Tg=t("code",null,"数组",-1),Qg=t("code",null,"动态规划",-1),Zg=t("code",null,"矩阵",-1),$g={style:{"text-align":"left"}},tm=t("td",{style:{"text-align":"center"}},"576",-1),em={style:{"text-align":"left"}},lm={href:"https://leetcode.com/problems/out-of-boundary-paths",target:"_blank",rel:"noopener noreferrer"},om=t("td",{style:{"text-align":"center"}},null,-1),nm={style:{"text-align":"left"}},sm=t("code",null,"动态规划",-1),dm={style:{"text-align":"left"}},_m=t("td",{style:{"text-align":"center"}},"583",-1),im={style:{"text-align":"left"}},cm={href:"https://leetcode.com/problems/delete-operation-for-two-strings",target:"_blank",rel:"noopener noreferrer"},am={style:{"text-align":"center"}},rm={style:{"text-align":"left"}},hm=t("code",null,"字符串",-1),um=t("code",null,"动态规划",-1),fm={style:{"text-align":"left"}},gm=t("td",{style:{"text-align":"center"}},"600",-1),mm={style:{"text-align":"left"}},ym={href:"https://leetcode.com/problems/non-negative-integers-without-consecutive-ones",target:"_blank",rel:"noopener noreferrer"},xm=t("td",{style:{"text-align":"center"}},null,-1),pm={style:{"text-align":"left"}},bm=t("code",null,"动态规划",-1),jm={style:{"text-align":"left"}},km=t("td",{style:{"text-align":"center"}},"629",-1),Mm={style:{"text-align":"left"}},Hm={href:"https://leetcode.com/problems/k-inverse-pairs-array",target:"_blank",rel:"noopener noreferrer"},Im=t("td",{style:{"text-align":"center"}},null,-1),wm={style:{"text-align":"left"}},vm=t("code",null,"动态规划",-1),qm={style:{"text-align":"left"}},zm=t("td",{style:{"text-align":"center"}},"634",-1),Cm={style:{"text-align":"left"}},Om={href:"https://leetcode.com/problems/find-the-derangement-of-an-array",target:"_blank",rel:"noopener noreferrer"},Lm=t("td",{style:{"text-align":"center"}},null,-1),Em={style:{"text-align":"left"}},Pm=t("code",null,"数学",-1),Km=t("code",null,"动态规划",-1),Vm={style:{"text-align":"left"}},Nm=t("td",{style:{"text-align":"center"}},"638",-1),Dm={style:{"text-align":"left"}},Bm={href:"https://leetcode.com/problems/shopping-offers",target:"_blank",rel:"noopener noreferrer"},Ym=t("td",{style:{"text-align":"center"}},null,-1),Am={style:{"text-align":"left"}},Jm=t("code",null,"位运算",-1),Rm=t("code",null,"记忆化搜索",-1),Sm=t("code",null,"数组",-1),Um=t("code",null,"3+",-1),Wm={style:{"text-align":"left"}},Xm=t("td",{style:{"text-align":"center"}},"639",-1),Fm={style:{"text-align":"left"}},Gm={href:"https://leetcode.com/problems/decode-ways-ii",target:"_blank",rel:"noopener noreferrer"},Tm=t("td",{style:{"text-align":"center"}},null,-1),Qm={style:{"text-align":"left"}},Zm=t("code",null,"字符串",-1),$m=t("code",null,"动态规划",-1),ty={style:{"text-align":"left"}},ey=t("td",{style:{"text-align":"center"}},"646",-1),ly={style:{"text-align":"left"}},oy={href:"https://leetcode.com/problems/maximum-length-of-pair-chain",target:"_blank",rel:"noopener noreferrer"},ny=t("td",{style:{"text-align":"center"}},null,-1),sy={style:{"text-align":"left"}},dy=t("code",null,"贪心",-1),_y=t("code",null,"数组",-1),iy=t("code",null,"动态规划",-1),cy=t("code",null,"1+",-1),ay={style:{"text-align":"left"}},ry=t("td",{style:{"text-align":"center"}},"647",-1),hy={style:{"text-align":"left"}},uy={href:"https://leetcode.com/problems/palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},fy=t("td",{style:{"text-align":"center"}},null,-1),gy={style:{"text-align":"left"}},my=t("code",null,"双指针",-1),yy=t("code",null,"字符串",-1),xy=t("code",null,"动态规划",-1),py={style:{"text-align":"left"}},by=t("td",{style:{"text-align":"center"}},"650",-1),jy={style:{"text-align":"left"}},ky={href:"https://leetcode.com/problems/2-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},My=t("td",{style:{"text-align":"center"}},null,-1),Hy={style:{"text-align":"left"}},Iy=t("code",null,"数学",-1),wy=t("code",null,"动态规划",-1),vy={style:{"text-align":"left"}},qy=t("td",{style:{"text-align":"center"}},"651",-1),zy={style:{"text-align":"left"}},Cy={href:"https://leetcode.com/problems/4-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},Oy=t("td",{style:{"text-align":"center"}},null,-1),Ly={style:{"text-align":"left"}},Ey=t("code",null,"数学",-1),Py=t("code",null,"动态规划",-1),Ky={style:{"text-align":"left"}},Vy=t("td",{style:{"text-align":"center"}},"656",-1),Ny={style:{"text-align":"left"}},Dy={href:"https://leetcode.com/problems/coin-path",target:"_blank",rel:"noopener noreferrer"},By=t("td",{style:{"text-align":"center"}},null,-1),Yy={style:{"text-align":"left"}},Ay=t("code",null,"数组",-1),Jy=t("code",null,"动态规划",-1),Ry={style:{"text-align":"left"}},Sy=t("td",{style:{"text-align":"center"}},"664",-1),Uy={style:{"text-align":"left"}},Wy={href:"https://leetcode.com/problems/strange-printer",target:"_blank",rel:"noopener noreferrer"},Xy=t("td",{style:{"text-align":"center"}},null,-1),Fy={style:{"text-align":"left"}},Gy=t("code",null,"字符串",-1),Ty=t("code",null,"动态规划",-1),Qy={style:{"text-align":"left"}},Zy=t("td",{style:{"text-align":"center"}},"673",-1),$y={style:{"text-align":"left"}},t3={href:"https://leetcode.com/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},e3=t("td",{style:{"text-align":"center"}},null,-1),l3={style:{"text-align":"left"}},o3=t("code",null,"树状数组",-1),n3=t("code",null,"线段树",-1),s3=t("code",null,"数组",-1),d3=t("code",null,"1+",-1),_3={style:{"text-align":"left"}},i3=t("td",{style:{"text-align":"center"}},"678",-1),c3={style:{"text-align":"left"}},a3={href:"https://leetcode.com/problems/valid-parenthesis-string",target:"_blank",rel:"noopener noreferrer"},r3={style:{"text-align":"center"}},h3={style:{"text-align":"left"}},u3=t("code",null,"栈",-1),f3=t("code",null,"贪心",-1),g3=t("code",null,"字符串",-1),m3=t("code",null,"1+",-1),y3={style:{"text-align":"left"}},x3=t("td",{style:{"text-align":"center"}},"688",-1),p3={style:{"text-align":"left"}},b3={href:"https://leetcode.com/problems/knight-probability-in-chessboard",target:"_blank",rel:"noopener noreferrer"},j3=t("td",{style:{"text-align":"center"}},null,-1),k3={style:{"text-align":"left"}},M3=t("code",null,"动态规划",-1),H3={style:{"text-align":"left"}},I3=t("td",{style:{"text-align":"center"}},"689",-1),w3={style:{"text-align":"left"}},v3={href:"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays",target:"_blank",rel:"noopener noreferrer"},q3=t("td",{style:{"text-align":"center"}},null,-1),z3={style:{"text-align":"left"}},C3=t("code",null,"数组",-1),O3=t("code",null,"动态规划",-1),L3={style:{"text-align":"left"}},E3=t("td",{style:{"text-align":"center"}},"691",-1),P3={style:{"text-align":"left"}},K3={href:"https://leetcode.com/problems/stickers-to-spell-word",target:"_blank",rel:"noopener noreferrer"},V3=t("td",{style:{"text-align":"center"}},null,-1),N3={style:{"text-align":"left"}},D3=t("code",null,"位运算",-1),B3=t("code",null,"数组",-1),Y3=t("code",null,"字符串",-1),A3=t("code",null,"3+",-1),J3={style:{"text-align":"left"}},R3=t("td",{style:{"text-align":"center"}},"698",-1),S3={style:{"text-align":"left"}},U3={href:"https://leetcode.com/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},W3=t("td",{style:{"text-align":"center"}},null,-1),X3={style:{"text-align":"left"}},F3=t("code",null,"位运算",-1),G3=t("code",null,"记忆化搜索",-1),T3=t("code",null,"数组",-1),Q3=t("code",null,"3+",-1),Z3={style:{"text-align":"left"}},$3=t("td",{style:{"text-align":"center"}},"712",-1),tx={style:{"text-align":"left"}},ex={href:"https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings",target:"_blank",rel:"noopener noreferrer"},lx={style:{"text-align":"center"}},ox={style:{"text-align":"left"}},nx=t("code",null,"字符串",-1),sx=t("code",null,"动态规划",-1),dx={style:{"text-align":"left"}},_x=t("td",{style:{"text-align":"center"}},"714",-1),ix={style:{"text-align":"left"}},cx={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee",target:"_blank",rel:"noopener noreferrer"},ax={style:{"text-align":"center"}},rx={style:{"text-align":"left"}},hx=t("code",null,"贪心",-1),ux=t("code",null,"数组",-1),fx=t("code",null,"动态规划",-1),gx={style:{"text-align":"left"}},mx=t("td",{style:{"text-align":"center"}},"718",-1),yx={style:{"text-align":"left"}},xx={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},px=t("td",{style:{"text-align":"center"}},null,-1),bx={style:{"text-align":"left"}},jx=t("code",null,"数组",-1),kx=t("code",null,"二分查找",-1),Mx=t("code",null,"动态规划",-1),Hx=t("code",null,"3+",-1),Ix={style:{"text-align":"left"}},wx=t("td",{style:{"text-align":"center"}},"727",-1),vx={style:{"text-align":"left"}},qx={href:"https://leetcode.com/problems/minimum-window-subsequence",target:"_blank",rel:"noopener noreferrer"},zx=t("td",{style:{"text-align":"center"}},null,-1),Cx={style:{"text-align":"left"}},Ox=t("code",null,"字符串",-1),Lx=t("code",null,"动态规划",-1),Ex=t("code",null,"滑动窗口",-1),Px={style:{"text-align":"left"}},Kx=t("td",{style:{"text-align":"center"}},"730",-1),Vx={style:{"text-align":"left"}},Nx={href:"https://leetcode.com/problems/count-different-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},Dx=t("td",{style:{"text-align":"center"}},null,-1),Bx={style:{"text-align":"left"}},Yx=t("code",null,"字符串",-1),Ax=t("code",null,"动态规划",-1),Jx={style:{"text-align":"left"}},Rx=t("td",{style:{"text-align":"center"}},"740",-1),Sx={style:{"text-align":"left"}},Ux={href:"https://leetcode.com/problems/delete-and-earn",target:"_blank",rel:"noopener noreferrer"},Wx=t("td",{style:{"text-align":"center"}},null,-1),Xx={style:{"text-align":"left"}},Fx=t("code",null,"数组",-1),Gx=t("code",null,"哈希表",-1),Tx=t("code",null,"动态规划",-1),Qx={style:{"text-align":"left"}},Zx=t("td",{style:{"text-align":"center"}},"741",-1),$x={style:{"text-align":"left"}},t4={href:"https://leetcode.com/problems/cherry-pickup",target:"_blank",rel:"noopener noreferrer"},e4=t("td",{style:{"text-align":"center"}},null,-1),l4={style:{"text-align":"left"}},o4=t("code",null,"数组",-1),n4=t("code",null,"动态规划",-1),s4=t("code",null,"矩阵",-1),d4={style:{"text-align":"left"}},_4=t("td",{style:{"text-align":"center"}},"746",-1),i4={style:{"text-align":"left"}},c4={href:"https://leetcode.com/problems/min-cost-climbing-stairs",target:"_blank",rel:"noopener noreferrer"},a4=t("td",{style:{"text-align":"center"}},null,-1),r4={style:{"text-align":"left"}},h4=t("code",null,"数组",-1),u4=t("code",null,"动态规划",-1),f4={style:{"text-align":"left"}},g4=t("td",{style:{"text-align":"center"}},"750",-1),m4={style:{"text-align":"left"}},y4={href:"https://leetcode.com/problems/number-of-corner-rectangles",target:"_blank",rel:"noopener noreferrer"},x4=t("td",{style:{"text-align":"center"}},null,-1),p4={style:{"text-align":"left"}},b4=t("code",null,"数组",-1),j4=t("code",null,"数学",-1),k4=t("code",null,"动态规划",-1),M4=t("code",null,"1+",-1),H4={style:{"text-align":"left"}},I4=t("td",{style:{"text-align":"center"}},"764",-1),w4={style:{"text-align":"left"}},v4={href:"https://leetcode.com/problems/largest-plus-sign",target:"_blank",rel:"noopener noreferrer"},q4=t("td",{style:{"text-align":"center"}},null,-1),z4={style:{"text-align":"left"}},C4=t("code",null,"数组",-1),O4=t("code",null,"动态规划",-1),L4={style:{"text-align":"left"}},E4=t("td",{style:{"text-align":"center"}},"787",-1),P4={style:{"text-align":"left"}},K4={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},V4=t("td",{style:{"text-align":"center"}},null,-1),N4={style:{"text-align":"left"}},D4=t("code",null,"深度优先搜索",-1),B4=t("code",null,"广度优先搜索",-1),Y4=t("code",null,"图",-1),A4=t("code",null,"3+",-1),J4={style:{"text-align":"left"}},R4=t("td",{style:{"text-align":"center"}},"788",-1),S4={style:{"text-align":"left"}},U4={href:"https://leetcode.com/problems/rotated-digits",target:"_blank",rel:"noopener noreferrer"},W4=t("td",{style:{"text-align":"center"}},null,-1),X4={style:{"text-align":"left"}},F4=t("code",null,"数学",-1),G4=t("code",null,"动态规划",-1),T4={style:{"text-align":"left"}},Q4=t("td",{style:{"text-align":"center"}},"790",-1),Z4={style:{"text-align":"left"}},$4={href:"https://leetcode.com/problems/domino-and-tromino-tiling",target:"_blank",rel:"noopener noreferrer"},t2=t("td",{style:{"text-align":"center"}},null,-1),e2={style:{"text-align":"left"}},l2=t("code",null,"动态规划",-1),o2={style:{"text-align":"left"}},n2=t("td",{style:{"text-align":"center"}},"792",-1),s2={style:{"text-align":"left"}},d2={href:"https://leetcode.com/problems/number-of-matching-subsequences",target:"_blank",rel:"noopener noreferrer"},_2=t("td",{style:{"text-align":"center"}},null,-1),i2={style:{"text-align":"left"}},c2=t("code",null,"字典树",-1),a2=t("code",null,"数组",-1),r2=t("code",null,"哈希表",-1),h2=t("code",null,"4+",-1),u2={style:{"text-align":"left"}},f2=t("td",{style:{"text-align":"center"}},"799",-1),g2={style:{"text-align":"left"}},m2={href:"https://leetcode.com/problems/champagne-tower",target:"_blank",rel:"noopener noreferrer"},y2=t("td",{style:{"text-align":"center"}},null,-1),x2={style:{"text-align":"left"}},p2=t("code",null,"动态规划",-1),b2={style:{"text-align":"left"}},j2=t("td",{style:{"text-align":"center"}},"801",-1),k2={style:{"text-align":"left"}},M2={href:"https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing",target:"_blank",rel:"noopener noreferrer"},H2=t("td",{style:{"text-align":"center"}},null,-1),I2={style:{"text-align":"left"}},w2=t("code",null,"数组",-1),v2=t("code",null,"动态规划",-1),q2={style:{"text-align":"left"}},z2=t("td",{style:{"text-align":"center"}},"805",-1),C2={style:{"text-align":"left"}},O2={href:"https://leetcode.com/problems/split-array-with-same-average",target:"_blank",rel:"noopener noreferrer"},L2=t("td",{style:{"text-align":"center"}},null,-1),E2={style:{"text-align":"left"}},P2=t("code",null,"位运算",-1),K2=t("code",null,"数组",-1),V2=t("code",null,"数学",-1),N2=t("code",null,"2+",-1),D2={style:{"text-align":"left"}},B2=t("td",{style:{"text-align":"center"}},"808",-1),Y2={style:{"text-align":"left"}},A2={href:"https://leetcode.com/problems/soup-servings",target:"_blank",rel:"noopener noreferrer"},J2=t("td",{style:{"text-align":"center"}},null,-1),R2={style:{"text-align":"left"}},S2=t("code",null,"数学",-1),U2=t("code",null,"动态规划",-1),W2=t("code",null,"概率与统计",-1),X2={style:{"text-align":"left"}},F2=t("td",{style:{"text-align":"center"}},"813",-1),G2={style:{"text-align":"left"}},T2={href:"https://leetcode.com/problems/largest-sum-of-averages",target:"_blank",rel:"noopener noreferrer"},Q2=t("td",{style:{"text-align":"center"}},null,-1),Z2={style:{"text-align":"left"}},$2=t("code",null,"数组",-1),tp=t("code",null,"动态规划",-1),ep=t("code",null,"前缀和",-1),lp={style:{"text-align":"left"}},op=t("td",{style:{"text-align":"center"}},"818",-1),np={style:{"text-align":"left"}},sp={href:"https://leetcode.com/problems/race-car",target:"_blank",rel:"noopener noreferrer"},dp=t("td",{style:{"text-align":"center"}},null,-1),_p={style:{"text-align":"left"}},ip=t("code",null,"动态规划",-1),cp={style:{"text-align":"left"}},ap=t("td",{style:{"text-align":"center"}},"823",-1),rp={style:{"text-align":"left"}},hp={href:"https://leetcode.com/problems/binary-trees-with-factors",target:"_blank",rel:"noopener noreferrer"},up=t("td",{style:{"text-align":"center"}},null,-1),fp={style:{"text-align":"left"}},gp=t("code",null,"数组",-1),mp=t("code",null,"哈希表",-1),yp=t("code",null,"动态规划",-1),xp=t("code",null,"1+",-1),pp={style:{"text-align":"left"}},bp=t("td",{style:{"text-align":"center"}},"828",-1),jp={style:{"text-align":"left"}},kp={href:"https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string",target:"_blank",rel:"noopener noreferrer"},Mp=t("td",{style:{"text-align":"center"}},null,-1),Hp={style:{"text-align":"left"}},Ip=t("code",null,"哈希表",-1),wp=t("code",null,"字符串",-1),vp=t("code",null,"动态规划",-1),qp={style:{"text-align":"left"}},zp=t("td",{style:{"text-align":"center"}},"834",-1),Cp={style:{"text-align":"left"}},Op={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},Lp=t("td",{style:{"text-align":"center"}},null,-1),Ep={style:{"text-align":"left"}},Pp=t("code",null,"树",-1),Kp=t("code",null,"深度优先搜索",-1),Vp=t("code",null,"图",-1),Np=t("code",null,"1+",-1),Dp={style:{"text-align":"left"}},Bp=t("td",{style:{"text-align":"center"}},"837",-1),Yp={style:{"text-align":"left"}},Ap={href:"https://leetcode.com/problems/new-21-game",target:"_blank",rel:"noopener noreferrer"},Jp=t("td",{style:{"text-align":"center"}},null,-1),Rp={style:{"text-align":"left"}},Sp=t("code",null,"数学",-1),Up=t("code",null,"动态规划",-1),Wp=t("code",null,"滑动窗口",-1),Xp=t("code",null,"1+",-1),Fp={style:{"text-align":"left"}},Gp=t("td",{style:{"text-align":"center"}},"838",-1),Tp={style:{"text-align":"left"}},Qp={href:"https://leetcode.com/problems/push-dominoes",target:"_blank",rel:"noopener noreferrer"},Zp=t("td",{style:{"text-align":"center"}},null,-1),$p={style:{"text-align":"left"}},t5=t("code",null,"双指针",-1),e5=t("code",null,"字符串",-1),l5=t("code",null,"动态规划",-1),o5={style:{"text-align":"left"}},n5=t("td",{style:{"text-align":"center"}},"845",-1),s5={style:{"text-align":"left"}},d5={href:"https://leetcode.com/problems/longest-mountain-in-array",target:"_blank",rel:"noopener noreferrer"},_5=t("td",{style:{"text-align":"center"}},null,-1),i5={style:{"text-align":"left"}},c5=t("code",null,"数组",-1),a5=t("code",null,"双指针",-1),r5=t("code",null,"动态规划",-1),h5=t("code",null,"1+",-1),u5={style:{"text-align":"left"}},f5=t("td",{style:{"text-align":"center"}},"847",-1),g5={style:{"text-align":"left"}},m5={href:"https://leetcode.com/problems/shortest-path-visiting-all-nodes",target:"_blank",rel:"noopener noreferrer"},y5=t("td",{style:{"text-align":"center"}},null,-1),x5={style:{"text-align":"left"}},p5=t("code",null,"位运算",-1),b5=t("code",null,"广度优先搜索",-1),j5=t("code",null,"图",-1),k5=t("code",null,"2+",-1),M5={style:{"text-align":"left"}},H5=t("td",{style:{"text-align":"center"}},"871",-1),I5={style:{"text-align":"left"}},w5={href:"https://leetcode.com/problems/minimum-number-of-refueling-stops",target:"_blank",rel:"noopener noreferrer"},v5=t("td",{style:{"text-align":"center"}},null,-1),q5={style:{"text-align":"left"}},z5=t("code",null,"贪心",-1),C5=t("code",null,"数组",-1),O5=t("code",null,"动态规划",-1),L5=t("code",null,"1+",-1),E5={style:{"text-align":"left"}},P5=t("td",{style:{"text-align":"center"}},"873",-1),K5={style:{"text-align":"left"}},V5={href:"https://leetcode.com/problems/length-of-longest-fibonacci-subsequence",target:"_blank",rel:"noopener noreferrer"},N5=t("td",{style:{"text-align":"center"}},null,-1),D5={style:{"text-align":"left"}},B5=t("code",null,"数组",-1),Y5=t("code",null,"哈希表",-1),A5=t("code",null,"动态规划",-1),J5={style:{"text-align":"left"}},R5=t("td",{style:{"text-align":"center"}},"877",-1),S5={style:{"text-align":"left"}},U5={href:"https://leetcode.com/problems/stone-game",target:"_blank",rel:"noopener noreferrer"},W5=t("td",{style:{"text-align":"center"}},null,-1),X5={style:{"text-align":"left"}},F5=t("code",null,"数组",-1),G5=t("code",null,"数学",-1),T5=t("code",null,"动态规划",-1),Q5=t("code",null,"1+",-1),Z5={style:{"text-align":"left"}},$5=t("td",{style:{"text-align":"center"}},"879",-1),tb={style:{"text-align":"left"}},eb={href:"https://leetcode.com/problems/profitable-schemes",target:"_blank",rel:"noopener noreferrer"},lb=t("td",{style:{"text-align":"center"}},null,-1),ob={style:{"text-align":"left"}},nb=t("code",null,"数组",-1),sb=t("code",null,"动态规划",-1),db={style:{"text-align":"left"}},_b=t("td",{style:{"text-align":"center"}},"887",-1),ib={style:{"text-align":"left"}},cb={href:"https://leetcode.com/problems/super-egg-drop",target:"_blank",rel:"noopener noreferrer"},ab=t("td",{style:{"text-align":"center"}},null,-1),rb={style:{"text-align":"left"}},hb=t("code",null,"数学",-1),ub=t("code",null,"二分查找",-1),fb=t("code",null,"动态规划",-1),gb={style:{"text-align":"left"}},mb=t("td",{style:{"text-align":"center"}},"894",-1),yb={style:{"text-align":"left"}},xb={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},pb=t("td",{style:{"text-align":"center"}},null,-1),bb={style:{"text-align":"left"}},jb=t("code",null,"树",-1),kb=t("code",null,"递归",-1),Mb=t("code",null,"记忆化搜索",-1),Hb=t("code",null,"2+",-1),Ib={style:{"text-align":"left"}},wb=t("td",{style:{"text-align":"center"}},"898",-1),vb={style:{"text-align":"left"}},qb={href:"https://leetcode.com/problems/bitwise-ors-of-subarrays",target:"_blank",rel:"noopener noreferrer"},zb=t("td",{style:{"text-align":"center"}},null,-1),Cb={style:{"text-align":"left"}},Ob=t("code",null,"位运算",-1),Lb=t("code",null,"数组",-1),Eb=t("code",null,"动态规划",-1),Pb={style:{"text-align":"left"}},Kb=t("td",{style:{"text-align":"center"}},"902",-1),Vb={style:{"text-align":"left"}},Nb={href:"https://leetcode.com/problems/numbers-at-most-n-given-digit-set",target:"_blank",rel:"noopener noreferrer"},Db=t("td",{style:{"text-align":"center"}},null,-1),Bb={style:{"text-align":"left"}},Yb=t("code",null,"数组",-1),Ab=t("code",null,"数学",-1),Jb=t("code",null,"字符串",-1),Rb=t("code",null,"2+",-1),Sb={style:{"text-align":"left"}},Ub=t("td",{style:{"text-align":"center"}},"903",-1),Wb={style:{"text-align":"left"}},Xb={href:"https://leetcode.com/problems/valid-permutations-for-di-sequence",target:"_blank",rel:"noopener noreferrer"},Fb=t("td",{style:{"text-align":"center"}},null,-1),Gb={style:{"text-align":"left"}},Tb=t("code",null,"字符串",-1),Qb=t("code",null,"动态规划",-1),Zb=t("code",null,"前缀和",-1),$b={style:{"text-align":"left"}},t0=t("td",{style:{"text-align":"center"}},"907",-1),e0={style:{"text-align":"left"}},l0={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},o0=t("td",{style:{"text-align":"center"}},null,-1),n0={style:{"text-align":"left"}},s0=t("code",null,"栈",-1),d0=t("code",null,"数组",-1),_0=t("code",null,"动态规划",-1),i0=t("code",null,"1+",-1),c0={style:{"text-align":"left"}},a0=t("td",{style:{"text-align":"center"}},"913",-1),r0={style:{"text-align":"left"}},h0={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},u0=t("td",{style:{"text-align":"center"}},null,-1),f0={style:{"text-align":"left"}},g0=t("code",null,"图",-1),m0=t("code",null,"拓扑排序",-1),y0=t("code",null,"记忆化搜索",-1),x0=t("code",null,"3+",-1),p0={style:{"text-align":"left"}},b0=t("td",{style:{"text-align":"center"}},"918",-1),j0={style:{"text-align":"left"}},k0={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},M0={style:{"text-align":"center"}},H0={style:{"text-align":"left"}},I0=t("code",null,"队列",-1),w0=t("code",null,"数组",-1),v0=t("code",null,"分治",-1),q0=t("code",null,"2+",-1),z0={style:{"text-align":"left"}},C0=t("td",{style:{"text-align":"center"}},"920",-1),O0={style:{"text-align":"left"}},L0={href:"https://leetcode.com/problems/number-of-music-playlists",target:"_blank",rel:"noopener noreferrer"},E0=t("td",{style:{"text-align":"center"}},null,-1),P0={style:{"text-align":"left"}},K0=t("code",null,"数学",-1),V0=t("code",null,"动态规划",-1),N0=t("code",null,"组合数学",-1),D0={style:{"text-align":"left"}},B0=t("td",{style:{"text-align":"center"}},"926",-1),Y0={style:{"text-align":"left"}},A0={href:"https://leetcode.com/problems/flip-string-to-monotone-increasing",target:"_blank",rel:"noopener noreferrer"},J0=t("td",{style:{"text-align":"center"}},null,-1),R0={style:{"text-align":"left"}},S0=t("code",null,"字符串",-1),U0=t("code",null,"动态规划",-1),W0={style:{"text-align":"left"}},X0=t("td",{style:{"text-align":"center"}},"931",-1),F0={style:{"text-align":"left"}},G0={href:"https://leetcode.com/problems/minimum-falling-path-sum",target:"_blank",rel:"noopener noreferrer"},T0={style:{"text-align":"center"}},Q0={style:{"text-align":"left"}},Z0=t("code",null,"数组",-1),$0=t("code",null,"动态规划",-1),t8=t("code",null,"矩阵",-1),e8={style:{"text-align":"left"}},l8=t("td",{style:{"text-align":"center"}},"935",-1),o8={style:{"text-align":"left"}},n8={href:"https://leetcode.com/problems/knight-dialer",target:"_blank",rel:"noopener noreferrer"},s8=t("td",{style:{"text-align":"center"}},null,-1),d8={style:{"text-align":"left"}},_8=t("code",null,"动态规划",-1),i8={style:{"text-align":"left"}},c8=t("td",{style:{"text-align":"center"}},"940",-1),a8={style:{"text-align":"left"}},r8={href:"https://leetcode.com/problems/distinct-subsequences-ii",target:"_blank",rel:"noopener noreferrer"},h8=t("td",{style:{"text-align":"center"}},null,-1),u8={style:{"text-align":"left"}},f8=t("code",null,"字符串",-1),g8=t("code",null,"动态规划",-1),m8={style:{"text-align":"left"}},y8=t("td",{style:{"text-align":"center"}},"943",-1),x8={style:{"text-align":"left"}},p8={href:"https://leetcode.com/problems/find-the-shortest-superstring",target:"_blank",rel:"noopener noreferrer"},b8=t("td",{style:{"text-align":"center"}},null,-1),j8={style:{"text-align":"left"}},k8=t("code",null,"位运算",-1),M8=t("code",null,"数组",-1),H8=t("code",null,"字符串",-1),I8=t("code",null,"2+",-1),w8={style:{"text-align":"left"}},v8=t("td",{style:{"text-align":"center"}},"956",-1),q8={style:{"text-align":"left"}},z8={href:"https://leetcode.com/problems/tallest-billboard",target:"_blank",rel:"noopener noreferrer"},C8=t("td",{style:{"text-align":"center"}},null,-1),O8={style:{"text-align":"left"}},L8=t("code",null,"数组",-1),E8=t("code",null,"动态规划",-1),P8={style:{"text-align":"left"}},K8=t("td",{style:{"text-align":"center"}},"960",-1),V8={style:{"text-align":"left"}},N8={href:"https://leetcode.com/problems/delete-columns-to-make-sorted-iii",target:"_blank",rel:"noopener noreferrer"},D8=t("td",{style:{"text-align":"center"}},null,-1),B8={style:{"text-align":"left"}},Y8=t("code",null,"数组",-1),A8=t("code",null,"字符串",-1),J8=t("code",null,"动态规划",-1),R8={style:{"text-align":"left"}},S8=t("td",{style:{"text-align":"center"}},"964",-1),U8={style:{"text-align":"left"}},W8={href:"https://leetcode.com/problems/least-operators-to-express-number",target:"_blank",rel:"noopener noreferrer"},X8=t("td",{style:{"text-align":"center"}},null,-1),F8={style:{"text-align":"left"}},G8=t("code",null,"记忆化搜索",-1),T8=t("code",null,"数学",-1),Q8=t("code",null,"动态规划",-1),Z8={style:{"text-align":"left"}},$8=t("td",{style:{"text-align":"center"}},"968",-1),t6={style:{"text-align":"left"}},e6={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},l6=t("td",{style:{"text-align":"center"}},null,-1),o6={style:{"text-align":"left"}},n6=t("code",null,"树",-1),s6=t("code",null,"深度优先搜索",-1),d6=t("code",null,"动态规划",-1),_6=t("code",null,"1+",-1),i6={style:{"text-align":"left"}},c6=t("td",{style:{"text-align":"center"}},"975",-1),a6={style:{"text-align":"left"}},r6={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},h6=t("td",{style:{"text-align":"center"}},null,-1),u6={style:{"text-align":"left"}},f6=t("code",null,"栈",-1),g6=t("code",null,"数组",-1),m6=t("code",null,"动态规划",-1),y6=t("code",null,"2+",-1),x6={style:{"text-align":"left"}},p6=t("td",{style:{"text-align":"center"}},"978",-1),b6={style:{"text-align":"left"}},j6={href:"https://leetcode.com/problems/longest-turbulent-subarray",target:"_blank",rel:"noopener noreferrer"},k6=t("td",{style:{"text-align":"center"}},null,-1),M6={style:{"text-align":"left"}},H6=t("code",null,"数组",-1),I6=t("code",null,"动态规划",-1),w6=t("code",null,"滑动窗口",-1),v6={style:{"text-align":"left"}},q6=t("td",{style:{"text-align":"center"}},"983",-1),z6={style:{"text-align":"left"}},C6={href:"https://leetcode.com/problems/minimum-cost-for-tickets",target:"_blank",rel:"noopener noreferrer"},O6=t("td",{style:{"text-align":"center"}},null,-1),L6={style:{"text-align":"left"}},E6=t("code",null,"数组",-1),P6=t("code",null,"动态规划",-1),K6={style:{"text-align":"left"}},V6=t("td",{style:{"text-align":"center"}},"996",-1),N6={style:{"text-align":"left"}},D6={href:"https://leetcode.com/problems/number-of-squareful-arrays",target:"_blank",rel:"noopener noreferrer"},B6=t("td",{style:{"text-align":"center"}},null,-1),Y6={style:{"text-align":"left"}},A6=t("code",null,"位运算",-1),J6=t("code",null,"数组",-1),R6=t("code",null,"哈希表",-1),S6=t("code",null,"4+",-1),U6={style:{"text-align":"left"}},W6=t("td",{style:{"text-align":"center"}},"1000",-1),X6={style:{"text-align":"left"}},F6={href:"https://leetcode.com/problems/minimum-cost-to-merge-stones",target:"_blank",rel:"noopener noreferrer"},G6=t("td",{style:{"text-align":"center"}},null,-1),T6={style:{"text-align":"left"}},Q6=t("code",null,"数组",-1),Z6=t("code",null,"动态规划",-1),$6=t("code",null,"前缀和",-1),t7={style:{"text-align":"left"}},e7=t("td",{style:{"text-align":"center"}},"1012",-1),l7={style:{"text-align":"left"}},o7={href:"https://leetcode.com/problems/numbers-with-repeated-digits",target:"_blank",rel:"noopener noreferrer"},n7=t("td",{style:{"text-align":"center"}},null,-1),s7={style:{"text-align":"left"}},d7=t("code",null,"数学",-1),_7=t("code",null,"动态规划",-1),i7={style:{"text-align":"left"}},c7=t("td",{style:{"text-align":"center"}},"1014",-1),a7={style:{"text-align":"left"}},r7={href:"https://leetcode.com/problems/best-sightseeing-pair",target:"_blank",rel:"noopener noreferrer"},h7=t("td",{style:{"text-align":"center"}},null,-1),u7={style:{"text-align":"left"}},f7=t("code",null,"数组",-1),g7=t("code",null,"动态规划",-1),m7={style:{"text-align":"left"}},y7=t("td",{style:{"text-align":"center"}},"1024",-1),x7={style:{"text-align":"left"}},p7={href:"https://leetcode.com/problems/video-stitching",target:"_blank",rel:"noopener noreferrer"},b7=t("td",{style:{"text-align":"center"}},null,-1),j7={style:{"text-align":"left"}},k7=t("code",null,"贪心",-1),M7=t("code",null,"数组",-1),H7=t("code",null,"动态规划",-1),I7={style:{"text-align":"left"}},w7=t("td",{style:{"text-align":"center"}},"1025",-1),v7={style:{"text-align":"left"}},q7={href:"https://leetcode.com/problems/divisor-game",target:"_blank",rel:"noopener noreferrer"},z7=t("td",{style:{"text-align":"center"}},null,-1),C7={style:{"text-align":"left"}},O7=t("code",null,"脑筋急转弯",-1),L7=t("code",null,"数学",-1),E7=t("code",null,"动态规划",-1),P7=t("code",null,"1+",-1),K7={style:{"text-align":"left"}},V7=t("td",{style:{"text-align":"center"}},"1027",-1),N7={style:{"text-align":"left"}},D7={href:"https://leetcode.com/problems/longest-arithmetic-subsequence",target:"_blank",rel:"noopener noreferrer"},B7=t("td",{style:{"text-align":"center"}},null,-1),Y7={style:{"text-align":"left"}},A7=t("code",null,"数组",-1),J7=t("code",null,"哈希表",-1),R7=t("code",null,"二分查找",-1),S7=t("code",null,"1+",-1),U7={style:{"text-align":"left"}},W7=t("td",{style:{"text-align":"center"}},"1031",-1),X7={style:{"text-align":"left"}},F7={href:"https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays",target:"_blank",rel:"noopener noreferrer"},G7=t("td",{style:{"text-align":"center"}},null,-1),T7={style:{"text-align":"left"}},Q7=t("code",null,"数组",-1),Z7=t("code",null,"动态规划",-1),$7=t("code",null,"滑动窗口",-1),t9={style:{"text-align":"left"}},e9=t("td",{style:{"text-align":"center"}},"1035",-1),l9={style:{"text-align":"left"}},o9={href:"https://leetcode.com/problems/uncrossed-lines",target:"_blank",rel:"noopener noreferrer"},n9=t("td",{style:{"text-align":"center"}},null,-1),s9={style:{"text-align":"left"}},d9=t("code",null,"数组",-1),_9=t("code",null,"动态规划",-1),i9={style:{"text-align":"left"}},c9=t("td",{style:{"text-align":"center"}},"1039",-1),a9={style:{"text-align":"left"}},r9={href:"https://leetcode.com/problems/minimum-score-triangulation-of-polygon",target:"_blank",rel:"noopener noreferrer"},h9=t("td",{style:{"text-align":"center"}},null,-1),u9={style:{"text-align":"left"}},f9=t("code",null,"数组",-1),g9=t("code",null,"动态规划",-1),m9={style:{"text-align":"left"}},y9=t("td",{style:{"text-align":"center"}},"1043",-1),x9={style:{"text-align":"left"}},p9={href:"https://leetcode.com/problems/partition-array-for-maximum-sum",target:"_blank",rel:"noopener noreferrer"},b9=t("td",{style:{"text-align":"center"}},null,-1),j9={style:{"text-align":"left"}},k9=t("code",null,"数组",-1),M9=t("code",null,"动态规划",-1),H9={style:{"text-align":"left"}},I9=t("td",{style:{"text-align":"center"}},"1048",-1),w9={style:{"text-align":"left"}},v9={href:"https://leetcode.com/problems/longest-string-chain",target:"_blank",rel:"noopener noreferrer"},q9=t("td",{style:{"text-align":"center"}},null,-1),z9={style:{"text-align":"left"}},C9=t("code",null,"数组",-1),O9=t("code",null,"哈希表",-1),L9=t("code",null,"双指针",-1),E9=t("code",null,"3+",-1),P9={style:{"text-align":"left"}},K9=t("td",{style:{"text-align":"center"}},"1049",-1),V9={style:{"text-align":"left"}},N9={href:"https://leetcode.com/problems/last-stone-weight-ii",target:"_blank",rel:"noopener noreferrer"},D9={style:{"text-align":"center"}},B9={style:{"text-align":"left"}},Y9=t("code",null,"数组",-1),A9=t("code",null,"动态规划",-1),J9={style:{"text-align":"left"}},R9=t("td",{style:{"text-align":"center"}},"1062",-1),S9={style:{"text-align":"left"}},U9={href:"https://leetcode.com/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},W9=t("td",{style:{"text-align":"center"}},null,-1),X9={style:{"text-align":"left"}},F9=t("code",null,"字符串",-1),G9=t("code",null,"二分查找",-1),T9=t("code",null,"动态规划",-1),Q9=t("code",null,"3+",-1),Z9={style:{"text-align":"left"}},$9=t("td",{style:{"text-align":"center"}},"1066",-1),tj={style:{"text-align":"left"}},ej={href:"https://leetcode.com/problems/campus-bikes-ii",target:"_blank",rel:"noopener noreferrer"},lj=t("td",{style:{"text-align":"center"}},null,-1),oj={style:{"text-align":"left"}},nj=t("code",null,"位运算",-1),sj=t("code",null,"数组",-1),dj=t("code",null,"动态规划",-1),_j=t("code",null,"2+",-1),ij={style:{"text-align":"left"}},cj=t("td",{style:{"text-align":"center"}},"1067",-1),aj={style:{"text-align":"left"}},rj={href:"https://leetcode.com/problems/digit-count-in-range",target:"_blank",rel:"noopener noreferrer"},hj=t("td",{style:{"text-align":"center"}},null,-1),uj={style:{"text-align":"left"}},fj=t("code",null,"数学",-1),gj=t("code",null,"动态规划",-1),mj={style:{"text-align":"left"}},yj=t("td",{style:{"text-align":"center"}},"1092",-1),xj={style:{"text-align":"left"}},pj={href:"https://leetcode.com/problems/shortest-common-supersequence",target:"_blank",rel:"noopener noreferrer"},bj=t("td",{style:{"text-align":"center"}},null,-1),jj={style:{"text-align":"left"}},kj=t("code",null,"字符串",-1),Mj=t("code",null,"动态规划",-1),Hj={style:{"text-align":"left"}},Ij=t("td",{style:{"text-align":"center"}},"1105",-1),wj={style:{"text-align":"left"}},vj={href:"https://leetcode.com/problems/filling-bookcase-shelves",target:"_blank",rel:"noopener noreferrer"},qj=t("td",{style:{"text-align":"center"}},null,-1),zj={style:{"text-align":"left"}},Cj=t("code",null,"数组",-1),Oj=t("code",null,"动态规划",-1),Lj={style:{"text-align":"left"}},Ej=t("td",{style:{"text-align":"center"}},"1125",-1),Pj={style:{"text-align":"left"}},Kj={href:"https://leetcode.com/problems/smallest-sufficient-team",target:"_blank",rel:"noopener noreferrer"},Vj=t("td",{style:{"text-align":"center"}},null,-1),Nj={style:{"text-align":"left"}},Dj=t("code",null,"位运算",-1),Bj=t("code",null,"数组",-1),Yj=t("code",null,"动态规划",-1),Aj=t("code",null,"1+",-1),Jj={style:{"text-align":"left"}},Rj=t("td",{style:{"text-align":"center"}},"1130",-1),Sj={style:{"text-align":"left"}},Uj={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},Wj=t("td",{style:{"text-align":"center"}},null,-1),Xj={style:{"text-align":"left"}},Fj=t("code",null,"栈",-1),Gj=t("code",null,"贪心",-1),Tj=t("code",null,"数组",-1),Qj=t("code",null,"2+",-1),Zj={style:{"text-align":"left"}},$j=t("td",{style:{"text-align":"center"}},"1137",-1),tk={style:{"text-align":"left"}},ek={href:"https://leetcode.com/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},lk={style:{"text-align":"center"}},ok={style:{"text-align":"left"}},nk=t("code",null,"记忆化搜索",-1),sk=t("code",null,"数学",-1),dk=t("code",null,"动态规划",-1),_k={style:{"text-align":"left"}},ik=t("td",{style:{"text-align":"center"}},"1139",-1),ck={style:{"text-align":"left"}},ak={href:"https://leetcode.com/problems/largest-1-bordered-square",target:"_blank",rel:"noopener noreferrer"},rk=t("td",{style:{"text-align":"center"}},null,-1),hk={style:{"text-align":"left"}},uk=t("code",null,"数组",-1),fk=t("code",null,"动态规划",-1),gk=t("code",null,"矩阵",-1),mk={style:{"text-align":"left"}},yk=t("td",{style:{"text-align":"center"}},"1140",-1),xk={style:{"text-align":"left"}},pk={href:"https://leetcode.com/problems/stone-game-ii",target:"_blank",rel:"noopener noreferrer"},bk=t("td",{style:{"text-align":"center"}},null,-1),jk={style:{"text-align":"left"}},kk=t("code",null,"数组",-1),Mk=t("code",null,"数学",-1),Hk=t("code",null,"动态规划",-1),Ik=t("code",null,"2+",-1),wk={style:{"text-align":"left"}},vk=t("td",{style:{"text-align":"center"}},"1143",-1),qk={style:{"text-align":"left"}},zk={href:"https://leetcode.com/problems/longest-common-subsequence",target:"_blank",rel:"noopener noreferrer"},Ck={style:{"text-align":"center"}},Ok={style:{"text-align":"left"}},Lk=t("code",null,"字符串",-1),Ek=t("code",null,"动态规划",-1),Pk={style:{"text-align":"left"}},Kk=t("td",{style:{"text-align":"center"}},"1147",-1),Vk={style:{"text-align":"left"}},Nk={href:"https://leetcode.com/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},Dk=t("td",{style:{"text-align":"center"}},null,-1),Bk={style:{"text-align":"left"}},Yk=t("code",null,"贪心",-1),Ak=t("code",null,"双指针",-1),Jk=t("code",null,"字符串",-1),Rk=t("code",null,"3+",-1),Sk={style:{"text-align":"left"}},Uk=t("td",{style:{"text-align":"center"}},"1155",-1),Wk={style:{"text-align":"left"}},Xk={href:"https://leetcode.com/problems/number-of-dice-rolls-with-target-sum",target:"_blank",rel:"noopener noreferrer"},Fk=t("td",{style:{"text-align":"center"}},null,-1),Gk={style:{"text-align":"left"}},Tk=t("code",null,"动态规划",-1),Qk={style:{"text-align":"left"}},Zk=t("td",{style:{"text-align":"center"}},"1162",-1),$k={style:{"text-align":"left"}},tM={href:"https://leetcode.com/problems/as-far-from-land-as-possible",target:"_blank",rel:"noopener noreferrer"},eM=t("td",{style:{"text-align":"center"}},null,-1),lM={style:{"text-align":"left"}},oM=t("code",null,"广度优先搜索",-1),nM=t("code",null,"数组",-1),sM=t("code",null,"动态规划",-1),dM=t("code",null,"1+",-1),_M={style:{"text-align":"left"}},iM=t("td",{style:{"text-align":"center"}},"1182",-1),cM={style:{"text-align":"left"}},aM={href:"https://leetcode.com/problems/shortest-distance-to-target-color",target:"_blank",rel:"noopener noreferrer"},rM=t("td",{style:{"text-align":"center"}},null,-1),hM={style:{"text-align":"left"}},uM=t("code",null,"数组",-1),fM=t("code",null,"二分查找",-1),gM=t("code",null,"动态规划",-1),mM={style:{"text-align":"left"}},yM=t("td",{style:{"text-align":"center"}},"1186",-1),xM={style:{"text-align":"left"}},pM={href:"https://leetcode.com/problems/maximum-subarray-sum-with-one-deletion",target:"_blank",rel:"noopener noreferrer"},bM=t("td",{style:{"text-align":"center"}},null,-1),jM={style:{"text-align":"left"}},kM=t("code",null,"数组",-1),MM=t("code",null,"动态规划",-1),HM={style:{"text-align":"left"}},IM=t("td",{style:{"text-align":"center"}},"1187",-1),wM={style:{"text-align":"left"}},vM={href:"https://leetcode.com/problems/make-array-strictly-increasing",target:"_blank",rel:"noopener noreferrer"},qM=t("td",{style:{"text-align":"center"}},null,-1),zM={style:{"text-align":"left"}},CM=t("code",null,"数组",-1),OM=t("code",null,"二分查找",-1),LM=t("code",null,"动态规划",-1),EM=t("code",null,"1+",-1),PM={style:{"text-align":"left"}},KM=t("td",{style:{"text-align":"center"}},"1191",-1),VM={style:{"text-align":"left"}},NM={href:"https://leetcode.com/problems/k-concatenation-maximum-sum",target:"_blank",rel:"noopener noreferrer"},DM=t("td",{style:{"text-align":"center"}},null,-1),BM={style:{"text-align":"left"}},YM=t("code",null,"数组",-1),AM=t("code",null,"动态规划",-1),JM={style:{"text-align":"left"}},RM=t("td",{style:{"text-align":"center"}},"1216",-1),SM={style:{"text-align":"left"}},UM={href:"https://leetcode.com/problems/valid-palindrome-iii",target:"_blank",rel:"noopener noreferrer"},WM=t("td",{style:{"text-align":"center"}},null,-1),XM={style:{"text-align":"left"}},FM=t("code",null,"字符串",-1),GM=t("code",null,"动态规划",-1),TM={style:{"text-align":"left"}},QM=t("td",{style:{"text-align":"center"}},"1218",-1),ZM={style:{"text-align":"left"}},$M={href:"https://leetcode.com/problems/longest-arithmetic-subsequence-of-given-difference",target:"_blank",rel:"noopener noreferrer"},tH=t("td",{style:{"text-align":"center"}},null,-1),eH={style:{"text-align":"left"}},lH=t("code",null,"数组",-1),oH=t("code",null,"哈希表",-1),nH=t("code",null,"动态规划",-1),sH={style:{"text-align":"left"}},dH=t("td",{style:{"text-align":"center"}},"1220",-1),_H={style:{"text-align":"left"}},iH={href:"https://leetcode.com/problems/count-vowels-permutation",target:"_blank",rel:"noopener noreferrer"},cH=t("td",{style:{"text-align":"center"}},null,-1),aH={style:{"text-align":"left"}},rH=t("code",null,"动态规划",-1),hH={style:{"text-align":"left"}},uH=t("td",{style:{"text-align":"center"}},"1223",-1),fH={style:{"text-align":"left"}},gH={href:"https://leetcode.com/problems/dice-roll-simulation",target:"_blank",rel:"noopener noreferrer"},mH=t("td",{style:{"text-align":"center"}},null,-1),yH={style:{"text-align":"left"}},xH=t("code",null,"数组",-1),pH=t("code",null,"动态规划",-1),bH={style:{"text-align":"left"}},jH=t("td",{style:{"text-align":"center"}},"1227",-1),kH={style:{"text-align":"left"}},MH={href:"https://leetcode.com/problems/airplane-seat-assignment-probability",target:"_blank",rel:"noopener noreferrer"},HH=t("td",{style:{"text-align":"center"}},null,-1),IH={style:{"text-align":"left"}},wH=t("code",null,"脑筋急转弯",-1),vH=t("code",null,"数学",-1),qH=t("code",null,"动态规划",-1),zH=t("code",null,"1+",-1),CH={style:{"text-align":"left"}},OH=t("td",{style:{"text-align":"center"}},"1230",-1),LH={style:{"text-align":"left"}},EH={href:"https://leetcode.com/problems/toss-strange-coins",target:"_blank",rel:"noopener noreferrer"},PH=t("td",{style:{"text-align":"center"}},null,-1),KH={style:{"text-align":"left"}},VH=t("code",null,"数组",-1),NH=t("code",null,"数学",-1),DH=t("code",null,"动态规划",-1),BH=t("code",null,"1+",-1),YH={style:{"text-align":"left"}},AH=t("td",{style:{"text-align":"center"}},"1235",-1),JH={style:{"text-align":"left"}},RH={href:"https://leetcode.com/problems/maximum-profit-in-job-scheduling",target:"_blank",rel:"noopener noreferrer"},SH=t("td",{style:{"text-align":"center"}},null,-1),UH={style:{"text-align":"left"}},WH=t("code",null,"数组",-1),XH=t("code",null,"二分查找",-1),FH=t("code",null,"动态规划",-1),GH=t("code",null,"1+",-1),TH={style:{"text-align":"left"}},QH=t("td",{style:{"text-align":"center"}},"1246",-1),ZH={style:{"text-align":"left"}},$H={href:"https://leetcode.com/problems/palindrome-removal",target:"_blank",rel:"noopener noreferrer"},tI=t("td",{style:{"text-align":"center"}},null,-1),eI={style:{"text-align":"left"}},lI=t("code",null,"数组",-1),oI=t("code",null,"动态规划",-1),nI={style:{"text-align":"left"}},sI=t("td",{style:{"text-align":"center"}},"1255",-1),dI={style:{"text-align":"left"}},_I={href:"https://leetcode.com/problems/maximum-score-words-formed-by-letters",target:"_blank",rel:"noopener noreferrer"},iI=t("td",{style:{"text-align":"center"}},null,-1),cI={style:{"text-align":"left"}},aI=t("code",null,"位运算",-1),rI=t("code",null,"数组",-1),hI=t("code",null,"字符串",-1),uI=t("code",null,"3+",-1),fI={style:{"text-align":"left"}},gI=t("td",{style:{"text-align":"center"}},"1259",-1),mI={style:{"text-align":"left"}},yI={href:"https://leetcode.com/problems/handshakes-that-dont-cross",target:"_blank",rel:"noopener noreferrer"},xI=t("td",{style:{"text-align":"center"}},null,-1),pI={style:{"text-align":"left"}},bI=t("code",null,"数学",-1),jI=t("code",null,"动态规划",-1),kI={style:{"text-align":"left"}},MI=t("td",{style:{"text-align":"center"}},"1262",-1),HI={style:{"text-align":"left"}},II={href:"https://leetcode.com/problems/greatest-sum-divisible-by-three",target:"_blank",rel:"noopener noreferrer"},wI=t("td",{style:{"text-align":"center"}},null,-1),vI={style:{"text-align":"left"}},qI=t("code",null,"贪心",-1),zI=t("code",null,"数组",-1),CI=t("code",null,"动态规划",-1),OI=t("code",null,"1+",-1),LI={style:{"text-align":"left"}},EI=t("td",{style:{"text-align":"center"}},"1269",-1),PI={style:{"text-align":"left"}},KI={href:"https://leetcode.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps",target:"_blank",rel:"noopener noreferrer"},VI=t("td",{style:{"text-align":"center"}},null,-1),NI={style:{"text-align":"left"}},DI=t("code",null,"动态规划",-1),BI={style:{"text-align":"left"}},YI=t("td",{style:{"text-align":"center"}},"1277",-1),AI={style:{"text-align":"left"}},JI={href:"https://leetcode.com/problems/count-square-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},RI=t("td",{style:{"text-align":"center"}},null,-1),SI={style:{"text-align":"left"}},UI=t("code",null,"数组",-1),WI=t("code",null,"动态规划",-1),XI=t("code",null,"矩阵",-1),FI={style:{"text-align":"left"}},GI=t("td",{style:{"text-align":"center"}},"1278",-1),TI={style:{"text-align":"left"}},QI={href:"https://leetcode.com/problems/palindrome-partitioning-iii",target:"_blank",rel:"noopener noreferrer"},ZI=t("td",{style:{"text-align":"center"}},null,-1),$I={style:{"text-align":"left"}},tw=t("code",null,"字符串",-1),ew=t("code",null,"动态规划",-1),lw={style:{"text-align":"left"}},ow=t("td",{style:{"text-align":"center"}},"1289",-1),nw={style:{"text-align":"left"}},sw={href:"https://leetcode.com/problems/minimum-falling-path-sum-ii",target:"_blank",rel:"noopener noreferrer"},dw=t("td",{style:{"text-align":"center"}},null,-1),_w={style:{"text-align":"left"}},iw=t("code",null,"数组",-1),cw=t("code",null,"动态规划",-1),aw=t("code",null,"矩阵",-1),rw={style:{"text-align":"left"}},hw=t("td",{style:{"text-align":"center"}},"1301",-1),uw={style:{"text-align":"left"}},fw={href:"https://leetcode.com/problems/number-of-paths-with-max-score",target:"_blank",rel:"noopener noreferrer"},gw=t("td",{style:{"text-align":"center"}},null,-1),mw={style:{"text-align":"left"}},yw=t("code",null,"数组",-1),xw=t("code",null,"动态规划",-1),pw=t("code",null,"矩阵",-1),bw={style:{"text-align":"left"}},jw=t("td",{style:{"text-align":"center"}},"1312",-1),kw={style:{"text-align":"left"}},Mw={href:"https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome",target:"_blank",rel:"noopener noreferrer"},Hw={style:{"text-align":"center"}},Iw={style:{"text-align":"left"}},ww=t("code",null,"字符串",-1),vw=t("code",null,"动态规划",-1),qw={style:{"text-align":"left"}},zw=t("td",{style:{"text-align":"center"}},"1320",-1),Cw={style:{"text-align":"left"}},Ow={href:"https://leetcode.com/problems/minimum-distance-to-type-a-word-using-two-fingers",target:"_blank",rel:"noopener noreferrer"},Lw=t("td",{style:{"text-align":"center"}},null,-1),Ew={style:{"text-align":"left"}},Pw=t("code",null,"字符串",-1),Kw=t("code",null,"动态规划",-1),Vw={style:{"text-align":"left"}},Nw=t("td",{style:{"text-align":"center"}},"1326",-1),Dw={style:{"text-align":"left"}},Bw={href:"https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden",target:"_blank",rel:"noopener noreferrer"},Yw=t("td",{style:{"text-align":"center"}},null,-1),Aw={style:{"text-align":"left"}},Jw=t("code",null,"贪心",-1),Rw=t("code",null,"数组",-1),Sw=t("code",null,"动态规划",-1),Uw={style:{"text-align":"left"}},Ww=t("td",{style:{"text-align":"center"}},"1334",-1),Xw={style:{"text-align":"left"}},Fw={href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},Gw=t("td",{style:{"text-align":"center"}},null,-1),Tw={style:{"text-align":"left"}},Qw=t("code",null,"图",-1),Zw=t("code",null,"动态规划",-1),$w=t("code",null,"最短路",-1),tv={style:{"text-align":"left"}},ev=t("td",{style:{"text-align":"center"}},"1335",-1),lv={style:{"text-align":"left"}},ov={href:"https://leetcode.com/problems/minimum-difficulty-of-a-job-schedule",target:"_blank",rel:"noopener noreferrer"},nv=t("td",{style:{"text-align":"center"}},null,-1),sv={style:{"text-align":"left"}},dv=t("code",null,"数组",-1),_v=t("code",null,"动态规划",-1),iv={style:{"text-align":"left"}},cv=t("td",{style:{"text-align":"center"}},"1340",-1),av={style:{"text-align":"left"}},rv={href:"https://leetcode.com/problems/jump-game-v",target:"_blank",rel:"noopener noreferrer"},hv=t("td",{style:{"text-align":"center"}},null,-1),uv={style:{"text-align":"left"}},fv=t("code",null,"数组",-1),gv=t("code",null,"动态规划",-1),mv=t("code",null,"排序",-1),yv={style:{"text-align":"left"}},xv=t("td",{style:{"text-align":"center"}},"1349",-1),pv={style:{"text-align":"left"}},bv={href:"https://leetcode.com/problems/maximum-students-taking-exam",target:"_blank",rel:"noopener noreferrer"},jv=t("td",{style:{"text-align":"center"}},null,-1),kv={style:{"text-align":"left"}},Mv=t("code",null,"位运算",-1),Hv=t("code",null,"数组",-1),Iv=t("code",null,"动态规划",-1),wv=t("code",null,"2+",-1),vv={style:{"text-align":"left"}},qv=t("td",{style:{"text-align":"center"}},"1359",-1),zv={style:{"text-align":"left"}},Cv={href:"https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options",target:"_blank",rel:"noopener noreferrer"},Ov=t("td",{style:{"text-align":"center"}},null,-1),Lv={style:{"text-align":"left"}},Ev=t("code",null,"数学",-1),Pv=t("code",null,"动态规划",-1),Kv=t("code",null,"组合数学",-1),Vv={style:{"text-align":"left"}},Nv=t("td",{style:{"text-align":"center"}},"1363",-1),Dv={style:{"text-align":"left"}},Bv={href:"https://leetcode.com/problems/largest-multiple-of-three",target:"_blank",rel:"noopener noreferrer"},Yv=t("td",{style:{"text-align":"center"}},null,-1),Av={style:{"text-align":"left"}},Jv=t("code",null,"贪心",-1),Rv=t("code",null,"数组",-1),Sv=t("code",null,"动态规划",-1),Uv={style:{"text-align":"left"}},Wv=t("td",{style:{"text-align":"center"}},"1372",-1),Xv={style:{"text-align":"left"}},Fv={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Gv=t("td",{style:{"text-align":"center"}},null,-1),Tv={style:{"text-align":"left"}},Qv=t("code",null,"树",-1),Zv=t("code",null,"深度优先搜索",-1),$v=t("code",null,"动态规划",-1),tq=t("code",null,"1+",-1),eq={style:{"text-align":"left"}},lq=t("td",{style:{"text-align":"center"}},"1373",-1),oq={style:{"text-align":"left"}},nq={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},sq=t("td",{style:{"text-align":"center"}},null,-1),dq={style:{"text-align":"left"}},_q=t("code",null,"树",-1),iq=t("code",null,"深度优先搜索",-1),cq=t("code",null,"二叉搜索树",-1),aq=t("code",null,"2+",-1),rq={style:{"text-align":"left"}},hq=t("td",{style:{"text-align":"center"}},"1387",-1),uq={style:{"text-align":"left"}},fq={href:"https://leetcode.com/problems/sort-integers-by-the-power-value",target:"_blank",rel:"noopener noreferrer"},gq=t("td",{style:{"text-align":"center"}},null,-1),mq={style:{"text-align":"left"}},yq=t("code",null,"记忆化搜索",-1),xq=t("code",null,"动态规划",-1),pq=t("code",null,"排序",-1),bq={style:{"text-align":"left"}},jq=t("td",{style:{"text-align":"center"}},"1388",-1),kq={style:{"text-align":"left"}},Mq={href:"https://leetcode.com/problems/pizza-with-3n-slices",target:"_blank",rel:"noopener noreferrer"},Hq=t("td",{style:{"text-align":"center"}},null,-1),Iq={style:{"text-align":"left"}},wq=t("code",null,"贪心",-1),vq=t("code",null,"数组",-1),qq=t("code",null,"动态规划",-1),zq=t("code",null,"1+",-1),Cq={style:{"text-align":"left"}},Oq=t("td",{style:{"text-align":"center"}},"1395",-1),Lq={style:{"text-align":"left"}},Eq={href:"https://leetcode.com/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},Pq=t("td",{style:{"text-align":"center"}},null,-1),Kq={style:{"text-align":"left"}},Vq=t("code",null,"树状数组",-1),Nq=t("code",null,"线段树",-1),Dq=t("code",null,"数组",-1),Bq=t("code",null,"1+",-1),Yq={style:{"text-align":"left"}},Aq=t("td",{style:{"text-align":"center"}},"1397",-1),Jq={style:{"text-align":"left"}},Rq={href:"https://leetcode.com/problems/find-all-good-strings",target:"_blank",rel:"noopener noreferrer"},Sq=t("td",{style:{"text-align":"center"}},null,-1),Uq={style:{"text-align":"left"}},Wq=t("code",null,"字符串",-1),Xq=t("code",null,"动态规划",-1),Fq=t("code",null,"字符串匹配",-1),Gq={style:{"text-align":"left"}},Tq=t("td",{style:{"text-align":"center"}},"1402",-1),Qq={style:{"text-align":"left"}},Zq={href:"https://leetcode.com/problems/reducing-dishes",target:"_blank",rel:"noopener noreferrer"},$q=t("td",{style:{"text-align":"center"}},null,-1),tz={style:{"text-align":"left"}},ez=t("code",null,"贪心",-1),lz=t("code",null,"数组",-1),oz=t("code",null,"动态规划",-1),nz=t("code",null,"1+",-1),sz={style:{"text-align":"left"}},dz=t("td",{style:{"text-align":"center"}},"1406",-1),_z={style:{"text-align":"left"}},iz={href:"https://leetcode.com/problems/stone-game-iii",target:"_blank",rel:"noopener noreferrer"},cz=t("td",{style:{"text-align":"center"}},null,-1),az={style:{"text-align":"left"}},rz=t("code",null,"数组",-1),hz=t("code",null,"数学",-1),uz=t("code",null,"动态规划",-1),fz=t("code",null,"1+",-1),gz={style:{"text-align":"left"}},mz=t("td",{style:{"text-align":"center"}},"1411",-1),yz={style:{"text-align":"left"}},xz={href:"https://leetcode.com/problems/number-of-ways-to-paint-n-3-grid",target:"_blank",rel:"noopener noreferrer"},pz=t("td",{style:{"text-align":"center"}},null,-1),bz={style:{"text-align":"left"}},jz=t("code",null,"动态规划",-1),kz={style:{"text-align":"left"}},Mz=t("td",{style:{"text-align":"center"}},"1416",-1),Hz={style:{"text-align":"left"}},Iz={href:"https://leetcode.com/problems/restore-the-array",target:"_blank",rel:"noopener noreferrer"},wz=t("td",{style:{"text-align":"center"}},null,-1),vz={style:{"text-align":"left"}},qz=t("code",null,"字符串",-1),zz=t("code",null,"动态规划",-1),Cz={style:{"text-align":"left"}},Oz=t("td",{style:{"text-align":"center"}},"1420",-1),Lz={style:{"text-align":"left"}},Ez={href:"https://leetcode.com/problems/build-array-where-you-can-find-the-maximum-exactly-k-comparisons",target:"_blank",rel:"noopener noreferrer"},Pz=t("td",{style:{"text-align":"center"}},null,-1),Kz={style:{"text-align":"left"}},Vz=t("code",null,"动态规划",-1),Nz=t("code",null,"前缀和",-1),Dz={style:{"text-align":"left"}},Bz=t("td",{style:{"text-align":"center"}},"1425",-1),Yz={style:{"text-align":"left"}},Az={href:"https://leetcode.com/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},Jz=t("td",{style:{"text-align":"center"}},null,-1),Rz={style:{"text-align":"left"}},Sz=t("code",null,"队列",-1),Uz=t("code",null,"数组",-1),Wz=t("code",null,"动态规划",-1),Xz=t("code",null,"3+",-1),Fz={style:{"text-align":"left"}},Gz=t("td",{style:{"text-align":"center"}},"1434",-1),Tz={style:{"text-align":"left"}},Qz={href:"https://leetcode.com/problems/number-of-ways-to-wear-different-hats-to-each-other",target:"_blank",rel:"noopener noreferrer"},Zz=t("td",{style:{"text-align":"center"}},null,-1),$z={style:{"text-align":"left"}},tC=t("code",null,"位运算",-1),eC=t("code",null,"数组",-1),lC=t("code",null,"动态规划",-1),oC=t("code",null,"1+",-1),nC={style:{"text-align":"left"}},sC=t("td",{style:{"text-align":"center"}},"1444",-1),dC={style:{"text-align":"left"}},_C={href:"https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza",target:"_blank",rel:"noopener noreferrer"},iC=t("td",{style:{"text-align":"center"}},null,-1),cC={style:{"text-align":"left"}},aC=t("code",null,"记忆化搜索",-1),rC=t("code",null,"数组",-1),hC=t("code",null,"动态规划",-1),uC=t("code",null,"1+",-1),fC={style:{"text-align":"left"}},gC=t("td",{style:{"text-align":"center"}},"1449",-1),mC={style:{"text-align":"left"}},yC={href:"https://leetcode.com/problems/form-largest-integer-with-digits-that-add-up-to-target",target:"_blank",rel:"noopener noreferrer"},xC=t("td",{style:{"text-align":"center"}},null,-1),pC={style:{"text-align":"left"}},bC=t("code",null,"数组",-1),jC=t("code",null,"动态规划",-1),kC={style:{"text-align":"left"}},MC=t("td",{style:{"text-align":"center"}},"1458",-1),HC={style:{"text-align":"left"}},IC={href:"https://leetcode.com/problems/max-dot-product-of-two-subsequences",target:"_blank",rel:"noopener noreferrer"},wC=t("td",{style:{"text-align":"center"}},null,-1),vC={style:{"text-align":"left"}},qC=t("code",null,"数组",-1),zC=t("code",null,"动态规划",-1),CC={style:{"text-align":"left"}},OC=t("td",{style:{"text-align":"center"}},"1463",-1),LC={style:{"text-align":"left"}},EC={href:"https://leetcode.com/problems/cherry-pickup-ii",target:"_blank",rel:"noopener noreferrer"},PC=t("td",{style:{"text-align":"center"}},null,-1),KC={style:{"text-align":"left"}},VC=t("code",null,"数组",-1),NC=t("code",null,"动态规划",-1),DC=t("code",null,"矩阵",-1),BC={style:{"text-align":"left"}},YC=t("td",{style:{"text-align":"center"}},"1467",-1),AC={style:{"text-align":"left"}},JC={href:"https://leetcode.com/problems/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",target:"_blank",rel:"noopener noreferrer"},RC=t("td",{style:{"text-align":"center"}},null,-1),SC={style:{"text-align":"left"}},UC=t("code",null,"数组",-1),WC=t("code",null,"数学",-1),XC=t("code",null,"动态规划",-1),FC=t("code",null,"3+",-1),GC={style:{"text-align":"left"}},TC=t("td",{style:{"text-align":"center"}},"1473",-1),QC={style:{"text-align":"left"}},ZC={href:"https://leetcode.com/problems/paint-house-iii",target:"_blank",rel:"noopener noreferrer"},$C=t("td",{style:{"text-align":"center"}},null,-1),tO={style:{"text-align":"left"}},eO=t("code",null,"数组",-1),lO=t("code",null,"动态规划",-1),oO={style:{"text-align":"left"}},nO=t("td",{style:{"text-align":"center"}},"1477",-1),sO={style:{"text-align":"left"}},dO={href:"https://leetcode.com/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum",target:"_blank",rel:"noopener noreferrer"},_O=t("td",{style:{"text-align":"center"}},null,-1),iO={style:{"text-align":"left"}},cO=t("code",null,"数组",-1),aO=t("code",null,"哈希表",-1),rO=t("code",null,"二分查找",-1),hO=t("code",null,"2+",-1),uO={style:{"text-align":"left"}},fO=t("td",{style:{"text-align":"center"}},"1478",-1),gO={style:{"text-align":"left"}},mO={href:"https://leetcode.com/problems/allocate-mailboxes",target:"_blank",rel:"noopener noreferrer"},yO=t("td",{style:{"text-align":"center"}},null,-1),xO={style:{"text-align":"left"}},pO=t("code",null,"数组",-1),bO=t("code",null,"数学",-1),jO=t("code",null,"动态规划",-1),kO=t("code",null,"1+",-1),MO={style:{"text-align":"left"}},HO=t("td",{style:{"text-align":"center"}},"1483",-1),IO={style:{"text-align":"left"}},wO={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},vO=t("td",{style:{"text-align":"center"}},null,-1),qO={style:{"text-align":"left"}},zO=t("code",null,"树",-1),CO=t("code",null,"深度优先搜索",-1),OO=t("code",null,"广度优先搜索",-1),LO=t("code",null,"3+",-1),EO={style:{"text-align":"left"}},PO=t("td",{style:{"text-align":"center"}},"1493",-1),KO={style:{"text-align":"left"}},VO={href:"https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element",target:"_blank",rel:"noopener noreferrer"},NO=t("td",{style:{"text-align":"center"}},null,-1),DO={style:{"text-align":"left"}},BO=t("code",null,"数组",-1),YO=t("code",null,"动态规划",-1),AO=t("code",null,"滑动窗口",-1),JO={style:{"text-align":"left"}},RO=t("td",{style:{"text-align":"center"}},"1494",-1),SO={style:{"text-align":"left"}},UO={href:"https://leetcode.com/problems/parallel-courses-ii",target:"_blank",rel:"noopener noreferrer"},WO=t("td",{style:{"text-align":"center"}},null,-1),XO={style:{"text-align":"left"}},FO=t("code",null,"位运算",-1),GO=t("code",null,"图",-1),TO=t("code",null,"动态规划",-1),QO=t("code",null,"1+",-1),ZO={style:{"text-align":"left"}},$O=t("td",{style:{"text-align":"center"}},"1504",-1),tL={style:{"text-align":"left"}},eL={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},lL=t("td",{style:{"text-align":"center"}},null,-1),oL={style:{"text-align":"left"}},nL=t("code",null,"栈",-1),sL=t("code",null,"数组",-1),dL=t("code",null,"动态规划",-1),_L=t("code",null,"2+",-1),iL={style:{"text-align":"left"}},cL=t("td",{style:{"text-align":"center"}},"1510",-1),aL={style:{"text-align":"left"}},rL={href:"https://leetcode.com/problems/stone-game-iv",target:"_blank",rel:"noopener noreferrer"},hL=t("td",{style:{"text-align":"center"}},null,-1),uL={style:{"text-align":"left"}},fL=t("code",null,"数学",-1),gL=t("code",null,"动态规划",-1),mL=t("code",null,"博弈",-1),yL={style:{"text-align":"left"}},xL=t("td",{style:{"text-align":"center"}},"1524",-1),pL={style:{"text-align":"left"}},bL={href:"https://leetcode.com/problems/number-of-sub-arrays-with-odd-sum",target:"_blank",rel:"noopener noreferrer"},jL=t("td",{style:{"text-align":"center"}},null,-1),kL={style:{"text-align":"left"}},ML=t("code",null,"数组",-1),HL=t("code",null,"数学",-1),IL=t("code",null,"动态规划",-1),wL=t("code",null,"1+",-1),vL={style:{"text-align":"left"}},qL=t("td",{style:{"text-align":"center"}},"1525",-1),zL={style:{"text-align":"left"}},CL={href:"https://leetcode.com/problems/number-of-good-ways-to-split-a-string",target:"_blank",rel:"noopener noreferrer"},OL=t("td",{style:{"text-align":"center"}},null,-1),LL={style:{"text-align":"left"}},EL=t("code",null,"位运算",-1),PL=t("code",null,"哈希表",-1),KL=t("code",null,"字符串",-1),VL=t("code",null,"1+",-1),NL={style:{"text-align":"left"}},DL=t("td",{style:{"text-align":"center"}},"1526",-1),BL={style:{"text-align":"left"}},YL={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},AL=t("td",{style:{"text-align":"center"}},null,-1),JL={style:{"text-align":"left"}},RL=t("code",null,"栈",-1),SL=t("code",null,"贪心",-1),UL=t("code",null,"数组",-1),WL=t("code",null,"2+",-1),XL={style:{"text-align":"left"}},FL=t("td",{style:{"text-align":"center"}},"1531",-1),GL={style:{"text-align":"left"}},TL={href:"https://leetcode.com/problems/string-compression-ii",target:"_blank",rel:"noopener noreferrer"},QL=t("td",{style:{"text-align":"center"}},null,-1),ZL={style:{"text-align":"left"}},$L=t("code",null,"字符串",-1),tE=t("code",null,"动态规划",-1),eE={style:{"text-align":"left"}},lE=t("td",{style:{"text-align":"center"}},"1537",-1),oE={style:{"text-align":"left"}},nE={href:"https://leetcode.com/problems/get-the-maximum-score",target:"_blank",rel:"noopener noreferrer"},sE=t("td",{style:{"text-align":"center"}},null,-1),dE={style:{"text-align":"left"}},_E=t("code",null,"贪心",-1),iE=t("code",null,"数组",-1),cE=t("code",null,"双指针",-1),aE=t("code",null,"1+",-1),rE={style:{"text-align":"left"}},hE=t("td",{style:{"text-align":"center"}},"1547",-1),uE={style:{"text-align":"left"}},fE={href:"https://leetcode.com/problems/minimum-cost-to-cut-a-stick",target:"_blank",rel:"noopener noreferrer"},gE=t("td",{style:{"text-align":"center"}},null,-1),mE={style:{"text-align":"left"}},yE=t("code",null,"数组",-1),xE=t("code",null,"动态规划",-1),pE=t("code",null,"排序",-1),bE={style:{"text-align":"left"}},jE=t("td",{style:{"text-align":"center"}},"1548",-1),kE={style:{"text-align":"left"}},ME={href:"https://leetcode.com/problems/the-most-similar-path-in-a-graph",target:"_blank",rel:"noopener noreferrer"},HE=t("td",{style:{"text-align":"center"}},null,-1),IE={style:{"text-align":"left"}},wE=t("code",null,"图",-1),vE=t("code",null,"动态规划",-1),qE={style:{"text-align":"left"}},zE=t("td",{style:{"text-align":"center"}},"1553",-1),CE={style:{"text-align":"left"}},OE={href:"https://leetcode.com/problems/minimum-number-of-days-to-eat-n-oranges",target:"_blank",rel:"noopener noreferrer"},LE=t("td",{style:{"text-align":"center"}},null,-1),EE={style:{"text-align":"left"}},PE=t("code",null,"记忆化搜索",-1),KE=t("code",null,"动态规划",-1),VE={style:{"text-align":"left"}},NE=t("td",{style:{"text-align":"center"}},"1563",-1),DE={style:{"text-align":"left"}},BE={href:"https://leetcode.com/problems/stone-game-v",target:"_blank",rel:"noopener noreferrer"},YE=t("td",{style:{"text-align":"center"}},null,-1),AE={style:{"text-align":"left"}},JE=t("code",null,"数组",-1),RE=t("code",null,"数学",-1),SE=t("code",null,"动态规划",-1),UE=t("code",null,"1+",-1),WE={style:{"text-align":"left"}},XE=t("td",{style:{"text-align":"center"}},"1567",-1),FE={style:{"text-align":"left"}},GE={href:"https://leetcode.com/problems/maximum-length-of-subarray-with-positive-product",target:"_blank",rel:"noopener noreferrer"},TE=t("td",{style:{"text-align":"center"}},null,-1),QE={style:{"text-align":"left"}},ZE=t("code",null,"贪心",-1),$E=t("code",null,"数组",-1),tP=t("code",null,"动态规划",-1),eP={style:{"text-align":"left"}},lP=t("td",{style:{"text-align":"center"}},"1569",-1),oP={style:{"text-align":"left"}},nP={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},sP=t("td",{style:{"text-align":"center"}},null,-1),dP={style:{"text-align":"left"}},_P=t("code",null,"树",-1),iP=t("code",null,"并查集",-1),cP=t("code",null,"二叉搜索树",-1),aP=t("code",null,"7+",-1),rP={style:{"text-align":"left"}},hP=t("td",{style:{"text-align":"center"}},"1575",-1),uP={style:{"text-align":"left"}},fP={href:"https://leetcode.com/problems/count-all-possible-routes",target:"_blank",rel:"noopener noreferrer"},gP=t("td",{style:{"text-align":"center"}},null,-1),mP={style:{"text-align":"left"}},yP=t("code",null,"记忆化搜索",-1),xP=t("code",null,"数组",-1),pP=t("code",null,"动态规划",-1),bP={style:{"text-align":"left"}},jP=t("td",{style:{"text-align":"center"}},"1578",-1),kP={style:{"text-align":"left"}},MP={href:"https://leetcode.com/problems/minimum-time-to-make-rope-colorful",target:"_blank",rel:"noopener noreferrer"},HP=t("td",{style:{"text-align":"center"}},null,-1),IP={style:{"text-align":"left"}},wP=t("code",null,"贪心",-1),vP=t("code",null,"数组",-1),qP=t("code",null,"字符串",-1),zP=t("code",null,"1+",-1),CP={style:{"text-align":"left"}},OP=t("td",{style:{"text-align":"center"}},"1594",-1),LP={style:{"text-align":"left"}},EP={href:"https://leetcode.com/problems/maximum-non-negative-product-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},PP=t("td",{style:{"text-align":"center"}},null,-1),KP={style:{"text-align":"left"}},VP=t("code",null,"数组",-1),NP=t("code",null,"动态规划",-1),DP=t("code",null,"矩阵",-1),BP={style:{"text-align":"left"}},YP=t("td",{style:{"text-align":"center"}},"1595",-1),AP={style:{"text-align":"left"}},JP={href:"https://leetcode.com/problems/minimum-cost-to-connect-two-groups-of-points",target:"_blank",rel:"noopener noreferrer"},RP=t("td",{style:{"text-align":"center"}},null,-1),SP={style:{"text-align":"left"}},UP=t("code",null,"位运算",-1),WP=t("code",null,"数组",-1),XP=t("code",null,"动态规划",-1),FP=t("code",null,"2+",-1),GP={style:{"text-align":"left"}},TP=t("td",{style:{"text-align":"center"}},"1611",-1),QP={style:{"text-align":"left"}},ZP={href:"https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero",target:"_blank",rel:"noopener noreferrer"},$P=t("td",{style:{"text-align":"center"}},null,-1),tK={style:{"text-align":"left"}},eK=t("code",null,"位运算",-1),lK=t("code",null,"记忆化搜索",-1),oK=t("code",null,"动态规划",-1),nK={style:{"text-align":"left"}},sK=t("td",{style:{"text-align":"center"}},"1617",-1),dK={style:{"text-align":"left"}},_K={href:"https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities",target:"_blank",rel:"noopener noreferrer"},iK=t("td",{style:{"text-align":"center"}},null,-1),cK={style:{"text-align":"left"}},aK=t("code",null,"位运算",-1),rK=t("code",null,"树",-1),hK=t("code",null,"动态规划",-1),uK=t("code",null,"2+",-1),fK={style:{"text-align":"left"}},gK=t("td",{style:{"text-align":"center"}},"1621",-1),mK={style:{"text-align":"left"}},yK={href:"https://leetcode.com/problems/number-of-sets-of-k-non-overlapping-line-segments",target:"_blank",rel:"noopener noreferrer"},xK=t("td",{style:{"text-align":"center"}},null,-1),pK={style:{"text-align":"left"}},bK=t("code",null,"数学",-1),jK=t("code",null,"动态规划",-1),kK=t("code",null,"组合数学",-1),MK={style:{"text-align":"left"}},HK=t("td",{style:{"text-align":"center"}},"1626",-1),IK={style:{"text-align":"left"}},wK={href:"https://leetcode.com/problems/best-team-with-no-conflicts",target:"_blank",rel:"noopener noreferrer"},vK=t("td",{style:{"text-align":"center"}},null,-1),qK={style:{"text-align":"left"}},zK=t("code",null,"数组",-1),CK=t("code",null,"动态规划",-1),OK=t("code",null,"排序",-1),LK={style:{"text-align":"left"}},EK=t("td",{style:{"text-align":"center"}},"1638",-1),PK={style:{"text-align":"left"}},KK={href:"https://leetcode.com/problems/count-substrings-that-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},VK=t("td",{style:{"text-align":"center"}},null,-1),NK={style:{"text-align":"left"}},DK=t("code",null,"哈希表",-1),BK=t("code",null,"字符串",-1),YK=t("code",null,"动态规划",-1),AK=t("code",null,"1+",-1),JK={style:{"text-align":"left"}},RK=t("td",{style:{"text-align":"center"}},"1639",-1),SK={style:{"text-align":"left"}},UK={href:"https://leetcode.com/problems/number-of-ways-to-form-a-target-string-given-a-dictionary",target:"_blank",rel:"noopener noreferrer"},WK=t("td",{style:{"text-align":"center"}},null,-1),XK={style:{"text-align":"left"}},FK=t("code",null,"数组",-1),GK=t("code",null,"字符串",-1),TK=t("code",null,"动态规划",-1),QK={style:{"text-align":"left"}},ZK=t("td",{style:{"text-align":"center"}},"1641",-1),$K={style:{"text-align":"left"}},tV={href:"https://leetcode.com/problems/count-sorted-vowel-strings",target:"_blank",rel:"noopener noreferrer"},eV=t("td",{style:{"text-align":"center"}},null,-1),lV={style:{"text-align":"left"}},oV=t("code",null,"数学",-1),nV=t("code",null,"动态规划",-1),sV=t("code",null,"组合数学",-1),dV={style:{"text-align":"left"}},_V=t("td",{style:{"text-align":"center"}},"1643",-1),iV={style:{"text-align":"left"}},cV={href:"https://leetcode.com/problems/kth-smallest-instructions",target:"_blank",rel:"noopener noreferrer"},aV=t("td",{style:{"text-align":"center"}},null,-1),rV={style:{"text-align":"left"}},hV=t("code",null,"数组",-1),uV=t("code",null,"数学",-1),fV=t("code",null,"动态规划",-1),gV=t("code",null,"1+",-1),mV={style:{"text-align":"left"}},yV=t("td",{style:{"text-align":"center"}},"1653",-1),xV={style:{"text-align":"left"}},pV={href:"https://leetcode.com/problems/minimum-deletions-to-make-string-balanced",target:"_blank",rel:"noopener noreferrer"},bV=t("td",{style:{"text-align":"center"}},null,-1),jV={style:{"text-align":"left"}},kV=t("code",null,"栈",-1),MV=t("code",null,"字符串",-1),HV=t("code",null,"动态规划",-1),IV={style:{"text-align":"left"}},wV=t("td",{style:{"text-align":"center"}},"1654",-1),vV={style:{"text-align":"left"}},qV={href:"https://leetcode.com/problems/minimum-jumps-to-reach-home",target:"_blank",rel:"noopener noreferrer"},zV=t("td",{style:{"text-align":"center"}},null,-1),CV={style:{"text-align":"left"}},OV=t("code",null,"广度优先搜索",-1),LV=t("code",null,"数组",-1),EV=t("code",null,"动态规划",-1),PV={style:{"text-align":"left"}},KV=t("td",{style:{"text-align":"center"}},"1655",-1),VV={style:{"text-align":"left"}},NV={href:"https://leetcode.com/problems/distribute-repeating-integers",target:"_blank",rel:"noopener noreferrer"},DV=t("td",{style:{"text-align":"center"}},null,-1),BV={style:{"text-align":"left"}},YV=t("code",null,"位运算",-1),AV=t("code",null,"数组",-1),JV=t("code",null,"动态规划",-1),RV=t("code",null,"2+",-1),SV={style:{"text-align":"left"}},UV=t("td",{style:{"text-align":"center"}},"1659",-1),WV={style:{"text-align":"left"}},XV={href:"https://leetcode.com/problems/maximize-grid-happiness",target:"_blank",rel:"noopener noreferrer"},FV=t("td",{style:{"text-align":"center"}},null,-1),GV={style:{"text-align":"left"}},TV=t("code",null,"位运算",-1),QV=t("code",null,"记忆化搜索",-1),ZV=t("code",null,"动态规划",-1),$V=t("code",null,"1+",-1),tN={style:{"text-align":"left"}},eN=t("td",{style:{"text-align":"center"}},"1668",-1),lN={style:{"text-align":"left"}},oN={href:"https://leetcode.com/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},nN=t("td",{style:{"text-align":"center"}},null,-1),sN={style:{"text-align":"left"}},dN=t("code",null,"字符串",-1),_N=t("code",null,"动态规划",-1),iN=t("code",null,"字符串匹配",-1),cN={style:{"text-align":"left"}},aN=t("td",{style:{"text-align":"center"}},"1671",-1),rN={style:{"text-align":"left"}},hN={href:"https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array",target:"_blank",rel:"noopener noreferrer"},uN=t("td",{style:{"text-align":"center"}},null,-1),fN={style:{"text-align":"left"}},gN=t("code",null,"贪心",-1),mN=t("code",null,"数组",-1),yN=t("code",null,"二分查找",-1),xN=t("code",null,"1+",-1),pN={style:{"text-align":"left"}},bN=t("td",{style:{"text-align":"center"}},"1681",-1),jN={style:{"text-align":"left"}},kN={href:"https://leetcode.com/problems/minimum-incompatibility",target:"_blank",rel:"noopener noreferrer"},MN=t("td",{style:{"text-align":"center"}},null,-1),HN={style:{"text-align":"left"}},IN=t("code",null,"位运算",-1),wN=t("code",null,"数组",-1),vN=t("code",null,"动态规划",-1),qN=t("code",null,"1+",-1),zN={style:{"text-align":"left"}},CN=t("td",{style:{"text-align":"center"}},"1682",-1),ON={style:{"text-align":"left"}},LN={href:"https://leetcode.com/problems/longest-palindromic-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},EN=t("td",{style:{"text-align":"center"}},null,-1),PN={style:{"text-align":"left"}},KN=t("code",null,"字符串",-1),VN=t("code",null,"动态规划",-1),NN={style:{"text-align":"left"}},DN=t("td",{style:{"text-align":"center"}},"1687",-1),BN={style:{"text-align":"left"}},YN={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},AN=t("td",{style:{"text-align":"center"}},null,-1),JN={style:{"text-align":"left"}},RN=t("code",null,"线段树",-1),SN=t("code",null,"队列",-1),UN=t("code",null,"数组",-1),WN=t("code",null,"4+",-1),XN={style:{"text-align":"left"}},FN=t("td",{style:{"text-align":"center"}},"1690",-1),GN={style:{"text-align":"left"}},TN={href:"https://leetcode.com/problems/stone-game-vii",target:"_blank",rel:"noopener noreferrer"},QN=t("td",{style:{"text-align":"center"}},null,-1),ZN={style:{"text-align":"left"}},$N=t("code",null,"数组",-1),tD=t("code",null,"数学",-1),eD=t("code",null,"动态规划",-1),lD=t("code",null,"1+",-1),oD={style:{"text-align":"left"}},nD=t("td",{style:{"text-align":"center"}},"1691",-1),sD={style:{"text-align":"left"}},dD={href:"https://leetcode.com/problems/maximum-height-by-stacking-cuboids",target:"_blank",rel:"noopener noreferrer"},_D=t("td",{style:{"text-align":"center"}},null,-1),iD={style:{"text-align":"left"}},cD=t("code",null,"数组",-1),aD=t("code",null,"动态规划",-1),rD=t("code",null,"排序",-1),hD={style:{"text-align":"left"}},uD=t("td",{style:{"text-align":"center"}},"1692",-1),fD={style:{"text-align":"left"}},gD={href:"https://leetcode.com/problems/count-ways-to-distribute-candies",target:"_blank",rel:"noopener noreferrer"},mD=t("td",{style:{"text-align":"center"}},null,-1),yD={style:{"text-align":"left"}},xD=t("code",null,"动态规划",-1),pD={style:{"text-align":"left"}},bD=t("td",{style:{"text-align":"center"}},"1696",-1),jD={style:{"text-align":"left"}},kD={href:"https://leetcode.com/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},MD=t("td",{style:{"text-align":"center"}},null,-1),HD={style:{"text-align":"left"}},ID=t("code",null,"队列",-1),wD=t("code",null,"数组",-1),vD=t("code",null,"动态规划",-1),qD=t("code",null,"2+",-1),zD={style:{"text-align":"left"}},CD=t("td",{style:{"text-align":"center"}},"1714",-1),OD={style:{"text-align":"left"}},LD={href:"https://leetcode.com/problems/sum-of-special-evenly-spaced-elements-in-array",target:"_blank",rel:"noopener noreferrer"},ED=t("td",{style:{"text-align":"center"}},null,-1),PD={style:{"text-align":"left"}},KD=t("code",null,"数组",-1),VD=t("code",null,"动态规划",-1),ND={style:{"text-align":"left"}},DD=t("td",{style:{"text-align":"center"}},"1723",-1),BD={style:{"text-align":"left"}},YD={href:"https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs",target:"_blank",rel:"noopener noreferrer"},AD=t("td",{style:{"text-align":"center"}},null,-1),JD={style:{"text-align":"left"}},RD=t("code",null,"位运算",-1),SD=t("code",null,"数组",-1),UD=t("code",null,"动态规划",-1),WD=t("code",null,"2+",-1),XD={style:{"text-align":"left"}},FD=t("td",{style:{"text-align":"center"}},"1728",-1),GD={style:{"text-align":"left"}},TD={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},QD=t("td",{style:{"text-align":"center"}},null,-1),ZD={style:{"text-align":"left"}},$D=t("code",null,"图",-1),tB=t("code",null,"拓扑排序",-1),eB=t("code",null,"记忆化搜索",-1),lB=t("code",null,"5+",-1),oB={style:{"text-align":"left"}},nB=t("td",{style:{"text-align":"center"}},"1735",-1),sB={style:{"text-align":"left"}},dB={href:"https://leetcode.com/problems/count-ways-to-make-array-with-product",target:"_blank",rel:"noopener noreferrer"},_B=t("td",{style:{"text-align":"center"}},null,-1),iB={style:{"text-align":"left"}},cB=t("code",null,"数组",-1),aB=t("code",null,"数学",-1),rB=t("code",null,"动态规划",-1),hB=t("code",null,"2+",-1),uB={style:{"text-align":"left"}},fB=t("td",{style:{"text-align":"center"}},"1745",-1),gB={style:{"text-align":"left"}},mB={href:"https://leetcode.com/problems/palindrome-partitioning-iv",target:"_blank",rel:"noopener noreferrer"},yB=t("td",{style:{"text-align":"center"}},null,-1),xB={style:{"text-align":"left"}},pB=t("code",null,"字符串",-1),bB=t("code",null,"动态规划",-1),jB={style:{"text-align":"left"}},kB=t("td",{style:{"text-align":"center"}},"1746",-1),MB={style:{"text-align":"left"}},HB={href:"https://leetcode.com/problems/maximum-subarray-sum-after-one-operation",target:"_blank",rel:"noopener noreferrer"},IB=t("td",{style:{"text-align":"center"}},null,-1),wB={style:{"text-align":"left"}},vB=t("code",null,"数组",-1),qB=t("code",null,"动态规划",-1),zB={style:{"text-align":"left"}},CB=t("td",{style:{"text-align":"center"}},"1749",-1),OB={style:{"text-align":"left"}},LB={href:"https://leetcode.com/problems/maximum-absolute-sum-of-any-subarray",target:"_blank",rel:"noopener noreferrer"},EB=t("td",{style:{"text-align":"center"}},null,-1),PB={style:{"text-align":"left"}},KB=t("code",null,"数组",-1),VB=t("code",null,"动态规划",-1),NB={style:{"text-align":"left"}},DB=t("td",{style:{"text-align":"center"}},"1751",-1),BB={style:{"text-align":"left"}},YB={href:"https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii",target:"_blank",rel:"noopener noreferrer"},AB=t("td",{style:{"text-align":"center"}},null,-1),JB={style:{"text-align":"left"}},RB=t("code",null,"数组",-1),SB=t("code",null,"二分查找",-1),UB=t("code",null,"动态规划",-1),WB=t("code",null,"1+",-1),XB={style:{"text-align":"left"}},FB=t("td",{style:{"text-align":"center"}},"1755",-1),GB={style:{"text-align":"left"}},TB={href:"https://leetcode.com/problems/closest-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},QB=t("td",{style:{"text-align":"center"}},null,-1),ZB={style:{"text-align":"left"}},$B=t("code",null,"位运算",-1),tY=t("code",null,"数组",-1),eY=t("code",null,"双指针",-1),lY=t("code",null,"2+",-1),oY={style:{"text-align":"left"}},nY=t("td",{style:{"text-align":"center"}},"1770",-1),sY={style:{"text-align":"left"}},dY={href:"https://leetcode.com/problems/maximum-score-from-performing-multiplication-operations",target:"_blank",rel:"noopener noreferrer"},_Y=t("td",{style:{"text-align":"center"}},null,-1),iY={style:{"text-align":"left"}},cY=t("code",null,"数组",-1),aY=t("code",null,"动态规划",-1),rY={style:{"text-align":"left"}},hY=t("td",{style:{"text-align":"center"}},"1771",-1),uY={style:{"text-align":"left"}},fY={href:"https://leetcode.com/problems/maximize-palindrome-length-from-subsequences",target:"_blank",rel:"noopener noreferrer"},gY=t("td",{style:{"text-align":"center"}},null,-1),mY={style:{"text-align":"left"}},yY=t("code",null,"字符串",-1),xY=t("code",null,"动态规划",-1),pY={style:{"text-align":"left"}},bY=t("td",{style:{"text-align":"center"}},"1774",-1),jY={style:{"text-align":"left"}},kY={href:"https://leetcode.com/problems/closest-dessert-cost",target:"_blank",rel:"noopener noreferrer"},MY=t("td",{style:{"text-align":"center"}},null,-1),HY={style:{"text-align":"left"}},IY=t("code",null,"数组",-1),wY=t("code",null,"动态规划",-1),vY=t("code",null,"回溯",-1),qY={style:{"text-align":"left"}},zY=t("td",{style:{"text-align":"center"}},"1786",-1),CY={style:{"text-align":"left"}},OY={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},LY=t("td",{style:{"text-align":"center"}},null,-1),EY={style:{"text-align":"left"}},PY=t("code",null,"图",-1),KY=t("code",null,"拓扑排序",-1),VY=t("code",null,"动态规划",-1),NY=t("code",null,"2+",-1),DY={style:{"text-align":"left"}},BY=t("td",{style:{"text-align":"center"}},"1787",-1),YY={style:{"text-align":"left"}},AY={href:"https://leetcode.com/problems/make-the-xor-of-all-segments-equal-to-zero",target:"_blank",rel:"noopener noreferrer"},JY=t("td",{style:{"text-align":"center"}},null,-1),RY={style:{"text-align":"left"}},SY=t("code",null,"位运算",-1),UY=t("code",null,"数组",-1),WY=t("code",null,"动态规划",-1),XY={style:{"text-align":"left"}},FY=t("td",{style:{"text-align":"center"}},"1799",-1),GY={style:{"text-align":"left"}},TY={href:"https://leetcode.com/problems/maximize-score-after-n-operations",target:"_blank",rel:"noopener noreferrer"},QY=t("td",{style:{"text-align":"center"}},null,-1),ZY={style:{"text-align":"left"}},$Y=t("code",null,"位运算",-1),tA=t("code",null,"数组",-1),eA=t("code",null,"数学",-1),lA=t("code",null,"4+",-1),oA={style:{"text-align":"left"}},nA=t("td",{style:{"text-align":"center"}},"1815",-1),sA={style:{"text-align":"left"}},dA={href:"https://leetcode.com/problems/maximum-number-of-groups-getting-fresh-donuts",target:"_blank",rel:"noopener noreferrer"},_A=t("td",{style:{"text-align":"center"}},null,-1),iA={style:{"text-align":"left"}},cA=t("code",null,"位运算",-1),aA=t("code",null,"记忆化搜索",-1),rA=t("code",null,"数组",-1),hA=t("code",null,"2+",-1),uA={style:{"text-align":"left"}},fA=t("td",{style:{"text-align":"center"}},"1824",-1),gA={style:{"text-align":"left"}},mA={href:"https://leetcode.com/problems/minimum-sideway-jumps",target:"_blank",rel:"noopener noreferrer"},yA=t("td",{style:{"text-align":"center"}},null,-1),xA={style:{"text-align":"left"}},pA=t("code",null,"贪心",-1),bA=t("code",null,"数组",-1),jA=t("code",null,"动态规划",-1),kA={style:{"text-align":"left"}},MA=t("td",{style:{"text-align":"center"}},"1857",-1),HA={style:{"text-align":"left"}},IA={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},wA=t("td",{style:{"text-align":"center"}},null,-1),vA={style:{"text-align":"left"}},qA=t("code",null,"图",-1),zA=t("code",null,"拓扑排序",-1),CA=t("code",null,"记忆化搜索",-1),OA=t("code",null,"3+",-1),LA={style:{"text-align":"left"}},EA=t("td",{style:{"text-align":"center"}},"1866",-1),PA={style:{"text-align":"left"}},KA={href:"https://leetcode.com/problems/number-of-ways-to-rearrange-sticks-with-k-sticks-visible",target:"_blank",rel:"noopener noreferrer"},VA=t("td",{style:{"text-align":"center"}},null,-1),NA={style:{"text-align":"left"}},DA=t("code",null,"数学",-1),BA=t("code",null,"动态规划",-1),YA=t("code",null,"组合数学",-1),AA={style:{"text-align":"left"}},JA=t("td",{style:{"text-align":"center"}},"1871",-1),RA={style:{"text-align":"left"}},SA={href:"https://leetcode.com/problems/jump-game-vii",target:"_blank",rel:"noopener noreferrer"},UA=t("td",{style:{"text-align":"center"}},null,-1),WA={style:{"text-align":"left"}},XA=t("code",null,"字符串",-1),FA=t("code",null,"动态规划",-1),GA=t("code",null,"前缀和",-1),TA=t("code",null,"1+",-1),QA={style:{"text-align":"left"}},ZA=t("td",{style:{"text-align":"center"}},"1872",-1),$A={style:{"text-align":"left"}},tJ={href:"https://leetcode.com/problems/stone-game-viii",target:"_blank",rel:"noopener noreferrer"},eJ=t("td",{style:{"text-align":"center"}},null,-1),lJ={style:{"text-align":"left"}},oJ=t("code",null,"数组",-1),nJ=t("code",null,"数学",-1),sJ=t("code",null,"动态规划",-1),dJ=t("code",null,"2+",-1),_J={style:{"text-align":"left"}},iJ=t("td",{style:{"text-align":"center"}},"1879",-1),cJ={style:{"text-align":"left"}},aJ={href:"https://leetcode.com/problems/minimum-xor-sum-of-two-arrays",target:"_blank",rel:"noopener noreferrer"},rJ=t("td",{style:{"text-align":"center"}},null,-1),hJ={style:{"text-align":"left"}},uJ=t("code",null,"位运算",-1),fJ=t("code",null,"数组",-1),gJ=t("code",null,"动态规划",-1),mJ=t("code",null,"1+",-1),yJ={style:{"text-align":"left"}},xJ=t("td",{style:{"text-align":"center"}},"1883",-1),pJ={style:{"text-align":"left"}},bJ={href:"https://leetcode.com/problems/minimum-skips-to-arrive-at-meeting-on-time",target:"_blank",rel:"noopener noreferrer"},jJ=t("td",{style:{"text-align":"center"}},null,-1),kJ={style:{"text-align":"left"}},MJ=t("code",null,"数组",-1),HJ=t("code",null,"动态规划",-1),IJ={style:{"text-align":"left"}},wJ=t("td",{style:{"text-align":"center"}},"1884",-1),vJ={style:{"text-align":"left"}},qJ={href:"https://leetcode.com/problems/egg-drop-with-2-eggs-and-n-floors",target:"_blank",rel:"noopener noreferrer"},zJ=t("td",{style:{"text-align":"center"}},null,-1),CJ={style:{"text-align":"left"}},OJ=t("code",null,"数学",-1),LJ=t("code",null,"动态规划",-1),EJ={style:{"text-align":"left"}},PJ=t("td",{style:{"text-align":"center"}},"1888",-1),KJ={style:{"text-align":"left"}},VJ={href:"https://leetcode.com/problems/minimum-number-of-flips-to-make-the-binary-string-alternating",target:"_blank",rel:"noopener noreferrer"},NJ=t("td",{style:{"text-align":"center"}},null,-1),DJ={style:{"text-align":"left"}},BJ=t("code",null,"贪心",-1),YJ=t("code",null,"字符串",-1),AJ=t("code",null,"动态规划",-1),JJ=t("code",null,"1+",-1),RJ={style:{"text-align":"left"}},SJ=t("td",{style:{"text-align":"center"}},"1896",-1),UJ={style:{"text-align":"left"}},WJ={href:"https://leetcode.com/problems/minimum-cost-to-change-the-final-value-of-expression",target:"_blank",rel:"noopener noreferrer"},XJ=t("td",{style:{"text-align":"center"}},null,-1),FJ={style:{"text-align":"left"}},GJ=t("code",null,"栈",-1),TJ=t("code",null,"数学",-1),QJ=t("code",null,"字符串",-1),ZJ=t("code",null,"1+",-1),$J={style:{"text-align":"left"}},tR=t("td",{style:{"text-align":"center"}},"1900",-1),eR={style:{"text-align":"left"}},lR={href:"https://leetcode.com/problems/the-earliest-and-latest-rounds-where-players-compete",target:"_blank",rel:"noopener noreferrer"},oR=t("td",{style:{"text-align":"center"}},null,-1),nR={style:{"text-align":"left"}},sR=t("code",null,"记忆化搜索",-1),dR=t("code",null,"动态规划",-1),_R={style:{"text-align":"left"}},iR=t("td",{style:{"text-align":"center"}},"1908",-1),cR={style:{"text-align":"left"}},aR={href:"https://leetcode.com/problems/game-of-nim",target:"_blank",rel:"noopener noreferrer"},rR=t("td",{style:{"text-align":"center"}},null,-1),hR={style:{"text-align":"left"}},uR=t("code",null,"位运算",-1),fR=t("code",null,"脑筋急转弯",-1),gR=t("code",null,"数组",-1),mR=t("code",null,"3+",-1),yR={style:{"text-align":"left"}},xR=t("td",{style:{"text-align":"center"}},"1911",-1),pR={style:{"text-align":"left"}},bR={href:"https://leetcode.com/problems/maximum-alternating-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},jR=t("td",{style:{"text-align":"center"}},null,-1),kR={style:{"text-align":"left"}},MR=t("code",null,"数组",-1),HR=t("code",null,"动态规划",-1),IR={style:{"text-align":"left"}},wR=t("td",{style:{"text-align":"center"}},"1916",-1),vR={style:{"text-align":"left"}},qR={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},zR=t("td",{style:{"text-align":"center"}},null,-1),CR={style:{"text-align":"left"}},OR=t("code",null,"树",-1),LR=t("code",null,"图",-1),ER=t("code",null,"拓扑排序",-1),PR=t("code",null,"3+",-1),KR={style:{"text-align":"left"}},VR=t("td",{style:{"text-align":"center"}},"1928",-1),NR={style:{"text-align":"left"}},DR={href:"https://leetcode.com/problems/minimum-cost-to-reach-destination-in-time",target:"_blank",rel:"noopener noreferrer"},BR=t("td",{style:{"text-align":"center"}},null,-1),YR={style:{"text-align":"left"}},AR=t("code",null,"图",-1),JR=t("code",null,"数组",-1),RR=t("code",null,"动态规划",-1),SR={style:{"text-align":"left"}},UR=t("td",{style:{"text-align":"center"}},"1931",-1),WR={style:{"text-align":"left"}},XR={href:"https://leetcode.com/problems/painting-a-grid-with-three-different-colors",target:"_blank",rel:"noopener noreferrer"},FR=t("td",{style:{"text-align":"center"}},null,-1),GR={style:{"text-align":"left"}},TR=t("code",null,"动态规划",-1),QR={style:{"text-align":"left"}},ZR=t("td",{style:{"text-align":"center"}},"1937",-1),$R={style:{"text-align":"left"}},tS={href:"https://leetcode.com/problems/maximum-number-of-points-with-cost",target:"_blank",rel:"noopener noreferrer"},eS=t("td",{style:{"text-align":"center"}},null,-1),lS={style:{"text-align":"left"}},oS=t("code",null,"数组",-1),nS=t("code",null,"动态规划",-1),sS=t("code",null,"矩阵",-1),dS={style:{"text-align":"left"}},_S=t("td",{style:{"text-align":"center"}},"1947",-1),iS={style:{"text-align":"left"}},cS={href:"https://leetcode.com/problems/maximum-compatibility-score-sum",target:"_blank",rel:"noopener noreferrer"},aS=t("td",{style:{"text-align":"center"}},null,-1),rS={style:{"text-align":"left"}},hS=t("code",null,"位运算",-1),uS=t("code",null,"数组",-1),fS=t("code",null,"动态规划",-1),gS=t("code",null,"2+",-1),mS={style:{"text-align":"left"}},yS=t("td",{style:{"text-align":"center"}},"1955",-1),xS={style:{"text-align":"left"}},pS={href:"https://leetcode.com/problems/count-number-of-special-subsequences",target:"_blank",rel:"noopener noreferrer"},bS=t("td",{style:{"text-align":"center"}},null,-1),jS={style:{"text-align":"left"}},kS=t("code",null,"数组",-1),MS=t("code",null,"动态规划",-1),HS={style:{"text-align":"left"}},IS=t("td",{style:{"text-align":"center"}},"1959",-1),wS={style:{"text-align":"left"}},vS={href:"https://leetcode.com/problems/minimum-total-space-wasted-with-k-resizing-operations",target:"_blank",rel:"noopener noreferrer"},qS=t("td",{style:{"text-align":"center"}},null,-1),zS={style:{"text-align":"left"}},CS=t("code",null,"数组",-1),OS=t("code",null,"动态规划",-1),LS={style:{"text-align":"left"}},ES=t("td",{style:{"text-align":"center"}},"1976",-1),PS={style:{"text-align":"left"}},KS={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},VS=t("td",{style:{"text-align":"center"}},null,-1),NS={style:{"text-align":"left"}},DS=t("code",null,"图",-1),BS=t("code",null,"拓扑排序",-1),YS=t("code",null,"动态规划",-1),AS=t("code",null,"1+",-1),JS={style:{"text-align":"left"}},RS=t("td",{style:{"text-align":"center"}},"1977",-1),SS={style:{"text-align":"left"}},US={href:"https://leetcode.com/problems/number-of-ways-to-separate-numbers",target:"_blank",rel:"noopener noreferrer"},WS=t("td",{style:{"text-align":"center"}},null,-1),XS={style:{"text-align":"left"}},FS=t("code",null,"字符串",-1),GS=t("code",null,"动态规划",-1),TS=t("code",null,"后缀数组",-1),QS={style:{"text-align":"left"}},ZS=t("td",{style:{"text-align":"center"}},"1981",-1),$S={style:{"text-align":"left"}},tU={href:"https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements",target:"_blank",rel:"noopener noreferrer"},eU=t("td",{style:{"text-align":"center"}},null,-1),lU={style:{"text-align":"left"}},oU=t("code",null,"数组",-1),nU=t("code",null,"动态规划",-1),sU=t("code",null,"矩阵",-1),dU={style:{"text-align":"left"}},_U=t("td",{style:{"text-align":"center"}},"1986",-1),iU={style:{"text-align":"left"}},cU={href:"https://leetcode.com/problems/minimum-number-of-work-sessions-to-finish-the-tasks",target:"_blank",rel:"noopener noreferrer"},aU=t("td",{style:{"text-align":"center"}},null,-1),rU={style:{"text-align":"left"}},hU=t("code",null,"位运算",-1),uU=t("code",null,"数组",-1),fU=t("code",null,"动态规划",-1),gU=t("code",null,"2+",-1),mU={style:{"text-align":"left"}},yU=t("td",{style:{"text-align":"center"}},"1987",-1),xU={style:{"text-align":"left"}},pU={href:"https://leetcode.com/problems/number-of-unique-good-subsequences",target:"_blank",rel:"noopener noreferrer"},bU=t("td",{style:{"text-align":"center"}},null,-1),jU={style:{"text-align":"left"}},kU=t("code",null,"字符串",-1),MU=t("code",null,"动态规划",-1),HU={style:{"text-align":"left"}},IU=t("td",{style:{"text-align":"center"}},"1994",-1),wU={style:{"text-align":"left"}},vU={href:"https://leetcode.com/problems/the-number-of-good-subsets",target:"_blank",rel:"noopener noreferrer"},qU=t("td",{style:{"text-align":"center"}},null,-1),zU={style:{"text-align":"left"}},CU=t("code",null,"位运算",-1),OU=t("code",null,"数组",-1),LU=t("code",null,"数学",-1),EU=t("code",null,"2+",-1),PU={style:{"text-align":"left"}},KU=t("td",{style:{"text-align":"center"}},"1997",-1),VU={style:{"text-align":"left"}},NU={href:"https://leetcode.com/problems/first-day-where-you-have-been-in-all-the-rooms",target:"_blank",rel:"noopener noreferrer"},DU=t("td",{style:{"text-align":"center"}},null,-1),BU={style:{"text-align":"left"}},YU=t("code",null,"数组",-1),AU=t("code",null,"动态规划",-1),JU={style:{"text-align":"left"}},RU=t("td",{style:{"text-align":"center"}},"2002",-1),SU={style:{"text-align":"left"}},UU={href:"https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},WU=t("td",{style:{"text-align":"center"}},null,-1),XU={style:{"text-align":"left"}},FU=t("code",null,"位运算",-1),GU=t("code",null,"字符串",-1),TU=t("code",null,"动态规划",-1),QU=t("code",null,"2+",-1),ZU={style:{"text-align":"left"}},$U=t("td",{style:{"text-align":"center"}},"2003",-1),tW={style:{"text-align":"left"}},eW={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},lW=t("td",{style:{"text-align":"center"}},null,-1),oW={style:{"text-align":"left"}},nW=t("code",null,"树",-1),sW=t("code",null,"深度优先搜索",-1),dW=t("code",null,"并查集",-1),_W=t("code",null,"1+",-1),iW={style:{"text-align":"left"}},cW=t("td",{style:{"text-align":"center"}},"2005",-1),aW={style:{"text-align":"left"}},rW={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},hW=t("td",{style:{"text-align":"center"}},null,-1),uW={style:{"text-align":"left"}},fW=t("code",null,"树",-1),gW=t("code",null,"数学",-1),mW=t("code",null,"动态规划",-1),yW=t("code",null,"2+",-1),xW={style:{"text-align":"left"}},pW=t("td",{style:{"text-align":"center"}},"2008",-1),bW={style:{"text-align":"left"}},jW={href:"https://leetcode.com/problems/maximum-earnings-from-taxi",target:"_blank",rel:"noopener noreferrer"},kW=t("td",{style:{"text-align":"center"}},null,-1),MW={style:{"text-align":"left"}},HW=t("code",null,"数组",-1),IW=t("code",null,"哈希表",-1),wW=t("code",null,"二分查找",-1),vW=t("code",null,"2+",-1),qW={style:{"text-align":"left"}},zW=t("td",{style:{"text-align":"center"}},"2019",-1),CW={style:{"text-align":"left"}},OW={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},LW=t("td",{style:{"text-align":"center"}},null,-1),EW={style:{"text-align":"left"}},PW=t("code",null,"栈",-1),KW=t("code",null,"记忆化搜索",-1),VW=t("code",null,"数组",-1),NW=t("code",null,"3+",-1),DW={style:{"text-align":"left"}},BW=t("td",{style:{"text-align":"center"}},"2035",-1),YW={style:{"text-align":"left"}},AW={href:"https://leetcode.com/problems/partition-array-into-two-arrays-to-minimize-sum-difference",target:"_blank",rel:"noopener noreferrer"},JW=t("td",{style:{"text-align":"center"}},null,-1),RW={style:{"text-align":"left"}},SW=t("code",null,"位运算",-1),UW=t("code",null,"数组",-1),WW=t("code",null,"双指针",-1),XW=t("code",null,"4+",-1),FW={style:{"text-align":"left"}},GW=t("td",{style:{"text-align":"center"}},"2036",-1),TW={style:{"text-align":"left"}},QW={href:"https://leetcode.com/problems/maximum-alternating-subarray-sum",target:"_blank",rel:"noopener noreferrer"},ZW=t("td",{style:{"text-align":"center"}},null,-1),$W={style:{"text-align":"left"}},tX=t("code",null,"数组",-1),eX=t("code",null,"动态规划",-1),lX={style:{"text-align":"left"}},oX=t("td",{style:{"text-align":"center"}},"2050",-1),nX={style:{"text-align":"left"}},sX={href:"https://leetcode.com/problems/parallel-courses-iii",target:"_blank",rel:"noopener noreferrer"},dX=t("td",{style:{"text-align":"center"}},null,-1),_X={style:{"text-align":"left"}},iX=t("code",null,"图",-1),cX=t("code",null,"拓扑排序",-1),aX=t("code",null,"数组",-1),rX=t("code",null,"1+",-1),hX={style:{"text-align":"left"}},uX=t("td",{style:{"text-align":"center"}},"2052",-1),fX={style:{"text-align":"left"}},gX={href:"https://leetcode.com/problems/minimum-cost-to-separate-sentence-into-rows",target:"_blank",rel:"noopener noreferrer"},mX=t("td",{style:{"text-align":"center"}},null,-1),yX={style:{"text-align":"left"}},xX=t("code",null,"数组",-1),pX=t("code",null,"动态规划",-1),bX={style:{"text-align":"left"}},jX=t("td",{style:{"text-align":"center"}},"2054",-1),kX={style:{"text-align":"left"}},MX={href:"https://leetcode.com/problems/two-best-non-overlapping-events",target:"_blank",rel:"noopener noreferrer"},HX=t("td",{style:{"text-align":"center"}},null,-1),IX={style:{"text-align":"left"}},wX=t("code",null,"数组",-1),vX=t("code",null,"二分查找",-1),qX=t("code",null,"动态规划",-1),zX=t("code",null,"2+",-1),CX={style:{"text-align":"left"}},OX=t("td",{style:{"text-align":"center"}},"2060",-1),LX={style:{"text-align":"left"}},EX={href:"https://leetcode.com/problems/check-if-an-original-string-exists-given-two-encoded-strings",target:"_blank",rel:"noopener noreferrer"},PX=t("td",{style:{"text-align":"center"}},null,-1),KX={style:{"text-align":"left"}},VX=t("code",null,"字符串",-1),NX=t("code",null,"动态规划",-1),DX={style:{"text-align":"left"}},BX=t("td",{style:{"text-align":"center"}},"2063",-1),YX={style:{"text-align":"left"}},AX={href:"https://leetcode.com/problems/vowels-of-all-substrings",target:"_blank",rel:"noopener noreferrer"},JX=t("td",{style:{"text-align":"center"}},null,-1),RX={style:{"text-align":"left"}},SX=t("code",null,"数学",-1),UX=t("code",null,"字符串",-1),WX=t("code",null,"动态规划",-1),XX=t("code",null,"1+",-1),FX={style:{"text-align":"left"}},GX=t("td",{style:{"text-align":"center"}},"2086",-1),TX={style:{"text-align":"left"}},QX={href:"https://leetcode.com/problems/minimum-number-of-food-buckets-to-feed-the-hamsters",target:"_blank",rel:"noopener noreferrer"},ZX=t("td",{style:{"text-align":"center"}},null,-1),$X={style:{"text-align":"left"}},tF=t("code",null,"贪心",-1),eF=t("code",null,"字符串",-1),lF=t("code",null,"动态规划",-1),oF={style:{"text-align":"left"}},nF=t("td",{style:{"text-align":"center"}},"2088",-1),sF={style:{"text-align":"left"}},dF={href:"https://leetcode.com/problems/count-fertile-pyramids-in-a-land",target:"_blank",rel:"noopener noreferrer"},_F=t("td",{style:{"text-align":"center"}},null,-1),iF={style:{"text-align":"left"}},cF=t("code",null,"数组",-1),aF=t("code",null,"动态规划",-1),rF=t("code",null,"矩阵",-1),hF={style:{"text-align":"left"}},uF=t("td",{style:{"text-align":"center"}},"2100",-1),fF={style:{"text-align":"left"}},gF={href:"https://leetcode.com/problems/find-good-days-to-rob-the-bank",target:"_blank",rel:"noopener noreferrer"},mF=t("td",{style:{"text-align":"center"}},null,-1),yF={style:{"text-align":"left"}},xF=t("code",null,"数组",-1),pF=t("code",null,"动态规划",-1),bF=t("code",null,"前缀和",-1),jF={style:{"text-align":"left"}},kF=t("td",{style:{"text-align":"center"}},"2110",-1),MF={style:{"text-align":"left"}},HF={href:"https://leetcode.com/problems/number-of-smooth-descent-periods-of-a-stock",target:"_blank",rel:"noopener noreferrer"},IF=t("td",{style:{"text-align":"center"}},null,-1),wF={style:{"text-align":"left"}},vF=t("code",null,"数组",-1),qF=t("code",null,"数学",-1),zF=t("code",null,"动态规划",-1),CF={style:{"text-align":"left"}},OF=t("td",{style:{"text-align":"center"}},"2140",-1),LF={style:{"text-align":"left"}},EF={href:"https://leetcode.com/problems/solving-questions-with-brainpower",target:"_blank",rel:"noopener noreferrer"},PF=t("td",{style:{"text-align":"center"}},null,-1),KF={style:{"text-align":"left"}},VF=t("code",null,"数组",-1),NF=t("code",null,"动态规划",-1),DF={style:{"text-align":"left"}},BF=t("td",{style:{"text-align":"center"}},"2143",-1),YF={style:{"text-align":"left"}},AF={href:"https://leetcode.com/problems/choose-numbers-from-two-arrays-in-range",target:"_blank",rel:"noopener noreferrer"},JF=t("td",{style:{"text-align":"center"}},null,-1),RF={style:{"text-align":"left"}},SF=t("code",null,"数组",-1),UF=t("code",null,"动态规划",-1),WF={style:{"text-align":"left"}},XF=t("td",{style:{"text-align":"center"}},"2147",-1),FF={style:{"text-align":"left"}},GF={href:"https://leetcode.com/problems/number-of-ways-to-divide-a-long-corridor",target:"_blank",rel:"noopener noreferrer"},TF=t("td",{style:{"text-align":"center"}},null,-1),QF={style:{"text-align":"left"}},ZF=t("code",null,"数学",-1),$F=t("code",null,"字符串",-1),tG=t("code",null,"动态规划",-1),eG={style:{"text-align":"left"}},lG=t("td",{style:{"text-align":"center"}},"2152",-1),oG={style:{"text-align":"left"}},nG={href:"https://leetcode.com/problems/minimum-number-of-lines-to-cover-points",target:"_blank",rel:"noopener noreferrer"},sG=t("td",{style:{"text-align":"center"}},null,-1),dG={style:{"text-align":"left"}},_G=t("code",null,"位运算",-1),iG=t("code",null,"几何",-1),cG=t("code",null,"数组",-1),aG=t("code",null,"5+",-1),rG={style:{"text-align":"left"}},hG=t("td",{style:{"text-align":"center"}},"2163",-1),uG={style:{"text-align":"left"}},fG={href:"https://leetcode.com/problems/minimum-difference-in-sums-after-removal-of-elements",target:"_blank",rel:"noopener noreferrer"},gG=t("td",{style:{"text-align":"center"}},null,-1),mG={style:{"text-align":"left"}},yG=t("code",null,"数组",-1),xG=t("code",null,"动态规划",-1),pG=t("code",null,"堆（优先队列）",-1),bG={style:{"text-align":"left"}},jG=t("td",{style:{"text-align":"center"}},"2167",-1),kG={style:{"text-align":"left"}},MG={href:"https://leetcode.com/problems/minimum-time-to-remove-all-cars-containing-illegal-goods",target:"_blank",rel:"noopener noreferrer"},HG=t("td",{style:{"text-align":"center"}},null,-1),IG={style:{"text-align":"left"}},wG=t("code",null,"字符串",-1),vG=t("code",null,"动态规划",-1),qG={style:{"text-align":"left"}},zG=t("td",{style:{"text-align":"center"}},"2172",-1),CG={style:{"text-align":"left"}},OG={href:"https://leetcode.com/problems/maximum-and-sum-of-array",target:"_blank",rel:"noopener noreferrer"},LG=t("td",{style:{"text-align":"center"}},null,-1),EG={style:{"text-align":"left"}},PG=t("code",null,"位运算",-1),KG=t("code",null,"数组",-1),VG=t("code",null,"动态规划",-1),NG=t("code",null,"1+",-1),DG={style:{"text-align":"left"}},BG=t("td",{style:{"text-align":"center"}},"2184",-1),YG={style:{"text-align":"left"}},AG={href:"https://leetcode.com/problems/number-of-ways-to-build-sturdy-brick-wall",target:"_blank",rel:"noopener noreferrer"},JG=t("td",{style:{"text-align":"center"}},null,-1),RG={style:{"text-align":"left"}},SG=t("code",null,"位运算",-1),UG=t("code",null,"数组",-1),WG=t("code",null,"动态规划",-1),XG=t("code",null,"1+",-1),FG={style:{"text-align":"left"}},GG=t("td",{style:{"text-align":"center"}},"2188",-1),TG={style:{"text-align":"left"}},QG={href:"https://leetcode.com/problems/minimum-time-to-finish-the-race",target:"_blank",rel:"noopener noreferrer"},ZG=t("td",{style:{"text-align":"center"}},null,-1),$G={style:{"text-align":"left"}},tT=t("code",null,"数组",-1),eT=t("code",null,"动态规划",-1),lT={style:{"text-align":"left"}},oT=t("td",{style:{"text-align":"center"}},"2189",-1),nT={style:{"text-align":"left"}},sT={href:"https://leetcode.com/problems/number-of-ways-to-build-house-of-cards",target:"_blank",rel:"noopener noreferrer"},dT=t("td",{style:{"text-align":"center"}},null,-1),_T={style:{"text-align":"left"}},iT=t("code",null,"数学",-1),cT=t("code",null,"动态规划",-1),aT={style:{"text-align":"left"}},rT=t("td",{style:{"text-align":"center"}},"2209",-1),hT={style:{"text-align":"left"}},uT={href:"https://leetcode.com/problems/minimum-white-tiles-after-covering-with-carpets",target:"_blank",rel:"noopener noreferrer"},fT=t("td",{style:{"text-align":"center"}},null,-1),gT={style:{"text-align":"left"}},mT=t("code",null,"字符串",-1),yT=t("code",null,"动态规划",-1),xT=t("code",null,"前缀和",-1),pT={style:{"text-align":"left"}},bT=t("td",{style:{"text-align":"center"}},"2218",-1),jT={style:{"text-align":"left"}},kT={href:"https://leetcode.com/problems/maximum-value-of-k-coins-from-piles",target:"_blank",rel:"noopener noreferrer"},MT=t("td",{style:{"text-align":"center"}},null,-1),HT={style:{"text-align":"left"}},IT=t("code",null,"数组",-1),wT=t("code",null,"动态规划",-1),vT=t("code",null,"前缀和",-1),qT={style:{"text-align":"left"}},zT=t("td",{style:{"text-align":"center"}},"2222",-1),CT={style:{"text-align":"left"}},OT={href:"https://leetcode.com/problems/number-of-ways-to-select-buildings",target:"_blank",rel:"noopener noreferrer"},LT=t("td",{style:{"text-align":"center"}},null,-1),ET={style:{"text-align":"left"}},PT=t("code",null,"字符串",-1),KT=t("code",null,"动态规划",-1),VT=t("code",null,"前缀和",-1),NT={style:{"text-align":"left"}},DT=t("td",{style:{"text-align":"center"}},"2247",-1),BT={style:{"text-align":"left"}},YT={href:"https://leetcode.com/problems/maximum-cost-of-trip-with-k-highways",target:"_blank",rel:"noopener noreferrer"},AT=t("td",{style:{"text-align":"center"}},null,-1),JT={style:{"text-align":"left"}},RT=t("code",null,"位运算",-1),ST=t("code",null,"图",-1),UT=t("code",null,"动态规划",-1),WT=t("code",null,"1+",-1),XT={style:{"text-align":"left"}},FT=t("td",{style:{"text-align":"center"}},"2262",-1),GT={style:{"text-align":"left"}},TT={href:"https://leetcode.com/problems/total-appeal-of-a-string",target:"_blank",rel:"noopener noreferrer"},QT={style:{"text-align":"center"}},ZT={style:{"text-align":"left"}},$T=t("code",null,"哈希表",-1),tQ=t("code",null,"字符串",-1),eQ=t("code",null,"动态规划",-1),lQ={style:{"text-align":"left"}},oQ=t("td",{style:{"text-align":"center"}},"2263",-1),nQ={style:{"text-align":"left"}},sQ={href:"https://leetcode.com/problems/make-array-non-decreasing-or-non-increasing",target:"_blank",rel:"noopener noreferrer"},dQ=t("td",{style:{"text-align":"center"}},null,-1),_Q={style:{"text-align":"left"}},iQ=t("code",null,"贪心",-1),cQ=t("code",null,"动态规划",-1),aQ={style:{"text-align":"left"}},rQ=t("td",{style:{"text-align":"center"}},"2266",-1),hQ={style:{"text-align":"left"}},uQ={href:"https://leetcode.com/problems/count-number-of-texts",target:"_blank",rel:"noopener noreferrer"},fQ=t("td",{style:{"text-align":"center"}},null,-1),gQ={style:{"text-align":"left"}},mQ=t("code",null,"哈希表",-1),yQ=t("code",null,"数学",-1),xQ=t("code",null,"字符串",-1),pQ=t("code",null,"1+",-1),bQ={style:{"text-align":"left"}},jQ=t("td",{style:{"text-align":"center"}},"2267",-1),kQ={style:{"text-align":"left"}},MQ={href:"https://leetcode.com/problems/check-if-there-is-a-valid-parentheses-string-path",target:"_blank",rel:"noopener noreferrer"},HQ=t("td",{style:{"text-align":"center"}},null,-1),IQ={style:{"text-align":"left"}},wQ=t("code",null,"数组",-1),vQ=t("code",null,"动态规划",-1),qQ=t("code",null,"矩阵",-1),zQ={style:{"text-align":"left"}},CQ=t("td",{style:{"text-align":"center"}},"2272",-1),OQ={style:{"text-align":"left"}},LQ={href:"https://leetcode.com/problems/substring-with-largest-variance",target:"_blank",rel:"noopener noreferrer"},EQ=t("td",{style:{"text-align":"center"}},null,-1),PQ={style:{"text-align":"left"}},KQ=t("code",null,"数组",-1),VQ=t("code",null,"动态规划",-1),NQ={style:{"text-align":"left"}},DQ=t("td",{style:{"text-align":"center"}},"2291",-1),BQ={style:{"text-align":"left"}},YQ={href:"https://leetcode.com/problems/maximum-profit-from-trading-stocks",target:"_blank",rel:"noopener noreferrer"},AQ=t("td",{style:{"text-align":"center"}},null,-1),JQ={style:{"text-align":"left"}},RQ=t("code",null,"数组",-1),SQ=t("code",null,"动态规划",-1),UQ={style:{"text-align":"left"}},WQ=t("td",{style:{"text-align":"center"}},"2297",-1),XQ={style:{"text-align":"left"}},FQ={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},GQ=t("td",{style:{"text-align":"center"}},null,-1),TQ={style:{"text-align":"left"}},QQ=t("code",null,"栈",-1),ZQ=t("code",null,"图",-1),$Q=t("code",null,"数组",-1),tZ=t("code",null,"3+",-1),eZ={style:{"text-align":"left"}},lZ=t("td",{style:{"text-align":"center"}},"2304",-1),oZ={style:{"text-align":"left"}},nZ={href:"https://leetcode.com/problems/minimum-path-cost-in-a-grid",target:"_blank",rel:"noopener noreferrer"},sZ=t("td",{style:{"text-align":"center"}},null,-1),dZ={style:{"text-align":"left"}},_Z=t("code",null,"数组",-1),iZ=t("code",null,"动态规划",-1),cZ=t("code",null,"矩阵",-1),aZ={style:{"text-align":"left"}},rZ=t("td",{style:{"text-align":"center"}},"2305",-1),hZ={style:{"text-align":"left"}},uZ={href:"https://leetcode.com/problems/fair-distribution-of-cookies",target:"_blank",rel:"noopener noreferrer"},fZ=t("td",{style:{"text-align":"center"}},null,-1),gZ={style:{"text-align":"left"}},mZ=t("code",null,"位运算",-1),yZ=t("code",null,"数组",-1),xZ=t("code",null,"动态规划",-1),pZ=t("code",null,"2+",-1),bZ={style:{"text-align":"left"}},jZ=t("td",{style:{"text-align":"center"}},"2310",-1),kZ={style:{"text-align":"left"}},MZ={href:"https://leetcode.com/problems/sum-of-numbers-with-units-digit-k",target:"_blank",rel:"noopener noreferrer"},HZ=t("td",{style:{"text-align":"center"}},null,-1),IZ={style:{"text-align":"left"}},wZ=t("code",null,"贪心",-1),vZ=t("code",null,"数学",-1),qZ=t("code",null,"动态规划",-1),zZ=t("code",null,"1+",-1),CZ={style:{"text-align":"left"}},OZ=t("td",{style:{"text-align":"center"}},"2311",-1),LZ={style:{"text-align":"left"}},EZ={href:"https://leetcode.com/problems/longest-binary-subsequence-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},PZ=t("td",{style:{"text-align":"center"}},null,-1),KZ={style:{"text-align":"left"}},VZ=t("code",null,"贪心",-1),NZ=t("code",null,"记忆化搜索",-1),DZ=t("code",null,"字符串",-1),BZ=t("code",null,"1+",-1),YZ={style:{"text-align":"left"}},AZ=t("td",{style:{"text-align":"center"}},"2312",-1),JZ={style:{"text-align":"left"}},RZ={href:"https://leetcode.com/problems/selling-pieces-of-wood",target:"_blank",rel:"noopener noreferrer"},SZ=t("td",{style:{"text-align":"center"}},null,-1),UZ={style:{"text-align":"left"}},WZ=t("code",null,"记忆化搜索",-1),XZ=t("code",null,"数组",-1),FZ=t("code",null,"动态规划",-1),GZ={style:{"text-align":"left"}},TZ=t("td",{style:{"text-align":"center"}},"2313",-1),QZ={style:{"text-align":"left"}},ZZ={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},$Z=t("td",{style:{"text-align":"center"}},null,-1),t$={style:{"text-align":"left"}},e$=t("code",null,"树",-1),l$=t("code",null,"深度优先搜索",-1),o$=t("code",null,"动态规划",-1),n$=t("code",null,"1+",-1),s$={style:{"text-align":"left"}},d$=t("td",{style:{"text-align":"center"}},"2318",-1),_$={style:{"text-align":"left"}},i$={href:"https://leetcode.com/problems/number-of-distinct-roll-sequences",target:"_blank",rel:"noopener noreferrer"},c$=t("td",{style:{"text-align":"center"}},null,-1),a$={style:{"text-align":"left"}},r$=t("code",null,"记忆化搜索",-1),h$=t("code",null,"动态规划",-1),u$={style:{"text-align":"left"}},f$=t("td",{style:{"text-align":"center"}},"2320",-1),g$={style:{"text-align":"left"}},m$={href:"https://leetcode.com/problems/count-number-of-ways-to-place-houses",target:"_blank",rel:"noopener noreferrer"},y$=t("td",{style:{"text-align":"center"}},null,-1),x$={style:{"text-align":"left"}},p$=t("code",null,"动态规划",-1),b$={style:{"text-align":"left"}},j$=t("td",{style:{"text-align":"center"}},"2321",-1),k$={style:{"text-align":"left"}},M$={href:"https://leetcode.com/problems/maximum-score-of-spliced-array",target:"_blank",rel:"noopener noreferrer"},H$=t("td",{style:{"text-align":"center"}},null,-1),I$={style:{"text-align":"left"}},w$=t("code",null,"数组",-1),v$=t("code",null,"动态规划",-1),q$={style:{"text-align":"left"}},z$=t("td",{style:{"text-align":"center"}},"2327",-1),C$={style:{"text-align":"left"}},O$={href:"https://leetcode.com/problems/number-of-people-aware-of-a-secret",target:"_blank",rel:"noopener noreferrer"},L$=t("td",{style:{"text-align":"center"}},null,-1),E$={style:{"text-align":"left"}},P$=t("code",null,"队列",-1),K$=t("code",null,"动态规划",-1),V$=t("code",null,"模拟",-1),N$={style:{"text-align":"left"}},D$=t("td",{style:{"text-align":"center"}},"2328",-1),B$={style:{"text-align":"left"}},Y$={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},A$=t("td",{style:{"text-align":"center"}},null,-1),J$={style:{"text-align":"left"}},R$=t("code",null,"深度优先搜索",-1),S$=t("code",null,"广度优先搜索",-1),U$=t("code",null,"图",-1),W$=t("code",null,"5+",-1),X$={style:{"text-align":"left"}},F$=t("td",{style:{"text-align":"center"}},"2338",-1),G$={style:{"text-align":"left"}},T$={href:"https://leetcode.com/problems/count-the-number-of-ideal-arrays",target:"_blank",rel:"noopener noreferrer"},Q$=t("td",{style:{"text-align":"center"}},null,-1),Z$={style:{"text-align":"left"}},$$=t("code",null,"数学",-1),ttt=t("code",null,"动态规划",-1),ett=t("code",null,"组合数学",-1),ltt=t("code",null,"1+",-1),ott={style:{"text-align":"left"}},ntt=t("td",{style:{"text-align":"center"}},"2355",-1),stt={style:{"text-align":"left"}},dtt={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},_tt=t("td",{style:{"text-align":"center"}},null,-1),itt={style:{"text-align":"left"}},ctt=t("code",null,"栈",-1),att=t("code",null,"数组",-1),rtt=t("code",null,"动态规划",-1),htt=t("code",null,"1+",-1),utt={style:{"text-align":"left"}},ftt=t("td",{style:{"text-align":"center"}},"2361",-1),gtt={style:{"text-align":"left"}},mtt={href:"https://leetcode.com/problems/minimum-costs-using-the-train-line",target:"_blank",rel:"noopener noreferrer"},ytt=t("td",{style:{"text-align":"center"}},null,-1),xtt={style:{"text-align":"left"}},ptt=t("code",null,"数组",-1),btt=t("code",null,"动态规划",-1),jtt={style:{"text-align":"left"}},ktt=t("td",{style:{"text-align":"center"}},"2369",-1),Mtt={style:{"text-align":"left"}},Htt={href:"https://leetcode.com/problems/check-if-there-is-a-valid-partition-for-the-array",target:"_blank",rel:"noopener noreferrer"},Itt=t("td",{style:{"text-align":"center"}},null,-1),wtt={style:{"text-align":"left"}},vtt=t("code",null,"数组",-1),qtt=t("code",null,"动态规划",-1),ztt={style:{"text-align":"left"}},Ctt=t("td",{style:{"text-align":"center"}},"2370",-1),Ott={style:{"text-align":"left"}},Ltt={href:"https://leetcode.com/problems/longest-ideal-subsequence",target:"_blank",rel:"noopener noreferrer"},Ett=t("td",{style:{"text-align":"center"}},null,-1),Ptt={style:{"text-align":"left"}},Ktt=t("code",null,"哈希表",-1),Vtt=t("code",null,"字符串",-1),Ntt=t("code",null,"动态规划",-1),Dtt={style:{"text-align":"left"}},Btt=t("td",{style:{"text-align":"center"}},"2376",-1),Ytt={style:{"text-align":"left"}},Att={href:"https://leetcode.com/problems/count-special-integers",target:"_blank",rel:"noopener noreferrer"},Jtt=t("td",{style:{"text-align":"center"}},null,-1),Rtt={style:{"text-align":"left"}},Stt=t("code",null,"数学",-1),Utt=t("code",null,"动态规划",-1),Wtt={style:{"text-align":"left"}},Xtt=t("td",{style:{"text-align":"center"}},"2378",-1),Ftt={style:{"text-align":"left"}},Gtt={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Ttt=t("td",{style:{"text-align":"center"}},null,-1),Qtt={style:{"text-align":"left"}},Ztt=t("code",null,"树",-1),$tt=t("code",null,"深度优先搜索",-1),tet=t("code",null,"动态规划",-1),eet={style:{"text-align":"left"}},oet=t("td",{style:{"text-align":"center"}},"2380",-1),net={style:{"text-align":"left"}},set={href:"https://leetcode.com/problems/time-needed-to-rearrange-a-binary-string",target:"_blank",rel:"noopener noreferrer"},det=t("td",{style:{"text-align":"center"}},null,-1),_et={style:{"text-align":"left"}},iet=t("code",null,"字符串",-1),cet=t("code",null,"动态规划",-1),aet=t("code",null,"模拟",-1),ret={style:{"text-align":"left"}},het=t("td",{style:{"text-align":"center"}},"2393",-1),uet={style:{"text-align":"left"}},fet={href:"https://leetcode.com/problems/count-strictly-increasing-subarrays",target:"_blank",rel:"noopener noreferrer"},get=t("td",{style:{"text-align":"center"}},null,-1),met={style:{"text-align":"left"}},yet=t("code",null,"数组",-1),xet=t("code",null,"数学",-1),pet=t("code",null,"动态规划",-1),bet={style:{"text-align":"left"}},jet=t("td",{style:{"text-align":"center"}},"2400",-1),ket={style:{"text-align":"left"}},Met={href:"https://leetcode.com/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps",target:"_blank",rel:"noopener noreferrer"},Het=t("td",{style:{"text-align":"center"}},null,-1),Iet={style:{"text-align":"left"}},wet=t("code",null,"数学",-1),vet=t("code",null,"动态规划",-1),qet=t("code",null,"组合数学",-1),zet={style:{"text-align":"left"}},Cet=t("td",{style:{"text-align":"center"}},"2403",-1),Oet={style:{"text-align":"left"}},Let={href:"https://leetcode.com/problems/minimum-time-to-kill-all-monsters",target:"_blank",rel:"noopener noreferrer"},Eet=t("td",{style:{"text-align":"center"}},null,-1),Pet={style:{"text-align":"left"}},Ket=t("code",null,"位运算",-1),Vet=t("code",null,"数组",-1),Net=t("code",null,"动态规划",-1),Det=t("code",null,"1+",-1),Bet={style:{"text-align":"left"}},Yet=t("td",{style:{"text-align":"center"}},"2407",-1),Aet={style:{"text-align":"left"}},Jet={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},Ret=t("td",{style:{"text-align":"center"}},null,-1),Set={style:{"text-align":"left"}},Uet=t("code",null,"树状数组",-1),Wet=t("code",null,"线段树",-1),Xet=t("code",null,"队列",-1),Fet=t("code",null,"4+",-1),Get={style:{"text-align":"left"}},Tet=t("td",{style:{"text-align":"center"}},"2420",-1),Qet={style:{"text-align":"left"}},Zet={href:"https://leetcode.com/problems/find-all-good-indices",target:"_blank",rel:"noopener noreferrer"},$et=t("td",{style:{"text-align":"center"}},null,-1),tlt={style:{"text-align":"left"}},elt=t("code",null,"数组",-1),llt=t("code",null,"动态规划",-1),olt=t("code",null,"前缀和",-1),nlt={style:{"text-align":"left"}},slt=t("td",{style:{"text-align":"center"}},"2430",-1),dlt={style:{"text-align":"left"}},_lt={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},ilt=t("td",{style:{"text-align":"center"}},null,-1),clt={style:{"text-align":"left"}},alt=t("code",null,"字符串",-1),rlt=t("code",null,"动态规划",-1),hlt=t("code",null,"字符串匹配",-1),ult=t("code",null,"2+",-1),flt={style:{"text-align":"left"}},glt=t("td",{style:{"text-align":"center"}},"2431",-1),mlt={style:{"text-align":"left"}},ylt={href:"https://leetcode.com/problems/maximize-total-tastiness-of-purchased-fruits",target:"_blank",rel:"noopener noreferrer"},xlt=t("td",{style:{"text-align":"center"}},null,-1),plt={style:{"text-align":"left"}},blt=t("code",null,"数组",-1),jlt=t("code",null,"动态规划",-1),klt={style:{"text-align":"left"}},Mlt=t("td",{style:{"text-align":"center"}},"2435",-1),Hlt={style:{"text-align":"left"}},Ilt={href:"https://leetcode.com/problems/paths-in-matrix-whose-sum-is-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},wlt=t("td",{style:{"text-align":"center"}},null,-1),vlt={style:{"text-align":"left"}},qlt=t("code",null,"数组",-1),zlt=t("code",null,"动态规划",-1),Clt=t("code",null,"矩阵",-1),Olt={style:{"text-align":"left"}},Llt=t("td",{style:{"text-align":"center"}},"2436",-1),Elt={style:{"text-align":"left"}},Plt={href:"https://leetcode.com/problems/minimum-split-into-subarrays-with-gcd-greater-than-one",target:"_blank",rel:"noopener noreferrer"},Klt=t("td",{style:{"text-align":"center"}},null,-1),Vlt={style:{"text-align":"left"}},Nlt=t("code",null,"贪心",-1),Dlt=t("code",null,"数组",-1),Blt=t("code",null,"数学",-1),Ylt=t("code",null,"2+",-1),Alt={style:{"text-align":"left"}},Jlt=t("td",{style:{"text-align":"center"}},"2439",-1),Rlt={style:{"text-align":"left"}},Slt={href:"https://leetcode.com/problems/minimize-maximum-of-array",target:"_blank",rel:"noopener noreferrer"},Ult=t("td",{style:{"text-align":"center"}},null,-1),Wlt={style:{"text-align":"left"}},Xlt=t("code",null,"贪心",-1),Flt=t("code",null,"数组",-1),Glt=t("code",null,"二分查找",-1),Tlt=t("code",null,"2+",-1),Qlt={style:{"text-align":"left"}},Zlt=t("td",{style:{"text-align":"center"}},"2463",-1),$lt={style:{"text-align":"left"}},tot={href:"https://leetcode.com/problems/minimum-total-distance-traveled",target:"_blank",rel:"noopener noreferrer"},eot=t("td",{style:{"text-align":"center"}},null,-1),lot={style:{"text-align":"left"}},oot=t("code",null,"数组",-1),not=t("code",null,"动态规划",-1),sot=t("code",null,"排序",-1),dot={style:{"text-align":"left"}},_ot=t("td",{style:{"text-align":"center"}},"2464",-1),iot={style:{"text-align":"left"}},cot={href:"https://leetcode.com/problems/minimum-subarrays-in-a-valid-split",target:"_blank",rel:"noopener noreferrer"},aot=t("td",{style:{"text-align":"center"}},null,-1),rot={style:{"text-align":"left"}},hot=t("code",null,"数组",-1),uot=t("code",null,"数学",-1),fot=t("code",null,"动态规划",-1),got=t("code",null,"1+",-1),mot={style:{"text-align":"left"}},yot=t("td",{style:{"text-align":"center"}},"2466",-1),xot={style:{"text-align":"left"}},pot={href:"https://leetcode.com/problems/count-ways-to-build-good-strings",target:"_blank",rel:"noopener noreferrer"},bot=t("td",{style:{"text-align":"center"}},null,-1),jot={style:{"text-align":"left"}},kot=t("code",null,"动态规划",-1),Mot={style:{"text-align":"left"}},Hot=t("td",{style:{"text-align":"center"}},"2472",-1),Iot={style:{"text-align":"left"}},wot={href:"https://leetcode.com/problems/maximum-number-of-non-overlapping-palindrome-substrings",target:"_blank",rel:"noopener noreferrer"},vot=t("td",{style:{"text-align":"center"}},null,-1),qot={style:{"text-align":"left"}},zot=t("code",null,"贪心",-1),Cot=t("code",null,"双指针",-1),Oot=t("code",null,"字符串",-1),Lot=t("code",null,"1+",-1),Eot={style:{"text-align":"left"}},Pot=t("td",{style:{"text-align":"center"}},"2478",-1),Kot={style:{"text-align":"left"}},Vot={href:"https://leetcode.com/problems/number-of-beautiful-partitions",target:"_blank",rel:"noopener noreferrer"},Not=t("td",{style:{"text-align":"center"}},null,-1),Dot={style:{"text-align":"left"}},Bot=t("code",null,"字符串",-1),Yot=t("code",null,"动态规划",-1),Aot={style:{"text-align":"left"}},Jot=t("td",{style:{"text-align":"center"}},"2484",-1),Rot={style:{"text-align":"left"}},Sot={href:"https://leetcode.com/problems/count-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},Uot=t("td",{style:{"text-align":"center"}},null,-1),Wot={style:{"text-align":"left"}},Xot=t("code",null,"字符串",-1),Fot=t("code",null,"动态规划",-1),Got={style:{"text-align":"left"}},Tot=t("td",{style:{"text-align":"center"}},"2495",-1),Qot={style:{"text-align":"left"}},Zot={href:"https://leetcode.com/problems/number-of-subarrays-having-even-product",target:"_blank",rel:"noopener noreferrer"},$ot=t("td",{style:{"text-align":"center"}},null,-1),tnt={style:{"text-align":"left"}},ent=t("code",null,"数组",-1),lnt=t("code",null,"数学",-1),ont=t("code",null,"动态规划",-1),nnt={style:{"text-align":"left"}},snt=t("td",{style:{"text-align":"center"}},"2501",-1),dnt={style:{"text-align":"left"}},_nt={href:"https://leetcode.com/problems/longest-square-streak-in-an-array",target:"_blank",rel:"noopener noreferrer"},int=t("td",{style:{"text-align":"center"}},null,-1),cnt={style:{"text-align":"left"}},ant=t("code",null,"数组",-1),rnt=t("code",null,"哈希表",-1),hnt=t("code",null,"二分查找",-1),unt=t("code",null,"2+",-1),fnt={style:{"text-align":"left"}},gnt=t("td",{style:{"text-align":"center"}},"2510",-1),mnt={style:{"text-align":"left"}},ynt={href:"https://leetcode.com/problems/check-if-there-is-a-path-with-equal-number-of-0s-and-1s",target:"_blank",rel:"noopener noreferrer"},xnt=t("td",{style:{"text-align":"center"}},null,-1),pnt={style:{"text-align":"left"}},bnt=t("code",null,"数组",-1),jnt=t("code",null,"动态规划",-1),knt=t("code",null,"矩阵",-1),Mnt={style:{"text-align":"left"}},Hnt=t("td",{style:{"text-align":"center"}},"2518",-1),Int={style:{"text-align":"left"}},wnt={href:"https://leetcode.com/problems/number-of-great-partitions",target:"_blank",rel:"noopener noreferrer"},vnt=t("td",{style:{"text-align":"center"}},null,-1),qnt={style:{"text-align":"left"}},znt=t("code",null,"数组",-1),Cnt=t("code",null,"动态规划",-1),Ont={style:{"text-align":"left"}},Lnt=t("td",{style:{"text-align":"center"}},"2522",-1),Ent={style:{"text-align":"left"}},Pnt={href:"https://leetcode.com/problems/partition-string-into-substrings-with-values-at-most-k",target:"_blank",rel:"noopener noreferrer"},Knt=t("td",{style:{"text-align":"center"}},null,-1),Vnt={style:{"text-align":"left"}},Nnt=t("code",null,"贪心",-1),Dnt=t("code",null,"字符串",-1),Bnt=t("code",null,"动态规划",-1),Ynt={style:{"text-align":"left"}},Ant=t("td",{style:{"text-align":"center"}},"2533",-1),Jnt={style:{"text-align":"left"}},Rnt={href:"https://leetcode.com/problems/number-of-good-binary-strings",target:"_blank",rel:"noopener noreferrer"},Snt=t("td",{style:{"text-align":"center"}},null,-1),Unt={style:{"text-align":"left"}},Wnt=t("code",null,"动态规划",-1),Xnt={style:{"text-align":"left"}},Fnt=t("td",{style:{"text-align":"center"}},"2538",-1),Gnt={style:{"text-align":"left"}},Tnt={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},Qnt=t("td",{style:{"text-align":"center"}},null,-1),Znt={style:{"text-align":"left"}},$nt=t("code",null,"树",-1),tst=t("code",null,"深度优先搜索",-1),est=t("code",null,"数组",-1),lst=t("code",null,"1+",-1),ost={style:{"text-align":"left"}},nst=t("td",{style:{"text-align":"center"}},"2547",-1),sst={style:{"text-align":"left"}},dst={href:"https://leetcode.com/problems/minimum-cost-to-split-an-array",target:"_blank",rel:"noopener noreferrer"},_st=t("td",{style:{"text-align":"center"}},null,-1),ist={style:{"text-align":"left"}},cst=t("code",null,"数组",-1),ast=t("code",null,"哈希表",-1),rst=t("code",null,"动态规划",-1),hst=t("code",null,"1+",-1),ust={style:{"text-align":"left"}},fst=t("td",{style:{"text-align":"center"}},"2552",-1),gst={style:{"text-align":"left"}},mst={href:"https://leetcode.com/problems/count-increasing-quadruplets",target:"_blank",rel:"noopener noreferrer"},yst=t("td",{style:{"text-align":"center"}},null,-1),xst={style:{"text-align":"left"}},pst=t("code",null,"树状数组",-1),bst=t("code",null,"数组",-1),jst=t("code",null,"动态规划",-1),kst=t("code",null,"2+",-1),Mst={style:{"text-align":"left"}},Hst=t("td",{style:{"text-align":"center"}},"2556",-1),Ist={style:{"text-align":"left"}},wst={href:"https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},vst=t("td",{style:{"text-align":"center"}},null,-1),qst={style:{"text-align":"left"}},zst=t("code",null,"深度优先搜索",-1),Cst=t("code",null,"广度优先搜索",-1),Ost=t("code",null,"数组",-1),Lst=t("code",null,"2+",-1),Est={style:{"text-align":"left"}},Pst=t("td",{style:{"text-align":"center"}},"2571",-1),Kst={style:{"text-align":"left"}},Vst={href:"https://leetcode.com/problems/minimum-operations-to-reduce-an-integer-to-0",target:"_blank",rel:"noopener noreferrer"},Nst=t("td",{style:{"text-align":"center"}},null,-1),Dst={style:{"text-align":"left"}},Bst=t("code",null,"贪心",-1),Yst=t("code",null,"位运算",-1),Ast=t("code",null,"动态规划",-1),Jst={style:{"text-align":"left"}},Rst=t("td",{style:{"text-align":"center"}},"2572",-1),Sst={style:{"text-align":"left"}},Ust={href:"https://leetcode.com/problems/count-the-number-of-square-free-subsets",target:"_blank",rel:"noopener noreferrer"},Wst=t("td",{style:{"text-align":"center"}},null,-1),Xst={style:{"text-align":"left"}},Fst=t("code",null,"位运算",-1),Gst=t("code",null,"数组",-1),Tst=t("code",null,"数学",-1),Qst=t("code",null,"2+",-1),Zst={style:{"text-align":"left"}},$st=t("td",{style:{"text-align":"center"}},"2573",-1),tdt={style:{"text-align":"left"}},edt={href:"https://leetcode.com/problems/find-the-string-with-lcp",target:"_blank",rel:"noopener noreferrer"},ldt=t("td",{style:{"text-align":"center"}},null,-1),odt={style:{"text-align":"left"}},ndt=t("code",null,"贪心",-1),sdt=t("code",null,"并查集",-1),ddt=t("code",null,"数组",-1),_dt=t("code",null,"3+",-1),idt={style:{"text-align":"left"}},cdt=t("td",{style:{"text-align":"center"}},"2581",-1),adt={style:{"text-align":"left"}},rdt={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},hdt=t("td",{style:{"text-align":"center"}},null,-1),udt={style:{"text-align":"left"}},fdt=t("code",null,"树",-1),gdt=t("code",null,"深度优先搜索",-1),mdt=t("code",null,"数组",-1),ydt=t("code",null,"2+",-1),xdt={style:{"text-align":"left"}},pdt=t("td",{style:{"text-align":"center"}},"2585",-1),bdt={style:{"text-align":"left"}},jdt={href:"https://leetcode.com/problems/number-of-ways-to-earn-points",target:"_blank",rel:"noopener noreferrer"},kdt=t("td",{style:{"text-align":"center"}},null,-1),Mdt={style:{"text-align":"left"}},Hdt=t("code",null,"数组",-1),Idt=t("code",null,"动态规划",-1),wdt={style:{"text-align":"left"}},vdt=t("td",{style:{"text-align":"center"}},"2597",-1),qdt={style:{"text-align":"left"}},zdt={href:"https://leetcode.com/problems/the-number-of-beautiful-subsets",target:"_blank",rel:"noopener noreferrer"},Cdt=t("td",{style:{"text-align":"center"}},null,-1),Odt={style:{"text-align":"left"}},Ldt=t("code",null,"数组",-1),Edt=t("code",null,"哈希表",-1),Pdt=t("code",null,"数学",-1),Kdt=t("code",null,"4+",-1),Vdt={style:{"text-align":"left"}},Ndt=t("td",{style:{"text-align":"center"}},"2606",-1),Ddt={style:{"text-align":"left"}},Bdt={href:"https://leetcode.com/problems/find-the-substring-with-maximum-cost",target:"_blank",rel:"noopener noreferrer"},Ydt=t("td",{style:{"text-align":"center"}},null,-1),Adt={style:{"text-align":"left"}},Jdt=t("code",null,"数组",-1),Rdt=t("code",null,"哈希表",-1),Sdt=t("code",null,"字符串",-1),Udt=t("code",null,"1+",-1),Wdt={style:{"text-align":"left"}},Xdt=t("td",{style:{"text-align":"center"}},"2617",-1),Fdt={style:{"text-align":"left"}},Gdt={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Tdt=t("td",{style:{"text-align":"center"}},null,-1),Qdt={style:{"text-align":"left"}},Zdt=t("code",null,"栈",-1),$dt=t("code",null,"广度优先搜索",-1),t_t=t("code",null,"并查集",-1),e_t=t("code",null,"5+",-1),l_t={style:{"text-align":"left"}},o_t=t("td",{style:{"text-align":"center"}},"2638",-1),n_t={style:{"text-align":"left"}},s_t={href:"https://leetcode.com/problems/count-the-number-of-k-free-subsets",target:"_blank",rel:"noopener noreferrer"},d_t=t("td",{style:{"text-align":"center"}},null,-1),__t={style:{"text-align":"left"}},i_t=t("code",null,"数组",-1),c_t=t("code",null,"数学",-1),a_t=t("code",null,"动态规划",-1),r_t=t("code",null,"2+",-1),h_t={style:{"text-align":"left"}},u_t=t("td",{style:{"text-align":"center"}},"2645",-1),f_t={style:{"text-align":"left"}},g_t={href:"https://leetcode.com/problems/minimum-additions-to-make-valid-string",target:"_blank",rel:"noopener noreferrer"},m_t=t("td",{style:{"text-align":"center"}},null,-1),y_t={style:{"text-align":"left"}},x_t=t("code",null,"栈",-1),p_t=t("code",null,"贪心",-1),b_t=t("code",null,"字符串",-1),j_t=t("code",null,"1+",-1),k_t={style:{"text-align":"left"}},M_t=t("td",{style:{"text-align":"center"}},"2646",-1),H_t={style:{"text-align":"left"}},I_t={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},w_t=t("td",{style:{"text-align":"center"}},null,-1),v_t={style:{"text-align":"left"}},q_t=t("code",null,"树",-1),z_t=t("code",null,"深度优先搜索",-1),C_t=t("code",null,"图",-1),O_t=t("code",null,"2+",-1),L_t={style:{"text-align":"left"}},E_t=t("td",{style:{"text-align":"center"}},"2673",-1),P_t={style:{"text-align":"left"}},K_t={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},V_t=t("td",{style:{"text-align":"center"}},null,-1),N_t={style:{"text-align":"left"}},D_t=t("code",null,"贪心",-1),B_t=t("code",null,"树",-1),Y_t=t("code",null,"数组",-1),A_t=t("code",null,"2+",-1),J_t={style:{"text-align":"left"}},R_t=t("td",{style:{"text-align":"center"}},"2681",-1),S_t={style:{"text-align":"left"}},U_t={href:"https://leetcode.com/problems/power-of-heroes",target:"_blank",rel:"noopener noreferrer"},W_t=t("td",{style:{"text-align":"center"}},null,-1),X_t={style:{"text-align":"left"}},F_t=t("code",null,"数组",-1),G_t=t("code",null,"数学",-1),T_t=t("code",null,"动态规划",-1),Q_t=t("code",null,"2+",-1),Z_t={style:{"text-align":"left"}},$_t=t("td",{style:{"text-align":"center"}},"2684",-1),tit={style:{"text-align":"left"}},eit={href:"https://leetcode.com/problems/maximum-number-of-moves-in-a-grid",target:"_blank",rel:"noopener noreferrer"},lit=t("td",{style:{"text-align":"center"}},null,-1),oit={style:{"text-align":"left"}},nit=t("code",null,"数组",-1),sit=t("code",null,"动态规划",-1),dit=t("code",null,"矩阵",-1),_it={style:{"text-align":"left"}},iit=t("td",{style:{"text-align":"center"}},"2707",-1),cit={style:{"text-align":"left"}},ait={href:"https://leetcode.com/problems/extra-characters-in-a-string",target:"_blank",rel:"noopener noreferrer"},rit=t("td",{style:{"text-align":"center"}},null,-1),hit={style:{"text-align":"left"}},uit=t("code",null,"字典树",-1),fit=t("code",null,"数组",-1),git=t("code",null,"哈希表",-1),mit=t("code",null,"2+",-1),yit={style:{"text-align":"left"}},xit=t("td",{style:{"text-align":"center"}},"2708",-1),pit={style:{"text-align":"left"}},bit={href:"https://leetcode.com/problems/maximum-strength-of-a-group",target:"_blank",rel:"noopener noreferrer"},jit=t("td",{style:{"text-align":"center"}},null,-1),kit={style:{"text-align":"left"}},Mit=t("code",null,"贪心",-1),Hit=t("code",null,"位运算",-1),Iit=t("code",null,"数组",-1),wit=t("code",null,"4+",-1),vit={style:{"text-align":"left"}},qit=t("td",{style:{"text-align":"center"}},"2712",-1),zit={style:{"text-align":"left"}},Cit={href:"https://leetcode.com/problems/minimum-cost-to-make-all-characters-equal",target:"_blank",rel:"noopener noreferrer"},Oit=t("td",{style:{"text-align":"center"}},null,-1),Lit={style:{"text-align":"left"}},Eit=t("code",null,"贪心",-1),Pit=t("code",null,"字符串",-1),Kit=t("code",null,"动态规划",-1),Vit={style:{"text-align":"left"}},Nit=t("td",{style:{"text-align":"center"}},"2713",-1),Dit={style:{"text-align":"left"}},Bit={href:"https://leetcode.com/problems/maximum-strictly-increasing-cells-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Yit=t("td",{style:{"text-align":"center"}},null,-1),Ait={style:{"text-align":"left"}},Jit=t("code",null,"记忆化搜索",-1),Rit=t("code",null,"数组",-1),Sit=t("code",null,"哈希表",-1),Uit=t("code",null,"5+",-1),Wit={style:{"text-align":"left"}},Xit=t("td",{style:{"text-align":"center"}},"2719",-1),Fit={style:{"text-align":"left"}},Git={href:"https://leetcode.com/problems/count-of-integers",target:"_blank",rel:"noopener noreferrer"},Tit=t("td",{style:{"text-align":"center"}},null,-1),Qit={style:{"text-align":"left"}},Zit=t("code",null,"数学",-1),$it=t("code",null,"字符串",-1),tct=t("code",null,"动态规划",-1),ect={style:{"text-align":"left"}},lct=t("td",{style:{"text-align":"center"}},"2741",-1),oct={style:{"text-align":"left"}},nct={href:"https://leetcode.com/problems/special-permutations",target:"_blank",rel:"noopener noreferrer"},sct=t("td",{style:{"text-align":"center"}},null,-1),dct={style:{"text-align":"left"}},_ct=t("code",null,"位运算",-1),ict=t("code",null,"数组",-1),cct=t("code",null,"动态规划",-1),act=t("code",null,"1+",-1),rct={style:{"text-align":"left"}},hct=t("td",{style:{"text-align":"center"}},"2742",-1),uct={style:{"text-align":"left"}},fct={href:"https://leetcode.com/problems/painting-the-walls",target:"_blank",rel:"noopener noreferrer"},gct=t("td",{style:{"text-align":"center"}},null,-1),mct={style:{"text-align":"left"}},yct=t("code",null,"数组",-1),xct=t("code",null,"动态规划",-1),pct={style:{"text-align":"left"}},bct=t("td",{style:{"text-align":"center"}},"2745",-1),jct={style:{"text-align":"left"}},kct={href:"https://leetcode.com/problems/construct-the-longest-new-string",target:"_blank",rel:"noopener noreferrer"},Mct=t("td",{style:{"text-align":"center"}},null,-1),Hct={style:{"text-align":"left"}},Ict=t("code",null,"贪心",-1),wct=t("code",null,"脑筋急转弯",-1),vct=t("code",null,"数学",-1),qct=t("code",null,"1+",-1),zct={style:{"text-align":"left"}},Cct=t("td",{style:{"text-align":"center"}},"2746",-1),Oct={style:{"text-align":"left"}},Lct={href:"https://leetcode.com/problems/decremental-string-concatenation",target:"_blank",rel:"noopener noreferrer"},Ect=t("td",{style:{"text-align":"center"}},null,-1),Pct={style:{"text-align":"left"}},Kct=t("code",null,"数组",-1),Vct=t("code",null,"字符串",-1),Nct=t("code",null,"动态规划",-1),Dct={style:{"text-align":"left"}},Bct=t("td",{style:{"text-align":"center"}},"2750",-1),Yct={style:{"text-align":"left"}},Act={href:"https://leetcode.com/problems/ways-to-split-array-into-good-subarrays",target:"_blank",rel:"noopener noreferrer"},Jct=t("td",{style:{"text-align":"center"}},null,-1),Rct={style:{"text-align":"left"}},Sct=t("code",null,"数组",-1),Uct=t("code",null,"数学",-1),Wct=t("code",null,"动态规划",-1),Xct={style:{"text-align":"left"}},Fct=t("td",{style:{"text-align":"center"}},"2767",-1),Gct={style:{"text-align":"left"}},Tct={href:"https://leetcode.com/problems/partition-string-into-minimum-beautiful-substrings",target:"_blank",rel:"noopener noreferrer"},Qct=t("td",{style:{"text-align":"center"}},null,-1),Zct={style:{"text-align":"left"}},$ct=t("code",null,"哈希表",-1),tat=t("code",null,"字符串",-1),eat=t("code",null,"动态规划",-1),lat=t("code",null,"1+",-1),oat={style:{"text-align":"left"}},nat=t("td",{style:{"text-align":"center"}},"2770",-1),sat={style:{"text-align":"left"}},dat={href:"https://leetcode.com/problems/maximum-number-of-jumps-to-reach-the-last-index",target:"_blank",rel:"noopener noreferrer"},_at=t("td",{style:{"text-align":"center"}},null,-1),iat={style:{"text-align":"left"}},cat=t("code",null,"数组",-1),aat=t("code",null,"动态规划",-1),rat={style:{"text-align":"left"}},hat=t("td",{style:{"text-align":"center"}},"2771",-1),uat={style:{"text-align":"left"}},fat={href:"https://leetcode.com/problems/longest-non-decreasing-subarray-from-two-arrays",target:"_blank",rel:"noopener noreferrer"},gat=t("td",{style:{"text-align":"center"}},null,-1),mat={style:{"text-align":"left"}},yat=t("code",null,"数组",-1),xat=t("code",null,"动态规划",-1),pat={style:{"text-align":"left"}},bat=t("td",{style:{"text-align":"center"}},"2786",-1),jat={style:{"text-align":"left"}},kat={href:"https://leetcode.com/problems/visit-array-positions-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},Mat=t("td",{style:{"text-align":"center"}},null,-1),Hat={style:{"text-align":"left"}},Iat=t("code",null,"数组",-1),wat=t("code",null,"动态规划",-1),vat={style:{"text-align":"left"}},qat=t("td",{style:{"text-align":"center"}},"2787",-1),zat={style:{"text-align":"left"}},Cat={href:"https://leetcode.com/problems/ways-to-express-an-integer-as-sum-of-powers",target:"_blank",rel:"noopener noreferrer"},Oat=t("td",{style:{"text-align":"center"}},null,-1),Lat={style:{"text-align":"left"}},Eat=t("code",null,"动态规划",-1),Pat={style:{"text-align":"left"}},Kat=t("td",{style:{"text-align":"center"}},"2791",-1),Vat={style:{"text-align":"left"}},Nat={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Dat=t("td",{style:{"text-align":"center"}},null,-1),Bat={style:{"text-align":"left"}},Yat=t("code",null,"位运算",-1),Aat=t("code",null,"树",-1),Jat=t("code",null,"深度优先搜索",-1),Rat=t("code",null,"2+",-1),Sat={style:{"text-align":"left"}},Uat=t("td",{style:{"text-align":"center"}},"2801",-1),Wat={style:{"text-align":"left"}},Xat={href:"https://leetcode.com/problems/count-stepping-numbers-in-range",target:"_blank",rel:"noopener noreferrer"},Fat=t("td",{style:{"text-align":"center"}},null,-1),Gat={style:{"text-align":"left"}},Tat=t("code",null,"字符串",-1),Qat=t("code",null,"动态规划",-1),Zat={style:{"text-align":"left"}},$at=t("td",{style:{"text-align":"center"}},"2809",-1),trt={style:{"text-align":"left"}},ert={href:"https://leetcode.com/problems/minimum-time-to-make-array-sum-at-most-x",target:"_blank",rel:"noopener noreferrer"},lrt=t("td",{style:{"text-align":"center"}},null,-1),ort={style:{"text-align":"left"}},nrt=t("code",null,"数组",-1),srt=t("code",null,"动态规划",-1),drt=t("code",null,"排序",-1),_rt={style:{"text-align":"left"}},irt=t("td",{style:{"text-align":"center"}},"2811",-1),crt={style:{"text-align":"left"}},art={href:"https://leetcode.com/problems/check-if-it-is-possible-to-split-array",target:"_blank",rel:"noopener noreferrer"},rrt=t("td",{style:{"text-align":"center"}},null,-1),hrt={style:{"text-align":"left"}},urt=t("code",null,"贪心",-1),frt=t("code",null,"数组",-1),grt=t("code",null,"动态规划",-1),mrt={style:{"text-align":"left"}},yrt=t("td",{style:{"text-align":"center"}},"2826",-1),xrt={style:{"text-align":"left"}},prt={href:"https://leetcode.com/problems/sorting-three-groups",target:"_blank",rel:"noopener noreferrer"},brt=t("td",{style:{"text-align":"center"}},null,-1),jrt={style:{"text-align":"left"}},krt=t("code",null,"数组",-1),Mrt=t("code",null,"二分查找",-1),Hrt=t("code",null,"动态规划",-1),Irt={style:{"text-align":"left"}},wrt=t("td",{style:{"text-align":"center"}},"2827",-1),vrt={style:{"text-align":"left"}},qrt={href:"https://leetcode.com/problems/number-of-beautiful-integers-in-the-range",target:"_blank",rel:"noopener noreferrer"},zrt=t("td",{style:{"text-align":"center"}},null,-1),Crt={style:{"text-align":"left"}},Ort=t("code",null,"数学",-1),Lrt=t("code",null,"动态规划",-1),Ert={style:{"text-align":"left"}},Prt=t("td",{style:{"text-align":"center"}},"2830",-1),Krt={style:{"text-align":"left"}},Vrt={href:"https://leetcode.com/problems/maximize-the-profit-as-the-salesman",target:"_blank",rel:"noopener noreferrer"},Nrt=t("td",{style:{"text-align":"center"}},null,-1),Drt={style:{"text-align":"left"}},Brt=t("code",null,"数组",-1),Yrt=t("code",null,"哈希表",-1),Art=t("code",null,"二分查找",-1),Jrt=t("code",null,"2+",-1),Rrt={style:{"text-align":"left"}},Srt=t("td",{style:{"text-align":"center"}},"2836",-1),Urt={style:{"text-align":"left"}},Wrt={href:"https://leetcode.com/problems/maximize-value-of-function-in-a-ball-passing-game",target:"_blank",rel:"noopener noreferrer"},Xrt=t("td",{style:{"text-align":"center"}},null,-1),Frt={style:{"text-align":"left"}},Grt=t("code",null,"位运算",-1),Trt=t("code",null,"数组",-1),Qrt=t("code",null,"动态规划",-1),Zrt={style:{"text-align":"left"}},$rt=t("td",{style:{"text-align":"center"}},"2850",-1),tht={style:{"text-align":"left"}},eht={href:"https://leetcode.com/problems/minimum-moves-to-spread-stones-over-grid",target:"_blank",rel:"noopener noreferrer"},lht=t("td",{style:{"text-align":"center"}},null,-1),oht={style:{"text-align":"left"}},nht=t("code",null,"广度优先搜索",-1),sht=t("code",null,"数组",-1),dht=t("code",null,"动态规划",-1),_ht=t("code",null,"1+",-1),iht={style:{"text-align":"left"}},cht=t("td",{style:{"text-align":"center"}},"2851",-1),aht={style:{"text-align":"left"}},rht={href:"https://leetcode.com/problems/string-transformation",target:"_blank",rel:"noopener noreferrer"},hht=t("td",{style:{"text-align":"center"}},null,-1),uht={style:{"text-align":"left"}},fht=t("code",null,"数学",-1),ght=t("code",null,"字符串",-1),mht=t("code",null,"动态规划",-1),yht=t("code",null,"1+",-1),xht={style:{"text-align":"left"}},pht=t("td",{style:{"text-align":"center"}},"2858",-1),bht={style:{"text-align":"left"}},jht={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},kht=t("td",{style:{"text-align":"center"}},null,-1),Mht={style:{"text-align":"left"}},Hht=t("code",null,"深度优先搜索",-1),Iht=t("code",null,"广度优先搜索",-1),wht=t("code",null,"图",-1),vht=t("code",null,"1+",-1),qht={style:{"text-align":"left"}},zht=t("td",{style:{"text-align":"center"}},"2867",-1),Cht={style:{"text-align":"left"}},Oht={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Lht=t("td",{style:{"text-align":"center"}},null,-1),Eht={style:{"text-align":"left"}},Pht=t("code",null,"树",-1),Kht=t("code",null,"深度优先搜索",-1),Vht=t("code",null,"数学",-1),Nht=t("code",null,"2+",-1),Dht={style:{"text-align":"left"}},Bht=t("td",{style:{"text-align":"center"}},"2876",-1),Yht={style:{"text-align":"left"}},Aht={href:"https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},Jht=t("td",{style:{"text-align":"center"}},null,-1),Rht={style:{"text-align":"left"}},Sht=t("code",null,"图",-1),Uht=t("code",null,"记忆化搜索",-1),Wht=t("code",null,"动态规划",-1),Xht={style:{"text-align":"left"}},Fht=t("td",{style:{"text-align":"center"}},"2892",-1),Ght={style:{"text-align":"left"}},Tht={href:"https://leetcode.com/problems/minimizing-array-after-replacing-pairs-with-their-product",target:"_blank",rel:"noopener noreferrer"},Qht=t("td",{style:{"text-align":"center"}},null,-1),Zht={style:{"text-align":"left"}},$ht=t("code",null,"贪心",-1),t1t=t("code",null,"数组",-1),e1t=t("code",null,"动态规划",-1),l1t={style:{"text-align":"left"}},o1t=t("td",{style:{"text-align":"center"}},"2896",-1),n1t={style:{"text-align":"left"}},s1t={href:"https://leetcode.com/problems/apply-operations-to-make-two-strings-equal",target:"_blank",rel:"noopener noreferrer"},d1t=t("td",{style:{"text-align":"center"}},null,-1),_1t={style:{"text-align":"left"}},i1t=t("code",null,"字符串",-1),c1t=t("code",null,"动态规划",-1),a1t={style:{"text-align":"left"}},r1t=t("td",{style:{"text-align":"center"}},"2900",-1),h1t={style:{"text-align":"left"}},u1t={href:"https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-i",target:"_blank",rel:"noopener noreferrer"},f1t=t("td",{style:{"text-align":"center"}},null,-1),g1t={style:{"text-align":"left"}},m1t=t("code",null,"贪心",-1),y1t=t("code",null,"数组",-1),x1t=t("code",null,"字符串",-1),p1t=t("code",null,"1+",-1),b1t={style:{"text-align":"left"}},j1t=t("td",{style:{"text-align":"center"}},"2901",-1),k1t={style:{"text-align":"left"}},M1t={href:"https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},H1t=t("td",{style:{"text-align":"center"}},null,-1),I1t={style:{"text-align":"left"}},w1t=t("code",null,"数组",-1),v1t=t("code",null,"字符串",-1),q1t=t("code",null,"动态规划",-1),z1t={style:{"text-align":"left"}},C1t=t("td",{style:{"text-align":"center"}},"2902",-1),O1t={style:{"text-align":"left"}},L1t={href:"https://leetcode.com/problems/count-of-sub-multisets-with-bounded-sum",target:"_blank",rel:"noopener noreferrer"},E1t=t("td",{style:{"text-align":"center"}},null,-1),P1t={style:{"text-align":"left"}},K1t=t("code",null,"数组",-1),V1t=t("code",null,"哈希表",-1),N1t=t("code",null,"动态规划",-1),D1t=t("code",null,"1+",-1),B1t={style:{"text-align":"left"}},Y1t=t("td",{style:{"text-align":"center"}},"2911",-1),A1t={style:{"text-align":"left"}},J1t={href:"https://leetcode.com/problems/minimum-changes-to-make-k-semi-palindromes",target:"_blank",rel:"noopener noreferrer"},R1t=t("td",{style:{"text-align":"center"}},null,-1),S1t={style:{"text-align":"left"}},U1t=t("code",null,"双指针",-1),W1t=t("code",null,"字符串",-1),X1t=t("code",null,"动态规划",-1),F1t={style:{"text-align":"left"}},G1t=t("td",{style:{"text-align":"center"}},"2912",-1),T1t={style:{"text-align":"left"}},Q1t={href:"https://leetcode.com/problems/number-of-ways-to-reach-destination-in-the-grid",target:"_blank",rel:"noopener noreferrer"},Z1t=t("td",{style:{"text-align":"center"}},null,-1),$1t={style:{"text-align":"left"}},tut=t("code",null,"数学",-1),eut=t("code",null,"动态规划",-1),lut=t("code",null,"组合数学",-1),out={style:{"text-align":"left"}},nut=t("td",{style:{"text-align":"center"}},"2915",-1),sut={style:{"text-align":"left"}},dut={href:"https://leetcode.com/problems/length-of-the-longest-subsequence-that-sums-to-target",target:"_blank",rel:"noopener noreferrer"},_ut=t("td",{style:{"text-align":"center"}},null,-1),iut={style:{"text-align":"left"}},cut=t("code",null,"数组",-1),aut=t("code",null,"动态规划",-1),rut={style:{"text-align":"left"}},hut=t("td",{style:{"text-align":"center"}},"2916",-1),uut={style:{"text-align":"left"}},fut={href:"https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},gut=t("td",{style:{"text-align":"center"}},null,-1),mut={style:{"text-align":"left"}},yut=t("code",null,"树状数组",-1),xut=t("code",null,"线段树",-1),put=t("code",null,"数组",-1),but=t("code",null,"1+",-1),jut={style:{"text-align":"left"}},kut=t("td",{style:{"text-align":"center"}},"2919",-1),Mut={style:{"text-align":"left"}},Hut={href:"https://leetcode.com/problems/minimum-increment-operations-to-make-array-beautiful",target:"_blank",rel:"noopener noreferrer"},Iut=t("td",{style:{"text-align":"center"}},null,-1),wut={style:{"text-align":"left"}},vut=t("code",null,"数组",-1),qut=t("code",null,"动态规划",-1),zut={style:{"text-align":"left"}},Cut=t("td",{style:{"text-align":"center"}},"2920",-1),Out={style:{"text-align":"left"}},Lut={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},Eut=t("td",{style:{"text-align":"center"}},null,-1),Put={style:{"text-align":"left"}},Kut=t("code",null,"位运算",-1),Vut=t("code",null,"树",-1),Nut=t("code",null,"深度优先搜索",-1),Dut=t("code",null,"2+",-1),But={style:{"text-align":"left"}},Yut=t("td",{style:{"text-align":"center"}},"2925",-1),Aut={style:{"text-align":"left"}},Jut={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},Rut=t("td",{style:{"text-align":"center"}},null,-1),Sut={style:{"text-align":"left"}},Uut=t("code",null,"树",-1),Wut=t("code",null,"深度优先搜索",-1),Xut=t("code",null,"动态规划",-1),Fut={style:{"text-align":"left"}},Gut=t("td",{style:{"text-align":"center"}},"2926",-1),Tut={style:{"text-align":"left"}},Qut={href:"https://leetcode.com/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},Zut=t("td",{style:{"text-align":"center"}},null,-1),$ut={style:{"text-align":"left"}},tft=t("code",null,"树状数组",-1),eft=t("code",null,"线段树",-1),lft=t("code",null,"数组",-1),oft=t("code",null,"2+",-1),nft={style:{"text-align":"left"}},sft=t("td",{style:{"text-align":"center"}},"2930",-1),dft={style:{"text-align":"left"}},_ft={href:"https://leetcode.com/problems/number-of-strings-which-can-be-rearranged-to-contain-substring",target:"_blank",rel:"noopener noreferrer"},ift=t("td",{style:{"text-align":"center"}},null,-1),cft={style:{"text-align":"left"}},aft=t("code",null,"数学",-1),rft=t("code",null,"动态规划",-1),hft=t("code",null,"组合数学",-1),uft={style:{"text-align":"left"}},fft=t("td",{style:{"text-align":"center"}},"2944",-1),gft={style:{"text-align":"left"}},mft={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},yft=t("td",{style:{"text-align":"center"}},null,-1),xft={style:{"text-align":"left"}},pft=t("code",null,"队列",-1),bft=t("code",null,"数组",-1),jft=t("code",null,"动态规划",-1),kft=t("code",null,"2+",-1),Mft={style:{"text-align":"left"}},Hft=t("td",{style:{"text-align":"center"}},"2945",-1),Ift={style:{"text-align":"left"}},wft={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},vft=t("td",{style:{"text-align":"center"}},null,-1),qft={style:{"text-align":"left"}},zft=t("code",null,"栈",-1),Cft=t("code",null,"队列",-1),Oft=t("code",null,"数组",-1),Lft=t("code",null,"4+",-1),Eft={style:{"text-align":"left"}},Pft=t("td",{style:{"text-align":"center"}},"2957",-1),Kft={style:{"text-align":"left"}},Vft={href:"https://leetcode.com/problems/remove-adjacent-almost-equal-characters",target:"_blank",rel:"noopener noreferrer"},Nft=t("td",{style:{"text-align":"center"}},null,-1),Dft={style:{"text-align":"left"}},Bft=t("code",null,"贪心",-1),Yft=t("code",null,"字符串",-1),Aft=t("code",null,"动态规划",-1),Jft={style:{"text-align":"left"}},Rft=t("td",{style:{"text-align":"center"}},"2969",-1),Sft={style:{"text-align":"left"}},Uft={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},Wft=t("td",{style:{"text-align":"center"}},null,-1),Xft={style:{"text-align":"left"}},Fft=t("code",null,"队列",-1),Gft=t("code",null,"数组",-1),Tft=t("code",null,"动态规划",-1),Qft=t("code",null,"2+",-1),Zft={style:{"text-align":"left"}},$ft=t("td",{style:{"text-align":"center"}},"2973",-1),tgt={style:{"text-align":"left"}},egt={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},lgt=t("td",{style:{"text-align":"center"}},null,-1),ogt={style:{"text-align":"left"}},ngt=t("code",null,"树",-1),sgt=t("code",null,"深度优先搜索",-1),dgt=t("code",null,"动态规划",-1),_gt=t("code",null,"2+",-1),igt={style:{"text-align":"left"}},cgt=t("td",{style:{"text-align":"center"}},"2977",-1),agt={style:{"text-align":"left"}},rgt={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},hgt=t("td",{style:{"text-align":"center"}},null,-1),ugt={style:{"text-align":"left"}},fgt=t("code",null,"图",-1),ggt=t("code",null,"字典树",-1),mgt=t("code",null,"数组",-1),ygt=t("code",null,"3+",-1),xgt={style:{"text-align":"left"}},pgt=t("td",{style:{"text-align":"center"}},"2979",-1),bgt={style:{"text-align":"left"}},jgt={href:"https://leetcode.com/problems/most-expensive-item-that-can-not-be-bought",target:"_blank",rel:"noopener noreferrer"},kgt=t("td",{style:{"text-align":"center"}},null,-1),Mgt={style:{"text-align":"left"}},Hgt=t("code",null,"数学",-1),Igt=t("code",null,"动态规划",-1),wgt=t("code",null,"数论",-1),vgt={style:{"text-align":"left"}},qgt=t("td",{style:{"text-align":"center"}},"2992",-1),zgt={style:{"text-align":"left"}},Cgt={href:"https://leetcode.com/problems/number-of-self-divisible-permutations",target:"_blank",rel:"noopener noreferrer"},Ogt=t("td",{style:{"text-align":"center"}},null,-1),Lgt={style:{"text-align":"left"}},Egt=t("code",null,"位运算",-1),Pgt=t("code",null,"数组",-1),Kgt=t("code",null,"动态规划",-1),Vgt=t("code",null,"2+",-1),Ngt={style:{"text-align":"left"}},Dgt=t("td",{style:{"text-align":"center"}},"2998",-1),Bgt={style:{"text-align":"left"}},Ygt={href:"https://leetcode.com/problems/minimum-number-of-operations-to-make-x-and-y-equal",target:"_blank",rel:"noopener noreferrer"},Agt=t("td",{style:{"text-align":"center"}},null,-1),Jgt={style:{"text-align":"left"}},Rgt=t("code",null,"广度优先搜索",-1),Sgt=t("code",null,"记忆化搜索",-1),Ugt=t("code",null,"动态规划",-1),Wgt={style:{"text-align":"left"}},Xgt=t("td",{style:{"text-align":"center"}},"2999",-1),Fgt={style:{"text-align":"left"}},Ggt={href:"https://leetcode.com/problems/count-the-number-of-powerful-integers",target:"_blank",rel:"noopener noreferrer"},Tgt=t("td",{style:{"text-align":"center"}},null,-1),Qgt={style:{"text-align":"left"}},Zgt=t("code",null,"数学",-1),$gt=t("code",null,"字符串",-1),tmt=t("code",null,"动态规划",-1),emt={style:{"text-align":"left"}},lmt=t("td",{style:{"text-align":"center"}},"3003",-1),omt={style:{"text-align":"left"}},nmt={href:"https://leetcode.com/problems/maximize-the-number-of-partitions-after-operations",target:"_blank",rel:"noopener noreferrer"},smt=t("td",{style:{"text-align":"center"}},null,-1),dmt={style:{"text-align":"left"}},_mt=t("code",null,"位运算",-1),imt=t("code",null,"字符串",-1),cmt=t("code",null,"动态规划",-1),amt=t("code",null,"1+",-1),rmt={style:{"text-align":"left"}},hmt=t("td",{style:{"text-align":"center"}},"3004",-1),umt={style:{"text-align":"left"}},fmt={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},gmt=t("td",{style:{"text-align":"center"}},null,-1),mmt={style:{"text-align":"left"}},ymt=t("code",null,"树",-1),xmt=t("code",null,"深度优先搜索",-1),pmt=t("code",null,"数组",-1),bmt=t("code",null,"1+",-1),jmt={style:{"text-align":"left"}},kmt=t("td",{style:{"text-align":"center"}},"3007",-1),Mmt={style:{"text-align":"left"}},Hmt={href:"https://leetcode.com/problems/maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},Imt=t("td",{style:{"text-align":"center"}},null,-1),wmt={style:{"text-align":"left"}},vmt=t("code",null,"位运算",-1),qmt=t("code",null,"二分查找",-1),zmt=t("code",null,"动态规划",-1),Cmt={style:{"text-align":"left"}},Omt=t("td",{style:{"text-align":"center"}},"3018",-1),Lmt={style:{"text-align":"left"}},Emt={href:"https://leetcode.com/problems/maximum-number-of-removal-queries-that-can-be-processed-i",target:"_blank",rel:"noopener noreferrer"},Pmt=t("td",{style:{"text-align":"center"}},null,-1),Kmt={style:{"text-align":"left"}},Vmt=t("code",null,"数组",-1),Nmt=t("code",null,"动态规划",-1),Dmt={style:{"text-align":"left"}},Bmt=t("td",{style:{"text-align":"center"}},"3032",-1),Ymt={style:{"text-align":"left"}},Amt={href:"https://leetcode.com/problems/count-numbers-with-unique-digits-ii",target:"_blank",rel:"noopener noreferrer"},Jmt=t("td",{style:{"text-align":"center"}},null,-1),Rmt={style:{"text-align":"left"}},Smt=t("code",null,"哈希表",-1),Umt=t("code",null,"数学",-1),Wmt=t("code",null,"动态规划",-1),Xmt={style:{"text-align":"left"}},Fmt=t("td",{style:{"text-align":"center"}},"3040",-1),Gmt={style:{"text-align":"left"}},Tmt={href:"https://leetcode.com/problems/maximum-number-of-operations-with-the-same-score-ii",target:"_blank",rel:"noopener noreferrer"},Qmt=t("td",{style:{"text-align":"center"}},null,-1),Zmt={style:{"text-align":"left"}},$mt=t("code",null,"记忆化搜索",-1),tyt=t("code",null,"数组",-1),eyt=t("code",null,"动态规划",-1),lyt={style:{"text-align":"left"}},oyt=t("td",{style:{"text-align":"center"}},"3041",-1),nyt={style:{"text-align":"left"}},syt={href:"https://leetcode.com/problems/maximize-consecutive-elements-in-an-array-after-modification",target:"_blank",rel:"noopener noreferrer"},dyt=t("td",{style:{"text-align":"center"}},null,-1),_yt={style:{"text-align":"left"}},iyt=t("code",null,"数组",-1),cyt=t("code",null,"动态规划",-1),ayt=t("code",null,"排序",-1),ryt={style:{"text-align":"left"}},hyt=t("td",{style:{"text-align":"center"}},"3068",-1),uyt={style:{"text-align":"left"}},fyt={href:"https://leetcode.com/problems/find-the-maximum-sum-of-node-values",target:"_blank",rel:"noopener noreferrer"},gyt=t("td",{style:{"text-align":"center"}},null,-1),myt={style:{"text-align":"left"}},yyt=t("code",null,"贪心",-1),xyt=t("code",null,"位运算",-1),pyt=t("code",null,"树",-1),byt=t("code",null,"3+",-1),jyt={style:{"text-align":"left"}},kyt=t("td",{style:{"text-align":"center"}},"3077",-1),Myt={style:{"text-align":"left"}},Hyt={href:"https://leetcode.com/problems/maximum-strength-of-k-disjoint-subarrays",target:"_blank",rel:"noopener noreferrer"},Iyt=t("td",{style:{"text-align":"center"}},null,-1),wyt={style:{"text-align":"left"}},vyt=t("code",null,"数组",-1),qyt=t("code",null,"动态规划",-1),zyt=t("code",null,"前缀和",-1),Cyt={style:{"text-align":"left"}},Oyt=t("td",{style:{"text-align":"center"}},"3082",-1),Lyt={style:{"text-align":"left"}},Eyt={href:"https://leetcode.com/problems/find-the-sum-of-the-power-of-all-subsequences",target:"_blank",rel:"noopener noreferrer"},Pyt=t("td",{style:{"text-align":"center"}},null,-1),Kyt={style:{"text-align":"left"}},Vyt=t("code",null,"数组",-1),Nyt=t("code",null,"动态规划",-1),Dyt={style:{"text-align":"left"}},Byt=t("td",{style:{"text-align":"center"}},"3098",-1),Yyt={style:{"text-align":"left"}},Ayt={href:"https://leetcode.com/problems/find-the-sum-of-subsequence-powers",target:"_blank",rel:"noopener noreferrer"},Jyt=t("td",{style:{"text-align":"center"}},null,-1),Ryt={style:{"text-align":"left"}},Syt=t("code",null,"数组",-1),Uyt=t("code",null,"动态规划",-1),Wyt=t("code",null,"排序",-1),Xyt={style:{"text-align":"left"}},Fyt=t("td",{style:{"text-align":"center"}},"3117",-1),Gyt={style:{"text-align":"left"}},Tyt={href:"https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},Qyt=t("td",{style:{"text-align":"center"}},null,-1),Zyt={style:{"text-align":"left"}},$yt=t("code",null,"位运算",-1),t3t=t("code",null,"线段树",-1),e3t=t("code",null,"队列",-1),l3t=t("code",null,"3+",-1),o3t={style:{"text-align":"left"}},n3t=t("td",{style:{"text-align":"center"}},"3122",-1),s3t={style:{"text-align":"left"}},d3t={href:"https://leetcode.com/problems/minimum-number-of-operations-to-satisfy-conditions",target:"_blank",rel:"noopener noreferrer"},_3t=t("td",{style:{"text-align":"center"}},null,-1),i3t={style:{"text-align":"left"}},c3t=t("code",null,"数组",-1),a3t=t("code",null,"动态规划",-1),r3t=t("code",null,"矩阵",-1),h3t={style:{"text-align":"left"}},u3t=t("td",{style:{"text-align":"center"}},"3129",-1),f3t={style:{"text-align":"left"}},g3t={href:"https://leetcode.com/problems/find-all-possible-stable-binary-arrays-i",target:"_blank",rel:"noopener noreferrer"},m3t=t("td",{style:{"text-align":"center"}},null,-1),y3t={style:{"text-align":"left"}},x3t=t("code",null,"动态规划",-1),p3t=t("code",null,"前缀和",-1),b3t={style:{"text-align":"left"}},j3t=t("td",{style:{"text-align":"center"}},"3130",-1),k3t={style:{"text-align":"left"}},M3t={href:"https://leetcode.com/problems/find-all-possible-stable-binary-arrays-ii",target:"_blank",rel:"noopener noreferrer"},H3t=t("td",{style:{"text-align":"center"}},null,-1),I3t={style:{"text-align":"left"}},w3t=t("code",null,"动态规划",-1),v3t=t("code",null,"前缀和",-1),q3t={style:{"text-align":"left"}},z3t=t("td",{style:{"text-align":"center"}},"3135",-1),C3t={style:{"text-align":"left"}},O3t={href:"https://leetcode.com/problems/equalize-strings-by-adding-or-removing-characters-at-ends",target:"_blank",rel:"noopener noreferrer"},L3t=t("td",{style:{"text-align":"center"}},null,-1),E3t={style:{"text-align":"left"}},P3t=t("code",null,"字符串",-1),K3t=t("code",null,"二分查找",-1),V3t=t("code",null,"动态规划",-1),N3t=t("code",null,"2+",-1),D3t={style:{"text-align":"left"}},B3t=t("td",{style:{"text-align":"center"}},"3144",-1),Y3t={style:{"text-align":"left"}},A3t={href:"https://leetcode.com/problems/minimum-substring-partition-of-equal-character-frequency",target:"_blank",rel:"noopener noreferrer"},J3t=t("td",{style:{"text-align":"center"}},null,-1),R3t={style:{"text-align":"left"}},S3t=t("code",null,"哈希表",-1),U3t=t("code",null,"字符串",-1),W3t=t("code",null,"动态规划",-1),X3t=t("code",null,"1+",-1),F3t={style:{"text-align":"left"}},G3t=t("td",{style:{"text-align":"center"}},"3148",-1),T3t={style:{"text-align":"left"}},Q3t={href:"https://leetcode.com/problems/maximum-difference-score-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Z3t=t("td",{style:{"text-align":"center"}},null,-1),$3t={style:{"text-align":"left"}},txt=t("code",null,"数组",-1),ext=t("code",null,"动态规划",-1),lxt=t("code",null,"矩阵",-1),oxt={style:{"text-align":"left"}},nxt=t("td",{style:{"text-align":"center"}},"3149",-1),sxt={style:{"text-align":"left"}},dxt={href:"https://leetcode.com/problems/find-the-minimum-cost-array-permutation",target:"_blank",rel:"noopener noreferrer"},_xt=t("td",{style:{"text-align":"center"}},null,-1),ixt={style:{"text-align":"left"}},cxt=t("code",null,"位运算",-1),axt=t("code",null,"数组",-1),rxt=t("code",null,"动态规划",-1),hxt=t("code",null,"1+",-1),uxt={style:{"text-align":"left"}},fxt=t("td",{style:{"text-align":"center"}},"3154",-1),gxt={style:{"text-align":"left"}},mxt={href:"https://leetcode.com/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},yxt=t("td",{style:{"text-align":"center"}},null,-1),xxt={style:{"text-align":"left"}},pxt=t("code",null,"位运算",-1),bxt=t("code",null,"记忆化搜索",-1),jxt=t("code",null,"数学",-1),kxt=t("code",null,"2+",-1),Mxt={style:{"text-align":"left"}},Hxt=t("td",{style:{"text-align":"center"}},"3165",-1),Ixt={style:{"text-align":"left"}},wxt={href:"https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},vxt=t("td",{style:{"text-align":"center"}},null,-1),qxt={style:{"text-align":"left"}},zxt=t("code",null,"线段树",-1),Cxt=t("code",null,"数组",-1),Oxt=t("code",null,"分治",-1),Lxt=t("code",null,"1+",-1),Ext={style:{"text-align":"left"}},Pxt=t("td",{style:{"text-align":"center"}},"3176",-1),Kxt={style:{"text-align":"left"}},Vxt={href:"https://leetcode.com/problems/find-the-maximum-length-of-a-good-subsequence-i",target:"_blank",rel:"noopener noreferrer"},Nxt=t("td",{style:{"text-align":"center"}},null,-1),Dxt={style:{"text-align":"left"}},Bxt=t("code",null,"数组",-1),Yxt=t("code",null,"哈希表",-1),Axt=t("code",null,"动态规划",-1),Jxt={style:{"text-align":"left"}},Rxt=t("td",{style:{"text-align":"center"}},"3177",-1),Sxt={style:{"text-align":"left"}},Uxt={href:"https://leetcode.com/problems/find-the-maximum-length-of-a-good-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},Wxt=t("td",{style:{"text-align":"center"}},null,-1),Xxt={style:{"text-align":"left"}},Fxt=t("code",null,"数组",-1),Gxt=t("code",null,"哈希表",-1),Txt=t("code",null,"动态规划",-1),Qxt={style:{"text-align":"left"}},Zxt=t("td",{style:{"text-align":"center"}},"3180",-1),$xt={style:{"text-align":"left"}},t4t={href:"https://leetcode.com/problems/maximum-total-reward-using-operations-i",target:"_blank",rel:"noopener noreferrer"},e4t=t("td",{style:{"text-align":"center"}},null,-1),l4t={style:{"text-align":"left"}},o4t=t("code",null,"数组",-1),n4t=t("code",null,"动态规划",-1),s4t={style:{"text-align":"left"}},d4t=t("td",{style:{"text-align":"center"}},"3181",-1),_4t={style:{"text-align":"left"}},i4t={href:"https://leetcode.com/problems/maximum-total-reward-using-operations-ii",target:"_blank",rel:"noopener noreferrer"},c4t=t("td",{style:{"text-align":"center"}},null,-1),a4t={style:{"text-align":"left"}},r4t=t("code",null,"位运算",-1),h4t=t("code",null,"数组",-1),u4t=t("code",null,"动态规划",-1),f4t={style:{"text-align":"left"}},g4t=t("td",{style:{"text-align":"center"}},"3183",-1),m4t={style:{"text-align":"left"}},y4t={href:"https://leetcode.com/problems/the-number-of-ways-to-make-the-sum",target:"_blank",rel:"noopener noreferrer"},x4t=t("td",{style:{"text-align":"center"}},null,-1),p4t={style:{"text-align":"left"}},b4t=t("code",null,"数组",-1),j4t=t("code",null,"动态规划",-1),k4t={style:{"text-align":"left"}},M4t=t("td",{style:{"text-align":"center"}},"3186",-1),H4t={style:{"text-align":"left"}},I4t={href:"https://leetcode.com/problems/maximum-total-damage-with-spell-casting",target:"_blank",rel:"noopener noreferrer"},w4t=t("td",{style:{"text-align":"center"}},null,-1),v4t={style:{"text-align":"left"}},q4t=t("code",null,"数组",-1),z4t=t("code",null,"哈希表",-1),C4t=t("code",null,"双指针",-1),O4t=t("code",null,"4+",-1),L4t={style:{"text-align":"left"}},E4t=t("td",{style:{"text-align":"center"}},"3192",-1),P4t={style:{"text-align":"left"}},K4t={href:"https://leetcode.com/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-ii",target:"_blank",rel:"noopener noreferrer"},V4t=t("td",{style:{"text-align":"center"}},null,-1),N4t={style:{"text-align":"left"}},D4t=t("code",null,"贪心",-1),B4t=t("code",null,"数组",-1),Y4t=t("code",null,"动态规划",-1),A4t={style:{"text-align":"left"}},J4t=t("td",{style:{"text-align":"center"}},"3193",-1),R4t={style:{"text-align":"left"}},S4t={href:"https://leetcode.com/problems/count-the-number-of-inversions",target:"_blank",rel:"noopener noreferrer"},U4t=t("td",{style:{"text-align":"center"}},null,-1),W4t={style:{"text-align":"left"}},X4t=t("code",null,"数组",-1),F4t=t("code",null,"动态规划",-1),G4t={style:{"text-align":"left"}},T4t=t("td",{style:{"text-align":"center"}},"3196",-1),Q4t={style:{"text-align":"left"}},Z4t={href:"https://leetcode.com/problems/maximize-total-cost-of-alternating-subarrays",target:"_blank",rel:"noopener noreferrer"},$4t=t("td",{style:{"text-align":"center"}},null,-1),t2t={style:{"text-align":"left"}},e2t=t("code",null,"数组",-1),l2t=t("code",null,"动态规划",-1),o2t={style:{"text-align":"left"}},n2t=t("td",{style:{"text-align":"center"}},"3201",-1),s2t={style:{"text-align":"left"}},d2t={href:"https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-i",target:"_blank",rel:"noopener noreferrer"},_2t=t("td",{style:{"text-align":"center"}},null,-1),i2t={style:{"text-align":"left"}},c2t=t("code",null,"数组",-1),a2t=t("code",null,"动态规划",-1),r2t={style:{"text-align":"left"}},h2t=t("td",{style:{"text-align":"center"}},"3202",-1),u2t={style:{"text-align":"left"}},f2t={href:"https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},g2t=t("td",{style:{"text-align":"center"}},null,-1),m2t={style:{"text-align":"left"}},y2t=t("code",null,"数组",-1),x2t=t("code",null,"动态规划",-1),p2t={style:{"text-align":"left"}},b2t=t("td",{style:{"text-align":"center"}},"3205",-1),j2t={style:{"text-align":"left"}},k2t={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},M2t=t("td",{style:{"text-align":"center"}},null,-1),H2t={style:{"text-align":"left"}},I2t=t("code",null,"栈",-1),w2t=t("code",null,"贪心",-1),v2t=t("code",null,"数组",-1),q2t=t("code",null,"2+",-1),z2t={style:{"text-align":"left"}},C2t=t("td",{style:{"text-align":"center"}},"3213",-1),O2t={style:{"text-align":"left"}},L2t={href:"https://leetcode.com/problems/construct-string-with-minimum-cost",target:"_blank",rel:"noopener noreferrer"},E2t=t("td",{style:{"text-align":"center"}},null,-1),P2t={style:{"text-align":"left"}},K2t=t("code",null,"数组",-1),V2t=t("code",null,"字符串",-1),N2t=t("code",null,"动态规划",-1),D2t=t("code",null,"1+",-1),B2t={style:{"text-align":"left"}},Y2t=t("td",{style:{"text-align":"center"}},"3218",-1),A2t={style:{"text-align":"left"}},J2t={href:"https://leetcode.com/problems/minimum-cost-for-cutting-cake-i",target:"_blank",rel:"noopener noreferrer"},R2t=t("td",{style:{"text-align":"center"}},null,-1),S2t={style:{"text-align":"left"}},U2t=t("code",null,"贪心",-1),W2t=t("code",null,"数组",-1),X2t=t("code",null,"动态规划",-1),F2t=t("code",null,"1+",-1),G2t={style:{"text-align":"left"}},T2t=t("td",{style:{"text-align":"center"}},"3225",-1),Q2t={style:{"text-align":"left"}},Z2t={href:"https://leetcode.com/problems/maximum-score-from-grid-operations",target:"_blank",rel:"noopener noreferrer"},$2t=t("td",{style:{"text-align":"center"}},null,-1),tpt={style:{"text-align":"left"}},ept=t("code",null,"数组",-1),lpt=t("code",null,"动态规划",-1),opt=t("code",null,"矩阵",-1),npt=t("code",null,"1+",-1),spt={style:{"text-align":"left"}},dpt=t("td",{style:{"text-align":"center"}},"3229",-1),_pt={style:{"text-align":"left"}},ipt={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},cpt=t("td",{style:{"text-align":"center"}},null,-1),apt={style:{"text-align":"left"}},rpt=t("code",null,"栈",-1),hpt=t("code",null,"贪心",-1),upt=t("code",null,"数组",-1),fpt=t("code",null,"2+",-1),gpt={style:{"text-align":"left"}},mpt=t("td",{style:{"text-align":"center"}},"3241",-1),ypt={style:{"text-align":"left"}},xpt={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},ppt=t("td",{style:{"text-align":"center"}},null,-1),bpt={style:{"text-align":"left"}},jpt=t("code",null,"树",-1),kpt=t("code",null,"深度优先搜索",-1),Mpt=t("code",null,"图",-1),Hpt=t("code",null,"1+",-1),Ipt={style:{"text-align":"left"}},wpt=t("td",{style:{"text-align":"center"}},"3247",-1),vpt={style:{"text-align":"left"}},qpt={href:"https://leetcode.com/problems/number-of-subsequences-with-odd-sum",target:"_blank",rel:"noopener noreferrer"},zpt=t("td",{style:{"text-align":"center"}},null,-1),Cpt={style:{"text-align":"left"}},Opt=t("code",null,"数组",-1),Lpt=t("code",null,"数学",-1),Ept=t("code",null,"动态规划",-1),Ppt=t("code",null,"1+",-1),Kpt={style:{"text-align":"left"}},Vpt=t("td",{style:{"text-align":"center"}},"3250",-1),Npt={style:{"text-align":"left"}},Dpt={href:"https://leetcode.com/problems/find-the-count-of-monotonic-pairs-i",target:"_blank",rel:"noopener noreferrer"},Bpt=t("td",{style:{"text-align":"center"}},null,-1),Ypt={style:{"text-align":"left"}},Apt=t("code",null,"数组",-1),Jpt=t("code",null,"数学",-1),Rpt=t("code",null,"动态规划",-1),Spt=t("code",null,"2+",-1),Upt={style:{"text-align":"left"}},Wpt=t("td",{style:{"text-align":"center"}},"3251",-1),Xpt={style:{"text-align":"left"}},Fpt={href:"https://leetcode.com/problems/find-the-count-of-monotonic-pairs-ii",target:"_blank",rel:"noopener noreferrer"},Gpt=t("td",{style:{"text-align":"center"}},null,-1),Tpt={style:{"text-align":"left"}},Qpt=t("code",null,"数组",-1),Zpt=t("code",null,"数学",-1),$pt=t("code",null,"动态规划",-1),t5t=t("code",null,"2+",-1),e5t={style:{"text-align":"left"}},l5t=t("td",{style:{"text-align":"center"}},"3256",-1),o5t={style:{"text-align":"left"}},n5t={href:"https://leetcode.com/problems/maximum-value-sum-by-placing-three-rooks-i",target:"_blank",rel:"noopener noreferrer"},s5t=t("td",{style:{"text-align":"center"}},null,-1),d5t={style:{"text-align":"left"}},_5t=t("code",null,"数组",-1),i5t=t("code",null,"动态规划",-1),c5t=t("code",null,"枚举",-1),a5t=t("code",null,"1+",-1),r5t={style:{"text-align":"left"}},h5t=t("td",{style:{"text-align":"center"}},"3257",-1),u5t={style:{"text-align":"left"}},f5t={href:"https://leetcode.com/problems/maximum-value-sum-by-placing-three-rooks-ii",target:"_blank",rel:"noopener noreferrer"},g5t=t("td",{style:{"text-align":"center"}},null,-1),m5t={style:{"text-align":"left"}},y5t=t("code",null,"数组",-1),x5t=t("code",null,"动态规划",-1),p5t=t("code",null,"枚举",-1),b5t=t("code",null,"1+",-1),j5t={style:{"text-align":"left"}},k5t=t("td",{style:{"text-align":"center"}},"3259",-1),M5t={style:{"text-align":"left"}},H5t={href:"https://leetcode.com/problems/maximum-energy-boost-from-two-drinks",target:"_blank",rel:"noopener noreferrer"},I5t=t("td",{style:{"text-align":"center"}},null,-1),w5t={style:{"text-align":"left"}},v5t=t("code",null,"数组",-1),q5t=t("code",null,"动态规划",-1),z5t={style:{"text-align":"left"}},C5t=t("td",{style:{"text-align":"center"}},"3260",-1),O5t={style:{"text-align":"left"}},L5t={href:"https://leetcode.com/problems/find-the-largest-palindrome-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},E5t=t("td",{style:{"text-align":"center"}},null,-1),P5t={style:{"text-align":"left"}},K5t=t("code",null,"贪心",-1),V5t=t("code",null,"数学",-1),N5t=t("code",null,"字符串",-1),D5t=t("code",null,"2+",-1),B5t={style:{"text-align":"left"}},Y5t=t("td",{style:{"text-align":"center"}},"3269",-1),A5t={style:{"text-align":"left"}},J5t={href:"https://leetcode.com/problems/constructing-two-increasing-arrays",target:"_blank",rel:"noopener noreferrer"},R5t=t("td",{style:{"text-align":"center"}},null,-1),S5t={style:{"text-align":"left"}},U5t=t("code",null,"数组",-1),W5t=t("code",null,"动态规划",-1),X5t={style:{"text-align":"left"}},F5t=t("td",{style:{"text-align":"center"}},"3276",-1),G5t={style:{"text-align":"left"}},T5t={href:"https://leetcode.com/problems/select-cells-in-grid-with-maximum-score",target:"_blank",rel:"noopener noreferrer"},Q5t=t("td",{style:{"text-align":"center"}},null,-1),Z5t={style:{"text-align":"left"}},$5t=t("code",null,"位运算",-1),tbt=t("code",null,"数组",-1),ebt=t("code",null,"动态规划",-1),lbt=t("code",null,"2+",-1),obt={style:{"text-align":"left"}},nbt=t("td",{style:{"text-align":"center"}},"3277",-1),sbt={style:{"text-align":"left"}},dbt={href:"https://leetcode.com/problems/maximum-xor-score-subarray-queries",target:"_blank",rel:"noopener noreferrer"},_bt=t("td",{style:{"text-align":"center"}},null,-1),ibt={style:{"text-align":"left"}},cbt=t("code",null,"数组",-1),abt=t("code",null,"动态规划",-1),rbt={style:{"text-align":"left"}},hbt=t("td",{style:{"text-align":"center"}},"3284",-1),ubt={style:{"text-align":"left"}},fbt={href:"https://leetcode.com/problems/sum-of-consecutive-subarrays",target:"_blank",rel:"noopener noreferrer"},gbt=t("td",{style:{"text-align":"center"}},null,-1),mbt={style:{"text-align":"left"}},ybt=t("code",null,"数组",-1),xbt=t("code",null,"双指针",-1),pbt=t("code",null,"动态规划",-1),bbt={style:{"text-align":"left"}},jbt=t("td",{style:{"text-align":"center"}},"3287",-1),kbt={style:{"text-align":"left"}},Mbt={href:"https://leetcode.com/problems/find-the-maximum-sequence-value-of-array",target:"_blank",rel:"noopener noreferrer"},Hbt=t("td",{style:{"text-align":"center"}},null,-1),Ibt={style:{"text-align":"left"}},wbt=t("code",null,"位运算",-1),vbt=t("code",null,"数组",-1),qbt=t("code",null,"动态规划",-1),zbt={style:{"text-align":"left"}},Cbt=t("td",{style:{"text-align":"center"}},"3290",-1),Obt={style:{"text-align":"left"}},Lbt={href:"https://leetcode.com/problems/maximum-multiplication-score",target:"_blank",rel:"noopener noreferrer"},Ebt=t("td",{style:{"text-align":"center"}},null,-1),Pbt={style:{"text-align":"left"}},Kbt=t("code",null,"数组",-1),Vbt=t("code",null,"动态规划",-1),Nbt={style:{"text-align":"left"}},Dbt=t("td",{style:{"text-align":"center"}},"3291",-1),Bbt={style:{"text-align":"left"}},Ybt={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},Abt=t("td",{style:{"text-align":"center"}},null,-1),Jbt={style:{"text-align":"left"}},Rbt=t("code",null,"字典树",-1),Sbt=t("code",null,"线段树",-1),Ubt=t("code",null,"数组",-1),Wbt=t("code",null,"6+",-1),Xbt={style:{"text-align":"left"}},Fbt=t("td",{style:{"text-align":"center"}},"3292",-1),Gbt={style:{"text-align":"left"}},Tbt={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},Qbt=t("td",{style:{"text-align":"center"}},null,-1),Zbt={style:{"text-align":"left"}},$bt=t("code",null,"线段树",-1),t0t=t("code",null,"数组",-1),e0t=t("code",null,"字符串",-1),l0t=t("code",null,"5+",-1),o0t={style:{"text-align":"left"}},n0t=t("td",{style:{"text-align":"center"}},"3299",-1),s0t={style:{"text-align":"left"}},d0t={href:"https://leetcode.com/problems/sum-of-consecutive-subsequences",target:"_blank",rel:"noopener noreferrer"},_0t=t("td",{style:{"text-align":"center"}},null,-1),i0t={style:{"text-align":"left"}},c0t=t("code",null,"数组",-1),a0t=t("code",null,"哈希表",-1),r0t=t("code",null,"动态规划",-1),h0t={style:{"text-align":"left"}},u0t=t("td",{style:{"text-align":"center"}},"3302",-1),f0t={style:{"text-align":"left"}},g0t={href:"https://leetcode.com/problems/find-the-lexicographically-smallest-valid-sequence",target:"_blank",rel:"noopener noreferrer"},m0t=t("td",{style:{"text-align":"center"}},null,-1),y0t={style:{"text-align":"left"}},x0t=t("code",null,"贪心",-1),p0t=t("code",null,"双指针",-1),b0t=t("code",null,"字符串",-1),j0t=t("code",null,"1+",-1),k0t={style:{"text-align":"left"}},M0t=t("td",{style:{"text-align":"center"}},"3316",-1),H0t={style:{"text-align":"left"}},I0t={href:"https://leetcode.com/problems/find-maximum-removals-from-source-string",target:"_blank",rel:"noopener noreferrer"},w0t=t("td",{style:{"text-align":"center"}},null,-1),v0t={style:{"text-align":"left"}},q0t=t("code",null,"数组",-1),z0t=t("code",null,"哈希表",-1),C0t=t("code",null,"双指针",-1),O0t=t("code",null,"2+",-1),L0t={style:{"text-align":"left"}},E0t=t("td",{style:{"text-align":"center"}},"3317",-1),P0t={style:{"text-align":"left"}},K0t={href:"https://leetcode.com/problems/find-the-number-of-possible-ways-for-an-event",target:"_blank",rel:"noopener noreferrer"},V0t=t("td",{style:{"text-align":"center"}},null,-1),N0t={style:{"text-align":"left"}},D0t=t("code",null,"数学",-1),B0t=t("code",null,"动态规划",-1),Y0t=t("code",null,"组合数学",-1),A0t={style:{"text-align":"left"}},J0t=t("td",{style:{"text-align":"center"}},"3320",-1),R0t={style:{"text-align":"left"}},S0t={href:"https://leetcode.com/problems/count-the-number-of-winning-sequences",target:"_blank",rel:"noopener noreferrer"},U0t=t("td",{style:{"text-align":"center"}},null,-1),W0t={style:{"text-align":"left"}},X0t=t("code",null,"字符串",-1),F0t=t("code",null,"动态规划",-1),G0t={style:{"text-align":"left"}},T0t=t("td",{style:{"text-align":"center"}},"LCP 04",-1),Q0t={style:{"text-align":"left"}},Z0t={href:"https://leetcode.cn/problems/broken-board-dominoes",target:"_blank",rel:"noopener noreferrer"},$0t=t("td",{style:{"text-align":"center"}},null,-1),t8t={style:{"text-align":"left"}},e8t=t("code",null,"位运算",-1),l8t=t("code",null,"图",-1),o8t=t("code",null,"数组",-1),n8t=t("code",null,"2+",-1),s8t={style:{"text-align":"left"}},d8t=t("td",{style:{"text-align":"center"}},"LCP 07",-1),_8t={style:{"text-align":"left"}},i8t={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},c8t=t("td",{style:{"text-align":"center"}},null,-1),a8t={style:{"text-align":"left"}},r8t=t("code",null,"深度优先搜索",-1),h8t=t("code",null,"广度优先搜索",-1),u8t=t("code",null,"图",-1),f8t=t("code",null,"1+",-1),g8t={style:{"text-align":"left"}},m8t=t("td",{style:{"text-align":"center"}},"LCP 09",-1),y8t={style:{"text-align":"left"}},x8t={href:"https://leetcode.cn/problems/zui-xiao-tiao-yue-ci-shu",target:"_blank",rel:"noopener noreferrer"},p8t=t("td",{style:{"text-align":"center"}},null,-1),b8t={style:{"text-align":"left"}},j8t=t("code",null,"广度优先搜索",-1),k8t=t("code",null,"线段树",-1),M8t=t("code",null,"数组",-1),H8t=t("code",null,"1+",-1),I8t={style:{"text-align":"left"}},w8t=t("td",{style:{"text-align":"center"}},"LCP 10",-1),v8t={style:{"text-align":"left"}},q8t={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},z8t=t("td",{style:{"text-align":"center"}},null,-1),C8t={style:{"text-align":"left"}},O8t=t("code",null,"树",-1),L8t=t("code",null,"深度优先搜索",-1),E8t=t("code",null,"动态规划",-1),P8t=t("code",null,"1+",-1),K8t={style:{"text-align":"left"}},V8t=t("td",{style:{"text-align":"center"}},"LCP 13",-1),N8t={style:{"text-align":"left"}},D8t={href:"https://leetcode.cn/problems/xun-bao",target:"_blank",rel:"noopener noreferrer"},B8t=t("td",{style:{"text-align":"center"}},null,-1),Y8t={style:{"text-align":"left"}},A8t=t("code",null,"位运算",-1),J8t=t("code",null,"广度优先搜索",-1),R8t=t("code",null,"数组",-1),S8t=t("code",null,"3+",-1),U8t={style:{"text-align":"left"}},W8t=t("td",{style:{"text-align":"center"}},"LCP 14",-1),X8t={style:{"text-align":"left"}},F8t={href:"https://leetcode.cn/problems/qie-fen-shu-zu",target:"_blank",rel:"noopener noreferrer"},G8t=t("td",{style:{"text-align":"center"}},null,-1),T8t={style:{"text-align":"left"}},Q8t=t("code",null,"数组",-1),Z8t=t("code",null,"数学",-1),$8t=t("code",null,"动态规划",-1),t6t=t("code",null,"1+",-1),e6t={style:{"text-align":"left"}},l6t=t("td",{style:{"text-align":"center"}},"LCP 19",-1),o6t={style:{"text-align":"left"}},n6t={href:"https://leetcode.cn/problems/UlBDOe",target:"_blank",rel:"noopener noreferrer"},s6t=t("td",{style:{"text-align":"center"}},null,-1),d6t={style:{"text-align":"left"}},_6t=t("code",null,"字符串",-1),i6t=t("code",null,"动态规划",-1),c6t={style:{"text-align":"left"}},a6t=t("td",{style:{"text-align":"center"}},"LCP 20",-1),r6t={style:{"text-align":"left"}},h6t={href:"https://leetcode.cn/problems/meChtZ",target:"_blank",rel:"noopener noreferrer"},u6t=t("td",{style:{"text-align":"center"}},null,-1),f6t={style:{"text-align":"left"}},g6t=t("code",null,"记忆化搜索",-1),m6t=t("code",null,"数组",-1),y6t=t("code",null,"动态规划",-1),x6t={style:{"text-align":"left"}},p6t=t("td",{style:{"text-align":"center"}},"LCP 25",-1),b6t={style:{"text-align":"left"}},j6t={href:"https://leetcode.cn/problems/Uh984O",target:"_blank",rel:"noopener noreferrer"},k6t=t("td",{style:{"text-align":"center"}},null,-1),M6t={style:{"text-align":"left"}},H6t=t("code",null,"数学",-1),I6t=t("code",null,"动态规划",-1),w6t=t("code",null,"组合数学",-1),v6t={style:{"text-align":"left"}},q6t=t("td",{style:{"text-align":"center"}},"LCP 26",-1),z6t={style:{"text-align":"left"}},C6t={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},O6t=t("td",{style:{"text-align":"center"}},null,-1),L6t={style:{"text-align":"left"}},E6t=t("code",null,"树",-1),P6t=t("code",null,"动态规划",-1),K6t=t("code",null,"二叉树",-1),V6t={style:{"text-align":"left"}},N6t=t("td",{style:{"text-align":"center"}},"LCP 31",-1),D6t={style:{"text-align":"left"}},B6t={href:"https://leetcode.cn/problems/Db3wC1",target:"_blank",rel:"noopener noreferrer"},Y6t=t("td",{style:{"text-align":"center"}},null,-1),A6t={style:{"text-align":"left"}},J6t=t("code",null,"深度优先搜索",-1),R6t=t("code",null,"广度优先搜索",-1),S6t=t("code",null,"数组",-1),U6t=t("code",null,"2+",-1),W6t={style:{"text-align":"left"}},X6t=t("td",{style:{"text-align":"center"}},"LCP 34",-1),F6t={style:{"text-align":"left"}},G6t={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},T6t=t("td",{style:{"text-align":"center"}},null,-1),Q6t={style:{"text-align":"left"}},Z6t=t("code",null,"树",-1),$6t=t("code",null,"动态规划",-1),t7t=t("code",null,"二叉树",-1),e7t={style:{"text-align":"left"}},l7t=t("td",{style:{"text-align":"center"}},"LCP 36",-1),o7t={style:{"text-align":"left"}},n7t={href:"https://leetcode.cn/problems/Up5XYM",target:"_blank",rel:"noopener noreferrer"},s7t=t("td",{style:{"text-align":"center"}},null,-1),d7t={style:{"text-align":"left"}},_7t=t("code",null,"数组",-1),i7t=t("code",null,"动态规划",-1),c7t=t("code",null,"排序",-1),a7t={style:{"text-align":"left"}},r7t=t("td",{style:{"text-align":"center"}},"LCP 38",-1),h7t={style:{"text-align":"left"}},u7t={href:"https://leetcode.cn/problems/7rLGCR",target:"_blank",rel:"noopener noreferrer"},f7t=t("td",{style:{"text-align":"center"}},null,-1),g7t={style:{"text-align":"left"}},m7t=t("code",null,"数组",-1),y7t=t("code",null,"动态规划",-1),x7t=t("code",null,"矩阵",-1),p7t={style:{"text-align":"left"}},b7t=t("td",{style:{"text-align":"center"}},"LCP 43",-1),j7t={style:{"text-align":"left"}},k7t={href:"https://leetcode.cn/problems/Y1VbOX",target:"_blank",rel:"noopener noreferrer"},M7t=t("td",{style:{"text-align":"center"}},null,-1),H7t={style:{"text-align":"left"}},I7t=t("code",null,"数组",-1),w7t=t("code",null,"字符串",-1),v7t=t("code",null,"动态规划",-1),q7t={style:{"text-align":"left"}},z7t=t("td",{style:{"text-align":"center"}},"LCP 45",-1),C7t={style:{"text-align":"left"}},O7t={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},L7t=t("td",{style:{"text-align":"center"}},null,-1),E7t={style:{"text-align":"left"}},P7t=t("code",null,"深度优先搜索",-1),K7t=t("code",null,"广度优先搜索",-1),V7t=t("code",null,"记忆化搜索",-1),N7t=t("code",null,"3+",-1),D7t={style:{"text-align":"left"}},B7t=t("td",{style:{"text-align":"center"}},"LCP 47",-1),Y7t={style:{"text-align":"left"}},A7t={href:"https://leetcode.cn/problems/oPs9Bm",target:"_blank",rel:"noopener noreferrer"},J7t=t("td",{style:{"text-align":"center"}},null,-1),R7t={style:{"text-align":"left"}},S7t=t("code",null,"数组",-1),U7t=t("code",null,"动态规划",-1),W7t={style:{"text-align":"left"}},X7t=t("td",{style:{"text-align":"center"}},"LCP 53",-1),F7t={style:{"text-align":"left"}},G7t={href:"https://leetcode.cn/problems/EJvmW4",target:"_blank",rel:"noopener noreferrer"},T7t=t("td",{style:{"text-align":"center"}},null,-1),Q7t={style:{"text-align":"left"}},Z7t=t("code",null,"位运算",-1),$7t=t("code",null,"数组",-1),t9t=t("code",null,"动态规划",-1),e9t=t("code",null,"1+",-1),l9t={style:{"text-align":"left"}},o9t=t("td",{style:{"text-align":"center"}},"LCP 57",-1),n9t={style:{"text-align":"left"}},s9t={href:"https://leetcode.cn/problems/ZbAuEH",target:"_blank",rel:"noopener noreferrer"},d9t=t("td",{style:{"text-align":"center"}},null,-1),_9t={style:{"text-align":"left"}},i9t=t("code",null,"数组",-1),c9t=t("code",null,"动态规划",-1),a9t=t("code",null,"矩阵",-1),r9t=t("code",null,"1+",-1),h9t={style:{"text-align":"left"}},u9t=t("td",{style:{"text-align":"center"}},"LCP 59",-1),f9t={style:{"text-align":"left"}},g9t={href:"https://leetcode.cn/problems/NfY1m5",target:"_blank",rel:"noopener noreferrer"},m9t=t("td",{style:{"text-align":"center"}},null,-1),y9t={style:{"text-align":"left"}},x9t=t("code",null,"数组",-1),p9t=t("code",null,"动态规划",-1),b9t={style:{"text-align":"left"}},j9t=t("td",{style:{"text-align":"center"}},"LCP 60",-1),k9t={style:{"text-align":"left"}},M9t={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},H9t=t("td",{style:{"text-align":"center"}},null,-1),I9t={style:{"text-align":"left"}},w9t=t("code",null,"树",-1),v9t=t("code",null,"动态规划",-1),q9t=t("code",null,"二叉树",-1),z9t={style:{"text-align":"left"}},C9t=t("td",{style:{"text-align":"center"}},"LCP 63",-1),O9t={style:{"text-align":"left"}},L9t={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},E9t=t("td",{style:{"text-align":"center"}},null,-1),P9t={style:{"text-align":"left"}},K9t=t("code",null,"深度优先搜索",-1),V9t=t("code",null,"广度优先搜索",-1),N9t=t("code",null,"图",-1),D9t=t("code",null,"5+",-1),B9t={style:{"text-align":"left"}},Y9t=t("td",{style:{"text-align":"center"}},"LCP 64",-1),A9t={style:{"text-align":"left"}},J9t={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},R9t=t("td",{style:{"text-align":"center"}},null,-1),S9t={style:{"text-align":"left"}},U9t=t("code",null,"树",-1),W9t=t("code",null,"深度优先搜索",-1),X9t=t("code",null,"动态规划",-1),F9t=t("code",null,"1+",-1),G9t={style:{"text-align":"left"}},T9t=t("td",{style:{"text-align":"center"}},"LCP 65",-1),Q9t={style:{"text-align":"left"}},Z9t={href:"https://leetcode.cn/problems/3aqs1c",target:"_blank",rel:"noopener noreferrer"},$9t=t("td",{style:{"text-align":"center"}},null,-1),tjt={style:{"text-align":"left"}},ejt=t("code",null,"数组",-1),ljt=t("code",null,"动态规划",-1),ojt={style:{"text-align":"left"}},njt=t("td",{style:{"text-align":"center"}},"LCP 69",-1),sjt={style:{"text-align":"left"}},djt={href:"https://leetcode.cn/problems/rMeRt2",target:"_blank",rel:"noopener noreferrer"},_jt=t("td",{style:{"text-align":"center"}},null,-1),ijt={style:{"text-align":"left"}},cjt=t("code",null,"位运算",-1),ajt=t("code",null,"数组",-1),rjt=t("code",null,"字符串",-1),hjt=t("code",null,"2+",-1),ujt={style:{"text-align":"left"}},fjt=t("td",{style:{"text-align":"center"}},"LCS 01",-1),gjt={style:{"text-align":"left"}},mjt={href:"https://leetcode.cn/problems/Ju9Xwi",target:"_blank",rel:"noopener noreferrer"},yjt=t("td",{style:{"text-align":"center"}},null,-1),xjt={style:{"text-align":"left"}},pjt=t("code",null,"贪心",-1),bjt=t("code",null,"数学",-1),jjt=t("code",null,"动态规划",-1),kjt={style:{"text-align":"left"}},Mjt=t("td",{style:{"text-align":"center"}},"剑指 Offer 10 - I",-1),Hjt={style:{"text-align":"left"}},Ijt={href:"https://leetcode.cn/problems/fei-bo-na-qi-shu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},wjt={style:{"text-align":"center"}},vjt={style:{"text-align":"left"}},qjt=t("code",null,"记忆化搜索",-1),zjt=t("code",null,"数学",-1),Cjt=t("code",null,"动态规划",-1),Ojt={style:{"text-align":"left"}},Ljt=t("td",{style:{"text-align":"center"}},"剑指 Offer 10 - II",-1),Ejt={style:{"text-align":"left"}},Pjt={href:"https://leetcode.cn/problems/qing-wa-tiao-tai-jie-wen-ti-lcof",target:"_blank",rel:"noopener noreferrer"},Kjt={style:{"text-align":"center"}},Vjt={style:{"text-align":"left"}},Njt=t("code",null,"记忆化搜索",-1),Djt=t("code",null,"数学",-1),Bjt=t("code",null,"动态规划",-1),Yjt={style:{"text-align":"left"}},Ajt=t("td",{style:{"text-align":"center"}},"剑指 Offer 13",-1),Jjt={style:{"text-align":"left"}},Rjt={href:"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof",target:"_blank",rel:"noopener noreferrer"},Sjt={style:{"text-align":"center"}},Ujt={style:{"text-align":"left"}},Wjt=t("code",null,"深度优先搜索",-1),Xjt=t("code",null,"广度优先搜索",-1),Fjt=t("code",null,"动态规划",-1),Gjt={style:{"text-align":"left"}},Tjt=t("td",{style:{"text-align":"center"}},"剑指 Offer 14 - I",-1),Qjt={style:{"text-align":"left"}},Zjt={href:"https://leetcode.cn/problems/jian-sheng-zi-lcof",target:"_blank",rel:"noopener noreferrer"},$jt={style:{"text-align":"center"}},tkt={style:{"text-align":"left"}},ekt=t("code",null,"数学",-1),lkt=t("code",null,"动态规划",-1),okt={style:{"text-align":"left"}},nkt=t("td",{style:{"text-align":"center"}},"剑指 Offer 14 - II",-1),skt={style:{"text-align":"left"}},dkt={href:"https://leetcode.cn/problems/jian-sheng-zi-ii-lcof",target:"_blank",rel:"noopener noreferrer"},_kt={style:{"text-align":"center"}},ikt={style:{"text-align":"left"}},ckt=t("code",null,"数学",-1),akt=t("code",null,"动态规划",-1),rkt={style:{"text-align":"left"}},hkt=t("td",{style:{"text-align":"center"}},"剑指 Offer 19",-1),ukt={style:{"text-align":"left"}},fkt={href:"https://leetcode.cn/problems/zheng-ze-biao-da-shi-pi-pei-lcof",target:"_blank",rel:"noopener noreferrer"},gkt={style:{"text-align":"center"}},mkt={style:{"text-align":"left"}},ykt=t("code",null,"递归",-1),xkt=t("code",null,"字符串",-1),pkt=t("code",null,"动态规划",-1),bkt={style:{"text-align":"left"}},jkt=t("td",{style:{"text-align":"center"}},"剑指 Offer 42",-1),kkt={style:{"text-align":"left"}},Mkt={href:"https://leetcode.cn/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof",target:"_blank",rel:"noopener noreferrer"},Hkt={style:{"text-align":"center"}},Ikt={style:{"text-align":"left"}},wkt=t("code",null,"数组",-1),vkt=t("code",null,"分治",-1),qkt=t("code",null,"动态规划",-1),zkt={style:{"text-align":"left"}},Ckt=t("td",{style:{"text-align":"center"}},"剑指 Offer 43",-1),Okt={style:{"text-align":"left"}},Lkt={href:"https://leetcode.cn/problems/1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof",target:"_blank",rel:"noopener noreferrer"},Ekt=t("td",{style:{"text-align":"center"}},null,-1),Pkt={style:{"text-align":"left"}},Kkt=t("code",null,"递归",-1),Vkt=t("code",null,"数学",-1),Nkt=t("code",null,"动态规划",-1),Dkt={style:{"text-align":"left"}},Bkt=t("td",{style:{"text-align":"center"}},"剑指 Offer 46",-1),Ykt={style:{"text-align":"left"}},Akt={href:"https://leetcode.cn/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof",target:"_blank",rel:"noopener noreferrer"},Jkt=t("td",{style:{"text-align":"center"}},null,-1),Rkt={style:{"text-align":"left"}},Skt=t("code",null,"字符串",-1),Ukt=t("code",null,"动态规划",-1),Wkt={style:{"text-align":"left"}},Xkt=t("td",{style:{"text-align":"center"}},"剑指 Offer 47",-1),Fkt={style:{"text-align":"left"}},Gkt={href:"https://leetcode.cn/problems/li-wu-de-zui-da-jie-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},Tkt={style:{"text-align":"center"}},Qkt={style:{"text-align":"left"}},Zkt=t("code",null,"数组",-1),$kt=t("code",null,"动态规划",-1),tMt=t("code",null,"矩阵",-1),eMt={style:{"text-align":"left"}},lMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 49",-1),oMt={style:{"text-align":"left"}},nMt={href:"https://leetcode.cn/problems/chou-shu-lcof",target:"_blank",rel:"noopener noreferrer"},sMt={style:{"text-align":"center"}},dMt={style:{"text-align":"left"}},_Mt=t("code",null,"哈希表",-1),iMt=t("code",null,"数学",-1),cMt=t("code",null,"动态规划",-1),aMt=t("code",null,"1+",-1),rMt={style:{"text-align":"left"}},hMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 60",-1),uMt={style:{"text-align":"left"}},fMt={href:"https://leetcode.cn/problems/nge-tou-zi-de-dian-shu-lcof",target:"_blank",rel:"noopener noreferrer"},gMt={style:{"text-align":"center"}},mMt={style:{"text-align":"left"}},yMt=t("code",null,"数学",-1),xMt=t("code",null,"动态规划",-1),pMt=t("code",null,"概率与统计",-1),bMt={style:{"text-align":"left"}},jMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 63",-1),kMt={style:{"text-align":"left"}},MMt={href:"https://leetcode.cn/problems/gu-piao-de-zui-da-li-run-lcof",target:"_blank",rel:"noopener noreferrer"},HMt={style:{"text-align":"center"}},IMt={style:{"text-align":"left"}},wMt=t("code",null,"数组",-1),vMt=t("code",null,"动态规划",-1),qMt={style:{"text-align":"left"}},zMt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 100",-1),CMt={style:{"text-align":"left"}},OMt={href:"https://leetcode.cn/problems/IlPe0q",target:"_blank",rel:"noopener noreferrer"},LMt=t("td",{style:{"text-align":"center"}},null,-1),EMt={style:{"text-align":"left"}},PMt=t("code",null,"数组",-1),KMt=t("code",null,"动态规划",-1),VMt={style:{"text-align":"left"}},NMt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 102",-1),DMt={style:{"text-align":"left"}},BMt={href:"https://leetcode.cn/problems/YaVDxD",target:"_blank",rel:"noopener noreferrer"},YMt=t("td",{style:{"text-align":"center"}},null,-1),AMt={style:{"text-align":"left"}},JMt=t("code",null,"数组",-1),RMt=t("code",null,"动态规划",-1),SMt=t("code",null,"回溯",-1),UMt={style:{"text-align":"left"}},WMt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 103",-1),XMt={style:{"text-align":"left"}},FMt={href:"https://leetcode.cn/problems/gaM7Ch",target:"_blank",rel:"noopener noreferrer"},GMt=t("td",{style:{"text-align":"center"}},null,-1),TMt={style:{"text-align":"left"}},QMt=t("code",null,"广度优先搜索",-1),ZMt=t("code",null,"数组",-1),$Mt=t("code",null,"动态规划",-1),tHt={style:{"text-align":"left"}},eHt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 104",-1),lHt={style:{"text-align":"left"}},oHt={href:"https://leetcode.cn/problems/D0F0SV",target:"_blank",rel:"noopener noreferrer"},nHt=t("td",{style:{"text-align":"center"}},null,-1),sHt={style:{"text-align":"left"}},dHt=t("code",null,"数组",-1),_Ht=t("code",null,"动态规划",-1),iHt={style:{"text-align":"left"}},cHt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 107",-1),aHt={style:{"text-align":"left"}},rHt={href:"https://leetcode.cn/problems/2bCMpM",target:"_blank",rel:"noopener noreferrer"},hHt=t("td",{style:{"text-align":"center"}},null,-1),uHt={style:{"text-align":"left"}},fHt=t("code",null,"广度优先搜索",-1),gHt=t("code",null,"数组",-1),mHt=t("code",null,"动态规划",-1),yHt=t("code",null,"1+",-1),xHt={style:{"text-align":"left"}},pHt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),bHt={style:{"text-align":"left"}},jHt={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},kHt=t("td",{style:{"text-align":"center"}},null,-1),MHt={style:{"text-align":"left"}},HHt=t("code",null,"深度优先搜索",-1),IHt=t("code",null,"广度优先搜索",-1),wHt=t("code",null,"图",-1),vHt=t("code",null,"5+",-1),qHt={style:{"text-align":"left"}},zHt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 20",-1),CHt={style:{"text-align":"left"}},OHt={href:"https://leetcode.cn/problems/a7VOhD",target:"_blank",rel:"noopener noreferrer"},LHt=t("td",{style:{"text-align":"center"}},null,-1),EHt={style:{"text-align":"left"}},PHt=t("code",null,"字符串",-1),KHt=t("code",null,"动态规划",-1),VHt={style:{"text-align":"left"}},NHt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 3",-1),DHt={style:{"text-align":"left"}},BHt={href:"https://leetcode.cn/problems/w3tCBm",target:"_blank",rel:"noopener noreferrer"},YHt=t("td",{style:{"text-align":"center"}},null,-1),AHt={style:{"text-align":"left"}},JHt=t("code",null,"位运算",-1),RHt=t("code",null,"动态规划",-1),SHt={style:{"text-align":"left"}},UHt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),WHt={style:{"text-align":"left"}},XHt={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},FHt=t("td",{style:{"text-align":"center"}},null,-1),GHt={style:{"text-align":"left"}},THt=t("code",null,"栈",-1),QHt=t("code",null,"数组",-1),ZHt=t("code",null,"动态规划",-1),$Ht=t("code",null,"2+",-1),tIt={style:{"text-align":"left"}},eIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),lIt={style:{"text-align":"left"}},oIt={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},nIt=t("td",{style:{"text-align":"center"}},null,-1),sIt={style:{"text-align":"left"}},dIt=t("code",null,"树",-1),_It=t("code",null,"深度优先搜索",-1),iIt=t("code",null,"动态规划",-1),cIt=t("code",null,"1+",-1),aIt={style:{"text-align":"left"}},rIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 85",-1),hIt={style:{"text-align":"left"}},uIt={href:"https://leetcode.cn/problems/IDBivT",target:"_blank",rel:"noopener noreferrer"},fIt=t("td",{style:{"text-align":"center"}},null,-1),gIt={style:{"text-align":"left"}},mIt=t("code",null,"字符串",-1),yIt=t("code",null,"动态规划",-1),xIt=t("code",null,"回溯",-1),pIt={style:{"text-align":"left"}},bIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 88",-1),jIt={style:{"text-align":"left"}},kIt={href:"https://leetcode.cn/problems/GzCJIP",target:"_blank",rel:"noopener noreferrer"},MIt=t("td",{style:{"text-align":"center"}},null,-1),HIt={style:{"text-align":"left"}},IIt=t("code",null,"数组",-1),wIt=t("code",null,"动态规划",-1),vIt={style:{"text-align":"left"}},qIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 89",-1),zIt={style:{"text-align":"left"}},CIt={href:"https://leetcode.cn/problems/Gu0c2T",target:"_blank",rel:"noopener noreferrer"},OIt=t("td",{style:{"text-align":"center"}},null,-1),LIt={style:{"text-align":"left"}},EIt=t("code",null,"数组",-1),PIt=t("code",null,"动态规划",-1),KIt={style:{"text-align":"left"}},VIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 90",-1),NIt={style:{"text-align":"left"}},DIt={href:"https://leetcode.cn/problems/PzWKhm",target:"_blank",rel:"noopener noreferrer"},BIt=t("td",{style:{"text-align":"center"}},null,-1),YIt={style:{"text-align":"left"}},AIt=t("code",null,"数组",-1),JIt=t("code",null,"动态规划",-1),RIt={style:{"text-align":"left"}},SIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 91",-1),UIt={style:{"text-align":"left"}},WIt={href:"https://leetcode.cn/problems/JEj789",target:"_blank",rel:"noopener noreferrer"},XIt=t("td",{style:{"text-align":"center"}},null,-1),FIt={style:{"text-align":"left"}},GIt=t("code",null,"数组",-1),TIt=t("code",null,"动态规划",-1),QIt={style:{"text-align":"left"}},ZIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 92",-1),$It={style:{"text-align":"left"}},twt={href:"https://leetcode.cn/problems/cyJERH",target:"_blank",rel:"noopener noreferrer"},ewt=t("td",{style:{"text-align":"center"}},null,-1),lwt={style:{"text-align":"left"}},owt=t("code",null,"字符串",-1),nwt=t("code",null,"动态规划",-1),swt={style:{"text-align":"left"}},dwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 93",-1),_wt={style:{"text-align":"left"}},iwt={href:"https://leetcode.cn/problems/Q91FMA",target:"_blank",rel:"noopener noreferrer"},cwt=t("td",{style:{"text-align":"center"}},null,-1),awt={style:{"text-align":"left"}},rwt=t("code",null,"数组",-1),hwt=t("code",null,"哈希表",-1),uwt=t("code",null,"动态规划",-1),fwt={style:{"text-align":"left"}},gwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 94",-1),mwt={style:{"text-align":"left"}},ywt={href:"https://leetcode.cn/problems/omKAoA",target:"_blank",rel:"noopener noreferrer"},xwt=t("td",{style:{"text-align":"center"}},null,-1),pwt={style:{"text-align":"left"}},bwt=t("code",null,"字符串",-1),jwt=t("code",null,"动态规划",-1),kwt={style:{"text-align":"left"}},Mwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 95",-1),Hwt={style:{"text-align":"left"}},Iwt={href:"https://leetcode.cn/problems/qJnOS7",target:"_blank",rel:"noopener noreferrer"},wwt=t("td",{style:{"text-align":"center"}},null,-1),vwt={style:{"text-align":"left"}},qwt=t("code",null,"字符串",-1),zwt=t("code",null,"动态规划",-1),Cwt={style:{"text-align":"left"}},Owt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 96",-1),Lwt={style:{"text-align":"left"}},Ewt={href:"https://leetcode.cn/problems/IY6buf",target:"_blank",rel:"noopener noreferrer"},Pwt=t("td",{style:{"text-align":"center"}},null,-1),Kwt={style:{"text-align":"left"}},Vwt=t("code",null,"字符串",-1),Nwt=t("code",null,"动态规划",-1),Dwt={style:{"text-align":"left"}},Bwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 97",-1),Ywt={style:{"text-align":"left"}},Awt={href:"https://leetcode.cn/problems/21dk04",target:"_blank",rel:"noopener noreferrer"},Jwt=t("td",{style:{"text-align":"center"}},null,-1),Rwt={style:{"text-align":"left"}},Swt=t("code",null,"字符串",-1),Uwt=t("code",null,"动态规划",-1),Wwt={style:{"text-align":"left"}},Xwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 98",-1),Fwt={style:{"text-align":"left"}},Gwt={href:"https://leetcode.cn/problems/2AoeFn",target:"_blank",rel:"noopener noreferrer"},Twt=t("td",{style:{"text-align":"center"}},null,-1),Qwt={style:{"text-align":"left"}},Zwt=t("code",null,"数学",-1),$wt=t("code",null,"动态规划",-1),tvt=t("code",null,"组合数学",-1),evt={style:{"text-align":"left"}},lvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 99",-1),ovt={style:{"text-align":"left"}},nvt={href:"https://leetcode.cn/problems/0i0mDW",target:"_blank",rel:"noopener noreferrer"},svt=t("td",{style:{"text-align":"center"}},null,-1),dvt={style:{"text-align":"left"}},_vt=t("code",null,"数组",-1),ivt=t("code",null,"动态规划",-1),cvt=t("code",null,"矩阵",-1),avt={style:{"text-align":"left"}},rvt=t("td",{style:{"text-align":"center"}},"面试题 05.03",-1),hvt={style:{"text-align":"left"}},uvt={href:"https://leetcode.cn/problems/reverse-bits-lcci",target:"_blank",rel:"noopener noreferrer"},fvt=t("td",{style:{"text-align":"center"}},null,-1),gvt={style:{"text-align":"left"}},mvt=t("code",null,"位运算",-1),yvt=t("code",null,"动态规划",-1),xvt={style:{"text-align":"left"}},pvt=t("td",{style:{"text-align":"center"}},"面试题 08.01",-1),bvt={style:{"text-align":"left"}},jvt={href:"https://leetcode.cn/problems/three-steps-problem-lcci",target:"_blank",rel:"noopener noreferrer"},kvt=t("td",{style:{"text-align":"center"}},null,-1),Mvt={style:{"text-align":"left"}},Hvt=t("code",null,"记忆化搜索",-1),Ivt=t("code",null,"数学",-1),wvt=t("code",null,"动态规划",-1),vvt={style:{"text-align":"left"}},qvt=t("td",{style:{"text-align":"center"}},"面试题 08.02",-1),zvt={style:{"text-align":"left"}},Cvt={href:"https://leetcode.cn/problems/robot-in-a-grid-lcci",target:"_blank",rel:"noopener noreferrer"},Ovt=t("td",{style:{"text-align":"center"}},null,-1),Lvt={style:{"text-align":"left"}},Evt=t("code",null,"数组",-1),Pvt=t("code",null,"动态规划",-1),Kvt=t("code",null,"回溯",-1),Vvt=t("code",null,"1+",-1),Nvt={style:{"text-align":"left"}},Dvt=t("td",{style:{"text-align":"center"}},"面试题 08.09",-1),Bvt={style:{"text-align":"left"}},Yvt={href:"https://leetcode.cn/problems/bracket-lcci",target:"_blank",rel:"noopener noreferrer"},Avt=t("td",{style:{"text-align":"center"}},null,-1),Jvt={style:{"text-align":"left"}},Rvt=t("code",null,"字符串",-1),Svt=t("code",null,"动态规划",-1),Uvt=t("code",null,"回溯",-1),Wvt={style:{"text-align":"left"}},Xvt=t("td",{style:{"text-align":"center"}},"面试题 08.11",-1),Fvt={style:{"text-align":"left"}},Gvt={href:"https://leetcode.cn/problems/coin-lcci",target:"_blank",rel:"noopener noreferrer"},Tvt=t("td",{style:{"text-align":"center"}},null,-1),Qvt={style:{"text-align":"left"}},Zvt=t("code",null,"数组",-1),$vt=t("code",null,"数学",-1),tqt=t("code",null,"动态规划",-1),eqt={style:{"text-align":"left"}},lqt=t("td",{style:{"text-align":"center"}},"面试题 08.13",-1),oqt={style:{"text-align":"left"}},nqt={href:"https://leetcode.cn/problems/pile-box-lcci",target:"_blank",rel:"noopener noreferrer"},sqt=t("td",{style:{"text-align":"center"}},null,-1),dqt={style:{"text-align":"left"}},_qt=t("code",null,"数组",-1),iqt=t("code",null,"动态规划",-1),cqt=t("code",null,"排序",-1),aqt={style:{"text-align":"left"}},rqt=t("td",{style:{"text-align":"center"}},"面试题 08.14",-1),hqt={style:{"text-align":"left"}},uqt={href:"https://leetcode.cn/problems/boolean-evaluation-lcci",target:"_blank",rel:"noopener noreferrer"},fqt=t("td",{style:{"text-align":"center"}},null,-1),gqt={style:{"text-align":"left"}},mqt=t("code",null,"记忆化搜索",-1),yqt=t("code",null,"字符串",-1),xqt=t("code",null,"动态规划",-1),pqt={style:{"text-align":"left"}},bqt=t("td",{style:{"text-align":"center"}},"面试题 16.17",-1),jqt={style:{"text-align":"left"}},kqt={href:"https://leetcode.cn/problems/contiguous-sequence-lcci",target:"_blank",rel:"noopener noreferrer"},Mqt=t("td",{style:{"text-align":"center"}},null,-1),Hqt={style:{"text-align":"left"}},Iqt=t("code",null,"数组",-1),wqt=t("code",null,"分治",-1),vqt=t("code",null,"动态规划",-1),qqt={style:{"text-align":"left"}},zqt=t("td",{style:{"text-align":"center"}},"面试题 17.06",-1),Cqt={style:{"text-align":"left"}},Oqt={href:"https://leetcode.cn/problems/number-of-2s-in-range-lcci",target:"_blank",rel:"noopener noreferrer"},Lqt=t("td",{style:{"text-align":"center"}},null,-1),Eqt={style:{"text-align":"left"}},Pqt=t("code",null,"递归",-1),Kqt=t("code",null,"数学",-1),Vqt=t("code",null,"动态规划",-1),Nqt={style:{"text-align":"left"}},Dqt=t("td",{style:{"text-align":"center"}},"面试题 17.08",-1),Bqt={style:{"text-align":"left"}},Yqt={href:"https://leetcode.cn/problems/circus-tower-lcci",target:"_blank",rel:"noopener noreferrer"},Aqt=t("td",{style:{"text-align":"center"}},null,-1),Jqt={style:{"text-align":"left"}},Rqt=t("code",null,"数组",-1),Sqt=t("code",null,"二分查找",-1),Uqt=t("code",null,"动态规划",-1),Wqt=t("code",null,"1+",-1),Xqt={style:{"text-align":"left"}},Fqt=t("td",{style:{"text-align":"center"}},"面试题 17.09",-1),Gqt={style:{"text-align":"left"}},Tqt={href:"https://leetcode.cn/problems/get-kth-magic-number-lcci",target:"_blank",rel:"noopener noreferrer"},Qqt=t("td",{style:{"text-align":"center"}},null,-1),Zqt={style:{"text-align":"left"}},$qt=t("code",null,"哈希表",-1),tzt=t("code",null,"数学",-1),ezt=t("code",null,"动态规划",-1),lzt=t("code",null,"1+",-1),ozt={style:{"text-align":"left"}},nzt=t("td",{style:{"text-align":"center"}},"面试题 17.13",-1),szt={style:{"text-align":"left"}},dzt={href:"https://leetcode.cn/problems/re-space-lcci",target:"_blank",rel:"noopener noreferrer"},_zt=t("td",{style:{"text-align":"center"}},null,-1),izt={style:{"text-align":"left"}},czt=t("code",null,"字典树",-1),azt=t("code",null,"数组",-1),rzt=t("code",null,"哈希表",-1),hzt=t("code",null,"4+",-1),uzt={style:{"text-align":"left"}},fzt=t("td",{style:{"text-align":"center"}},"面试题 17.16",-1),gzt={style:{"text-align":"left"}},mzt={href:"https://leetcode.cn/problems/the-masseuse-lcci",target:"_blank",rel:"noopener noreferrer"},yzt=t("td",{style:{"text-align":"center"}},null,-1),xzt={style:{"text-align":"left"}},pzt=t("code",null,"数组",-1),bzt=t("code",null,"动态规划",-1),jzt={style:{"text-align":"left"}},kzt=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),Mzt={style:{"text-align":"left"}},Hzt={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"},Izt=t("td",{style:{"text-align":"center"}},null,-1),wzt={style:{"text-align":"left"}},vzt=t("code",null,"栈",-1),qzt=t("code",null,"数组",-1),zzt=t("code",null,"双指针",-1),Czt=t("code",null,"2+",-1),Ozt={style:{"text-align":"left"}},Lzt=t("td",{style:{"text-align":"center"}},"面试题 17.23",-1),Ezt={style:{"text-align":"left"}},Pzt={href:"https://leetcode.cn/problems/max-black-square-lcci",target:"_blank",rel:"noopener noreferrer"},Kzt=t("td",{style:{"text-align":"center"}},null,-1),Vzt={style:{"text-align":"left"}},Nzt=t("code",null,"数组",-1),Dzt=t("code",null,"动态规划",-1),Bzt=t("code",null,"矩阵",-1),Yzt={style:{"text-align":"left"}},Azt=t("td",{style:{"text-align":"center"}},"面试题 17.24",-1),Jzt={style:{"text-align":"left"}},Rzt={href:"https://leetcode.cn/problems/max-submatrix-lcci",target:"_blank",rel:"noopener noreferrer"},Szt=t("td",{style:{"text-align":"center"}},null,-1),Uzt={style:{"text-align":"left"}},Wzt=t("code",null,"数组",-1),Xzt=t("code",null,"动态规划",-1),Fzt=t("code",null,"矩阵",-1),Gzt=t("code",null,"1+",-1),Tzt={style:{"text-align":"left"}};function Qzt(Zzt,$zt){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return c(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/strongly-connected-component.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[S]),_:1})]),U,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[T]),_:1}),l(),Q,l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/randomized.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/reservoir-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rejection-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/database.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/interactive.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/iterator.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/concurrency.html"},{default:o(()=>[Pt]),_:1})])]),Kt,r(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Nt,t("td",Dt,[t("a",Bt,[l("最长回文子串"),e(s)])]),t("td",Yt,[e(n,{to:"/leetcode-js/problem/0005.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",At,[e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[Jt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Rt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[St]),_:1})]),t("td",Ut,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wt,t("td",Xt,[t("a",Ft,[l("正则表达式匹配"),e(s)])]),t("td",Gt,[e(n,{to:"/leetcode-js/problem/0010.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Tt,[e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[Qt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[$t]),_:1})]),t("td",te,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ee,t("td",le,[t("a",oe,[l("括号生成"),e(s)])]),t("td",ne,[e(n,{to:"/leetcode-js/problem/0022.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",se,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[de]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[_e]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[ie]),_:1})]),t("td",ce,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ae,t("td",re,[t("a",he,[l("最长有效括号"),e(s)])]),t("td",ue,[e(n,{to:"/leetcode-js/problem/0032.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fe,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ge]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[me]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ye]),_:1})]),t("td",xe,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pe,t("td",be,[t("a",je,[l("接雨水"),e(s)])]),t("td",ke,[e(n,{to:"/leetcode-js/problem/0042.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Me,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[He]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ie]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[we]),_:1}),l(),ve]),t("td",qe,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ze,t("td",Ce,[t("a",Oe,[l("通配符匹配"),e(s)])]),t("td",Le,[e(n,{to:"/leetcode-js/problem/0044.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ee,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Pe]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[Ke]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Ve]),_:1}),l(),Ne]),t("td",De,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Be,t("td",Ye,[t("a",Ae,[l("跳跃游戏 II"),e(s)])]),t("td",Je,[e(n,{to:"/leetcode-js/problem/0045.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Re,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Se]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ue]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[We]),_:1})]),t("td",Xe,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fe,t("td",Ge,[t("a",Te,[l("最大子数组和"),e(s)])]),t("td",Qe,[e(n,{to:"/leetcode-js/problem/0053.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ze,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[$e]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[tl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[el]),_:1})]),t("td",ll,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ol,t("td",nl,[t("a",sl,[l("跳跃游戏"),e(s)])]),t("td",dl,[e(n,{to:"/leetcode-js/problem/0055.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_l,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[il]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[cl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[al]),_:1})]),t("td",rl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hl,t("td",ul,[t("a",fl,[l("不同路径"),e(s)])]),t("td",gl,[e(n,{to:"/leetcode-js/problem/0062.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ml,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[yl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[pl]),_:1})]),t("td",bl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jl,t("td",kl,[t("a",Ml,[l("不同路径 II"),e(s)])]),t("td",Hl,[e(n,{to:"/leetcode-js/problem/0063.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Il,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[wl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[vl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[ql]),_:1})]),t("td",zl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cl,t("td",Ol,[t("a",Ll,[l("最小路径和"),e(s)])]),t("td",El,[e(n,{to:"/leetcode-js/problem/0064.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Pl,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Kl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Vl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[Nl]),_:1})]),t("td",Dl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bl,t("td",Yl,[t("a",Al,[l("爬楼梯"),e(s)])]),t("td",Jl,[e(n,{to:"/leetcode-js/problem/0070.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Rl,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[Sl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Ul]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Wl]),_:1})]),t("td",Xl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fl,t("td",Gl,[t("a",Tl,[l("编辑距离"),e(s)])]),t("td",Ql,[e(n,{to:"/leetcode-js/problem/0072.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Zl,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[$l]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[to]),_:1})]),t("td",eo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lo,t("td",oo,[t("a",no,[l("最大矩形"),e(s)])]),t("td",so,[e(n,{to:"/leetcode-js/problem/0085.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_o,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[io]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[co]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ao]),_:1}),l(),ro]),t("td",ho,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uo,t("td",fo,[t("a",go,[l("扰乱字符串"),e(s)])]),mo,t("td",yo,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[xo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[po]),_:1})]),t("td",bo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jo,t("td",ko,[t("a",Mo,[l("解码方法"),e(s)])]),Ho,t("td",Io,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[wo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[vo]),_:1})]),t("td",qo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zo,t("td",Co,[t("a",Oo,[l("不同的二叉搜索树 II"),e(s)])]),t("td",Lo,[e(n,{to:"/leetcode-js/problem/0095.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Eo,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Po]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Ko]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Vo]),_:1}),l(),No]),t("td",Do,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bo,t("td",Yo,[t("a",Ao,[l("不同的二叉搜索树"),e(s)])]),t("td",Jo,[e(n,{to:"/leetcode-js/problem/0096.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ro,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[So]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Uo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Wo]),_:1}),l(),Xo]),t("td",Fo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Go,t("td",To,[t("a",Qo,[l("交错字符串"),e(s)])]),t("td",Zo,[e(n,{to:"/leetcode-js/problem/0097.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",$o,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[tn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[en]),_:1})]),t("td",ln,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[on,t("td",nn,[t("a",sn,[l("不同的子序列"),e(s)])]),dn,t("td",_n,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[cn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[an]),_:1})]),t("td",rn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hn,t("td",un,[t("a",fn,[l("杨辉三角"),e(s)])]),t("td",gn,[e(n,{to:"/leetcode-js/problem/0118.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",mn,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[yn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xn]),_:1})]),t("td",pn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[bn,t("td",jn,[t("a",kn,[l("杨辉三角 II"),e(s)])]),Mn,t("td",Hn,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[In]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[wn]),_:1})]),t("td",vn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[qn,t("td",zn,[t("a",Cn,[l("三角形最小路径和"),e(s)])]),t("td",On,[e(n,{to:"/leetcode-js/problem/0120.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ln,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[En]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Pn]),_:1})]),t("td",Kn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vn,t("td",Nn,[t("a",Dn,[l("买卖股票的最佳时机"),e(s)])]),t("td",Bn,[e(n,{to:"/leetcode-js/problem/0121.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yn,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[An]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Jn]),_:1})]),t("td",Rn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Sn,t("td",Un,[t("a",Wn,[l("买卖股票的最佳时机 II"),e(s)])]),t("td",Xn,[e(n,{to:"/leetcode-js/problem/0122.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Fn,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Gn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Tn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Qn]),_:1})]),t("td",Zn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$n,t("td",ts,[t("a",es,[l("买卖股票的最佳时机 III"),e(s)])]),t("td",ls,[e(n,{to:"/leetcode-js/problem/0123.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",os,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ns]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ss]),_:1})]),t("td",ds,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_s,t("td",is,[t("a",cs,[l("二叉树中的最大路径和"),e(s)])]),t("td",as,[e(n,{to:"/leetcode-js/problem/0124.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",rs,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[hs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[us]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[fs]),_:1}),l(),gs]),t("td",ms,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ys,t("td",xs,[t("a",ps,[l("分割回文串"),e(s)])]),t("td",bs,[e(n,{to:"/leetcode-js/problem/0131.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",js,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[ks]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ms]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[Hs]),_:1})]),t("td",Is,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ws,t("td",vs,[t("a",qs,[l("分割回文串 II"),e(s)])]),zs,t("td",Cs,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Os]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ls]),_:1})]),t("td",Es,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ps,t("td",Ks,[t("a",Vs,[l("单词拆分"),e(s)])]),t("td",Ns,[e(n,{to:"/leetcode-js/problem/0139.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ds,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[Bs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[Ys]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[As]),_:1}),l(),Js]),t("td",Rs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ss,t("td",Us,[t("a",Ws,[l("单词拆分 II"),e(s)])]),Xs,t("td",Fs,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[Gs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[Ts]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Qs]),_:1}),l(),Zs]),t("td",$s,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[td,t("td",ed,[t("a",ld,[l("乘积最大子数组"),e(s)])]),t("td",od,[e(n,{to:"/leetcode-js/problem/0152.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",nd,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[sd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[dd]),_:1})]),t("td",_d,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[id,t("td",cd,[t("a",ad,[l("地下城游戏"),e(s)])]),t("td",rd,[e(n,{to:"/leetcode-js/problem/0174.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hd,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ud]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[fd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[gd]),_:1})]),t("td",md,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yd,t("td",xd,[t("a",pd,[l("买卖股票的最佳时机 IV"),e(s)])]),t("td",bd,[e(n,{to:"/leetcode-js/problem/0188.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",jd,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[kd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Md]),_:1})]),t("td",Hd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Id,t("td",wd,[t("a",vd,[l("打家劫舍"),e(s)])]),t("td",qd,[e(n,{to:"/leetcode-js/problem/0198.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",zd,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Cd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Od]),_:1})]),t("td",Ld,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ed,t("td",Pd,[t("a",Kd,[l("打家劫舍 II"),e(s)])]),Vd,t("td",Nd,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Dd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Bd]),_:1})]),t("td",Yd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ad,t("td",Jd,[t("a",Rd,[l("最大正方形"),e(s)])]),t("td",Sd,[e(n,{to:"/leetcode-js/problem/0221.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ud,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Wd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Xd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[Fd]),_:1})]),t("td",Gd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Td,t("td",Qd,[t("a",Zd,[l("数字 1 的个数"),e(s)])]),$d,t("td",t_,[e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[e_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[l_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[o_]),_:1})]),t("td",n_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[s_,t("td",d_,[t("a",__,[l("为运算表达式设计优先级"),e(s)])]),i_,t("td",c_,[e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[a_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[r_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[h_]),_:1}),l(),u_]),t("td",f_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g_,t("td",m_,[t("a",y_,[l("粉刷房子"),e(s)])]),x_,t("td",p_,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[b_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[j_]),_:1})]),t("td",k_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M_,t("td",H_,[t("a",I_,[l("丑数 II"),e(s)])]),t("td",w_,[e(n,{to:"/leetcode-js/problem/0264.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",v_,[e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[q_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[z_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[C_]),_:1}),l(),O_]),t("td",L_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E_,t("td",P_,[t("a",K_,[l("粉刷房子 II"),e(s)])]),V_,t("td",N_,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[D_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[B_]),_:1})]),t("td",Y_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[A_,t("td",J_,[t("a",R_,[l("栅栏涂色"),e(s)])]),S_,t("td",U_,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[W_]),_:1})]),t("td",X_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F_,t("td",G_,[t("a",T_,[l("完全平方数"),e(s)])]),t("td",Q_,[e(n,{to:"/leetcode-js/problem/0279.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Z_,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[ti]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ei]),_:1})]),t("td",li,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oi,t("td",ni,[t("a",si,[l("翻转游戏 II"),e(s)])]),di,t("td",_i,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[ii]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[ci]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ai]),_:1}),l(),ri]),t("td",hi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ui,t("td",fi,[t("a",gi,[l("最长递增子序列"),e(s)])]),t("td",mi,[e(n,{to:"/leetcode-js/problem/0300.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yi,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[xi]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[pi]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[bi]),_:1})]),t("td",ji,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ki,t("td",Mi,[t("a",Hi,[l("买卖股票的最佳时机含冷冻期"),e(s)])]),t("td",Ii,[e(n,{to:"/leetcode-js/problem/0309.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wi,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vi]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[qi]),_:1})]),t("td",zi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ci,t("td",Oi,[t("a",Li,[l("戳气球"),e(s)])]),Ei,t("td",Pi,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ki]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Vi]),_:1})]),t("td",Ni,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Di,t("td",Bi,[t("a",Yi,[l("超级丑数"),e(s)])]),Ai,t("td",Ji,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ri]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Si]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ui]),_:1})]),t("td",Wi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xi,t("td",Fi,[t("a",Gi,[l("零钱兑换"),e(s)])]),t("td",Ti,[e(n,{to:"/leetcode-js/problem/0322.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qi,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Zi]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[$i]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[tc]),_:1})]),t("td",ec,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lc,t("td",oc,[t("a",nc,[l("矩阵中的最长递增路径"),e(s)])]),sc,t("td",dc,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[_c]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ic]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[cc]),_:1}),l(),ac]),t("td",rc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hc,t("td",uc,[t("a",fc,[l("最大二叉搜索子树"),e(s)])]),gc,t("td",mc,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[yc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[xc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[pc]),_:1}),l(),bc]),t("td",jc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kc,t("td",Mc,[t("a",Hc,[l("打家劫舍 III"),e(s)])]),Ic,t("td",wc,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[vc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[qc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[zc]),_:1}),l(),Cc]),t("td",Oc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lc,t("td",Ec,[t("a",Pc,[l("比特位计数"),e(s)])]),Kc,t("td",Vc,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Nc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Dc]),_:1})]),t("td",Bc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Yc,t("td",Ac,[t("a",Jc,[l("整数拆分"),e(s)])]),t("td",Rc,[e(n,{to:"/leetcode-js/problem/0343.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Sc,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Uc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Wc]),_:1})]),t("td",Xc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fc,t("td",Gc,[t("a",Tc,[l("安卓系统手势解锁"),e(s)])]),Qc,t("td",Zc,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[$c]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ta]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[ea]),_:1}),l(),la]),t("td",oa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[na,t("td",sa,[t("a",da,[l("俄罗斯套娃信封问题"),e(s)])]),t("td",_a,[e(n,{to:"/leetcode-js/problem/0354.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ia,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ca]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[aa]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ra]),_:1}),l(),ha]),t("td",ua,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fa,t("td",ga,[t("a",ma,[l("统计各位数字都不同的数字个数"),e(s)])]),ya,t("td",xa,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[pa]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ba]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[ja]),_:1})]),t("td",ka,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ma,t("td",Ha,[t("a",Ia,[l("轰炸敌人"),e(s)])]),wa,t("td",va,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[qa]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[za]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[Ca]),_:1})]),t("td",Oa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[La,t("td",Ea,[t("a",Pa,[l("最大整除子集"),e(s)])]),Ka,t("td",Va,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Na]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Da]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ba]),_:1}),l(),Ya]),t("td",Aa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ja,t("td",Ra,[t("a",Sa,[l("猜数字大小 II"),e(s)])]),t("td",Ua,[e(n,{to:"/leetcode-js/problem/0375.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Wa,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Xa]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Fa]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:o(()=>[Ga]),_:1})]),t("td",Ta,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qa,t("td",Za,[t("a",$a,[l("摆动序列"),e(s)])]),tr,t("td",er,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[lr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[or]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[nr]),_:1})]),t("td",sr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dr,t("td",_r,[t("a",ir,[l("组合总和 Ⅳ"),e(s)])]),cr,t("td",ar,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[rr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[hr]),_:1})]),t("td",ur,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fr,t("td",gr,[t("a",mr,[l("判断子序列"),e(s)])]),t("td",yr,[e(n,{to:"/leetcode-js/problem/0392.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xr,[e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[pr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[br]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jr]),_:1})]),t("td",kr,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mr,t("td",Hr,[t("a",Ir,[l("旋转函数"),e(s)])]),wr,t("td",vr,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[qr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[zr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Cr]),_:1})]),t("td",Or,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lr,t("td",Er,[t("a",Pr,[l("整数替换"),e(s)])]),Kr,t("td",Vr,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Nr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Dr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[Br]),_:1}),l(),Yr]),t("td",Ar,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jr,t("td",Rr,[t("a",Sr,[l("青蛙过河"),e(s)])]),Ur,t("td",Wr,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Xr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Fr]),_:1})]),t("td",Gr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Tr,t("td",Qr,[t("a",Zr,[l("分割数组的最大值"),e(s)])]),$r,t("td",th,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[eh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[lh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[oh]),_:1}),l(),nh]),t("td",sh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dh,t("td",_h,[t("a",ih,[l("等差数列划分"),e(s)])]),ch,t("td",ah,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[rh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[hh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[uh]),_:1})]),t("td",fh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gh,t("td",mh,[t("a",yh,[l("分割等和子集"),e(s)])]),t("td",xh,[e(n,{to:"/leetcode-js/problem/0416.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ph,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[bh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jh]),_:1})]),t("td",kh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mh,t("td",Hh,[t("a",Ih,[l("屏幕可显示句子的数量"),e(s)])]),wh,t("td",vh,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[qh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[zh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ch]),_:1})]),t("td",Oh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lh,t("td",Eh,[t("a",Ph,[l("无重叠区间"),e(s)])]),Kh,t("td",Vh,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Nh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Dh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Bh]),_:1}),l(),Yh]),t("td",Ah,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jh,t("td",Rh,[t("a",Sh,[l("等差数列划分 II - 子序列"),e(s)])]),Uh,t("td",Wh,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Xh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Fh]),_:1})]),t("td",Gh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Th,t("td",Qh,[t("a",Zh,[l("可怜的小猪"),e(s)])]),$h,t("td",t1,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[e1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[l1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[o1]),_:1})]),t("td",n1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[s1,t("td",d1,[t("a",_1,[l("我能赢吗"),e(s)])]),i1,t("td",c1,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[a1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[r1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[h1]),_:1}),l(),u1]),t("td",f1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g1,t("td",m1,[t("a",y1,[l("最优账单平衡"),e(s)])]),x1,t("td",p1,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[b1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[j1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[k1]),_:1}),l(),M1]),t("td",H1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[I1,t("td",w1,[t("a",v1,[l("统计重复个数"),e(s)])]),q1,t("td",z1,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[C1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[O1]),_:1})]),t("td",L1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E1,t("td",P1,[t("a",K1,[l("环绕字符串中唯一的子字符串"),e(s)])]),V1,t("td",N1,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[D1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[B1]),_:1})]),t("td",Y1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[A1,t("td",J1,[t("a",R1,[l("编码最短长度的字符串"),e(s)])]),S1,t("td",U1,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[W1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[X1]),_:1})]),t("td",F1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[G1,t("td",T1,[t("a",Q1,[l("连接词"),e(s)])]),Z1,t("td",$1,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[tu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[eu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[lu]),_:1}),l(),ou]),t("td",nu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[su,t("td",du,[t("a",_u,[l("火柴拼正方形"),e(s)])]),iu,t("td",cu,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[au]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ru]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[hu]),_:1}),l(),uu]),t("td",fu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gu,t("td",mu,[t("a",yu,[l("一和零"),e(s)])]),t("td",xu,[e(n,{to:"/leetcode-js/problem/0474.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",pu,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[bu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[ju]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ku]),_:1})]),t("td",Mu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hu,t("td",Iu,[t("a",wu,[l("预测赢家"),e(s)])]),vu,t("td",qu,[e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[zu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Cu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Ou]),_:1}),l(),Lu]),t("td",Eu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pu,t("td",Ku,[t("a",Vu,[l("最大连续1的个数 II"),e(s)])]),Nu,t("td",Du,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Bu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Yu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[Au]),_:1})]),t("td",Ju,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ru,t("td",Su,[t("a",Uu,[l("祖玛游戏"),e(s)])]),Wu,t("td",Xu,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Fu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Gu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[Tu]),_:1}),l(),Qu]),t("td",Zu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$u,t("td",tf,[t("a",ef,[l("目标和"),e(s)])]),t("td",lf,[e(n,{to:"/leetcode-js/problem/0494.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",of,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[nf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[sf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[df]),_:1})]),t("td",_f,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cf,t("td",af,[t("a",rf,[l("斐波那契数"),e(s)])]),t("td",hf,[e(n,{to:"/leetcode-js/problem/0509.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",uf,[e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[ff]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[gf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[mf]),_:1}),l(),yf]),t("td",xf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[pf,t("td",bf,[t("a",jf,[l("自由之路"),e(s)])]),t("td",kf,[e(n,{to:"/leetcode-js/problem/0514.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Mf,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Hf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[If]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[wf]),_:1}),l(),vf]),t("td",qf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zf,t("td",Cf,[t("a",Of,[l("最长回文子序列"),e(s)])]),t("td",Lf,[e(n,{to:"/leetcode-js/problem/0516.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ef,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Pf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Kf]),_:1})]),t("td",Vf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nf,t("td",Df,[t("a",Bf,[l("零钱兑换 II"),e(s)])]),t("td",Yf,[e(n,{to:"/leetcode-js/problem/0518.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Af,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Jf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Rf]),_:1})]),t("td",Sf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Uf,t("td",Wf,[t("a",Xf,[l("优美的排列"),e(s)])]),Ff,t("td",Gf,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Tf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Qf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Zf]),_:1}),l(),$f]),t("td",tg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eg,t("td",lg,[t("a",og,[l("01 矩阵"),e(s)])]),ng,t("td",sg,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[dg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[_g]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ig]),_:1}),l(),cg]),t("td",ag,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rg,t("td",hg,[t("a",ug,[l("移除盒子"),e(s)])]),fg,t("td",gg,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[mg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[yg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xg]),_:1})]),t("td",pg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bg,t("td",jg,[t("a",kg,[l("学生出勤记录 II"),e(s)])]),Mg,t("td",Hg,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ig]),_:1})]),t("td",wg,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vg,t("td",qg,[t("a",zg,[l("最优除法"),e(s)])]),Cg,t("td",Og,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Lg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Eg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Pg]),_:1})]),t("td",Kg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vg,t("td",Ng,[t("a",Dg,[l("矩阵中最长的连续1线段"),e(s)])]),Bg,t("td",Yg,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ag]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Jg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[Rg]),_:1})]),t("td",Sg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ug,t("td",Wg,[t("a",Xg,[l("最大休假天数"),e(s)])]),Fg,t("td",Gg,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Tg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Qg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[Zg]),_:1})]),t("td",$g,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tm,t("td",em,[t("a",lm,[l("出界的路径数"),e(s)])]),om,t("td",nm,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[sm]),_:1})]),t("td",dm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_m,t("td",im,[t("a",cm,[l("两个字符串的删除操作"),e(s)])]),t("td",am,[e(n,{to:"/leetcode-js/problem/0583.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",rm,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[hm]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[um]),_:1})]),t("td",fm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gm,t("td",mm,[t("a",ym,[l("不含连续1的非负整数"),e(s)])]),xm,t("td",pm,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[bm]),_:1})]),t("td",jm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[km,t("td",Mm,[t("a",Hm,[l("K 个逆序对数组"),e(s)])]),Im,t("td",wm,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[vm]),_:1})]),t("td",qm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zm,t("td",Cm,[t("a",Om,[l("寻找数组的错位排列"),e(s)])]),Lm,t("td",Em,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Pm]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Km]),_:1})]),t("td",Vm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nm,t("td",Dm,[t("a",Bm,[l("大礼包"),e(s)])]),Ym,t("td",Am,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Jm]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[Rm]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Sm]),_:1}),l(),Um]),t("td",Wm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xm,t("td",Fm,[t("a",Gm,[l("解码方法 II"),e(s)])]),Tm,t("td",Qm,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Zm]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[$m]),_:1})]),t("td",ty,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ey,t("td",ly,[t("a",oy,[l("最长数对链"),e(s)])]),ny,t("td",sy,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[dy]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[_y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[iy]),_:1}),l(),cy]),t("td",ay,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ry,t("td",hy,[t("a",uy,[l("回文子串"),e(s)])]),fy,t("td",gy,[e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[my]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[yy]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xy]),_:1})]),t("td",py,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[by,t("td",jy,[t("a",ky,[l("两个键的键盘"),e(s)])]),My,t("td",Hy,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Iy]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[wy]),_:1})]),t("td",vy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qy,t("td",zy,[t("a",Cy,[l("四个键的键盘"),e(s)])]),Oy,t("td",Ly,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Ey]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Py]),_:1})]),t("td",Ky,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vy,t("td",Ny,[t("a",Dy,[l("成本最小路径"),e(s)])]),By,t("td",Yy,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ay]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Jy]),_:1})]),t("td",Ry,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Sy,t("td",Uy,[t("a",Wy,[l("奇怪的打印机"),e(s)])]),Xy,t("td",Fy,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Gy]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ty]),_:1})]),t("td",Qy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zy,t("td",$y,[t("a",t3,[l("最长递增子序列的个数"),e(s)])]),e3,t("td",l3,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[o3]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[n3]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[s3]),_:1}),l(),d3]),t("td",_3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i3,t("td",c3,[t("a",a3,[l("有效的括号字符串"),e(s)])]),t("td",r3,[e(n,{to:"/leetcode-js/problem/0678.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",h3,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[u3]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[f3]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[g3]),_:1}),l(),m3]),t("td",y3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[x3,t("td",p3,[t("a",b3,[l("骑士在棋盘上的概率"),e(s)])]),j3,t("td",k3,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[M3]),_:1})]),t("td",H3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I3,t("td",w3,[t("a",v3,[l("三个无重叠子数组的最大和"),e(s)])]),q3,t("td",z3,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[C3]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[O3]),_:1})]),t("td",L3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E3,t("td",P3,[t("a",K3,[l("贴纸拼词"),e(s)])]),V3,t("td",N3,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[D3]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[B3]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Y3]),_:1}),l(),A3]),t("td",J3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[R3,t("td",S3,[t("a",U3,[l("划分为k个相等的子集"),e(s)])]),W3,t("td",X3,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[F3]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[G3]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[T3]),_:1}),l(),Q3]),t("td",Z3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$3,t("td",tx,[t("a",ex,[l("两个字符串的最小ASCII删除和"),e(s)])]),t("td",lx,[e(n,{to:"/leetcode-js/problem/0712.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ox,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[nx]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[sx]),_:1})]),t("td",dx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_x,t("td",ix,[t("a",cx,[l("买卖股票的最佳时机含手续费"),e(s)])]),t("td",ax,[e(n,{to:"/leetcode-js/problem/0714.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",rx,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[hx]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ux]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[fx]),_:1})]),t("td",gx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mx,t("td",yx,[t("a",xx,[l("最长重复子数组"),e(s)])]),px,t("td",bx,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[jx]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[kx]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Mx]),_:1}),l(),Hx]),t("td",Ix,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wx,t("td",vx,[t("a",qx,[l("最小窗口子序列"),e(s)])]),zx,t("td",Cx,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Ox]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Lx]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[Ex]),_:1})]),t("td",Px,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Kx,t("td",Vx,[t("a",Nx,[l("统计不同回文子序列"),e(s)])]),Dx,t("td",Bx,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Yx]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ax]),_:1})]),t("td",Jx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rx,t("td",Sx,[t("a",Ux,[l("删除并获得点数"),e(s)])]),Wx,t("td",Xx,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Fx]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Gx]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Tx]),_:1})]),t("td",Qx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zx,t("td",$x,[t("a",t4,[l("摘樱桃"),e(s)])]),e4,t("td",l4,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[o4]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[n4]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[s4]),_:1})]),t("td",d4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_4,t("td",i4,[t("a",c4,[l("使用最小花费爬楼梯"),e(s)])]),a4,t("td",r4,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[h4]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[u4]),_:1})]),t("td",f4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[g4,t("td",m4,[t("a",y4,[l("角矩形的数量"),e(s)])]),x4,t("td",p4,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[b4]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[j4]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[k4]),_:1}),l(),M4]),t("td",H4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I4,t("td",w4,[t("a",v4,[l("最大加号标志"),e(s)])]),q4,t("td",z4,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[C4]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[O4]),_:1})]),t("td",L4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E4,t("td",P4,[t("a",K4,[l("K 站中转内最便宜的航班"),e(s)])]),V4,t("td",N4,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[D4]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[B4]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Y4]),_:1}),l(),A4]),t("td",J4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R4,t("td",S4,[t("a",U4,[l("旋转数字"),e(s)])]),W4,t("td",X4,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[F4]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[G4]),_:1})]),t("td",T4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q4,t("td",Z4,[t("a",$4,[l("多米诺和托米诺平铺"),e(s)])]),t2,t("td",e2,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[l2]),_:1})]),t("td",o2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n2,t("td",s2,[t("a",d2,[l("匹配子序列的单词数"),e(s)])]),_2,t("td",i2,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[c2]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[a2]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[r2]),_:1}),l(),h2]),t("td",u2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f2,t("td",g2,[t("a",m2,[l("香槟塔"),e(s)])]),y2,t("td",x2,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[p2]),_:1})]),t("td",b2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j2,t("td",k2,[t("a",M2,[l("使序列递增的最小交换次数"),e(s)])]),H2,t("td",I2,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[w2]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[v2]),_:1})]),t("td",q2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z2,t("td",C2,[t("a",O2,[l("数组的均值分割"),e(s)])]),L2,t("td",E2,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[P2]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[K2]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[V2]),_:1}),l(),N2]),t("td",D2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B2,t("td",Y2,[t("a",A2,[l("分汤"),e(s)])]),J2,t("td",R2,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[S2]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[U2]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:o(()=>[W2]),_:1})]),t("td",X2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F2,t("td",G2,[t("a",T2,[l("最大平均值和的分组"),e(s)])]),Q2,t("td",Z2,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[$2]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[tp]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[ep]),_:1})]),t("td",lp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[op,t("td",np,[t("a",sp,[l("赛车"),e(s)])]),dp,t("td",_p,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ip]),_:1})]),t("td",cp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ap,t("td",rp,[t("a",hp,[l("带因子的二叉树"),e(s)])]),up,t("td",fp,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[gp]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[mp]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[yp]),_:1}),l(),xp]),t("td",pp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bp,t("td",jp,[t("a",kp,[l("统计子串中的唯一字符"),e(s)])]),Mp,t("td",Hp,[e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Ip]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[wp]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[vp]),_:1})]),t("td",qp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zp,t("td",Cp,[t("a",Op,[l("树中距离之和"),e(s)])]),Lp,t("td",Ep,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Pp]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Kp]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Vp]),_:1}),l(),Np]),t("td",Dp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bp,t("td",Yp,[t("a",Ap,[l("新 21 点"),e(s)])]),Jp,t("td",Rp,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Sp]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Up]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[Wp]),_:1}),l(),Xp]),t("td",Fp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gp,t("td",Tp,[t("a",Qp,[l("推多米诺"),e(s)])]),Zp,t("td",$p,[e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[t5]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[e5]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[l5]),_:1})]),t("td",o5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n5,t("td",s5,[t("a",d5,[l("数组中的最长山脉"),e(s)])]),_5,t("td",i5,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[c5]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[a5]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[r5]),_:1}),l(),h5]),t("td",u5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[f5,t("td",g5,[t("a",m5,[l("访问所有节点的最短路径"),e(s)])]),y5,t("td",x5,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[p5]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[b5]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[j5]),_:1}),l(),k5]),t("td",M5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[H5,t("td",I5,[t("a",w5,[l("最低加油次数"),e(s)])]),v5,t("td",q5,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[z5]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[C5]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[O5]),_:1}),l(),L5]),t("td",E5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[P5,t("td",K5,[t("a",V5,[l("最长的斐波那契子序列的长度"),e(s)])]),N5,t("td",D5,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[B5]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Y5]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[A5]),_:1})]),t("td",J5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R5,t("td",S5,[t("a",U5,[l("石子游戏"),e(s)])]),W5,t("td",X5,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[F5]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[G5]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[T5]),_:1}),l(),Q5]),t("td",Z5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$5,t("td",tb,[t("a",eb,[l("盈利计划"),e(s)])]),lb,t("td",ob,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[nb]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[sb]),_:1})]),t("td",db,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_b,t("td",ib,[t("a",cb,[l("鸡蛋掉落"),e(s)])]),ab,t("td",rb,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[hb]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[ub]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[fb]),_:1})]),t("td",gb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mb,t("td",yb,[t("a",xb,[l("所有可能的真二叉树"),e(s)])]),pb,t("td",bb,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[jb]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[kb]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[Mb]),_:1}),l(),Hb]),t("td",Ib,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wb,t("td",vb,[t("a",qb,[l("子数组按位或操作"),e(s)])]),zb,t("td",Cb,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Ob]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Lb]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Eb]),_:1})]),t("td",Pb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kb,t("td",Vb,[t("a",Nb,[l("最大为 N 的数字组合"),e(s)])]),Db,t("td",Bb,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Yb]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Ab]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Jb]),_:1}),l(),Rb]),t("td",Sb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ub,t("td",Wb,[t("a",Xb,[l("DI 序列的有效排列"),e(s)])]),Fb,t("td",Gb,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Tb]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Qb]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[Zb]),_:1})]),t("td",$b,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[t0,t("td",e0,[t("a",l0,[l("子数组的最小值之和"),e(s)])]),o0,t("td",n0,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[s0]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[d0]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[_0]),_:1}),l(),i0]),t("td",c0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a0,t("td",r0,[t("a",h0,[l("猫和老鼠"),e(s)])]),u0,t("td",f0,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[g0]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[m0]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[y0]),_:1}),l(),x0]),t("td",p0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[b0,t("td",j0,[t("a",k0,[l("环形子数组的最大和"),e(s)])]),t("td",M0,[e(n,{to:"/leetcode-js/problem/0918.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",H0,[e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[I0]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[w0]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[v0]),_:1}),l(),q0]),t("td",z0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C0,t("td",O0,[t("a",L0,[l("播放列表的数量"),e(s)])]),E0,t("td",P0,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[K0]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[V0]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[N0]),_:1})]),t("td",D0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B0,t("td",Y0,[t("a",A0,[l("将字符串翻转到单调递增"),e(s)])]),J0,t("td",R0,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[S0]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[U0]),_:1})]),t("td",W0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X0,t("td",F0,[t("a",G0,[l("下降路径最小和"),e(s)])]),t("td",T0,[e(n,{to:"/leetcode-js/problem/0931.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Q0,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Z0]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[$0]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[t8]),_:1})]),t("td",e8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l8,t("td",o8,[t("a",n8,[l("骑士拨号器"),e(s)])]),s8,t("td",d8,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[_8]),_:1})]),t("td",i8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c8,t("td",a8,[t("a",r8,[l("不同的子序列 II"),e(s)])]),h8,t("td",u8,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[f8]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[g8]),_:1})]),t("td",m8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[y8,t("td",x8,[t("a",p8,[l("最短超级串"),e(s)])]),b8,t("td",j8,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[k8]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[M8]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[H8]),_:1}),l(),I8]),t("td",w8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[v8,t("td",q8,[t("a",z8,[l("最高的广告牌"),e(s)])]),C8,t("td",O8,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[L8]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[E8]),_:1})]),t("td",P8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K8,t("td",V8,[t("a",N8,[l("删列造序 III"),e(s)])]),D8,t("td",B8,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Y8]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[A8]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[J8]),_:1})]),t("td",R8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[S8,t("td",U8,[t("a",W8,[l("表示数字的最少运算符"),e(s)])]),X8,t("td",F8,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[G8]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[T8]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Q8]),_:1})]),t("td",Z8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$8,t("td",t6,[t("a",e6,[l("监控二叉树"),e(s)])]),l6,t("td",o6,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[n6]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[s6]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[d6]),_:1}),l(),_6]),t("td",i6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[c6,t("td",a6,[t("a",r6,[l("奇偶跳"),e(s)])]),h6,t("td",u6,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[f6]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[g6]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[m6]),_:1}),l(),y6]),t("td",x6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p6,t("td",b6,[t("a",j6,[l("最长湍流子数组"),e(s)])]),k6,t("td",M6,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[H6]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[I6]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[w6]),_:1})]),t("td",v6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q6,t("td",z6,[t("a",C6,[l("最低票价"),e(s)])]),O6,t("td",L6,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[E6]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[P6]),_:1})]),t("td",K6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[V6,t("td",N6,[t("a",D6,[l("平方数组的数目"),e(s)])]),B6,t("td",Y6,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[A6]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[J6]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[R6]),_:1}),l(),S6]),t("td",U6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W6,t("td",X6,[t("a",F6,[l("合并石头的最低成本"),e(s)])]),G6,t("td",T6,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Q6]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Z6]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[$6]),_:1})]),t("td",t7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e7,t("td",l7,[t("a",o7,[l("至少有 1 位重复的数字"),e(s)])]),n7,t("td",s7,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[d7]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[_7]),_:1})]),t("td",i7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[c7,t("td",a7,[t("a",r7,[l("最佳观光组合"),e(s)])]),h7,t("td",u7,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[f7]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[g7]),_:1})]),t("td",m7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y7,t("td",x7,[t("a",p7,[l("视频拼接"),e(s)])]),b7,t("td",j7,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[k7]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[M7]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[H7]),_:1})]),t("td",I7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w7,t("td",v7,[t("a",q7,[l("除数博弈"),e(s)])]),z7,t("td",C7,[e(n,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[O7]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[L7]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[E7]),_:1}),l(),P7]),t("td",K7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[V7,t("td",N7,[t("a",D7,[l("最长等差数列"),e(s)])]),B7,t("td",Y7,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[A7]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[J7]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[R7]),_:1}),l(),S7]),t("td",U7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[W7,t("td",X7,[t("a",F7,[l("两个非重叠子数组的最大和"),e(s)])]),G7,t("td",T7,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Q7]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Z7]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[$7]),_:1})]),t("td",t9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e9,t("td",l9,[t("a",o9,[l("不相交的线"),e(s)])]),n9,t("td",s9,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[d9]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[_9]),_:1})]),t("td",i9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c9,t("td",a9,[t("a",r9,[l("多边形三角剖分的最低得分"),e(s)])]),h9,t("td",u9,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[f9]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[g9]),_:1})]),t("td",m9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y9,t("td",x9,[t("a",p9,[l("分隔数组以得到最大和"),e(s)])]),b9,t("td",j9,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[k9]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[M9]),_:1})]),t("td",H9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I9,t("td",w9,[t("a",v9,[l("最长字符串链"),e(s)])]),q9,t("td",z9,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[C9]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[O9]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[L9]),_:1}),l(),E9]),t("td",P9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K9,t("td",V9,[t("a",N9,[l("最后一块石头的重量 II"),e(s)])]),t("td",D9,[e(n,{to:"/leetcode-js/problem/1049.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",B9,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Y9]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[A9]),_:1})]),t("td",J9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R9,t("td",S9,[t("a",U9,[l("最长重复子串"),e(s)])]),W9,t("td",X9,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[F9]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[G9]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[T9]),_:1}),l(),Q9]),t("td",Z9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$9,t("td",tj,[t("a",ej,[l("校园自行车分配 II"),e(s)])]),lj,t("td",oj,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[nj]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[sj]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[dj]),_:1}),l(),_j]),t("td",ij,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cj,t("td",aj,[t("a",rj,[l("范围内的数字计数"),e(s)])]),hj,t("td",uj,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[fj]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[gj]),_:1})]),t("td",mj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yj,t("td",xj,[t("a",pj,[l("最短公共超序列"),e(s)])]),bj,t("td",jj,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[kj]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Mj]),_:1})]),t("td",Hj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ij,t("td",wj,[t("a",vj,[l("填充书架"),e(s)])]),qj,t("td",zj,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Cj]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Oj]),_:1})]),t("td",Lj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ej,t("td",Pj,[t("a",Kj,[l("最小的必要团队"),e(s)])]),Vj,t("td",Nj,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Dj]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Bj]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Yj]),_:1}),l(),Aj]),t("td",Jj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rj,t("td",Sj,[t("a",Uj,[l("叶值的最小代价生成树"),e(s)])]),Wj,t("td",Xj,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Fj]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Gj]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Tj]),_:1}),l(),Qj]),t("td",Zj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$j,t("td",tk,[t("a",ek,[l("第 N 个泰波那契数"),e(s)])]),t("td",lk,[e(n,{to:"/leetcode-js/problem/1137.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ok,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[nk]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[sk]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[dk]),_:1})]),t("td",_k,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ik,t("td",ck,[t("a",ak,[l("最大的以 1 为边界的正方形"),e(s)])]),rk,t("td",hk,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[uk]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[fk]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[gk]),_:1})]),t("td",mk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yk,t("td",xk,[t("a",pk,[l("石子游戏 II"),e(s)])]),bk,t("td",jk,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[kk]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Mk]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Hk]),_:1}),l(),Ik]),t("td",wk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vk,t("td",qk,[t("a",zk,[l("最长公共子序列"),e(s)])]),t("td",Ck,[e(n,{to:"/leetcode-js/problem/1143.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ok,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Lk]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ek]),_:1})]),t("td",Pk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kk,t("td",Vk,[t("a",Nk,[l("段式回文"),e(s)])]),Dk,t("td",Bk,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Yk]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[Ak]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Jk]),_:1}),l(),Rk]),t("td",Sk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Uk,t("td",Wk,[t("a",Xk,[l("掷骰子等于目标和的方法数"),e(s)])]),Fk,t("td",Gk,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Tk]),_:1})]),t("td",Qk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zk,t("td",$k,[t("a",tM,[l("地图分析"),e(s)])]),eM,t("td",lM,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[oM]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[nM]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[sM]),_:1}),l(),dM]),t("td",_M,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iM,t("td",cM,[t("a",aM,[l("与目标颜色间的最短距离"),e(s)])]),rM,t("td",hM,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[uM]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[fM]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[gM]),_:1})]),t("td",mM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yM,t("td",xM,[t("a",pM,[l("删除一次得到子数组最大和"),e(s)])]),bM,t("td",jM,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[kM]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[MM]),_:1})]),t("td",HM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[IM,t("td",wM,[t("a",vM,[l("使数组严格递增"),e(s)])]),qM,t("td",zM,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[CM]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[OM]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[LM]),_:1}),l(),EM]),t("td",PM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[KM,t("td",VM,[t("a",NM,[l("K 次串联后最大子数组之和"),e(s)])]),DM,t("td",BM,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[YM]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[AM]),_:1})]),t("td",JM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[RM,t("td",SM,[t("a",UM,[l("验证回文串 III"),e(s)])]),WM,t("td",XM,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[FM]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[GM]),_:1})]),t("td",TM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QM,t("td",ZM,[t("a",$M,[l("最长定差子序列"),e(s)])]),tH,t("td",eH,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[lH]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[oH]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[nH]),_:1})]),t("td",sH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dH,t("td",_H,[t("a",iH,[l("统计元音字母序列的数目"),e(s)])]),cH,t("td",aH,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[rH]),_:1})]),t("td",hH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uH,t("td",fH,[t("a",gH,[l("掷骰子模拟"),e(s)])]),mH,t("td",yH,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[xH]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[pH]),_:1})]),t("td",bH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jH,t("td",kH,[t("a",MH,[l("飞机座位分配概率"),e(s)])]),HH,t("td",IH,[e(n,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[wH]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[vH]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[qH]),_:1}),l(),zH]),t("td",CH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[OH,t("td",LH,[t("a",EH,[l("抛掷硬币"),e(s)])]),PH,t("td",KH,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[VH]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[NH]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[DH]),_:1}),l(),BH]),t("td",YH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AH,t("td",JH,[t("a",RH,[l("规划兼职工作"),e(s)])]),SH,t("td",UH,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[WH]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[XH]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[FH]),_:1}),l(),GH]),t("td",TH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[QH,t("td",ZH,[t("a",$H,[l("删除回文子数组"),e(s)])]),tI,t("td",eI,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[lI]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[oI]),_:1})]),t("td",nI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sI,t("td",dI,[t("a",_I,[l("得分最高的单词集合"),e(s)])]),iI,t("td",cI,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[aI]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[rI]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[hI]),_:1}),l(),uI]),t("td",fI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gI,t("td",mI,[t("a",yI,[l("不相交的握手"),e(s)])]),xI,t("td",pI,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[bI]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jI]),_:1})]),t("td",kI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[MI,t("td",HI,[t("a",II,[l("可被三整除的最大和"),e(s)])]),wI,t("td",vI,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[qI]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[zI]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[CI]),_:1}),l(),OI]),t("td",LI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EI,t("td",PI,[t("a",KI,[l("停在原地的方案数"),e(s)])]),VI,t("td",NI,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[DI]),_:1})]),t("td",BI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[YI,t("td",AI,[t("a",JI,[l("统计全为 1 的正方形子矩阵"),e(s)])]),RI,t("td",SI,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[UI]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[WI]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[XI]),_:1})]),t("td",FI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GI,t("td",TI,[t("a",QI,[l("分割回文串 III"),e(s)])]),ZI,t("td",$I,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[tw]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ew]),_:1})]),t("td",lw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ow,t("td",nw,[t("a",sw,[l("下降路径最小和 II"),e(s)])]),dw,t("td",_w,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[iw]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[cw]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[aw]),_:1})]),t("td",rw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hw,t("td",uw,[t("a",fw,[l("最大得分的路径数目"),e(s)])]),gw,t("td",mw,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[yw]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xw]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[pw]),_:1})]),t("td",bw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jw,t("td",kw,[t("a",Mw,[l("让字符串成为回文串的最少插入次数"),e(s)])]),t("td",Hw,[e(n,{to:"/leetcode-js/problem/1312.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Iw,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[ww]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[vw]),_:1})]),t("td",qw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zw,t("td",Cw,[t("a",Ow,[l("二指输入的的最小距离"),e(s)])]),Lw,t("td",Ew,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Pw]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Kw]),_:1})]),t("td",Vw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nw,t("td",Dw,[t("a",Bw,[l("灌溉花园的最少水龙头数目"),e(s)])]),Yw,t("td",Aw,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Jw]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Rw]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Sw]),_:1})]),t("td",Uw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ww,t("td",Xw,[t("a",Fw,[l("阈值距离内邻居最少的城市"),e(s)])]),Gw,t("td",Tw,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Qw]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Zw]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[$w]),_:1})]),t("td",tv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ev,t("td",lv,[t("a",ov,[l("工作计划的最低难度"),e(s)])]),nv,t("td",sv,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[dv]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[_v]),_:1})]),t("td",iv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cv,t("td",av,[t("a",rv,[l("跳跃游戏 V"),e(s)])]),hv,t("td",uv,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[fv]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[gv]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[mv]),_:1})]),t("td",yv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xv,t("td",pv,[t("a",bv,[l("参加考试的最大学生数"),e(s)])]),jv,t("td",kv,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Mv]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Hv]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Iv]),_:1}),l(),wv]),t("td",vv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qv,t("td",zv,[t("a",Cv,[l("有效的快递序列数目"),e(s)])]),Ov,t("td",Lv,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Ev]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Pv]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[Kv]),_:1})]),t("td",Vv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nv,t("td",Dv,[t("a",Bv,[l("形成三的最大倍数"),e(s)])]),Yv,t("td",Av,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Jv]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Rv]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Sv]),_:1})]),t("td",Uv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wv,t("td",Xv,[t("a",Fv,[l("二叉树中的最长交错路径"),e(s)])]),Gv,t("td",Tv,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Qv]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Zv]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[$v]),_:1}),l(),tq]),t("td",eq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lq,t("td",oq,[t("a",nq,[l("二叉搜索子树的最大键值和"),e(s)])]),sq,t("td",dq,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[_q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[iq]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[cq]),_:1}),l(),aq]),t("td",rq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hq,t("td",uq,[t("a",fq,[l("将整数按权重排序"),e(s)])]),gq,t("td",mq,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[yq]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xq]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[pq]),_:1})]),t("td",bq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jq,t("td",kq,[t("a",Mq,[l("3n 块披萨"),e(s)])]),Hq,t("td",Iq,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[wq]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vq]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[qq]),_:1}),l(),zq]),t("td",Cq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oq,t("td",Lq,[t("a",Eq,[l("统计作战单位数"),e(s)])]),Pq,t("td",Kq,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Vq]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Nq]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Dq]),_:1}),l(),Bq]),t("td",Yq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Aq,t("td",Jq,[t("a",Rq,[l("找到所有好字符串"),e(s)])]),Sq,t("td",Uq,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Wq]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Xq]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Fq]),_:1})]),t("td",Gq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Tq,t("td",Qq,[t("a",Zq,[l("做菜顺序"),e(s)])]),$q,t("td",tz,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[ez]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[lz]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[oz]),_:1}),l(),nz]),t("td",sz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dz,t("td",_z,[t("a",iz,[l("石子游戏 III"),e(s)])]),cz,t("td",az,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[rz]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[hz]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[uz]),_:1}),l(),fz]),t("td",gz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mz,t("td",yz,[t("a",xz,[l("给 N x 3 网格图涂色的方案数"),e(s)])]),pz,t("td",bz,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jz]),_:1})]),t("td",kz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mz,t("td",Hz,[t("a",Iz,[l("恢复数组"),e(s)])]),wz,t("td",vz,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[qz]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[zz]),_:1})]),t("td",Cz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oz,t("td",Lz,[t("a",Ez,[l("生成数组"),e(s)])]),Pz,t("td",Kz,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Vz]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[Nz]),_:1})]),t("td",Dz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bz,t("td",Yz,[t("a",Az,[l("带限制的子序列和"),e(s)])]),Jz,t("td",Rz,[e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[Sz]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Uz]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Wz]),_:1}),l(),Xz]),t("td",Fz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gz,t("td",Tz,[t("a",Qz,[l("每个人戴不同帽子的方案数"),e(s)])]),Zz,t("td",$z,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[tC]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[eC]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[lC]),_:1}),l(),oC]),t("td",nC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sC,t("td",dC,[t("a",_C,[l("切披萨的方案数"),e(s)])]),iC,t("td",cC,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[aC]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[rC]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[hC]),_:1}),l(),uC]),t("td",fC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gC,t("td",mC,[t("a",yC,[l("数位成本和为目标值的最大数字"),e(s)])]),xC,t("td",pC,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[bC]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jC]),_:1})]),t("td",kC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[MC,t("td",HC,[t("a",IC,[l("两个子序列的最大点积"),e(s)])]),wC,t("td",vC,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[qC]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[zC]),_:1})]),t("td",CC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[OC,t("td",LC,[t("a",EC,[l("摘樱桃 II"),e(s)])]),PC,t("td",KC,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[VC]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[NC]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[DC]),_:1})]),t("td",BC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[YC,t("td",AC,[t("a",JC,[l("两个盒子中球的颜色数相同的概率"),e(s)])]),RC,t("td",SC,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[UC]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[WC]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[XC]),_:1}),l(),FC]),t("td",GC,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[TC,t("td",QC,[t("a",ZC,[l("粉刷房子 III"),e(s)])]),$C,t("td",tO,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[eO]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[lO]),_:1})]),t("td",oO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nO,t("td",sO,[t("a",dO,[l("找两个和为目标值且不重叠的子数组"),e(s)])]),_O,t("td",iO,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[cO]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[aO]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[rO]),_:1}),l(),hO]),t("td",uO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fO,t("td",gO,[t("a",mO,[l("安排邮筒"),e(s)])]),yO,t("td",xO,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[pO]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[bO]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jO]),_:1}),l(),kO]),t("td",MO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[HO,t("td",IO,[t("a",wO,[l("树节点的第 K 个祖先"),e(s)])]),vO,t("td",qO,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[zO]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[CO]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[OO]),_:1}),l(),LO]),t("td",EO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[PO,t("td",KO,[t("a",VO,[l("删掉一个元素以后全为 1 的最长子数组"),e(s)])]),NO,t("td",DO,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[BO]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[YO]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[AO]),_:1})]),t("td",JO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[RO,t("td",SO,[t("a",UO,[l("并行课程 II"),e(s)])]),WO,t("td",XO,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[FO]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[GO]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[TO]),_:1}),l(),QO]),t("td",ZO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$O,t("td",tL,[t("a",eL,[l("统计全 1 子矩形"),e(s)])]),lL,t("td",oL,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[nL]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[sL]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[dL]),_:1}),l(),_L]),t("td",iL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cL,t("td",aL,[t("a",rL,[l("石子游戏 IV"),e(s)])]),hL,t("td",uL,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[fL]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[gL]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:o(()=>[mL]),_:1})]),t("td",yL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xL,t("td",pL,[t("a",bL,[l("和为奇数的子数组数目"),e(s)])]),jL,t("td",kL,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ML]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[HL]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[IL]),_:1}),l(),wL]),t("td",vL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qL,t("td",zL,[t("a",CL,[l("字符串的好分割数目"),e(s)])]),OL,t("td",LL,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[EL]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[PL]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[KL]),_:1}),l(),VL]),t("td",NL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DL,t("td",BL,[t("a",YL,[l("形成目标数组的子数组最少增加次数"),e(s)])]),AL,t("td",JL,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[RL]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[SL]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[UL]),_:1}),l(),WL]),t("td",XL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[FL,t("td",GL,[t("a",TL,[l("压缩字符串 II"),e(s)])]),QL,t("td",ZL,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[$L]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[tE]),_:1})]),t("td",eE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lE,t("td",oE,[t("a",nE,[l("最大得分"),e(s)])]),sE,t("td",dE,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[_E]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[iE]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[cE]),_:1}),l(),aE]),t("td",rE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hE,t("td",uE,[t("a",fE,[l("切棍子的最小成本"),e(s)])]),gE,t("td",mE,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[yE]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xE]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[pE]),_:1})]),t("td",bE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jE,t("td",kE,[t("a",ME,[l("图中最相似的路径"),e(s)])]),HE,t("td",IE,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[wE]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[vE]),_:1})]),t("td",qE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zE,t("td",CE,[t("a",OE,[l("吃掉 N 个橘子的最少天数"),e(s)])]),LE,t("td",EE,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[PE]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[KE]),_:1})]),t("td",VE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[NE,t("td",DE,[t("a",BE,[l("石子游戏 V"),e(s)])]),YE,t("td",AE,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[JE]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[RE]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[SE]),_:1}),l(),UE]),t("td",WE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XE,t("td",FE,[t("a",GE,[l("乘积为正数的最长子数组长度"),e(s)])]),TE,t("td",QE,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[ZE]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[$E]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[tP]),_:1})]),t("td",eP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lP,t("td",oP,[t("a",nP,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),sP,t("td",dP,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[_P]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[iP]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[cP]),_:1}),l(),aP]),t("td",rP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hP,t("td",uP,[t("a",fP,[l("统计所有可行路径"),e(s)])]),gP,t("td",mP,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[yP]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[xP]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[pP]),_:1})]),t("td",bP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jP,t("td",kP,[t("a",MP,[l("使绳子变成彩色的最短时间"),e(s)])]),HP,t("td",IP,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[wP]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vP]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[qP]),_:1}),l(),zP]),t("td",CP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[OP,t("td",LP,[t("a",EP,[l("矩阵的最大非负积"),e(s)])]),PP,t("td",KP,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[VP]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[NP]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[DP]),_:1})]),t("td",BP,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[YP,t("td",AP,[t("a",JP,[l("连通两组点的最小成本"),e(s)])]),RP,t("td",SP,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[UP]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[WP]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[XP]),_:1}),l(),FP]),t("td",GP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[TP,t("td",QP,[t("a",ZP,[l("使整数变为 0 的最少操作次数"),e(s)])]),$P,t("td",tK,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[eK]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[lK]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[oK]),_:1})]),t("td",nK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sK,t("td",dK,[t("a",_K,[l("统计子树中城市之间最大距离"),e(s)])]),iK,t("td",cK,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[aK]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[rK]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[hK]),_:1}),l(),uK]),t("td",fK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gK,t("td",mK,[t("a",yK,[l("大小为 K 的不重叠线段的数目"),e(s)])]),xK,t("td",pK,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[bK]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jK]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[kK]),_:1})]),t("td",MK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HK,t("td",IK,[t("a",wK,[l("无矛盾的最佳球队"),e(s)])]),vK,t("td",qK,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[zK]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[CK]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[OK]),_:1})]),t("td",LK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EK,t("td",PK,[t("a",KK,[l("统计只差一个字符的子串数目"),e(s)])]),VK,t("td",NK,[e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[DK]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[BK]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[YK]),_:1}),l(),AK]),t("td",JK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[RK,t("td",SK,[t("a",UK,[l("通过给定词典构造目标字符串的方案数"),e(s)])]),WK,t("td",XK,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[FK]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[GK]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[TK]),_:1})]),t("td",QK,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ZK,t("td",$K,[t("a",tV,[l("统计字典序元音字符串的数目"),e(s)])]),eV,t("td",lV,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[oV]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[nV]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[sV]),_:1})]),t("td",dV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_V,t("td",iV,[t("a",cV,[l("第 K 条最小指令"),e(s)])]),aV,t("td",rV,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[hV]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[uV]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[fV]),_:1}),l(),gV]),t("td",mV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yV,t("td",xV,[t("a",pV,[l("使字符串平衡的最少删除次数"),e(s)])]),bV,t("td",jV,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[kV]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[MV]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[HV]),_:1})]),t("td",IV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wV,t("td",vV,[t("a",qV,[l("到家的最少跳跃次数"),e(s)])]),zV,t("td",CV,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[OV]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[LV]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[EV]),_:1})]),t("td",PV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[KV,t("td",VV,[t("a",NV,[l("分配重复整数"),e(s)])]),DV,t("td",BV,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[YV]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[AV]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[JV]),_:1}),l(),RV]),t("td",SV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[UV,t("td",WV,[t("a",XV,[l("最大化网格幸福感"),e(s)])]),FV,t("td",GV,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[TV]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[QV]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ZV]),_:1}),l(),$V]),t("td",tN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eN,t("td",lN,[t("a",oN,[l("最大重复子字符串"),e(s)])]),nN,t("td",sN,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[dN]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[_N]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[iN]),_:1})]),t("td",cN,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[aN,t("td",rN,[t("a",hN,[l("得到山形数组的最少删除次数"),e(s)])]),uN,t("td",fN,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[gN]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[mN]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[yN]),_:1}),l(),xN]),t("td",pN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bN,t("td",jN,[t("a",kN,[l("最小不兼容性"),e(s)])]),MN,t("td",HN,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[IN]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[wN]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[vN]),_:1}),l(),qN]),t("td",zN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[CN,t("td",ON,[t("a",LN,[l("最长回文子序列 II"),e(s)])]),EN,t("td",PN,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[KN]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[VN]),_:1})]),t("td",NN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DN,t("td",BN,[t("a",YN,[l("从仓库到码头运输箱子"),e(s)])]),AN,t("td",JN,[e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[RN]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[SN]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[UN]),_:1}),l(),WN]),t("td",XN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[FN,t("td",GN,[t("a",TN,[l("石子游戏 VII"),e(s)])]),QN,t("td",ZN,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[$N]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[tD]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[eD]),_:1}),l(),lD]),t("td",oD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nD,t("td",sD,[t("a",dD,[l("堆叠长方体的最大高度"),e(s)])]),_D,t("td",iD,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[cD]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[aD]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[rD]),_:1})]),t("td",hD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uD,t("td",fD,[t("a",gD,[l("计算分配糖果的不同方式"),e(s)])]),mD,t("td",yD,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xD]),_:1})]),t("td",pD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bD,t("td",jD,[t("a",kD,[l("跳跃游戏 VI"),e(s)])]),MD,t("td",HD,[e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[ID]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[wD]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[vD]),_:1}),l(),qD]),t("td",zD,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CD,t("td",OD,[t("a",LD,[l("数组中特殊等间距元素的和"),e(s)])]),ED,t("td",PD,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[KD]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[VD]),_:1})]),t("td",ND,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[DD,t("td",BD,[t("a",YD,[l("完成所有工作的最短时间"),e(s)])]),AD,t("td",JD,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[RD]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[SD]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[UD]),_:1}),l(),WD]),t("td",XD,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[FD,t("td",GD,[t("a",TD,[l("猫和老鼠 II"),e(s)])]),QD,t("td",ZD,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[$D]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[tB]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[eB]),_:1}),l(),lB]),t("td",oB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nB,t("td",sB,[t("a",dB,[l("生成乘积数组的方案数"),e(s)])]),_B,t("td",iB,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[cB]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[aB]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[rB]),_:1}),l(),hB]),t("td",uB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fB,t("td",gB,[t("a",mB,[l("分割回文串 IV"),e(s)])]),yB,t("td",xB,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[pB]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[bB]),_:1})]),t("td",jB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kB,t("td",MB,[t("a",HB,[l("经过一次操作后的最大子数组和"),e(s)])]),IB,t("td",wB,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vB]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[qB]),_:1})]),t("td",zB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[CB,t("td",OB,[t("a",LB,[l("任意子数组和的绝对值的最大值"),e(s)])]),EB,t("td",PB,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[KB]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[VB]),_:1})]),t("td",NB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DB,t("td",BB,[t("a",YB,[l("最多可以参加的会议数目 II"),e(s)])]),AB,t("td",JB,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[RB]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[SB]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[UB]),_:1}),l(),WB]),t("td",XB,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[FB,t("td",GB,[t("a",TB,[l("最接近目标值的子序列和"),e(s)])]),QB,t("td",ZB,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[$B]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[tY]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[eY]),_:1}),l(),lY]),t("td",oY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nY,t("td",sY,[t("a",dY,[l("执行乘法运算的最大分数"),e(s)])]),_Y,t("td",iY,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[cY]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[aY]),_:1})]),t("td",rY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hY,t("td",uY,[t("a",fY,[l("由子序列构造的最长回文串的长度"),e(s)])]),gY,t("td",mY,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[yY]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xY]),_:1})]),t("td",pY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bY,t("td",jY,[t("a",kY,[l("最接近目标价格的甜点成本"),e(s)])]),MY,t("td",HY,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[IY]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[wY]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[vY]),_:1})]),t("td",qY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zY,t("td",CY,[t("a",OY,[l("从第一个节点出发到最后一个节点的受限路径数"),e(s)])]),LY,t("td",EY,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[PY]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[KY]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[VY]),_:1}),l(),NY]),t("td",DY,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[BY,t("td",YY,[t("a",AY,[l("使所有区间的异或结果为零"),e(s)])]),JY,t("td",RY,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[SY]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[UY]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[WY]),_:1})]),t("td",XY,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[FY,t("td",GY,[t("a",TY,[l("N 次操作后的最大分数和"),e(s)])]),QY,t("td",ZY,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[$Y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[tA]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[eA]),_:1}),l(),lA]),t("td",oA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nA,t("td",sA,[t("a",dA,[l("得到新鲜甜甜圈的最多组数"),e(s)])]),_A,t("td",iA,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[cA]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[aA]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[rA]),_:1}),l(),hA]),t("td",uA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fA,t("td",gA,[t("a",mA,[l("最少侧跳次数"),e(s)])]),yA,t("td",xA,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[pA]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[bA]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jA]),_:1})]),t("td",kA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MA,t("td",HA,[t("a",IA,[l("有向图中最大颜色值"),e(s)])]),wA,t("td",vA,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[qA]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[zA]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[CA]),_:1}),l(),OA]),t("td",LA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[EA,t("td",PA,[t("a",KA,[l("恰有 K 根木棍可以看到的排列数目"),e(s)])]),VA,t("td",NA,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[DA]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[BA]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[YA]),_:1})]),t("td",AA,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[JA,t("td",RA,[t("a",SA,[l("跳跃游戏 VII"),e(s)])]),UA,t("td",WA,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[XA]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[FA]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[GA]),_:1}),l(),TA]),t("td",QA,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZA,t("td",$A,[t("a",tJ,[l("石子游戏 VIII"),e(s)])]),eJ,t("td",lJ,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[oJ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[nJ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[sJ]),_:1}),l(),dJ]),t("td",_J,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[iJ,t("td",cJ,[t("a",aJ,[l("两个数组最小的异或值之和"),e(s)])]),rJ,t("td",hJ,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[uJ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[fJ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[gJ]),_:1}),l(),mJ]),t("td",yJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xJ,t("td",pJ,[t("a",bJ,[l("准时抵达会议现场的最小跳过休息次数"),e(s)])]),jJ,t("td",kJ,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[MJ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[HJ]),_:1})]),t("td",IJ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wJ,t("td",vJ,[t("a",qJ,[l("鸡蛋掉落-两枚鸡蛋"),e(s)])]),zJ,t("td",CJ,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[OJ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[LJ]),_:1})]),t("td",EJ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PJ,t("td",KJ,[t("a",VJ,[l("使二进制字符串字符交替的最少反转次数"),e(s)])]),NJ,t("td",DJ,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[BJ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[YJ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[AJ]),_:1}),l(),JJ]),t("td",RJ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SJ,t("td",UJ,[t("a",WJ,[l("反转表达式值的最少操作次数"),e(s)])]),XJ,t("td",FJ,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[GJ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[TJ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[QJ]),_:1}),l(),ZJ]),t("td",$J,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tR,t("td",eR,[t("a",lR,[l("最佳运动员的比拼回合"),e(s)])]),oR,t("td",nR,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[sR]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[dR]),_:1})]),t("td",_R,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[iR,t("td",cR,[t("a",aR,[l("Nim 游戏 II"),e(s)])]),rR,t("td",hR,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[uR]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[fR]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[gR]),_:1}),l(),mR]),t("td",yR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xR,t("td",pR,[t("a",bR,[l("最大子序列交替和"),e(s)])]),jR,t("td",kR,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[MR]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[HR]),_:1})]),t("td",IR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wR,t("td",vR,[t("a",qR,[l("统计为蚁群构筑房间的不同顺序"),e(s)])]),zR,t("td",CR,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[OR]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[LR]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[ER]),_:1}),l(),PR]),t("td",KR,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[VR,t("td",NR,[t("a",DR,[l("规定时间内到达终点的最小花费"),e(s)])]),BR,t("td",YR,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[AR]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[JR]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[RR]),_:1})]),t("td",SR,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[UR,t("td",WR,[t("a",XR,[l("用三种不同颜色为网格涂色"),e(s)])]),FR,t("td",GR,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[TR]),_:1})]),t("td",QR,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ZR,t("td",$R,[t("a",tS,[l("扣分后的最大得分"),e(s)])]),eS,t("td",lS,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[oS]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[nS]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[sS]),_:1})]),t("td",dS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_S,t("td",iS,[t("a",cS,[l("最大兼容性评分和"),e(s)])]),aS,t("td",rS,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[hS]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[uS]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[fS]),_:1}),l(),gS]),t("td",mS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yS,t("td",xS,[t("a",pS,[l("统计特殊子序列的数目"),e(s)])]),bS,t("td",jS,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[kS]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[MS]),_:1})]),t("td",HS,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[IS,t("td",wS,[t("a",vS,[l("K 次调整数组大小浪费的最小总空间"),e(s)])]),qS,t("td",zS,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[CS]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[OS]),_:1})]),t("td",LS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ES,t("td",PS,[t("a",KS,[l("到达目的地的方案数"),e(s)])]),VS,t("td",NS,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[DS]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[BS]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[YS]),_:1}),l(),AS]),t("td",JS,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[RS,t("td",SS,[t("a",US,[l("划分数字的方案数"),e(s)])]),WS,t("td",XS,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[FS]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[GS]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[TS]),_:1})]),t("td",QS,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ZS,t("td",$S,[t("a",tU,[l("最小化目标值与所选元素的差"),e(s)])]),eU,t("td",lU,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[oU]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[nU]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[sU]),_:1})]),t("td",dU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_U,t("td",iU,[t("a",cU,[l("完成任务的最少工作时间段"),e(s)])]),aU,t("td",rU,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[hU]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[uU]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[fU]),_:1}),l(),gU]),t("td",mU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yU,t("td",xU,[t("a",pU,[l("不同的好子序列数目"),e(s)])]),bU,t("td",jU,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[kU]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[MU]),_:1})]),t("td",HU,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[IU,t("td",wU,[t("a",vU,[l("好子集的数目"),e(s)])]),qU,t("td",zU,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[CU]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[OU]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[LU]),_:1}),l(),EU]),t("td",PU,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[KU,t("td",VU,[t("a",NU,[l("访问完所有房间的第一天"),e(s)])]),DU,t("td",BU,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[YU]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[AU]),_:1})]),t("td",JU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[RU,t("td",SU,[t("a",UU,[l("两个回文子序列长度的最大乘积"),e(s)])]),WU,t("td",XU,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[FU]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[GU]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[TU]),_:1}),l(),QU]),t("td",ZU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$U,t("td",tW,[t("a",eW,[l("每棵子树内缺失的最小基因值"),e(s)])]),lW,t("td",oW,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[nW]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[sW]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[dW]),_:1}),l(),_W]),t("td",iW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cW,t("td",aW,[t("a",rW,[l("斐波那契树的移除子树游戏"),e(s)])]),hW,t("td",uW,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fW]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[gW]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[mW]),_:1}),l(),yW]),t("td",xW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pW,t("td",bW,[t("a",jW,[l("出租车的最大盈利"),e(s)])]),kW,t("td",MW,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[HW]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[IW]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[wW]),_:1}),l(),vW]),t("td",qW,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zW,t("td",CW,[t("a",OW,[l("解出数学表达式的学生分数"),e(s)])]),LW,t("td",EW,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[PW]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[KW]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[VW]),_:1}),l(),NW]),t("td",DW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[BW,t("td",YW,[t("a",AW,[l("将数组分成两个数组并最小化数组和的差"),e(s)])]),JW,t("td",RW,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[SW]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[UW]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[WW]),_:1}),l(),XW]),t("td",FW,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[GW,t("td",TW,[t("a",QW,[l("最大交替子数组和"),e(s)])]),ZW,t("td",$W,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[tX]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[eX]),_:1})]),t("td",lX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oX,t("td",nX,[t("a",sX,[l("并行课程 III"),e(s)])]),dX,t("td",_X,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[iX]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[cX]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[aX]),_:1}),l(),rX]),t("td",hX,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uX,t("td",fX,[t("a",gX,[l("将句子分隔成行的最低成本"),e(s)])]),mX,t("td",yX,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[xX]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[pX]),_:1})]),t("td",bX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jX,t("td",kX,[t("a",MX,[l("两个最好的不重叠活动"),e(s)])]),HX,t("td",IX,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[wX]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[vX]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[qX]),_:1}),l(),zX]),t("td",CX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[OX,t("td",LX,[t("a",EX,[l("同源字符串检测"),e(s)])]),PX,t("td",KX,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[VX]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[NX]),_:1})]),t("td",DX,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[BX,t("td",YX,[t("a",AX,[l("所有子字符串中的元音"),e(s)])]),JX,t("td",RX,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[SX]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[UX]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[WX]),_:1}),l(),XX]),t("td",FX,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GX,t("td",TX,[t("a",QX,[l("喂食仓鼠的最小食物桶数"),e(s)])]),ZX,t("td",$X,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[tF]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[eF]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[lF]),_:1})]),t("td",oF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nF,t("td",sF,[t("a",dF,[l("统计农场中肥沃金字塔的数目"),e(s)])]),_F,t("td",iF,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[cF]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[aF]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[rF]),_:1})]),t("td",hF,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uF,t("td",fF,[t("a",gF,[l("适合野炊的日子"),e(s)])]),mF,t("td",yF,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[xF]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[pF]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[bF]),_:1})]),t("td",jF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kF,t("td",MF,[t("a",HF,[l("股票平滑下跌阶段的数目"),e(s)])]),IF,t("td",wF,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vF]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[qF]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[zF]),_:1})]),t("td",CF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[OF,t("td",LF,[t("a",EF,[l("解决智力问题"),e(s)])]),PF,t("td",KF,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[VF]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[NF]),_:1})]),t("td",DF,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[BF,t("td",YF,[t("a",AF,[l("在两个数组的区间中选取数字"),e(s)])]),JF,t("td",RF,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[SF]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[UF]),_:1})]),t("td",WF,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[XF,t("td",FF,[t("a",GF,[l("分隔长廊的方案数"),e(s)])]),TF,t("td",QF,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[ZF]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[$F]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[tG]),_:1})]),t("td",eG,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lG,t("td",oG,[t("a",nG,[l("穿过所有点的所需最少直线数量"),e(s)])]),sG,t("td",dG,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[_G]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[iG]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[cG]),_:1}),l(),aG]),t("td",rG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hG,t("td",uG,[t("a",fG,[l("删除元素后和的最小差值"),e(s)])]),gG,t("td",mG,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[yG]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xG]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[pG]),_:1})]),t("td",bG,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jG,t("td",kG,[t("a",MG,[l("移除所有载有违禁货物车厢所需的最少时间"),e(s)])]),HG,t("td",IG,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[wG]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[vG]),_:1})]),t("td",qG,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zG,t("td",CG,[t("a",OG,[l("数组的最大与和"),e(s)])]),LG,t("td",EG,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[PG]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[KG]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[VG]),_:1}),l(),NG]),t("td",DG,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[BG,t("td",YG,[t("a",AG,[l("建造坚实的砖墙的方法数"),e(s)])]),JG,t("td",RG,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[SG]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[UG]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[WG]),_:1}),l(),XG]),t("td",FG,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GG,t("td",TG,[t("a",QG,[l("完成比赛的最少时间"),e(s)])]),ZG,t("td",$G,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[tT]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[eT]),_:1})]),t("td",lT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oT,t("td",nT,[t("a",sT,[l("建造纸牌屋的方法数"),e(s)])]),dT,t("td",_T,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[iT]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[cT]),_:1})]),t("td",aT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rT,t("td",hT,[t("a",uT,[l("用地毯覆盖后的最少白色砖块"),e(s)])]),fT,t("td",gT,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[mT]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[yT]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[xT]),_:1})]),t("td",pT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bT,t("td",jT,[t("a",kT,[l("从栈中取出 K 个硬币的最大面值和"),e(s)])]),MT,t("td",HT,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[IT]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[wT]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[vT]),_:1})]),t("td",qT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zT,t("td",CT,[t("a",OT,[l("选择建筑的方案数"),e(s)])]),LT,t("td",ET,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[PT]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[KT]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[VT]),_:1})]),t("td",NT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DT,t("td",BT,[t("a",YT,[l("K 条高速公路的最大旅行费用"),e(s)])]),AT,t("td",JT,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[RT]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ST]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[UT]),_:1}),l(),WT]),t("td",XT,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[FT,t("td",GT,[t("a",TT,[l("字符串的总引力"),e(s)])]),t("td",QT,[e(n,{to:"/leetcode-js/problem/2262.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ZT,[e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[$T]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[tQ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[eQ]),_:1})]),t("td",lQ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oQ,t("td",nQ,[t("a",sQ,[l("数组变为有序的最小操作次数"),e(s)])]),dQ,t("td",_Q,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[iQ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[cQ]),_:1})]),t("td",aQ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rQ,t("td",hQ,[t("a",uQ,[l("统计打字方案数"),e(s)])]),fQ,t("td",gQ,[e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[mQ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[yQ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[xQ]),_:1}),l(),pQ]),t("td",bQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jQ,t("td",kQ,[t("a",MQ,[l("检查是否有合法括号字符串路径"),e(s)])]),HQ,t("td",IQ,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[wQ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[vQ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[qQ]),_:1})]),t("td",zQ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[CQ,t("td",OQ,[t("a",LQ,[l("最大波动的子字符串"),e(s)])]),EQ,t("td",PQ,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[KQ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[VQ]),_:1})]),t("td",NQ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[DQ,t("td",BQ,[t("a",YQ,[l("最大股票收益"),e(s)])]),AQ,t("td",JQ,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[RQ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[SQ]),_:1})]),t("td",UQ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[WQ,t("td",XQ,[t("a",FQ,[l("跳跃游戏 VIII"),e(s)])]),GQ,t("td",TQ,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[QQ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ZQ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[$Q]),_:1}),l(),tZ]),t("td",eZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lZ,t("td",oZ,[t("a",nZ,[l("网格中的最小路径代价"),e(s)])]),sZ,t("td",dZ,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[_Z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[iZ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[cZ]),_:1})]),t("td",aZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rZ,t("td",hZ,[t("a",uZ,[l("公平分发饼干"),e(s)])]),fZ,t("td",gZ,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[mZ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[yZ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xZ]),_:1}),l(),pZ]),t("td",bZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jZ,t("td",kZ,[t("a",MZ,[l("个位数字为 K 的整数之和"),e(s)])]),HZ,t("td",IZ,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[wZ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[vZ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[qZ]),_:1}),l(),zZ]),t("td",CZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[OZ,t("td",LZ,[t("a",EZ,[l("小于等于 K 的最长二进制子序列"),e(s)])]),PZ,t("td",KZ,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[VZ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[NZ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[DZ]),_:1}),l(),BZ]),t("td",YZ,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AZ,t("td",JZ,[t("a",RZ,[l("卖木头块"),e(s)])]),SZ,t("td",UZ,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[WZ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[XZ]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[FZ]),_:1})]),t("td",GZ,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[TZ,t("td",QZ,[t("a",ZZ,[l("二叉树中得到结果所需的最少翻转次数"),e(s)])]),$Z,t("td",t$,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[e$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[l$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[o$]),_:1}),l(),n$]),t("td",s$,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d$,t("td",_$,[t("a",i$,[l("不同骰子序列的数目"),e(s)])]),c$,t("td",a$,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[r$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[h$]),_:1})]),t("td",u$,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f$,t("td",g$,[t("a",m$,[l("统计放置房子的方式数"),e(s)])]),y$,t("td",x$,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[p$]),_:1})]),t("td",b$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j$,t("td",k$,[t("a",M$,[l("拼接数组的最大分数"),e(s)])]),H$,t("td",I$,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[w$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[v$]),_:1})]),t("td",q$,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z$,t("td",C$,[t("a",O$,[l("知道秘密的人数"),e(s)])]),L$,t("td",E$,[e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[P$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[K$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[V$]),_:1})]),t("td",N$,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D$,t("td",B$,[t("a",Y$,[l("网格图中递增路径的数目"),e(s)])]),A$,t("td",J$,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[R$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[S$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[U$]),_:1}),l(),W$]),t("td",X$,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[F$,t("td",G$,[t("a",T$,[l("统计理想数组的数目"),e(s)])]),Q$,t("td",Z$,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[$$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ttt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[ett]),_:1}),l(),ltt]),t("td",ott,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ntt,t("td",stt,[t("a",dtt,[l("你能拿走的最大图书数量"),e(s)])]),_tt,t("td",itt,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ctt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[att]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[rtt]),_:1}),l(),htt]),t("td",utt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ftt,t("td",gtt,[t("a",mtt,[l("乘坐火车路线的最少费用"),e(s)])]),ytt,t("td",xtt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ptt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[btt]),_:1})]),t("td",jtt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ktt,t("td",Mtt,[t("a",Htt,[l("检查数组是否存在有效划分"),e(s)])]),Itt,t("td",wtt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vtt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[qtt]),_:1})]),t("td",ztt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ctt,t("td",Ott,[t("a",Ltt,[l("最长理想子序列"),e(s)])]),Ett,t("td",Ptt,[e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Ktt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Vtt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ntt]),_:1})]),t("td",Dtt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Btt,t("td",Ytt,[t("a",Att,[l("统计特殊整数"),e(s)])]),Jtt,t("td",Rtt,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Stt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Utt]),_:1})]),t("td",Wtt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xtt,t("td",Ftt,[t("a",Gtt,[l("选择边来最大化树的得分"),e(s)])]),Ttt,t("td",Qtt,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ztt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[$tt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[tet]),_:1})]),t("td",eet,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oet,t("td",net,[t("a",set,[l("二进制字符串重新安排顺序需要的时间"),e(s)])]),det,t("td",_et,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[iet]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[cet]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[aet]),_:1})]),t("td",ret,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[het,t("td",uet,[t("a",fet,[l("严格递增的子数组个数"),e(s)])]),get,t("td",met,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[yet]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[xet]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[pet]),_:1})]),t("td",bet,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jet,t("td",ket,[t("a",Met,[l("恰好移动 k 步到达某一位置的方法数目"),e(s)])]),Het,t("td",Iet,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[wet]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[vet]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[qet]),_:1})]),t("td",zet,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cet,t("td",Oet,[t("a",Let,[l("杀死所有怪物的最短时间"),e(s)])]),Eet,t("td",Pet,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Ket]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Vet]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Net]),_:1}),l(),Det]),t("td",Bet,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yet,t("td",Aet,[t("a",Jet,[l("最长递增子序列 II"),e(s)])]),Ret,t("td",Set,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Uet]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Wet]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[Xet]),_:1}),l(),Fet]),t("td",Get,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Tet,t("td",Qet,[t("a",Zet,[l("找到所有好下标"),e(s)])]),$et,t("td",tlt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[elt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[llt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[olt]),_:1})]),t("td",nlt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[slt,t("td",dlt,[t("a",_lt,[l("对字母串可执行的最大删除数"),e(s)])]),ilt,t("td",clt,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[alt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[rlt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[hlt]),_:1}),l(),ult]),t("td",flt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[glt,t("td",mlt,[t("a",ylt,[l("最大限度地提高购买水果的口味"),e(s)])]),xlt,t("td",plt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[blt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jlt]),_:1})]),t("td",klt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mlt,t("td",Hlt,[t("a",Ilt,[l("矩阵中和能被 K 整除的路径"),e(s)])]),wlt,t("td",vlt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[qlt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[zlt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[Clt]),_:1})]),t("td",Olt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Llt,t("td",Elt,[t("a",Plt,[l("使子数组最大公约数大于一的最小分割数"),e(s)])]),Klt,t("td",Vlt,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Nlt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Dlt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Blt]),_:1}),l(),Ylt]),t("td",Alt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jlt,t("td",Rlt,[t("a",Slt,[l("最小化数组中的最大值"),e(s)])]),Ult,t("td",Wlt,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Xlt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Flt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[Glt]),_:1}),l(),Tlt]),t("td",Qlt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zlt,t("td",$lt,[t("a",tot,[l("最小移动总距离"),e(s)])]),eot,t("td",lot,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[oot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[not]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[sot]),_:1})]),t("td",dot,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_ot,t("td",iot,[t("a",cot,[l("有效分割中的最少子数组数目"),e(s)])]),aot,t("td",rot,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[hot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[uot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[fot]),_:1}),l(),got]),t("td",mot,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yot,t("td",xot,[t("a",pot,[l("统计构造好字符串的方案数"),e(s)])]),bot,t("td",jot,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[kot]),_:1})]),t("td",Mot,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hot,t("td",Iot,[t("a",wot,[l("不重叠回文子字符串的最大数目"),e(s)])]),vot,t("td",qot,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[zot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[Cot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Oot]),_:1}),l(),Lot]),t("td",Eot,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pot,t("td",Kot,[t("a",Vot,[l("完美分割的方案数"),e(s)])]),Not,t("td",Dot,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Bot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Yot]),_:1})]),t("td",Aot,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jot,t("td",Rot,[t("a",Sot,[l("统计回文子序列数目"),e(s)])]),Uot,t("td",Wot,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Xot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Fot]),_:1})]),t("td",Got,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Tot,t("td",Qot,[t("a",Zot,[l("乘积为偶数的子数组数"),e(s)])]),$ot,t("td",tnt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ent]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[lnt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ont]),_:1})]),t("td",nnt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[snt,t("td",dnt,[t("a",_nt,[l("数组中最长的方波"),e(s)])]),int,t("td",cnt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ant]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[rnt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[hnt]),_:1}),l(),unt]),t("td",fnt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gnt,t("td",mnt,[t("a",ynt,[l("检查是否有路径经过相同数量的 0 和 1"),e(s)])]),xnt,t("td",pnt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[bnt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jnt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[knt]),_:1})]),t("td",Mnt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hnt,t("td",Int,[t("a",wnt,[l("好分区的数目"),e(s)])]),vnt,t("td",qnt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[znt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Cnt]),_:1})]),t("td",Ont,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lnt,t("td",Ent,[t("a",Pnt,[l("将字符串分割成值不超过 K 的子字符串"),e(s)])]),Knt,t("td",Vnt,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Nnt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Dnt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Bnt]),_:1})]),t("td",Ynt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ant,t("td",Jnt,[t("a",Rnt,[l("好二进制字符串的数量"),e(s)])]),Snt,t("td",Unt,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Wnt]),_:1})]),t("td",Xnt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fnt,t("td",Gnt,[t("a",Tnt,[l("最大价值和与最小价值和的差值"),e(s)])]),Qnt,t("td",Znt,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$nt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[tst]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[est]),_:1}),l(),lst]),t("td",ost,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nst,t("td",sst,[t("a",dst,[l("拆分数组的最小代价"),e(s)])]),_st,t("td",ist,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[cst]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[ast]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[rst]),_:1}),l(),hst]),t("td",ust,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fst,t("td",gst,[t("a",mst,[l("统计上升四元组"),e(s)])]),yst,t("td",xst,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[pst]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[bst]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jst]),_:1}),l(),kst]),t("td",Mst,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hst,t("td",Ist,[t("a",wst,[l("二进制矩阵中翻转最多一次使路径不连通"),e(s)])]),vst,t("td",qst,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[zst]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Cst]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ost]),_:1}),l(),Lst]),t("td",Est,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pst,t("td",Kst,[t("a",Vst,[l("将整数减少到零需要的最少操作数"),e(s)])]),Nst,t("td",Dst,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Bst]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Yst]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ast]),_:1})]),t("td",Jst,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rst,t("td",Sst,[t("a",Ust,[l("无平方子集计数"),e(s)])]),Wst,t("td",Xst,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Fst]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Gst]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Tst]),_:1}),l(),Qst]),t("td",Zst,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$st,t("td",tdt,[t("a",edt,[l("找出对应 LCP 矩阵的字符串"),e(s)])]),ldt,t("td",odt,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[ndt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[sdt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ddt]),_:1}),l(),_dt]),t("td",idt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cdt,t("td",adt,[t("a",rdt,[l("统计可能的树根数目"),e(s)])]),hdt,t("td",udt,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fdt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[gdt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[mdt]),_:1}),l(),ydt]),t("td",xdt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pdt,t("td",bdt,[t("a",jdt,[l("获得分数的方法数"),e(s)])]),kdt,t("td",Mdt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Hdt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Idt]),_:1})]),t("td",wdt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vdt,t("td",qdt,[t("a",zdt,[l("美丽子集的数目"),e(s)])]),Cdt,t("td",Odt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ldt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Edt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Pdt]),_:1}),l(),Kdt]),t("td",Vdt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ndt,t("td",Ddt,[t("a",Bdt,[l("找到最大开销的子字符串"),e(s)])]),Ydt,t("td",Adt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Jdt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Rdt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Sdt]),_:1}),l(),Udt]),t("td",Wdt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xdt,t("td",Fdt,[t("a",Gdt,[l("网格图中最少访问的格子数"),e(s)])]),Tdt,t("td",Qdt,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Zdt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$dt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[t_t]),_:1}),l(),e_t]),t("td",l_t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o_t,t("td",n_t,[t("a",s_t,[l("统计 K-Free 子集的总数"),e(s)])]),d_t,t("td",__t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[i_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[c_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[a_t]),_:1}),l(),r_t]),t("td",h_t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u_t,t("td",f_t,[t("a",g_t,[l("构造有效字符串的最少插入数"),e(s)])]),m_t,t("td",y_t,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[x_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[p_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[b_t]),_:1}),l(),j_t]),t("td",k_t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M_t,t("td",H_t,[t("a",I_t,[l("最小化旅行的价格总和"),e(s)])]),w_t,t("td",v_t,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[q_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[z_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[C_t]),_:1}),l(),O_t]),t("td",L_t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[E_t,t("td",P_t,[t("a",K_t,[l("使二叉树所有路径值相等的最小代价"),e(s)])]),V_t,t("td",N_t,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[D_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[B_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Y_t]),_:1}),l(),A_t]),t("td",J_t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R_t,t("td",S_t,[t("a",U_t,[l("英雄的力量"),e(s)])]),W_t,t("td",X_t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[F_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[G_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[T_t]),_:1}),l(),Q_t]),t("td",Z_t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$_t,t("td",tit,[t("a",eit,[l("矩阵中移动的最大次数"),e(s)])]),lit,t("td",oit,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[nit]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[sit]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[dit]),_:1})]),t("td",_it,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iit,t("td",cit,[t("a",ait,[l("字符串中的额外字符"),e(s)])]),rit,t("td",hit,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[uit]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[fit]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[git]),_:1}),l(),mit]),t("td",yit,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xit,t("td",pit,[t("a",bit,[l("一个小组的最大实力值"),e(s)])]),jit,t("td",kit,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Mit]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Hit]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Iit]),_:1}),l(),wit]),t("td",vit,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qit,t("td",zit,[t("a",Cit,[l("使所有字符相等的最小成本"),e(s)])]),Oit,t("td",Lit,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Eit]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Pit]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Kit]),_:1})]),t("td",Vit,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nit,t("td",Dit,[t("a",Bit,[l("矩阵中严格递增的单元格数"),e(s)])]),Yit,t("td",Ait,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[Jit]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Rit]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Sit]),_:1}),l(),Uit]),t("td",Wit,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xit,t("td",Fit,[t("a",Git,[l("统计整数数目"),e(s)])]),Tit,t("td",Qit,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Zit]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[$it]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[tct]),_:1})]),t("td",ect,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lct,t("td",oct,[t("a",nct,[l("特别的排列"),e(s)])]),sct,t("td",dct,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[_ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ict]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[cct]),_:1}),l(),act]),t("td",rct,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hct,t("td",uct,[t("a",fct,[l("给墙壁刷油漆"),e(s)])]),gct,t("td",mct,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[yct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xct]),_:1})]),t("td",pct,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bct,t("td",jct,[t("a",kct,[l("构造最长的新字符串"),e(s)])]),Mct,t("td",Hct,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Ict]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[wct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[vct]),_:1}),l(),qct]),t("td",zct,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cct,t("td",Oct,[t("a",Lct,[l("字符串连接删减字母"),e(s)])]),Ect,t("td",Pct,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Kct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Vct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Nct]),_:1})]),t("td",Dct,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bct,t("td",Yct,[t("a",Act,[l("将数组划分成若干好子数组的方式"),e(s)])]),Jct,t("td",Rct,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Sct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Uct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Wct]),_:1})]),t("td",Xct,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fct,t("td",Gct,[t("a",Tct,[l("将字符串分割为最少的美丽子字符串"),e(s)])]),Qct,t("td",Zct,[e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[$ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[tat]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[eat]),_:1}),l(),lat]),t("td",oat,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nat,t("td",sat,[t("a",dat,[l("达到末尾下标所需的最大跳跃次数"),e(s)])]),_at,t("td",iat,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[cat]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[aat]),_:1})]),t("td",rat,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hat,t("td",uat,[t("a",fat,[l("构造最长非递减子数组"),e(s)])]),gat,t("td",mat,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[yat]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xat]),_:1})]),t("td",pat,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bat,t("td",jat,[t("a",kat,[l("访问数组中的位置使分数最大"),e(s)])]),Mat,t("td",Hat,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Iat]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[wat]),_:1})]),t("td",vat,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qat,t("td",zat,[t("a",Cat,[l("将一个数字表示成幂的和的方案数"),e(s)])]),Oat,t("td",Lat,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Eat]),_:1})]),t("td",Pat,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kat,t("td",Vat,[t("a",Nat,[l("树中可以形成回文的路径数"),e(s)])]),Dat,t("td",Bat,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Yat]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Aat]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Jat]),_:1}),l(),Rat]),t("td",Sat,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Uat,t("td",Wat,[t("a",Xat,[l("统计范围内的步进数字数目"),e(s)])]),Fat,t("td",Gat,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Tat]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Qat]),_:1})]),t("td",Zat,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$at,t("td",trt,[t("a",ert,[l("使数组和小于等于 x 的最少时间"),e(s)])]),lrt,t("td",ort,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[nrt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[srt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[drt]),_:1})]),t("td",_rt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[irt,t("td",crt,[t("a",art,[l("判断是否能拆分数组"),e(s)])]),rrt,t("td",hrt,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[urt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[frt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[grt]),_:1})]),t("td",mrt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yrt,t("td",xrt,[t("a",prt,[l("将三个组排序"),e(s)])]),brt,t("td",jrt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[krt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[Mrt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Hrt]),_:1})]),t("td",Irt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wrt,t("td",vrt,[t("a",qrt,[l("范围中美丽整数的数目"),e(s)])]),zrt,t("td",Crt,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Ort]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Lrt]),_:1})]),t("td",Ert,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Prt,t("td",Krt,[t("a",Vrt,[l("销售利润最大化"),e(s)])]),Nrt,t("td",Drt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Brt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Yrt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[Art]),_:1}),l(),Jrt]),t("td",Rrt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Srt,t("td",Urt,[t("a",Wrt,[l("在传球游戏中最大化函数值"),e(s)])]),Xrt,t("td",Frt,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Grt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Trt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Qrt]),_:1})]),t("td",Zrt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$rt,t("td",tht,[t("a",eht,[l("将石头分散到网格图的最少移动次数"),e(s)])]),lht,t("td",oht,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[nht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[sht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[dht]),_:1}),l(),_ht]),t("td",iht,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cht,t("td",aht,[t("a",rht,[l("字符串转换"),e(s)])]),hht,t("td",uht,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[fht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[ght]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[mht]),_:1}),l(),yht]),t("td",xht,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pht,t("td",bht,[t("a",jht,[l("可以到达每一个节点的最少边反转次数"),e(s)])]),kht,t("td",Mht,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Hht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Iht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[wht]),_:1}),l(),vht]),t("td",qht,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zht,t("td",Cht,[t("a",Oht,[l("统计树中的合法路径数目"),e(s)])]),Lht,t("td",Eht,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Pht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Kht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Vht]),_:1}),l(),Nht]),t("td",Dht,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bht,t("td",Yht,[t("a",Aht,[l("有向图访问计数"),e(s)])]),Jht,t("td",Rht,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Sht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[Uht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Wht]),_:1})]),t("td",Xht,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fht,t("td",Ght,[t("a",Tht,[l("将相邻元素相乘后得到最小化数组"),e(s)])]),Qht,t("td",Zht,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[$ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[t1t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[e1t]),_:1})]),t("td",l1t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o1t,t("td",n1t,[t("a",s1t,[l("执行操作使两个字符串相等"),e(s)])]),d1t,t("td",_1t,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[i1t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[c1t]),_:1})]),t("td",a1t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r1t,t("td",h1t,[t("a",u1t,[l("最长相邻不相等子序列 I"),e(s)])]),f1t,t("td",g1t,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[m1t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y1t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[x1t]),_:1}),l(),p1t]),t("td",b1t,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[j1t,t("td",k1t,[t("a",M1t,[l("最长相邻不相等子序列 II"),e(s)])]),H1t,t("td",I1t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[w1t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[v1t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[q1t]),_:1})]),t("td",z1t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C1t,t("td",O1t,[t("a",L1t,[l("和带限制的子多重集合的数目"),e(s)])]),E1t,t("td",P1t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[K1t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[V1t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[N1t]),_:1}),l(),D1t]),t("td",B1t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y1t,t("td",A1t,[t("a",J1t,[l("得到 K 个半回文串的最少修改次数"),e(s)])]),R1t,t("td",S1t,[e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[U1t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[W1t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[X1t]),_:1})]),t("td",F1t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[G1t,t("td",T1t,[t("a",Q1t,[l("在网格上移动到目的地的方法数"),e(s)])]),Z1t,t("td",$1t,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[tut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[eut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[lut]),_:1})]),t("td",out,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nut,t("td",sut,[t("a",dut,[l("和为目标值的最长子序列的长度"),e(s)])]),_ut,t("td",iut,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[cut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[aut]),_:1})]),t("td",rut,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hut,t("td",uut,[t("a",fut,[l("子数组不同元素数目的平方和 II"),e(s)])]),gut,t("td",mut,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[yut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[xut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[put]),_:1}),l(),but]),t("td",jut,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kut,t("td",Mut,[t("a",Hut,[l("使数组变美的最小增量运算数"),e(s)])]),Iut,t("td",wut,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[qut]),_:1})]),t("td",zut,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cut,t("td",Out,[t("a",Lut,[l("收集所有金币可获得的最大积分"),e(s)])]),Eut,t("td",Put,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Kut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Vut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Nut]),_:1}),l(),Dut]),t("td",But,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yut,t("td",Aut,[t("a",Jut,[l("在树上执行操作以后得到的最大分数"),e(s)])]),Rut,t("td",Sut,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Uut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Wut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Xut]),_:1})]),t("td",Fut,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gut,t("td",Tut,[t("a",Qut,[l("平衡子序列的最大和"),e(s)])]),Zut,t("td",$ut,[e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[tft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[eft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[lft]),_:1}),l(),oft]),t("td",nft,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sft,t("td",dft,[t("a",_ft,[l("重新排列后包含指定子字符串的字符串数目"),e(s)])]),ift,t("td",cft,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[aft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[rft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[hft]),_:1})]),t("td",uft,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fft,t("td",gft,[t("a",mft,[l("购买水果需要的最少金币数"),e(s)])]),yft,t("td",xft,[e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[pft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[bft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jft]),_:1}),l(),kft]),t("td",Mft,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hft,t("td",Ift,[t("a",wft,[l("找到最大非递减数组的长度"),e(s)])]),vft,t("td",qft,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[zft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[Cft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Oft]),_:1}),l(),Lft]),t("td",Eft,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pft,t("td",Kft,[t("a",Vft,[l("消除相邻近似相等字符"),e(s)])]),Nft,t("td",Dft,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Bft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Yft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Aft]),_:1})]),t("td",Jft,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rft,t("td",Sft,[t("a",Uft,[l("购买水果需要的最少金币数 II"),e(s)])]),Wft,t("td",Xft,[e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[Fft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Gft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Tft]),_:1}),l(),Qft]),t("td",Zft,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$ft,t("td",tgt,[t("a",egt,[l("树中每个节点放置的金币数目"),e(s)])]),lgt,t("td",ogt,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ngt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[sgt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[dgt]),_:1}),l(),_gt]),t("td",igt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cgt,t("td",agt,[t("a",rgt,[l("转换字符串的最小成本 II"),e(s)])]),hgt,t("td",ugt,[e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[fgt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[ggt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[mgt]),_:1}),l(),ygt]),t("td",xgt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pgt,t("td",bgt,[t("a",jgt,[l("最贵的无法购买的商品"),e(s)])]),kgt,t("td",Mgt,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Hgt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Igt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:o(()=>[wgt]),_:1})]),t("td",vgt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qgt,t("td",zgt,[t("a",Cgt,[l("自整除排列的数量"),e(s)])]),Ogt,t("td",Lgt,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Egt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Pgt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Kgt]),_:1}),l(),Vgt]),t("td",Ngt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dgt,t("td",Bgt,[t("a",Ygt,[l("使 X 和 Y 相等的最少操作次数"),e(s)])]),Agt,t("td",Jgt,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Rgt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[Sgt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ugt]),_:1})]),t("td",Wgt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xgt,t("td",Fgt,[t("a",Ggt,[l("统计强大整数的数目"),e(s)])]),Tgt,t("td",Qgt,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Zgt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[$gt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[tmt]),_:1})]),t("td",emt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lmt,t("td",omt,[t("a",nmt,[l("执行操作后的最大分割数量"),e(s)])]),smt,t("td",dmt,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[_mt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[imt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[cmt]),_:1}),l(),amt]),t("td",rmt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hmt,t("td",umt,[t("a",fmt,[l("相同颜色的最大子树"),e(s)])]),gmt,t("td",mmt,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ymt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[xmt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[pmt]),_:1}),l(),bmt]),t("td",jmt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kmt,t("td",Mmt,[t("a",Hmt,[l("价值和小于等于 K 的最大数字"),e(s)])]),Imt,t("td",wmt,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[vmt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[qmt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[zmt]),_:1})]),t("td",Cmt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Omt,t("td",Lmt,[t("a",Emt,[l("可处理的最大删除操作数 I"),e(s)])]),Pmt,t("td",Kmt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Vmt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Nmt]),_:1})]),t("td",Dmt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bmt,t("td",Ymt,[t("a",Amt,[l("统计各位数字都不同的数字个数 II"),e(s)])]),Jmt,t("td",Rmt,[e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Smt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Umt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Wmt]),_:1})]),t("td",Xmt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fmt,t("td",Gmt,[t("a",Tmt,[l("相同分数的最大操作数目 II"),e(s)])]),Qmt,t("td",Zmt,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[$mt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[tyt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[eyt]),_:1})]),t("td",lyt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oyt,t("td",nyt,[t("a",syt,[l("修改数组后最大化数组中的连续元素数目"),e(s)])]),dyt,t("td",_yt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[iyt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[cyt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[ayt]),_:1})]),t("td",ryt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hyt,t("td",uyt,[t("a",fyt,[l("最大节点价值之和"),e(s)])]),gyt,t("td",myt,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[yyt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[xyt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[pyt]),_:1}),l(),byt]),t("td",jyt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kyt,t("td",Myt,[t("a",Hyt,[l("K 个不相交子数组的最大能量值"),e(s)])]),Iyt,t("td",wyt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vyt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[qyt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[zyt]),_:1})]),t("td",Cyt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oyt,t("td",Lyt,[t("a",Eyt,[l("求出所有子序列的能量和"),e(s)])]),Pyt,t("td",Kyt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Vyt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Nyt]),_:1})]),t("td",Dyt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Byt,t("td",Yyt,[t("a",Ayt,[l("求出所有子序列的能量和"),e(s)])]),Jyt,t("td",Ryt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Syt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Uyt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[Wyt]),_:1})]),t("td",Xyt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fyt,t("td",Gyt,[t("a",Tyt,[l("划分数组得到最小的值之和"),e(s)])]),Qyt,t("td",Zyt,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[$yt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[t3t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[e3t]),_:1}),l(),l3t]),t("td",o3t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n3t,t("td",s3t,[t("a",d3t,[l("使矩阵满足条件的最少操作次数"),e(s)])]),_3t,t("td",i3t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[c3t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[a3t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[r3t]),_:1})]),t("td",h3t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u3t,t("td",f3t,[t("a",g3t,[l("找出所有稳定的二进制数组 I"),e(s)])]),m3t,t("td",y3t,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[x3t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[p3t]),_:1})]),t("td",b3t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j3t,t("td",k3t,[t("a",M3t,[l("找出所有稳定的二进制数组 II"),e(s)])]),H3t,t("td",I3t,[e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[w3t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[v3t]),_:1})]),t("td",q3t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z3t,t("td",C3t,[t("a",O3t,[l("通过添加或删除结尾字符来同化字符串"),e(s)])]),L3t,t("td",E3t,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[P3t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[K3t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[V3t]),_:1}),l(),N3t]),t("td",D3t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B3t,t("td",Y3t,[t("a",A3t,[l("分割字符频率相等的最少子字符串"),e(s)])]),J3t,t("td",R3t,[e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[S3t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[U3t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[W3t]),_:1}),l(),X3t]),t("td",F3t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G3t,t("td",T3t,[t("a",Q3t,[l("矩阵中的最大得分"),e(s)])]),Z3t,t("td",$3t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[txt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ext]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[lxt]),_:1})]),t("td",oxt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nxt,t("td",sxt,[t("a",dxt,[l("找出分数最低的排列"),e(s)])]),_xt,t("td",ixt,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[cxt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[axt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[rxt]),_:1}),l(),hxt]),t("td",uxt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fxt,t("td",gxt,[t("a",mxt,[l("到达第 K 级台阶的方案数"),e(s)])]),yxt,t("td",xxt,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[pxt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[bxt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[jxt]),_:1}),l(),kxt]),t("td",Mxt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hxt,t("td",Ixt,[t("a",wxt,[l("不包含相邻元素的子序列的最大和"),e(s)])]),vxt,t("td",qxt,[e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[zxt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Cxt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[Oxt]),_:1}),l(),Lxt]),t("td",Ext,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pxt,t("td",Kxt,[t("a",Vxt,[l("求出最长好子序列 I"),e(s)])]),Nxt,t("td",Dxt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Bxt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Yxt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Axt]),_:1})]),t("td",Jxt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rxt,t("td",Sxt,[t("a",Uxt,[l("求出最长好子序列 II"),e(s)])]),Wxt,t("td",Xxt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Fxt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Gxt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Txt]),_:1})]),t("td",Qxt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zxt,t("td",$xt,[t("a",t4t,[l("执行操作可获得的最大总奖励 I"),e(s)])]),e4t,t("td",l4t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[o4t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[n4t]),_:1})]),t("td",s4t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d4t,t("td",_4t,[t("a",i4t,[l("执行操作可获得的最大总奖励 II"),e(s)])]),c4t,t("td",a4t,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[r4t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[h4t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[u4t]),_:1})]),t("td",f4t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[g4t,t("td",m4t,[t("a",y4t,[l("达到总和的方法数量"),e(s)])]),x4t,t("td",p4t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[b4t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[j4t]),_:1})]),t("td",k4t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M4t,t("td",H4t,[t("a",I4t,[l("施咒的最大总伤害"),e(s)])]),w4t,t("td",v4t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[q4t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[z4t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[C4t]),_:1}),l(),O4t]),t("td",L4t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E4t,t("td",P4t,[t("a",K4t,[l("使二进制数组全部等于 1 的最少操作次数 II"),e(s)])]),V4t,t("td",N4t,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[D4t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[B4t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Y4t]),_:1})]),t("td",A4t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J4t,t("td",R4t,[t("a",S4t,[l("统计逆序对的数目"),e(s)])]),U4t,t("td",W4t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[X4t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[F4t]),_:1})]),t("td",G4t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[T4t,t("td",Q4t,[t("a",Z4t,[l("最大化子数组的总成本"),e(s)])]),$4t,t("td",t2t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[e2t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[l2t]),_:1})]),t("td",o2t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n2t,t("td",s2t,[t("a",d2t,[l("找出有效子序列的最大长度 I"),e(s)])]),_2t,t("td",i2t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[c2t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[a2t]),_:1})]),t("td",r2t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[h2t,t("td",u2t,[t("a",f2t,[l("找出有效子序列的最大长度 II"),e(s)])]),g2t,t("td",m2t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y2t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[x2t]),_:1})]),t("td",p2t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b2t,t("td",j2t,[t("a",k2t,[l("最大数组跳跃得分 I"),e(s)])]),M2t,t("td",H2t,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[I2t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[w2t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[v2t]),_:1}),l(),q2t]),t("td",z2t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C2t,t("td",O2t,[t("a",L2t,[l("最小代价构造字符串"),e(s)])]),E2t,t("td",P2t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[K2t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[V2t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[N2t]),_:1}),l(),D2t]),t("td",B2t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y2t,t("td",A2t,[t("a",J2t,[l("切蛋糕的最小总开销 I"),e(s)])]),R2t,t("td",S2t,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[U2t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[W2t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[X2t]),_:1}),l(),F2t]),t("td",G2t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T2t,t("td",Q2t,[t("a",Z2t,[l("网格图操作后的最大分数"),e(s)])]),$2t,t("td",tpt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ept]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[lpt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[opt]),_:1}),l(),npt]),t("td",spt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dpt,t("td",_pt,[t("a",ipt,[l("使数组等于目标数组所需的最少操作次数"),e(s)])]),cpt,t("td",apt,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[rpt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[hpt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[upt]),_:1}),l(),fpt]),t("td",gpt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[mpt,t("td",ypt,[t("a",xpt,[l("标记所有节点需要的时间"),e(s)])]),ppt,t("td",bpt,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[jpt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[kpt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Mpt]),_:1}),l(),Hpt]),t("td",Ipt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wpt,t("td",vpt,[t("a",qpt,[l("奇数和子序列的数量"),e(s)])]),zpt,t("td",Cpt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Opt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Lpt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ept]),_:1}),l(),Ppt]),t("td",Kpt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vpt,t("td",Npt,[t("a",Dpt,[l("单调数组对的数目 I"),e(s)])]),Bpt,t("td",Ypt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Apt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Jpt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Rpt]),_:1}),l(),Spt]),t("td",Upt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wpt,t("td",Xpt,[t("a",Fpt,[l("单调数组对的数目 II"),e(s)])]),Gpt,t("td",Tpt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Qpt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Zpt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[$pt]),_:1}),l(),t5t]),t("td",e5t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[l5t,t("td",o5t,[t("a",n5t,[l("放三个车的价值之和最大 I"),e(s)])]),s5t,t("td",d5t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[_5t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[i5t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[c5t]),_:1}),l(),a5t]),t("td",r5t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[h5t,t("td",u5t,[t("a",f5t,[l("放三个车的价值之和最大 II"),e(s)])]),g5t,t("td",m5t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y5t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[x5t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[p5t]),_:1}),l(),b5t]),t("td",j5t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[k5t,t("td",M5t,[t("a",H5t,[l("超级饮料的最大强化能量"),e(s)])]),I5t,t("td",w5t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[v5t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[q5t]),_:1})]),t("td",z5t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[C5t,t("td",O5t,[t("a",L5t,[l("找出最大的 N 位 K 回文数"),e(s)])]),E5t,t("td",P5t,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[K5t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[V5t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[N5t]),_:1}),l(),D5t]),t("td",B5t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Y5t,t("td",A5t,[t("a",J5t,[l("构建两个递增数组"),e(s)])]),R5t,t("td",S5t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[U5t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[W5t]),_:1})]),t("td",X5t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[F5t,t("td",G5t,[t("a",T5t,[l("选择矩阵中单元格的最大得分"),e(s)])]),Q5t,t("td",Z5t,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[$5t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[tbt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ebt]),_:1}),l(),lbt]),t("td",obt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nbt,t("td",sbt,[t("a",dbt,[l("查询子数组最大异或值"),e(s)])]),_bt,t("td",ibt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[cbt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[abt]),_:1})]),t("td",rbt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hbt,t("td",ubt,[t("a",fbt,[l("连续子数组的和"),e(s)])]),gbt,t("td",mbt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ybt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[xbt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[pbt]),_:1})]),t("td",bbt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jbt,t("td",kbt,[t("a",Mbt,[l("求出数组中最大序列值"),e(s)])]),Hbt,t("td",Ibt,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[wbt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vbt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[qbt]),_:1})]),t("td",zbt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Cbt,t("td",Obt,[t("a",Lbt,[l("最高乘法得分"),e(s)])]),Ebt,t("td",Pbt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Kbt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Vbt]),_:1})]),t("td",Nbt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dbt,t("td",Bbt,[t("a",Ybt,[l("形成目标字符串需要的最少字符串数 I"),e(s)])]),Abt,t("td",Jbt,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[Rbt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[Sbt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ubt]),_:1}),l(),Wbt]),t("td",Xbt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fbt,t("td",Gbt,[t("a",Tbt,[l("形成目标字符串需要的最少字符串数 II"),e(s)])]),Qbt,t("td",Zbt,[e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[$bt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[t0t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[e0t]),_:1}),l(),l0t]),t("td",o0t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[n0t,t("td",s0t,[t("a",d0t,[l("连续子序列的和"),e(s)])]),_0t,t("td",i0t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[c0t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[a0t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[r0t]),_:1})]),t("td",h0t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[u0t,t("td",f0t,[t("a",g0t,[l("字典序最小的合法序列"),e(s)])]),m0t,t("td",y0t,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[x0t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[p0t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[b0t]),_:1}),l(),j0t]),t("td",k0t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M0t,t("td",H0t,[t("a",I0t,[l("从原字符串里进行删除操作的最多次数"),e(s)])]),w0t,t("td",v0t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[q0t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[z0t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[C0t]),_:1}),l(),O0t]),t("td",L0t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E0t,t("td",P0t,[t("a",K0t,[l("安排活动的方案数"),e(s)])]),V0t,t("td",N0t,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[D0t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[B0t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[Y0t]),_:1})]),t("td",A0t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[J0t,t("td",R0t,[t("a",S0t,[l("统计能获胜的出招序列数"),e(s)])]),U0t,t("td",W0t,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[X0t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[F0t]),_:1})]),t("td",G0t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[T0t,t("td",Q0t,[t("a",Z0t,[l("覆盖"),e(s)])]),$0t,t("td",t8t,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[e8t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[l8t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[o8t]),_:1}),l(),n8t]),t("td",s8t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d8t,t("td",_8t,[t("a",i8t,[l("传递信息"),e(s)])]),c8t,t("td",a8t,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[r8t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[h8t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[u8t]),_:1}),l(),f8t]),t("td",g8t,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[m8t,t("td",y8t,[t("a",x8t,[l("最小跳跃次数"),e(s)])]),p8t,t("td",b8t,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[j8t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[k8t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[M8t]),_:1}),l(),H8t]),t("td",I8t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[w8t,t("td",v8t,[t("a",q8t,[l("二叉树任务调度"),e(s)])]),z8t,t("td",C8t,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[O8t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[L8t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[E8t]),_:1}),l(),P8t]),t("td",K8t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[V8t,t("td",N8t,[t("a",D8t,[l("寻宝"),e(s)])]),B8t,t("td",Y8t,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[A8t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[J8t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[R8t]),_:1}),l(),S8t]),t("td",U8t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[W8t,t("td",X8t,[t("a",F8t,[l("切分数组"),e(s)])]),G8t,t("td",T8t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Q8t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Z8t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[$8t]),_:1}),l(),t6t]),t("td",e6t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[l6t,t("td",o6t,[t("a",n6t,[l("秋叶收藏集"),e(s)])]),s6t,t("td",d6t,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[_6t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[i6t]),_:1})]),t("td",c6t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a6t,t("td",r6t,[t("a",h6t,[l("快速公交"),e(s)])]),u6t,t("td",f6t,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[g6t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[m6t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[y6t]),_:1})]),t("td",x6t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p6t,t("td",b6t,[t("a",j6t,[l("古董键盘"),e(s)])]),k6t,t("td",M6t,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[H6t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[I6t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[w6t]),_:1})]),t("td",v6t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[q6t,t("td",z6t,[t("a",C6t,[l("导航装置"),e(s)])]),O6t,t("td",L6t,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[E6t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[P6t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[K6t]),_:1})]),t("td",V6t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[N6t,t("td",D6t,[t("a",B6t,[l("变换的迷宫"),e(s)])]),Y6t,t("td",A6t,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[J6t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[R6t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[S6t]),_:1}),l(),U6t]),t("td",W6t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[X6t,t("td",F6t,[t("a",G6t,[l("二叉树染色"),e(s)])]),T6t,t("td",Q6t,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Z6t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[$6t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[t7t]),_:1})]),t("td",e7t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l7t,t("td",o7t,[t("a",n7t,[l("最多牌组数"),e(s)])]),s7t,t("td",d7t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[_7t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[i7t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[c7t]),_:1})]),t("td",a7t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[r7t,t("td",h7t,[t("a",u7t,[l("守卫城堡"),e(s)])]),f7t,t("td",g7t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[m7t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[y7t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[x7t]),_:1})]),t("td",p7t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[b7t,t("td",j7t,[t("a",k7t,[l("十字路口的交通"),e(s)])]),M7t,t("td",H7t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[I7t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[w7t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[v7t]),_:1})]),t("td",q7t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[z7t,t("td",C7t,[t("a",O7t,[l("自行车炫技赛场"),e(s)])]),L7t,t("td",E7t,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[P7t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[K7t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[V7t]),_:1}),l(),N7t]),t("td",D7t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B7t,t("td",Y7t,[t("a",A7t,[l("入场安检"),e(s)])]),J7t,t("td",R7t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[S7t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[U7t]),_:1})]),t("td",W7t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[X7t,t("td",F7t,[t("a",G7t,[l("守护太空城"),e(s)])]),T7t,t("td",Q7t,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Z7t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[$7t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[t9t]),_:1}),l(),e9t]),t("td",l9t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o9t,t("td",n9t,[t("a",s9t,[l("打地鼠"),e(s)])]),d9t,t("td",_9t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[i9t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[c9t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[a9t]),_:1}),l(),r9t]),t("td",h9t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[u9t,t("td",f9t,[t("a",g9t,[l("搭桥过河"),e(s)])]),m9t,t("td",y9t,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[x9t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[p9t]),_:1})]),t("td",b9t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[j9t,t("td",k9t,[t("a",M9t,[l("力扣泡泡龙"),e(s)])]),H9t,t("td",I9t,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[w9t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[v9t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[q9t]),_:1})]),t("td",z9t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[C9t,t("td",O9t,[t("a",L9t,[l("弹珠游戏"),e(s)])]),E9t,t("td",P9t,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[K9t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[V9t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[N9t]),_:1}),l(),D9t]),t("td",B9t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y9t,t("td",A9t,[t("a",J9t,[l("二叉树灯饰"),e(s)])]),R9t,t("td",S9t,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[U9t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[W9t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[X9t]),_:1}),l(),F9t]),t("td",G9t,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T9t,t("td",Q9t,[t("a",Z9t,[l("舒适的湿度"),e(s)])]),$9t,t("td",tjt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ejt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ljt]),_:1})]),t("td",ojt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[njt,t("td",sjt,[t("a",djt,[l("Hello LeetCode!"),e(s)])]),_jt,t("td",ijt,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[cjt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ajt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[rjt]),_:1}),l(),hjt]),t("td",ujt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fjt,t("td",gjt,[t("a",mjt,[l("下载插件"),e(s)])]),yjt,t("td",xjt,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[pjt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[bjt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jjt]),_:1})]),t("td",kjt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mjt,t("td",Hjt,[t("a",Ijt,[l("斐波那契数列"),e(s)])]),t("td",wjt,[e(n,{to:"/leetcode-js/problem/jz_offer_10_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vjt,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[qjt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[zjt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Cjt]),_:1})]),t("td",Ojt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ljt,t("td",Ejt,[t("a",Pjt,[l("青蛙跳台阶问题"),e(s)])]),t("td",Kjt,[e(n,{to:"/leetcode-js/problem/jz_offer_10_2.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Vjt,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[Njt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Djt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Bjt]),_:1})]),t("td",Yjt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ajt,t("td",Jjt,[t("a",Rjt,[l("机器人的运动范围"),e(s)])]),t("td",Sjt,[e(n,{to:"/leetcode-js/problem/jz_offer_13_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ujt,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Wjt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Xjt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Fjt]),_:1})]),t("td",Gjt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tjt,t("td",Qjt,[t("a",Zjt,[l("剪绳子"),e(s)])]),t("td",$jt,[e(n,{to:"/leetcode-js/problem/jz_offer_14_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",tkt,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[ekt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[lkt]),_:1})]),t("td",okt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nkt,t("td",skt,[t("a",dkt,[l("剪绳子 II"),e(s)])]),t("td",_kt,[e(n,{to:"/leetcode-js/problem/jz_offer_14_2.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ikt,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[ckt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[akt]),_:1})]),t("td",rkt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hkt,t("td",ukt,[t("a",fkt,[l("正则表达式匹配"),e(s)])]),t("td",gkt,[e(n,{to:"/leetcode-js/problem/jz_offer_19_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",mkt,[e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[ykt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[xkt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[pkt]),_:1})]),t("td",bkt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jkt,t("td",kkt,[t("a",Mkt,[l("连续子数组的最大和"),e(s)])]),t("td",Hkt,[e(n,{to:"/leetcode-js/problem/jz_offer_42_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ikt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[wkt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[vkt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[qkt]),_:1})]),t("td",zkt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ckt,t("td",Okt,[t("a",Lkt,[l("1～n 整数中 1 出现的次数"),e(s)])]),Ekt,t("td",Pkt,[e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[Kkt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Vkt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Nkt]),_:1})]),t("td",Dkt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bkt,t("td",Ykt,[t("a",Akt,[l("把数字翻译成字符串"),e(s)])]),Jkt,t("td",Rkt,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Skt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ukt]),_:1})]),t("td",Wkt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xkt,t("td",Fkt,[t("a",Gkt,[l("礼物的最大价值"),e(s)])]),t("td",Tkt,[e(n,{to:"/leetcode-js/problem/jz_offer_47_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qkt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Zkt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[$kt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[tMt]),_:1})]),t("td",eMt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lMt,t("td",oMt,[t("a",nMt,[l("丑数"),e(s)])]),t("td",sMt,[e(n,{to:"/leetcode-js/problem/jz_offer_49_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",dMt,[e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[_Mt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[iMt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[cMt]),_:1}),l(),aMt]),t("td",rMt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hMt,t("td",uMt,[t("a",fMt,[l("n个骰子的点数"),e(s)])]),t("td",gMt,[e(n,{to:"/leetcode-js/problem/jz_offer_60_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",mMt,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[yMt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xMt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:o(()=>[pMt]),_:1})]),t("td",bMt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jMt,t("td",kMt,[t("a",MMt,[l("股票的最大利润"),e(s)])]),t("td",HMt,[e(n,{to:"/leetcode-js/problem/jz_offer_63_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",IMt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[wMt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[vMt]),_:1})]),t("td",qMt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zMt,t("td",CMt,[t("a",OMt,[l("三角形中最小路径之和"),e(s)])]),LMt,t("td",EMt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[PMt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[KMt]),_:1})]),t("td",VMt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NMt,t("td",DMt,[t("a",BMt,[l("加减的目标值"),e(s)])]),YMt,t("td",AMt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[JMt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[RMt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[SMt]),_:1})]),t("td",UMt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[WMt,t("td",XMt,[t("a",FMt,[l("最少的硬币数目"),e(s)])]),GMt,t("td",TMt,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[QMt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ZMt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[$Mt]),_:1})]),t("td",tHt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eHt,t("td",lHt,[t("a",oHt,[l("排列的数目"),e(s)])]),nHt,t("td",sHt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[dHt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[_Ht]),_:1})]),t("td",iHt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cHt,t("td",aHt,[t("a",rHt,[l("矩阵中的距离"),e(s)])]),hHt,t("td",uHt,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[fHt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[gHt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[mHt]),_:1}),l(),yHt]),t("td",xHt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pHt,t("td",bHt,[t("a",jHt,[l("最长递增路径"),e(s)])]),kHt,t("td",MHt,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[HHt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[IHt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[wHt]),_:1}),l(),vHt]),t("td",qHt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zHt,t("td",CHt,[t("a",OHt,[l("回文子字符串的个数"),e(s)])]),LHt,t("td",EHt,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[PHt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[KHt]),_:1})]),t("td",VHt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NHt,t("td",DHt,[t("a",BHt,[l("前 n 个数字二进制中 1 的个数"),e(s)])]),YHt,t("td",AHt,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[JHt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[RHt]),_:1})]),t("td",SHt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[UHt,t("td",WHt,[t("a",XHt,[l("矩阵中最大的矩形"),e(s)])]),FHt,t("td",GHt,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[THt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[QHt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ZHt]),_:1}),l(),$Ht]),t("td",tIt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eIt,t("td",lIt,[t("a",oIt,[l("节点之和最大的路径"),e(s)])]),nIt,t("td",sIt,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[dIt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[_It]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[iIt]),_:1}),l(),cIt]),t("td",aIt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rIt,t("td",hIt,[t("a",uIt,[l("生成匹配的括号"),e(s)])]),fIt,t("td",gIt,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[mIt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[yIt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[xIt]),_:1})]),t("td",pIt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bIt,t("td",jIt,[t("a",kIt,[l("爬楼梯的最少成本"),e(s)])]),MIt,t("td",HIt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[IIt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[wIt]),_:1})]),t("td",vIt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[qIt,t("td",zIt,[t("a",CIt,[l("房屋偷盗"),e(s)])]),OIt,t("td",LIt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[EIt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[PIt]),_:1})]),t("td",KIt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VIt,t("td",NIt,[t("a",DIt,[l("环形房屋偷盗"),e(s)])]),BIt,t("td",YIt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[AIt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[JIt]),_:1})]),t("td",RIt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[SIt,t("td",UIt,[t("a",WIt,[l("粉刷房子"),e(s)])]),XIt,t("td",FIt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[GIt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[TIt]),_:1})]),t("td",QIt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZIt,t("td",$It,[t("a",twt,[l("翻转字符"),e(s)])]),ewt,t("td",lwt,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[owt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[nwt]),_:1})]),t("td",swt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dwt,t("td",_wt,[t("a",iwt,[l("最长斐波那契数列"),e(s)])]),cwt,t("td",awt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[rwt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[hwt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[uwt]),_:1})]),t("td",fwt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gwt,t("td",mwt,[t("a",ywt,[l("最少回文分割"),e(s)])]),xwt,t("td",pwt,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[bwt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[jwt]),_:1})]),t("td",kwt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mwt,t("td",Hwt,[t("a",Iwt,[l("最长公共子序列"),e(s)])]),wwt,t("td",vwt,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[qwt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[zwt]),_:1})]),t("td",Cwt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Owt,t("td",Lwt,[t("a",Ewt,[l("字符串交织"),e(s)])]),Pwt,t("td",Kwt,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Vwt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Nwt]),_:1})]),t("td",Dwt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bwt,t("td",Ywt,[t("a",Awt,[l("子序列的数目"),e(s)])]),Jwt,t("td",Rwt,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Swt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Uwt]),_:1})]),t("td",Wwt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xwt,t("td",Fwt,[t("a",Gwt,[l("路径的数目"),e(s)])]),Twt,t("td",Qwt,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Zwt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[$wt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[tvt]),_:1})]),t("td",evt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lvt,t("td",ovt,[t("a",nvt,[l("最小路径之和"),e(s)])]),svt,t("td",dvt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[_vt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ivt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[cvt]),_:1})]),t("td",avt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rvt,t("td",hvt,[t("a",uvt,[l("翻转数位"),e(s)])]),fvt,t("td",gvt,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[mvt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[yvt]),_:1})]),t("td",xvt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[pvt,t("td",bvt,[t("a",jvt,[l("三步问题"),e(s)])]),kvt,t("td",Mvt,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[Hvt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Ivt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[wvt]),_:1})]),t("td",vvt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[qvt,t("td",zvt,[t("a",Cvt,[l("迷路的机器人"),e(s)])]),Ovt,t("td",Lvt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Evt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Pvt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[Kvt]),_:1}),l(),Vvt]),t("td",Nvt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dvt,t("td",Bvt,[t("a",Yvt,[l("括号"),e(s)])]),Avt,t("td",Jvt,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Rvt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Svt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[Uvt]),_:1})]),t("td",Wvt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xvt,t("td",Fvt,[t("a",Gvt,[l("硬币"),e(s)])]),Tvt,t("td",Qvt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Zvt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[$vt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[tqt]),_:1})]),t("td",eqt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lqt,t("td",oqt,[t("a",nqt,[l("堆箱子"),e(s)])]),sqt,t("td",dqt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[_qt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[iqt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[cqt]),_:1})]),t("td",aqt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rqt,t("td",hqt,[t("a",uqt,[l("布尔运算"),e(s)])]),fqt,t("td",gqt,[e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[mqt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[yqt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[xqt]),_:1})]),t("td",pqt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bqt,t("td",jqt,[t("a",kqt,[l("连续数列"),e(s)])]),Mqt,t("td",Hqt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Iqt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[wqt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[vqt]),_:1})]),t("td",qqt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zqt,t("td",Cqt,[t("a",Oqt,[l("2出现的次数"),e(s)])]),Lqt,t("td",Eqt,[e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[Pqt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Kqt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Vqt]),_:1})]),t("td",Nqt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dqt,t("td",Bqt,[t("a",Yqt,[l("马戏团人塔"),e(s)])]),Aqt,t("td",Jqt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Rqt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[Sqt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Uqt]),_:1}),l(),Wqt]),t("td",Xqt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fqt,t("td",Gqt,[t("a",Tqt,[l("第 k 个数"),e(s)])]),Qqt,t("td",Zqt,[e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[$qt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[tzt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ezt]),_:1}),l(),lzt]),t("td",ozt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nzt,t("td",szt,[t("a",dzt,[l("恢复空格"),e(s)])]),_zt,t("td",izt,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[czt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[azt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[rzt]),_:1}),l(),hzt]),t("td",uzt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fzt,t("td",gzt,[t("a",mzt,[l("按摩师"),e(s)])]),yzt,t("td",xzt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[pzt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[bzt]),_:1})]),t("td",jzt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[kzt,t("td",Mzt,[t("a",Hzt,[l("直方图的水量"),e(s)])]),Izt,t("td",wzt,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[vzt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[qzt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[zzt]),_:1}),l(),Czt]),t("td",Ozt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Lzt,t("td",Ezt,[t("a",Pzt,[l("最大黑方阵"),e(s)])]),Kzt,t("td",Vzt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Nzt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Dzt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[Bzt]),_:1})]),t("td",Yzt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Azt,t("td",Jzt,[t("a",Rzt,[l("最大子矩阵"),e(s)])]),Szt,t("td",Uzt,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Wzt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Xzt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[Fzt]),_:1}),l(),Gzt]),t("td",Tzt,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])])])}const eCt=i(h,[["render",Qzt],["__file","dynamic-programming.html.vue"]]);export{eCt as default};
