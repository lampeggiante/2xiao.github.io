import{_ as l,r as c,o as i,c as r,a as n,b as s,d as e,w as t,f as u,e as d}from"./app-mvY9N9Pc.js";const k={},h={id:"_739-每日温度",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#_739-每日温度","aria-hidden":"true"},"#",-1),_={href:"https://leetcode.com/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"栈",-1),b=n("code",null,"数组",-1),v=n("code",null,"单调栈",-1),g={href:"https://leetcode.com/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"LeetCode",-1),x=d(`<h2 id="题目" tabindex="-1"><a class="header-anchor" href="#题目" aria-hidden="true">#</a> 题目</h2><p>Given an array of integers <code>temperatures</code> represents the daily temperatures, return <em>an array</em> <code>answer</code> <em>such that</em> <code>answer[i]</code> <em>is the number of days you have to wait after the</em> <code>ith</code> <em>day to get a warmer temperature</em>. If there is no future day for which this is possible, keep <code>answer[i] == 0</code> instead.</p><p><strong>Example 1:</strong></p><blockquote><p>Input: temperatures = [73,74,75,71,69,72,76,73]</p><p>Output: [1,1,4,2,1,1,0,0]</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: temperatures = [30,40,50,60]</p><p>Output: [1,1,1,0]</p></blockquote><p><strong>Example 3:</strong></p><blockquote><p>Input: temperatures = [30,60,90]</p><p>Output: [1,1,0]</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= temperatures.length &lt;= 10^5</code></li><li><code>30 &lt;= temperatures[i] &lt;= 100</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给定一个整数数组 <code>temperatures</code> ，表示每天的温度，返回一个数组 <code>answer</code> ，其中 <code>answer[i]</code> 是指对于第 <code>i</code> 天，下一个更高温度出现在几天后。如果气温在这之后都不会升高，请在该位置用 <code>0</code> 来代替。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2><ul><li>使用单调递增栈；</li><li>先遍历一遍 <code>temperatures</code>，并构造单调递增栈，栈中保存元素对应的 <code>index</code>；</li><li>求出 <code>temperatures</code> 中每个元素右侧下一个更大的元素，然后将其对应的 <code>index</code> 存储到哈希表中；</li><li>然后再遍历一遍 <code>temperatures</code>，从哈希表中取出对应结果，将差值 <code>value - key</code> 存放到答案数组中；</li><li>这种解法的时间复杂度是 <code>O(n)</code>。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">temperatures</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">dailyTemperatures</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">temperatures</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> temperatures<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>
      stack<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span>
      temperatures<span class="token punctuation">[</span>stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> temperatures<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> temperatures<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    temperatures<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">?</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> i <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> temperatures<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,17),w=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"题号"),n("th",{style:{"text-align":"left"}},"标题"),n("th",{style:{"text-align":"center"}},"题解"),n("th",{style:{"text-align":"left"}},"标签"),n("th",{style:{"text-align":"left"}},"难度")])],-1),E=n("td",{style:{"text-align":"center"}},"496",-1),I={style:{"text-align":"left"}},q={href:"https://leetcode.com/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},C={style:{"text-align":"center"}},L={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0496",target:"_blank",rel:"noopener noreferrer"},N={style:{"text-align":"left"}},V=n("code",null,"栈",-1),j=n("code",null,"数组",-1),O=n("code",null,"哈希表",-1),B=n("code",null,"1+",-1),M={style:{"text-align":"left"}},R=n("td",{style:{"text-align":"center"}},"901",-1),T={style:{"text-align":"left"}},G={href:"https://leetcode.com/problems/online-stock-span",target:"_blank",rel:"noopener noreferrer"},S=n("td",{style:{"text-align":"center"}},null,-1),z={style:{"text-align":"left"}},A=n("code",null,"栈",-1),D=n("code",null,"设计",-1),F=n("code",null,"数据流",-1),H=n("code",null,"1+",-1),J={style:{"text-align":"left"}};function K(P,Q){const o=c("ExternalLinkIcon"),p=c("font"),a=c("RouterLink");return i(),r("div",null,[n("h1",h,[m,s(),n("a",_,[s("739. 每日温度"),e(o)])]),n("p",null,[s("🟠 "),e(p,{color:"#ffb800"},{default:t(()=>[s("Medium")]),_:1}),s("  🔖  "),e(a,{to:"/leetcode/outline/tag/stack.html"},{default:t(()=>[f]),_:1}),s(),e(a,{to:"/leetcode/outline/tag/array.html"},{default:t(()=>[b]),_:1}),s(),e(a,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:t(()=>[v]),_:1}),s("  🔗 "),n("a",g,[y,e(o)])]),x,u(" prettier-ignore "),n("table",null,[w,n("tbody",null,[n("tr",null,[E,n("td",I,[n("a",q,[s("下一个更大元素 I"),e(o)])]),n("td",C,[n("a",L,[s("[✓]"),e(o)])]),n("td",N,[e(a,{to:"/leetcode/outline/tag/stack.html"},{default:t(()=>[V]),_:1}),s(),e(a,{to:"/leetcode/outline/tag/array.html"},{default:t(()=>[j]),_:1}),s(),e(a,{to:"/leetcode/outline/tag/hash-table.html"},{default:t(()=>[O]),_:1}),s(),B]),n("td",M,[e(p,{color:"#15bd66"},{default:t(()=>[s("Easy")]),_:1})])]),n("tr",null,[R,n("td",T,[n("a",G,[s("股票价格跨度"),e(o)])]),S,n("td",z,[e(a,{to:"/leetcode/outline/tag/stack.html"},{default:t(()=>[A]),_:1}),s(),e(a,{to:"/leetcode/outline/tag/design.html"},{default:t(()=>[D]),_:1}),s(),e(a,{to:"/leetcode/outline/tag/data-stream.html"},{default:t(()=>[F]),_:1}),s(),H]),n("td",J,[e(p,{color:"#ffb800"},{default:t(()=>[s("Medium")]),_:1})])])])])])}const W=l(k,[["render",K],["__file","0739.html.vue"]]);export{W as default};
