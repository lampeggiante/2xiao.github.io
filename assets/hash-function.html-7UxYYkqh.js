import{_,r as c,o as i,c as a,a as t,d as e,w as l,b as o,f as h}from"./app-mvY9N9Pc.js";const r={},u=t("h1",{id:"哈希函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#哈希函数","aria-hidden":"true"},"#"),o(" 哈希函数")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),I=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),H=t("code",null,"单调队列",-1),M=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),E=t("code",null,"字符串匹配",-1),j=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),N=t("code",null,"二叉搜索树",-1),z=t("code",null,"最小生成树",-1),V=t("code",null,"图",-1),B=t("code",null,"有序集合",-1),C=t("code",null,"拓扑排序",-1),R=t("code",null,"最短路",-1),K=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),D=t("code",null,"并查集",-1),F=t("code",null,"字典树",-1),U=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),J=t("code",null,"后缀数组",-1),O=t("p",null,[t("strong",null,"算法")],-1),P=t("code",null,"枚举",-1),Q=t("code",null,"递归",-1),S=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ht=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("span",{class:"blue"},"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),It=t("code",null,"模拟",-1),wt=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),Mt=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),Et=t("code",null,"数据库",-1),jt=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Nt=t("code",null,"脑筋急转弯",-1),zt=t("code",null,"交互",-1),Vt=t("code",null,"迭代器",-1),Bt=t("code",null,"多线程",-1),Ct=t("hr",null,null,-1),Rt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Kt=t("td",{style:{"text-align":"center"}},"187",-1),Tt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/repeated-dna-sequences",target:"_blank",rel:"noopener noreferrer"},Dt=t("td",{style:{"text-align":"center"}},null,-1),Ft={style:{"text-align":"left"}},Ut=t("code",null,"位运算",-1),Gt=t("code",null,"哈希表",-1),Jt=t("code",null,"字符串",-1),Ot=t("code",null,"3+",-1),Pt={style:{"text-align":"left"}},Qt=t("td",{style:{"text-align":"center"}},"214",-1),St={style:{"text-align":"left"}},Wt={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},Xt=t("td",{style:{"text-align":"center"}},null,-1),Yt={style:{"text-align":"left"}},Zt=t("code",null,"字符串",-1),$t=t("code",null,"字符串匹配",-1),te=t("code",null,"哈希函数",-1),ee=t("code",null,"1+",-1),oe={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"535",-1),ne={style:{"text-align":"left"}},de={href:"https://leetcode.com/problems/encode-and-decode-tinyurl",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"center"}},null,-1),ce={style:{"text-align":"left"}},_e=t("code",null,"设计",-1),ie=t("code",null,"哈希表",-1),ae=t("code",null,"字符串",-1),he=t("code",null,"1+",-1),re={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"572",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},me={style:{"text-align":"center"}},ye={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0572",target:"_blank",rel:"noopener noreferrer"},xe={style:{"text-align":"left"}},be=t("code",null,"树",-1),pe=t("code",null,"深度优先搜索",-1),ke=t("code",null,"二叉树",-1),Ie=t("code",null,"2+",-1),we={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"694",-1),Me={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},qe=t("td",{style:{"text-align":"center"}},null,-1),Ee={style:{"text-align":"left"}},je=t("code",null,"深度优先搜索",-1),Le=t("code",null,"广度优先搜索",-1),Ne=t("code",null,"并查集",-1),ze=t("code",null,"2+",-1),Ve={style:{"text-align":"left"}},Be=t("td",{style:{"text-align":"center"}},"705",-1),Ce={style:{"text-align":"left"}},Re={href:"https://leetcode.com/problems/design-hashset",target:"_blank",rel:"noopener noreferrer"},Ke={style:{"text-align":"center"}},Te={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0705",target:"_blank",rel:"noopener noreferrer"},Ae={style:{"text-align":"left"}},De=t("code",null,"设计",-1),Fe=t("code",null,"数组",-1),Ue=t("code",null,"哈希表",-1),Ge=t("code",null,"2+",-1),Je={style:{"text-align":"left"}},Oe=t("td",{style:{"text-align":"center"}},"706",-1),Pe={style:{"text-align":"left"}},Qe={href:"https://leetcode.com/problems/design-hashmap",target:"_blank",rel:"noopener noreferrer"},Se={style:{"text-align":"center"}},We={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0706",target:"_blank",rel:"noopener noreferrer"},Xe={style:{"text-align":"left"}},Ye=t("code",null,"设计",-1),Ze=t("code",null,"数组",-1),$e=t("code",null,"哈希表",-1),to=t("code",null,"2+",-1),eo={style:{"text-align":"left"}},oo=t("td",{style:{"text-align":"center"}},"711",-1),lo={style:{"text-align":"left"}},no={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},so=t("td",{style:{"text-align":"center"}},null,-1),co={style:{"text-align":"left"}},_o=t("code",null,"深度优先搜索",-1),io=t("code",null,"广度优先搜索",-1),ao=t("code",null,"并查集",-1),ho=t("code",null,"2+",-1),ro={style:{"text-align":"left"}},uo=t("td",{style:{"text-align":"center"}},"718",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},mo=t("td",{style:{"text-align":"center"}},null,-1),yo={style:{"text-align":"left"}},xo=t("code",null,"数组",-1),bo=t("code",null,"二分查找",-1),po=t("code",null,"动态规划",-1),ko=t("code",null,"3+",-1),Io={style:{"text-align":"left"}},wo=t("td",{style:{"text-align":"center"}},"1044",-1),Ho={style:{"text-align":"left"}},Mo={href:"https://leetcode.com/problems/longest-duplicate-substring",target:"_blank",rel:"noopener noreferrer"},vo=t("td",{style:{"text-align":"center"}},null,-1),qo={style:{"text-align":"left"}},Eo=t("code",null,"字符串",-1),jo=t("code",null,"二分查找",-1),Lo=t("code",null,"后缀数组",-1),No=t("code",null,"3+",-1),zo={style:{"text-align":"left"}},Vo=t("td",{style:{"text-align":"center"}},"1062",-1),Bo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},Ro=t("td",{style:{"text-align":"center"}},null,-1),Ko={style:{"text-align":"left"}},To=t("code",null,"字符串",-1),Ao=t("code",null,"二分查找",-1),Do=t("code",null,"动态规划",-1),Fo=t("code",null,"3+",-1),Uo={style:{"text-align":"left"}},Go=t("td",{style:{"text-align":"center"}},"1147",-1),Jo={style:{"text-align":"left"}},Oo={href:"https://leetcode.com/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},Po=t("td",{style:{"text-align":"center"}},null,-1),Qo={style:{"text-align":"left"}},So=t("code",null,"贪心",-1),Wo=t("code",null,"双指针",-1),Xo=t("code",null,"字符串",-1),Yo=t("code",null,"3+",-1),Zo={style:{"text-align":"left"}},$o=t("td",{style:{"text-align":"center"}},"1316",-1),tl={style:{"text-align":"left"}},el={href:"https://leetcode.com/problems/distinct-echo-substrings",target:"_blank",rel:"noopener noreferrer"},ol=t("td",{style:{"text-align":"center"}},null,-1),ll={style:{"text-align":"left"}},nl=t("code",null,"字典树",-1),dl=t("code",null,"字符串",-1),sl=t("code",null,"哈希函数",-1),cl=t("code",null,"1+",-1),_l={style:{"text-align":"left"}},il=t("td",{style:{"text-align":"center"}},"1392",-1),al={style:{"text-align":"left"}},hl={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},rl=t("td",{style:{"text-align":"center"}},null,-1),ul={style:{"text-align":"left"}},fl=t("code",null,"字符串",-1),gl=t("code",null,"字符串匹配",-1),ml=t("code",null,"哈希函数",-1),yl=t("code",null,"1+",-1),xl={style:{"text-align":"left"}},bl=t("td",{style:{"text-align":"center"}},"1461",-1),pl={style:{"text-align":"left"}},kl={href:"https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k",target:"_blank",rel:"noopener noreferrer"},Il=t("td",{style:{"text-align":"center"}},null,-1),wl={style:{"text-align":"left"}},Hl=t("code",null,"位运算",-1),Ml=t("code",null,"哈希表",-1),vl=t("code",null,"字符串",-1),ql=t("code",null,"2+",-1),El={style:{"text-align":"left"}},jl=t("td",{style:{"text-align":"center"}},"1554",-1),Ll={style:{"text-align":"left"}},Nl={href:"https://leetcode.com/problems/strings-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},zl=t("td",{style:{"text-align":"center"}},null,-1),Vl={style:{"text-align":"left"}},Bl=t("code",null,"哈希表",-1),Cl=t("code",null,"字符串",-1),Rl=t("code",null,"哈希函数",-1),Kl=t("code",null,"1+",-1),Tl={style:{"text-align":"left"}},Al=t("td",{style:{"text-align":"center"}},"1698",-1),Dl={style:{"text-align":"left"}},Fl={href:"https://leetcode.com/problems/number-of-distinct-substrings-in-a-string",target:"_blank",rel:"noopener noreferrer"},Ul=t("td",{style:{"text-align":"center"}},null,-1),Gl={style:{"text-align":"left"}},Jl=t("code",null,"字典树",-1),Ol=t("code",null,"字符串",-1),Pl=t("code",null,"后缀数组",-1),Ql=t("code",null,"2+",-1),Sl={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"1923",-1),Xl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/longest-common-subpath",target:"_blank",rel:"noopener noreferrer"},Zl=t("td",{style:{"text-align":"center"}},null,-1),$l={style:{"text-align":"left"}},tn=t("code",null,"数组",-1),en=t("code",null,"二分查找",-1),on=t("code",null,"后缀数组",-1),ln=t("code",null,"2+",-1),nn={style:{"text-align":"left"}},dn=t("td",{style:{"text-align":"center"}},"1948",-1),sn={style:{"text-align":"left"}},cn={href:"https://leetcode.com/problems/delete-duplicate-folders-in-system",target:"_blank",rel:"noopener noreferrer"},_n=t("td",{style:{"text-align":"center"}},null,-1),an={style:{"text-align":"left"}},hn=t("code",null,"字典树",-1),rn=t("code",null,"数组",-1),un=t("code",null,"哈希表",-1),fn=t("code",null,"2+",-1),gn={style:{"text-align":"left"}},mn=t("td",{style:{"text-align":"center"}},"1960",-1),yn={style:{"text-align":"left"}},xn={href:"https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},bn=t("td",{style:{"text-align":"center"}},null,-1),pn={style:{"text-align":"left"}},kn=t("code",null,"字符串",-1),In=t("code",null,"哈希函数",-1),wn=t("code",null,"滚动哈希",-1),Hn={style:{"text-align":"left"}},Mn=t("td",{style:{"text-align":"center"}},"2156",-1),vn={style:{"text-align":"left"}},qn={href:"https://leetcode.com/problems/find-substring-with-given-hash-value",target:"_blank",rel:"noopener noreferrer"},En=t("td",{style:{"text-align":"center"}},null,-1),jn={style:{"text-align":"left"}},Ln=t("code",null,"字符串",-1),Nn=t("code",null,"滑动窗口",-1),zn=t("code",null,"哈希函数",-1),Vn=t("code",null,"1+",-1),Bn={style:{"text-align":"left"}},Cn=t("td",{style:{"text-align":"center"}},"2168",-1),Rn={style:{"text-align":"left"}},Kn={href:"https://leetcode.com/problems/unique-substrings-with-equal-digit-frequency",target:"_blank",rel:"noopener noreferrer"},Tn=t("td",{style:{"text-align":"center"}},null,-1),An={style:{"text-align":"left"}},Dn=t("code",null,"哈希表",-1),Fn=t("code",null,"字符串",-1),Un=t("code",null,"计数",-1),Gn=t("code",null,"2+",-1),Jn={style:{"text-align":"left"}},On=t("td",{style:{"text-align":"center"}},"2223",-1),Pn={style:{"text-align":"left"}},Qn={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},Sn=t("td",{style:{"text-align":"center"}},null,-1),Wn={style:{"text-align":"left"}},Xn=t("code",null,"字符串",-1),Yn=t("code",null,"二分查找",-1),Zn=t("code",null,"字符串匹配",-1),$n=t("code",null,"3+",-1),td={style:{"text-align":"left"}},ed=t("td",{style:{"text-align":"center"}},"2261",-1),od={style:{"text-align":"left"}},ld={href:"https://leetcode.com/problems/k-divisible-elements-subarrays",target:"_blank",rel:"noopener noreferrer"},nd={style:{"text-align":"center"}},dd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/2261",target:"_blank",rel:"noopener noreferrer"},sd={style:{"text-align":"left"}},cd=t("code",null,"字典树",-1),_d=t("code",null,"数组",-1),id=t("code",null,"哈希表",-1),ad=t("code",null,"3+",-1),hd={style:{"text-align":"left"}},rd=t("td",{style:{"text-align":"center"}},"2430",-1),ud={style:{"text-align":"left"}},fd={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},gd=t("td",{style:{"text-align":"center"}},null,-1),md={style:{"text-align":"left"}},yd=t("code",null,"字符串",-1),xd=t("code",null,"动态规划",-1),bd=t("code",null,"字符串匹配",-1),pd=t("code",null,"2+",-1),kd={style:{"text-align":"left"}},Id=t("td",{style:{"text-align":"center"}},"3006",-1),wd={style:{"text-align":"left"}},Hd={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},Md=t("td",{style:{"text-align":"center"}},null,-1),vd={style:{"text-align":"left"}},qd=t("code",null,"双指针",-1),Ed=t("code",null,"字符串",-1),jd=t("code",null,"二分查找",-1),Ld=t("code",null,"3+",-1),Nd={style:{"text-align":"left"}},zd=t("td",{style:{"text-align":"center"}},"3008",-1),Vd={style:{"text-align":"left"}},Bd={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},Cd=t("td",{style:{"text-align":"center"}},null,-1),Rd={style:{"text-align":"left"}},Kd=t("code",null,"双指针",-1),Td=t("code",null,"字符串",-1),Ad=t("code",null,"二分查找",-1),Dd=t("code",null,"3+",-1),Fd={style:{"text-align":"left"}},Ud=t("td",{style:{"text-align":"center"}},"3023",-1),Gd={style:{"text-align":"left"}},Jd={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Od=t("td",{style:{"text-align":"center"}},null,-1),Pd={style:{"text-align":"left"}},Qd=t("code",null,"数组",-1),Sd=t("code",null,"字符串匹配",-1),Wd=t("code",null,"滑动窗口",-1),Xd=t("code",null,"2+",-1),Yd={style:{"text-align":"left"}},Zd=t("td",{style:{"text-align":"center"}},"3029",-1),$d={style:{"text-align":"left"}},ts={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},es=t("td",{style:{"text-align":"center"}},null,-1),os={style:{"text-align":"left"}},ls=t("code",null,"字符串",-1),ns=t("code",null,"字符串匹配",-1),ds=t("code",null,"哈希函数",-1),ss=t("code",null,"1+",-1),cs={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"3031",-1),is={style:{"text-align":"left"}},as={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},hs=t("td",{style:{"text-align":"center"}},null,-1),rs={style:{"text-align":"left"}},us=t("code",null,"字符串",-1),fs=t("code",null,"字符串匹配",-1),gs=t("code",null,"哈希函数",-1),ms=t("code",null,"1+",-1),ys={style:{"text-align":"left"}},xs=t("td",{style:{"text-align":"center"}},"3034",-1),bs={style:{"text-align":"left"}},ps={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},ks=t("td",{style:{"text-align":"center"}},null,-1),Is={style:{"text-align":"left"}},ws=t("code",null,"数组",-1),Hs=t("code",null,"字符串匹配",-1),Ms=t("code",null,"哈希函数",-1),vs=t("code",null,"1+",-1),qs={style:{"text-align":"left"}},Es=t("td",{style:{"text-align":"center"}},"3036",-1),js={style:{"text-align":"left"}},Ls={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},Ns=t("td",{style:{"text-align":"center"}},null,-1),zs={style:{"text-align":"left"}},Vs=t("code",null,"数组",-1),Bs=t("code",null,"字符串匹配",-1),Cs=t("code",null,"哈希函数",-1),Rs=t("code",null,"1+",-1),Ks={style:{"text-align":"left"}},Ts=t("td",{style:{"text-align":"center"}},"3037",-1),As={style:{"text-align":"left"}},Ds={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},Fs=t("td",{style:{"text-align":"center"}},null,-1),Us={style:{"text-align":"left"}},Gs=t("code",null,"数组",-1),Js=t("code",null,"字符串匹配",-1),Os=t("code",null,"滑动窗口",-1),Ps=t("code",null,"2+",-1),Qs={style:{"text-align":"left"}},Ss=t("td",{style:{"text-align":"center"}},"3042",-1),Ws={style:{"text-align":"left"}},Xs={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},Ys=t("td",{style:{"text-align":"center"}},null,-1),Zs={style:{"text-align":"left"}},$s=t("code",null,"字典树",-1),tc=t("code",null,"数组",-1),ec=t("code",null,"字符串",-1),oc=t("code",null,"3+",-1),lc={style:{"text-align":"left"}},nc=t("td",{style:{"text-align":"center"}},"3045",-1),dc={style:{"text-align":"left"}},sc={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},cc=t("td",{style:{"text-align":"center"}},null,-1),_c={style:{"text-align":"left"}},ic=t("code",null,"字典树",-1),ac=t("code",null,"数组",-1),hc=t("code",null,"字符串",-1),rc=t("code",null,"3+",-1),uc={style:{"text-align":"left"}},fc=t("td",{style:{"text-align":"center"}},"3135",-1),gc={style:{"text-align":"left"}},mc={href:"https://leetcode.com/problems/equalize-strings-by-adding-or-removing-characters-at-ends",target:"_blank",rel:"noopener noreferrer"},yc=t("td",{style:{"text-align":"center"}},null,-1),xc={style:{"text-align":"left"}},bc=t("code",null,"字符串",-1),pc=t("code",null,"二分查找",-1),kc=t("code",null,"动态规划",-1),Ic=t("code",null,"2+",-1),wc={style:{"text-align":"left"}},Hc=t("td",{style:{"text-align":"center"}},"3291",-1),Mc={style:{"text-align":"left"}},vc={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},qc=t("td",{style:{"text-align":"center"}},null,-1),Ec={style:{"text-align":"left"}},jc=t("code",null,"字典树",-1),Lc=t("code",null,"线段树",-1),Nc=t("code",null,"数组",-1),zc=t("code",null,"6+",-1),Vc={style:{"text-align":"left"}},Bc=t("td",{style:{"text-align":"center"}},"3292",-1),Cc={style:{"text-align":"left"}},Rc={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},Kc=t("td",{style:{"text-align":"center"}},null,-1),Tc={style:{"text-align":"left"}},Ac=t("code",null,"线段树",-1),Dc=t("code",null,"数组",-1),Fc=t("code",null,"字符串",-1),Uc=t("code",null,"5+",-1),Gc={style:{"text-align":"left"}},Jc=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),Oc={style:{"text-align":"left"}},Pc={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},Qc=t("td",{style:{"text-align":"center"}},null,-1),Sc={style:{"text-align":"left"}},Wc=t("code",null,"树",-1),Xc=t("code",null,"深度优先搜索",-1),Yc=t("code",null,"二叉树",-1),Zc=t("code",null,"2+",-1),$c={style:{"text-align":"left"}},t_=t("td",{style:{"text-align":"center"}},"面试题 17.13",-1),e_={style:{"text-align":"left"}},o_={href:"https://leetcode.cn/problems/re-space-lcci",target:"_blank",rel:"noopener noreferrer"},l_=t("td",{style:{"text-align":"center"}},null,-1),n_={style:{"text-align":"left"}},d_=t("code",null,"字典树",-1),s_=t("code",null,"数组",-1),c_=t("code",null,"哈希表",-1),__=t("code",null,"4+",-1),i_={style:{"text-align":"left"}};function a_(h_,r_){const n=c("RouterLink"),d=c("ExternalLinkIcon"),s=c("font");return i(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[J]),_:1})]),O,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),ft,o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Bt]),_:1})])]),Ct,h(" prettier-ignore "),t("table",null,[Rt,t("tbody",null,[t("tr",null,[Kt,t("td",Tt,[t("a",At,[o("重复的DNA序列"),e(d)])]),Dt,t("td",Ft,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Jt]),_:1}),o(),Ot]),t("td",Pt,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Qt,t("td",St,[t("a",Wt,[o("最短回文串"),e(d)])]),Xt,t("td",Yt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[te]),_:1}),o(),ee]),t("td",oe,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[le,t("td",ne,[t("a",de,[o("TinyURL 的加密与解密"),e(d)])]),se,t("td",ce,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[_e]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ie]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[ae]),_:1}),o(),he]),t("td",re,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[o("另一棵树的子树"),e(d)])]),t("td",me,[t("a",ye,[o("[✓]"),e(d)])]),t("td",xe,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[be]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[pe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[ke]),_:1}),o(),Ie]),t("td",we,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[He,t("td",Me,[t("a",ve,[o("不同岛屿的数量"),e(d)])]),qe,t("td",Ee,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[je]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Le]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[Ne]),_:1}),o(),ze]),t("td",Ve,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Be,t("td",Ce,[t("a",Re,[o("设计哈希集合"),e(d)])]),t("td",Ke,[t("a",Te,[o("[✓]"),e(d)])]),t("td",Ae,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[De]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Fe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Ue]),_:1}),o(),Ge]),t("td",Je,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Oe,t("td",Pe,[t("a",Qe,[o("设计哈希映射"),e(d)])]),t("td",Se,[t("a",We,[o("[✓]"),e(d)])]),t("td",Xe,[e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Ye]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ze]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[$e]),_:1}),o(),to]),t("td",eo,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[oo,t("td",lo,[t("a",no,[o("不同岛屿的数量 II"),e(d)])]),so,t("td",co,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[_o]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[io]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[ao]),_:1}),o(),ho]),t("td",ro,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[uo,t("td",fo,[t("a",go,[o("最长重复子数组"),e(d)])]),mo,t("td",yo,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[xo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[bo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[po]),_:1}),o(),ko]),t("td",Io,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[wo,t("td",Ho,[t("a",Mo,[o("最长重复子串"),e(d)])]),vo,t("td",qo,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Eo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[jo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[Lo]),_:1}),o(),No]),t("td",zo,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Vo,t("td",Bo,[t("a",Co,[o("最长重复子串"),e(d)])]),Ro,t("td",Ko,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[To]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Ao]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Do]),_:1}),o(),Fo]),t("td",Uo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Go,t("td",Jo,[t("a",Oo,[o("段式回文"),e(d)])]),Po,t("td",Qo,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[So]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[Wo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Xo]),_:1}),o(),Yo]),t("td",Zo,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$o,t("td",tl,[t("a",el,[o("不同的循环子字符串"),e(d)])]),ol,t("td",ll,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[nl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[dl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[sl]),_:1}),o(),cl]),t("td",_l,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[il,t("td",al,[t("a",hl,[o("最长快乐前缀"),e(d)])]),rl,t("td",ul,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[fl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[gl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ml]),_:1}),o(),yl]),t("td",xl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bl,t("td",pl,[t("a",kl,[o("检查一个字符串是否包含所有长度为 K 的二进制子串"),e(d)])]),Il,t("td",wl,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Hl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Ml]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[vl]),_:1}),o(),ql]),t("td",El,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jl,t("td",Ll,[t("a",Nl,[o("只有一个不同字符的字符串"),e(d)])]),zl,t("td",Vl,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Bl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Cl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[Rl]),_:1}),o(),Kl]),t("td",Tl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Al,t("td",Dl,[t("a",Fl,[o("字符串的不同子字符串个数"),e(d)])]),Ul,t("td",Gl,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[Jl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ol]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[Pl]),_:1}),o(),Ql]),t("td",Sl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wl,t("td",Xl,[t("a",Yl,[o("最长公共子路径"),e(d)])]),Zl,t("td",$l,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[tn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[en]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[on]),_:1}),o(),ln]),t("td",nn,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[dn,t("td",sn,[t("a",cn,[o("删除系统中的重复文件夹"),e(d)])]),_n,t("td",an,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[hn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[rn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[un]),_:1}),o(),fn]),t("td",gn,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[mn,t("td",yn,[t("a",xn,[o("两个回文子字符串长度的最大乘积"),e(d)])]),bn,t("td",pn,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[kn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[In]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[wn]),_:1})]),t("td",Hn,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Mn,t("td",vn,[t("a",qn,[o("查找给定哈希值的子串"),e(d)])]),En,t("td",jn,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ln]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[Nn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[zn]),_:1}),o(),Vn]),t("td",Bn,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Cn,t("td",Rn,[t("a",Kn,[o("每个数字的频率都相同的独特子字符串的数量"),e(d)])]),Tn,t("td",An,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Dn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Fn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[Un]),_:1}),o(),Gn]),t("td",Jn,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[On,t("td",Pn,[t("a",Qn,[o("构造字符串的总得分和"),e(d)])]),Sn,t("td",Wn,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Xn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Yn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[Zn]),_:1}),o(),$n]),t("td",td,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ed,t("td",od,[t("a",ld,[o("含最多 K 个可整除元素的子数组"),e(d)])]),t("td",nd,[t("a",dd,[o("[✓]"),e(d)])]),t("td",sd,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[cd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[_d]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[id]),_:1}),o(),ad]),t("td",hd,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[rd,t("td",ud,[t("a",fd,[o("对字母串可执行的最大删除数"),e(d)])]),gd,t("td",md,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[yd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[xd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[bd]),_:1}),o(),pd]),t("td",kd,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Id,t("td",wd,[t("a",Hd,[o("找出数组中的美丽下标 I"),e(d)])]),Md,t("td",vd,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[qd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ed]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[jd]),_:1}),o(),Ld]),t("td",Nd,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zd,t("td",Vd,[t("a",Bd,[o("找出数组中的美丽下标 II"),e(d)])]),Cd,t("td",Rd,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[Kd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Td]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Ad]),_:1}),o(),Dd]),t("td",Fd,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ud,t("td",Gd,[t("a",Jd,[o("在无限流中寻找模式 I"),e(d)])]),Od,t("td",Pd,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Qd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[Sd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[Wd]),_:1}),o(),Xd]),t("td",Yd,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Zd,t("td",$d,[t("a",ts,[o("将单词恢复初始状态所需的最短时间 I"),e(d)])]),es,t("td",os,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[ls]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[ns]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ds]),_:1}),o(),ss]),t("td",cs,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_s,t("td",is,[t("a",as,[o("将单词恢复初始状态所需的最短时间 II"),e(d)])]),hs,t("td",rs,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[us]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[fs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[gs]),_:1}),o(),ms]),t("td",ys,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[xs,t("td",bs,[t("a",ps,[o("匹配模式数组的子数组数目 I"),e(d)])]),ks,t("td",Is,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ws]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[Hs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[Ms]),_:1}),o(),vs]),t("td",qs,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Es,t("td",js,[t("a",Ls,[o("匹配模式数组的子数组数目 II"),e(d)])]),Ns,t("td",zs,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Vs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[Bs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[Cs]),_:1}),o(),Rs]),t("td",Ks,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ts,t("td",As,[t("a",Ds,[o("在无限流中寻找模式 II"),e(d)])]),Fs,t("td",Us,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Gs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[Js]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[Os]),_:1}),o(),Ps]),t("td",Qs,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ss,t("td",Ws,[t("a",Xs,[o("统计前后缀下标对 I"),e(d)])]),Ys,t("td",Zs,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[$s]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[tc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[ec]),_:1}),o(),oc]),t("td",lc,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[nc,t("td",dc,[t("a",sc,[o("统计前后缀下标对 II"),e(d)])]),cc,t("td",_c,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[ic]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ac]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[hc]),_:1}),o(),rc]),t("td",uc,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[fc,t("td",gc,[t("a",mc,[o("通过添加或删除结尾字符来同化字符串"),e(d)])]),yc,t("td",xc,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[bc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[pc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[kc]),_:1}),o(),Ic]),t("td",wc,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Hc,t("td",Mc,[t("a",vc,[o("形成目标字符串需要的最少字符串数 I"),e(d)])]),qc,t("td",Ec,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[jc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Lc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Nc]),_:1}),o(),zc]),t("td",Vc,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Bc,t("td",Cc,[t("a",Rc,[o("形成目标字符串需要的最少字符串数 II"),e(d)])]),Kc,t("td",Tc,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Ac]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Dc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Fc]),_:1}),o(),Uc]),t("td",Gc,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Jc,t("td",Oc,[t("a",Pc,[o("检查子树"),e(d)])]),Qc,t("td",Sc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Wc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Xc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Yc]),_:1}),o(),Zc]),t("td",$c,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[t_,t("td",e_,[t("a",o_,[o("恢复空格"),e(d)])]),l_,t("td",n_,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[d_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[s_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[c_]),_:1}),o(),__]),t("td",i_,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const f_=_(r,[["render",a_],["__file","hash-function.html.vue"]]);export{f_ as default};
