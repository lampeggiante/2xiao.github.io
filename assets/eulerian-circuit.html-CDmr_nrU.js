import{_ as i,r as c,o as _,c as a,a as t,d as e,w as o,b as l,f as u}from"./app-5VBZs9Uu.js";const h={},r=t("h1",{id:"欧拉回路",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#欧拉回路","aria-hidden":"true"},"#"),l(" 欧拉回路")],-1),g={class:"hint-container details"},m=t("summary",null,"全部标签",-1),f=t("p",null,[t("strong",null,"数据结构")],-1),j=t("code",null,"数组",-1),p=t("code",null,"矩阵",-1),y=t("code",null,"链表",-1),x=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),v=t("code",null,"队列",-1),w=t("code",null,"单调队列",-1),q=t("code",null,"堆（优先队列）",-1),C=t("code",null,"哈希表",-1),L=t("code",null,"字符串",-1),N=t("code",null,"字符串匹配",-1),V=t("code",null,"树",-1),B=t("code",null,"二叉树",-1),E=t("code",null,"二叉搜索树",-1),H=t("code",null,"最小生成树",-1),z=t("code",null,"图",-1),I=t("code",null,"有序集合",-1),R=t("code",null,"拓扑排序",-1),T=t("code",null,"最短路",-1),A=t("code",null,"强连通分量",-1),D=t("span",{class:"blue"},"欧拉回路",-1),F=t("code",null,"双连通分量",-1),G=t("code",null,"并查集",-1),J=t("code",null,"字典树",-1),K=t("code",null,"线段树",-1),M=t("code",null,"树状数组",-1),O=t("code",null,"后缀数组",-1),P=t("p",null,[t("strong",null,"算法")],-1),Q=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),_t=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),gt=t("code",null,"哈希函数",-1),mt=t("code",null,"滚动哈希",-1),ft=t("code",null,"扫描线",-1),jt=t("p",null,[t("strong",null,"其他")],-1),pt=t("code",null,"数学",-1),yt=t("code",null,"数论",-1),xt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),vt=t("code",null,"组合数学",-1),wt=t("code",null,"随机化",-1),qt=t("code",null,"概率与统计",-1),Ct=t("code",null,"水塘抽样",-1),Lt=t("code",null,"拒绝采样",-1),Nt=t("code",null,"数据库",-1),Vt=t("code",null,"设计",-1),Bt=t("code",null,"数据流",-1),Et=t("code",null,"脑筋急转弯",-1),Ht=t("code",null,"交互",-1),zt=t("code",null,"迭代器",-1),It=t("code",null,"多线程",-1),Rt=t("hr",null,null,-1),Tt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),At=t("td",{style:{"text-align":"center"}},"332",-1),Dt={style:{"text-align":"left"}},Ft={href:"https://leetcode.com/problems/reconstruct-itinerary",target:"_blank",rel:"noopener noreferrer"},Gt=t("td",{style:{"text-align":"center"}},null,-1),Jt={style:{"text-align":"left"}},Kt=t("code",null,"深度优先搜索",-1),Mt=t("code",null,"图",-1),Ot=t("code",null,"欧拉回路",-1),Pt={style:{"text-align":"left"}},Qt=t("td",{style:{"text-align":"center"}},"753",-1),St={style:{"text-align":"left"}},Ut={href:"https://leetcode.com/problems/cracking-the-safe",target:"_blank",rel:"noopener noreferrer"},Wt=t("td",{style:{"text-align":"center"}},null,-1),Xt={style:{"text-align":"left"}},Yt=t("code",null,"深度优先搜索",-1),Zt=t("code",null,"图",-1),$t=t("code",null,"欧拉回路",-1),te={style:{"text-align":"left"}},ee=t("td",{style:{"text-align":"center"}},"2097",-1),oe={style:{"text-align":"left"}},le={href:"https://leetcode.com/problems/valid-arrangement-of-pairs",target:"_blank",rel:"noopener noreferrer"},ne=t("td",{style:{"text-align":"center"}},null,-1),de={style:{"text-align":"left"}},se=t("code",null,"深度优先搜索",-1),ce=t("code",null,"图",-1),ie=t("code",null,"欧拉回路",-1),_e={style:{"text-align":"left"}};function ae(ue,he){const n=c("RouterLink"),d=c("ExternalLinkIcon"),s=c("font");return _(),a("div",null,[r,t("details",g,[m,f,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/strongly-connected-component.html"},{default:o(()=>[A]),_:1}),l(),D,l(),e(n,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[O]),_:1})]),P,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/merge-sort.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/quickselect.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bitmask.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:o(()=>[mt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/line-sweep.html"},{default:o(()=>[ft]),_:1})]),jt,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:o(()=>[yt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/randomized.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/reservoir-sampling.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rejection-sampling.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/database.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Vt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/interactive.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/iterator.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/concurrency.html"},{default:o(()=>[It]),_:1})])]),Rt,u(" prettier-ignore "),t("table",null,[Tt,t("tbody",null,[t("tr",null,[At,t("td",Dt,[t("a",Ft,[l("重新安排行程"),e(d)])]),Gt,t("td",Jt,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Kt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[Ot]),_:1})]),t("td",Pt,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qt,t("td",St,[t("a",Ut,[l("破解保险箱"),e(d)])]),Wt,t("td",Xt,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[$t]),_:1})]),t("td",te,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ee,t("td",oe,[t("a",le,[l("合法重新排列数对"),e(d)])]),ne,t("td",de,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[se]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[ie]),_:1})]),t("td",_e,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])])])}const ge=i(h,[["render",ae],["__file","eulerian-circuit.html.vue"]]);export{ge as default};
