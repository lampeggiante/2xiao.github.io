import{_ as c,r as e,o as i,c as l,a as n,b as s,d as a,w as r,e as p}from"./app-Vxhc7U41.js";const u={},d=n("h1",{id:"_7-实现-reactdom",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_7-实现-reactdom","aria-hidden":"true"},"#"),s(" 7. 实现 ReactDOM")],-1),k={class:"hint-container info"},v=n("p",{class:"hint-container-title"},"摘要",-1),m=n("ul",null,[n("li",null,"实现 react-dom 包"),n("li",null,"实现打包流程")],-1),b={href:"https://github.com/2xiao/my-react/tree/v1.7",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"git tag v1.7",-1),h=p(`<p>React 是一个跨平台的库，可以用于构建 Web 应用、移动应用（React Native）等。而 <code>react-dom</code> 就是 React 在 Web 环境中的渲染实现，用于将 React 组件渲染到实际的 DOM 上，并提供了一些与 DOM 操作相关的功能。</p><p>之前我们在 <code>react-reconciler/src/hostConfig.ts</code> 中模拟实现了一些生成、插入 DOM 元素的函数，现在就在 <code>react-dom</code> 中真正实现它。</p><h2 id="_1-实现-react-dom-包" tabindex="-1"><a class="header-anchor" href="#_1-实现-react-dom-包" aria-hidden="true">#</a> 1. 实现 react-dom 包</h2><p>先创建 <code>packages/react-dom</code> 文件夹，并初始化：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> packages
<span class="token function">mkdir</span> react-dom
<span class="token builtin class-name">cd</span> react-dom
<span class="token function">pnpm</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>初始化的 <code>package.json</code>文件如下所示：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// packages/react-dom/package.json</span>
<span class="token punctuation">{</span>
	<span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;react-dom&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.ts&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;shared&quot;</span><span class="token operator">:</span> <span class="token string">&quot;workspace: *&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;react-reconciler&quot;</span><span class="token operator">:</span> <span class="token string">&quot;workspace: *&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token property">&quot;peerDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;react&quot;</span><span class="token operator">:</span> <span class="token string">&quot;workspace: *&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建 <code>packages/react-dom/scr/hostConfig.ts</code> 文件，将之前的 <code>hostConfig.ts</code> 文件复制过来并删除：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// packages/react-dom/scr/hostConfig.ts</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">Container</span> <span class="token operator">=</span> Element<span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">Instance</span> <span class="token operator">=</span> Element<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> createInstance <span class="token operator">=</span> <span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> porps<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> Instance <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token comment">// TODO: 处理 props</span>
	<span class="token keyword">const</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> element<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">appendInitialChild</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
	parent<span class="token operator">:</span> Instance <span class="token operator">|</span> Container<span class="token punctuation">,</span>
	child<span class="token operator">:</span> Instance
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	parent<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">createTextInstance</span> <span class="token operator">=</span> <span class="token punctuation">(</span>content<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> element<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">appendChildToContainer</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
	child<span class="token operator">:</span> Instance<span class="token punctuation">,</span>
	parent<span class="token operator">:</span> Instance <span class="token operator">|</span> Container
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	parent<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着实现 <code>packages/react-dom/scr/root.ts</code>，先来实现 <code>ReactDOM.createRoot().render()</code> 方法，我们之前讲过，这个函数过程中会调用两个 API：</p><ul><li><strong>createContainer 函数:</strong> 用于创建一个新的容器（container），该容器包含了 React 应用的根节点以及与之相关的一些配置信息。</li><li><strong>updateContainer 函数:</strong> 用于更新已经存在的容器中的内容，将新的 React 元素（<code>element</code>）渲染到容器中，并更新整个应用的状态。</li></ul><p>这两个 API 在 <code>react-reconciler</code> 包里面已经实现了，直接调用即可。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
	createContainer<span class="token punctuation">,</span>
	updateContainer
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-reconciler/src/fiberReconciler&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Container <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./hostConfig&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ReactElementType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;shared/ReactTypes&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 实现 ReactDOM.createRoot(root).render(&lt;App /&gt;);</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createRoot</span><span class="token punctuation">(</span>container<span class="token operator">:</span> Container<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token function">createContainer</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token punctuation">{</span>
		<span class="token function">render</span><span class="token punctuation">(</span>element<span class="token operator">:</span> ReactElementType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">updateContainer</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> root<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在我们已经实现了 React 首屏渲染的更新流程，即：</p><p>通过 <code>ReactDOM.createRoot(root).render(&lt;App /&gt;)</code> 方法，创建 React 应用的根节点，将一个 <code>Placement</code> 加入到更新队列中，并触发了首屏渲染的更新流程：在对 Fiber 树进行深度优先遍历（DFS）的过程中，比较新旧节点，生成更新计划，执行 DOM 操作，最终将 <code>&lt;App /&gt;</code> 渲染到根节点上。</p><p>目前我们还只实现了首屏渲染触发更新，还有很多触发更新的方式，如类组件的 <code>this.setState()</code>、函数组件的 <code>useState useEffect</code> ，将在后面实现。</p><h2 id="_2-实现打包流程" tabindex="-1"><a class="header-anchor" href="#_2-实现打包流程" aria-hidden="true">#</a> 2. 实现打包流程</h2>`,17),y=n("code",null,"react-dom",-1),f=p(`<ul><li>需要安装一个包来处理 <code>hostConfig</code> 的导入路径：<code>pnpm i -D -w @rollup/plugin-alias</code>；</li><li><code>ReactDOM = Reconciler + hostConfig</code>，不要将 react 包打包进 react-dom 里，否则会出现数据共享冲突；</li></ul><p><code>react-dom.config.js</code> 的具体配置如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// scripts/rollup/react-dom.config.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getPackageJSON<span class="token punctuation">,</span> resolvePkgPath<span class="token punctuation">,</span> getBaseRollupPlugins <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./utils&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> generatePackageJson <span class="token keyword">from</span> <span class="token string">&#39;rollup-plugin-generate-package-json&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> alias <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-alias&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> module<span class="token punctuation">,</span> peerDependencies <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getPackageJSON</span><span class="token punctuation">(</span><span class="token string">&#39;react-dom&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// react-dom 包的路径</span>
<span class="token keyword">const</span> pkgPath <span class="token operator">=</span> <span class="token function">resolvePkgPath</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// react-dom 包的产物路径</span>
<span class="token keyword">const</span> pkgDistPath <span class="token operator">=</span> <span class="token function">resolvePkgPath</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>
	<span class="token comment">// react-dom</span>
	<span class="token punctuation">{</span>
		<span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>pkgPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>module<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
		<span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">[</span>
			<span class="token punctuation">{</span>
				<span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>pkgDistPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/index.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
				<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ReactDOM&#39;</span><span class="token punctuation">,</span>
				<span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;umd&#39;</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token punctuation">{</span>
				<span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>pkgDistPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/client.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
				<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;client&#39;</span><span class="token punctuation">,</span>
				<span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;umd&#39;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token literal-property property">external</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>peerDependencies<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
			<span class="token operator">...</span><span class="token function">getBaseRollupPlugins</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token comment">// webpack resolve alias</span>
			<span class="token function">alias</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
				<span class="token literal-property property">entries</span><span class="token operator">:</span> <span class="token punctuation">{</span>
					<span class="token literal-property property">hostConfig</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>pkgPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/src/hostConfig.ts</span><span class="token template-punctuation string">\`</span></span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token function">generatePackageJson</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
				<span class="token literal-property property">inputFolder</span><span class="token operator">:</span> pkgPath<span class="token punctuation">,</span>
				<span class="token literal-property property">outputFolder</span><span class="token operator">:</span> pkgDistPath<span class="token punctuation">,</span>
				<span class="token function-variable function">baseContents</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> name<span class="token punctuation">,</span> description<span class="token punctuation">,</span> version <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
					name<span class="token punctuation">,</span>
					description<span class="token punctuation">,</span>
					version<span class="token punctuation">,</span>
					<span class="token literal-property property">peerDependencies</span><span class="token operator">:</span> <span class="token punctuation">{</span>
						<span class="token literal-property property">react</span><span class="token operator">:</span> version
					<span class="token punctuation">}</span><span class="token punctuation">,</span>
					<span class="token literal-property property">main</span><span class="token operator">:</span> <span class="token string">&#39;index.js&#39;</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">]</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再将 <code>tsconfig.json</code> 中的 <code>hostConfig</code> 指向 <code>react-dom</code> 包中的路径；</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// tsconfig.json</span>
<span class="token punctuation">{</span>
	<span class="token comment">// ...</span>
	<span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;hostConfig&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./react-dom/src/hostConfig.ts&quot;</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，为了在执行 <code>npm run build-dev</code> 时能同时将 <code>react</code> 和 <code>react-dom</code> 都打包，我们新建一个 <code>dev.config.js</code> 文件，将 <code>react.config.js</code> 和 <code>react-dom.config.js</code> 统一导出。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// scripts/rollup/dev.config.js</span>
<span class="token keyword">import</span> reactDomConfig <span class="token keyword">from</span> <span class="token string">&#39;./react-dom.config&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> reactConfig <span class="token keyword">from</span> <span class="token string">&#39;./react.config&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span><span class="token operator">...</span>reactConfig<span class="token punctuation">,</span> <span class="token operator">...</span>reactDomConfig<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>并将 <code>package.json</code> 中的 <code>npm run build-dev</code> 命令改为：<code>&quot;rimraf dist &amp;&amp; rollup --config scripts/rollup/dev.config.js --bundleConfigAsCjs&quot;</code>。</p><p>现在运行 <code>npm run build-dev</code> 就可以得到 <code>react</code> 和 <code>react-dom</code> 的打包产物了。通过 <code>pnpm lint --global</code> 或者 <code>npm run demo</code> 可在测试项目中运行你自己开发的 <code>react</code> 包和 <code>react-dom</code> 包。</p><hr><p>至此，我们就实现了基础版的 <code>react-dom</code> 包，更多的功能我们将在后面一一实现。</p>`,11),w=n("code",null,"git tag v1.7",-1),q={href:"https://github.com/2xiao/my-react/tree/v1.7",target:"_blank",rel:"noopener noreferrer"};function _(C,x){const t=e("ExternalLinkIcon"),o=e("RouterLink");return i(),l("div",null,[d,n("div",k,[v,m,n("p",null,[s("相关代码可在 "),n("a",b,[g,a(t)]),s(" 查看")])]),h,n("p",null,[s("接着来实现 "),y,s(" 包的打包流程，具体过程参考 "),a(o,{to:"/my-react/2.html"},{default:r(()=>[s("第 2 节")]),_:1}),s("，需要注意两点：")]),f,n("p",null,[s("相关代码可在 "),w,s(" 查看，地址："),n("a",q,[s("https://github.com/2xiao/my-react/tree/v1.7"),a(t)])])])}const R=c(u,[["render",_],["__file","7.html.vue"]]);export{R as default};
