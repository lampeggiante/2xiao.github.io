import{_,r as c,o as i,c as a,a as t,d as e,w as l,b as o,f as r}from"./app-mvY9N9Pc.js";const h={},u=t("h1",{id:"单调栈",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#单调栈","aria-hidden":"true"},"#"),o(" 单调栈")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("span",{class:"blue"},"单调栈",-1),I=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),H=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),j=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),V=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),E=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),O=t("code",null,"拓扑排序",-1),C=t("code",null,"最短路",-1),K=t("code",null,"强连通分量",-1),Q=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),A=t("code",null,"并查集",-1),P=t("code",null,"字典树",-1),S=t("code",null,"线段树",-1),T=t("code",null,"树状数组",-1),X=t("code",null,"后缀数组",-1),Y=t("p",null,[t("strong",null,"算法")],-1),D=t("code",null,"枚举",-1),F=t("code",null,"递归",-1),G=t("code",null,"分治",-1),J=t("code",null,"回溯",-1),U=t("code",null,"贪心",-1),W=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),It=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),Ht=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),jt=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),Vt=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Et=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Ot=t("hr",null,null,-1),Ct=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Kt=t("td",{style:{"text-align":"center"}},"42",-1),Qt={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},At={style:{"text-align":"center"}},Pt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0042",target:"_blank",rel:"noopener noreferrer"},St={style:{"text-align":"left"}},Tt=t("code",null,"栈",-1),Xt=t("code",null,"数组",-1),Yt=t("code",null,"双指针",-1),Dt=t("code",null,"2+",-1),Ft={style:{"text-align":"left"}},Gt=t("td",{style:{"text-align":"center"}},"84",-1),Jt={style:{"text-align":"left"}},Ut={href:"https://leetcode.com/problems/largest-rectangle-in-histogram",target:"_blank",rel:"noopener noreferrer"},Wt={style:{"text-align":"center"}},Zt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0084",target:"_blank",rel:"noopener noreferrer"},$t={style:{"text-align":"left"}},te=t("code",null,"栈",-1),ee=t("code",null,"数组",-1),oe=t("code",null,"单调栈",-1),le={style:{"text-align":"left"}},ne=t("td",{style:{"text-align":"center"}},"85",-1),se={style:{"text-align":"left"}},de={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},ce={style:{"text-align":"center"}},_e={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0085",target:"_blank",rel:"noopener noreferrer"},ie={style:{"text-align":"left"}},ae=t("code",null,"栈",-1),re=t("code",null,"数组",-1),he=t("code",null,"动态规划",-1),ue=t("code",null,"2+",-1),fe={style:{"text-align":"left"}},ge=t("td",{style:{"text-align":"center"}},"255",-1),me={style:{"text-align":"left"}},ye={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},xe=t("td",{style:{"text-align":"center"}},null,-1),be={style:{"text-align":"left"}},pe=t("code",null,"栈",-1),ke=t("code",null,"树",-1),Me=t("code",null,"二叉搜索树",-1),Ie=t("code",null,"4+",-1),ve={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"316",-1),we={style:{"text-align":"left"}},je={href:"https://leetcode.com/problems/remove-duplicate-letters",target:"_blank",rel:"noopener noreferrer"},qe={style:{"text-align":"center"}},Ve={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0316",target:"_blank",rel:"noopener noreferrer"},ze={style:{"text-align":"left"}},Ee=t("code",null,"栈",-1),Le=t("code",null,"贪心",-1),Be=t("code",null,"字符串",-1),Ne=t("code",null,"1+",-1),Oe={style:{"text-align":"left"}},Ce=t("td",{style:{"text-align":"center"}},"321",-1),Ke={style:{"text-align":"left"}},Qe={href:"https://leetcode.com/problems/create-maximum-number",target:"_blank",rel:"noopener noreferrer"},Re=t("td",{style:{"text-align":"center"}},null,-1),Ae={style:{"text-align":"left"}},Pe=t("code",null,"栈",-1),Se=t("code",null,"贪心",-1),Te=t("code",null,"数组",-1),Xe=t("code",null,"2+",-1),Ye={style:{"text-align":"left"}},De=t("td",{style:{"text-align":"center"}},"402",-1),Fe={style:{"text-align":"left"}},Ge={href:"https://leetcode.com/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},Je=t("td",{style:{"text-align":"center"}},null,-1),Ue={style:{"text-align":"left"}},We=t("code",null,"栈",-1),Ze=t("code",null,"贪心",-1),$e=t("code",null,"字符串",-1),to=t("code",null,"1+",-1),eo={style:{"text-align":"left"}},oo=t("td",{style:{"text-align":"center"}},"456",-1),lo={style:{"text-align":"left"}},no={href:"https://leetcode.com/problems/132-pattern",target:"_blank",rel:"noopener noreferrer"},so=t("td",{style:{"text-align":"center"}},null,-1),co={style:{"text-align":"left"}},_o=t("code",null,"栈",-1),io=t("code",null,"数组",-1),ao=t("code",null,"二分查找",-1),ro=t("code",null,"2+",-1),ho={style:{"text-align":"left"}},uo=t("td",{style:{"text-align":"center"}},"496",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},mo={style:{"text-align":"center"}},yo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0496",target:"_blank",rel:"noopener noreferrer"},xo={style:{"text-align":"left"}},bo=t("code",null,"栈",-1),po=t("code",null,"数组",-1),ko=t("code",null,"哈希表",-1),Mo=t("code",null,"1+",-1),Io={style:{"text-align":"left"}},vo=t("td",{style:{"text-align":"center"}},"503",-1),Ho={style:{"text-align":"left"}},wo={href:"https://leetcode.com/problems/next-greater-element-ii",target:"_blank",rel:"noopener noreferrer"},jo={style:{"text-align":"center"}},qo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0503",target:"_blank",rel:"noopener noreferrer"},Vo={style:{"text-align":"left"}},zo=t("code",null,"栈",-1),Eo=t("code",null,"数组",-1),Lo=t("code",null,"单调栈",-1),Bo={style:{"text-align":"left"}},No=t("td",{style:{"text-align":"center"}},"581",-1),Oo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/shortest-unsorted-continuous-subarray",target:"_blank",rel:"noopener noreferrer"},Ko=t("td",{style:{"text-align":"center"}},null,-1),Qo={style:{"text-align":"left"}},Ro=t("code",null,"栈",-1),Ao=t("code",null,"贪心",-1),Po=t("code",null,"数组",-1),So=t("code",null,"3+",-1),To={style:{"text-align":"left"}},Xo=t("td",{style:{"text-align":"center"}},"654",-1),Yo={style:{"text-align":"left"}},Do={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Fo={style:{"text-align":"center"}},Go={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0654",target:"_blank",rel:"noopener noreferrer"},Jo={style:{"text-align":"left"}},Uo=t("code",null,"栈",-1),Wo=t("code",null,"树",-1),Zo=t("code",null,"数组",-1),$o=t("code",null,"3+",-1),tl={style:{"text-align":"left"}},el=t("td",{style:{"text-align":"center"}},"739",-1),ol={style:{"text-align":"left"}},ll={href:"https://leetcode.com/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},nl={style:{"text-align":"center"}},sl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0739",target:"_blank",rel:"noopener noreferrer"},dl={style:{"text-align":"left"}},cl=t("code",null,"栈",-1),_l=t("code",null,"数组",-1),il=t("code",null,"单调栈",-1),al={style:{"text-align":"left"}},rl=t("td",{style:{"text-align":"center"}},"768",-1),hl={style:{"text-align":"left"}},ul={href:"https://leetcode.com/problems/max-chunks-to-make-sorted-ii",target:"_blank",rel:"noopener noreferrer"},fl=t("td",{style:{"text-align":"center"}},null,-1),gl={style:{"text-align":"left"}},ml=t("code",null,"栈",-1),yl=t("code",null,"贪心",-1),xl=t("code",null,"数组",-1),bl=t("code",null,"2+",-1),pl={style:{"text-align":"left"}},kl=t("td",{style:{"text-align":"center"}},"769",-1),Ml={style:{"text-align":"left"}},Il={href:"https://leetcode.com/problems/max-chunks-to-make-sorted",target:"_blank",rel:"noopener noreferrer"},vl=t("td",{style:{"text-align":"center"}},null,-1),Hl={style:{"text-align":"left"}},wl=t("code",null,"栈",-1),jl=t("code",null,"贪心",-1),ql=t("code",null,"数组",-1),Vl=t("code",null,"2+",-1),zl={style:{"text-align":"left"}},El=t("td",{style:{"text-align":"center"}},"853",-1),Ll={style:{"text-align":"left"}},Bl={href:"https://leetcode.com/problems/car-fleet",target:"_blank",rel:"noopener noreferrer"},Nl=t("td",{style:{"text-align":"center"}},null,-1),Ol={style:{"text-align":"left"}},Cl=t("code",null,"栈",-1),Kl=t("code",null,"数组",-1),Ql=t("code",null,"排序",-1),Rl=t("code",null,"1+",-1),Al={style:{"text-align":"left"}},Pl=t("td",{style:{"text-align":"center"}},"901",-1),Sl={style:{"text-align":"left"}},Tl={href:"https://leetcode.com/problems/online-stock-span",target:"_blank",rel:"noopener noreferrer"},Xl=t("td",{style:{"text-align":"center"}},null,-1),Yl={style:{"text-align":"left"}},Dl=t("code",null,"栈",-1),Fl=t("code",null,"设计",-1),Gl=t("code",null,"数据流",-1),Jl=t("code",null,"1+",-1),Ul={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"907",-1),Zl={style:{"text-align":"left"}},$l={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},tn=t("td",{style:{"text-align":"center"}},null,-1),en={style:{"text-align":"left"}},on=t("code",null,"栈",-1),ln=t("code",null,"数组",-1),nn=t("code",null,"动态规划",-1),sn=t("code",null,"1+",-1),dn={style:{"text-align":"left"}},cn=t("td",{style:{"text-align":"center"}},"962",-1),_n={style:{"text-align":"left"}},an={href:"https://leetcode.com/problems/maximum-width-ramp",target:"_blank",rel:"noopener noreferrer"},rn={style:{"text-align":"center"}},hn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0962",target:"_blank",rel:"noopener noreferrer"},un={style:{"text-align":"left"}},fn=t("code",null,"栈",-1),gn=t("code",null,"数组",-1),mn=t("code",null,"单调栈",-1),yn={style:{"text-align":"left"}},xn=t("td",{style:{"text-align":"center"}},"975",-1),bn={style:{"text-align":"left"}},pn={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},kn=t("td",{style:{"text-align":"center"}},null,-1),Mn={style:{"text-align":"left"}},In=t("code",null,"栈",-1),vn=t("code",null,"数组",-1),Hn=t("code",null,"动态规划",-1),wn=t("code",null,"2+",-1),jn={style:{"text-align":"left"}},qn=t("td",{style:{"text-align":"center"}},"1008",-1),Vn={style:{"text-align":"left"}},zn={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},En={style:{"text-align":"center"}},Ln={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1008",target:"_blank",rel:"noopener noreferrer"},Bn={style:{"text-align":"left"}},Nn=t("code",null,"栈",-1),On=t("code",null,"树",-1),Cn=t("code",null,"二叉搜索树",-1),Kn=t("code",null,"3+",-1),Qn={style:{"text-align":"left"}},Rn=t("td",{style:{"text-align":"center"}},"1019",-1),An={style:{"text-align":"left"}},Pn={href:"https://leetcode.com/problems/next-greater-node-in-linked-list",target:"_blank",rel:"noopener noreferrer"},Sn=t("td",{style:{"text-align":"center"}},null,-1),Tn={style:{"text-align":"left"}},Xn=t("code",null,"栈",-1),Yn=t("code",null,"数组",-1),Dn=t("code",null,"链表",-1),Fn=t("code",null,"1+",-1),Gn={style:{"text-align":"left"}},Jn=t("td",{style:{"text-align":"center"}},"1063",-1),Un={style:{"text-align":"left"}},Wn={href:"https://leetcode.com/problems/number-of-valid-subarrays",target:"_blank",rel:"noopener noreferrer"},Zn=t("td",{style:{"text-align":"center"}},null,-1),$n={style:{"text-align":"left"}},ts=t("code",null,"栈",-1),es=t("code",null,"数组",-1),os=t("code",null,"单调栈",-1),ls={style:{"text-align":"left"}},ns=t("td",{style:{"text-align":"center"}},"1081",-1),ss={style:{"text-align":"left"}},ds={href:"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters",target:"_blank",rel:"noopener noreferrer"},cs={style:{"text-align":"center"}},_s={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1081",target:"_blank",rel:"noopener noreferrer"},is={style:{"text-align":"left"}},as=t("code",null,"栈",-1),rs=t("code",null,"贪心",-1),hs=t("code",null,"字符串",-1),us=t("code",null,"1+",-1),fs={style:{"text-align":"left"}},gs=t("td",{style:{"text-align":"center"}},"1124",-1),ms={style:{"text-align":"left"}},ys={href:"https://leetcode.com/problems/longest-well-performing-interval",target:"_blank",rel:"noopener noreferrer"},xs=t("td",{style:{"text-align":"center"}},null,-1),bs={style:{"text-align":"left"}},ps=t("code",null,"栈",-1),ks=t("code",null,"数组",-1),Ms=t("code",null,"哈希表",-1),Is=t("code",null,"2+",-1),vs={style:{"text-align":"left"}},Hs=t("td",{style:{"text-align":"center"}},"1130",-1),ws={style:{"text-align":"left"}},js={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},qs=t("td",{style:{"text-align":"center"}},null,-1),Vs={style:{"text-align":"left"}},zs=t("code",null,"栈",-1),Es=t("code",null,"贪心",-1),Ls=t("code",null,"数组",-1),Bs=t("code",null,"2+",-1),Ns={style:{"text-align":"left"}},Os=t("td",{style:{"text-align":"center"}},"1475",-1),Cs={style:{"text-align":"left"}},Ks={href:"https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop",target:"_blank",rel:"noopener noreferrer"},Qs={style:{"text-align":"center"}},Rs={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1475",target:"_blank",rel:"noopener noreferrer"},As={style:{"text-align":"left"}},Ps=t("code",null,"栈",-1),Ss=t("code",null,"数组",-1),Ts=t("code",null,"单调栈",-1),Xs={style:{"text-align":"left"}},Ys=t("td",{style:{"text-align":"center"}},"1504",-1),Ds={style:{"text-align":"left"}},Fs={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},Gs=t("td",{style:{"text-align":"center"}},null,-1),Js={style:{"text-align":"left"}},Us=t("code",null,"栈",-1),Ws=t("code",null,"数组",-1),Zs=t("code",null,"动态规划",-1),$s=t("code",null,"2+",-1),td={style:{"text-align":"left"}},ed=t("td",{style:{"text-align":"center"}},"1526",-1),od={style:{"text-align":"left"}},ld={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},nd=t("td",{style:{"text-align":"center"}},null,-1),sd={style:{"text-align":"left"}},dd=t("code",null,"栈",-1),cd=t("code",null,"贪心",-1),_d=t("code",null,"数组",-1),id=t("code",null,"2+",-1),ad={style:{"text-align":"left"}},rd=t("td",{style:{"text-align":"center"}},"1574",-1),hd={style:{"text-align":"left"}},ud={href:"https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted",target:"_blank",rel:"noopener noreferrer"},fd=t("td",{style:{"text-align":"center"}},null,-1),gd={style:{"text-align":"left"}},md=t("code",null,"栈",-1),yd=t("code",null,"数组",-1),xd=t("code",null,"双指针",-1),bd=t("code",null,"2+",-1),pd={style:{"text-align":"left"}},kd=t("td",{style:{"text-align":"center"}},"1673",-1),Md={style:{"text-align":"left"}},Id={href:"https://leetcode.com/problems/find-the-most-competitive-subsequence",target:"_blank",rel:"noopener noreferrer"},vd=t("td",{style:{"text-align":"center"}},null,-1),Hd={style:{"text-align":"left"}},wd=t("code",null,"栈",-1),jd=t("code",null,"贪心",-1),qd=t("code",null,"数组",-1),Vd=t("code",null,"1+",-1),zd={style:{"text-align":"left"}},Ed=t("td",{style:{"text-align":"center"}},"1762",-1),Ld={style:{"text-align":"left"}},Bd={href:"https://leetcode.com/problems/buildings-with-an-ocean-view",target:"_blank",rel:"noopener noreferrer"},Nd=t("td",{style:{"text-align":"center"}},null,-1),Od={style:{"text-align":"left"}},Cd=t("code",null,"栈",-1),Kd=t("code",null,"数组",-1),Qd=t("code",null,"单调栈",-1),Rd={style:{"text-align":"left"}},Ad=t("td",{style:{"text-align":"center"}},"1776",-1),Pd={style:{"text-align":"left"}},Sd={href:"https://leetcode.com/problems/car-fleet-ii",target:"_blank",rel:"noopener noreferrer"},Td=t("td",{style:{"text-align":"center"}},null,-1),Xd={style:{"text-align":"left"}},Yd=t("code",null,"栈",-1),Dd=t("code",null,"数组",-1),Fd=t("code",null,"数学",-1),Gd=t("code",null,"2+",-1),Jd={style:{"text-align":"left"}},Ud=t("td",{style:{"text-align":"center"}},"1793",-1),Wd={style:{"text-align":"left"}},Zd={href:"https://leetcode.com/problems/maximum-score-of-a-good-subarray",target:"_blank",rel:"noopener noreferrer"},$d=t("td",{style:{"text-align":"center"}},null,-1),tc={style:{"text-align":"left"}},ec=t("code",null,"栈",-1),oc=t("code",null,"数组",-1),lc=t("code",null,"双指针",-1),nc=t("code",null,"2+",-1),sc={style:{"text-align":"left"}},dc=t("td",{style:{"text-align":"center"}},"1856",-1),cc={style:{"text-align":"left"}},_c={href:"https://leetcode.com/problems/maximum-subarray-min-product",target:"_blank",rel:"noopener noreferrer"},ic=t("td",{style:{"text-align":"center"}},null,-1),ac={style:{"text-align":"left"}},rc=t("code",null,"栈",-1),hc=t("code",null,"数组",-1),uc=t("code",null,"前缀和",-1),fc=t("code",null,"1+",-1),gc={style:{"text-align":"left"}},mc=t("td",{style:{"text-align":"center"}},"1944",-1),yc={style:{"text-align":"left"}},xc={href:"https://leetcode.com/problems/number-of-visible-people-in-a-queue",target:"_blank",rel:"noopener noreferrer"},bc=t("td",{style:{"text-align":"center"}},null,-1),pc={style:{"text-align":"left"}},kc=t("code",null,"栈",-1),Mc=t("code",null,"数组",-1),Ic=t("code",null,"单调栈",-1),vc={style:{"text-align":"left"}},Hc=t("td",{style:{"text-align":"center"}},"1950",-1),wc={style:{"text-align":"left"}},jc={href:"https://leetcode.com/problems/maximum-of-minimum-values-in-all-subarrays",target:"_blank",rel:"noopener noreferrer"},qc=t("td",{style:{"text-align":"center"}},null,-1),Vc={style:{"text-align":"left"}},zc=t("code",null,"栈",-1),Ec=t("code",null,"数组",-1),Lc=t("code",null,"单调栈",-1),Bc={style:{"text-align":"left"}},Nc=t("td",{style:{"text-align":"center"}},"1996",-1),Oc={style:{"text-align":"left"}},Cc={href:"https://leetcode.com/problems/the-number-of-weak-characters-in-the-game",target:"_blank",rel:"noopener noreferrer"},Kc=t("td",{style:{"text-align":"center"}},null,-1),Qc={style:{"text-align":"left"}},Rc=t("code",null,"栈",-1),Ac=t("code",null,"贪心",-1),Pc=t("code",null,"数组",-1),Sc=t("code",null,"2+",-1),Tc={style:{"text-align":"left"}},Xc=t("td",{style:{"text-align":"center"}},"2030",-1),Yc={style:{"text-align":"left"}},Dc={href:"https://leetcode.com/problems/smallest-k-length-subsequence-with-occurrences-of-a-letter",target:"_blank",rel:"noopener noreferrer"},Fc=t("td",{style:{"text-align":"center"}},null,-1),Gc={style:{"text-align":"left"}},Jc=t("code",null,"栈",-1),Uc=t("code",null,"贪心",-1),Wc=t("code",null,"字符串",-1),Zc=t("code",null,"1+",-1),$c={style:{"text-align":"left"}},t_=t("td",{style:{"text-align":"center"}},"2104",-1),e_={style:{"text-align":"left"}},o_={href:"https://leetcode.com/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},l_=t("td",{style:{"text-align":"center"}},null,-1),n_={style:{"text-align":"left"}},s_=t("code",null,"栈",-1),d_=t("code",null,"数组",-1),c_=t("code",null,"单调栈",-1),__={style:{"text-align":"left"}},i_=t("td",{style:{"text-align":"center"}},"2281",-1),a_={style:{"text-align":"left"}},r_={href:"https://leetcode.com/problems/sum-of-total-strength-of-wizards",target:"_blank",rel:"noopener noreferrer"},h_=t("td",{style:{"text-align":"center"}},null,-1),u_={style:{"text-align":"left"}},f_=t("code",null,"栈",-1),g_=t("code",null,"数组",-1),m_=t("code",null,"前缀和",-1),y_=t("code",null,"1+",-1),x_={style:{"text-align":"left"}},b_=t("td",{style:{"text-align":"center"}},"2282",-1),p_={style:{"text-align":"left"}},k_={href:"https://leetcode.com/problems/number-of-people-that-can-be-seen-in-a-grid",target:"_blank",rel:"noopener noreferrer"},M_=t("td",{style:{"text-align":"center"}},null,-1),I_={style:{"text-align":"left"}},v_=t("code",null,"栈",-1),H_=t("code",null,"数组",-1),w_=t("code",null,"矩阵",-1),j_=t("code",null,"1+",-1),q_={style:{"text-align":"left"}},V_=t("td",{style:{"text-align":"center"}},"2289",-1),z_={style:{"text-align":"left"}},E_={href:"https://leetcode.com/problems/steps-to-make-array-non-decreasing",target:"_blank",rel:"noopener noreferrer"},L_=t("td",{style:{"text-align":"center"}},null,-1),B_={style:{"text-align":"left"}},N_=t("code",null,"栈",-1),O_=t("code",null,"数组",-1),C_=t("code",null,"链表",-1),K_=t("code",null,"1+",-1),Q_={style:{"text-align":"left"}},R_=t("td",{style:{"text-align":"center"}},"2297",-1),A_={style:{"text-align":"left"}},P_={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},S_=t("td",{style:{"text-align":"center"}},null,-1),T_={style:{"text-align":"left"}},X_=t("code",null,"栈",-1),Y_=t("code",null,"图",-1),D_=t("code",null,"数组",-1),F_=t("code",null,"3+",-1),G_={style:{"text-align":"left"}},J_=t("td",{style:{"text-align":"center"}},"2334",-1),U_={style:{"text-align":"left"}},W_={href:"https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},Z_=t("td",{style:{"text-align":"center"}},null,-1),$_={style:{"text-align":"left"}},ti=t("code",null,"栈",-1),ei=t("code",null,"并查集",-1),oi=t("code",null,"数组",-1),li=t("code",null,"1+",-1),ni={style:{"text-align":"left"}},si=t("td",{style:{"text-align":"center"}},"2345",-1),di={style:{"text-align":"left"}},ci={href:"https://leetcode.com/problems/finding-the-number-of-visible-mountains",target:"_blank",rel:"noopener noreferrer"},_i=t("td",{style:{"text-align":"center"}},null,-1),ii={style:{"text-align":"left"}},ai=t("code",null,"栈",-1),ri=t("code",null,"数组",-1),hi=t("code",null,"排序",-1),ui=t("code",null,"1+",-1),fi={style:{"text-align":"left"}},gi=t("td",{style:{"text-align":"center"}},"2355",-1),mi={style:{"text-align":"left"}},yi={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},xi=t("td",{style:{"text-align":"center"}},null,-1),bi={style:{"text-align":"left"}},pi=t("code",null,"栈",-1),ki=t("code",null,"数组",-1),Mi=t("code",null,"动态规划",-1),Ii=t("code",null,"1+",-1),vi={style:{"text-align":"left"}},Hi=t("td",{style:{"text-align":"center"}},"2454",-1),wi={style:{"text-align":"left"}},ji={href:"https://leetcode.com/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},qi=t("td",{style:{"text-align":"center"}},null,-1),Vi={style:{"text-align":"left"}},zi=t("code",null,"栈",-1),Ei=t("code",null,"数组",-1),Li=t("code",null,"二分查找",-1),Bi=t("code",null,"3+",-1),Ni={style:{"text-align":"left"}},Oi=t("td",{style:{"text-align":"center"}},"2487",-1),Ci={style:{"text-align":"left"}},Ki={href:"https://leetcode.com/problems/remove-nodes-from-linked-list",target:"_blank",rel:"noopener noreferrer"},Qi=t("td",{style:{"text-align":"center"}},null,-1),Ri={style:{"text-align":"left"}},Ai=t("code",null,"栈",-1),Pi=t("code",null,"递归",-1),Si=t("code",null,"链表",-1),Ti=t("code",null,"1+",-1),Xi={style:{"text-align":"left"}},Yi=t("td",{style:{"text-align":"center"}},"2617",-1),Di={style:{"text-align":"left"}},Fi={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Gi=t("td",{style:{"text-align":"center"}},null,-1),Ji={style:{"text-align":"left"}},Ui=t("code",null,"栈",-1),Wi=t("code",null,"广度优先搜索",-1),Zi=t("code",null,"并查集",-1),$i=t("code",null,"5+",-1),ta={style:{"text-align":"left"}},ea=t("td",{style:{"text-align":"center"}},"2736",-1),oa={style:{"text-align":"left"}},la={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},na=t("td",{style:{"text-align":"center"}},null,-1),sa={style:{"text-align":"left"}},da=t("code",null,"栈",-1),ca=t("code",null,"树状数组",-1),_a=t("code",null,"线段树",-1),ia=t("code",null,"4+",-1),aa={style:{"text-align":"left"}},ra=t("td",{style:{"text-align":"center"}},"2818",-1),ha={style:{"text-align":"left"}},ua={href:"https://leetcode.com/problems/apply-operations-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},fa=t("td",{style:{"text-align":"center"}},null,-1),ga={style:{"text-align":"left"}},ma=t("code",null,"栈",-1),ya=t("code",null,"贪心",-1),xa=t("code",null,"数组",-1),ba=t("code",null,"3+",-1),pa={style:{"text-align":"left"}},ka=t("td",{style:{"text-align":"center"}},"2832",-1),Ma={style:{"text-align":"left"}},Ia={href:"https://leetcode.com/problems/maximal-range-that-each-element-is-maximum-in-it",target:"_blank",rel:"noopener noreferrer"},va=t("td",{style:{"text-align":"center"}},null,-1),Ha={style:{"text-align":"left"}},wa=t("code",null,"栈",-1),ja=t("code",null,"数组",-1),qa=t("code",null,"单调栈",-1),Va={style:{"text-align":"left"}},za=t("td",{style:{"text-align":"center"}},"2863",-1),Ea={style:{"text-align":"left"}},La={href:"https://leetcode.com/problems/maximum-length-of-semi-decreasing-subarrays",target:"_blank",rel:"noopener noreferrer"},Ba=t("td",{style:{"text-align":"center"}},null,-1),Na={style:{"text-align":"left"}},Oa=t("code",null,"栈",-1),Ca=t("code",null,"数组",-1),Ka=t("code",null,"排序",-1),Qa=t("code",null,"1+",-1),Ra={style:{"text-align":"left"}},Aa=t("td",{style:{"text-align":"center"}},"2865",-1),Pa={style:{"text-align":"left"}},Sa={href:"https://leetcode.com/problems/beautiful-towers-i",target:"_blank",rel:"noopener noreferrer"},Ta=t("td",{style:{"text-align":"center"}},null,-1),Xa={style:{"text-align":"left"}},Ya=t("code",null,"栈",-1),Da=t("code",null,"数组",-1),Fa=t("code",null,"单调栈",-1),Ga={style:{"text-align":"left"}},Ja=t("td",{style:{"text-align":"center"}},"2866",-1),Ua={style:{"text-align":"left"}},Wa={href:"https://leetcode.com/problems/beautiful-towers-ii",target:"_blank",rel:"noopener noreferrer"},Za=t("td",{style:{"text-align":"center"}},null,-1),$a={style:{"text-align":"left"}},tr=t("code",null,"栈",-1),er=t("code",null,"数组",-1),or=t("code",null,"单调栈",-1),lr={style:{"text-align":"left"}},nr=t("td",{style:{"text-align":"center"}},"2940",-1),sr={style:{"text-align":"left"}},dr={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},cr=t("td",{style:{"text-align":"center"}},null,-1),_r={style:{"text-align":"left"}},ir=t("code",null,"栈",-1),ar=t("code",null,"树状数组",-1),rr=t("code",null,"线段树",-1),hr=t("code",null,"4+",-1),ur={style:{"text-align":"left"}},fr=t("td",{style:{"text-align":"center"}},"2945",-1),gr={style:{"text-align":"left"}},mr={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},yr=t("td",{style:{"text-align":"center"}},null,-1),xr={style:{"text-align":"left"}},br=t("code",null,"栈",-1),pr=t("code",null,"队列",-1),kr=t("code",null,"数组",-1),Mr=t("code",null,"4+",-1),Ir={style:{"text-align":"left"}},vr=t("td",{style:{"text-align":"center"}},"3113",-1),Hr={style:{"text-align":"left"}},wr={href:"https://leetcode.com/problems/find-the-number-of-subarrays-where-boundary-elements-are-maximum",target:"_blank",rel:"noopener noreferrer"},jr=t("td",{style:{"text-align":"center"}},null,-1),qr={style:{"text-align":"left"}},Vr=t("code",null,"栈",-1),zr=t("code",null,"数组",-1),Er=t("code",null,"二分查找",-1),Lr=t("code",null,"1+",-1),Br={style:{"text-align":"left"}},Nr=t("td",{style:{"text-align":"center"}},"3205",-1),Or={style:{"text-align":"left"}},Cr={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},Kr=t("td",{style:{"text-align":"center"}},null,-1),Qr={style:{"text-align":"left"}},Rr=t("code",null,"栈",-1),Ar=t("code",null,"贪心",-1),Pr=t("code",null,"数组",-1),Sr=t("code",null,"2+",-1),Tr={style:{"text-align":"left"}},Xr=t("td",{style:{"text-align":"center"}},"3221",-1),Yr={style:{"text-align":"left"}},Dr={href:"https://leetcode.com/problems/maximum-array-hopping-score-ii",target:"_blank",rel:"noopener noreferrer"},Fr=t("td",{style:{"text-align":"center"}},null,-1),Gr={style:{"text-align":"left"}},Jr=t("code",null,"栈",-1),Ur=t("code",null,"贪心",-1),Wr=t("code",null,"数组",-1),Zr=t("code",null,"1+",-1),$r={style:{"text-align":"left"}},th=t("td",{style:{"text-align":"center"}},"3229",-1),eh={style:{"text-align":"left"}},oh={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},lh=t("td",{style:{"text-align":"center"}},null,-1),nh={style:{"text-align":"left"}},sh=t("code",null,"栈",-1),dh=t("code",null,"贪心",-1),ch=t("code",null,"数组",-1),_h=t("code",null,"2+",-1),ih={style:{"text-align":"left"}},ah=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),rh={style:{"text-align":"left"}},hh={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},uh={style:{"text-align":"center"}},fh={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_33_1",target:"_blank",rel:"noopener noreferrer"},gh={style:{"text-align":"left"}},mh=t("code",null,"栈",-1),yh=t("code",null,"树",-1),xh=t("code",null,"二叉搜索树",-1),bh=t("code",null,"4+",-1),ph={style:{"text-align":"left"}},kh=t("td",{style:{"text-align":"center"}},"剑指 Offer II 38",-1),Mh={style:{"text-align":"left"}},Ih={href:"https://leetcode.cn/problems/iIQa4I",target:"_blank",rel:"noopener noreferrer"},vh=t("td",{style:{"text-align":"center"}},null,-1),Hh={style:{"text-align":"left"}},wh=t("code",null,"栈",-1),jh=t("code",null,"数组",-1),qh=t("code",null,"单调栈",-1),Vh={style:{"text-align":"left"}},zh=t("td",{style:{"text-align":"center"}},"剑指 Offer II 39",-1),Eh={style:{"text-align":"left"}},Lh={href:"https://leetcode.cn/problems/0ynMMM",target:"_blank",rel:"noopener noreferrer"},Bh=t("td",{style:{"text-align":"center"}},null,-1),Nh={style:{"text-align":"left"}},Oh=t("code",null,"栈",-1),Ch=t("code",null,"数组",-1),Kh=t("code",null,"单调栈",-1),Qh={style:{"text-align":"left"}},Rh=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),Ah={style:{"text-align":"left"}},Ph={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},Sh=t("td",{style:{"text-align":"center"}},null,-1),Th={style:{"text-align":"left"}},Xh=t("code",null,"栈",-1),Yh=t("code",null,"数组",-1),Dh=t("code",null,"动态规划",-1),Fh=t("code",null,"2+",-1),Gh={style:{"text-align":"left"}},Jh=t("td",{style:{"text-align":"center"}},"面试题 03.05",-1),Uh={style:{"text-align":"left"}},Wh={href:"https://leetcode.cn/problems/sort-of-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},Zh=t("td",{style:{"text-align":"center"}},null,-1),$h={style:{"text-align":"left"}},tu=t("code",null,"栈",-1),eu=t("code",null,"设计",-1),ou=t("code",null,"单调栈",-1),lu={style:{"text-align":"left"}},nu=t("td",{style:{"text-align":"center"}},"面试题 16.16",-1),su={style:{"text-align":"left"}},du={href:"https://leetcode.cn/problems/sub-sort-lcci",target:"_blank",rel:"noopener noreferrer"},cu=t("td",{style:{"text-align":"center"}},null,-1),_u={style:{"text-align":"left"}},iu=t("code",null,"栈",-1),au=t("code",null,"贪心",-1),ru=t("code",null,"数组",-1),hu=t("code",null,"3+",-1),uu={style:{"text-align":"left"}},fu=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),gu={style:{"text-align":"left"}},mu={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"},yu=t("td",{style:{"text-align":"center"}},null,-1),xu={style:{"text-align":"left"}},bu=t("code",null,"栈",-1),pu=t("code",null,"数组",-1),ku=t("code",null,"双指针",-1),Mu=t("code",null,"2+",-1),Iu={style:{"text-align":"left"}};function vu(Hu,wu){const n=c("RouterLink"),s=c("ExternalLinkIcon"),d=c("font");return i(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),M,o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[X]),_:1})]),Y,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[Bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Nt]),_:1})])]),Ot,r(" prettier-ignore "),t("table",null,[Ct,t("tbody",null,[t("tr",null,[Kt,t("td",Qt,[t("a",Rt,[o("接雨水"),e(s)])]),t("td",At,[t("a",Pt,[o("[✓]"),e(s)])]),t("td",St,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[Yt]),_:1}),o(),Dt]),t("td",Ft,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Gt,t("td",Jt,[t("a",Ut,[o("柱状图中最大的矩形"),e(s)])]),t("td",Wt,[t("a",Zt,[o("[✓]"),e(s)])]),t("td",$t,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[te]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ee]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[oe]),_:1})]),t("td",le,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ne,t("td",se,[t("a",de,[o("最大矩形"),e(s)])]),t("td",ce,[t("a",_e,[o("[✓]"),e(s)])]),t("td",ie,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[re]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[he]),_:1}),o(),ue]),t("td",fe,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ge,t("td",me,[t("a",ye,[o("验证二叉搜索树的前序遍历序列"),e(s)])]),xe,t("td",be,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[pe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ke]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Me]),_:1}),o(),Ie]),t("td",ve,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[He,t("td",we,[t("a",je,[o("去除重复字母"),e(s)])]),t("td",qe,[t("a",Ve,[o("[✓]"),e(s)])]),t("td",ze,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ee]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Le]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Be]),_:1}),o(),Ne]),t("td",Oe,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ce,t("td",Ke,[t("a",Qe,[o("拼接最大数"),e(s)])]),Re,t("td",Ae,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Pe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Se]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Te]),_:1}),o(),Xe]),t("td",Ye,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[De,t("td",Fe,[t("a",Ge,[o("移掉 K 位数字"),e(s)])]),Je,t("td",Ue,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[We]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Ze]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[$e]),_:1}),o(),to]),t("td",eo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[oo,t("td",lo,[t("a",no,[o("132 模式"),e(s)])]),so,t("td",co,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[_o]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[io]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[ao]),_:1}),o(),ro]),t("td",ho,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[uo,t("td",fo,[t("a",go,[o("下一个更大元素 I"),e(s)])]),t("td",mo,[t("a",yo,[o("[✓]"),e(s)])]),t("td",xo,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[bo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[po]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ko]),_:1}),o(),Mo]),t("td",Io,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[vo,t("td",Ho,[t("a",wo,[o("下一个更大元素 II"),e(s)])]),t("td",jo,[t("a",qo,[o("[✓]"),e(s)])]),t("td",Vo,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[zo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Eo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[Lo]),_:1})]),t("td",Bo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[No,t("td",Oo,[t("a",Co,[o("最短无序连续子数组"),e(s)])]),Ko,t("td",Qo,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ro]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Ao]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Po]),_:1}),o(),So]),t("td",To,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xo,t("td",Yo,[t("a",Do,[o("最大二叉树"),e(s)])]),t("td",Fo,[t("a",Go,[o("[✓]"),e(s)])]),t("td",Jo,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Uo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Wo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Zo]),_:1}),o(),$o]),t("td",tl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[el,t("td",ol,[t("a",ll,[o("每日温度"),e(s)])]),t("td",nl,[t("a",sl,[o("[✓]"),e(s)])]),t("td",dl,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[cl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[_l]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[il]),_:1})]),t("td",al,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[rl,t("td",hl,[t("a",ul,[o("最多能完成排序的块 II"),e(s)])]),fl,t("td",gl,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ml]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[yl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[xl]),_:1}),o(),bl]),t("td",pl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[kl,t("td",Ml,[t("a",Il,[o("最多能完成排序的块"),e(s)])]),vl,t("td",Hl,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[wl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[jl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ql]),_:1}),o(),Vl]),t("td",zl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[El,t("td",Ll,[t("a",Bl,[o("车队"),e(s)])]),Nl,t("td",Ol,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Cl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Kl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Ql]),_:1}),o(),Rl]),t("td",Al,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Pl,t("td",Sl,[t("a",Tl,[o("股票价格跨度"),e(s)])]),Xl,t("td",Yl,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Dl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Fl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[Gl]),_:1}),o(),Jl]),t("td",Ul,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wl,t("td",Zl,[t("a",$l,[o("子数组的最小值之和"),e(s)])]),tn,t("td",en,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[on]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ln]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[nn]),_:1}),o(),sn]),t("td",dn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[cn,t("td",_n,[t("a",an,[o("最大宽度坡"),e(s)])]),t("td",rn,[t("a",hn,[o("[✓]"),e(s)])]),t("td",un,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[fn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[gn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[mn]),_:1})]),t("td",yn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xn,t("td",bn,[t("a",pn,[o("奇偶跳"),e(s)])]),kn,t("td",Mn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[In]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[vn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Hn]),_:1}),o(),wn]),t("td",jn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[qn,t("td",Vn,[t("a",zn,[o("前序遍历构造二叉搜索树"),e(s)])]),t("td",En,[t("a",Ln,[o("[✓]"),e(s)])]),t("td",Bn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Nn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[On]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Cn]),_:1}),o(),Kn]),t("td",Qn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Rn,t("td",An,[t("a",Pn,[o("链表中的下一个更大节点"),e(s)])]),Sn,t("td",Tn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Xn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Yn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Dn]),_:1}),o(),Fn]),t("td",Gn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Jn,t("td",Un,[t("a",Wn,[o("有效子数组的数目"),e(s)])]),Zn,t("td",$n,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ts]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[es]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[os]),_:1})]),t("td",ls,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ns,t("td",ss,[t("a",ds,[o("不同字符的最小子序列"),e(s)])]),t("td",cs,[t("a",_s,[o("[✓]"),e(s)])]),t("td",is,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[as]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[rs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[hs]),_:1}),o(),us]),t("td",fs,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[gs,t("td",ms,[t("a",ys,[o("表现良好的最长时间段"),e(s)])]),xs,t("td",bs,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ps]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ks]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Ms]),_:1}),o(),Is]),t("td",vs,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Hs,t("td",ws,[t("a",js,[o("叶值的最小代价生成树"),e(s)])]),qs,t("td",Vs,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[zs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Es]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ls]),_:1}),o(),Bs]),t("td",Ns,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Os,t("td",Cs,[t("a",Ks,[o("商品折扣后的最终价格"),e(s)])]),t("td",Qs,[t("a",Rs,[o("[✓]"),e(s)])]),t("td",As,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ps]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ss]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[Ts]),_:1})]),t("td",Xs,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ys,t("td",Ds,[t("a",Fs,[o("统计全 1 子矩形"),e(s)])]),Gs,t("td",Js,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Us]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ws]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Zs]),_:1}),o(),$s]),t("td",td,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ed,t("td",od,[t("a",ld,[o("形成目标数组的子数组最少增加次数"),e(s)])]),nd,t("td",sd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[dd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[cd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[_d]),_:1}),o(),id]),t("td",ad,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[rd,t("td",hd,[t("a",ud,[o("删除最短的子数组使剩余数组有序"),e(s)])]),fd,t("td",gd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[md]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[yd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[xd]),_:1}),o(),bd]),t("td",pd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[kd,t("td",Md,[t("a",Id,[o("找出最具竞争力的子序列"),e(s)])]),vd,t("td",Hd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[wd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[jd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[qd]),_:1}),o(),Vd]),t("td",zd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ed,t("td",Ld,[t("a",Bd,[o("能看到海景的建筑物"),e(s)])]),Nd,t("td",Od,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Cd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Kd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[Qd]),_:1})]),t("td",Rd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ad,t("td",Pd,[t("a",Sd,[o("车队 II"),e(s)])]),Td,t("td",Xd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Yd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Dd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Fd]),_:1}),o(),Gd]),t("td",Jd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ud,t("td",Wd,[t("a",Zd,[o("好子数组的最大分数"),e(s)])]),$d,t("td",tc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ec]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[oc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[lc]),_:1}),o(),nc]),t("td",sc,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[dc,t("td",cc,[t("a",_c,[o("子数组最小乘积的最大值"),e(s)])]),ic,t("td",ac,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[rc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[uc]),_:1}),o(),fc]),t("td",gc,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[mc,t("td",yc,[t("a",xc,[o("队列中可以看到的人数"),e(s)])]),bc,t("td",pc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[kc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Mc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[Ic]),_:1})]),t("td",vc,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Hc,t("td",wc,[t("a",jc,[o("所有子数组最小值中的最大值"),e(s)])]),qc,t("td",Vc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[zc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ec]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[Lc]),_:1})]),t("td",Bc,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Nc,t("td",Oc,[t("a",Cc,[o("游戏中弱角色的数量"),e(s)])]),Kc,t("td",Qc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Rc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Ac]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Pc]),_:1}),o(),Sc]),t("td",Tc,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xc,t("td",Yc,[t("a",Dc,[o("含特定字母的最小子序列"),e(s)])]),Fc,t("td",Gc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Jc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Uc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Wc]),_:1}),o(),Zc]),t("td",$c,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[t_,t("td",e_,[t("a",o_,[o("子数组范围和"),e(s)])]),l_,t("td",n_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[s_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[d_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[c_]),_:1})]),t("td",__,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[i_,t("td",a_,[t("a",r_,[o("巫师的总力量和"),e(s)])]),h_,t("td",u_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[f_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[g_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[m_]),_:1}),o(),y_]),t("td",x_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[b_,t("td",p_,[t("a",k_,[o("在一个网格中可以看到的人数"),e(s)])]),M_,t("td",I_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[v_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[H_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[w_]),_:1}),o(),j_]),t("td",q_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[V_,t("td",z_,[t("a",E_,[o("使数组按非递减顺序排列"),e(s)])]),L_,t("td",B_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[N_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[O_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[C_]),_:1}),o(),K_]),t("td",Q_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[R_,t("td",A_,[t("a",P_,[o("跳跃游戏 VIII"),e(s)])]),S_,t("td",T_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[X_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Y_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[D_]),_:1}),o(),F_]),t("td",G_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[J_,t("td",U_,[t("a",W_,[o("元素值大于变化阈值的子数组"),e(s)])]),Z_,t("td",$_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ti]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[ei]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[oi]),_:1}),o(),li]),t("td",ni,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[si,t("td",di,[t("a",ci,[o("寻找可见山的数量"),e(s)])]),_i,t("td",ii,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ai]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ri]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[hi]),_:1}),o(),ui]),t("td",fi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[gi,t("td",mi,[t("a",yi,[o("你能拿走的最大图书数量"),e(s)])]),xi,t("td",bi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[pi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ki]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Mi]),_:1}),o(),Ii]),t("td",vi,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Hi,t("td",wi,[t("a",ji,[o("下一个更大元素 IV"),e(s)])]),qi,t("td",Vi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[zi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ei]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Li]),_:1}),o(),Bi]),t("td",Ni,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Oi,t("td",Ci,[t("a",Ki,[o("从链表中移除节点"),e(s)])]),Qi,t("td",Ri,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ai]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[Pi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Si]),_:1}),o(),Ti]),t("td",Xi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Yi,t("td",Di,[t("a",Fi,[o("网格图中最少访问的格子数"),e(s)])]),Gi,t("td",Ji,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ui]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Wi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[Zi]),_:1}),o(),$i]),t("td",ta,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ea,t("td",oa,[t("a",la,[o("最大和查询"),e(s)])]),na,t("td",sa,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[da]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[ca]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[_a]),_:1}),o(),ia]),t("td",aa,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ra,t("td",ha,[t("a",ua,[o("操作使得分最大"),e(s)])]),fa,t("td",ga,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ma]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[ya]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[xa]),_:1}),o(),ba]),t("td",pa,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ka,t("td",Ma,[t("a",Ia,[o("每个元素为最大值的最大范围"),e(s)])]),va,t("td",Ha,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[wa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ja]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[qa]),_:1})]),t("td",Va,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[za,t("td",Ea,[t("a",La,[o("最长半递减子数组的长度"),e(s)])]),Ba,t("td",Na,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Oa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ca]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Ka]),_:1}),o(),Qa]),t("td",Ra,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Aa,t("td",Pa,[t("a",Sa,[o("美丽塔 I"),e(s)])]),Ta,t("td",Xa,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Ya]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Da]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[Fa]),_:1})]),t("td",Ga,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ja,t("td",Ua,[t("a",Wa,[o("美丽塔 II"),e(s)])]),Za,t("td",$a,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[tr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[er]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[or]),_:1})]),t("td",lr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[nr,t("td",sr,[t("a",dr,[o("找到 Alice 和 Bob 可以相遇的建筑"),e(s)])]),cr,t("td",_r,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ir]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[ar]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[rr]),_:1}),o(),hr]),t("td",ur,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[fr,t("td",gr,[t("a",mr,[o("找到最大非递减数组的长度"),e(s)])]),yr,t("td",xr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[br]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[pr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[kr]),_:1}),o(),Mr]),t("td",Ir,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[vr,t("td",Hr,[t("a",wr,[o("边界元素是最大值的子数组数目"),e(s)])]),jr,t("td",qr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Vr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[zr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Er]),_:1}),o(),Lr]),t("td",Br,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Nr,t("td",Or,[t("a",Cr,[o("最大数组跳跃得分 I"),e(s)])]),Kr,t("td",Qr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Rr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Ar]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Pr]),_:1}),o(),Sr]),t("td",Tr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xr,t("td",Yr,[t("a",Dr,[o("最大数组跳跃得分 II"),e(s)])]),Fr,t("td",Gr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Jr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Ur]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Wr]),_:1}),o(),Zr]),t("td",$r,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[th,t("td",eh,[t("a",oh,[o("使数组等于目标数组所需的最少操作次数"),e(s)])]),lh,t("td",nh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[sh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[dh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ch]),_:1}),o(),_h]),t("td",ih,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ah,t("td",rh,[t("a",hh,[o("二叉搜索树的后序遍历序列"),e(s)])]),t("td",uh,[t("a",fh,[o("[✓]"),e(s)])]),t("td",gh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[mh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[yh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[xh]),_:1}),o(),bh]),t("td",ph,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[kh,t("td",Mh,[t("a",Ih,[o("每日温度"),e(s)])]),vh,t("td",Hh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[wh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[jh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[qh]),_:1})]),t("td",Vh,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zh,t("td",Eh,[t("a",Lh,[o("直方图最大矩形面积"),e(s)])]),Bh,t("td",Nh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Oh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ch]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[Kh]),_:1})]),t("td",Qh,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Rh,t("td",Ah,[t("a",Ph,[o("矩阵中最大的矩形"),e(s)])]),Sh,t("td",Th,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Xh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Yh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Dh]),_:1}),o(),Fh]),t("td",Gh,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Jh,t("td",Uh,[t("a",Wh,[o("栈排序"),e(s)])]),Zh,t("td",$h,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[tu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[eu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[ou]),_:1})]),t("td",lu,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[nu,t("td",su,[t("a",du,[o("部分排序"),e(s)])]),cu,t("td",_u,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[iu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[au]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ru]),_:1}),o(),hu]),t("td",uu,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fu,t("td",gu,[t("a",mu,[o("直方图的水量"),e(s)])]),yu,t("td",xu,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[bu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[pu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[ku]),_:1}),o(),Mu]),t("td",Iu,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])])])])])}const qu=_(h,[["render",vu],["__file","monotonic-stack.html.vue"]]);export{qu as default};
