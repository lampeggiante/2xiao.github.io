import{_ as c,r as _,o as i,c as a,a as t,d as e,w as o,b as l,f as r}from"./app-GnK0vSxb.js";const u={},h=t("h1",{id:"分治",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#分治","aria-hidden":"true"},"#"),l(" 分治")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),q=t("code",null,"单调栈",-1),v=t("code",null,"队列",-1),M=t("code",null,"单调队列",-1),z=t("code",null,"堆（优先队列）",-1),H=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),I=t("code",null,"字符串匹配",-1),E=t("code",null,"树",-1),K=t("code",null,"二叉树",-1),O=t("code",null,"二叉搜索树",-1),j=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),L=t("code",null,"拓扑排序",-1),N=t("code",null,"最短路",-1),V=t("code",null,"强连通分量",-1),R=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),W=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),S=t("code",null,"线段树",-1),X=t("code",null,"树状数组",-1),D=t("code",null,"后缀数组",-1),F=t("p",null,[t("strong",null,"算法")],-1),G=t("code",null,"枚举",-1),J=t("code",null,"递归",-1),P=t("span",{class:"blue"},"分治",-1),Q=t("code",null,"回溯",-1),U=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ut=t("code",null,"滑动窗口",-1),ht=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),qt=t("code",null,"模拟",-1),vt=t("code",null,"组合数学",-1),Mt=t("code",null,"随机化",-1),zt=t("code",null,"概率与统计",-1),Ht=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),It=t("code",null,"数据库",-1),Et=t("code",null,"设计",-1),Kt=t("code",null,"数据流",-1),Ot=t("code",null,"脑筋急转弯",-1),jt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Lt=t("hr",null,null,-1),Nt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Vt=t("td",{style:{"text-align":"center"}},"4",-1),Rt={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/median-of-two-sorted-arrays",target:"_blank",rel:"noopener noreferrer"},Wt={style:{"text-align":"center"}},At={style:{"text-align":"left"}},St=t("code",null,"数组",-1),Xt=t("code",null,"二分查找",-1),Dt=t("code",null,"分治",-1),Ft={style:{"text-align":"left"}},Gt=t("td",{style:{"text-align":"center"}},"23",-1),Jt={style:{"text-align":"left"}},Pt={href:"https://leetcode.com/problems/merge-k-sorted-lists",target:"_blank",rel:"noopener noreferrer"},Qt={style:{"text-align":"center"}},Ut={style:{"text-align":"left"}},Yt=t("code",null,"链表",-1),Zt=t("code",null,"分治",-1),$t=t("code",null,"堆（优先队列）",-1),te=t("code",null,"1+",-1),ee={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"53",-1),oe={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},de={style:{"text-align":"center"}},se={style:{"text-align":"left"}},_e=t("code",null,"数组",-1),ce=t("code",null,"分治",-1),ie=t("code",null,"动态规划",-1),ae={style:{"text-align":"left"}},re=t("td",{style:{"text-align":"center"}},"105",-1),ue={style:{"text-align":"left"}},he={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},fe={style:{"text-align":"center"}},ge={style:{"text-align":"left"}},me=t("code",null,"树",-1),ye=t("code",null,"数组",-1),xe=t("code",null,"哈希表",-1),be=t("code",null,"2+",-1),pe={style:{"text-align":"left"}},ke=t("td",{style:{"text-align":"center"}},"106",-1),qe={style:{"text-align":"left"}},ve={href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Me={style:{"text-align":"center"}},ze={style:{"text-align":"left"}},He=t("code",null,"树",-1),we=t("code",null,"数组",-1),Ie=t("code",null,"哈希表",-1),Ee=t("code",null,"2+",-1),Ke={style:{"text-align":"left"}},Oe=t("td",{style:{"text-align":"center"}},"108",-1),je={style:{"text-align":"left"}},Be={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ce={style:{"text-align":"center"}},Le={style:{"text-align":"left"}},Ne=t("code",null,"树",-1),Ve=t("code",null,"二叉搜索树",-1),Re=t("code",null,"数组",-1),Te=t("code",null,"2+",-1),We={style:{"text-align":"left"}},Ae=t("td",{style:{"text-align":"center"}},"109",-1),Se={style:{"text-align":"left"}},Xe={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},De={style:{"text-align":"center"}},Fe={style:{"text-align":"left"}},Ge=t("code",null,"树",-1),Je=t("code",null,"二叉搜索树",-1),Pe=t("code",null,"链表",-1),Qe=t("code",null,"2+",-1),Ue={style:{"text-align":"left"}},Ye=t("td",{style:{"text-align":"center"}},"148",-1),Ze={style:{"text-align":"left"}},$e={href:"https://leetcode.com/problems/sort-list",target:"_blank",rel:"noopener noreferrer"},tl={style:{"text-align":"center"}},el={style:{"text-align":"left"}},ll=t("code",null,"链表",-1),ol=t("code",null,"双指针",-1),nl=t("code",null,"分治",-1),dl=t("code",null,"2+",-1),sl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"169",-1),cl={style:{"text-align":"left"}},il={href:"https://leetcode.com/problems/majority-element",target:"_blank",rel:"noopener noreferrer"},al={style:{"text-align":"center"}},rl={style:{"text-align":"left"}},ul=t("code",null,"数组",-1),hl=t("code",null,"哈希表",-1),fl=t("code",null,"分治",-1),gl=t("code",null,"2+",-1),ml={style:{"text-align":"left"}},yl=t("td",{style:{"text-align":"center"}},"190",-1),xl={style:{"text-align":"left"}},bl={href:"https://leetcode.com/problems/reverse-bits",target:"_blank",rel:"noopener noreferrer"},pl={style:{"text-align":"center"}},kl={style:{"text-align":"left"}},ql=t("code",null,"位运算",-1),vl=t("code",null,"分治",-1),Ml={style:{"text-align":"left"}},zl=t("td",{style:{"text-align":"center"}},"191",-1),Hl={style:{"text-align":"left"}},wl={href:"https://leetcode.com/problems/number-of-1-bits",target:"_blank",rel:"noopener noreferrer"},Il={style:{"text-align":"center"}},El={style:{"text-align":"left"}},Kl=t("code",null,"位运算",-1),Ol=t("code",null,"分治",-1),jl={style:{"text-align":"left"}},Bl=t("td",{style:{"text-align":"center"}},"215",-1),Cl={style:{"text-align":"left"}},Ll={href:"https://leetcode.com/problems/kth-largest-element-in-an-array",target:"_blank",rel:"noopener noreferrer"},Nl={style:{"text-align":"center"}},Vl={style:{"text-align":"left"}},Rl=t("code",null,"数组",-1),Tl=t("code",null,"分治",-1),Wl=t("code",null,"快速选择",-1),Al=t("code",null,"2+",-1),Sl={style:{"text-align":"left"}},Xl=t("td",{style:{"text-align":"center"}},"218",-1),Dl={style:{"text-align":"left"}},Fl={href:"https://leetcode.com/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},Gl=t("td",{style:{"text-align":"center"}},null,-1),Jl={style:{"text-align":"left"}},Pl=t("code",null,"树状数组",-1),Ql=t("code",null,"线段树",-1),Ul=t("code",null,"数组",-1),Yl=t("code",null,"4+",-1),Zl={style:{"text-align":"left"}},$l=t("td",{style:{"text-align":"center"}},"240",-1),to={style:{"text-align":"left"}},eo={href:"https://leetcode.com/problems/search-a-2d-matrix-ii",target:"_blank",rel:"noopener noreferrer"},lo={style:{"text-align":"center"}},oo={style:{"text-align":"left"}},no=t("code",null,"数组",-1),so=t("code",null,"二分查找",-1),_o=t("code",null,"分治",-1),co=t("code",null,"1+",-1),io={style:{"text-align":"left"}},ao=t("td",{style:{"text-align":"center"}},"315",-1),ro={style:{"text-align":"left"}},uo={href:"https://leetcode.com/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},null,-1),fo={style:{"text-align":"left"}},go=t("code",null,"树状数组",-1),mo=t("code",null,"线段树",-1),yo=t("code",null,"数组",-1),xo=t("code",null,"4+",-1),bo={style:{"text-align":"left"}},po=t("td",{style:{"text-align":"center"}},"324",-1),ko={style:{"text-align":"left"}},qo={href:"https://leetcode.com/problems/wiggle-sort-ii",target:"_blank",rel:"noopener noreferrer"},vo=t("td",{style:{"text-align":"center"}},null,-1),Mo={style:{"text-align":"left"}},zo=t("code",null,"贪心",-1),Ho=t("code",null,"数组",-1),wo=t("code",null,"分治",-1),Io=t("code",null,"2+",-1),Eo={style:{"text-align":"left"}},Ko=t("td",{style:{"text-align":"center"}},"327",-1),Oo={style:{"text-align":"left"}},jo={href:"https://leetcode.com/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},null,-1),Co={style:{"text-align":"left"}},Lo=t("code",null,"树状数组",-1),No=t("code",null,"线段树",-1),Vo=t("code",null,"数组",-1),Ro=t("code",null,"4+",-1),To={style:{"text-align":"left"}},Wo=t("td",{style:{"text-align":"center"}},"347",-1),Ao={style:{"text-align":"left"}},So={href:"https://leetcode.com/problems/top-k-frequent-elements",target:"_blank",rel:"noopener noreferrer"},Xo={style:{"text-align":"center"}},Do={style:{"text-align":"left"}},Fo=t("code",null,"数组",-1),Go=t("code",null,"哈希表",-1),Jo=t("code",null,"分治",-1),Po=t("code",null,"5+",-1),Qo={style:{"text-align":"left"}},Uo=t("td",{style:{"text-align":"center"}},"372",-1),Yo={style:{"text-align":"left"}},Zo={href:"https://leetcode.com/problems/super-pow",target:"_blank",rel:"noopener noreferrer"},$o=t("td",{style:{"text-align":"center"}},null,-1),tn={style:{"text-align":"left"}},en=t("code",null,"数学",-1),ln=t("code",null,"分治",-1),on={style:{"text-align":"left"}},nn=t("td",{style:{"text-align":"center"}},"395",-1),dn={style:{"text-align":"left"}},sn={href:"https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters",target:"_blank",rel:"noopener noreferrer"},_n=t("td",{style:{"text-align":"center"}},null,-1),cn={style:{"text-align":"left"}},an=t("code",null,"哈希表",-1),rn=t("code",null,"字符串",-1),un=t("code",null,"分治",-1),hn=t("code",null,"1+",-1),fn={style:{"text-align":"left"}},gn=t("td",{style:{"text-align":"center"}},"427",-1),mn={style:{"text-align":"left"}},yn={href:"https://leetcode.com/problems/construct-quad-tree",target:"_blank",rel:"noopener noreferrer"},xn={style:{"text-align":"center"}},bn={style:{"text-align":"left"}},pn=t("code",null,"树",-1),kn=t("code",null,"数组",-1),qn=t("code",null,"分治",-1),vn=t("code",null,"1+",-1),Mn={style:{"text-align":"left"}},zn=t("td",{style:{"text-align":"center"}},"493",-1),Hn={style:{"text-align":"left"}},wn={href:"https://leetcode.com/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},In=t("td",{style:{"text-align":"center"}},null,-1),En={style:{"text-align":"left"}},Kn=t("code",null,"树状数组",-1),On=t("code",null,"线段树",-1),jn=t("code",null,"数组",-1),Bn=t("code",null,"4+",-1),Cn={style:{"text-align":"left"}},Ln=t("td",{style:{"text-align":"center"}},"558",-1),Nn={style:{"text-align":"left"}},Vn={href:"https://leetcode.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees",target:"_blank",rel:"noopener noreferrer"},Rn=t("td",{style:{"text-align":"center"}},null,-1),Tn={style:{"text-align":"left"}},Wn=t("code",null,"树",-1),An=t("code",null,"分治",-1),Sn={style:{"text-align":"left"}},Xn=t("td",{style:{"text-align":"center"}},"654",-1),Dn={style:{"text-align":"left"}},Fn={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Gn={style:{"text-align":"center"}},Jn={style:{"text-align":"left"}},Pn=t("code",null,"栈",-1),Qn=t("code",null,"树",-1),Un=t("code",null,"数组",-1),Yn=t("code",null,"3+",-1),Zn={style:{"text-align":"left"}},$n=t("td",{style:{"text-align":"center"}},"889",-1),td={style:{"text-align":"left"}},ed={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},ld={style:{"text-align":"center"}},od={style:{"text-align":"left"}},nd=t("code",null,"树",-1),dd=t("code",null,"数组",-1),sd=t("code",null,"哈希表",-1),_d=t("code",null,"2+",-1),cd={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"912",-1),ad={style:{"text-align":"left"}},rd={href:"https://leetcode.com/problems/sort-an-array",target:"_blank",rel:"noopener noreferrer"},ud=t("td",{style:{"text-align":"center"}},null,-1),hd={style:{"text-align":"left"}},fd=t("code",null,"数组",-1),gd=t("code",null,"分治",-1),md=t("code",null,"桶排序",-1),yd=t("code",null,"5+",-1),xd={style:{"text-align":"left"}},bd=t("td",{style:{"text-align":"center"}},"918",-1),pd={style:{"text-align":"left"}},kd={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},qd={style:{"text-align":"center"}},vd={style:{"text-align":"left"}},Md=t("code",null,"队列",-1),zd=t("code",null,"数组",-1),Hd=t("code",null,"分治",-1),wd=t("code",null,"2+",-1),Id={style:{"text-align":"left"}},Ed=t("td",{style:{"text-align":"center"}},"932",-1),Kd={style:{"text-align":"left"}},Od={href:"https://leetcode.com/problems/beautiful-array",target:"_blank",rel:"noopener noreferrer"},jd=t("td",{style:{"text-align":"center"}},null,-1),Bd={style:{"text-align":"left"}},Cd=t("code",null,"数组",-1),Ld=t("code",null,"数学",-1),Nd=t("code",null,"分治",-1),Vd={style:{"text-align":"left"}},Rd=t("td",{style:{"text-align":"center"}},"973",-1),Td={style:{"text-align":"left"}},Wd={href:"https://leetcode.com/problems/k-closest-points-to-origin",target:"_blank",rel:"noopener noreferrer"},Ad={style:{"text-align":"center"}},Sd={style:{"text-align":"left"}},Xd=t("code",null,"几何",-1),Dd=t("code",null,"数组",-1),Fd=t("code",null,"数学",-1),Gd=t("code",null,"4+",-1),Jd={style:{"text-align":"left"}},Pd=t("td",{style:{"text-align":"center"}},"1274",-1),Qd={style:{"text-align":"left"}},Ud={href:"https://leetcode.com/problems/number-of-ships-in-a-rectangle",target:"_blank",rel:"noopener noreferrer"},Yd=t("td",{style:{"text-align":"center"}},null,-1),Zd={style:{"text-align":"left"}},$d=t("code",null,"数组",-1),ts=t("code",null,"分治",-1),es=t("code",null,"交互",-1),ls={style:{"text-align":"left"}},os=t("td",{style:{"text-align":"center"}},"1382",-1),ns={style:{"text-align":"left"}},ds={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},ss=t("td",{style:{"text-align":"center"}},null,-1),_s={style:{"text-align":"left"}},cs=t("code",null,"贪心",-1),is=t("code",null,"树",-1),as=t("code",null,"深度优先搜索",-1),rs=t("code",null,"3+",-1),us={style:{"text-align":"left"}},hs=t("td",{style:{"text-align":"center"}},"1569",-1),fs={style:{"text-align":"left"}},gs={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},ms=t("td",{style:{"text-align":"center"}},null,-1),ys={style:{"text-align":"left"}},xs=t("code",null,"树",-1),bs=t("code",null,"并查集",-1),ps=t("code",null,"二叉搜索树",-1),ks=t("code",null,"7+",-1),qs={style:{"text-align":"left"}},vs=t("td",{style:{"text-align":"center"}},"1649",-1),Ms={style:{"text-align":"left"}},zs={href:"https://leetcode.com/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},Hs=t("td",{style:{"text-align":"center"}},null,-1),ws={style:{"text-align":"left"}},Is=t("code",null,"树状数组",-1),Es=t("code",null,"线段树",-1),Ks=t("code",null,"数组",-1),Os=t("code",null,"4+",-1),js={style:{"text-align":"left"}},Bs=t("td",{style:{"text-align":"center"}},"1738",-1),Cs={style:{"text-align":"left"}},Ls={href:"https://leetcode.com/problems/find-kth-largest-xor-coordinate-value",target:"_blank",rel:"noopener noreferrer"},Ns=t("td",{style:{"text-align":"center"}},null,-1),Vs={style:{"text-align":"left"}},Rs=t("code",null,"位运算",-1),Ts=t("code",null,"数组",-1),Ws=t("code",null,"分治",-1),As=t("code",null,"5+",-1),Ss={style:{"text-align":"left"}},Xs=t("td",{style:{"text-align":"center"}},"1763",-1),Ds={style:{"text-align":"left"}},Fs={href:"https://leetcode.com/problems/longest-nice-substring",target:"_blank",rel:"noopener noreferrer"},Gs=t("td",{style:{"text-align":"center"}},null,-1),Js={style:{"text-align":"left"}},Ps=t("code",null,"位运算",-1),Qs=t("code",null,"哈希表",-1),Us=t("code",null,"字符串",-1),Ys=t("code",null,"2+",-1),Zs={style:{"text-align":"left"}},$s=t("td",{style:{"text-align":"center"}},"1982",-1),t_={style:{"text-align":"left"}},e_={href:"https://leetcode.com/problems/find-array-given-subset-sums",target:"_blank",rel:"noopener noreferrer"},l_=t("td",{style:{"text-align":"center"}},null,-1),o_={style:{"text-align":"left"}},n_=t("code",null,"数组",-1),d_=t("code",null,"分治",-1),s_={style:{"text-align":"left"}},__=t("td",{style:{"text-align":"center"}},"1985",-1),c_={style:{"text-align":"left"}},i_={href:"https://leetcode.com/problems/find-the-kth-largest-integer-in-the-array",target:"_blank",rel:"noopener noreferrer"},a_=t("td",{style:{"text-align":"center"}},null,-1),r_={style:{"text-align":"left"}},u_=t("code",null,"数组",-1),h_=t("code",null,"字符串",-1),f_=t("code",null,"分治",-1),g_=t("code",null,"3+",-1),m_={style:{"text-align":"left"}},y_=t("td",{style:{"text-align":"center"}},"2031",-1),x_={style:{"text-align":"left"}},b_={href:"https://leetcode.com/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},p_=t("td",{style:{"text-align":"center"}},null,-1),k_={style:{"text-align":"left"}},q_=t("code",null,"树状数组",-1),v_=t("code",null,"线段树",-1),M_=t("code",null,"数组",-1),z_=t("code",null,"4+",-1),H_={style:{"text-align":"left"}},w_=t("td",{style:{"text-align":"center"}},"2179",-1),I_={style:{"text-align":"left"}},E_={href:"https://leetcode.com/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},K_=t("td",{style:{"text-align":"center"}},null,-1),O_={style:{"text-align":"left"}},j_=t("code",null,"树状数组",-1),B_=t("code",null,"线段树",-1),C_=t("code",null,"数组",-1),L_=t("code",null,"4+",-1),N_={style:{"text-align":"left"}},V_=t("td",{style:{"text-align":"center"}},"2343",-1),R_={style:{"text-align":"left"}},T_={href:"https://leetcode.com/problems/query-kth-smallest-trimmed-number",target:"_blank",rel:"noopener noreferrer"},W_=t("td",{style:{"text-align":"center"}},null,-1),A_={style:{"text-align":"left"}},S_=t("code",null,"数组",-1),X_=t("code",null,"字符串",-1),D_=t("code",null,"分治",-1),F_=t("code",null,"4+",-1),G_={style:{"text-align":"left"}},J_=t("td",{style:{"text-align":"center"}},"2407",-1),P_={style:{"text-align":"left"}},Q_={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},U_=t("td",{style:{"text-align":"center"}},null,-1),Y_={style:{"text-align":"left"}},Z_=t("code",null,"树状数组",-1),$_=t("code",null,"线段树",-1),tc=t("code",null,"队列",-1),ec=t("code",null,"4+",-1),lc={style:{"text-align":"left"}},oc=t("td",{style:{"text-align":"center"}},"2426",-1),nc={style:{"text-align":"left"}},dc={href:"https://leetcode.com/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},sc=t("td",{style:{"text-align":"center"}},null,-1),_c={style:{"text-align":"left"}},cc=t("code",null,"树状数组",-1),ic=t("code",null,"线段树",-1),ac=t("code",null,"数组",-1),rc=t("code",null,"4+",-1),uc={style:{"text-align":"left"}},hc=t("td",{style:{"text-align":"center"}},"2519",-1),fc={style:{"text-align":"left"}},gc={href:"https://leetcode.com/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},mc=t("td",{style:{"text-align":"center"}},null,-1),yc={style:{"text-align":"left"}},xc=t("code",null,"树状数组",-1),bc=t("code",null,"线段树",-1),pc=t("code",null,"数组",-1),kc=t("code",null,"4+",-1),qc={style:{"text-align":"left"}},vc=t("td",{style:{"text-align":"center"}},"2613",-1),Mc={style:{"text-align":"left"}},zc={href:"https://leetcode.com/problems/beautiful-pairs",target:"_blank",rel:"noopener noreferrer"},Hc=t("td",{style:{"text-align":"center"}},null,-1),wc={style:{"text-align":"left"}},Ic=t("code",null,"几何",-1),Ec=t("code",null,"数组",-1),Kc=t("code",null,"数学",-1),Oc=t("code",null,"3+",-1),jc={style:{"text-align":"left"}},Bc=t("td",{style:{"text-align":"center"}},"2792",-1),Cc={style:{"text-align":"left"}},Lc={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},Nc=t("td",{style:{"text-align":"center"}},null,-1),Vc={style:{"text-align":"left"}},Rc=t("code",null,"树",-1),Tc=t("code",null,"深度优先搜索",-1),Wc=t("code",null,"分治",-1),Ac=t("code",null,"1+",-1),Sc={style:{"text-align":"left"}},Xc=t("td",{style:{"text-align":"center"}},"3109",-1),Dc={style:{"text-align":"left"}},Fc={href:"https://leetcode.com/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},Gc=t("td",{style:{"text-align":"center"}},null,-1),Jc={style:{"text-align":"left"}},Pc=t("code",null,"树状数组",-1),Qc=t("code",null,"线段树",-1),Uc=t("code",null,"数组",-1),Yc=t("code",null,"4+",-1),Zc={style:{"text-align":"left"}},$c=t("td",{style:{"text-align":"center"}},"3165",-1),ti={style:{"text-align":"left"}},ei={href:"https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},li=t("td",{style:{"text-align":"center"}},null,-1),oi={style:{"text-align":"left"}},ni=t("code",null,"线段树",-1),di=t("code",null,"数组",-1),si=t("code",null,"分治",-1),_i=t("code",null,"1+",-1),ci={style:{"text-align":"left"}},ii=t("td",{style:{"text-align":"center"}},"剑指 Offer 04",-1),ai={style:{"text-align":"left"}},ri={href:"https://leetcode.cn/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof",target:"_blank",rel:"noopener noreferrer"},ui={style:{"text-align":"center"}},hi={style:{"text-align":"left"}},fi=t("code",null,"数组",-1),gi=t("code",null,"二分查找",-1),mi=t("code",null,"分治",-1),yi=t("code",null,"1+",-1),xi={style:{"text-align":"left"}},bi=t("td",{style:{"text-align":"center"}},"剑指 Offer 07",-1),pi={style:{"text-align":"left"}},ki={href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},qi={style:{"text-align":"center"}},vi={style:{"text-align":"left"}},Mi=t("code",null,"树",-1),zi=t("code",null,"数组",-1),Hi=t("code",null,"哈希表",-1),wi=t("code",null,"2+",-1),Ii={style:{"text-align":"left"}},Ei=t("td",{style:{"text-align":"center"}},"剑指 Offer 39",-1),Ki={style:{"text-align":"left"}},Oi={href:"https://leetcode.cn/problems/shu-zu-zhong-chu-xian-ci-shu-chao-guo-yi-ban-de-shu-zi-lcof",target:"_blank",rel:"noopener noreferrer"},ji={style:{"text-align":"center"}},Bi={style:{"text-align":"left"}},Ci=t("code",null,"数组",-1),Li=t("code",null,"哈希表",-1),Ni=t("code",null,"分治",-1),Vi=t("code",null,"2+",-1),Ri={style:{"text-align":"left"}},Ti=t("td",{style:{"text-align":"center"}},"剑指 Offer 40",-1),Wi={style:{"text-align":"left"}},Ai={href:"https://leetcode.cn/problems/zui-xiao-de-kge-shu-lcof",target:"_blank",rel:"noopener noreferrer"},Si=t("td",{style:{"text-align":"center"}},null,-1),Xi={style:{"text-align":"left"}},Di=t("code",null,"数组",-1),Fi=t("code",null,"分治",-1),Gi=t("code",null,"快速选择",-1),Ji=t("code",null,"2+",-1),Pi={style:{"text-align":"left"}},Qi=t("td",{style:{"text-align":"center"}},"剑指 Offer 42",-1),Ui={style:{"text-align":"left"}},Yi={href:"https://leetcode.cn/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof",target:"_blank",rel:"noopener noreferrer"},Zi={style:{"text-align":"center"}},$i={style:{"text-align":"left"}},ta=t("code",null,"数组",-1),ea=t("code",null,"分治",-1),la=t("code",null,"动态规划",-1),oa={style:{"text-align":"left"}},na=t("td",{style:{"text-align":"center"}},"剑指 Offer 51",-1),da={style:{"text-align":"left"}},sa={href:"https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof",target:"_blank",rel:"noopener noreferrer"},_a=t("td",{style:{"text-align":"center"}},null,-1),ca={style:{"text-align":"left"}},ia=t("code",null,"树状数组",-1),aa=t("code",null,"线段树",-1),ra=t("code",null,"数组",-1),ua=t("code",null,"4+",-1),ha={style:{"text-align":"left"}},fa=t("td",{style:{"text-align":"center"}},"剑指 Offer II 60",-1),ga={style:{"text-align":"left"}},ma={href:"https://leetcode.cn/problems/g5c51o",target:"_blank",rel:"noopener noreferrer"},ya=t("td",{style:{"text-align":"center"}},null,-1),xa={style:{"text-align":"left"}},ba=t("code",null,"数组",-1),pa=t("code",null,"哈希表",-1),ka=t("code",null,"分治",-1),qa=t("code",null,"5+",-1),va={style:{"text-align":"left"}},Ma=t("td",{style:{"text-align":"center"}},"剑指 Offer II 76",-1),za={style:{"text-align":"left"}},Ha={href:"https://leetcode.cn/problems/xx4gT2",target:"_blank",rel:"noopener noreferrer"},wa=t("td",{style:{"text-align":"center"}},null,-1),Ia={style:{"text-align":"left"}},Ea=t("code",null,"数组",-1),Ka=t("code",null,"分治",-1),Oa=t("code",null,"快速选择",-1),ja=t("code",null,"2+",-1),Ba={style:{"text-align":"left"}},Ca=t("td",{style:{"text-align":"center"}},"剑指 Offer II 77",-1),La={style:{"text-align":"left"}},Na={href:"https://leetcode.cn/problems/7WHec2",target:"_blank",rel:"noopener noreferrer"},Va=t("td",{style:{"text-align":"center"}},null,-1),Ra={style:{"text-align":"left"}},Ta=t("code",null,"链表",-1),Wa=t("code",null,"双指针",-1),Aa=t("code",null,"分治",-1),Sa=t("code",null,"2+",-1),Xa={style:{"text-align":"left"}},Da=t("td",{style:{"text-align":"center"}},"剑指 Offer II 78",-1),Fa={style:{"text-align":"left"}},Ga={href:"https://leetcode.cn/problems/vvXgSW",target:"_blank",rel:"noopener noreferrer"},Ja=t("td",{style:{"text-align":"center"}},null,-1),Pa={style:{"text-align":"left"}},Qa=t("code",null,"链表",-1),Ua=t("code",null,"分治",-1),Ya=t("code",null,"堆（优先队列）",-1),Za=t("code",null,"1+",-1),$a={style:{"text-align":"left"}},tr=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),er={style:{"text-align":"left"}},lr={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},or=t("td",{style:{"text-align":"center"}},null,-1),nr={style:{"text-align":"left"}},dr=t("code",null,"树",-1),sr=t("code",null,"二叉搜索树",-1),_r=t("code",null,"数组",-1),cr=t("code",null,"2+",-1),ir={style:{"text-align":"left"}},ar=t("td",{style:{"text-align":"center"}},"面试题 10.09",-1),rr={style:{"text-align":"left"}},ur={href:"https://leetcode.cn/problems/sorted-matrix-search-lcci",target:"_blank",rel:"noopener noreferrer"},hr=t("td",{style:{"text-align":"center"}},null,-1),fr={style:{"text-align":"left"}},gr=t("code",null,"数组",-1),mr=t("code",null,"二分查找",-1),yr=t("code",null,"分治",-1),xr=t("code",null,"1+",-1),br={style:{"text-align":"left"}},pr=t("td",{style:{"text-align":"center"}},"面试题 16.17",-1),kr={style:{"text-align":"left"}},qr={href:"https://leetcode.cn/problems/contiguous-sequence-lcci",target:"_blank",rel:"noopener noreferrer"},vr=t("td",{style:{"text-align":"center"}},null,-1),Mr={style:{"text-align":"left"}},zr=t("code",null,"数组",-1),Hr=t("code",null,"分治",-1),wr=t("code",null,"动态规划",-1),Ir={style:{"text-align":"left"}},Er=t("td",{style:{"text-align":"center"}},"面试题 17.14",-1),Kr={style:{"text-align":"left"}},Or={href:"https://leetcode.cn/problems/smallest-k-lcci",target:"_blank",rel:"noopener noreferrer"},jr=t("td",{style:{"text-align":"center"}},null,-1),Br={style:{"text-align":"left"}},Cr=t("code",null,"数组",-1),Lr=t("code",null,"分治",-1),Nr=t("code",null,"快速选择",-1),Vr=t("code",null,"2+",-1),Rr={style:{"text-align":"left"}};function Tr(Wr,Ar){const n=_("RouterLink"),d=_("ExternalLinkIcon"),s=_("font");return i(),a("div",null,[h,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[D]),_:1})]),F,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[J]),_:1}),l(),P,l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[Kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Ct]),_:1})])]),Lt,r(" prettier-ignore "),t("table",null,[Nt,t("tbody",null,[t("tr",null,[Vt,t("td",Rt,[t("a",Tt,[l("寻找两个正序数组的中位数"),e(d)])]),t("td",Wt,[e(n,{to:"/leetcode/problem/0004.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",At,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[St]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[Xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Dt]),_:1})]),t("td",Ft,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gt,t("td",Jt,[t("a",Pt,[l("合并 K 个升序链表"),e(d)])]),t("td",Qt,[e(n,{to:"/leetcode/problem/0023.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ut,[e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[$t]),_:1}),l(),te]),t("td",ee,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[le,t("td",oe,[t("a",ne,[l("最大子数组和"),e(d)])]),t("td",de,[e(n,{to:"/leetcode/problem/0053.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",se,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[_e]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[ie]),_:1})]),t("td",ae,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[re,t("td",ue,[t("a",he,[l("从前序与中序遍历序列构造二叉树"),e(d)])]),t("td",fe,[e(n,{to:"/leetcode/problem/0105.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ge,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[me]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ye]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[xe]),_:1}),l(),be]),t("td",pe,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ke,t("td",qe,[t("a",ve,[l("从中序与后序遍历序列构造二叉树"),e(d)])]),t("td",Me,[e(n,{to:"/leetcode/problem/0106.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ze,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[He]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[we]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Ie]),_:1}),l(),Ee]),t("td",Ke,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oe,t("td",je,[t("a",Be,[l("将有序数组转换为二叉搜索树"),e(d)])]),t("td",Ce,[e(n,{to:"/leetcode/problem/0108.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Le,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ne]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Ve]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Re]),_:1}),l(),Te]),t("td",We,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ae,t("td",Se,[t("a",Xe,[l("有序链表转换二叉搜索树"),e(d)])]),t("td",De,[e(n,{to:"/leetcode/problem/0109.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Fe,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ge]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Je]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[Pe]),_:1}),l(),Qe]),t("td",Ue,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ye,t("td",Ze,[t("a",$e,[l("排序链表"),e(d)])]),t("td",tl,[e(n,{to:"/leetcode/problem/0148.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",el,[e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[ll]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[ol]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[nl]),_:1}),l(),dl]),t("td",sl,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_l,t("td",cl,[t("a",il,[l("多数元素"),e(d)])]),t("td",al,[e(n,{to:"/leetcode/problem/0169.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",rl,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ul]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[hl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[fl]),_:1}),l(),gl]),t("td",ml,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yl,t("td",xl,[t("a",bl,[l("颠倒二进制位"),e(d)])]),t("td",pl,[e(n,{to:"/leetcode/problem/0190.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",kl,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[ql]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[vl]),_:1})]),t("td",Ml,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zl,t("td",Hl,[t("a",wl,[l("位1的个数"),e(d)])]),t("td",Il,[e(n,{to:"/leetcode/problem/0191.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",El,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[Kl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Ol]),_:1})]),t("td",jl,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Bl,t("td",Cl,[t("a",Ll,[l("数组中的第K个最大元素"),e(d)])]),t("td",Nl,[e(n,{to:"/leetcode/problem/0215.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Vl,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Rl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Tl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[Wl]),_:1}),l(),Al]),t("td",Sl,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xl,t("td",Dl,[t("a",Fl,[l("天际线问题"),e(d)])]),Gl,t("td",Jl,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Pl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Ql]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ul]),_:1}),l(),Yl]),t("td",Zl,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$l,t("td",to,[t("a",eo,[l("搜索二维矩阵 II"),e(d)])]),t("td",lo,[e(n,{to:"/leetcode/problem/0240.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",oo,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[no]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[so]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[_o]),_:1}),l(),co]),t("td",io,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ao,t("td",ro,[t("a",uo,[l("计算右侧小于当前元素的个数"),e(d)])]),ho,t("td",fo,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[go]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[mo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[yo]),_:1}),l(),xo]),t("td",bo,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[po,t("td",ko,[t("a",qo,[l("摆动排序 II"),e(d)])]),vo,t("td",Mo,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[zo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ho]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[wo]),_:1}),l(),Io]),t("td",Eo,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ko,t("td",Oo,[t("a",jo,[l("区间和的个数"),e(d)])]),Bo,t("td",Co,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Lo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[No]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Vo]),_:1}),l(),Ro]),t("td",To,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wo,t("td",Ao,[t("a",So,[l("前 K 个高频元素"),e(d)])]),t("td",Xo,[e(n,{to:"/leetcode/problem/0347.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Do,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Fo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Go]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Jo]),_:1}),l(),Po]),t("td",Qo,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Uo,t("td",Yo,[t("a",Zo,[l("超级次方"),e(d)])]),$o,t("td",tn,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[en]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[ln]),_:1})]),t("td",on,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nn,t("td",dn,[t("a",sn,[l("至少有 K 个重复字符的最长子串"),e(d)])]),_n,t("td",cn,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[an]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[rn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[un]),_:1}),l(),hn]),t("td",fn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gn,t("td",mn,[t("a",yn,[l("建立四叉树"),e(d)])]),t("td",xn,[e(n,{to:"/leetcode/problem/0427.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",bn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[pn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[kn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[qn]),_:1}),l(),vn]),t("td",Mn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zn,t("td",Hn,[t("a",wn,[l("翻转对"),e(d)])]),In,t("td",En,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Kn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[On]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[jn]),_:1}),l(),Bn]),t("td",Cn,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ln,t("td",Nn,[t("a",Vn,[l("四叉树交集"),e(d)])]),Rn,t("td",Tn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Wn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[An]),_:1})]),t("td",Sn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xn,t("td",Dn,[t("a",Fn,[l("最大二叉树"),e(d)])]),t("td",Gn,[e(n,{to:"/leetcode/problem/0654.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Jn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Pn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Un]),_:1}),l(),Yn]),t("td",Zn,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$n,t("td",td,[t("a",ed,[l("根据前序和后序遍历构造二叉树"),e(d)])]),t("td",ld,[e(n,{to:"/leetcode/problem/0889.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",od,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[nd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[dd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[sd]),_:1}),l(),_d]),t("td",cd,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[id,t("td",ad,[t("a",rd,[l("排序数组"),e(d)])]),ud,t("td",hd,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[fd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[gd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:o(()=>[md]),_:1}),l(),yd]),t("td",xd,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bd,t("td",pd,[t("a",kd,[l("环形子数组的最大和"),e(d)])]),t("td",qd,[e(n,{to:"/leetcode/problem/0918.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vd,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Md]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[zd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Hd]),_:1}),l(),wd]),t("td",Id,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ed,t("td",Kd,[t("a",Od,[l("漂亮数组"),e(d)])]),jd,t("td",Bd,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Cd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[Ld]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Nd]),_:1})]),t("td",Vd,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rd,t("td",Td,[t("a",Wd,[l("最接近原点的 K 个点"),e(d)])]),t("td",Ad,[e(n,{to:"/leetcode/problem/0973.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Sd,[e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[Xd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Dd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[Fd]),_:1}),l(),Gd]),t("td",Jd,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pd,t("td",Qd,[t("a",Ud,[l("矩形内船只的数目"),e(d)])]),Yd,t("td",Zd,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[$d]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[ts]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[es]),_:1})]),t("td",ls,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[os,t("td",ns,[t("a",ds,[l("将二叉搜索树变平衡"),e(d)])]),ss,t("td",_s,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[cs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[is]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[as]),_:1}),l(),rs]),t("td",us,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hs,t("td",fs,[t("a",gs,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(d)])]),ms,t("td",ys,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[xs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[bs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[ps]),_:1}),l(),ks]),t("td",qs,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vs,t("td",Ms,[t("a",zs,[l("通过指令创建有序数组"),e(d)])]),Hs,t("td",ws,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Is]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Es]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ks]),_:1}),l(),Os]),t("td",js,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bs,t("td",Cs,[t("a",Ls,[l("找出第 K 大的异或坐标值"),e(d)])]),Ns,t("td",Vs,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[Rs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ts]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Ws]),_:1}),l(),As]),t("td",Ss,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xs,t("td",Ds,[t("a",Fs,[l("最长的美好子字符串"),e(d)])]),Gs,t("td",Js,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[Ps]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Qs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Us]),_:1}),l(),Ys]),t("td",Zs,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$s,t("td",t_,[t("a",e_,[l("从子集的和还原数组"),e(d)])]),l_,t("td",o_,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[n_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[d_]),_:1})]),t("td",s_,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[__,t("td",c_,[t("a",i_,[l("找出数组中的第 K 大整数"),e(d)])]),a_,t("td",r_,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[u_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[h_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[f_]),_:1}),l(),g_]),t("td",m_,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y_,t("td",x_,[t("a",b_,[l("1 比 0 多的子数组个数"),e(d)])]),p_,t("td",k_,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[q_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[v_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[M_]),_:1}),l(),z_]),t("td",H_,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w_,t("td",I_,[t("a",E_,[l("统计数组中好三元组数目"),e(d)])]),K_,t("td",O_,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[j_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[B_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[C_]),_:1}),l(),L_]),t("td",N_,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[V_,t("td",R_,[t("a",T_,[l("裁剪数字后查询第 K 小的数字"),e(d)])]),W_,t("td",A_,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[S_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[X_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[D_]),_:1}),l(),F_]),t("td",G_,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J_,t("td",P_,[t("a",Q_,[l("最长递增子序列 II"),e(d)])]),U_,t("td",Y_,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Z_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[$_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[tc]),_:1}),l(),ec]),t("td",lc,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oc,t("td",nc,[t("a",dc,[l("满足不等式的数对数目"),e(d)])]),sc,t("td",_c,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[cc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[ic]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ac]),_:1}),l(),rc]),t("td",uc,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hc,t("td",fc,[t("a",gc,[l("统计 K-Big 索引的数量"),e(d)])]),mc,t("td",yc,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[xc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[bc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[pc]),_:1}),l(),kc]),t("td",qc,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vc,t("td",Mc,[t("a",zc,[l("美数对"),e(d)])]),Hc,t("td",wc,[e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[Ic]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ec]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[Kc]),_:1}),l(),Oc]),t("td",jc,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bc,t("td",Cc,[t("a",Lc,[l("计算足够大的节点数"),e(d)])]),Nc,t("td",Vc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Rc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Tc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Wc]),_:1}),l(),Ac]),t("td",Sc,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xc,t("td",Dc,[t("a",Fc,[l("查找排列的下标"),e(d)])]),Gc,t("td",Jc,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[Pc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[Qc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Uc]),_:1}),l(),Yc]),t("td",Zc,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$c,t("td",ti,[t("a",ei,[l("不包含相邻元素的子序列的最大和"),e(d)])]),li,t("td",oi,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[ni]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[di]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[si]),_:1}),l(),_i]),t("td",ci,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ii,t("td",ai,[t("a",ri,[l("二维数组中的查找"),e(d)])]),t("td",ui,[e(n,{to:"/leetcode/problem/jz_offer_04_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hi,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[fi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[gi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[mi]),_:1}),l(),yi]),t("td",xi,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bi,t("td",pi,[t("a",ki,[l("重建二叉树"),e(d)])]),t("td",qi,[e(n,{to:"/leetcode/problem/jz_offer_07_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vi,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Mi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[zi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Hi]),_:1}),l(),wi]),t("td",Ii,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ei,t("td",Ki,[t("a",Oi,[l("数组中出现次数超过一半的数字"),e(d)])]),t("td",ji,[e(n,{to:"/leetcode/problem/jz_offer_39_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Bi,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ci]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Li]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Ni]),_:1}),l(),Vi]),t("td",Ri,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ti,t("td",Wi,[t("a",Ai,[l("最小的k个数"),e(d)])]),Si,t("td",Xi,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Di]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Fi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[Gi]),_:1}),l(),Ji]),t("td",Pi,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Qi,t("td",Ui,[t("a",Yi,[l("连续子数组的最大和"),e(d)])]),t("td",Zi,[e(n,{to:"/leetcode/problem/jz_offer_42_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",$i,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ta]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[ea]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[la]),_:1})]),t("td",oa,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[na,t("td",da,[t("a",sa,[l("数组中的逆序对"),e(d)])]),_a,t("td",ca,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[ia]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[aa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ra]),_:1}),l(),ua]),t("td",ha,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fa,t("td",ga,[t("a",ma,[l("出现频率最高的 k 个数字"),e(d)])]),ya,t("td",xa,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ba]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[pa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[ka]),_:1}),l(),qa]),t("td",va,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ma,t("td",za,[t("a",Ha,[l("数组中的第 k 大的数字"),e(d)])]),wa,t("td",Ia,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ea]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Ka]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[Oa]),_:1}),l(),ja]),t("td",Ba,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ca,t("td",La,[t("a",Na,[l("链表排序"),e(d)])]),Va,t("td",Ra,[e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[Ta]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[Wa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Aa]),_:1}),l(),Sa]),t("td",Xa,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Da,t("td",Fa,[t("a",Ga,[l("合并排序链表"),e(d)])]),Ja,t("td",Pa,[e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[Qa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Ua]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[Ya]),_:1}),l(),Za]),t("td",$a,[e(s,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tr,t("td",er,[t("a",lr,[l("最小高度树"),e(d)])]),or,t("td",nr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[dr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[sr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[_r]),_:1}),l(),cr]),t("td",ir,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ar,t("td",rr,[t("a",ur,[l("排序矩阵查找"),e(d)])]),hr,t("td",fr,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[gr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[mr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[yr]),_:1}),l(),xr]),t("td",br,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pr,t("td",kr,[t("a",qr,[l("连续数列"),e(d)])]),vr,t("td",Mr,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[zr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Hr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[wr]),_:1})]),t("td",Ir,[e(s,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Er,t("td",Kr,[t("a",Or,[l("最小K个数"),e(d)])]),jr,t("td",Br,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Cr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Lr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[Nr]),_:1}),l(),Vr]),t("td",Rr,[e(s,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const Xr=c(u,[["render",Tr],["__file","divide-and-conquer.html.vue"]]);export{Xr as default};
