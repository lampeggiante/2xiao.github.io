import{_ as c,r as _,o as i,c as r,a as t,d as e,w as o,b as l,f as a}from"./app-qrCIIj1V.js";const h={},u=t("h1",{id:"树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#树","aria-hidden":"true"},"#"),l(" 树")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),j=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),E=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),H=t("code",null,"字符串匹配",-1),z=t("span",{class:"blue"},"树",-1),O=t("code",null,"二叉树",-1),q=t("code",null,"二叉搜索树",-1),N=t("code",null,"最小生成树",-1),L=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),K=t("code",null,"拓扑排序",-1),P=t("code",null,"最短路",-1),B=t("code",null,"强连通分量",-1),V=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),U=t("code",null,"并查集",-1),R=t("code",null,"字典树",-1),W=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),Y=t("code",null,"后缀数组",-1),Q=t("p",null,[t("strong",null,"算法")],-1),S=t("code",null,"枚举",-1),D=t("code",null,"递归",-1),Z=t("code",null,"分治",-1),A=t("code",null,"回溯",-1),F=t("code",null,"贪心",-1),J=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),st=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),jt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),Et=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),Ht=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),qt=t("code",null,"脑筋急转弯",-1),Nt=t("code",null,"交互",-1),Lt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Kt=t("hr",null,null,-1),Pt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Bt=t("td",{style:{"text-align":"center"}},"94",-1),Vt={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},Rt={style:{"text-align":"left"}},Wt=t("code",null,"栈",-1),Gt=t("code",null,"树",-1),Yt=t("code",null,"深度优先搜索",-1),Qt=t("code",null,"1+",-1),St={style:{"text-align":"left"}},Dt=t("td",{style:{"text-align":"center"}},"95",-1),Zt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},Ft={style:{"text-align":"center"}},Jt={style:{"text-align":"left"}},Xt=t("code",null,"树",-1),$t=t("code",null,"二叉搜索树",-1),te=t("code",null,"动态规划",-1),ee=t("code",null,"2+",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"96",-1),se={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},de={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},ce=t("code",null,"树",-1),ie=t("code",null,"二叉搜索树",-1),re=t("code",null,"数学",-1),ae=t("code",null,"2+",-1),he={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"98",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},me={style:{"text-align":"center"}},ye={style:{"text-align":"left"}},xe=t("code",null,"树",-1),be=t("code",null,"深度优先搜索",-1),pe=t("code",null,"二叉搜索树",-1),je=t("code",null,"1+",-1),ke={style:{"text-align":"left"}},Me=t("td",{style:{"text-align":"center"}},"99",-1),ve={style:{"text-align":"left"}},Ie={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ee={style:{"text-align":"center"}},we={style:{"text-align":"left"}},He=t("code",null,"树",-1),ze=t("code",null,"深度优先搜索",-1),Oe=t("code",null,"二叉搜索树",-1),qe=t("code",null,"1+",-1),Ne={style:{"text-align":"left"}},Le=t("td",{style:{"text-align":"center"}},"100",-1),Ce={style:{"text-align":"left"}},Ke={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Pe={style:{"text-align":"center"}},Be={style:{"text-align":"left"}},Ve=t("code",null,"树",-1),Te=t("code",null,"深度优先搜索",-1),Ue=t("code",null,"广度优先搜索",-1),Re=t("code",null,"1+",-1),We={style:{"text-align":"left"}},Ge=t("td",{style:{"text-align":"center"}},"101",-1),Ye={style:{"text-align":"left"}},Qe={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},Se={style:{"text-align":"center"}},De={style:{"text-align":"left"}},Ze=t("code",null,"树",-1),Ae=t("code",null,"深度优先搜索",-1),Fe=t("code",null,"广度优先搜索",-1),Je=t("code",null,"1+",-1),Xe={style:{"text-align":"left"}},$e=t("td",{style:{"text-align":"center"}},"102",-1),tl={style:{"text-align":"left"}},el={href:"https://leetcode.com/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},ll={style:{"text-align":"center"}},ol={style:{"text-align":"left"}},sl=t("code",null,"树",-1),nl=t("code",null,"广度优先搜索",-1),dl=t("code",null,"二叉树",-1),_l={style:{"text-align":"left"}},cl=t("td",{style:{"text-align":"center"}},"103",-1),il={style:{"text-align":"left"}},rl={href:"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},al={style:{"text-align":"center"}},hl={style:{"text-align":"left"}},ul=t("code",null,"树",-1),fl=t("code",null,"广度优先搜索",-1),gl=t("code",null,"二叉树",-1),ml={style:{"text-align":"left"}},yl=t("td",{style:{"text-align":"center"}},"104",-1),xl={style:{"text-align":"left"}},bl={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},pl={style:{"text-align":"center"}},jl={style:{"text-align":"left"}},kl=t("code",null,"树",-1),Ml=t("code",null,"深度优先搜索",-1),vl=t("code",null,"广度优先搜索",-1),Il=t("code",null,"1+",-1),El={style:{"text-align":"left"}},wl=t("td",{style:{"text-align":"center"}},"105",-1),Hl={style:{"text-align":"left"}},zl={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ol={style:{"text-align":"center"}},ql={style:{"text-align":"left"}},Nl=t("code",null,"树",-1),Ll=t("code",null,"数组",-1),Cl=t("code",null,"哈希表",-1),Kl=t("code",null,"2+",-1),Pl={style:{"text-align":"left"}},Bl=t("td",{style:{"text-align":"center"}},"106",-1),Vl={style:{"text-align":"left"}},Tl={href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ul={style:{"text-align":"center"}},Rl={style:{"text-align":"left"}},Wl=t("code",null,"树",-1),Gl=t("code",null,"数组",-1),Yl=t("code",null,"哈希表",-1),Ql=t("code",null,"2+",-1),Sl={style:{"text-align":"left"}},Dl=t("td",{style:{"text-align":"center"}},"107",-1),Zl={style:{"text-align":"left"}},Al={href:"https://leetcode.com/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},Fl={style:{"text-align":"center"}},Jl={style:{"text-align":"left"}},Xl=t("code",null,"树",-1),$l=t("code",null,"广度优先搜索",-1),to=t("code",null,"二叉树",-1),eo={style:{"text-align":"left"}},lo=t("td",{style:{"text-align":"center"}},"108",-1),oo={style:{"text-align":"left"}},so={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},no={style:{"text-align":"center"}},_o={style:{"text-align":"left"}},co=t("code",null,"树",-1),io=t("code",null,"二叉搜索树",-1),ro=t("code",null,"数组",-1),ao=t("code",null,"2+",-1),ho={style:{"text-align":"left"}},uo=t("td",{style:{"text-align":"center"}},"109",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},mo={style:{"text-align":"center"}},yo={style:{"text-align":"left"}},xo=t("code",null,"树",-1),bo=t("code",null,"二叉搜索树",-1),po=t("code",null,"链表",-1),jo=t("code",null,"2+",-1),ko={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"center"}},"110",-1),vo={style:{"text-align":"left"}},Io={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},Eo={style:{"text-align":"center"}},wo={style:{"text-align":"left"}},Ho=t("code",null,"树",-1),zo=t("code",null,"深度优先搜索",-1),Oo=t("code",null,"二叉树",-1),qo={style:{"text-align":"left"}},No=t("td",{style:{"text-align":"center"}},"111",-1),Lo={style:{"text-align":"left"}},Co={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ko={style:{"text-align":"center"}},Po={style:{"text-align":"left"}},Bo=t("code",null,"树",-1),Vo=t("code",null,"深度优先搜索",-1),To=t("code",null,"广度优先搜索",-1),Uo=t("code",null,"1+",-1),Ro={style:{"text-align":"left"}},Wo=t("td",{style:{"text-align":"center"}},"112",-1),Go={style:{"text-align":"left"}},Yo={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Qo={style:{"text-align":"center"}},So={style:{"text-align":"left"}},Do=t("code",null,"树",-1),Zo=t("code",null,"深度优先搜索",-1),Ao=t("code",null,"广度优先搜索",-1),Fo=t("code",null,"1+",-1),Jo={style:{"text-align":"left"}},Xo=t("td",{style:{"text-align":"center"}},"113",-1),$o={style:{"text-align":"left"}},ts={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},es={style:{"text-align":"center"}},ls={style:{"text-align":"left"}},os=t("code",null,"树",-1),ss=t("code",null,"深度优先搜索",-1),ns=t("code",null,"回溯",-1),ds=t("code",null,"1+",-1),_s={style:{"text-align":"left"}},cs=t("td",{style:{"text-align":"center"}},"114",-1),is={style:{"text-align":"left"}},rs={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},as={style:{"text-align":"center"}},hs={style:{"text-align":"left"}},us=t("code",null,"栈",-1),fs=t("code",null,"树",-1),gs=t("code",null,"深度优先搜索",-1),ms=t("code",null,"2+",-1),ys={style:{"text-align":"left"}},xs=t("td",{style:{"text-align":"center"}},"116",-1),bs={style:{"text-align":"left"}},ps={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},js={style:{"text-align":"center"}},ks={style:{"text-align":"left"}},Ms=t("code",null,"树",-1),vs=t("code",null,"深度优先搜索",-1),Is=t("code",null,"广度优先搜索",-1),Es=t("code",null,"2+",-1),ws={style:{"text-align":"left"}},Hs=t("td",{style:{"text-align":"center"}},"117",-1),zs={style:{"text-align":"left"}},Os={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},qs={style:{"text-align":"center"}},Ns={style:{"text-align":"left"}},Ls=t("code",null,"树",-1),Cs=t("code",null,"深度优先搜索",-1),Ks=t("code",null,"广度优先搜索",-1),Ps=t("code",null,"2+",-1),Bs={style:{"text-align":"left"}},Vs=t("td",{style:{"text-align":"center"}},"124",-1),Ts={style:{"text-align":"left"}},Us={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Rs={style:{"text-align":"center"}},Ws={style:{"text-align":"left"}},Gs=t("code",null,"树",-1),Ys=t("code",null,"深度优先搜索",-1),Qs=t("code",null,"动态规划",-1),Ss=t("code",null,"1+",-1),Ds={style:{"text-align":"left"}},Zs=t("td",{style:{"text-align":"center"}},"129",-1),As={style:{"text-align":"left"}},Fs={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},Js={style:{"text-align":"center"}},Xs={style:{"text-align":"left"}},$s=t("code",null,"树",-1),tn=t("code",null,"深度优先搜索",-1),en=t("code",null,"二叉树",-1),ln={style:{"text-align":"left"}},on=t("td",{style:{"text-align":"center"}},"144",-1),sn={style:{"text-align":"left"}},nn={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},dn={style:{"text-align":"center"}},_n={style:{"text-align":"left"}},cn=t("code",null,"栈",-1),rn=t("code",null,"树",-1),an=t("code",null,"深度优先搜索",-1),hn=t("code",null,"1+",-1),un={style:{"text-align":"left"}},fn=t("td",{style:{"text-align":"center"}},"145",-1),gn={style:{"text-align":"left"}},mn={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},yn={style:{"text-align":"center"}},xn={style:{"text-align":"left"}},bn=t("code",null,"栈",-1),pn=t("code",null,"树",-1),jn=t("code",null,"深度优先搜索",-1),kn=t("code",null,"1+",-1),Mn={style:{"text-align":"left"}},vn=t("td",{style:{"text-align":"center"}},"156",-1),In={style:{"text-align":"left"}},En={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},wn={style:{"text-align":"center"}},Hn={style:{"text-align":"left"}},zn=t("code",null,"树",-1),On=t("code",null,"深度优先搜索",-1),qn=t("code",null,"二叉树",-1),Nn={style:{"text-align":"left"}},Ln=t("td",{style:{"text-align":"center"}},"173",-1),Cn={style:{"text-align":"left"}},Kn={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Pn={style:{"text-align":"center"}},Bn={style:{"text-align":"left"}},Vn=t("code",null,"栈",-1),Tn=t("code",null,"树",-1),Un=t("code",null,"设计",-1),Rn=t("code",null,"3+",-1),Wn={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"199",-1),Yn={style:{"text-align":"left"}},Qn={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},Sn={style:{"text-align":"center"}},Dn={style:{"text-align":"left"}},Zn=t("code",null,"树",-1),An=t("code",null,"深度优先搜索",-1),Fn=t("code",null,"广度优先搜索",-1),Jn=t("code",null,"1+",-1),Xn={style:{"text-align":"left"}},$n=t("td",{style:{"text-align":"center"}},"222",-1),td={style:{"text-align":"left"}},ed={href:"https://leetcode.com/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},ld={style:{"text-align":"center"}},od={style:{"text-align":"left"}},sd=t("code",null,"位运算",-1),nd=t("code",null,"树",-1),dd=t("code",null,"二分查找",-1),_d=t("code",null,"1+",-1),cd={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"226",-1),rd={style:{"text-align":"left"}},ad={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},hd={style:{"text-align":"center"}},ud={style:{"text-align":"left"}},fd=t("code",null,"树",-1),gd=t("code",null,"深度优先搜索",-1),md=t("code",null,"广度优先搜索",-1),yd=t("code",null,"1+",-1),xd={style:{"text-align":"left"}},bd=t("td",{style:{"text-align":"center"}},"230",-1),pd={style:{"text-align":"left"}},jd={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},kd={style:{"text-align":"center"}},Md={style:{"text-align":"left"}},vd=t("code",null,"树",-1),Id=t("code",null,"深度优先搜索",-1),Ed=t("code",null,"二叉搜索树",-1),wd=t("code",null,"1+",-1),Hd={style:{"text-align":"left"}},zd=t("td",{style:{"text-align":"center"}},"235",-1),Od={style:{"text-align":"left"}},qd={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Nd={style:{"text-align":"center"}},Ld={style:{"text-align":"left"}},Cd=t("code",null,"树",-1),Kd=t("code",null,"深度优先搜索",-1),Pd=t("code",null,"二叉搜索树",-1),Bd=t("code",null,"1+",-1),Vd={style:{"text-align":"left"}},Td=t("td",{style:{"text-align":"center"}},"236",-1),Ud={style:{"text-align":"left"}},Rd={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wd={style:{"text-align":"center"}},Gd={style:{"text-align":"left"}},Yd=t("code",null,"树",-1),Qd=t("code",null,"深度优先搜索",-1),Sd=t("code",null,"二叉树",-1),Dd={style:{"text-align":"left"}},Zd=t("td",{style:{"text-align":"center"}},"250",-1),Ad={style:{"text-align":"left"}},Fd={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},Jd=t("td",{style:{"text-align":"center"}},null,-1),Xd={style:{"text-align":"left"}},$d=t("code",null,"树",-1),t_=t("code",null,"深度优先搜索",-1),e_=t("code",null,"二叉树",-1),l_={style:{"text-align":"left"}},o_=t("td",{style:{"text-align":"center"}},"255",-1),s_={style:{"text-align":"left"}},n_={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},d_=t("td",{style:{"text-align":"center"}},null,-1),__={style:{"text-align":"left"}},c_=t("code",null,"栈",-1),i_=t("code",null,"树",-1),r_=t("code",null,"二叉搜索树",-1),a_=t("code",null,"4+",-1),h_={style:{"text-align":"left"}},u_=t("td",{style:{"text-align":"center"}},"257",-1),f_={style:{"text-align":"left"}},g_={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},m_={style:{"text-align":"center"}},y_={style:{"text-align":"left"}},x_=t("code",null,"树",-1),b_=t("code",null,"深度优先搜索",-1),p_=t("code",null,"字符串",-1),j_=t("code",null,"2+",-1),k_={style:{"text-align":"left"}},M_=t("td",{style:{"text-align":"center"}},"270",-1),v_={style:{"text-align":"left"}},I_={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},E_=t("td",{style:{"text-align":"center"}},null,-1),w_={style:{"text-align":"left"}},H_=t("code",null,"树",-1),z_=t("code",null,"深度优先搜索",-1),O_=t("code",null,"二叉搜索树",-1),q_=t("code",null,"2+",-1),N_={style:{"text-align":"left"}},L_=t("td",{style:{"text-align":"center"}},"272",-1),C_={style:{"text-align":"left"}},K_={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},P_=t("td",{style:{"text-align":"center"}},null,-1),B_={style:{"text-align":"left"}},V_=t("code",null,"栈",-1),T_=t("code",null,"树",-1),U_=t("code",null,"深度优先搜索",-1),R_=t("code",null,"4+",-1),W_={style:{"text-align":"left"}},G_=t("td",{style:{"text-align":"center"}},"285",-1),Y_={style:{"text-align":"left"}},Q_={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},S_=t("td",{style:{"text-align":"center"}},null,-1),D_={style:{"text-align":"left"}},Z_=t("code",null,"树",-1),A_=t("code",null,"深度优先搜索",-1),F_=t("code",null,"二叉搜索树",-1),J_=t("code",null,"1+",-1),X_={style:{"text-align":"left"}},$_=t("td",{style:{"text-align":"center"}},"297",-1),tc={style:{"text-align":"left"}},ec={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},lc={style:{"text-align":"center"}},oc={style:{"text-align":"left"}},sc=t("code",null,"树",-1),nc=t("code",null,"深度优先搜索",-1),dc=t("code",null,"广度优先搜索",-1),_c=t("code",null,"3+",-1),cc={style:{"text-align":"left"}},ic=t("td",{style:{"text-align":"center"}},"298",-1),rc={style:{"text-align":"left"}},ac={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},hc=t("td",{style:{"text-align":"center"}},null,-1),uc={style:{"text-align":"left"}},fc=t("code",null,"树",-1),gc=t("code",null,"深度优先搜索",-1),mc=t("code",null,"二叉树",-1),yc={style:{"text-align":"left"}},xc=t("td",{style:{"text-align":"center"}},"314",-1),bc={style:{"text-align":"left"}},pc={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},jc=t("td",{style:{"text-align":"center"}},null,-1),kc={style:{"text-align":"left"}},Mc=t("code",null,"树",-1),vc=t("code",null,"深度优先搜索",-1),Ic=t("code",null,"广度优先搜索",-1),Ec=t("code",null,"3+",-1),wc={style:{"text-align":"left"}},Hc=t("td",{style:{"text-align":"center"}},"331",-1),zc={style:{"text-align":"left"}},Oc={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},qc=t("td",{style:{"text-align":"center"}},null,-1),Nc={style:{"text-align":"left"}},Lc=t("code",null,"栈",-1),Cc=t("code",null,"树",-1),Kc=t("code",null,"字符串",-1),Pc=t("code",null,"1+",-1),Bc={style:{"text-align":"left"}},Vc=t("td",{style:{"text-align":"center"}},"333",-1),Tc={style:{"text-align":"left"}},Uc={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Rc=t("td",{style:{"text-align":"center"}},null,-1),Wc={style:{"text-align":"left"}},Gc=t("code",null,"树",-1),Yc=t("code",null,"深度优先搜索",-1),Qc=t("code",null,"二叉搜索树",-1),Sc=t("code",null,"2+",-1),Dc={style:{"text-align":"left"}},Zc=t("td",{style:{"text-align":"center"}},"337",-1),Ac={style:{"text-align":"left"}},Fc={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Jc=t("td",{style:{"text-align":"center"}},null,-1),Xc={style:{"text-align":"left"}},$c=t("code",null,"树",-1),ti=t("code",null,"深度优先搜索",-1),ei=t("code",null,"动态规划",-1),li=t("code",null,"1+",-1),oi={style:{"text-align":"left"}},si=t("td",{style:{"text-align":"center"}},"341",-1),ni={style:{"text-align":"left"}},di={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},_i=t("td",{style:{"text-align":"center"}},null,-1),ci={style:{"text-align":"left"}},ii=t("code",null,"栈",-1),ri=t("code",null,"树",-1),ai=t("code",null,"深度优先搜索",-1),hi=t("code",null,"3+",-1),ui={style:{"text-align":"left"}},fi=t("td",{style:{"text-align":"center"}},"366",-1),gi={style:{"text-align":"left"}},mi={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},yi={style:{"text-align":"center"}},xi={style:{"text-align":"left"}},bi=t("code",null,"树",-1),pi=t("code",null,"深度优先搜索",-1),ji=t("code",null,"二叉树",-1),ki={style:{"text-align":"left"}},Mi=t("td",{style:{"text-align":"center"}},"404",-1),vi={style:{"text-align":"left"}},Ii={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},Ei=t("td",{style:{"text-align":"center"}},null,-1),wi={style:{"text-align":"left"}},Hi=t("code",null,"树",-1),zi=t("code",null,"深度优先搜索",-1),Oi=t("code",null,"广度优先搜索",-1),qi=t("code",null,"1+",-1),Ni={style:{"text-align":"left"}},Li=t("td",{style:{"text-align":"center"}},"426",-1),Ci={style:{"text-align":"left"}},Ki={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},Pi={style:{"text-align":"center"}},Bi={style:{"text-align":"left"}},Vi=t("code",null,"栈",-1),Ti=t("code",null,"树",-1),Ui=t("code",null,"深度优先搜索",-1),Ri=t("code",null,"4+",-1),Wi={style:{"text-align":"left"}},Gi=t("td",{style:{"text-align":"center"}},"427",-1),Yi={style:{"text-align":"left"}},Qi={href:"https://leetcode.com/problems/construct-quad-tree",target:"_blank",rel:"noopener noreferrer"},Si={style:{"text-align":"center"}},Di={style:{"text-align":"left"}},Zi=t("code",null,"树",-1),Ai=t("code",null,"数组",-1),Fi=t("code",null,"分治",-1),Ji=t("code",null,"1+",-1),Xi={style:{"text-align":"left"}},$i=t("td",{style:{"text-align":"center"}},"428",-1),tr={style:{"text-align":"left"}},er={href:"https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},lr=t("td",{style:{"text-align":"center"}},null,-1),or={style:{"text-align":"left"}},sr=t("code",null,"树",-1),nr=t("code",null,"深度优先搜索",-1),dr=t("code",null,"广度优先搜索",-1),_r=t("code",null,"1+",-1),cr={style:{"text-align":"left"}},ir=t("td",{style:{"text-align":"center"}},"429",-1),rr={style:{"text-align":"left"}},ar={href:"https://leetcode.com/problems/n-ary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},hr=t("td",{style:{"text-align":"center"}},null,-1),ur={style:{"text-align":"left"}},fr=t("code",null,"树",-1),gr=t("code",null,"广度优先搜索",-1),mr={style:{"text-align":"left"}},yr=t("td",{style:{"text-align":"center"}},"431",-1),xr={style:{"text-align":"left"}},br={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},pr=t("td",{style:{"text-align":"center"}},null,-1),jr={style:{"text-align":"left"}},kr=t("code",null,"树",-1),Mr=t("code",null,"深度优先搜索",-1),vr=t("code",null,"广度优先搜索",-1),Ir=t("code",null,"2+",-1),Er={style:{"text-align":"left"}},wr=t("td",{style:{"text-align":"center"}},"437",-1),Hr={style:{"text-align":"left"}},zr={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Or={style:{"text-align":"center"}},qr={style:{"text-align":"left"}},Nr=t("code",null,"树",-1),Lr=t("code",null,"深度优先搜索",-1),Cr=t("code",null,"二叉树",-1),Kr={style:{"text-align":"left"}},Pr=t("td",{style:{"text-align":"center"}},"449",-1),Br={style:{"text-align":"left"}},Vr={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Tr=t("td",{style:{"text-align":"center"}},null,-1),Ur={style:{"text-align":"left"}},Rr=t("code",null,"树",-1),Wr=t("code",null,"深度优先搜索",-1),Gr=t("code",null,"广度优先搜索",-1),Yr=t("code",null,"4+",-1),Qr={style:{"text-align":"left"}},Sr=t("td",{style:{"text-align":"center"}},"450",-1),Dr={style:{"text-align":"left"}},Zr={href:"https://leetcode.com/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Ar={style:{"text-align":"center"}},Fr={style:{"text-align":"left"}},Jr=t("code",null,"树",-1),Xr=t("code",null,"二叉搜索树",-1),$r=t("code",null,"二叉树",-1),ta={style:{"text-align":"left"}},ea=t("td",{style:{"text-align":"center"}},"501",-1),la={style:{"text-align":"left"}},oa={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},sa=t("td",{style:{"text-align":"center"}},null,-1),na={style:{"text-align":"left"}},da=t("code",null,"树",-1),_a=t("code",null,"深度优先搜索",-1),ca=t("code",null,"二叉搜索树",-1),ia=t("code",null,"1+",-1),ra={style:{"text-align":"left"}},aa=t("td",{style:{"text-align":"center"}},"508",-1),ha={style:{"text-align":"left"}},ua={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},fa=t("td",{style:{"text-align":"center"}},null,-1),ga={style:{"text-align":"left"}},ma=t("code",null,"树",-1),ya=t("code",null,"深度优先搜索",-1),xa=t("code",null,"哈希表",-1),ba=t("code",null,"1+",-1),pa={style:{"text-align":"left"}},ja=t("td",{style:{"text-align":"center"}},"510",-1),ka={style:{"text-align":"left"}},Ma={href:"https://leetcode.com/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},va=t("td",{style:{"text-align":"center"}},null,-1),Ia={style:{"text-align":"left"}},Ea=t("code",null,"树",-1),wa=t("code",null,"二叉搜索树",-1),Ha=t("code",null,"二叉树",-1),za={style:{"text-align":"left"}},Oa=t("td",{style:{"text-align":"center"}},"513",-1),qa={style:{"text-align":"left"}},Na={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},La=t("td",{style:{"text-align":"center"}},null,-1),Ca={style:{"text-align":"left"}},Ka=t("code",null,"树",-1),Pa=t("code",null,"深度优先搜索",-1),Ba=t("code",null,"广度优先搜索",-1),Va=t("code",null,"1+",-1),Ta={style:{"text-align":"left"}},Ua=t("td",{style:{"text-align":"center"}},"515",-1),Ra={style:{"text-align":"left"}},Wa={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},Ga=t("td",{style:{"text-align":"center"}},null,-1),Ya={style:{"text-align":"left"}},Qa=t("code",null,"树",-1),Sa=t("code",null,"深度优先搜索",-1),Da=t("code",null,"广度优先搜索",-1),Za=t("code",null,"1+",-1),Aa={style:{"text-align":"left"}},Fa=t("td",{style:{"text-align":"center"}},"530",-1),Ja={style:{"text-align":"left"}},Xa={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},$a={style:{"text-align":"center"}},th={style:{"text-align":"left"}},eh=t("code",null,"树",-1),lh=t("code",null,"深度优先搜索",-1),oh=t("code",null,"广度优先搜索",-1),sh=t("code",null,"2+",-1),nh={style:{"text-align":"left"}},dh=t("td",{style:{"text-align":"center"}},"536",-1),_h={style:{"text-align":"left"}},ch={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},ih=t("td",{style:{"text-align":"center"}},null,-1),rh={style:{"text-align":"left"}},ah=t("code",null,"栈",-1),hh=t("code",null,"树",-1),uh=t("code",null,"深度优先搜索",-1),fh=t("code",null,"2+",-1),gh={style:{"text-align":"left"}},mh=t("td",{style:{"text-align":"center"}},"538",-1),yh={style:{"text-align":"left"}},xh={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},bh=t("td",{style:{"text-align":"center"}},null,-1),ph={style:{"text-align":"left"}},jh=t("code",null,"树",-1),kh=t("code",null,"深度优先搜索",-1),Mh=t("code",null,"二叉搜索树",-1),vh=t("code",null,"1+",-1),Ih={style:{"text-align":"left"}},Eh=t("td",{style:{"text-align":"center"}},"543",-1),wh={style:{"text-align":"left"}},Hh={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},zh={style:{"text-align":"center"}},Oh={style:{"text-align":"left"}},qh=t("code",null,"树",-1),Nh=t("code",null,"深度优先搜索",-1),Lh=t("code",null,"二叉树",-1),Ch={style:{"text-align":"left"}},Kh=t("td",{style:{"text-align":"center"}},"545",-1),Ph={style:{"text-align":"left"}},Bh={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Vh=t("td",{style:{"text-align":"center"}},null,-1),Th={style:{"text-align":"left"}},Uh=t("code",null,"树",-1),Rh=t("code",null,"深度优先搜索",-1),Wh=t("code",null,"二叉树",-1),Gh={style:{"text-align":"left"}},Yh=t("td",{style:{"text-align":"center"}},"549",-1),Qh={style:{"text-align":"left"}},Sh={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},Dh=t("td",{style:{"text-align":"center"}},null,-1),Zh={style:{"text-align":"left"}},Ah=t("code",null,"树",-1),Fh=t("code",null,"深度优先搜索",-1),Jh=t("code",null,"二叉树",-1),Xh={style:{"text-align":"left"}},$h=t("td",{style:{"text-align":"center"}},"558",-1),t1={style:{"text-align":"left"}},e1={href:"https://leetcode.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees",target:"_blank",rel:"noopener noreferrer"},l1=t("td",{style:{"text-align":"center"}},null,-1),o1={style:{"text-align":"left"}},s1=t("code",null,"树",-1),n1=t("code",null,"分治",-1),d1={style:{"text-align":"left"}},_1=t("td",{style:{"text-align":"center"}},"559",-1),c1={style:{"text-align":"left"}},i1={href:"https://leetcode.com/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},r1={style:{"text-align":"center"}},a1={style:{"text-align":"left"}},h1=t("code",null,"树",-1),u1=t("code",null,"深度优先搜索",-1),f1=t("code",null,"广度优先搜索",-1),g1={style:{"text-align":"left"}},m1=t("td",{style:{"text-align":"center"}},"563",-1),y1={style:{"text-align":"left"}},x1={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},b1=t("td",{style:{"text-align":"center"}},null,-1),p1={style:{"text-align":"left"}},j1=t("code",null,"树",-1),k1=t("code",null,"深度优先搜索",-1),M1=t("code",null,"二叉树",-1),v1={style:{"text-align":"left"}},I1=t("td",{style:{"text-align":"center"}},"572",-1),E1={style:{"text-align":"left"}},w1={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},H1={style:{"text-align":"center"}},z1={style:{"text-align":"left"}},O1=t("code",null,"树",-1),q1=t("code",null,"深度优先搜索",-1),N1=t("code",null,"二叉树",-1),L1=t("code",null,"2+",-1),C1={style:{"text-align":"left"}},K1=t("td",{style:{"text-align":"center"}},"582",-1),P1={style:{"text-align":"left"}},B1={href:"https://leetcode.com/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},V1=t("td",{style:{"text-align":"center"}},null,-1),T1={style:{"text-align":"left"}},U1=t("code",null,"树",-1),R1=t("code",null,"深度优先搜索",-1),W1=t("code",null,"广度优先搜索",-1),G1=t("code",null,"2+",-1),Y1={style:{"text-align":"left"}},Q1=t("td",{style:{"text-align":"center"}},"589",-1),S1={style:{"text-align":"left"}},D1={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Z1={style:{"text-align":"center"}},A1={style:{"text-align":"left"}},F1=t("code",null,"栈",-1),J1=t("code",null,"树",-1),X1=t("code",null,"深度优先搜索",-1),$1={style:{"text-align":"left"}},tu=t("td",{style:{"text-align":"center"}},"590",-1),eu={style:{"text-align":"left"}},lu={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},ou={style:{"text-align":"center"}},su={style:{"text-align":"left"}},nu=t("code",null,"栈",-1),du=t("code",null,"树",-1),_u=t("code",null,"深度优先搜索",-1),cu={style:{"text-align":"left"}},iu=t("td",{style:{"text-align":"center"}},"606",-1),ru={style:{"text-align":"left"}},au={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},hu=t("td",{style:{"text-align":"center"}},null,-1),uu={style:{"text-align":"left"}},fu=t("code",null,"树",-1),gu=t("code",null,"深度优先搜索",-1),mu=t("code",null,"字符串",-1),yu=t("code",null,"1+",-1),xu={style:{"text-align":"left"}},bu=t("td",{style:{"text-align":"center"}},"617",-1),pu={style:{"text-align":"left"}},ju={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},ku={style:{"text-align":"center"}},Mu={style:{"text-align":"left"}},vu=t("code",null,"树",-1),Iu=t("code",null,"深度优先搜索",-1),Eu=t("code",null,"广度优先搜索",-1),wu=t("code",null,"1+",-1),Hu={style:{"text-align":"left"}},zu=t("td",{style:{"text-align":"center"}},"623",-1),Ou={style:{"text-align":"left"}},qu={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},Nu=t("td",{style:{"text-align":"center"}},null,-1),Lu={style:{"text-align":"left"}},Cu=t("code",null,"树",-1),Ku=t("code",null,"深度优先搜索",-1),Pu=t("code",null,"广度优先搜索",-1),Bu=t("code",null,"1+",-1),Vu={style:{"text-align":"left"}},Tu=t("td",{style:{"text-align":"center"}},"637",-1),Uu={style:{"text-align":"left"}},Ru={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wu={style:{"text-align":"center"}},Gu={style:{"text-align":"left"}},Yu=t("code",null,"树",-1),Qu=t("code",null,"深度优先搜索",-1),Su=t("code",null,"广度优先搜索",-1),Du=t("code",null,"1+",-1),Zu={style:{"text-align":"left"}},Au=t("td",{style:{"text-align":"center"}},"652",-1),Fu={style:{"text-align":"left"}},Ju={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},Xu=t("td",{style:{"text-align":"center"}},null,-1),$u={style:{"text-align":"left"}},tf=t("code",null,"树",-1),ef=t("code",null,"深度优先搜索",-1),lf=t("code",null,"哈希表",-1),of=t("code",null,"1+",-1),sf={style:{"text-align":"left"}},nf=t("td",{style:{"text-align":"center"}},"653",-1),df={style:{"text-align":"left"}},_f={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},cf=t("td",{style:{"text-align":"center"}},null,-1),rf={style:{"text-align":"left"}},af=t("code",null,"树",-1),hf=t("code",null,"深度优先搜索",-1),uf=t("code",null,"广度优先搜索",-1),ff=t("code",null,"4+",-1),gf={style:{"text-align":"left"}},mf=t("td",{style:{"text-align":"center"}},"654",-1),yf={style:{"text-align":"left"}},xf={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},bf={style:{"text-align":"center"}},pf={style:{"text-align":"left"}},jf=t("code",null,"栈",-1),kf=t("code",null,"树",-1),Mf=t("code",null,"数组",-1),vf=t("code",null,"3+",-1),If={style:{"text-align":"left"}},Ef=t("td",{style:{"text-align":"center"}},"655",-1),wf={style:{"text-align":"left"}},Hf={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},zf=t("td",{style:{"text-align":"center"}},null,-1),Of={style:{"text-align":"left"}},qf=t("code",null,"树",-1),Nf=t("code",null,"深度优先搜索",-1),Lf=t("code",null,"广度优先搜索",-1),Cf=t("code",null,"1+",-1),Kf={style:{"text-align":"left"}},Pf=t("td",{style:{"text-align":"center"}},"662",-1),Bf={style:{"text-align":"left"}},Vf={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Tf={style:{"text-align":"center"}},Uf={style:{"text-align":"left"}},Rf=t("code",null,"树",-1),Wf=t("code",null,"深度优先搜索",-1),Gf=t("code",null,"广度优先搜索",-1),Yf=t("code",null,"1+",-1),Qf={style:{"text-align":"left"}},Sf=t("td",{style:{"text-align":"center"}},"663",-1),Df={style:{"text-align":"left"}},Zf={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},Af=t("td",{style:{"text-align":"center"}},null,-1),Ff={style:{"text-align":"left"}},Jf=t("code",null,"树",-1),Xf=t("code",null,"深度优先搜索",-1),$f=t("code",null,"二叉树",-1),tg={style:{"text-align":"left"}},eg=t("td",{style:{"text-align":"center"}},"666",-1),lg={style:{"text-align":"left"}},og={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},sg=t("td",{style:{"text-align":"center"}},null,-1),ng={style:{"text-align":"left"}},dg=t("code",null,"树",-1),_g=t("code",null,"深度优先搜索",-1),cg=t("code",null,"数组",-1),ig=t("code",null,"2+",-1),rg={style:{"text-align":"left"}},ag=t("td",{style:{"text-align":"center"}},"669",-1),hg={style:{"text-align":"left"}},ug={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},fg=t("td",{style:{"text-align":"center"}},null,-1),gg={style:{"text-align":"left"}},mg=t("code",null,"树",-1),yg=t("code",null,"深度优先搜索",-1),xg=t("code",null,"二叉搜索树",-1),bg=t("code",null,"1+",-1),pg={style:{"text-align":"left"}},jg=t("td",{style:{"text-align":"center"}},"671",-1),kg={style:{"text-align":"left"}},Mg={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},vg=t("td",{style:{"text-align":"center"}},null,-1),Ig={style:{"text-align":"left"}},Eg=t("code",null,"树",-1),wg=t("code",null,"深度优先搜索",-1),Hg=t("code",null,"二叉树",-1),zg={style:{"text-align":"left"}},Og=t("td",{style:{"text-align":"center"}},"687",-1),qg={style:{"text-align":"left"}},Ng={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},Lg=t("td",{style:{"text-align":"center"}},null,-1),Cg={style:{"text-align":"left"}},Kg=t("code",null,"树",-1),Pg=t("code",null,"深度优先搜索",-1),Bg=t("code",null,"二叉树",-1),Vg={style:{"text-align":"left"}},Tg=t("td",{style:{"text-align":"center"}},"690",-1),Ug={style:{"text-align":"left"}},Rg={href:"https://leetcode.com/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},Wg=t("td",{style:{"text-align":"center"}},null,-1),Gg={style:{"text-align":"left"}},Yg=t("code",null,"树",-1),Qg=t("code",null,"深度优先搜索",-1),Sg=t("code",null,"广度优先搜索",-1),Dg=t("code",null,"2+",-1),Zg={style:{"text-align":"left"}},Ag=t("td",{style:{"text-align":"center"}},"700",-1),Fg={style:{"text-align":"left"}},Jg={href:"https://leetcode.com/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Xg={style:{"text-align":"center"}},$g={style:{"text-align":"left"}},tm=t("code",null,"树",-1),em=t("code",null,"二叉搜索树",-1),lm=t("code",null,"二叉树",-1),om={style:{"text-align":"left"}},sm=t("td",{style:{"text-align":"center"}},"701",-1),nm={style:{"text-align":"left"}},dm={href:"https://leetcode.com/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},_m={style:{"text-align":"center"}},cm={style:{"text-align":"left"}},im=t("code",null,"树",-1),rm=t("code",null,"二叉搜索树",-1),am=t("code",null,"二叉树",-1),hm={style:{"text-align":"left"}},um=t("td",{style:{"text-align":"center"}},"703",-1),fm={style:{"text-align":"left"}},gm={href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},mm={style:{"text-align":"center"}},ym={style:{"text-align":"left"}},xm=t("code",null,"树",-1),bm=t("code",null,"设计",-1),pm=t("code",null,"二叉搜索树",-1),jm=t("code",null,"3+",-1),km={style:{"text-align":"left"}},Mm=t("td",{style:{"text-align":"center"}},"742",-1),vm={style:{"text-align":"left"}},Im={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Em=t("td",{style:{"text-align":"center"}},null,-1),wm={style:{"text-align":"left"}},Hm=t("code",null,"树",-1),zm=t("code",null,"深度优先搜索",-1),Om=t("code",null,"广度优先搜索",-1),qm=t("code",null,"1+",-1),Nm={style:{"text-align":"left"}},Lm=t("td",{style:{"text-align":"center"}},"776",-1),Cm={style:{"text-align":"left"}},Km={href:"https://leetcode.com/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},Pm=t("td",{style:{"text-align":"center"}},null,-1),Bm={style:{"text-align":"left"}},Vm=t("code",null,"树",-1),Tm=t("code",null,"二叉搜索树",-1),Um=t("code",null,"递归",-1),Rm=t("code",null,"1+",-1),Wm={style:{"text-align":"left"}},Gm=t("td",{style:{"text-align":"center"}},"783",-1),Ym={style:{"text-align":"left"}},Qm={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},Sm={style:{"text-align":"center"}},Dm={style:{"text-align":"left"}},Zm=t("code",null,"树",-1),Am=t("code",null,"深度优先搜索",-1),Fm=t("code",null,"广度优先搜索",-1),Jm=t("code",null,"2+",-1),Xm={style:{"text-align":"left"}},$m=t("td",{style:{"text-align":"center"}},"814",-1),t2={style:{"text-align":"left"}},e2={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},l2=t("td",{style:{"text-align":"center"}},null,-1),o2={style:{"text-align":"left"}},s2=t("code",null,"树",-1),n2=t("code",null,"深度优先搜索",-1),d2=t("code",null,"二叉树",-1),_2={style:{"text-align":"left"}},c2=t("td",{style:{"text-align":"center"}},"834",-1),i2={style:{"text-align":"left"}},r2={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},a2=t("td",{style:{"text-align":"center"}},null,-1),h2={style:{"text-align":"left"}},u2=t("code",null,"树",-1),f2=t("code",null,"深度优先搜索",-1),g2=t("code",null,"图",-1),m2=t("code",null,"1+",-1),y2={style:{"text-align":"left"}},x2=t("td",{style:{"text-align":"center"}},"863",-1),b2={style:{"text-align":"left"}},p2={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},j2=t("td",{style:{"text-align":"center"}},null,-1),k2={style:{"text-align":"left"}},M2=t("code",null,"树",-1),v2=t("code",null,"深度优先搜索",-1),I2=t("code",null,"广度优先搜索",-1),E2=t("code",null,"2+",-1),w2={style:{"text-align":"left"}},H2=t("td",{style:{"text-align":"center"}},"865",-1),z2={style:{"text-align":"left"}},O2={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},q2=t("td",{style:{"text-align":"center"}},null,-1),N2={style:{"text-align":"left"}},L2=t("code",null,"树",-1),C2=t("code",null,"深度优先搜索",-1),K2=t("code",null,"广度优先搜索",-1),P2=t("code",null,"2+",-1),B2={style:{"text-align":"left"}},V2=t("td",{style:{"text-align":"center"}},"872",-1),T2={style:{"text-align":"left"}},U2={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},R2=t("td",{style:{"text-align":"center"}},null,-1),W2={style:{"text-align":"left"}},G2=t("code",null,"树",-1),Y2=t("code",null,"深度优先搜索",-1),Q2=t("code",null,"二叉树",-1),S2={style:{"text-align":"left"}},D2=t("td",{style:{"text-align":"center"}},"889",-1),Z2={style:{"text-align":"left"}},A2={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},F2={style:{"text-align":"center"}},J2={style:{"text-align":"left"}},X2=t("code",null,"树",-1),$2=t("code",null,"数组",-1),ty=t("code",null,"哈希表",-1),ey=t("code",null,"2+",-1),ly={style:{"text-align":"left"}},oy=t("td",{style:{"text-align":"center"}},"894",-1),sy={style:{"text-align":"left"}},ny={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},dy=t("td",{style:{"text-align":"center"}},null,-1),_y={style:{"text-align":"left"}},cy=t("code",null,"树",-1),iy=t("code",null,"递归",-1),ry=t("code",null,"记忆化搜索",-1),ay=t("code",null,"2+",-1),hy={style:{"text-align":"left"}},uy=t("td",{style:{"text-align":"center"}},"897",-1),fy={style:{"text-align":"left"}},gy={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},my=t("td",{style:{"text-align":"center"}},null,-1),yy={style:{"text-align":"left"}},xy=t("code",null,"栈",-1),by=t("code",null,"树",-1),py=t("code",null,"深度优先搜索",-1),jy=t("code",null,"2+",-1),ky={style:{"text-align":"left"}},My=t("td",{style:{"text-align":"center"}},"919",-1),vy={style:{"text-align":"left"}},Iy={href:"https://leetcode.com/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},Ey=t("td",{style:{"text-align":"center"}},null,-1),wy={style:{"text-align":"left"}},Hy=t("code",null,"树",-1),zy=t("code",null,"广度优先搜索",-1),Oy=t("code",null,"设计",-1),qy=t("code",null,"1+",-1),Ny={style:{"text-align":"left"}},Ly=t("td",{style:{"text-align":"center"}},"938",-1),Cy={style:{"text-align":"left"}},Ky={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},Py=t("td",{style:{"text-align":"center"}},null,-1),By={style:{"text-align":"left"}},Vy=t("code",null,"树",-1),Ty=t("code",null,"深度优先搜索",-1),Uy=t("code",null,"二叉搜索树",-1),Ry=t("code",null,"1+",-1),Wy={style:{"text-align":"left"}},Gy=t("td",{style:{"text-align":"center"}},"951",-1),Yy={style:{"text-align":"left"}},Qy={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Sy=t("td",{style:{"text-align":"center"}},null,-1),Dy={style:{"text-align":"left"}},Zy=t("code",null,"树",-1),Ay=t("code",null,"深度优先搜索",-1),Fy=t("code",null,"二叉树",-1),Jy={style:{"text-align":"left"}},Xy=t("td",{style:{"text-align":"center"}},"958",-1),$y={style:{"text-align":"left"}},tx={href:"https://leetcode.com/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ex={style:{"text-align":"center"}},lx={style:{"text-align":"left"}},ox=t("code",null,"树",-1),sx=t("code",null,"广度优先搜索",-1),nx=t("code",null,"二叉树",-1),dx={style:{"text-align":"left"}},_x=t("td",{style:{"text-align":"center"}},"965",-1),cx={style:{"text-align":"left"}},ix={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},rx=t("td",{style:{"text-align":"center"}},null,-1),ax={style:{"text-align":"left"}},hx=t("code",null,"树",-1),ux=t("code",null,"深度优先搜索",-1),fx=t("code",null,"广度优先搜索",-1),gx=t("code",null,"1+",-1),mx={style:{"text-align":"left"}},yx=t("td",{style:{"text-align":"center"}},"968",-1),xx={style:{"text-align":"left"}},bx={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},px=t("td",{style:{"text-align":"center"}},null,-1),jx={style:{"text-align":"left"}},kx=t("code",null,"树",-1),Mx=t("code",null,"深度优先搜索",-1),vx=t("code",null,"动态规划",-1),Ix=t("code",null,"1+",-1),Ex={style:{"text-align":"left"}},wx=t("td",{style:{"text-align":"center"}},"971",-1),Hx={style:{"text-align":"left"}},zx={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ox=t("td",{style:{"text-align":"center"}},null,-1),qx={style:{"text-align":"left"}},Nx=t("code",null,"树",-1),Lx=t("code",null,"深度优先搜索",-1),Cx=t("code",null,"二叉树",-1),Kx={style:{"text-align":"left"}},Px=t("td",{style:{"text-align":"center"}},"979",-1),Bx={style:{"text-align":"left"}},Vx={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Tx=t("td",{style:{"text-align":"center"}},null,-1),Ux={style:{"text-align":"left"}},Rx=t("code",null,"树",-1),Wx=t("code",null,"深度优先搜索",-1),Gx=t("code",null,"二叉树",-1),Yx={style:{"text-align":"left"}},Qx=t("td",{style:{"text-align":"center"}},"987",-1),Sx={style:{"text-align":"left"}},Dx={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Zx=t("td",{style:{"text-align":"center"}},null,-1),Ax={style:{"text-align":"left"}},Fx=t("code",null,"树",-1),Jx=t("code",null,"深度优先搜索",-1),Xx=t("code",null,"广度优先搜索",-1),$x=t("code",null,"3+",-1),tb={style:{"text-align":"left"}},eb=t("td",{style:{"text-align":"center"}},"988",-1),lb={style:{"text-align":"left"}},ob={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},sb=t("td",{style:{"text-align":"center"}},null,-1),nb={style:{"text-align":"left"}},db=t("code",null,"树",-1),_b=t("code",null,"深度优先搜索",-1),cb=t("code",null,"字符串",-1),ib=t("code",null,"2+",-1),rb={style:{"text-align":"left"}},ab=t("td",{style:{"text-align":"center"}},"993",-1),hb={style:{"text-align":"left"}},ub={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},fb=t("td",{style:{"text-align":"center"}},null,-1),gb={style:{"text-align":"left"}},mb=t("code",null,"树",-1),yb=t("code",null,"深度优先搜索",-1),xb=t("code",null,"广度优先搜索",-1),bb=t("code",null,"1+",-1),pb={style:{"text-align":"left"}},jb=t("td",{style:{"text-align":"center"}},"998",-1),kb={style:{"text-align":"left"}},Mb={href:"https://leetcode.com/problems/maximum-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},vb=t("td",{style:{"text-align":"center"}},null,-1),Ib={style:{"text-align":"left"}},Eb=t("code",null,"树",-1),wb=t("code",null,"二叉树",-1),Hb={style:{"text-align":"left"}},zb=t("td",{style:{"text-align":"center"}},"1008",-1),Ob={style:{"text-align":"left"}},qb={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Nb={style:{"text-align":"center"}},Lb={style:{"text-align":"left"}},Cb=t("code",null,"栈",-1),Kb=t("code",null,"树",-1),Pb=t("code",null,"二叉搜索树",-1),Bb=t("code",null,"3+",-1),Vb={style:{"text-align":"left"}},Tb=t("td",{style:{"text-align":"center"}},"1022",-1),Ub={style:{"text-align":"left"}},Rb={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},Wb=t("td",{style:{"text-align":"center"}},null,-1),Gb={style:{"text-align":"left"}},Yb=t("code",null,"树",-1),Qb=t("code",null,"深度优先搜索",-1),Sb=t("code",null,"二叉树",-1),Db={style:{"text-align":"left"}},Zb=t("td",{style:{"text-align":"center"}},"1026",-1),Ab={style:{"text-align":"left"}},Fb={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},Jb=t("td",{style:{"text-align":"center"}},null,-1),Xb={style:{"text-align":"left"}},$b=t("code",null,"树",-1),tp=t("code",null,"深度优先搜索",-1),ep=t("code",null,"二叉树",-1),lp={style:{"text-align":"left"}},op=t("td",{style:{"text-align":"center"}},"1028",-1),sp={style:{"text-align":"left"}},np={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},dp=t("td",{style:{"text-align":"center"}},null,-1),_p={style:{"text-align":"left"}},cp=t("code",null,"树",-1),ip=t("code",null,"深度优先搜索",-1),rp=t("code",null,"字符串",-1),ap=t("code",null,"1+",-1),hp={style:{"text-align":"left"}},up=t("td",{style:{"text-align":"center"}},"1038",-1),fp={style:{"text-align":"left"}},gp={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},mp=t("td",{style:{"text-align":"center"}},null,-1),yp={style:{"text-align":"left"}},xp=t("code",null,"树",-1),bp=t("code",null,"深度优先搜索",-1),pp=t("code",null,"二叉搜索树",-1),jp=t("code",null,"1+",-1),kp={style:{"text-align":"left"}},Mp=t("td",{style:{"text-align":"center"}},"1080",-1),vp={style:{"text-align":"left"}},Ip={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},Ep=t("td",{style:{"text-align":"center"}},null,-1),wp={style:{"text-align":"left"}},Hp=t("code",null,"树",-1),zp=t("code",null,"深度优先搜索",-1),Op=t("code",null,"二叉树",-1),qp={style:{"text-align":"left"}},Np=t("td",{style:{"text-align":"center"}},"1104",-1),Lp={style:{"text-align":"left"}},Cp={href:"https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree",target:"_blank",rel:"noopener noreferrer"},Kp=t("td",{style:{"text-align":"center"}},null,-1),Pp={style:{"text-align":"left"}},Bp=t("code",null,"树",-1),Vp=t("code",null,"数学",-1),Tp=t("code",null,"二叉树",-1),Up={style:{"text-align":"left"}},Rp=t("td",{style:{"text-align":"center"}},"1110",-1),Wp={style:{"text-align":"left"}},Gp={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},Yp=t("td",{style:{"text-align":"center"}},null,-1),Qp={style:{"text-align":"left"}},Sp=t("code",null,"树",-1),Dp=t("code",null,"深度优先搜索",-1),Zp=t("code",null,"数组",-1),Ap=t("code",null,"2+",-1),Fp={style:{"text-align":"left"}},Jp=t("td",{style:{"text-align":"center"}},"1120",-1),Xp={style:{"text-align":"left"}},$p={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},t0=t("td",{style:{"text-align":"center"}},null,-1),e0={style:{"text-align":"left"}},l0=t("code",null,"树",-1),o0=t("code",null,"深度优先搜索",-1),s0=t("code",null,"二叉树",-1),n0={style:{"text-align":"left"}},d0=t("td",{style:{"text-align":"center"}},"1123",-1),_0={style:{"text-align":"left"}},c0={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},i0=t("td",{style:{"text-align":"center"}},null,-1),r0={style:{"text-align":"left"}},a0=t("code",null,"树",-1),h0=t("code",null,"深度优先搜索",-1),u0=t("code",null,"广度优先搜索",-1),f0=t("code",null,"2+",-1),g0={style:{"text-align":"left"}},m0=t("td",{style:{"text-align":"center"}},"1145",-1),y0={style:{"text-align":"left"}},x0={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},b0=t("td",{style:{"text-align":"center"}},null,-1),p0={style:{"text-align":"left"}},j0=t("code",null,"树",-1),k0=t("code",null,"深度优先搜索",-1),M0=t("code",null,"二叉树",-1),v0={style:{"text-align":"left"}},I0=t("td",{style:{"text-align":"center"}},"1161",-1),E0={style:{"text-align":"left"}},w0={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},H0=t("td",{style:{"text-align":"center"}},null,-1),z0={style:{"text-align":"left"}},O0=t("code",null,"树",-1),q0=t("code",null,"深度优先搜索",-1),N0=t("code",null,"广度优先搜索",-1),L0=t("code",null,"1+",-1),C0={style:{"text-align":"left"}},K0=t("td",{style:{"text-align":"center"}},"1214",-1),P0={style:{"text-align":"left"}},B0={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},V0=t("td",{style:{"text-align":"center"}},null,-1),T0={style:{"text-align":"left"}},U0=t("code",null,"栈",-1),R0=t("code",null,"树",-1),W0=t("code",null,"深度优先搜索",-1),G0=t("code",null,"4+",-1),Y0={style:{"text-align":"left"}},Q0=t("td",{style:{"text-align":"center"}},"1245",-1),S0={style:{"text-align":"left"}},D0={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},Z0=t("td",{style:{"text-align":"center"}},null,-1),A0={style:{"text-align":"left"}},F0=t("code",null,"树",-1),J0=t("code",null,"深度优先搜索",-1),X0=t("code",null,"广度优先搜索",-1),$0=t("code",null,"2+",-1),t3={style:{"text-align":"left"}},e3=t("td",{style:{"text-align":"center"}},"1257",-1),l3={style:{"text-align":"left"}},o3={href:"https://leetcode.com/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},s3=t("td",{style:{"text-align":"center"}},null,-1),n3={style:{"text-align":"left"}},d3=t("code",null,"树",-1),_3=t("code",null,"深度优先搜索",-1),c3=t("code",null,"广度优先搜索",-1),i3=t("code",null,"3+",-1),r3={style:{"text-align":"left"}},a3=t("td",{style:{"text-align":"center"}},"1261",-1),h3={style:{"text-align":"left"}},u3={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},f3=t("td",{style:{"text-align":"center"}},null,-1),g3={style:{"text-align":"left"}},m3=t("code",null,"树",-1),y3=t("code",null,"深度优先搜索",-1),x3=t("code",null,"广度优先搜索",-1),b3=t("code",null,"3+",-1),p3={style:{"text-align":"left"}},j3=t("td",{style:{"text-align":"center"}},"1273",-1),k3={style:{"text-align":"left"}},M3={href:"https://leetcode.com/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},v3=t("td",{style:{"text-align":"center"}},null,-1),I3={style:{"text-align":"left"}},E3=t("code",null,"树",-1),w3=t("code",null,"深度优先搜索",-1),H3=t("code",null,"广度优先搜索",-1),z3=t("code",null,"1+",-1),O3={style:{"text-align":"left"}},q3=t("td",{style:{"text-align":"center"}},"1302",-1),N3={style:{"text-align":"left"}},L3={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},C3=t("td",{style:{"text-align":"center"}},null,-1),K3={style:{"text-align":"left"}},P3=t("code",null,"树",-1),B3=t("code",null,"深度优先搜索",-1),V3=t("code",null,"广度优先搜索",-1),T3=t("code",null,"1+",-1),U3={style:{"text-align":"left"}},R3=t("td",{style:{"text-align":"center"}},"1305",-1),W3={style:{"text-align":"left"}},G3={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},Y3=t("td",{style:{"text-align":"center"}},null,-1),Q3={style:{"text-align":"left"}},S3=t("code",null,"树",-1),D3=t("code",null,"深度优先搜索",-1),Z3=t("code",null,"二叉搜索树",-1),A3=t("code",null,"2+",-1),F3={style:{"text-align":"left"}},J3=t("td",{style:{"text-align":"center"}},"1315",-1),X3={style:{"text-align":"left"}},$3={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},t6=t("td",{style:{"text-align":"center"}},null,-1),e6={style:{"text-align":"left"}},l6=t("code",null,"树",-1),o6=t("code",null,"深度优先搜索",-1),s6=t("code",null,"广度优先搜索",-1),n6=t("code",null,"1+",-1),d6={style:{"text-align":"left"}},_6=t("td",{style:{"text-align":"center"}},"1325",-1),c6={style:{"text-align":"left"}},i6={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},r6=t("td",{style:{"text-align":"center"}},null,-1),a6={style:{"text-align":"left"}},h6=t("code",null,"树",-1),u6=t("code",null,"深度优先搜索",-1),f6=t("code",null,"二叉树",-1),g6={style:{"text-align":"left"}},m6=t("td",{style:{"text-align":"center"}},"1339",-1),y6={style:{"text-align":"left"}},x6={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},b6=t("td",{style:{"text-align":"center"}},null,-1),p6={style:{"text-align":"left"}},j6=t("code",null,"树",-1),k6=t("code",null,"深度优先搜索",-1),M6=t("code",null,"二叉树",-1),v6={style:{"text-align":"left"}},I6=t("td",{style:{"text-align":"center"}},"1361",-1),E6={style:{"text-align":"left"}},w6={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},H6=t("td",{style:{"text-align":"center"}},null,-1),z6={style:{"text-align":"left"}},O6=t("code",null,"树",-1),q6=t("code",null,"深度优先搜索",-1),N6=t("code",null,"广度优先搜索",-1),L6=t("code",null,"3+",-1),C6={style:{"text-align":"left"}},K6=t("td",{style:{"text-align":"center"}},"1367",-1),P6={style:{"text-align":"left"}},B6={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},V6=t("td",{style:{"text-align":"center"}},null,-1),T6={style:{"text-align":"left"}},U6=t("code",null,"树",-1),R6=t("code",null,"深度优先搜索",-1),W6=t("code",null,"链表",-1),G6=t("code",null,"1+",-1),Y6={style:{"text-align":"left"}},Q6=t("td",{style:{"text-align":"center"}},"1372",-1),S6={style:{"text-align":"left"}},D6={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Z6=t("td",{style:{"text-align":"center"}},null,-1),A6={style:{"text-align":"left"}},F6=t("code",null,"树",-1),J6=t("code",null,"深度优先搜索",-1),X6=t("code",null,"动态规划",-1),$6=t("code",null,"1+",-1),t4={style:{"text-align":"left"}},e4=t("td",{style:{"text-align":"center"}},"1373",-1),l4={style:{"text-align":"left"}},o4={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},s4=t("td",{style:{"text-align":"center"}},null,-1),n4={style:{"text-align":"left"}},d4=t("code",null,"树",-1),_4=t("code",null,"深度优先搜索",-1),c4=t("code",null,"二叉搜索树",-1),i4=t("code",null,"2+",-1),r4={style:{"text-align":"left"}},a4=t("td",{style:{"text-align":"center"}},"1376",-1),h4={style:{"text-align":"left"}},u4={href:"https://leetcode.com/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},f4=t("td",{style:{"text-align":"center"}},null,-1),g4={style:{"text-align":"left"}},m4=t("code",null,"树",-1),y4=t("code",null,"深度优先搜索",-1),x4=t("code",null,"广度优先搜索",-1),b4={style:{"text-align":"left"}},p4=t("td",{style:{"text-align":"center"}},"1377",-1),j4={style:{"text-align":"left"}},k4={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},M4=t("td",{style:{"text-align":"center"}},null,-1),v4={style:{"text-align":"left"}},I4=t("code",null,"树",-1),E4=t("code",null,"深度优先搜索",-1),w4=t("code",null,"广度优先搜索",-1),H4=t("code",null,"1+",-1),z4={style:{"text-align":"left"}},O4=t("td",{style:{"text-align":"center"}},"1379",-1),q4={style:{"text-align":"left"}},N4={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},L4=t("td",{style:{"text-align":"center"}},null,-1),C4={style:{"text-align":"left"}},K4=t("code",null,"树",-1),P4=t("code",null,"深度优先搜索",-1),B4=t("code",null,"广度优先搜索",-1),V4=t("code",null,"1+",-1),T4={style:{"text-align":"left"}},U4=t("td",{style:{"text-align":"center"}},"1382",-1),R4={style:{"text-align":"left"}},W4={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},G4=t("td",{style:{"text-align":"center"}},null,-1),Y4={style:{"text-align":"left"}},Q4=t("code",null,"贪心",-1),S4=t("code",null,"树",-1),D4=t("code",null,"深度优先搜索",-1),Z4=t("code",null,"3+",-1),A4={style:{"text-align":"left"}},F4=t("td",{style:{"text-align":"center"}},"1430",-1),J4={style:{"text-align":"left"}},X4={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},$4=t("td",{style:{"text-align":"center"}},null,-1),t5={style:{"text-align":"left"}},e5=t("code",null,"树",-1),l5=t("code",null,"深度优先搜索",-1),o5=t("code",null,"广度优先搜索",-1),s5=t("code",null,"1+",-1),n5={style:{"text-align":"left"}},d5=t("td",{style:{"text-align":"center"}},"1443",-1),_5={style:{"text-align":"left"}},c5={href:"https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},i5=t("td",{style:{"text-align":"center"}},null,-1),r5={style:{"text-align":"left"}},a5=t("code",null,"树",-1),h5=t("code",null,"深度优先搜索",-1),u5=t("code",null,"广度优先搜索",-1),f5=t("code",null,"1+",-1),g5={style:{"text-align":"left"}},m5=t("td",{style:{"text-align":"center"}},"1448",-1),y5={style:{"text-align":"left"}},x5={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},b5=t("td",{style:{"text-align":"center"}},null,-1),p5={style:{"text-align":"left"}},j5=t("code",null,"树",-1),k5=t("code",null,"深度优先搜索",-1),M5=t("code",null,"广度优先搜索",-1),v5=t("code",null,"1+",-1),I5={style:{"text-align":"left"}},E5=t("td",{style:{"text-align":"center"}},"1457",-1),w5={style:{"text-align":"left"}},H5={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},z5=t("td",{style:{"text-align":"center"}},null,-1),O5={style:{"text-align":"left"}},q5=t("code",null,"位运算",-1),N5=t("code",null,"树",-1),L5=t("code",null,"深度优先搜索",-1),C5=t("code",null,"2+",-1),K5={style:{"text-align":"left"}},P5=t("td",{style:{"text-align":"center"}},"1469",-1),B5={style:{"text-align":"left"}},V5={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},T5=t("td",{style:{"text-align":"center"}},null,-1),U5={style:{"text-align":"left"}},R5=t("code",null,"树",-1),W5=t("code",null,"深度优先搜索",-1),G5=t("code",null,"广度优先搜索",-1),Y5=t("code",null,"1+",-1),Q5={style:{"text-align":"left"}},S5=t("td",{style:{"text-align":"center"}},"1483",-1),D5={style:{"text-align":"left"}},Z5={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},A5=t("td",{style:{"text-align":"center"}},null,-1),F5={style:{"text-align":"left"}},J5=t("code",null,"树",-1),X5=t("code",null,"深度优先搜索",-1),$5=t("code",null,"广度优先搜索",-1),t8=t("code",null,"3+",-1),e8={style:{"text-align":"left"}},l8=t("td",{style:{"text-align":"center"}},"1485",-1),o8={style:{"text-align":"left"}},s8={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},n8=t("td",{style:{"text-align":"center"}},null,-1),d8={style:{"text-align":"left"}},_8=t("code",null,"树",-1),c8=t("code",null,"深度优先搜索",-1),i8=t("code",null,"广度优先搜索",-1),r8=t("code",null,"2+",-1),a8={style:{"text-align":"left"}},h8=t("td",{style:{"text-align":"center"}},"1490",-1),u8={style:{"text-align":"left"}},f8={href:"https://leetcode.com/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},g8=t("td",{style:{"text-align":"center"}},null,-1),m8={style:{"text-align":"left"}},y8=t("code",null,"树",-1),x8=t("code",null,"深度优先搜索",-1),b8=t("code",null,"广度优先搜索",-1),p8=t("code",null,"1+",-1),j8={style:{"text-align":"left"}},k8=t("td",{style:{"text-align":"center"}},"1506",-1),M8={style:{"text-align":"left"}},v8={href:"https://leetcode.com/problems/find-root-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},I8=t("td",{style:{"text-align":"center"}},null,-1),E8={style:{"text-align":"left"}},w8=t("code",null,"位运算",-1),H8=t("code",null,"树",-1),z8=t("code",null,"深度优先搜索",-1),O8=t("code",null,"1+",-1),q8={style:{"text-align":"left"}},N8=t("td",{style:{"text-align":"center"}},"1516",-1),L8={style:{"text-align":"left"}},C8={href:"https://leetcode.com/problems/move-sub-tree-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},K8=t("td",{style:{"text-align":"center"}},null,-1),P8={style:{"text-align":"left"}},B8=t("code",null,"树",-1),V8=t("code",null,"深度优先搜索",-1),T8={style:{"text-align":"left"}},U8=t("td",{style:{"text-align":"center"}},"1519",-1),R8={style:{"text-align":"left"}},W8={href:"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},G8=t("td",{style:{"text-align":"center"}},null,-1),Y8={style:{"text-align":"left"}},Q8=t("code",null,"树",-1),S8=t("code",null,"深度优先搜索",-1),D8=t("code",null,"广度优先搜索",-1),Z8=t("code",null,"2+",-1),A8={style:{"text-align":"left"}},F8=t("td",{style:{"text-align":"center"}},"1522",-1),J8={style:{"text-align":"left"}},X8={href:"https://leetcode.com/problems/diameter-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},$8={style:{"text-align":"center"}},tj={style:{"text-align":"left"}},ej=t("code",null,"树",-1),lj=t("code",null,"深度优先搜索",-1),oj={style:{"text-align":"left"}},sj=t("td",{style:{"text-align":"center"}},"1530",-1),nj={style:{"text-align":"left"}},dj={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},_j=t("td",{style:{"text-align":"center"}},null,-1),cj={style:{"text-align":"left"}},ij=t("code",null,"树",-1),rj=t("code",null,"深度优先搜索",-1),aj=t("code",null,"二叉树",-1),hj={style:{"text-align":"left"}},uj=t("td",{style:{"text-align":"center"}},"1569",-1),fj={style:{"text-align":"left"}},gj={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},mj=t("td",{style:{"text-align":"center"}},null,-1),yj={style:{"text-align":"left"}},xj=t("code",null,"树",-1),bj=t("code",null,"并查集",-1),pj=t("code",null,"二叉搜索树",-1),jj=t("code",null,"7+",-1),kj={style:{"text-align":"left"}},Mj=t("td",{style:{"text-align":"center"}},"1586",-1),vj={style:{"text-align":"left"}},Ij={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},Ej=t("td",{style:{"text-align":"center"}},null,-1),wj={style:{"text-align":"left"}},Hj=t("code",null,"栈",-1),zj=t("code",null,"树",-1),Oj=t("code",null,"设计",-1),qj=t("code",null,"3+",-1),Nj={style:{"text-align":"left"}},Lj=t("td",{style:{"text-align":"center"}},"1597",-1),Cj={style:{"text-align":"left"}},Kj={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},Pj=t("td",{style:{"text-align":"center"}},null,-1),Bj={style:{"text-align":"left"}},Vj=t("code",null,"栈",-1),Tj=t("code",null,"树",-1),Uj=t("code",null,"字符串",-1),Rj=t("code",null,"1+",-1),Wj={style:{"text-align":"left"}},Gj=t("td",{style:{"text-align":"center"}},"1600",-1),Yj={style:{"text-align":"left"}},Qj={href:"https://leetcode.com/problems/throne-inheritance",target:"_blank",rel:"noopener noreferrer"},Sj=t("td",{style:{"text-align":"center"}},null,-1),Dj={style:{"text-align":"left"}},Zj=t("code",null,"树",-1),Aj=t("code",null,"深度优先搜索",-1),Fj=t("code",null,"设计",-1),Jj=t("code",null,"1+",-1),Xj={style:{"text-align":"left"}},$j=t("td",{style:{"text-align":"center"}},"1602",-1),t7={style:{"text-align":"left"}},e7={href:"https://leetcode.com/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},l7=t("td",{style:{"text-align":"center"}},null,-1),o7={style:{"text-align":"left"}},s7=t("code",null,"树",-1),n7=t("code",null,"广度优先搜索",-1),d7=t("code",null,"二叉树",-1),_7={style:{"text-align":"left"}},c7=t("td",{style:{"text-align":"center"}},"1609",-1),i7={style:{"text-align":"left"}},r7={href:"https://leetcode.com/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},a7=t("td",{style:{"text-align":"center"}},null,-1),h7={style:{"text-align":"left"}},u7=t("code",null,"树",-1),f7=t("code",null,"广度优先搜索",-1),g7=t("code",null,"二叉树",-1),m7={style:{"text-align":"left"}},y7=t("td",{style:{"text-align":"center"}},"1612",-1),x7={style:{"text-align":"left"}},b7={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},p7=t("td",{style:{"text-align":"center"}},null,-1),j7={style:{"text-align":"left"}},k7=t("code",null,"树",-1),M7=t("code",null,"深度优先搜索",-1),v7=t("code",null,"哈希表",-1),I7=t("code",null,"2+",-1),E7={style:{"text-align":"left"}},w7=t("td",{style:{"text-align":"center"}},"1617",-1),H7={style:{"text-align":"left"}},z7={href:"https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities",target:"_blank",rel:"noopener noreferrer"},O7=t("td",{style:{"text-align":"center"}},null,-1),q7={style:{"text-align":"left"}},N7=t("code",null,"位运算",-1),L7=t("code",null,"树",-1),C7=t("code",null,"动态规划",-1),K7=t("code",null,"2+",-1),P7={style:{"text-align":"left"}},B7=t("td",{style:{"text-align":"center"}},"1628",-1),V7={style:{"text-align":"left"}},T7={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},U7=t("td",{style:{"text-align":"center"}},null,-1),R7={style:{"text-align":"left"}},W7=t("code",null,"栈",-1),G7=t("code",null,"树",-1),Y7=t("code",null,"设计",-1),Q7=t("code",null,"3+",-1),S7={style:{"text-align":"left"}},D7=t("td",{style:{"text-align":"center"}},"1644",-1),Z7={style:{"text-align":"left"}},A7={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},F7=t("td",{style:{"text-align":"center"}},null,-1),J7={style:{"text-align":"left"}},X7=t("code",null,"树",-1),$7=t("code",null,"深度优先搜索",-1),t9=t("code",null,"二叉树",-1),e9={style:{"text-align":"left"}},l9=t("td",{style:{"text-align":"center"}},"1650",-1),o9={style:{"text-align":"left"}},s9={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii",target:"_blank",rel:"noopener noreferrer"},n9=t("td",{style:{"text-align":"center"}},null,-1),d9={style:{"text-align":"left"}},_9=t("code",null,"树",-1),c9=t("code",null,"哈希表",-1),i9=t("code",null,"双指针",-1),r9=t("code",null,"1+",-1),a9={style:{"text-align":"left"}},h9=t("td",{style:{"text-align":"center"}},"1660",-1),u9={style:{"text-align":"left"}},f9={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},g9=t("td",{style:{"text-align":"center"}},null,-1),m9={style:{"text-align":"left"}},y9=t("code",null,"树",-1),x9=t("code",null,"深度优先搜索",-1),b9=t("code",null,"广度优先搜索",-1),p9=t("code",null,"2+",-1),j9={style:{"text-align":"left"}},k9=t("td",{style:{"text-align":"center"}},"1666",-1),M9={style:{"text-align":"left"}},v9={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},I9=t("td",{style:{"text-align":"center"}},null,-1),E9={style:{"text-align":"left"}},w9=t("code",null,"树",-1),H9=t("code",null,"深度优先搜索",-1),z9=t("code",null,"二叉树",-1),O9={style:{"text-align":"left"}},q9=t("td",{style:{"text-align":"center"}},"1676",-1),N9={style:{"text-align":"left"}},L9={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},C9=t("td",{style:{"text-align":"center"}},null,-1),K9={style:{"text-align":"left"}},P9=t("code",null,"树",-1),B9=t("code",null,"深度优先搜索",-1),V9=t("code",null,"哈希表",-1),T9=t("code",null,"1+",-1),U9={style:{"text-align":"left"}},R9=t("td",{style:{"text-align":"center"}},"1719",-1),W9={style:{"text-align":"left"}},G9={href:"https://leetcode.com/problems/number-of-ways-to-reconstruct-a-tree",target:"_blank",rel:"noopener noreferrer"},Y9=t("td",{style:{"text-align":"center"}},null,-1),Q9={style:{"text-align":"left"}},S9=t("code",null,"树",-1),D9=t("code",null,"图",-1),Z9={style:{"text-align":"left"}},A9=t("td",{style:{"text-align":"center"}},"1740",-1),F9={style:{"text-align":"left"}},J9={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},X9=t("td",{style:{"text-align":"center"}},null,-1),$9={style:{"text-align":"left"}},tk=t("code",null,"树",-1),ek=t("code",null,"深度优先搜索",-1),lk=t("code",null,"广度优先搜索",-1),ok=t("code",null,"2+",-1),sk={style:{"text-align":"left"}},nk=t("td",{style:{"text-align":"center"}},"1766",-1),dk={style:{"text-align":"left"}},_k={href:"https://leetcode.com/problems/tree-of-coprimes",target:"_blank",rel:"noopener noreferrer"},ck=t("td",{style:{"text-align":"center"}},null,-1),ik={style:{"text-align":"left"}},rk=t("code",null,"树",-1),ak=t("code",null,"深度优先搜索",-1),hk=t("code",null,"数组",-1),uk=t("code",null,"2+",-1),fk={style:{"text-align":"left"}},gk=t("td",{style:{"text-align":"center"}},"1902",-1),mk={style:{"text-align":"left"}},yk={href:"https://leetcode.com/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},xk=t("td",{style:{"text-align":"center"}},null,-1),bk={style:{"text-align":"left"}},pk=t("code",null,"树",-1),jk=t("code",null,"二叉搜索树",-1),kk=t("code",null,"数组",-1),Mk=t("code",null,"2+",-1),vk={style:{"text-align":"left"}},Ik=t("td",{style:{"text-align":"center"}},"1916",-1),Ek={style:{"text-align":"left"}},wk={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},Hk=t("td",{style:{"text-align":"center"}},null,-1),zk={style:{"text-align":"left"}},Ok=t("code",null,"树",-1),qk=t("code",null,"图",-1),Nk=t("code",null,"拓扑排序",-1),Lk=t("code",null,"3+",-1),Ck={style:{"text-align":"left"}},Kk=t("td",{style:{"text-align":"center"}},"1932",-1),Pk={style:{"text-align":"left"}},Bk={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},Vk=t("td",{style:{"text-align":"center"}},null,-1),Tk={style:{"text-align":"left"}},Uk=t("code",null,"树",-1),Rk=t("code",null,"深度优先搜索",-1),Wk=t("code",null,"哈希表",-1),Gk=t("code",null,"2+",-1),Yk={style:{"text-align":"left"}},Qk=t("td",{style:{"text-align":"center"}},"1973",-1),Sk={style:{"text-align":"left"}},Dk={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},Zk=t("td",{style:{"text-align":"center"}},null,-1),Ak={style:{"text-align":"left"}},Fk=t("code",null,"树",-1),Jk=t("code",null,"深度优先搜索",-1),Xk=t("code",null,"二叉树",-1),$k={style:{"text-align":"left"}},tM=t("td",{style:{"text-align":"center"}},"1993",-1),eM={style:{"text-align":"left"}},lM={href:"https://leetcode.com/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},oM=t("td",{style:{"text-align":"center"}},null,-1),sM={style:{"text-align":"left"}},nM=t("code",null,"树",-1),dM=t("code",null,"深度优先搜索",-1),_M=t("code",null,"广度优先搜索",-1),cM=t("code",null,"3+",-1),iM={style:{"text-align":"left"}},rM=t("td",{style:{"text-align":"center"}},"2003",-1),aM={style:{"text-align":"left"}},hM={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},uM=t("td",{style:{"text-align":"center"}},null,-1),fM={style:{"text-align":"left"}},gM=t("code",null,"树",-1),mM=t("code",null,"深度优先搜索",-1),yM=t("code",null,"并查集",-1),xM=t("code",null,"1+",-1),bM={style:{"text-align":"left"}},pM=t("td",{style:{"text-align":"center"}},"2005",-1),jM={style:{"text-align":"left"}},kM={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},MM=t("td",{style:{"text-align":"center"}},null,-1),vM={style:{"text-align":"left"}},IM=t("code",null,"树",-1),EM=t("code",null,"数学",-1),wM=t("code",null,"动态规划",-1),HM=t("code",null,"2+",-1),zM={style:{"text-align":"left"}},OM=t("td",{style:{"text-align":"center"}},"2049",-1),qM={style:{"text-align":"left"}},NM={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},LM=t("td",{style:{"text-align":"center"}},null,-1),CM={style:{"text-align":"left"}},KM=t("code",null,"树",-1),PM=t("code",null,"深度优先搜索",-1),BM=t("code",null,"数组",-1),VM=t("code",null,"1+",-1),TM={style:{"text-align":"left"}},UM=t("td",{style:{"text-align":"center"}},"2096",-1),RM={style:{"text-align":"left"}},WM={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},GM=t("td",{style:{"text-align":"center"}},null,-1),YM={style:{"text-align":"left"}},QM=t("code",null,"树",-1),SM=t("code",null,"深度优先搜索",-1),DM=t("code",null,"字符串",-1),ZM=t("code",null,"1+",-1),AM={style:{"text-align":"left"}},FM=t("td",{style:{"text-align":"center"}},"2196",-1),JM={style:{"text-align":"left"}},XM={href:"https://leetcode.com/problems/create-binary-tree-from-descriptions",target:"_blank",rel:"noopener noreferrer"},$M={style:{"text-align":"center"}},tv={style:{"text-align":"left"}},ev=t("code",null,"树",-1),lv=t("code",null,"数组",-1),ov=t("code",null,"哈希表",-1),sv=t("code",null,"1+",-1),nv={style:{"text-align":"left"}},dv=t("td",{style:{"text-align":"center"}},"2236",-1),_v={style:{"text-align":"left"}},cv={href:"https://leetcode.com/problems/root-equals-sum-of-children",target:"_blank",rel:"noopener noreferrer"},iv=t("td",{style:{"text-align":"center"}},null,-1),rv={style:{"text-align":"left"}},av=t("code",null,"树",-1),hv=t("code",null,"二叉树",-1),uv={style:{"text-align":"left"}},fv=t("td",{style:{"text-align":"center"}},"2246",-1),gv={style:{"text-align":"left"}},mv={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},yv=t("td",{style:{"text-align":"center"}},null,-1),xv={style:{"text-align":"left"}},bv=t("code",null,"树",-1),pv=t("code",null,"深度优先搜索",-1),jv=t("code",null,"图",-1),kv=t("code",null,"3+",-1),Mv={style:{"text-align":"left"}},vv=t("td",{style:{"text-align":"center"}},"2265",-1),Iv={style:{"text-align":"left"}},Ev={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},wv=t("td",{style:{"text-align":"center"}},null,-1),Hv={style:{"text-align":"left"}},zv=t("code",null,"树",-1),Ov=t("code",null,"深度优先搜索",-1),qv=t("code",null,"二叉树",-1),Nv={style:{"text-align":"left"}},Lv=t("td",{style:{"text-align":"center"}},"2277",-1),Cv={style:{"text-align":"left"}},Kv={href:"https://leetcode.com/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},Pv=t("td",{style:{"text-align":"center"}},null,-1),Bv={style:{"text-align":"left"}},Vv=t("code",null,"树",-1),Tv=t("code",null,"深度优先搜索",-1),Uv=t("code",null,"广度优先搜索",-1),Rv=t("code",null,"1+",-1),Wv={style:{"text-align":"left"}},Gv=t("td",{style:{"text-align":"center"}},"2313",-1),Yv={style:{"text-align":"left"}},Qv={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},Sv=t("td",{style:{"text-align":"center"}},null,-1),Dv={style:{"text-align":"left"}},Zv=t("code",null,"树",-1),Av=t("code",null,"深度优先搜索",-1),Fv=t("code",null,"动态规划",-1),Jv=t("code",null,"1+",-1),Xv={style:{"text-align":"left"}},$v=t("td",{style:{"text-align":"center"}},"2322",-1),tI={style:{"text-align":"left"}},eI={href:"https://leetcode.com/problems/minimum-score-after-removals-on-a-tree",target:"_blank",rel:"noopener noreferrer"},lI=t("td",{style:{"text-align":"center"}},null,-1),oI={style:{"text-align":"left"}},sI=t("code",null,"位运算",-1),nI=t("code",null,"树",-1),dI=t("code",null,"深度优先搜索",-1),_I=t("code",null,"1+",-1),cI={style:{"text-align":"left"}},iI=t("td",{style:{"text-align":"center"}},"2331",-1),rI={style:{"text-align":"left"}},aI={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},hI=t("td",{style:{"text-align":"center"}},null,-1),uI={style:{"text-align":"left"}},fI=t("code",null,"树",-1),gI=t("code",null,"深度优先搜索",-1),mI=t("code",null,"二叉树",-1),yI={style:{"text-align":"left"}},xI=t("td",{style:{"text-align":"center"}},"2368",-1),bI={style:{"text-align":"left"}},pI={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},jI=t("td",{style:{"text-align":"center"}},null,-1),kI={style:{"text-align":"left"}},MI=t("code",null,"树",-1),vI=t("code",null,"深度优先搜索",-1),II=t("code",null,"广度优先搜索",-1),EI=t("code",null,"4+",-1),wI={style:{"text-align":"left"}},HI=t("td",{style:{"text-align":"center"}},"2378",-1),zI={style:{"text-align":"left"}},OI={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},qI=t("td",{style:{"text-align":"center"}},null,-1),NI={style:{"text-align":"left"}},LI=t("code",null,"树",-1),CI=t("code",null,"深度优先搜索",-1),KI=t("code",null,"动态规划",-1),PI={style:{"text-align":"left"}},BI=t("td",{style:{"text-align":"center"}},"2385",-1),VI={style:{"text-align":"left"}},TI={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},UI=t("td",{style:{"text-align":"center"}},null,-1),RI={style:{"text-align":"left"}},WI=t("code",null,"树",-1),GI=t("code",null,"深度优先搜索",-1),YI=t("code",null,"广度优先搜索",-1),QI=t("code",null,"2+",-1),SI={style:{"text-align":"left"}},DI=t("td",{style:{"text-align":"center"}},"2415",-1),ZI={style:{"text-align":"left"}},AI={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},FI=t("td",{style:{"text-align":"center"}},null,-1),JI={style:{"text-align":"left"}},XI=t("code",null,"树",-1),$I=t("code",null,"深度优先搜索",-1),tE=t("code",null,"广度优先搜索",-1),eE=t("code",null,"1+",-1),lE={style:{"text-align":"left"}},oE=t("td",{style:{"text-align":"center"}},"2421",-1),sE={style:{"text-align":"left"}},nE={href:"https://leetcode.com/problems/number-of-good-paths",target:"_blank",rel:"noopener noreferrer"},dE=t("td",{style:{"text-align":"center"}},null,-1),_E={style:{"text-align":"left"}},cE=t("code",null,"树",-1),iE=t("code",null,"并查集",-1),rE=t("code",null,"图",-1),aE=t("code",null,"3+",-1),hE={style:{"text-align":"left"}},uE=t("td",{style:{"text-align":"center"}},"2440",-1),fE={style:{"text-align":"left"}},gE={href:"https://leetcode.com/problems/create-components-with-same-value",target:"_blank",rel:"noopener noreferrer"},mE=t("td",{style:{"text-align":"center"}},null,-1),yE={style:{"text-align":"left"}},xE=t("code",null,"树",-1),bE=t("code",null,"深度优先搜索",-1),pE=t("code",null,"数组",-1),jE=t("code",null,"2+",-1),kE={style:{"text-align":"left"}},ME=t("td",{style:{"text-align":"center"}},"2445",-1),vE={style:{"text-align":"left"}},IE={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},EE=t("td",{style:{"text-align":"center"}},null,-1),wE={style:{"text-align":"left"}},HE=t("code",null,"树",-1),zE=t("code",null,"深度优先搜索",-1),OE=t("code",null,"广度优先搜索",-1),qE=t("code",null,"1+",-1),NE={style:{"text-align":"left"}},LE=t("td",{style:{"text-align":"center"}},"2458",-1),CE={style:{"text-align":"left"}},KE={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},PE=t("td",{style:{"text-align":"center"}},null,-1),BE={style:{"text-align":"left"}},VE=t("code",null,"树",-1),TE=t("code",null,"深度优先搜索",-1),UE=t("code",null,"广度优先搜索",-1),RE=t("code",null,"2+",-1),WE={style:{"text-align":"left"}},GE=t("td",{style:{"text-align":"center"}},"2467",-1),YE={style:{"text-align":"left"}},QE={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},SE=t("td",{style:{"text-align":"center"}},null,-1),DE={style:{"text-align":"left"}},ZE=t("code",null,"树",-1),AE=t("code",null,"深度优先搜索",-1),FE=t("code",null,"广度优先搜索",-1),JE=t("code",null,"2+",-1),XE={style:{"text-align":"left"}},$E=t("td",{style:{"text-align":"center"}},"2471",-1),tw={style:{"text-align":"left"}},ew={href:"https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},lw=t("td",{style:{"text-align":"center"}},null,-1),ow={style:{"text-align":"left"}},sw=t("code",null,"树",-1),nw=t("code",null,"广度优先搜索",-1),dw=t("code",null,"二叉树",-1),_w={style:{"text-align":"left"}},cw=t("td",{style:{"text-align":"center"}},"2476",-1),iw={style:{"text-align":"left"}},rw={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},aw=t("td",{style:{"text-align":"center"}},null,-1),hw={style:{"text-align":"left"}},uw=t("code",null,"树",-1),fw=t("code",null,"深度优先搜索",-1),gw=t("code",null,"二叉搜索树",-1),mw=t("code",null,"3+",-1),yw={style:{"text-align":"left"}},xw=t("td",{style:{"text-align":"center"}},"2477",-1),bw={style:{"text-align":"left"}},pw={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},jw=t("td",{style:{"text-align":"center"}},null,-1),kw={style:{"text-align":"left"}},Mw=t("code",null,"树",-1),vw=t("code",null,"深度优先搜索",-1),Iw=t("code",null,"广度优先搜索",-1),Ew=t("code",null,"1+",-1),ww={style:{"text-align":"left"}},Hw=t("td",{style:{"text-align":"center"}},"2479",-1),zw={style:{"text-align":"left"}},Ow={href:"https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},qw=t("td",{style:{"text-align":"center"}},null,-1),Nw={style:{"text-align":"left"}},Lw=t("code",null,"树",-1),Cw=t("code",null,"深度优先搜索",-1),Kw=t("code",null,"图",-1),Pw=t("code",null,"1+",-1),Bw={style:{"text-align":"left"}},Vw=t("td",{style:{"text-align":"center"}},"2509",-1),Tw={style:{"text-align":"left"}},Uw={href:"https://leetcode.com/problems/cycle-length-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Rw=t("td",{style:{"text-align":"center"}},null,-1),Ww={style:{"text-align":"left"}},Gw=t("code",null,"树",-1),Yw=t("code",null,"数组",-1),Qw=t("code",null,"二叉树",-1),Sw={style:{"text-align":"left"}},Dw=t("td",{style:{"text-align":"center"}},"2538",-1),Zw={style:{"text-align":"left"}},Aw={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},Fw=t("td",{style:{"text-align":"center"}},null,-1),Jw={style:{"text-align":"left"}},Xw=t("code",null,"树",-1),$w=t("code",null,"深度优先搜索",-1),tH=t("code",null,"数组",-1),eH=t("code",null,"1+",-1),lH={style:{"text-align":"left"}},oH=t("td",{style:{"text-align":"center"}},"2581",-1),sH={style:{"text-align":"left"}},nH={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},dH=t("td",{style:{"text-align":"center"}},null,-1),_H={style:{"text-align":"left"}},cH=t("code",null,"树",-1),iH=t("code",null,"深度优先搜索",-1),rH=t("code",null,"数组",-1),aH=t("code",null,"2+",-1),hH={style:{"text-align":"left"}},uH=t("td",{style:{"text-align":"center"}},"2583",-1),fH={style:{"text-align":"left"}},gH={href:"https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},mH=t("td",{style:{"text-align":"center"}},null,-1),yH={style:{"text-align":"left"}},xH=t("code",null,"树",-1),bH=t("code",null,"广度优先搜索",-1),pH=t("code",null,"二叉树",-1),jH=t("code",null,"1+",-1),kH={style:{"text-align":"left"}},MH=t("td",{style:{"text-align":"center"}},"2603",-1),vH={style:{"text-align":"left"}},IH={href:"https://leetcode.com/problems/collect-coins-in-a-tree",target:"_blank",rel:"noopener noreferrer"},EH=t("td",{style:{"text-align":"center"}},null,-1),wH={style:{"text-align":"left"}},HH=t("code",null,"树",-1),zH=t("code",null,"图",-1),OH=t("code",null,"拓扑排序",-1),qH=t("code",null,"1+",-1),NH={style:{"text-align":"left"}},LH=t("td",{style:{"text-align":"center"}},"2641",-1),CH={style:{"text-align":"left"}},KH={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},PH=t("td",{style:{"text-align":"center"}},null,-1),BH={style:{"text-align":"left"}},VH=t("code",null,"树",-1),TH=t("code",null,"深度优先搜索",-1),UH=t("code",null,"广度优先搜索",-1),RH=t("code",null,"2+",-1),WH={style:{"text-align":"left"}},GH=t("td",{style:{"text-align":"center"}},"2646",-1),YH={style:{"text-align":"left"}},QH={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},SH=t("td",{style:{"text-align":"center"}},null,-1),DH={style:{"text-align":"left"}},ZH=t("code",null,"树",-1),AH=t("code",null,"深度优先搜索",-1),FH=t("code",null,"图",-1),JH=t("code",null,"2+",-1),XH={style:{"text-align":"left"}},$H=t("td",{style:{"text-align":"center"}},"2673",-1),tz={style:{"text-align":"left"}},ez={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},lz=t("td",{style:{"text-align":"center"}},null,-1),oz={style:{"text-align":"left"}},sz=t("code",null,"贪心",-1),nz=t("code",null,"树",-1),dz=t("code",null,"数组",-1),_z=t("code",null,"2+",-1),cz={style:{"text-align":"left"}},iz=t("td",{style:{"text-align":"center"}},"2689",-1),rz={style:{"text-align":"left"}},az={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},hz=t("td",{style:{"text-align":"center"}},null,-1),uz={style:{"text-align":"left"}},fz=t("code",null,"树",-1),gz=t("code",null,"深度优先搜索",-1),mz=t("code",null,"二叉树",-1),yz={style:{"text-align":"left"}},xz=t("td",{style:{"text-align":"center"}},"2764",-1),bz={style:{"text-align":"left"}},pz={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},jz=t("td",{style:{"text-align":"center"}},null,-1),kz={style:{"text-align":"left"}},Mz=t("code",null,"栈",-1),vz=t("code",null,"树",-1),Iz=t("code",null,"深度优先搜索",-1),Ez=t("code",null,"1+",-1),wz={style:{"text-align":"left"}},Hz=t("td",{style:{"text-align":"center"}},"2773",-1),zz={style:{"text-align":"left"}},Oz={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},qz=t("td",{style:{"text-align":"center"}},null,-1),Nz={style:{"text-align":"left"}},Lz=t("code",null,"树",-1),Cz=t("code",null,"深度优先搜索",-1),Kz=t("code",null,"广度优先搜索",-1),Pz=t("code",null,"1+",-1),Bz={style:{"text-align":"left"}},Vz=t("td",{style:{"text-align":"center"}},"2791",-1),Tz={style:{"text-align":"left"}},Uz={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Rz=t("td",{style:{"text-align":"center"}},null,-1),Wz={style:{"text-align":"left"}},Gz=t("code",null,"位运算",-1),Yz=t("code",null,"树",-1),Qz=t("code",null,"深度优先搜索",-1),Sz=t("code",null,"2+",-1),Dz={style:{"text-align":"left"}},Zz=t("td",{style:{"text-align":"center"}},"2792",-1),Az={style:{"text-align":"left"}},Fz={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},Jz=t("td",{style:{"text-align":"center"}},null,-1),Xz={style:{"text-align":"left"}},$z=t("code",null,"树",-1),tO=t("code",null,"深度优先搜索",-1),eO=t("code",null,"分治",-1),lO=t("code",null,"1+",-1),oO={style:{"text-align":"left"}},sO=t("td",{style:{"text-align":"center"}},"2846",-1),nO={style:{"text-align":"left"}},dO={href:"https://leetcode.com/problems/minimum-edge-weight-equilibrium-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},_O=t("td",{style:{"text-align":"center"}},null,-1),cO={style:{"text-align":"left"}},iO=t("code",null,"树",-1),rO=t("code",null,"图",-1),aO=t("code",null,"数组",-1),hO=t("code",null,"1+",-1),uO={style:{"text-align":"left"}},fO=t("td",{style:{"text-align":"center"}},"2867",-1),gO={style:{"text-align":"left"}},mO={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},yO=t("td",{style:{"text-align":"center"}},null,-1),xO={style:{"text-align":"left"}},bO=t("code",null,"树",-1),pO=t("code",null,"深度优先搜索",-1),jO=t("code",null,"数学",-1),kO=t("code",null,"2+",-1),MO={style:{"text-align":"left"}},vO=t("td",{style:{"text-align":"center"}},"2872",-1),IO={style:{"text-align":"left"}},EO={href:"https://leetcode.com/problems/maximum-number-of-k-divisible-components",target:"_blank",rel:"noopener noreferrer"},wO=t("td",{style:{"text-align":"center"}},null,-1),HO={style:{"text-align":"left"}},zO=t("code",null,"树",-1),OO=t("code",null,"深度优先搜索",-1),qO={style:{"text-align":"left"}},NO=t("td",{style:{"text-align":"center"}},"2920",-1),LO={style:{"text-align":"left"}},CO={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},KO=t("td",{style:{"text-align":"center"}},null,-1),PO={style:{"text-align":"left"}},BO=t("code",null,"位运算",-1),VO=t("code",null,"树",-1),TO=t("code",null,"深度优先搜索",-1),UO=t("code",null,"2+",-1),RO={style:{"text-align":"left"}},WO=t("td",{style:{"text-align":"center"}},"2925",-1),GO={style:{"text-align":"left"}},YO={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},QO=t("td",{style:{"text-align":"center"}},null,-1),SO={style:{"text-align":"left"}},DO=t("code",null,"树",-1),ZO=t("code",null,"深度优先搜索",-1),AO=t("code",null,"动态规划",-1),FO={style:{"text-align":"left"}},JO=t("td",{style:{"text-align":"center"}},"2973",-1),XO={style:{"text-align":"left"}},$O={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},tq=t("td",{style:{"text-align":"center"}},null,-1),eq={style:{"text-align":"left"}},lq=t("code",null,"树",-1),oq=t("code",null,"深度优先搜索",-1),sq=t("code",null,"动态规划",-1),nq=t("code",null,"2+",-1),dq={style:{"text-align":"left"}},_q=t("td",{style:{"text-align":"center"}},"3004",-1),cq={style:{"text-align":"left"}},iq={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},rq=t("td",{style:{"text-align":"center"}},null,-1),aq={style:{"text-align":"left"}},hq=t("code",null,"树",-1),uq=t("code",null,"深度优先搜索",-1),fq=t("code",null,"数组",-1),gq=t("code",null,"1+",-1),mq={style:{"text-align":"left"}},yq=t("td",{style:{"text-align":"center"}},"3067",-1),xq={style:{"text-align":"left"}},bq={href:"https://leetcode.com/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network",target:"_blank",rel:"noopener noreferrer"},pq=t("td",{style:{"text-align":"center"}},null,-1),jq={style:{"text-align":"left"}},kq=t("code",null,"树",-1),Mq=t("code",null,"深度优先搜索",-1),vq=t("code",null,"数组",-1),Iq={style:{"text-align":"left"}},Eq=t("td",{style:{"text-align":"center"}},"3068",-1),wq={style:{"text-align":"left"}},Hq={href:"https://leetcode.com/problems/find-the-maximum-sum-of-node-values",target:"_blank",rel:"noopener noreferrer"},zq=t("td",{style:{"text-align":"center"}},null,-1),Oq={style:{"text-align":"left"}},qq=t("code",null,"贪心",-1),Nq=t("code",null,"位运算",-1),Lq=t("code",null,"树",-1),Cq=t("code",null,"3+",-1),Kq={style:{"text-align":"left"}},Pq=t("td",{style:{"text-align":"center"}},"3157",-1),Bq={style:{"text-align":"left"}},Vq={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},Tq=t("td",{style:{"text-align":"center"}},null,-1),Uq={style:{"text-align":"left"}},Rq=t("code",null,"树",-1),Wq=t("code",null,"深度优先搜索",-1),Gq=t("code",null,"广度优先搜索",-1),Yq=t("code",null,"1+",-1),Qq={style:{"text-align":"left"}},Sq=t("td",{style:{"text-align":"center"}},"3203",-1),Dq={style:{"text-align":"left"}},Zq={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},Aq=t("td",{style:{"text-align":"center"}},null,-1),Fq={style:{"text-align":"left"}},Jq=t("code",null,"树",-1),Xq=t("code",null,"深度优先搜索",-1),$q=t("code",null,"广度优先搜索",-1),tN=t("code",null,"1+",-1),eN={style:{"text-align":"left"}},lN=t("td",{style:{"text-align":"center"}},"3241",-1),oN={style:{"text-align":"left"}},sN={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},nN=t("td",{style:{"text-align":"center"}},null,-1),dN={style:{"text-align":"left"}},_N=t("code",null,"树",-1),cN=t("code",null,"深度优先搜索",-1),iN=t("code",null,"图",-1),rN=t("code",null,"1+",-1),aN={style:{"text-align":"left"}},hN=t("td",{style:{"text-align":"center"}},"3249",-1),uN={style:{"text-align":"left"}},fN={href:"https://leetcode.com/problems/count-the-number-of-good-nodes",target:"_blank",rel:"noopener noreferrer"},gN=t("td",{style:{"text-align":"center"}},null,-1),mN={style:{"text-align":"left"}},yN=t("code",null,"树",-1),xN=t("code",null,"深度优先搜索",-1),bN={style:{"text-align":"left"}},pN=t("td",{style:{"text-align":"center"}},"3313",-1),jN={style:{"text-align":"left"}},kN={href:"https://leetcode.com/problems/find-the-last-marked-nodes-in-tree",target:"_blank",rel:"noopener noreferrer"},MN=t("td",{style:{"text-align":"center"}},null,-1),vN={style:{"text-align":"left"}},IN=t("code",null,"树",-1),EN=t("code",null,"深度优先搜索",-1),wN={style:{"text-align":"left"}},HN=t("td",{style:{"text-align":"center"}},"3319",-1),zN={style:{"text-align":"left"}},ON={href:"https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},qN={style:{"text-align":"center"}},NN={style:{"text-align":"left"}},LN=t("code",null,"树",-1),CN=t("code",null,"深度优先搜索",-1),KN=t("code",null,"二叉树",-1),PN=t("code",null,"1+",-1),BN={style:{"text-align":"left"}},VN=t("td",{style:{"text-align":"center"}},"LCP 10",-1),TN={style:{"text-align":"left"}},UN={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},RN=t("td",{style:{"text-align":"center"}},null,-1),WN={style:{"text-align":"left"}},GN=t("code",null,"树",-1),YN=t("code",null,"深度优先搜索",-1),QN=t("code",null,"动态规划",-1),SN=t("code",null,"1+",-1),DN={style:{"text-align":"left"}},ZN=t("td",{style:{"text-align":"center"}},"LCP 26",-1),AN={style:{"text-align":"left"}},FN={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},JN=t("td",{style:{"text-align":"center"}},null,-1),XN={style:{"text-align":"left"}},$N=t("code",null,"树",-1),tL=t("code",null,"动态规划",-1),eL=t("code",null,"二叉树",-1),lL={style:{"text-align":"left"}},oL=t("td",{style:{"text-align":"center"}},"LCP 34",-1),sL={style:{"text-align":"left"}},nL={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},dL=t("td",{style:{"text-align":"center"}},null,-1),_L={style:{"text-align":"left"}},cL=t("code",null,"树",-1),iL=t("code",null,"动态规划",-1),rL=t("code",null,"二叉树",-1),aL={style:{"text-align":"left"}},hL=t("td",{style:{"text-align":"center"}},"LCP 44",-1),uL={style:{"text-align":"left"}},fL={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},gL=t("td",{style:{"text-align":"center"}},null,-1),mL={style:{"text-align":"left"}},yL=t("code",null,"树",-1),xL=t("code",null,"深度优先搜索",-1),bL=t("code",null,"广度优先搜索",-1),pL=t("code",null,"2+",-1),jL={style:{"text-align":"left"}},kL=t("td",{style:{"text-align":"center"}},"LCP 52",-1),ML={style:{"text-align":"left"}},vL={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},IL=t("td",{style:{"text-align":"center"}},null,-1),EL={style:{"text-align":"left"}},wL=t("code",null,"树",-1),HL=t("code",null,"线段树",-1),zL=t("code",null,"二叉搜索树",-1),OL=t("code",null,"4+",-1),qL={style:{"text-align":"left"}},NL=t("td",{style:{"text-align":"center"}},"LCP 60",-1),LL={style:{"text-align":"left"}},CL={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},KL=t("td",{style:{"text-align":"center"}},null,-1),PL={style:{"text-align":"left"}},BL=t("code",null,"树",-1),VL=t("code",null,"动态规划",-1),TL=t("code",null,"二叉树",-1),UL={style:{"text-align":"left"}},RL=t("td",{style:{"text-align":"center"}},"LCP 64",-1),WL={style:{"text-align":"left"}},GL={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},YL=t("td",{style:{"text-align":"center"}},null,-1),QL={style:{"text-align":"left"}},SL=t("code",null,"树",-1),DL=t("code",null,"深度优先搜索",-1),ZL=t("code",null,"动态规划",-1),AL=t("code",null,"1+",-1),FL={style:{"text-align":"left"}},JL=t("td",{style:{"text-align":"center"}},"LCP 67",-1),XL={style:{"text-align":"left"}},$L={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},tC=t("td",{style:{"text-align":"center"}},null,-1),eC={style:{"text-align":"left"}},lC=t("code",null,"树",-1),oC=t("code",null,"深度优先搜索",-1),sC=t("code",null,"广度优先搜索",-1),nC=t("code",null,"1+",-1),dC={style:{"text-align":"left"}},_C=t("td",{style:{"text-align":"center"}},"剑指 Offer 07",-1),cC={style:{"text-align":"left"}},iC={href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},rC={style:{"text-align":"center"}},aC={style:{"text-align":"left"}},hC=t("code",null,"树",-1),uC=t("code",null,"数组",-1),fC=t("code",null,"哈希表",-1),gC=t("code",null,"2+",-1),mC={style:{"text-align":"left"}},yC=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),xC={style:{"text-align":"left"}},bC={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},pC={style:{"text-align":"center"}},jC={style:{"text-align":"left"}},kC=t("code",null,"树",-1),MC=t("code",null,"深度优先搜索",-1),vC=t("code",null,"二叉树",-1),IC={style:{"text-align":"left"}},EC=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),wC={style:{"text-align":"left"}},HC={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},zC={style:{"text-align":"center"}},OC={style:{"text-align":"left"}},qC=t("code",null,"树",-1),NC=t("code",null,"深度优先搜索",-1),LC=t("code",null,"广度优先搜索",-1),CC=t("code",null,"1+",-1),KC={style:{"text-align":"left"}},PC=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),BC={style:{"text-align":"left"}},VC={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},TC={style:{"text-align":"center"}},UC={style:{"text-align":"left"}},RC=t("code",null,"树",-1),WC=t("code",null,"深度优先搜索",-1),GC=t("code",null,"广度优先搜索",-1),YC=t("code",null,"1+",-1),QC={style:{"text-align":"left"}},SC=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - I",-1),DC={style:{"text-align":"left"}},ZC={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},AC={style:{"text-align":"center"}},FC={style:{"text-align":"left"}},JC=t("code",null,"树",-1),XC=t("code",null,"广度优先搜索",-1),$C=t("code",null,"二叉树",-1),tK={style:{"text-align":"left"}},eK=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - II",-1),lK={style:{"text-align":"left"}},oK={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof",target:"_blank",rel:"noopener noreferrer"},sK={style:{"text-align":"center"}},nK={style:{"text-align":"left"}},dK=t("code",null,"树",-1),_K=t("code",null,"广度优先搜索",-1),cK=t("code",null,"二叉树",-1),iK={style:{"text-align":"left"}},rK=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - III",-1),aK={style:{"text-align":"left"}},hK={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof",target:"_blank",rel:"noopener noreferrer"},uK={style:{"text-align":"center"}},fK={style:{"text-align":"left"}},gK=t("code",null,"树",-1),mK=t("code",null,"广度优先搜索",-1),yK=t("code",null,"二叉树",-1),xK={style:{"text-align":"left"}},bK=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),pK={style:{"text-align":"left"}},jK={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},kK={style:{"text-align":"center"}},MK={style:{"text-align":"left"}},vK=t("code",null,"栈",-1),IK=t("code",null,"树",-1),EK=t("code",null,"二叉搜索树",-1),wK=t("code",null,"4+",-1),HK={style:{"text-align":"left"}},zK=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),OK={style:{"text-align":"left"}},qK={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},NK={style:{"text-align":"center"}},LK={style:{"text-align":"left"}},CK=t("code",null,"树",-1),KK=t("code",null,"深度优先搜索",-1),PK=t("code",null,"回溯",-1),BK=t("code",null,"1+",-1),VK={style:{"text-align":"left"}},TK=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),UK={style:{"text-align":"left"}},RK={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},WK={style:{"text-align":"center"}},GK={style:{"text-align":"left"}},YK=t("code",null,"栈",-1),QK=t("code",null,"树",-1),SK=t("code",null,"深度优先搜索",-1),DK=t("code",null,"4+",-1),ZK={style:{"text-align":"left"}},AK=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),FK={style:{"text-align":"left"}},JK={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},XK={style:{"text-align":"center"}},$K={style:{"text-align":"left"}},tP=t("code",null,"树",-1),eP=t("code",null,"深度优先搜索",-1),lP=t("code",null,"广度优先搜索",-1),oP=t("code",null,"3+",-1),sP={style:{"text-align":"left"}},nP=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),dP={style:{"text-align":"left"}},_P={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},cP={style:{"text-align":"center"}},iP={style:{"text-align":"left"}},rP=t("code",null,"树",-1),aP=t("code",null,"深度优先搜索",-1),hP=t("code",null,"二叉搜索树",-1),uP=t("code",null,"1+",-1),fP={style:{"text-align":"left"}},gP=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - I",-1),mP={style:{"text-align":"left"}},yP={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},xP={style:{"text-align":"center"}},bP={style:{"text-align":"left"}},pP=t("code",null,"树",-1),jP=t("code",null,"深度优先搜索",-1),kP=t("code",null,"广度优先搜索",-1),MP=t("code",null,"1+",-1),vP={style:{"text-align":"left"}},IP=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - II",-1),EP={style:{"text-align":"left"}},wP={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},HP=t("td",{style:{"text-align":"center"}},null,-1),zP={style:{"text-align":"left"}},OP=t("code",null,"树",-1),qP=t("code",null,"深度优先搜索",-1),NP=t("code",null,"二叉树",-1),LP={style:{"text-align":"left"}},CP=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - I",-1),KP={style:{"text-align":"left"}},PP={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},BP=t("td",{style:{"text-align":"center"}},null,-1),VP={style:{"text-align":"left"}},TP=t("code",null,"树",-1),UP=t("code",null,"深度优先搜索",-1),RP=t("code",null,"二叉搜索树",-1),WP=t("code",null,"1+",-1),GP={style:{"text-align":"left"}},YP=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - II",-1),QP={style:{"text-align":"left"}},SP={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},DP=t("td",{style:{"text-align":"center"}},null,-1),ZP={style:{"text-align":"left"}},AP=t("code",null,"树",-1),FP=t("code",null,"深度优先搜索",-1),JP=t("code",null,"二叉树",-1),XP={style:{"text-align":"left"}},$P=t("td",{style:{"text-align":"center"}},"剑指 Offer II 43",-1),tB={style:{"text-align":"left"}},eB={href:"https://leetcode.cn/problems/NaqhDT",target:"_blank",rel:"noopener noreferrer"},lB=t("td",{style:{"text-align":"center"}},null,-1),oB={style:{"text-align":"left"}},sB=t("code",null,"树",-1),nB=t("code",null,"广度优先搜索",-1),dB=t("code",null,"设计",-1),_B=t("code",null,"1+",-1),cB={style:{"text-align":"left"}},iB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),rB={style:{"text-align":"left"}},aB={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},hB=t("td",{style:{"text-align":"center"}},null,-1),uB={style:{"text-align":"left"}},fB=t("code",null,"树",-1),gB=t("code",null,"深度优先搜索",-1),mB=t("code",null,"广度优先搜索",-1),yB=t("code",null,"1+",-1),xB={style:{"text-align":"left"}},bB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),pB={style:{"text-align":"left"}},jB={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},kB=t("td",{style:{"text-align":"center"}},null,-1),MB={style:{"text-align":"left"}},vB=t("code",null,"树",-1),IB=t("code",null,"深度优先搜索",-1),EB=t("code",null,"广度优先搜索",-1),wB=t("code",null,"1+",-1),HB={style:{"text-align":"left"}},zB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),OB={style:{"text-align":"left"}},qB={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},NB=t("td",{style:{"text-align":"center"}},null,-1),LB={style:{"text-align":"left"}},CB=t("code",null,"树",-1),KB=t("code",null,"深度优先搜索",-1),PB=t("code",null,"广度优先搜索",-1),BB=t("code",null,"1+",-1),VB={style:{"text-align":"left"}},TB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),UB={style:{"text-align":"left"}},RB={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},WB=t("td",{style:{"text-align":"center"}},null,-1),GB={style:{"text-align":"left"}},YB=t("code",null,"树",-1),QB=t("code",null,"深度优先搜索",-1),SB=t("code",null,"二叉树",-1),DB={style:{"text-align":"left"}},ZB=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),AB={style:{"text-align":"left"}},FB={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},JB=t("td",{style:{"text-align":"center"}},null,-1),XB={style:{"text-align":"left"}},$B=t("code",null,"树",-1),tV=t("code",null,"深度优先搜索",-1),eV=t("code",null,"广度优先搜索",-1),lV=t("code",null,"3+",-1),oV={style:{"text-align":"left"}},sV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),nV={style:{"text-align":"left"}},dV={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},_V=t("td",{style:{"text-align":"center"}},null,-1),cV={style:{"text-align":"left"}},iV=t("code",null,"树",-1),rV=t("code",null,"深度优先搜索",-1),aV=t("code",null,"二叉树",-1),hV={style:{"text-align":"left"}},uV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),fV={style:{"text-align":"left"}},gV={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},mV=t("td",{style:{"text-align":"center"}},null,-1),yV={style:{"text-align":"left"}},xV=t("code",null,"树",-1),bV=t("code",null,"深度优先搜索",-1),pV=t("code",null,"二叉树",-1),jV={style:{"text-align":"left"}},kV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),MV={style:{"text-align":"left"}},vV={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},IV=t("td",{style:{"text-align":"center"}},null,-1),EV={style:{"text-align":"left"}},wV=t("code",null,"树",-1),HV=t("code",null,"深度优先搜索",-1),zV=t("code",null,"动态规划",-1),OV=t("code",null,"1+",-1),qV={style:{"text-align":"left"}},NV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),LV={style:{"text-align":"left"}},CV={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},KV=t("td",{style:{"text-align":"center"}},null,-1),PV={style:{"text-align":"left"}},BV=t("code",null,"栈",-1),VV=t("code",null,"树",-1),TV=t("code",null,"深度优先搜索",-1),UV=t("code",null,"2+",-1),RV={style:{"text-align":"left"}},WV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),GV={style:{"text-align":"left"}},YV={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},QV=t("td",{style:{"text-align":"center"}},null,-1),SV={style:{"text-align":"left"}},DV=t("code",null,"树",-1),ZV=t("code",null,"深度优先搜索",-1),AV=t("code",null,"二叉搜索树",-1),FV=t("code",null,"1+",-1),JV={style:{"text-align":"left"}},XV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),$V={style:{"text-align":"left"}},tT={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},eT=t("td",{style:{"text-align":"center"}},null,-1),lT={style:{"text-align":"left"}},oT=t("code",null,"树",-1),sT=t("code",null,"深度优先搜索",-1),nT=t("code",null,"二叉搜索树",-1),dT=t("code",null,"1+",-1),_T={style:{"text-align":"left"}},cT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),iT={style:{"text-align":"left"}},rT={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},aT=t("td",{style:{"text-align":"center"}},null,-1),hT={style:{"text-align":"left"}},uT=t("code",null,"栈",-1),fT=t("code",null,"树",-1),gT=t("code",null,"设计",-1),mT=t("code",null,"3+",-1),yT={style:{"text-align":"left"}},xT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 59",-1),bT={style:{"text-align":"left"}},pT={href:"https://leetcode.cn/problems/jBjn9C",target:"_blank",rel:"noopener noreferrer"},jT=t("td",{style:{"text-align":"center"}},null,-1),kT={style:{"text-align":"left"}},MT=t("code",null,"树",-1),vT=t("code",null,"设计",-1),IT=t("code",null,"二叉搜索树",-1),ET=t("code",null,"3+",-1),wT={style:{"text-align":"left"}},HT=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),zT={style:{"text-align":"left"}},OT={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},qT=t("td",{style:{"text-align":"center"}},null,-1),NT={style:{"text-align":"left"}},LT=t("code",null,"树",-1),CT=t("code",null,"二叉搜索树",-1),KT=t("code",null,"数组",-1),PT=t("code",null,"2+",-1),BT={style:{"text-align":"left"}},VT=t("td",{style:{"text-align":"center"}},"面试题 04.03",-1),TT={style:{"text-align":"left"}},UT={href:"https://leetcode.cn/problems/list-of-depth-lcci",target:"_blank",rel:"noopener noreferrer"},RT=t("td",{style:{"text-align":"center"}},null,-1),WT={style:{"text-align":"left"}},GT=t("code",null,"树",-1),YT=t("code",null,"广度优先搜索",-1),QT=t("code",null,"链表",-1),ST=t("code",null,"1+",-1),DT={style:{"text-align":"left"}},ZT=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),AT={style:{"text-align":"left"}},FT={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},JT=t("td",{style:{"text-align":"center"}},null,-1),XT={style:{"text-align":"left"}},$T=t("code",null,"树",-1),tU=t("code",null,"深度优先搜索",-1),eU=t("code",null,"二叉树",-1),lU={style:{"text-align":"left"}},oU=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),sU={style:{"text-align":"left"}},nU={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},dU=t("td",{style:{"text-align":"center"}},null,-1),_U={style:{"text-align":"left"}},cU=t("code",null,"树",-1),iU=t("code",null,"深度优先搜索",-1),rU=t("code",null,"二叉搜索树",-1),aU=t("code",null,"1+",-1),hU={style:{"text-align":"left"}},uU=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),fU={style:{"text-align":"left"}},gU={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},mU=t("td",{style:{"text-align":"center"}},null,-1),yU={style:{"text-align":"left"}},xU=t("code",null,"树",-1),bU=t("code",null,"深度优先搜索",-1),pU=t("code",null,"二叉搜索树",-1),jU=t("code",null,"1+",-1),kU={style:{"text-align":"left"}},MU=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),vU={style:{"text-align":"left"}},IU={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},EU=t("td",{style:{"text-align":"center"}},null,-1),wU={style:{"text-align":"left"}},HU=t("code",null,"树",-1),zU=t("code",null,"深度优先搜索",-1),OU=t("code",null,"二叉树",-1),qU={style:{"text-align":"left"}},NU=t("td",{style:{"text-align":"center"}},"面试题 04.09",-1),LU={style:{"text-align":"left"}},CU={href:"https://leetcode.cn/problems/bst-sequences-lcci",target:"_blank",rel:"noopener noreferrer"},KU=t("td",{style:{"text-align":"center"}},null,-1),PU={style:{"text-align":"left"}},BU=t("code",null,"树",-1),VU=t("code",null,"二叉搜索树",-1),TU=t("code",null,"回溯",-1),UU=t("code",null,"1+",-1),RU={style:{"text-align":"left"}},WU=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),GU={style:{"text-align":"left"}},YU={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},QU=t("td",{style:{"text-align":"center"}},null,-1),SU={style:{"text-align":"left"}},DU=t("code",null,"树",-1),ZU=t("code",null,"深度优先搜索",-1),AU=t("code",null,"二叉树",-1),FU=t("code",null,"2+",-1),JU={style:{"text-align":"left"}},XU=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),$U={style:{"text-align":"left"}},tR={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},eR=t("td",{style:{"text-align":"center"}},null,-1),lR={style:{"text-align":"left"}},oR=t("code",null,"树",-1),sR=t("code",null,"深度优先搜索",-1),nR=t("code",null,"二叉树",-1),dR={style:{"text-align":"left"}},_R=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),cR={style:{"text-align":"left"}},iR={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},rR=t("td",{style:{"text-align":"center"}},null,-1),aR={style:{"text-align":"left"}},hR=t("code",null,"栈",-1),uR=t("code",null,"树",-1),fR=t("code",null,"深度优先搜索",-1),gR=t("code",null,"3+",-1),mR={style:{"text-align":"left"}};function yR(xR,bR){const s=_("RouterLink"),n=_("ExternalLinkIcon"),d=_("font");return i(),r("div",null,[u,t("details",f,[g,m,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[j]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/monotonic-queue.html"},{default:o(()=>[v]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[I]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[E]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[w]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[H]),_:1}),l(),z,l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[O]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[q]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[N]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[L]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[C]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[K]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[P]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/strongly-connected-component.html"},{default:o(()=>[B]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[V]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:o(()=>[T]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[U]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[R]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[W]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[G]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[Y]),_:1})]),Q,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[S]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[D]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[Z]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[A]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[F]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[J]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[X]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[st]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[nt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[rt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/counting.html"},{default:o(()=>[at]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:o(()=>[jt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/randomized.html"},{default:o(()=>[vt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:o(()=>[It]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/reservoir-sampling.html"},{default:o(()=>[Et]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/rejection-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/database.html"},{default:o(()=>[Ht]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[zt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:o(()=>[Ot]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[qt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/interactive.html"},{default:o(()=>[Nt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/iterator.html"},{default:o(()=>[Lt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/concurrency.html"},{default:o(()=>[Ct]),_:1})])]),Kt,a(" prettier-ignore "),t("table",null,[Pt,t("tbody",null,[t("tr",null,[Bt,t("td",Vt,[t("a",Tt,[l("二叉树的中序遍历"),e(n)])]),t("td",Ut,[e(s,{to:"/leetcode-js/problem/0094.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Rt,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Wt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Gt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Yt]),_:1}),l(),Qt]),t("td",St,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Dt,t("td",Zt,[t("a",At,[l("不同的二叉搜索树 II"),e(n)])]),t("td",Ft,[e(s,{to:"/leetcode-js/problem/0095.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Jt,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Xt]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[$t]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[te]),_:1}),l(),ee]),t("td",le,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oe,t("td",se,[t("a",ne,[l("不同的二叉搜索树"),e(n)])]),t("td",de,[e(s,{to:"/leetcode-js/problem/0096.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_e,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ce]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[ie]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[re]),_:1}),l(),ae]),t("td",he,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[l("验证二叉搜索树"),e(n)])]),t("td",me,[e(s,{to:"/leetcode-js/problem/0098.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ye,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[xe]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[be]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[pe]),_:1}),l(),je]),t("td",ke,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Me,t("td",ve,[t("a",Ie,[l("恢复二叉搜索树"),e(n)])]),t("td",Ee,[e(s,{to:"/leetcode-js/problem/0099.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",we,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[He]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ze]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Oe]),_:1}),l(),qe]),t("td",Ne,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Le,t("td",Ce,[t("a",Ke,[l("相同的树"),e(n)])]),t("td",Pe,[e(s,{to:"/leetcode-js/problem/0100.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Be,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ve]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Te]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ue]),_:1}),l(),Re]),t("td",We,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ge,t("td",Ye,[t("a",Qe,[l("对称二叉树"),e(n)])]),t("td",Se,[e(s,{to:"/leetcode-js/problem/0101.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",De,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ze]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ae]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Fe]),_:1}),l(),Je]),t("td",Xe,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$e,t("td",tl,[t("a",el,[l("二叉树的层序遍历"),e(n)])]),t("td",ll,[e(s,{to:"/leetcode-js/problem/0102.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ol,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[sl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[nl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[dl]),_:1})]),t("td",_l,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cl,t("td",il,[t("a",rl,[l("二叉树的锯齿形层序遍历"),e(n)])]),t("td",al,[e(s,{to:"/leetcode-js/problem/0103.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hl,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ul]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[fl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[gl]),_:1})]),t("td",ml,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yl,t("td",xl,[t("a",bl,[l("二叉树的最大深度"),e(n)])]),t("td",pl,[e(s,{to:"/leetcode-js/problem/0104.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",jl,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[kl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ml]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[vl]),_:1}),l(),Il]),t("td",El,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wl,t("td",Hl,[t("a",zl,[l("从前序与中序遍历序列构造二叉树"),e(n)])]),t("td",Ol,[e(s,{to:"/leetcode-js/problem/0105.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ql,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Nl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ll]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Cl]),_:1}),l(),Kl]),t("td",Pl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bl,t("td",Vl,[t("a",Tl,[l("从中序与后序遍历序列构造二叉树"),e(n)])]),t("td",Ul,[e(s,{to:"/leetcode-js/problem/0106.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Rl,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Wl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Gl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Yl]),_:1}),l(),Ql]),t("td",Sl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dl,t("td",Zl,[t("a",Al,[l("二叉树的层序遍历 II"),e(n)])]),t("td",Fl,[e(s,{to:"/leetcode-js/problem/0107.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Jl,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Xl]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$l]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[to]),_:1})]),t("td",eo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lo,t("td",oo,[t("a",so,[l("将有序数组转换为二叉搜索树"),e(n)])]),t("td",no,[e(s,{to:"/leetcode-js/problem/0108.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_o,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[co]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[io]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ro]),_:1}),l(),ao]),t("td",ho,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[uo,t("td",fo,[t("a",go,[l("有序链表转换二叉搜索树"),e(n)])]),t("td",mo,[e(s,{to:"/leetcode-js/problem/0109.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yo,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[xo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[bo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[po]),_:1}),l(),jo]),t("td",ko,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mo,t("td",vo,[t("a",Io,[l("平衡二叉树"),e(n)])]),t("td",Eo,[e(s,{to:"/leetcode-js/problem/0110.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wo,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ho]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[zo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Oo]),_:1})]),t("td",qo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[No,t("td",Lo,[t("a",Co,[l("二叉树的最小深度"),e(n)])]),t("td",Ko,[e(s,{to:"/leetcode-js/problem/0111.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Po,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Bo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Vo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[To]),_:1}),l(),Uo]),t("td",Ro,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Wo,t("td",Go,[t("a",Yo,[l("路径总和"),e(n)])]),t("td",Qo,[e(s,{to:"/leetcode-js/problem/0112.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",So,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Do]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Zo]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ao]),_:1}),l(),Fo]),t("td",Jo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xo,t("td",$o,[t("a",ts,[l("路径总和 II"),e(n)])]),t("td",es,[e(s,{to:"/leetcode-js/problem/0113.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ls,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[os]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ss]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[ns]),_:1}),l(),ds]),t("td",_s,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cs,t("td",is,[t("a",rs,[l("二叉树展开为链表"),e(n)])]),t("td",as,[e(s,{to:"/leetcode-js/problem/0114.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hs,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[us]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[gs]),_:1}),l(),ms]),t("td",ys,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xs,t("td",bs,[t("a",ps,[l("填充每个节点的下一个右侧节点指针"),e(n)])]),t("td",js,[e(s,{to:"/leetcode-js/problem/0116.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ks,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ms]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[vs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Is]),_:1}),l(),Es]),t("td",ws,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hs,t("td",zs,[t("a",Os,[l("填充每个节点的下一个右侧节点指针 II"),e(n)])]),t("td",qs,[e(s,{to:"/leetcode-js/problem/0117.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ns,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ls]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Cs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ks]),_:1}),l(),Ps]),t("td",Bs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vs,t("td",Ts,[t("a",Us,[l("二叉树中的最大路径和"),e(n)])]),t("td",Rs,[e(s,{to:"/leetcode-js/problem/0124.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ws,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Gs]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ys]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Qs]),_:1}),l(),Ss]),t("td",Ds,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zs,t("td",As,[t("a",Fs,[l("求根节点到叶节点数字之和"),e(n)])]),t("td",Js,[e(s,{to:"/leetcode-js/problem/0129.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Xs,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$s]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[tn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[en]),_:1})]),t("td",ln,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[on,t("td",sn,[t("a",nn,[l("二叉树的前序遍历"),e(n)])]),t("td",dn,[e(s,{to:"/leetcode-js/problem/0144.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_n,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[cn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[rn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[an]),_:1}),l(),hn]),t("td",un,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fn,t("td",gn,[t("a",mn,[l("二叉树的后序遍历"),e(n)])]),t("td",yn,[e(s,{to:"/leetcode-js/problem/0145.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xn,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[bn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[pn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[jn]),_:1}),l(),kn]),t("td",Mn,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vn,t("td",In,[t("a",En,[l("上下翻转二叉树"),e(n)])]),t("td",wn,[e(s,{to:"/leetcode-js/problem/0156.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Hn,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[zn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[On]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[qn]),_:1})]),t("td",Nn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ln,t("td",Cn,[t("a",Kn,[l("二叉搜索树迭代器"),e(n)])]),t("td",Pn,[e(s,{to:"/leetcode-js/problem/0173.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Bn,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Vn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Tn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Un]),_:1}),l(),Rn]),t("td",Wn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gn,t("td",Yn,[t("a",Qn,[l("二叉树的右视图"),e(n)])]),t("td",Sn,[e(s,{to:"/leetcode-js/problem/0199.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Dn,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Zn]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[An]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Fn]),_:1}),l(),Jn]),t("td",Xn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$n,t("td",td,[t("a",ed,[l("完全二叉树的节点个数"),e(n)])]),t("td",ld,[e(s,{to:"/leetcode-js/problem/0222.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",od,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[sd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[nd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[dd]),_:1}),l(),_d]),t("td",cd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[id,t("td",rd,[t("a",ad,[l("翻转二叉树"),e(n)])]),t("td",hd,[e(s,{to:"/leetcode-js/problem/0226.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ud,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[gd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[md]),_:1}),l(),yd]),t("td",xd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[bd,t("td",pd,[t("a",jd,[l("二叉搜索树中第 K 小的元素"),e(n)])]),t("td",kd,[e(s,{to:"/leetcode-js/problem/0230.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Md,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[vd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Id]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Ed]),_:1}),l(),wd]),t("td",Hd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zd,t("td",Od,[t("a",qd,[l("二叉搜索树的最近公共祖先"),e(n)])]),t("td",Nd,[e(s,{to:"/leetcode-js/problem/0235.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ld,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Cd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Kd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Pd]),_:1}),l(),Bd]),t("td",Vd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Td,t("td",Ud,[t("a",Rd,[l("二叉树的最近公共祖先"),e(n)])]),t("td",Wd,[e(s,{to:"/leetcode-js/problem/0236.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gd,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Yd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Qd]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Sd]),_:1})]),t("td",Dd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zd,t("td",Ad,[t("a",Fd,[l("统计同值子树"),e(n)])]),Jd,t("td",Xd,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$d]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[t_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[e_]),_:1})]),t("td",l_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o_,t("td",s_,[t("a",n_,[l("验证二叉搜索树的前序遍历序列"),e(n)])]),d_,t("td",__,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[c_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[i_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[r_]),_:1}),l(),a_]),t("td",h_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u_,t("td",f_,[t("a",g_,[l("二叉树的所有路径"),e(n)])]),t("td",m_,[e(s,{to:"/leetcode-js/problem/0257.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",y_,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[x_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[b_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[p_]),_:1}),l(),j_]),t("td",k_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[M_,t("td",v_,[t("a",I_,[l("最接近的二叉搜索树值"),e(n)])]),E_,t("td",w_,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[H_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[z_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[O_]),_:1}),l(),q_]),t("td",N_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[L_,t("td",C_,[t("a",K_,[l("最接近的二叉搜索树值 II"),e(n)])]),P_,t("td",B_,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[V_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[T_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[U_]),_:1}),l(),R_]),t("td",W_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[G_,t("td",Y_,[t("a",Q_,[l("二叉搜索树中的中序后继"),e(n)])]),S_,t("td",D_,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Z_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[A_]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[F_]),_:1}),l(),J_]),t("td",X_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$_,t("td",tc,[t("a",ec,[l("二叉树的序列化与反序列化"),e(n)])]),t("td",lc,[e(s,{to:"/leetcode-js/problem/0297.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",oc,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[sc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[nc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[dc]),_:1}),l(),_c]),t("td",cc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ic,t("td",rc,[t("a",ac,[l("二叉树最长连续序列"),e(n)])]),hc,t("td",uc,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[gc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[mc]),_:1})]),t("td",yc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xc,t("td",bc,[t("a",pc,[l("二叉树的垂直遍历"),e(n)])]),jc,t("td",kc,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Mc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[vc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ic]),_:1}),l(),Ec]),t("td",wc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hc,t("td",zc,[t("a",Oc,[l("验证二叉树的前序序列化"),e(n)])]),qc,t("td",Nc,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Lc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Cc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Kc]),_:1}),l(),Pc]),t("td",Bc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vc,t("td",Tc,[t("a",Uc,[l("最大二叉搜索子树"),e(n)])]),Rc,t("td",Wc,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Gc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Yc]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Qc]),_:1}),l(),Sc]),t("td",Dc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zc,t("td",Ac,[t("a",Fc,[l("打家劫舍 III"),e(n)])]),Jc,t("td",Xc,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$c]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ti]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ei]),_:1}),l(),li]),t("td",oi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[si,t("td",ni,[t("a",di,[l("扁平化嵌套列表迭代器"),e(n)])]),_i,t("td",ci,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ii]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ri]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ai]),_:1}),l(),hi]),t("td",ui,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fi,t("td",gi,[t("a",mi,[l("寻找二叉树的叶子节点"),e(n)])]),t("td",yi,[e(s,{to:"/leetcode-js/problem/0366.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xi,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[bi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[pi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[ji]),_:1})]),t("td",ki,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mi,t("td",vi,[t("a",Ii,[l("左叶子之和"),e(n)])]),Ei,t("td",wi,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Hi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[zi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Oi]),_:1}),l(),qi]),t("td",Ni,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Li,t("td",Ci,[t("a",Ki,[l("将二叉搜索树转化为排序的双向链表"),e(n)])]),t("td",Pi,[e(s,{to:"/leetcode-js/problem/0426.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Bi,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Vi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ti]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ui]),_:1}),l(),Ri]),t("td",Wi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gi,t("td",Yi,[t("a",Qi,[l("建立四叉树"),e(n)])]),t("td",Si,[e(s,{to:"/leetcode-js/problem/0427.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Di,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Zi]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ai]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[Fi]),_:1}),l(),Ji]),t("td",Xi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$i,t("td",tr,[t("a",er,[l("序列化和反序列化 N 叉树"),e(n)])]),lr,t("td",or,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[sr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[nr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[dr]),_:1}),l(),_r]),t("td",cr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ir,t("td",rr,[t("a",ar,[l("N 叉树的层序遍历"),e(n)])]),hr,t("td",ur,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[gr]),_:1})]),t("td",mr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yr,t("td",xr,[t("a",br,[l("将 N 叉树编码为二叉树"),e(n)])]),pr,t("td",jr,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[kr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Mr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[vr]),_:1}),l(),Ir]),t("td",Er,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wr,t("td",Hr,[t("a",zr,[l("路径总和 III"),e(n)])]),t("td",Or,[e(s,{to:"/leetcode-js/problem/0437.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",qr,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Nr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Lr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Cr]),_:1})]),t("td",Kr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pr,t("td",Br,[t("a",Vr,[l("序列化和反序列化二叉搜索树"),e(n)])]),Tr,t("td",Ur,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Rr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Wr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Gr]),_:1}),l(),Yr]),t("td",Qr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sr,t("td",Dr,[t("a",Zr,[l("删除二叉搜索树中的节点"),e(n)])]),t("td",Ar,[e(s,{to:"/leetcode-js/problem/0450.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Fr,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Jr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Xr]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[$r]),_:1})]),t("td",ta,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ea,t("td",la,[t("a",oa,[l("二叉搜索树中的众数"),e(n)])]),sa,t("td",na,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[da]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[_a]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[ca]),_:1}),l(),ia]),t("td",ra,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[aa,t("td",ha,[t("a",ua,[l("出现次数最多的子树元素和"),e(n)])]),fa,t("td",ga,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ma]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ya]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[xa]),_:1}),l(),ba]),t("td",pa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ja,t("td",ka,[t("a",Ma,[l("二叉搜索树中的中序后继 II"),e(n)])]),va,t("td",Ia,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ea]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[wa]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Ha]),_:1})]),t("td",za,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oa,t("td",qa,[t("a",Na,[l("找树左下角的值"),e(n)])]),La,t("td",Ca,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ka]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Pa]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ba]),_:1}),l(),Va]),t("td",Ta,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ua,t("td",Ra,[t("a",Wa,[l("在每个树行中找最大值"),e(n)])]),Ga,t("td",Ya,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Qa]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Sa]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Da]),_:1}),l(),Za]),t("td",Aa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fa,t("td",Ja,[t("a",Xa,[l("二叉搜索树的最小绝对差"),e(n)])]),t("td",$a,[e(s,{to:"/leetcode-js/problem/0530.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",th,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[eh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[lh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[oh]),_:1}),l(),sh]),t("td",nh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[dh,t("td",_h,[t("a",ch,[l("从字符串生成二叉树"),e(n)])]),ih,t("td",rh,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ah]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[hh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[uh]),_:1}),l(),fh]),t("td",gh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mh,t("td",yh,[t("a",xh,[l("把二叉搜索树转换为累加树"),e(n)])]),bh,t("td",ph,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[jh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[kh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Mh]),_:1}),l(),vh]),t("td",Ih,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Eh,t("td",wh,[t("a",Hh,[l("二叉树的直径"),e(n)])]),t("td",zh,[e(s,{to:"/leetcode-js/problem/0543.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Oh,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[qh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Nh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Lh]),_:1})]),t("td",Ch,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Kh,t("td",Ph,[t("a",Bh,[l("二叉树的边界"),e(n)])]),Vh,t("td",Th,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Uh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Rh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Wh]),_:1})]),t("td",Gh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yh,t("td",Qh,[t("a",Sh,[l("二叉树最长连续序列 II"),e(n)])]),Dh,t("td",Zh,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ah]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Fh]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Jh]),_:1})]),t("td",Xh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$h,t("td",t1,[t("a",e1,[l("四叉树交集"),e(n)])]),l1,t("td",o1,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[s1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[n1]),_:1})]),t("td",d1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_1,t("td",c1,[t("a",i1,[l("N 叉树的最大深度"),e(n)])]),t("td",r1,[e(s,{to:"/leetcode-js/problem/0559.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",a1,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[h1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[u1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[f1]),_:1})]),t("td",g1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[m1,t("td",y1,[t("a",x1,[l("二叉树的坡度"),e(n)])]),b1,t("td",p1,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[j1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[k1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[M1]),_:1})]),t("td",v1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[I1,t("td",E1,[t("a",w1,[l("另一棵树的子树"),e(n)])]),t("td",H1,[e(s,{to:"/leetcode-js/problem/0572.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",z1,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[O1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[q1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[N1]),_:1}),l(),L1]),t("td",C1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[K1,t("td",P1,[t("a",B1,[l("杀掉进程"),e(n)])]),V1,t("td",T1,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[U1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[R1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[W1]),_:1}),l(),G1]),t("td",Y1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q1,t("td",S1,[t("a",D1,[l("N 叉树的前序遍历"),e(n)])]),t("td",Z1,[e(s,{to:"/leetcode-js/problem/0589.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",A1,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[F1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[J1]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[X1]),_:1})]),t("td",$1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[tu,t("td",eu,[t("a",lu,[l("N 叉树的后序遍历"),e(n)])]),t("td",ou,[e(s,{to:"/leetcode-js/problem/0590.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",su,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[nu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[du]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[_u]),_:1})]),t("td",cu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[iu,t("td",ru,[t("a",au,[l("根据二叉树创建字符串"),e(n)])]),hu,t("td",uu,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[gu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[mu]),_:1}),l(),yu]),t("td",xu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bu,t("td",pu,[t("a",ju,[l("合并二叉树"),e(n)])]),t("td",ku,[e(s,{to:"/leetcode-js/problem/0617.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Mu,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[vu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Iu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Eu]),_:1}),l(),wu]),t("td",Hu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zu,t("td",Ou,[t("a",qu,[l("在二叉树中增加一行"),e(n)])]),Nu,t("td",Lu,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Cu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ku]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Pu]),_:1}),l(),Bu]),t("td",Vu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tu,t("td",Uu,[t("a",Ru,[l("二叉树的层平均值"),e(n)])]),t("td",Wu,[e(s,{to:"/leetcode-js/problem/0637.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gu,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Yu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Qu]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Su]),_:1}),l(),Du]),t("td",Zu,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Au,t("td",Fu,[t("a",Ju,[l("寻找重复的子树"),e(n)])]),Xu,t("td",$u,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[tf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ef]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[lf]),_:1}),l(),of]),t("td",sf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nf,t("td",df,[t("a",_f,[l("两数之和 IV - 输入二叉搜索树"),e(n)])]),cf,t("td",rf,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[af]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[hf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[uf]),_:1}),l(),ff]),t("td",gf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[mf,t("td",yf,[t("a",xf,[l("最大二叉树"),e(n)])]),t("td",bf,[e(s,{to:"/leetcode-js/problem/0654.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",pf,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[jf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[kf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Mf]),_:1}),l(),vf]),t("td",If,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ef,t("td",wf,[t("a",Hf,[l("输出二叉树"),e(n)])]),zf,t("td",Of,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[qf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Nf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Lf]),_:1}),l(),Cf]),t("td",Kf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pf,t("td",Bf,[t("a",Vf,[l("二叉树最大宽度"),e(n)])]),t("td",Tf,[e(s,{to:"/leetcode-js/problem/0662.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Uf,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Rf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Wf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Gf]),_:1}),l(),Yf]),t("td",Qf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sf,t("td",Df,[t("a",Zf,[l("均匀树划分"),e(n)])]),Af,t("td",Ff,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Jf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Xf]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[$f]),_:1})]),t("td",tg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eg,t("td",lg,[t("a",og,[l("路径总和 IV"),e(n)])]),sg,t("td",ng,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[dg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[_g]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[cg]),_:1}),l(),ig]),t("td",rg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ag,t("td",hg,[t("a",ug,[l("修剪二叉搜索树"),e(n)])]),fg,t("td",gg,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[mg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[yg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[xg]),_:1}),l(),bg]),t("td",pg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jg,t("td",kg,[t("a",Mg,[l("二叉树中第二小的节点"),e(n)])]),vg,t("td",Ig,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Eg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[wg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Hg]),_:1})]),t("td",zg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Og,t("td",qg,[t("a",Ng,[l("最长同值路径"),e(n)])]),Lg,t("td",Cg,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Kg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Pg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Bg]),_:1})]),t("td",Vg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tg,t("td",Ug,[t("a",Rg,[l("员工的重要性"),e(n)])]),Wg,t("td",Gg,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Yg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Qg]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Sg]),_:1}),l(),Dg]),t("td",Zg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ag,t("td",Fg,[t("a",Jg,[l("二叉搜索树中的搜索"),e(n)])]),t("td",Xg,[e(s,{to:"/leetcode-js/problem/0700.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",$g,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[tm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[em]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[lm]),_:1})]),t("td",om,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[sm,t("td",nm,[t("a",dm,[l("二叉搜索树中的插入操作"),e(n)])]),t("td",_m,[e(s,{to:"/leetcode-js/problem/0701.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",cm,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[im]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[rm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[am]),_:1})]),t("td",hm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[um,t("td",fm,[t("a",gm,[l("数据流中的第 K 大元素"),e(n)])]),t("td",mm,[e(s,{to:"/leetcode-js/problem/0703.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ym,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[xm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[bm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[pm]),_:1}),l(),jm]),t("td",km,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Mm,t("td",vm,[t("a",Im,[l("二叉树最近的叶节点"),e(n)])]),Em,t("td",wm,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Hm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[zm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Om]),_:1}),l(),qm]),t("td",Nm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lm,t("td",Cm,[t("a",Km,[l("拆分二叉搜索树"),e(n)])]),Pm,t("td",Bm,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Vm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Tm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[Um]),_:1}),l(),Rm]),t("td",Wm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gm,t("td",Ym,[t("a",Qm,[l("二叉搜索树节点最小距离"),e(n)])]),t("td",Sm,[e(s,{to:"/leetcode-js/problem/0783.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Dm,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Zm]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Am]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Fm]),_:1}),l(),Jm]),t("td",Xm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$m,t("td",t2,[t("a",e2,[l("二叉树剪枝"),e(n)])]),l2,t("td",o2,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[s2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[n2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[d2]),_:1})]),t("td",_2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c2,t("td",i2,[t("a",r2,[l("树中距离之和"),e(n)])]),a2,t("td",h2,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[u2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[f2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[g2]),_:1}),l(),m2]),t("td",y2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[x2,t("td",b2,[t("a",p2,[l("二叉树中所有距离为 K 的结点"),e(n)])]),j2,t("td",k2,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[M2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[v2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[I2]),_:1}),l(),E2]),t("td",w2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H2,t("td",z2,[t("a",O2,[l("具有所有最深节点的最小子树"),e(n)])]),q2,t("td",N2,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[L2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[C2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[K2]),_:1}),l(),P2]),t("td",B2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[V2,t("td",T2,[t("a",U2,[l("叶子相似的树"),e(n)])]),R2,t("td",W2,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[G2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Y2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Q2]),_:1})]),t("td",S2,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[D2,t("td",Z2,[t("a",A2,[l("根据前序和后序遍历构造二叉树"),e(n)])]),t("td",F2,[e(s,{to:"/leetcode-js/problem/0889.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",J2,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[X2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[$2]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[ty]),_:1}),l(),ey]),t("td",ly,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oy,t("td",sy,[t("a",ny,[l("所有可能的真二叉树"),e(n)])]),dy,t("td",_y,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[cy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[iy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[ry]),_:1}),l(),ay]),t("td",hy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uy,t("td",fy,[t("a",gy,[l("递增顺序搜索树"),e(n)])]),my,t("td",yy,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[xy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[by]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[py]),_:1}),l(),jy]),t("td",ky,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[My,t("td",vy,[t("a",Iy,[l("完全二叉树插入器"),e(n)])]),Ey,t("td",wy,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Hy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[zy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Oy]),_:1}),l(),qy]),t("td",Ny,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ly,t("td",Cy,[t("a",Ky,[l("二叉搜索树的范围和"),e(n)])]),Py,t("td",By,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Vy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ty]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Uy]),_:1}),l(),Ry]),t("td",Wy,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Gy,t("td",Yy,[t("a",Qy,[l("翻转等价二叉树"),e(n)])]),Sy,t("td",Dy,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Zy]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ay]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Fy]),_:1})]),t("td",Jy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xy,t("td",$y,[t("a",tx,[l("二叉树的完全性检验"),e(n)])]),t("td",ex,[e(s,{to:"/leetcode-js/problem/0958.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",lx,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ox]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[sx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[nx]),_:1})]),t("td",dx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_x,t("td",cx,[t("a",ix,[l("单值二叉树"),e(n)])]),rx,t("td",ax,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[hx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ux]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[fx]),_:1}),l(),gx]),t("td",mx,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yx,t("td",xx,[t("a",bx,[l("监控二叉树"),e(n)])]),px,t("td",jx,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[kx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Mx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[vx]),_:1}),l(),Ix]),t("td",Ex,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wx,t("td",Hx,[t("a",zx,[l("翻转二叉树以匹配先序遍历"),e(n)])]),Ox,t("td",qx,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Nx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Lx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Cx]),_:1})]),t("td",Kx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Px,t("td",Bx,[t("a",Vx,[l("在二叉树中分配硬币"),e(n)])]),Tx,t("td",Ux,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Rx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Wx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Gx]),_:1})]),t("td",Yx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qx,t("td",Sx,[t("a",Dx,[l("二叉树的垂序遍历"),e(n)])]),Zx,t("td",Ax,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Fx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Jx]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Xx]),_:1}),l(),$x]),t("td",tb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eb,t("td",lb,[t("a",ob,[l("从叶结点开始的最小字符串"),e(n)])]),sb,t("td",nb,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[db]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[_b]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[cb]),_:1}),l(),ib]),t("td",rb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ab,t("td",hb,[t("a",ub,[l("二叉树的堂兄弟节点"),e(n)])]),fb,t("td",gb,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[mb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[yb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[xb]),_:1}),l(),bb]),t("td",pb,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[jb,t("td",kb,[t("a",Mb,[l("最大二叉树 II"),e(n)])]),vb,t("td",Ib,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Eb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[wb]),_:1})]),t("td",Hb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zb,t("td",Ob,[t("a",qb,[l("前序遍历构造二叉搜索树"),e(n)])]),t("td",Nb,[e(s,{to:"/leetcode-js/problem/1008.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Lb,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Cb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Kb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Pb]),_:1}),l(),Bb]),t("td",Vb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tb,t("td",Ub,[t("a",Rb,[l("从根到叶的二进制数之和"),e(n)])]),Wb,t("td",Gb,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Yb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Qb]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Sb]),_:1})]),t("td",Db,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zb,t("td",Ab,[t("a",Fb,[l("节点与其祖先之间的最大差值"),e(n)])]),Jb,t("td",Xb,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$b]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[tp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[ep]),_:1})]),t("td",lp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[op,t("td",sp,[t("a",np,[l("从先序遍历还原二叉树"),e(n)])]),dp,t("td",_p,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[cp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ip]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[rp]),_:1}),l(),ap]),t("td",hp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[up,t("td",fp,[t("a",gp,[l("从二叉搜索树到更大和树"),e(n)])]),mp,t("td",yp,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[xp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[bp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[pp]),_:1}),l(),jp]),t("td",kp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mp,t("td",vp,[t("a",Ip,[l("根到叶路径上的不足节点"),e(n)])]),Ep,t("td",wp,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Hp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[zp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Op]),_:1})]),t("td",qp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Np,t("td",Lp,[t("a",Cp,[l("二叉树寻路"),e(n)])]),Kp,t("td",Pp,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Bp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Vp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Tp]),_:1})]),t("td",Up,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Rp,t("td",Wp,[t("a",Gp,[l("删点成林"),e(n)])]),Yp,t("td",Qp,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Sp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Dp]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Zp]),_:1}),l(),Ap]),t("td",Fp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jp,t("td",Xp,[t("a",$p,[l("子树的最大平均值"),e(n)])]),t0,t("td",e0,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[l0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[o0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[s0]),_:1})]),t("td",n0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d0,t("td",_0,[t("a",c0,[l("最深叶节点的最近公共祖先"),e(n)])]),i0,t("td",r0,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[a0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[h0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[u0]),_:1}),l(),f0]),t("td",g0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m0,t("td",y0,[t("a",x0,[l("二叉树着色游戏"),e(n)])]),b0,t("td",p0,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[j0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[k0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[M0]),_:1})]),t("td",v0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I0,t("td",E0,[t("a",w0,[l("最大层内元素和"),e(n)])]),H0,t("td",z0,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[O0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[q0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[N0]),_:1}),l(),L0]),t("td",C0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K0,t("td",P0,[t("a",B0,[l("查找两棵二叉搜索树之和"),e(n)])]),V0,t("td",T0,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[U0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[R0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[W0]),_:1}),l(),G0]),t("td",Y0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q0,t("td",S0,[t("a",D0,[l("树的直径"),e(n)])]),Z0,t("td",A0,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[F0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[J0]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[X0]),_:1}),l(),$0]),t("td",t3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e3,t("td",l3,[t("a",o3,[l("最小公共区域"),e(n)])]),s3,t("td",n3,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[d3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[_3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[c3]),_:1}),l(),i3]),t("td",r3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a3,t("td",h3,[t("a",u3,[l("在受污染的二叉树中查找元素"),e(n)])]),f3,t("td",g3,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[m3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[y3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[x3]),_:1}),l(),b3]),t("td",p3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j3,t("td",k3,[t("a",M3,[l("删除树节点"),e(n)])]),v3,t("td",I3,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[E3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[w3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[H3]),_:1}),l(),z3]),t("td",O3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q3,t("td",N3,[t("a",L3,[l("层数最深叶子节点的和"),e(n)])]),C3,t("td",K3,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[P3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[B3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[V3]),_:1}),l(),T3]),t("td",U3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R3,t("td",W3,[t("a",G3,[l("两棵二叉搜索树中的所有元素"),e(n)])]),Y3,t("td",Q3,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[S3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[D3]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Z3]),_:1}),l(),A3]),t("td",F3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[J3,t("td",X3,[t("a",$3,[l("祖父节点值为偶数的节点和"),e(n)])]),t6,t("td",e6,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[l6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[o6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[s6]),_:1}),l(),n6]),t("td",d6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_6,t("td",c6,[t("a",i6,[l("删除给定值的叶子节点"),e(n)])]),r6,t("td",a6,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[h6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[u6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[f6]),_:1})]),t("td",g6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m6,t("td",y6,[t("a",x6,[l("分裂二叉树的最大乘积"),e(n)])]),b6,t("td",p6,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[j6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[k6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[M6]),_:1})]),t("td",v6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I6,t("td",E6,[t("a",w6,[l("验证二叉树"),e(n)])]),H6,t("td",z6,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[O6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[q6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[N6]),_:1}),l(),L6]),t("td",C6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K6,t("td",P6,[t("a",B6,[l("二叉树中的链表"),e(n)])]),V6,t("td",T6,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[U6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[R6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[W6]),_:1}),l(),G6]),t("td",Y6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q6,t("td",S6,[t("a",D6,[l("二叉树中的最长交错路径"),e(n)])]),Z6,t("td",A6,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[F6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[J6]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[X6]),_:1}),l(),$6]),t("td",t4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[e4,t("td",l4,[t("a",o4,[l("二叉搜索子树的最大键值和"),e(n)])]),s4,t("td",n4,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[d4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[_4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[c4]),_:1}),l(),i4]),t("td",r4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[a4,t("td",h4,[t("a",u4,[l("通知所有员工所需的时间"),e(n)])]),f4,t("td",g4,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[m4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[y4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[x4]),_:1})]),t("td",b4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p4,t("td",j4,[t("a",k4,[l("T 秒后青蛙的位置"),e(n)])]),M4,t("td",v4,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[I4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[E4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[w4]),_:1}),l(),H4]),t("td",z4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[O4,t("td",q4,[t("a",N4,[l("找出克隆二叉树中的相同节点"),e(n)])]),L4,t("td",C4,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[K4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[P4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[B4]),_:1}),l(),V4]),t("td",T4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[U4,t("td",R4,[t("a",W4,[l("将二叉搜索树变平衡"),e(n)])]),G4,t("td",Y4,[e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Q4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[S4]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[D4]),_:1}),l(),Z4]),t("td",A4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F4,t("td",J4,[t("a",X4,[l("判断给定的序列是否是二叉树从根到叶的路径"),e(n)])]),$4,t("td",t5,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[e5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[l5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[o5]),_:1}),l(),s5]),t("td",n5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d5,t("td",_5,[t("a",c5,[l("收集树上所有苹果的最少时间"),e(n)])]),i5,t("td",r5,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[a5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[h5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[u5]),_:1}),l(),f5]),t("td",g5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m5,t("td",y5,[t("a",x5,[l("统计二叉树中好节点的数目"),e(n)])]),b5,t("td",p5,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[j5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[k5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[M5]),_:1}),l(),v5]),t("td",I5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E5,t("td",w5,[t("a",H5,[l("二叉树中的伪回文路径"),e(n)])]),z5,t("td",O5,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[q5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[N5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[L5]),_:1}),l(),C5]),t("td",K5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P5,t("td",B5,[t("a",V5,[l("寻找所有的独生节点"),e(n)])]),T5,t("td",U5,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[R5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[W5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[G5]),_:1}),l(),Y5]),t("td",Q5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[S5,t("td",D5,[t("a",Z5,[l("树节点的第 K 个祖先"),e(n)])]),A5,t("td",F5,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[J5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[X5]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$5]),_:1}),l(),t8]),t("td",e8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[l8,t("td",o8,[t("a",s8,[l("克隆含随机指针的二叉树"),e(n)])]),n8,t("td",d8,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[_8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[c8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[i8]),_:1}),l(),r8]),t("td",a8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[h8,t("td",u8,[t("a",f8,[l("克隆 N 叉树"),e(n)])]),g8,t("td",m8,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[y8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[x8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[b8]),_:1}),l(),p8]),t("td",j8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[k8,t("td",M8,[t("a",v8,[l("找到 N 叉树的根节点"),e(n)])]),I8,t("td",E8,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[w8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[H8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[z8]),_:1}),l(),O8]),t("td",q8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N8,t("td",L8,[t("a",C8,[l("移动 N 叉树的子树"),e(n)])]),K8,t("td",P8,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[B8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[V8]),_:1})]),t("td",T8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[U8,t("td",R8,[t("a",W8,[l("子树中标签相同的节点数"),e(n)])]),G8,t("td",Y8,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Q8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[S8]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[D8]),_:1}),l(),Z8]),t("td",A8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F8,t("td",J8,[t("a",X8,[l("N 叉树的直径"),e(n)])]),t("td",$8,[e(s,{to:"/leetcode-js/problem/1522.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",tj,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ej]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[lj]),_:1})]),t("td",oj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sj,t("td",nj,[t("a",dj,[l("好叶子节点对的数量"),e(n)])]),_j,t("td",cj,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ij]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[rj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[aj]),_:1})]),t("td",hj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uj,t("td",fj,[t("a",gj,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(n)])]),mj,t("td",yj,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[xj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[bj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[pj]),_:1}),l(),jj]),t("td",kj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mj,t("td",vj,[t("a",Ij,[l("二叉搜索树迭代器 II"),e(n)])]),Ej,t("td",wj,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Hj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[zj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Oj]),_:1}),l(),qj]),t("td",Nj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lj,t("td",Cj,[t("a",Kj,[l("根据中缀表达式构造二叉表达式树"),e(n)])]),Pj,t("td",Bj,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Vj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Tj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Uj]),_:1}),l(),Rj]),t("td",Wj,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gj,t("td",Yj,[t("a",Qj,[l("王位继承顺序"),e(n)])]),Sj,t("td",Dj,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Zj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Aj]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Fj]),_:1}),l(),Jj]),t("td",Xj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$j,t("td",t7,[t("a",e7,[l("找到二叉树中最近的右侧节点"),e(n)])]),l7,t("td",o7,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[s7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[n7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[d7]),_:1})]),t("td",_7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[c7,t("td",i7,[t("a",r7,[l("奇偶树"),e(n)])]),a7,t("td",h7,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[u7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[f7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[g7]),_:1})]),t("td",m7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[y7,t("td",x7,[t("a",b7,[l("检查两棵二叉表达式树是否等价"),e(n)])]),p7,t("td",j7,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[k7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[M7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[v7]),_:1}),l(),I7]),t("td",E7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w7,t("td",H7,[t("a",z7,[l("统计子树中城市之间最大距离"),e(n)])]),O7,t("td",q7,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[N7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[L7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[C7]),_:1}),l(),K7]),t("td",P7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B7,t("td",V7,[t("a",T7,[l("设计带解析函数的表达式树"),e(n)])]),U7,t("td",R7,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[W7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[G7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Y7]),_:1}),l(),Q7]),t("td",S7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[D7,t("td",Z7,[t("a",A7,[l("二叉树的最近公共祖先 II"),e(n)])]),F7,t("td",J7,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[X7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[$7]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[t9]),_:1})]),t("td",e9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l9,t("td",o9,[t("a",s9,[l("二叉树的最近公共祖先 III"),e(n)])]),n9,t("td",d9,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[_9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[c9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[i9]),_:1}),l(),r9]),t("td",a9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[h9,t("td",u9,[t("a",f9,[l("纠正二叉树"),e(n)])]),g9,t("td",m9,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[y9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[x9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[b9]),_:1}),l(),p9]),t("td",j9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[k9,t("td",M9,[t("a",v9,[l("改变二叉树的根节点"),e(n)])]),I9,t("td",E9,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[w9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[H9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[z9]),_:1})]),t("td",O9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q9,t("td",N9,[t("a",L9,[l("二叉树的最近公共祖先 IV"),e(n)])]),C9,t("td",K9,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[P9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[B9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[V9]),_:1}),l(),T9]),t("td",U9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[R9,t("td",W9,[t("a",G9,[l("重构一棵树的方案数"),e(n)])]),Y9,t("td",Q9,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[S9]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[D9]),_:1})]),t("td",Z9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[A9,t("td",F9,[t("a",J9,[l("找到二叉树中的距离"),e(n)])]),X9,t("td",$9,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[tk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ek]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[lk]),_:1}),l(),ok]),t("td",sk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nk,t("td",dk,[t("a",_k,[l("互质树"),e(n)])]),ck,t("td",ik,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[rk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ak]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[hk]),_:1}),l(),uk]),t("td",fk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gk,t("td",mk,[t("a",yk,[l("给定二叉搜索树的插入顺序求深度"),e(n)])]),xk,t("td",bk,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[pk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[jk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[kk]),_:1}),l(),Mk]),t("td",vk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ik,t("td",Ek,[t("a",wk,[l("统计为蚁群构筑房间的不同顺序"),e(n)])]),Hk,t("td",zk,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Ok]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[qk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[Nk]),_:1}),l(),Lk]),t("td",Ck,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Kk,t("td",Pk,[t("a",Bk,[l("合并多棵二叉搜索树"),e(n)])]),Vk,t("td",Tk,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Uk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Rk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Wk]),_:1}),l(),Gk]),t("td",Yk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qk,t("td",Sk,[t("a",Dk,[l("值等于子节点值之和的节点数量"),e(n)])]),Zk,t("td",Ak,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Fk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Jk]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Xk]),_:1})]),t("td",$k,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tM,t("td",eM,[t("a",lM,[l("树上的操作"),e(n)])]),oM,t("td",sM,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[nM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[_M]),_:1}),l(),cM]),t("td",iM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rM,t("td",aM,[t("a",hM,[l("每棵子树内缺失的最小基因值"),e(n)])]),uM,t("td",fM,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[gM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[mM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[yM]),_:1}),l(),xM]),t("td",bM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[pM,t("td",jM,[t("a",kM,[l("斐波那契树的移除子树游戏"),e(n)])]),MM,t("td",vM,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[IM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[EM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[wM]),_:1}),l(),HM]),t("td",zM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[OM,t("td",qM,[t("a",NM,[l("统计最高分的节点数目"),e(n)])]),LM,t("td",CM,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[KM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[PM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[BM]),_:1}),l(),VM]),t("td",TM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[UM,t("td",RM,[t("a",WM,[l("从二叉树一个节点到另一个节点每一步的方向"),e(n)])]),GM,t("td",YM,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[QM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[SM]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[DM]),_:1}),l(),ZM]),t("td",AM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[FM,t("td",JM,[t("a",XM,[l("根据描述创建二叉树"),e(n)])]),t("td",$M,[e(s,{to:"/leetcode-js/problem/2196.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",tv,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ev]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[lv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[ov]),_:1}),l(),sv]),t("td",nv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dv,t("td",_v,[t("a",cv,[l("判断根结点是否等于子结点之和"),e(n)])]),iv,t("td",rv,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[av]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[hv]),_:1})]),t("td",uv,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fv,t("td",gv,[t("a",mv,[l("相邻字符不同的最长路径"),e(n)])]),yv,t("td",xv,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[bv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[pv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[jv]),_:1}),l(),kv]),t("td",Mv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vv,t("td",Iv,[t("a",Ev,[l("统计值等于子树平均值的节点数"),e(n)])]),wv,t("td",Hv,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[zv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ov]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[qv]),_:1})]),t("td",Nv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lv,t("td",Cv,[t("a",Kv,[l("树中最接近路径的节点"),e(n)])]),Pv,t("td",Bv,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Vv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Tv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Uv]),_:1}),l(),Rv]),t("td",Wv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gv,t("td",Yv,[t("a",Qv,[l("二叉树中得到结果所需的最少翻转次数"),e(n)])]),Sv,t("td",Dv,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Zv]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Av]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Fv]),_:1}),l(),Jv]),t("td",Xv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$v,t("td",tI,[t("a",eI,[l("从树中删除边的最小分数"),e(n)])]),lI,t("td",oI,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[sI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[nI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dI]),_:1}),l(),_I]),t("td",cI,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[iI,t("td",rI,[t("a",aI,[l("计算布尔二叉树的值"),e(n)])]),hI,t("td",uI,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[gI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[mI]),_:1})]),t("td",yI,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xI,t("td",bI,[t("a",pI,[l("受限条件下可到达节点的数目"),e(n)])]),jI,t("td",kI,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[MI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[vI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[II]),_:1}),l(),EI]),t("td",wI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[HI,t("td",zI,[t("a",OI,[l("选择边来最大化树的得分"),e(n)])]),qI,t("td",NI,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[LI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[CI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[KI]),_:1})]),t("td",PI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[BI,t("td",VI,[t("a",TI,[l("感染二叉树需要的总时间"),e(n)])]),UI,t("td",RI,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[WI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[GI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[YI]),_:1}),l(),QI]),t("td",SI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[DI,t("td",ZI,[t("a",AI,[l("反转二叉树的奇数层"),e(n)])]),FI,t("td",JI,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[XI]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[$I]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[tE]),_:1}),l(),eE]),t("td",lE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oE,t("td",sE,[t("a",nE,[l("好路径的数目"),e(n)])]),dE,t("td",_E,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[cE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[iE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[rE]),_:1}),l(),aE]),t("td",hE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uE,t("td",fE,[t("a",gE,[l("创建价值相同的连通块"),e(n)])]),mE,t("td",yE,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[xE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[bE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[pE]),_:1}),l(),jE]),t("td",kE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ME,t("td",vE,[t("a",IE,[l("值为 1 的节点数"),e(n)])]),EE,t("td",wE,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[HE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[zE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[OE]),_:1}),l(),qE]),t("td",NE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LE,t("td",CE,[t("a",KE,[l("移除子树后的二叉树高度"),e(n)])]),PE,t("td",BE,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[VE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[TE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[UE]),_:1}),l(),RE]),t("td",WE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[GE,t("td",YE,[t("a",QE,[l("树上最大得分和路径"),e(n)])]),SE,t("td",DE,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ZE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[AE]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[FE]),_:1}),l(),JE]),t("td",XE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$E,t("td",tw,[t("a",ew,[l("逐层排序二叉树所需的最少操作数目"),e(n)])]),lw,t("td",ow,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[sw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[nw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[dw]),_:1})]),t("td",_w,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cw,t("td",iw,[t("a",rw,[l("二叉搜索树最近节点查询"),e(n)])]),aw,t("td",hw,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[uw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[fw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[gw]),_:1}),l(),mw]),t("td",yw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xw,t("td",bw,[t("a",pw,[l("到达首都的最少油耗"),e(n)])]),jw,t("td",kw,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Mw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[vw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Iw]),_:1}),l(),Ew]),t("td",ww,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hw,t("td",zw,[t("a",Ow,[l("两个不重叠子树的最大异或值"),e(n)])]),qw,t("td",Nw,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Lw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Cw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Kw]),_:1}),l(),Pw]),t("td",Bw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vw,t("td",Tw,[t("a",Uw,[l("查询树中环的长度"),e(n)])]),Rw,t("td",Ww,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Gw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Yw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Qw]),_:1})]),t("td",Sw,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Dw,t("td",Zw,[t("a",Aw,[l("最大价值和与最小价值和的差值"),e(n)])]),Fw,t("td",Jw,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Xw]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[$w]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[tH]),_:1}),l(),eH]),t("td",lH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oH,t("td",sH,[t("a",nH,[l("统计可能的树根数目"),e(n)])]),dH,t("td",_H,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[cH]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[iH]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[rH]),_:1}),l(),aH]),t("td",hH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uH,t("td",fH,[t("a",gH,[l("二叉树中的第 K 大层和"),e(n)])]),mH,t("td",yH,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[xH]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[bH]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[pH]),_:1}),l(),jH]),t("td",kH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MH,t("td",vH,[t("a",IH,[l("收集树中金币"),e(n)])]),EH,t("td",wH,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[HH]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[zH]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[OH]),_:1}),l(),qH]),t("td",NH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[LH,t("td",CH,[t("a",KH,[l("二叉树的堂兄弟节点 II"),e(n)])]),PH,t("td",BH,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[VH]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[TH]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[UH]),_:1}),l(),RH]),t("td",WH,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[GH,t("td",YH,[t("a",QH,[l("最小化旅行的价格总和"),e(n)])]),SH,t("td",DH,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[ZH]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[AH]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[FH]),_:1}),l(),JH]),t("td",XH,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$H,t("td",tz,[t("a",ez,[l("使二叉树所有路径值相等的最小代价"),e(n)])]),lz,t("td",oz,[e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[sz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[nz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[dz]),_:1}),l(),_z]),t("td",cz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iz,t("td",rz,[t("a",az,[l("从 Rope 树中提取第 K 个字符"),e(n)])]),hz,t("td",uz,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[gz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[mz]),_:1})]),t("td",yz,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xz,t("td",bz,[t("a",pz,[l("数组是否表示某二叉树的前序遍历"),e(n)])]),jz,t("td",kz,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[Mz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[vz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Iz]),_:1}),l(),Ez]),t("td",wz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hz,t("td",zz,[t("a",Oz,[l("特殊二叉树的高度"),e(n)])]),qz,t("td",Nz,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Lz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Cz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Kz]),_:1}),l(),Pz]),t("td",Bz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vz,t("td",Tz,[t("a",Uz,[l("树中可以形成回文的路径数"),e(n)])]),Rz,t("td",Wz,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Gz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Yz]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Qz]),_:1}),l(),Sz]),t("td",Dz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zz,t("td",Az,[t("a",Fz,[l("计算足够大的节点数"),e(n)])]),Jz,t("td",Xz,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$z]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[tO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[eO]),_:1}),l(),lO]),t("td",oO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sO,t("td",nO,[t("a",dO,[l("边权重均等查询"),e(n)])]),_O,t("td",cO,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[iO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[rO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[aO]),_:1}),l(),hO]),t("td",uO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fO,t("td",gO,[t("a",mO,[l("统计树中的合法路径数目"),e(n)])]),yO,t("td",xO,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[bO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[pO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[jO]),_:1}),l(),kO]),t("td",MO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vO,t("td",IO,[t("a",EO,[l("可以被 K 整除连通块的最大数目"),e(n)])]),wO,t("td",HO,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[zO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[OO]),_:1})]),t("td",qO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[NO,t("td",LO,[t("a",CO,[l("收集所有金币可获得的最大积分"),e(n)])]),KO,t("td",PO,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[BO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[VO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[TO]),_:1}),l(),UO]),t("td",RO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[WO,t("td",GO,[t("a",YO,[l("在树上执行操作以后得到的最大分数"),e(n)])]),QO,t("td",SO,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[DO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ZO]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[AO]),_:1})]),t("td",FO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JO,t("td",XO,[t("a",$O,[l("树中每个节点放置的金币数目"),e(n)])]),tq,t("td",eq,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[lq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[oq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[sq]),_:1}),l(),nq]),t("td",dq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_q,t("td",cq,[t("a",iq,[l("相同颜色的最大子树"),e(n)])]),rq,t("td",aq,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[hq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[uq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[fq]),_:1}),l(),gq]),t("td",mq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yq,t("td",xq,[t("a",bq,[l("在带权树网络中统计可连接服务器对数目"),e(n)])]),pq,t("td",jq,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[kq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Mq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[vq]),_:1})]),t("td",Iq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Eq,t("td",wq,[t("a",Hq,[l("最大节点价值之和"),e(n)])]),zq,t("td",Oq,[e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[qq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Nq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Lq]),_:1}),l(),Cq]),t("td",Kq,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pq,t("td",Bq,[t("a",Vq,[l("找到具有最小和的树的层数"),e(n)])]),Tq,t("td",Uq,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Rq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Wq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Gq]),_:1}),l(),Yq]),t("td",Qq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sq,t("td",Dq,[t("a",Zq,[l("合并两棵树后的最小直径"),e(n)])]),Aq,t("td",Fq,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Jq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Xq]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$q]),_:1}),l(),tN]),t("td",eN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[lN,t("td",oN,[t("a",sN,[l("标记所有节点需要的时间"),e(n)])]),nN,t("td",dN,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[_N]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[cN]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[iN]),_:1}),l(),rN]),t("td",aN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[hN,t("td",uN,[t("a",fN,[l("统计好节点的数目"),e(n)])]),gN,t("td",mN,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[yN]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[xN]),_:1})]),t("td",bN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pN,t("td",jN,[t("a",kN,[l("查找树中最后标记的节点"),e(n)])]),MN,t("td",vN,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[IN]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[EN]),_:1})]),t("td",wN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[HN,t("td",zN,[t("a",ON,[l("第 K 大的完美二叉子树的大小"),e(n)])]),t("td",qN,[e(s,{to:"/leetcode-js/problem/3319.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",NN,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[LN]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[CN]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[KN]),_:1}),l(),PN]),t("td",BN,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VN,t("td",TN,[t("a",UN,[l("二叉树任务调度"),e(n)])]),RN,t("td",WN,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[GN]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[YN]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[QN]),_:1}),l(),SN]),t("td",DN,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ZN,t("td",AN,[t("a",FN,[l("导航装置"),e(n)])]),JN,t("td",XN,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$N]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[tL]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[eL]),_:1})]),t("td",lL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oL,t("td",sL,[t("a",nL,[l("二叉树染色"),e(n)])]),dL,t("td",_L,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[cL]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[iL]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[rL]),_:1})]),t("td",aL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hL,t("td",uL,[t("a",fL,[l("开幕式焰火"),e(n)])]),gL,t("td",mL,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[yL]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[xL]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[bL]),_:1}),l(),pL]),t("td",jL,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[kL,t("td",ML,[t("a",vL,[l("二叉搜索树染色"),e(n)])]),IL,t("td",EL,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[wL]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[HL]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[zL]),_:1}),l(),OL]),t("td",qL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NL,t("td",LL,[t("a",CL,[l("力扣泡泡龙"),e(n)])]),KL,t("td",PL,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[BL]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[VL]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[TL]),_:1})]),t("td",UL,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[RL,t("td",WL,[t("a",GL,[l("二叉树灯饰"),e(n)])]),YL,t("td",QL,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[SL]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[DL]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[ZL]),_:1}),l(),AL]),t("td",FL,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[JL,t("td",XL,[t("a",$L,[l("装饰树"),e(n)])]),tC,t("td",eC,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[lC]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[oC]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[sC]),_:1}),l(),nC]),t("td",dC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_C,t("td",cC,[t("a",iC,[l("重建二叉树"),e(n)])]),t("td",rC,[e(s,{to:"/leetcode-js/problem/jz_offer_07_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",aC,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[hC]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[uC]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[fC]),_:1}),l(),gC]),t("td",mC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yC,t("td",xC,[t("a",bC,[l("树的子结构"),e(n)])]),t("td",pC,[e(s,{to:"/leetcode-js/problem/jz_offer_26_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",jC,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[kC]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[MC]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[vC]),_:1})]),t("td",IC,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[EC,t("td",wC,[t("a",HC,[l("二叉树的镜像"),e(n)])]),t("td",zC,[e(s,{to:"/leetcode-js/problem/jz_offer_27_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",OC,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[qC]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[NC]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[LC]),_:1}),l(),CC]),t("td",KC,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[PC,t("td",BC,[t("a",VC,[l("对称的二叉树"),e(n)])]),t("td",TC,[e(s,{to:"/leetcode-js/problem/jz_offer_28_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",UC,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[RC]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[WC]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[GC]),_:1}),l(),YC]),t("td",QC,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[SC,t("td",DC,[t("a",ZC,[l("从上到下打印二叉树"),e(n)])]),t("td",AC,[e(s,{to:"/leetcode-js/problem/jz_offer_32_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",FC,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[JC]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[XC]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[$C]),_:1})]),t("td",tK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eK,t("td",lK,[t("a",oK,[l("从上到下打印二叉树 II"),e(n)])]),t("td",sK,[e(s,{to:"/leetcode-js/problem/jz_offer_32_2.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",nK,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[dK]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[_K]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[cK]),_:1})]),t("td",iK,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[rK,t("td",aK,[t("a",hK,[l("从上到下打印二叉树 III"),e(n)])]),t("td",uK,[e(s,{to:"/leetcode-js/problem/jz_offer_32_3.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fK,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[gK]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[mK]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[yK]),_:1})]),t("td",xK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bK,t("td",pK,[t("a",jK,[l("二叉搜索树的后序遍历序列"),e(n)])]),t("td",kK,[e(s,{to:"/leetcode-js/problem/jz_offer_33_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",MK,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[vK]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[IK]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[EK]),_:1}),l(),wK]),t("td",HK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zK,t("td",OK,[t("a",qK,[l("二叉树中和为某一值的路径"),e(n)])]),t("td",NK,[e(s,{to:"/leetcode-js/problem/jz_offer_34_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",LK,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[CK]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[KK]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[PK]),_:1}),l(),BK]),t("td",VK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[TK,t("td",UK,[t("a",RK,[l("二叉搜索树与双向链表"),e(n)])]),t("td",WK,[e(s,{to:"/leetcode-js/problem/jz_offer_36_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",GK,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[YK]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[QK]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[SK]),_:1}),l(),DK]),t("td",ZK,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AK,t("td",FK,[t("a",JK,[l("序列化二叉树"),e(n)])]),t("td",XK,[e(s,{to:"/leetcode-js/problem/jz_offer_37_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",$K,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[tP]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[eP]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[lP]),_:1}),l(),oP]),t("td",sP,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nP,t("td",dP,[t("a",_P,[l("二叉搜索树的第k大节点"),e(n)])]),t("td",cP,[e(s,{to:"/leetcode-js/problem/jz_offer_54_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",iP,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[rP]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[aP]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[hP]),_:1}),l(),uP]),t("td",fP,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[gP,t("td",mP,[t("a",yP,[l("二叉树的深度"),e(n)])]),t("td",xP,[e(s,{to:"/leetcode-js/problem/jz_offer_55_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",bP,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[pP]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[jP]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[kP]),_:1}),l(),MP]),t("td",vP,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[IP,t("td",EP,[t("a",wP,[l("平衡二叉树"),e(n)])]),HP,t("td",zP,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[OP]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[qP]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[NP]),_:1})]),t("td",LP,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[CP,t("td",KP,[t("a",PP,[l("二叉搜索树的最近公共祖先"),e(n)])]),BP,t("td",VP,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[TP]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[UP]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[RP]),_:1}),l(),WP]),t("td",GP,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[YP,t("td",QP,[t("a",SP,[l("二叉树的最近公共祖先"),e(n)])]),DP,t("td",ZP,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[AP]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[FP]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[JP]),_:1})]),t("td",XP,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$P,t("td",tB,[t("a",eB,[l("往完全二叉树添加节点"),e(n)])]),lB,t("td",oB,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[sB]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[nB]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[dB]),_:1}),l(),_B]),t("td",cB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iB,t("td",rB,[t("a",aB,[l("二叉树每层的最大值"),e(n)])]),hB,t("td",uB,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fB]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[gB]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[mB]),_:1}),l(),yB]),t("td",xB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bB,t("td",pB,[t("a",jB,[l("二叉树最底层最左边的值"),e(n)])]),kB,t("td",MB,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[vB]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[IB]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[EB]),_:1}),l(),wB]),t("td",HB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zB,t("td",OB,[t("a",qB,[l("二叉树的右侧视图"),e(n)])]),NB,t("td",LB,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[CB]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[KB]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[PB]),_:1}),l(),BB]),t("td",VB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[TB,t("td",UB,[t("a",RB,[l("二叉树剪枝"),e(n)])]),WB,t("td",GB,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[YB]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[QB]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[SB]),_:1})]),t("td",DB,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZB,t("td",AB,[t("a",FB,[l("序列化与反序列化二叉树"),e(n)])]),JB,t("td",XB,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$B]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[tV]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[eV]),_:1}),l(),lV]),t("td",oV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sV,t("td",nV,[t("a",dV,[l("从根节点到叶节点的路径数字之和"),e(n)])]),_V,t("td",cV,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[iV]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[rV]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[aV]),_:1})]),t("td",hV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uV,t("td",fV,[t("a",gV,[l("向下的路径节点之和"),e(n)])]),mV,t("td",yV,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[xV]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[bV]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[pV]),_:1})]),t("td",jV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kV,t("td",MV,[t("a",vV,[l("节点之和最大的路径"),e(n)])]),IV,t("td",EV,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[wV]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[HV]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[zV]),_:1}),l(),OV]),t("td",qV,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[NV,t("td",LV,[t("a",CV,[l("展平二叉搜索树"),e(n)])]),KV,t("td",PV,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[BV]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[VV]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[TV]),_:1}),l(),UV]),t("td",RV,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[WV,t("td",GV,[t("a",YV,[l("二叉搜索树中的中序后继"),e(n)])]),QV,t("td",SV,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[DV]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ZV]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[AV]),_:1}),l(),FV]),t("td",JV,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[XV,t("td",$V,[t("a",tT,[l("所有大于等于节点的值之和"),e(n)])]),eT,t("td",lT,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[oT]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[sT]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[nT]),_:1}),l(),dT]),t("td",_T,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cT,t("td",iT,[t("a",rT,[l("二叉搜索树迭代器"),e(n)])]),aT,t("td",hT,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[uT]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fT]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[gT]),_:1}),l(),mT]),t("td",yT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xT,t("td",bT,[t("a",pT,[l("数据流的第 K 大数值"),e(n)])]),jT,t("td",kT,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[MT]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[vT]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[IT]),_:1}),l(),ET]),t("td",wT,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[HT,t("td",zT,[t("a",OT,[l("最小高度树"),e(n)])]),qT,t("td",NT,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[LT]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[CT]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[KT]),_:1}),l(),PT]),t("td",BT,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[VT,t("td",TT,[t("a",UT,[l("特定深度节点链表"),e(n)])]),RT,t("td",WT,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[GT]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[YT]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[QT]),_:1}),l(),ST]),t("td",DT,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZT,t("td",AT,[t("a",FT,[l("检查平衡性"),e(n)])]),JT,t("td",XT,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$T]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[tU]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[eU]),_:1})]),t("td",lU,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[oU,t("td",sU,[t("a",nU,[l("合法二叉搜索树"),e(n)])]),dU,t("td",_U,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[cU]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[iU]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[rU]),_:1}),l(),aU]),t("td",hU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uU,t("td",fU,[t("a",gU,[l("后继者"),e(n)])]),mU,t("td",yU,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[xU]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[bU]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[pU]),_:1}),l(),jU]),t("td",kU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[MU,t("td",vU,[t("a",IU,[l("首个共同祖先"),e(n)])]),EU,t("td",wU,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[HU]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[zU]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[OU]),_:1})]),t("td",qU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[NU,t("td",LU,[t("a",CU,[l("二叉搜索树序列"),e(n)])]),KU,t("td",PU,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[BU]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[VU]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[TU]),_:1}),l(),UU]),t("td",RU,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[WU,t("td",GU,[t("a",YU,[l("检查子树"),e(n)])]),QU,t("td",SU,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[DU]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ZU]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[AU]),_:1}),l(),FU]),t("td",JU,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[XU,t("td",$U,[t("a",tR,[l("求和路径"),e(n)])]),eR,t("td",lR,[e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[oR]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[sR]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[nR]),_:1})]),t("td",dR,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_R,t("td",cR,[t("a",iR,[l("BiNode"),e(n)])]),rR,t("td",aR,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[hR]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[uR]),_:1}),l(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[fR]),_:1}),l(),gR]),t("td",mR,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const jR=c(h,[["render",yR],["__file","tree.html.vue"]]);export{jR as default};
