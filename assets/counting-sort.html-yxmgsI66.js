import{_,r as c,o as i,c as a,a as t,d as e,w as l,b as o,f as u}from"./app-GnK0vSxb.js";const h={},r=t("h1",{id:"计数排序",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#计数排序","aria-hidden":"true"},"#"),o(" 计数排序")],-1),g={class:"hint-container details"},f=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),v=t("code",null,"单调栈",-1),E=t("code",null,"队列",-1),q=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),C=t("code",null,"哈希表",-1),I=t("code",null,"字符串",-1),L=t("code",null,"字符串匹配",-1),M=t("code",null,"树",-1),N=t("code",null,"二叉树",-1),V=t("code",null,"二叉搜索树",-1),B=t("code",null,"最小生成树",-1),H=t("code",null,"图",-1),z=t("code",null,"有序集合",-1),R=t("code",null,"拓扑排序",-1),j=t("code",null,"最短路",-1),O=t("code",null,"强连通分量",-1),S=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),Z=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),D=t("code",null,"线段树",-1),F=t("code",null,"树状数组",-1),G=t("code",null,"后缀数组",-1),J=t("p",null,[t("strong",null,"算法")],-1),K=t("code",null,"枚举",-1),P=t("code",null,"递归",-1),Q=t("code",null,"分治",-1),U=t("code",null,"回溯",-1),W=t("code",null,"贪心",-1),X=t("code",null,"动态规划",-1),Y=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("span",{class:"blue"},"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ut=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),rt=t("code",null,"状态压缩",-1),gt=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),vt=t("code",null,"模拟",-1),Et=t("code",null,"组合数学",-1),qt=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),Ct=t("code",null,"水塘抽样",-1),It=t("code",null,"拒绝采样",-1),Lt=t("code",null,"数据库",-1),Mt=t("code",null,"设计",-1),Nt=t("code",null,"数据流",-1),Vt=t("code",null,"脑筋急转弯",-1),Bt=t("code",null,"交互",-1),Ht=t("code",null,"迭代器",-1),zt=t("code",null,"多线程",-1),Rt=t("hr",null,null,-1),jt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ot=t("td",{style:{"text-align":"center"}},"274",-1),St={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/h-index",target:"_blank",rel:"noopener noreferrer"},Zt={style:{"text-align":"center"}},At={style:{"text-align":"left"}},Dt=t("code",null,"数组",-1),Ft=t("code",null,"计数排序",-1),Gt=t("code",null,"排序",-1),Jt={style:{"text-align":"left"}},Kt=t("td",{style:{"text-align":"center"}},"561",-1),Pt={style:{"text-align":"left"}},Qt={href:"https://leetcode.com/problems/array-partition",target:"_blank",rel:"noopener noreferrer"},Ut=t("td",{style:{"text-align":"center"}},null,-1),Wt={style:{"text-align":"left"}},Xt=t("code",null,"贪心",-1),Yt=t("code",null,"数组",-1),$t=t("code",null,"计数排序",-1),te=t("code",null,"1+",-1),ee={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"912",-1),le={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/sort-an-array",target:"_blank",rel:"noopener noreferrer"},de=t("td",{style:{"text-align":"center"}},null,-1),se={style:{"text-align":"left"}},ce=t("code",null,"数组",-1),_e=t("code",null,"分治",-1),ie=t("code",null,"桶排序",-1),ae=t("code",null,"5+",-1),ue={style:{"text-align":"left"}},he=t("td",{style:{"text-align":"center"}},"1051",-1),re={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/height-checker",target:"_blank",rel:"noopener noreferrer"},fe=t("td",{style:{"text-align":"center"}},null,-1),me={style:{"text-align":"left"}},ye=t("code",null,"数组",-1),xe=t("code",null,"计数排序",-1),pe=t("code",null,"排序",-1),be={style:{"text-align":"left"}},ke=t("td",{style:{"text-align":"center"}},"1122",-1),ve={style:{"text-align":"left"}},Ee={href:"https://leetcode.com/problems/relative-sort-array",target:"_blank",rel:"noopener noreferrer"},qe=t("td",{style:{"text-align":"center"}},null,-1),we={style:{"text-align":"left"}},Ce=t("code",null,"数组",-1),Ie=t("code",null,"哈希表",-1),Le=t("code",null,"计数排序",-1),Me=t("code",null,"1+",-1),Ne={style:{"text-align":"left"}},Ve=t("td",{style:{"text-align":"center"}},"1833",-1),Be={style:{"text-align":"left"}},He={href:"https://leetcode.com/problems/maximum-ice-cream-bars",target:"_blank",rel:"noopener noreferrer"},ze=t("td",{style:{"text-align":"center"}},null,-1),Re={style:{"text-align":"left"}},je=t("code",null,"贪心",-1),Oe=t("code",null,"数组",-1),Se=t("code",null,"计数排序",-1),Te=t("code",null,"1+",-1),Ze={style:{"text-align":"left"}},Ae=t("td",{style:{"text-align":"center"}},"2037",-1),De={style:{"text-align":"left"}},Fe={href:"https://leetcode.com/problems/minimum-number-of-moves-to-seat-everyone",target:"_blank",rel:"noopener noreferrer"},Ge=t("td",{style:{"text-align":"center"}},null,-1),Je={style:{"text-align":"left"}},Ke=t("code",null,"贪心",-1),Pe=t("code",null,"数组",-1),Qe=t("code",null,"计数排序",-1),Ue=t("code",null,"1+",-1),We={style:{"text-align":"left"}},Xe=t("td",{style:{"text-align":"center"}},"3088",-1),Ye={style:{"text-align":"left"}},$e={href:"https://leetcode.com/problems/make-string-anti-palindrome",target:"_blank",rel:"noopener noreferrer"},to=t("td",{style:{"text-align":"center"}},null,-1),eo={style:{"text-align":"left"}},oo=t("code",null,"贪心",-1),lo=t("code",null,"字符串",-1),no=t("code",null,"计数排序",-1),so=t("code",null,"1+",-1),co={style:{"text-align":"left"}},_o=t("td",{style:{"text-align":"center"}},"3189",-1),io={style:{"text-align":"left"}},ao={href:"https://leetcode.com/problems/minimum-moves-to-get-a-peaceful-board",target:"_blank",rel:"noopener noreferrer"},uo=t("td",{style:{"text-align":"center"}},null,-1),ho={style:{"text-align":"left"}},ro=t("code",null,"贪心",-1),go=t("code",null,"数组",-1),fo=t("code",null,"计数排序",-1),mo=t("code",null,"1+",-1),yo={style:{"text-align":"left"}},xo=t("td",{style:{"text-align":"center"}},"剑指 Offer II 75",-1),po={style:{"text-align":"left"}},bo={href:"https://leetcode.cn/problems/0H97ZC",target:"_blank",rel:"noopener noreferrer"},ko=t("td",{style:{"text-align":"center"}},null,-1),vo={style:{"text-align":"left"}},Eo=t("code",null,"数组",-1),qo=t("code",null,"哈希表",-1),wo=t("code",null,"计数排序",-1),Co=t("code",null,"1+",-1),Io={style:{"text-align":"left"}};function Lo(Mo,No){const n=c("RouterLink"),d=c("ExternalLinkIcon"),s=c("font");return i(),a("div",null,[r,t("details",g,[f,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[G]),_:1})]),J,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),tt,o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[zt]),_:1})])]),Rt,u(" prettier-ignore "),t("table",null,[jt,t("tbody",null,[t("tr",null,[Ot,t("td",St,[t("a",Tt,[o("H 指数"),e(d)])]),t("td",Zt,[e(n,{to:"/leetcode/problem/0274.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",At,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[Ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Gt]),_:1})]),t("td",Jt,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Kt,t("td",Pt,[t("a",Qt,[o("数组拆分"),e(d)])]),Ut,t("td",Wt,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Yt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[$t]),_:1}),o(),te]),t("td",ee,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[oe,t("td",le,[t("a",ne,[o("排序数组"),e(d)])]),de,t("td",se,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ce]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[_e]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[ie]),_:1}),o(),ae]),t("td",ue,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[he,t("td",re,[t("a",ge,[o("高度检查器"),e(d)])]),fe,t("td",me,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ye]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[xe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[pe]),_:1})]),t("td",be,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ke,t("td",ve,[t("a",Ee,[o("数组的相对排序"),e(d)])]),qe,t("td",we,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ce]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Ie]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[Le]),_:1}),o(),Me]),t("td",Ne,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ve,t("td",Be,[t("a",He,[o("雪糕的最大数量"),e(d)])]),ze,t("td",Re,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[je]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Oe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[Se]),_:1}),o(),Te]),t("td",Ze,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ae,t("td",De,[t("a",Fe,[o("使每位学生都有座位的最少移动次数"),e(d)])]),Ge,t("td",Je,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Ke]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Pe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[Qe]),_:1}),o(),Ue]),t("td",We,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Xe,t("td",Ye,[t("a",$e,[o("使字符串反回文"),e(d)])]),to,t("td",eo,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[oo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[lo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[no]),_:1}),o(),so]),t("td",co,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_o,t("td",io,[t("a",ao,[o("得到一个和平棋盘的最少步骤"),e(d)])]),uo,t("td",ho,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[ro]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[go]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[fo]),_:1}),o(),mo]),t("td",yo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xo,t("td",po,[t("a",bo,[o("数组相对排序"),e(d)])]),ko,t("td",vo,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Eo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[qo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[wo]),_:1}),o(),Co]),t("td",Io,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])])])])])}const Bo=_(h,[["render",Lo],["__file","counting-sort.html.vue"]]);export{Bo as default};
