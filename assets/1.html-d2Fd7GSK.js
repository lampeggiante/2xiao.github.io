import{_ as o,r as p,o as i,c as l,a as n,b as s,d as a,e as t}from"./app-aDvcZtpj.js";const c={},r=n("h1",{id:"_1-项目框架搭建",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-项目框架搭建","aria-hidden":"true"},"#"),s(" 1. 项目框架搭建")],-1),u={class:"hint-container info"},d=n("p",{class:"hint-container-title"},"摘要",-1),v=n("ul",null,[n("li",null,"选择项目结构（Mono-repo）"),n("li",null,"定义开发规范（eslint、commitlint、tsc、prettier）"),n("li",null,"选择打包工具（rollup）")],-1),m={href:"https://github.com/2xiao/my-react/tree/v1.1",target:"_blank",rel:"noopener noreferrer"},k=n("code",null,"git tag v1.1",-1),b=t(`<h2 id="_1-选择项目结构" tabindex="-1"><a class="header-anchor" href="#_1-选择项目结构" aria-hidden="true">#</a> 1. 选择项目结构</h2><p>选择 Multi-repo 还是 Mono-repo？</p><ul><li>Multi-repo 每个库都有独立的仓库，逻辑清晰，但协同管理会更繁琐；</li><li>Mono-repo 可以方便的协同管理不同独立的库的生命周期，但是会有更高的操作复杂度。</li></ul><p>很多大型项目都使用 Mono-repo 结构管理，比如 Vue，Bable，我们也选择 Mono-repo。</p><h2 id="_2-选择-mono-repo-工具" tabindex="-1"><a class="header-anchor" href="#_2-选择-mono-repo-工具" aria-hidden="true">#</a> 2. 选择 Mono-repo 工具</h2><p>简单工具：</p><ul><li>npm workspace</li><li>Yarn workspace</li><li>pnpm workspace</li></ul><p>专业工具：</p><ul><li>nx</li><li>bit</li><li>turborepo</li><li>rush</li><li>nx</li><li>lerna</li></ul><p>我们选择 <code>pnpm</code>,因为它相比其它打包工具，依赖安装更快，更规范（处理幽灵依赖问题）。</p><p>安装 <code>pnpm</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm install -g pnpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>初始化<code>pnpm</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pnpm init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在根目录新增 <code>pnpm-workspace.yaml</code>文件，并初始化，写入下面的代码：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>// pnpm<span class="token punctuation">-</span>workspace.yaml

<span class="token key atrule">packages</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token string">&#39;packages/*&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>pnpm-workspace.yaml</code>文件定义了工作空间的根目录，也就是说，packages 目录下的文件就是 Mono-repo 的子项目。</p><h2 id="_3-配置代码规范" tabindex="-1"><a class="header-anchor" href="#_3-配置代码规范" aria-hidden="true">#</a> 3. 配置代码规范</h2><p>代码规范检查与修复，使用 <code>eslint</code>。</p><p>安装：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pnpm i eslint -D -w
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>新增<code>.gitignore</code>文件，忽略<code>node_modules</code>目录下的文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>node_modules/*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>初始化 eslint：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npx eslint --init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项选择如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>√ How would you like to use ESLint?
· To check syntax and find problems

√ What type of modules does your project use?
· JavaScript modules (import/export)

√ Which framework does your project use?
· none

√ Does your project use TypeScript?
· Yes

√ Where does your code run?
· node

√ What format do you want your config file to be in?
· JSON

√ Would you like to install them now?
· Yes

√ Which package manager do you want to use?
· pnpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果报错，再执行下面的代码，手动安装这两个包和 typescript:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pnpm i -D -w @typescript-eslint/eslint-plugin, @typescript-eslint/parser, typescript
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时，自动生成了一个<code>.eslintrc.json</code>文件，它是对 eslint 的一些配置，将<code>.eslintrc.json</code>文件配置如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// .eslintrc.json</span>

<span class="token punctuation">{</span>
	<span class="token property">&quot;env&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;browser&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		<span class="token property">&quot;es2021&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		<span class="token property">&quot;node&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		<span class="token property">&quot;jest&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;eslint:recommended&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;plugin:@typescript-eslint/recommended&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;prettier&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;plugin:prettier/recommended&quot;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token property">&quot;parser&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@typescript-eslint/parser&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;parserOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;ecmaVersion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;latest&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;sourceType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;module&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@typescript-eslint&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;prettier&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;prettier/prettier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;no-case-declarations&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;no-constant-condition&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;@typescript-eslint/ban-ts-comment&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;@typescript-eslint/no-unused-vars&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;@typescript-eslint/no-var-requires&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;no-unused-vars&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装 ts 的<code>eslint</code>插件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pnpm i @typescript-eslint/eslint-plugin -D -w
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装代码风格检查 <code>prettier</code>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pnpm i prettier -D -w
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>新建<code>.prettierrc.json</code>配置文件，添加配置：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// .prettierrc.json</span>

<span class="token punctuation">{</span>
	<span class="token property">&quot;printWidth&quot;</span><span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
	<span class="token property">&quot;tabWidth&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
	<span class="token property">&quot;useTabs&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	<span class="token property">&quot;singleQuote&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	<span class="token property">&quot;semi&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	<span class="token property">&quot;trailingComma&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;bracketSpacing&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将<code>prettier</code>集成到<code>eslint</code>中，避免它和<code>eslint</code>冲突，其中：</p><ul><li><code>eslint-config-prettier</code>：覆盖<code>eslint</code>本身的规则配置</li><li><code>eslint-plugin-prettier</code>：用<code>prettier</code>来接管修复代码，即<code>eslint --fix</code></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pnpm i eslint-config-prettier eslint-plugin-prettier -D -w
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 <code>package.json</code> 的 <code>&quot;scripts&quot;</code> 中增加 lint 对应的执行脚本：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;lint&quot;: &quot;eslint --ext .ts,.jsx,.tsx --fix --quiet ./packages&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-配置-commit-规范检查" tabindex="-1"><a class="header-anchor" href="#_4-配置-commit-规范检查" aria-hidden="true">#</a> 4. 配置 commit 规范检查</h2><p>安装<code>husky</code>，用于拦截 commit 命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pnpm i husky -D -w
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>初始化<code>huaky</code>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npx husky install
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将刚才实现的格式化命令<code>pnpm lint</code>纳入 commit 时<code>husky</code>将执行的脚本：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npx husky add .husky/pre-commit &quot;pnpm lint&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用<code>commitlint</code>堆 git 提交信息进行检查：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pnpm i commitlint @commitlint/cli @commitlint/config-conventional -D -w
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>新建配置文件<code>.commitlintrc.js</code>，指定规范集:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// .commitlintrc.js</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@commitlint/config-conventional&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>把<code>commitlint</code>集成到<code>husky</code>中：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npx husky add .husky/commit-msg &quot;npx --no-install commitlint -e $HUSKY_GIT_PARAMS&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样之后所有的 commit 都必须符合规范集的格式：提交的类型: 摘要信息，即<code>&lt;type&gt;: &lt;subject&gt;</code>，例如：<code>git commit -m &quot;feat: project init&quot;</code></p><p>常见的 type 值如下：</p><ul><li><code>feat</code>: 新功能</li><li><code>fix</code>: 修复</li><li><code>docs</code>: 文档变更</li><li><code>style</code>: 代码格式</li><li><code>refactor</code>: 重构</li><li><code>perf</code>: 性能优化</li><li><code>test</code>: 增加测试</li><li><code>revert</code>: 回退</li><li><code>build</code>: 打包</li><li><code>chore</code>: 构建过程或辅助工具的变动</li></ul><h2 id="_5-配置-typescript" tabindex="-1"><a class="header-anchor" href="#_5-配置-typescript" aria-hidden="true">#</a> 5. 配置 typescript</h2><p>新建配置文件<code>tsconfig.json</code>，并添加以下配置：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// tsconfig.json</span>

<span class="token punctuation">{</span>
	<span class="token property">&quot;compileOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	<span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./packages/**/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ESNext&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;useDefineForClassFields&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		<span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ESNext&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;ESNext&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;DOM&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Node&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		<span class="token property">&quot;sourceMap&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		<span class="token property">&quot;resolveJsonModule&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		<span class="token property">&quot;isolatedModules&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		<span class="token property">&quot;esModuleInterop&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		<span class="token property">&quot;noEmit&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		<span class="token property">&quot;noUnusedLocals&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
		<span class="token property">&quot;noUnusedParameters&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
		<span class="token property">&quot;noImplicitReturns&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
		<span class="token property">&quot;skipLibCheck&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		<span class="token property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./packages&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token property">&quot;hostConfig&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./react-reconciler/src/hostConfig.ts&quot;</span><span class="token punctuation">]</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-选择打包工具" tabindex="-1"><a class="header-anchor" href="#_6-选择打包工具" aria-hidden="true">#</a> 6. 选择打包工具</h2>`,62),g={href:"https://bundlers.tooling.report/",target:"_blank",rel:"noopener noreferrer"},q=t(`<p>可以看到<code>webpack</code>是比较大而全的，但是我们要开发的是一个库，而不是业务代码，希望工具尽可能简洁，打包产物可读性高，所以选择<code>rollup</code>。</p><p>安装<code>rollup</code>:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pnpm i rollup -D -w
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>新建文件夹<code>scripts/rollup</code>，用于放所有的打包脚本。</p><hr><p>至此，我们的项目框架就搭建完成了。</p>`,6),h=n("code",null,"git tag v1.1",-1),x={href:"https://github.com/2xiao/my-react/tree/v1.1",target:"_blank",rel:"noopener noreferrer"};function y(f,_){const e=p("ExternalLinkIcon");return i(),l("div",null,[r,n("div",u,[d,v,n("p",null,[s("相关代码可在 "),n("a",m,[k,a(e)]),s(" 查看")])]),b,n("p",null,[s("有一个比较权威的网站"),n("a",g,[s("https://bundlers.tooling.report/"),a(e)]),s("，比较了不同的打包工具的区别。")]),q,n("p",null,[s("相关代码可在 "),h,s(" 查看，地址："),n("a",x,[s("https://github.com/2xiao/my-react/tree/v1.1"),a(e)])])])}const w=o(c,[["render",y],["__file","1.html.vue"]]);export{w as default};
