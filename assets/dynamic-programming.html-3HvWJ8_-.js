import{_ as i,r as _,o as c,c as a,a as t,d as e,w as l,b as o,f as r}from"./app-mvY9N9Pc.js";const h={},u=t("h1",{id:"动态规划",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#动态规划","aria-hidden":"true"},"#"),o(" 动态规划")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("code",null,"单调栈",-1),H=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),q=t("code",null,"字符串",-1),j=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),C=t("code",null,"二叉树",-1),O=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),E=t("code",null,"图",-1),P=t("code",null,"有序集合",-1),K=t("code",null,"拓扑排序",-1),V=t("code",null,"最短路",-1),N=t("code",null,"强连通分量",-1),D=t("code",null,"欧拉回路",-1),B=t("code",null,"双连通分量",-1),Y=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),J=t("code",null,"线段树",-1),R=t("code",null,"树状数组",-1),S=t("code",null,"后缀数组",-1),U=t("p",null,[t("strong",null,"算法")],-1),W=t("code",null,"枚举",-1),X=t("code",null,"递归",-1),F=t("code",null,"分治",-1),G=t("code",null,"回溯",-1),T=t("code",null,"贪心",-1),Q=t("span",{class:"blue"},"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),it=t("code",null,"双指针",-1),ct=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),Ht=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),qt=t("code",null,"拒绝采样",-1),jt=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Ct=t("code",null,"数据流",-1),Ot=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Et=t("code",null,"迭代器",-1),Pt=t("code",null,"多线程",-1),Kt=t("hr",null,null,-1),Vt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Nt=t("td",{style:{"text-align":"center"}},"5",-1),Dt={style:{"text-align":"left"}},Bt={href:"https://leetcode.com/problems/longest-palindromic-substring",target:"_blank",rel:"noopener noreferrer"},Yt={style:{"text-align":"center"}},At={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0005",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"left"}},Rt=t("code",null,"双指针",-1),St=t("code",null,"字符串",-1),Ut=t("code",null,"动态规划",-1),Wt={style:{"text-align":"left"}},Xt=t("td",{style:{"text-align":"center"}},"10",-1),Ft={style:{"text-align":"left"}},Gt={href:"https://leetcode.com/problems/regular-expression-matching",target:"_blank",rel:"noopener noreferrer"},Tt={style:{"text-align":"center"}},Qt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0010",target:"_blank",rel:"noopener noreferrer"},Zt={style:{"text-align":"left"}},$t=t("code",null,"递归",-1),te=t("code",null,"字符串",-1),ee=t("code",null,"动态规划",-1),oe={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"22",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/generate-parentheses",target:"_blank",rel:"noopener noreferrer"},de={style:{"text-align":"center"}},_e={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0022",target:"_blank",rel:"noopener noreferrer"},ie={style:{"text-align":"left"}},ce=t("code",null,"字符串",-1),ae=t("code",null,"动态规划",-1),re=t("code",null,"回溯",-1),he={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"32",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/longest-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},me={style:{"text-align":"center"}},ye={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0032",target:"_blank",rel:"noopener noreferrer"},xe={style:{"text-align":"left"}},pe=t("code",null,"栈",-1),be=t("code",null,"字符串",-1),ke=t("code",null,"动态规划",-1),Me={style:{"text-align":"left"}},He=t("td",{style:{"text-align":"center"}},"42",-1),Ie={style:{"text-align":"left"}},we={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},ve={style:{"text-align":"center"}},qe={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0042",target:"_blank",rel:"noopener noreferrer"},je={style:{"text-align":"left"}},ze=t("code",null,"栈",-1),Ce=t("code",null,"数组",-1),Oe=t("code",null,"双指针",-1),Le=t("code",null,"2+",-1),Ee={style:{"text-align":"left"}},Pe=t("td",{style:{"text-align":"center"}},"44",-1),Ke={style:{"text-align":"left"}},Ve={href:"https://leetcode.com/problems/wildcard-matching",target:"_blank",rel:"noopener noreferrer"},Ne={style:{"text-align":"center"}},De={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0044",target:"_blank",rel:"noopener noreferrer"},Be={style:{"text-align":"left"}},Ye=t("code",null,"贪心",-1),Ae=t("code",null,"递归",-1),Je=t("code",null,"字符串",-1),Re=t("code",null,"1+",-1),Se={style:{"text-align":"left"}},Ue=t("td",{style:{"text-align":"center"}},"45",-1),We={style:{"text-align":"left"}},Xe={href:"https://leetcode.com/problems/jump-game-ii",target:"_blank",rel:"noopener noreferrer"},Fe={style:{"text-align":"center"}},Ge={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0045",target:"_blank",rel:"noopener noreferrer"},Te={style:{"text-align":"left"}},Qe=t("code",null,"贪心",-1),Ze=t("code",null,"数组",-1),$e=t("code",null,"动态规划",-1),to={style:{"text-align":"left"}},eo=t("td",{style:{"text-align":"center"}},"53",-1),oo={style:{"text-align":"left"}},lo={href:"https://leetcode.com/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},no={style:{"text-align":"center"}},so={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0053",target:"_blank",rel:"noopener noreferrer"},_o={style:{"text-align":"left"}},io=t("code",null,"数组",-1),co=t("code",null,"分治",-1),ao=t("code",null,"动态规划",-1),ro={style:{"text-align":"left"}},ho=t("td",{style:{"text-align":"center"}},"55",-1),uo={style:{"text-align":"left"}},fo={href:"https://leetcode.com/problems/jump-game",target:"_blank",rel:"noopener noreferrer"},go={style:{"text-align":"center"}},mo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0055",target:"_blank",rel:"noopener noreferrer"},yo={style:{"text-align":"left"}},xo=t("code",null,"贪心",-1),po=t("code",null,"数组",-1),bo=t("code",null,"动态规划",-1),ko={style:{"text-align":"left"}},Mo=t("td",{style:{"text-align":"center"}},"62",-1),Ho={style:{"text-align":"left"}},Io={href:"https://leetcode.com/problems/unique-paths",target:"_blank",rel:"noopener noreferrer"},wo={style:{"text-align":"center"}},vo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0062",target:"_blank",rel:"noopener noreferrer"},qo={style:{"text-align":"left"}},jo=t("code",null,"数学",-1),zo=t("code",null,"动态规划",-1),Co=t("code",null,"组合数学",-1),Oo={style:{"text-align":"left"}},Lo=t("td",{style:{"text-align":"center"}},"63",-1),Eo={style:{"text-align":"left"}},Po={href:"https://leetcode.com/problems/unique-paths-ii",target:"_blank",rel:"noopener noreferrer"},Ko={style:{"text-align":"center"}},Vo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0063",target:"_blank",rel:"noopener noreferrer"},No={style:{"text-align":"left"}},Do=t("code",null,"数组",-1),Bo=t("code",null,"动态规划",-1),Yo=t("code",null,"矩阵",-1),Ao={style:{"text-align":"left"}},Jo=t("td",{style:{"text-align":"center"}},"64",-1),Ro={style:{"text-align":"left"}},So={href:"https://leetcode.com/problems/minimum-path-sum",target:"_blank",rel:"noopener noreferrer"},Uo={style:{"text-align":"center"}},Wo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0064",target:"_blank",rel:"noopener noreferrer"},Xo={style:{"text-align":"left"}},Fo=t("code",null,"数组",-1),Go=t("code",null,"动态规划",-1),To=t("code",null,"矩阵",-1),Qo={style:{"text-align":"left"}},Zo=t("td",{style:{"text-align":"center"}},"70",-1),$o={style:{"text-align":"left"}},tl={href:"https://leetcode.com/problems/climbing-stairs",target:"_blank",rel:"noopener noreferrer"},el={style:{"text-align":"center"}},ol={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0070",target:"_blank",rel:"noopener noreferrer"},ll={style:{"text-align":"left"}},nl=t("code",null,"记忆化搜索",-1),sl=t("code",null,"数学",-1),dl=t("code",null,"动态规划",-1),_l={style:{"text-align":"left"}},il=t("td",{style:{"text-align":"center"}},"72",-1),cl={style:{"text-align":"left"}},al={href:"https://leetcode.com/problems/edit-distance",target:"_blank",rel:"noopener noreferrer"},rl={style:{"text-align":"center"}},hl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0072",target:"_blank",rel:"noopener noreferrer"},ul={style:{"text-align":"left"}},fl=t("code",null,"字符串",-1),gl=t("code",null,"动态规划",-1),ml={style:{"text-align":"left"}},yl=t("td",{style:{"text-align":"center"}},"85",-1),xl={style:{"text-align":"left"}},pl={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},bl={style:{"text-align":"center"}},kl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0085",target:"_blank",rel:"noopener noreferrer"},Ml={style:{"text-align":"left"}},Hl=t("code",null,"栈",-1),Il=t("code",null,"数组",-1),wl=t("code",null,"动态规划",-1),vl=t("code",null,"2+",-1),ql={style:{"text-align":"left"}},jl=t("td",{style:{"text-align":"center"}},"87",-1),zl={style:{"text-align":"left"}},Cl={href:"https://leetcode.com/problems/scramble-string",target:"_blank",rel:"noopener noreferrer"},Ol=t("td",{style:{"text-align":"center"}},null,-1),Ll={style:{"text-align":"left"}},El=t("code",null,"字符串",-1),Pl=t("code",null,"动态规划",-1),Kl={style:{"text-align":"left"}},Vl=t("td",{style:{"text-align":"center"}},"91",-1),Nl={style:{"text-align":"left"}},Dl={href:"https://leetcode.com/problems/decode-ways",target:"_blank",rel:"noopener noreferrer"},Bl=t("td",{style:{"text-align":"center"}},null,-1),Yl={style:{"text-align":"left"}},Al=t("code",null,"字符串",-1),Jl=t("code",null,"动态规划",-1),Rl={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"95",-1),Ul={style:{"text-align":"left"}},Wl={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},Xl={style:{"text-align":"center"}},Fl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0095",target:"_blank",rel:"noopener noreferrer"},Gl={style:{"text-align":"left"}},Tl=t("code",null,"树",-1),Ql=t("code",null,"二叉搜索树",-1),Zl=t("code",null,"动态规划",-1),$l=t("code",null,"2+",-1),tn={style:{"text-align":"left"}},en=t("td",{style:{"text-align":"center"}},"96",-1),on={style:{"text-align":"left"}},ln={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},nn={style:{"text-align":"center"}},sn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0096",target:"_blank",rel:"noopener noreferrer"},dn={style:{"text-align":"left"}},_n=t("code",null,"树",-1),cn=t("code",null,"二叉搜索树",-1),an=t("code",null,"数学",-1),rn=t("code",null,"2+",-1),hn={style:{"text-align":"left"}},un=t("td",{style:{"text-align":"center"}},"97",-1),fn={style:{"text-align":"left"}},gn={href:"https://leetcode.com/problems/interleaving-string",target:"_blank",rel:"noopener noreferrer"},mn={style:{"text-align":"center"}},yn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0097",target:"_blank",rel:"noopener noreferrer"},xn={style:{"text-align":"left"}},pn=t("code",null,"字符串",-1),bn=t("code",null,"动态规划",-1),kn={style:{"text-align":"left"}},Mn=t("td",{style:{"text-align":"center"}},"115",-1),Hn={style:{"text-align":"left"}},In={href:"https://leetcode.com/problems/distinct-subsequences",target:"_blank",rel:"noopener noreferrer"},wn=t("td",{style:{"text-align":"center"}},null,-1),vn={style:{"text-align":"left"}},qn=t("code",null,"字符串",-1),jn=t("code",null,"动态规划",-1),zn={style:{"text-align":"left"}},Cn=t("td",{style:{"text-align":"center"}},"118",-1),On={style:{"text-align":"left"}},Ln={href:"https://leetcode.com/problems/pascals-triangle",target:"_blank",rel:"noopener noreferrer"},En={style:{"text-align":"center"}},Pn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0118",target:"_blank",rel:"noopener noreferrer"},Kn={style:{"text-align":"left"}},Vn=t("code",null,"数组",-1),Nn=t("code",null,"动态规划",-1),Dn={style:{"text-align":"left"}},Bn=t("td",{style:{"text-align":"center"}},"119",-1),Yn={style:{"text-align":"left"}},An={href:"https://leetcode.com/problems/pascals-triangle-ii",target:"_blank",rel:"noopener noreferrer"},Jn=t("td",{style:{"text-align":"center"}},null,-1),Rn={style:{"text-align":"left"}},Sn=t("code",null,"数组",-1),Un=t("code",null,"动态规划",-1),Wn={style:{"text-align":"left"}},Xn=t("td",{style:{"text-align":"center"}},"120",-1),Fn={style:{"text-align":"left"}},Gn={href:"https://leetcode.com/problems/triangle",target:"_blank",rel:"noopener noreferrer"},Tn={style:{"text-align":"center"}},Qn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0120",target:"_blank",rel:"noopener noreferrer"},Zn={style:{"text-align":"left"}},$n=t("code",null,"数组",-1),ts=t("code",null,"动态规划",-1),es={style:{"text-align":"left"}},os=t("td",{style:{"text-align":"center"}},"121",-1),ls={style:{"text-align":"left"}},ns={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock",target:"_blank",rel:"noopener noreferrer"},ss={style:{"text-align":"center"}},ds={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0121",target:"_blank",rel:"noopener noreferrer"},_s={style:{"text-align":"left"}},is=t("code",null,"数组",-1),cs=t("code",null,"动态规划",-1),as={style:{"text-align":"left"}},rs=t("td",{style:{"text-align":"center"}},"122",-1),hs={style:{"text-align":"left"}},us={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",target:"_blank",rel:"noopener noreferrer"},fs={style:{"text-align":"center"}},gs={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0122",target:"_blank",rel:"noopener noreferrer"},ms={style:{"text-align":"left"}},ys=t("code",null,"贪心",-1),xs=t("code",null,"数组",-1),ps=t("code",null,"动态规划",-1),bs={style:{"text-align":"left"}},ks=t("td",{style:{"text-align":"center"}},"123",-1),Ms={style:{"text-align":"left"}},Hs={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",target:"_blank",rel:"noopener noreferrer"},Is={style:{"text-align":"center"}},ws={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0123",target:"_blank",rel:"noopener noreferrer"},vs={style:{"text-align":"left"}},qs=t("code",null,"数组",-1),js=t("code",null,"动态规划",-1),zs={style:{"text-align":"left"}},Cs=t("td",{style:{"text-align":"center"}},"124",-1),Os={style:{"text-align":"left"}},Ls={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Es={style:{"text-align":"center"}},Ps={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0124",target:"_blank",rel:"noopener noreferrer"},Ks={style:{"text-align":"left"}},Vs=t("code",null,"树",-1),Ns=t("code",null,"深度优先搜索",-1),Ds=t("code",null,"动态规划",-1),Bs=t("code",null,"1+",-1),Ys={style:{"text-align":"left"}},As=t("td",{style:{"text-align":"center"}},"131",-1),Js={style:{"text-align":"left"}},Rs={href:"https://leetcode.com/problems/palindrome-partitioning",target:"_blank",rel:"noopener noreferrer"},Ss={style:{"text-align":"center"}},Us={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0131",target:"_blank",rel:"noopener noreferrer"},Ws={style:{"text-align":"left"}},Xs=t("code",null,"字符串",-1),Fs=t("code",null,"动态规划",-1),Gs=t("code",null,"回溯",-1),Ts={style:{"text-align":"left"}},Qs=t("td",{style:{"text-align":"center"}},"132",-1),Zs={style:{"text-align":"left"}},$s={href:"https://leetcode.com/problems/palindrome-partitioning-ii",target:"_blank",rel:"noopener noreferrer"},td=t("td",{style:{"text-align":"center"}},null,-1),ed={style:{"text-align":"left"}},od=t("code",null,"字符串",-1),ld=t("code",null,"动态规划",-1),nd={style:{"text-align":"left"}},sd=t("td",{style:{"text-align":"center"}},"139",-1),dd={style:{"text-align":"left"}},_d={href:"https://leetcode.com/problems/word-break",target:"_blank",rel:"noopener noreferrer"},id={style:{"text-align":"center"}},cd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0139",target:"_blank",rel:"noopener noreferrer"},ad={style:{"text-align":"left"}},rd=t("code",null,"字典树",-1),hd=t("code",null,"记忆化搜索",-1),ud=t("code",null,"数组",-1),fd=t("code",null,"3+",-1),gd={style:{"text-align":"left"}},md=t("td",{style:{"text-align":"center"}},"140",-1),yd={style:{"text-align":"left"}},xd={href:"https://leetcode.com/problems/word-break-ii",target:"_blank",rel:"noopener noreferrer"},pd=t("td",{style:{"text-align":"center"}},null,-1),bd={style:{"text-align":"left"}},kd=t("code",null,"字典树",-1),Md=t("code",null,"记忆化搜索",-1),Hd=t("code",null,"数组",-1),Id=t("code",null,"4+",-1),wd={style:{"text-align":"left"}},vd=t("td",{style:{"text-align":"center"}},"152",-1),qd={style:{"text-align":"left"}},jd={href:"https://leetcode.com/problems/maximum-product-subarray",target:"_blank",rel:"noopener noreferrer"},zd={style:{"text-align":"center"}},Cd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0152",target:"_blank",rel:"noopener noreferrer"},Od={style:{"text-align":"left"}},Ld=t("code",null,"数组",-1),Ed=t("code",null,"动态规划",-1),Pd={style:{"text-align":"left"}},Kd=t("td",{style:{"text-align":"center"}},"174",-1),Vd={style:{"text-align":"left"}},Nd={href:"https://leetcode.com/problems/dungeon-game",target:"_blank",rel:"noopener noreferrer"},Dd={style:{"text-align":"center"}},Bd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0174",target:"_blank",rel:"noopener noreferrer"},Yd={style:{"text-align":"left"}},Ad=t("code",null,"数组",-1),Jd=t("code",null,"动态规划",-1),Rd=t("code",null,"矩阵",-1),Sd={style:{"text-align":"left"}},Ud=t("td",{style:{"text-align":"center"}},"188",-1),Wd={style:{"text-align":"left"}},Xd={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",target:"_blank",rel:"noopener noreferrer"},Fd={style:{"text-align":"center"}},Gd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0188",target:"_blank",rel:"noopener noreferrer"},Td={style:{"text-align":"left"}},Qd=t("code",null,"数组",-1),Zd=t("code",null,"动态规划",-1),$d={style:{"text-align":"left"}},t_=t("td",{style:{"text-align":"center"}},"198",-1),e_={style:{"text-align":"left"}},o_={href:"https://leetcode.com/problems/house-robber",target:"_blank",rel:"noopener noreferrer"},l_={style:{"text-align":"center"}},n_={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0198",target:"_blank",rel:"noopener noreferrer"},s_={style:{"text-align":"left"}},d_=t("code",null,"数组",-1),__=t("code",null,"动态规划",-1),i_={style:{"text-align":"left"}},c_=t("td",{style:{"text-align":"center"}},"213",-1),a_={style:{"text-align":"left"}},r_={href:"https://leetcode.com/problems/house-robber-ii",target:"_blank",rel:"noopener noreferrer"},h_=t("td",{style:{"text-align":"center"}},null,-1),u_={style:{"text-align":"left"}},f_=t("code",null,"数组",-1),g_=t("code",null,"动态规划",-1),m_={style:{"text-align":"left"}},y_=t("td",{style:{"text-align":"center"}},"221",-1),x_={style:{"text-align":"left"}},p_={href:"https://leetcode.com/problems/maximal-square",target:"_blank",rel:"noopener noreferrer"},b_={style:{"text-align":"center"}},k_={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0221",target:"_blank",rel:"noopener noreferrer"},M_={style:{"text-align":"left"}},H_=t("code",null,"数组",-1),I_=t("code",null,"动态规划",-1),w_=t("code",null,"矩阵",-1),v_={style:{"text-align":"left"}},q_=t("td",{style:{"text-align":"center"}},"233",-1),j_={style:{"text-align":"left"}},z_={href:"https://leetcode.com/problems/number-of-digit-one",target:"_blank",rel:"noopener noreferrer"},C_=t("td",{style:{"text-align":"center"}},null,-1),O_={style:{"text-align":"left"}},L_=t("code",null,"递归",-1),E_=t("code",null,"数学",-1),P_=t("code",null,"动态规划",-1),K_={style:{"text-align":"left"}},V_=t("td",{style:{"text-align":"center"}},"241",-1),N_={style:{"text-align":"left"}},D_={href:"https://leetcode.com/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},B_=t("td",{style:{"text-align":"center"}},null,-1),Y_={style:{"text-align":"left"}},A_=t("code",null,"递归",-1),J_=t("code",null,"记忆化搜索",-1),R_=t("code",null,"数学",-1),S_=t("code",null,"2+",-1),U_={style:{"text-align":"left"}},W_=t("td",{style:{"text-align":"center"}},"256",-1),X_={style:{"text-align":"left"}},F_={href:"https://leetcode.com/problems/paint-house",target:"_blank",rel:"noopener noreferrer"},G_=t("td",{style:{"text-align":"center"}},null,-1),T_={style:{"text-align":"left"}},Q_=t("code",null,"数组",-1),Z_=t("code",null,"动态规划",-1),$_={style:{"text-align":"left"}},ti=t("td",{style:{"text-align":"center"}},"264",-1),ei={style:{"text-align":"left"}},oi={href:"https://leetcode.com/problems/ugly-number-ii",target:"_blank",rel:"noopener noreferrer"},li={style:{"text-align":"center"}},ni={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0264",target:"_blank",rel:"noopener noreferrer"},si={style:{"text-align":"left"}},di=t("code",null,"哈希表",-1),_i=t("code",null,"数学",-1),ii=t("code",null,"动态规划",-1),ci=t("code",null,"1+",-1),ai={style:{"text-align":"left"}},ri=t("td",{style:{"text-align":"center"}},"265",-1),hi={style:{"text-align":"left"}},ui={href:"https://leetcode.com/problems/paint-house-ii",target:"_blank",rel:"noopener noreferrer"},fi=t("td",{style:{"text-align":"center"}},null,-1),gi={style:{"text-align":"left"}},mi=t("code",null,"数组",-1),yi=t("code",null,"动态规划",-1),xi={style:{"text-align":"left"}},pi=t("td",{style:{"text-align":"center"}},"276",-1),bi={style:{"text-align":"left"}},ki={href:"https://leetcode.com/problems/paint-fence",target:"_blank",rel:"noopener noreferrer"},Mi=t("td",{style:{"text-align":"center"}},null,-1),Hi={style:{"text-align":"left"}},Ii=t("code",null,"动态规划",-1),wi={style:{"text-align":"left"}},vi=t("td",{style:{"text-align":"center"}},"279",-1),qi={style:{"text-align":"left"}},ji={href:"https://leetcode.com/problems/perfect-squares",target:"_blank",rel:"noopener noreferrer"},zi={style:{"text-align":"center"}},Ci={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0279",target:"_blank",rel:"noopener noreferrer"},Oi={style:{"text-align":"left"}},Li=t("code",null,"广度优先搜索",-1),Ei=t("code",null,"数学",-1),Pi=t("code",null,"动态规划",-1),Ki={style:{"text-align":"left"}},Vi=t("td",{style:{"text-align":"center"}},"294",-1),Ni={style:{"text-align":"left"}},Di={href:"https://leetcode.com/problems/flip-game-ii",target:"_blank",rel:"noopener noreferrer"},Bi=t("td",{style:{"text-align":"center"}},null,-1),Yi={style:{"text-align":"left"}},Ai=t("code",null,"记忆化搜索",-1),Ji=t("code",null,"数学",-1),Ri=t("code",null,"动态规划",-1),Si=t("code",null,"2+",-1),Ui={style:{"text-align":"left"}},Wi=t("td",{style:{"text-align":"center"}},"300",-1),Xi={style:{"text-align":"left"}},Fi={href:"https://leetcode.com/problems/longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},Gi={style:{"text-align":"center"}},Ti={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0300",target:"_blank",rel:"noopener noreferrer"},Qi={style:{"text-align":"left"}},Zi=t("code",null,"数组",-1),$i=t("code",null,"二分查找",-1),tc=t("code",null,"动态规划",-1),ec={style:{"text-align":"left"}},oc=t("td",{style:{"text-align":"center"}},"309",-1),lc={style:{"text-align":"left"}},nc={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown",target:"_blank",rel:"noopener noreferrer"},sc={style:{"text-align":"center"}},dc={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0309",target:"_blank",rel:"noopener noreferrer"},_c={style:{"text-align":"left"}},ic=t("code",null,"数组",-1),cc=t("code",null,"动态规划",-1),ac={style:{"text-align":"left"}},rc=t("td",{style:{"text-align":"center"}},"312",-1),hc={style:{"text-align":"left"}},uc={href:"https://leetcode.com/problems/burst-balloons",target:"_blank",rel:"noopener noreferrer"},fc=t("td",{style:{"text-align":"center"}},null,-1),gc={style:{"text-align":"left"}},mc=t("code",null,"数组",-1),yc=t("code",null,"动态规划",-1),xc={style:{"text-align":"left"}},pc=t("td",{style:{"text-align":"center"}},"313",-1),bc={style:{"text-align":"left"}},kc={href:"https://leetcode.com/problems/super-ugly-number",target:"_blank",rel:"noopener noreferrer"},Mc=t("td",{style:{"text-align":"center"}},null,-1),Hc={style:{"text-align":"left"}},Ic=t("code",null,"数组",-1),wc=t("code",null,"数学",-1),vc=t("code",null,"动态规划",-1),qc={style:{"text-align":"left"}},jc=t("td",{style:{"text-align":"center"}},"322",-1),zc={style:{"text-align":"left"}},Cc={href:"https://leetcode.com/problems/coin-change",target:"_blank",rel:"noopener noreferrer"},Oc={style:{"text-align":"center"}},Lc={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0322",target:"_blank",rel:"noopener noreferrer"},Ec={style:{"text-align":"left"}},Pc=t("code",null,"广度优先搜索",-1),Kc=t("code",null,"数组",-1),Vc=t("code",null,"动态规划",-1),Nc={style:{"text-align":"left"}},Dc=t("td",{style:{"text-align":"center"}},"329",-1),Bc={style:{"text-align":"left"}},Yc={href:"https://leetcode.com/problems/longest-increasing-path-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Ac=t("td",{style:{"text-align":"center"}},null,-1),Jc={style:{"text-align":"left"}},Rc=t("code",null,"深度优先搜索",-1),Sc=t("code",null,"广度优先搜索",-1),Uc=t("code",null,"图",-1),Wc=t("code",null,"5+",-1),Xc={style:{"text-align":"left"}},Fc=t("td",{style:{"text-align":"center"}},"333",-1),Gc={style:{"text-align":"left"}},Tc={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Qc=t("td",{style:{"text-align":"center"}},null,-1),Zc={style:{"text-align":"left"}},$c=t("code",null,"树",-1),ta=t("code",null,"深度优先搜索",-1),ea=t("code",null,"二叉搜索树",-1),oa=t("code",null,"2+",-1),la={style:{"text-align":"left"}},na=t("td",{style:{"text-align":"center"}},"337",-1),sa={style:{"text-align":"left"}},da={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},_a=t("td",{style:{"text-align":"center"}},null,-1),ia={style:{"text-align":"left"}},ca=t("code",null,"树",-1),aa=t("code",null,"深度优先搜索",-1),ra=t("code",null,"动态规划",-1),ha=t("code",null,"1+",-1),ua={style:{"text-align":"left"}},fa=t("td",{style:{"text-align":"center"}},"338",-1),ga={style:{"text-align":"left"}},ma={href:"https://leetcode.com/problems/counting-bits",target:"_blank",rel:"noopener noreferrer"},ya=t("td",{style:{"text-align":"center"}},null,-1),xa={style:{"text-align":"left"}},pa=t("code",null,"位运算",-1),ba=t("code",null,"动态规划",-1),ka={style:{"text-align":"left"}},Ma=t("td",{style:{"text-align":"center"}},"343",-1),Ha={style:{"text-align":"left"}},Ia={href:"https://leetcode.com/problems/integer-break",target:"_blank",rel:"noopener noreferrer"},wa={style:{"text-align":"center"}},va={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0343",target:"_blank",rel:"noopener noreferrer"},qa={style:{"text-align":"left"}},ja=t("code",null,"数学",-1),za=t("code",null,"动态规划",-1),Ca={style:{"text-align":"left"}},Oa=t("td",{style:{"text-align":"center"}},"351",-1),La={style:{"text-align":"left"}},Ea={href:"https://leetcode.com/problems/android-unlock-patterns",target:"_blank",rel:"noopener noreferrer"},Pa=t("td",{style:{"text-align":"center"}},null,-1),Ka={style:{"text-align":"left"}},Va=t("code",null,"位运算",-1),Na=t("code",null,"动态规划",-1),Da=t("code",null,"回溯",-1),Ba=t("code",null,"1+",-1),Ya={style:{"text-align":"left"}},Aa=t("td",{style:{"text-align":"center"}},"354",-1),Ja={style:{"text-align":"left"}},Ra={href:"https://leetcode.com/problems/russian-doll-envelopes",target:"_blank",rel:"noopener noreferrer"},Sa={style:{"text-align":"center"}},Ua={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0354",target:"_blank",rel:"noopener noreferrer"},Wa={style:{"text-align":"left"}},Xa=t("code",null,"数组",-1),Fa=t("code",null,"二分查找",-1),Ga=t("code",null,"动态规划",-1),Ta=t("code",null,"1+",-1),Qa={style:{"text-align":"left"}},Za=t("td",{style:{"text-align":"center"}},"357",-1),$a={style:{"text-align":"left"}},tr={href:"https://leetcode.com/problems/count-numbers-with-unique-digits",target:"_blank",rel:"noopener noreferrer"},er=t("td",{style:{"text-align":"center"}},null,-1),or={style:{"text-align":"left"}},lr=t("code",null,"数学",-1),nr=t("code",null,"动态规划",-1),sr=t("code",null,"回溯",-1),dr={style:{"text-align":"left"}},_r=t("td",{style:{"text-align":"center"}},"361",-1),ir={style:{"text-align":"left"}},cr={href:"https://leetcode.com/problems/bomb-enemy",target:"_blank",rel:"noopener noreferrer"},ar=t("td",{style:{"text-align":"center"}},null,-1),rr={style:{"text-align":"left"}},hr=t("code",null,"数组",-1),ur=t("code",null,"动态规划",-1),fr=t("code",null,"矩阵",-1),gr={style:{"text-align":"left"}},mr=t("td",{style:{"text-align":"center"}},"368",-1),yr={style:{"text-align":"left"}},xr={href:"https://leetcode.com/problems/largest-divisible-subset",target:"_blank",rel:"noopener noreferrer"},pr=t("td",{style:{"text-align":"center"}},null,-1),br={style:{"text-align":"left"}},kr=t("code",null,"数组",-1),Mr=t("code",null,"数学",-1),Hr=t("code",null,"动态规划",-1),Ir=t("code",null,"1+",-1),wr={style:{"text-align":"left"}},vr=t("td",{style:{"text-align":"center"}},"375",-1),qr={style:{"text-align":"left"}},jr={href:"https://leetcode.com/problems/guess-number-higher-or-lower-ii",target:"_blank",rel:"noopener noreferrer"},zr={style:{"text-align":"center"}},Cr={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0375",target:"_blank",rel:"noopener noreferrer"},Or={style:{"text-align":"left"}},Lr=t("code",null,"数学",-1),Er=t("code",null,"动态规划",-1),Pr=t("code",null,"博弈",-1),Kr={style:{"text-align":"left"}},Vr=t("td",{style:{"text-align":"center"}},"376",-1),Nr={style:{"text-align":"left"}},Dr={href:"https://leetcode.com/problems/wiggle-subsequence",target:"_blank",rel:"noopener noreferrer"},Br=t("td",{style:{"text-align":"center"}},null,-1),Yr={style:{"text-align":"left"}},Ar=t("code",null,"贪心",-1),Jr=t("code",null,"数组",-1),Rr=t("code",null,"动态规划",-1),Sr={style:{"text-align":"left"}},Ur=t("td",{style:{"text-align":"center"}},"377",-1),Wr={style:{"text-align":"left"}},Xr={href:"https://leetcode.com/problems/combination-sum-iv",target:"_blank",rel:"noopener noreferrer"},Fr=t("td",{style:{"text-align":"center"}},null,-1),Gr={style:{"text-align":"left"}},Tr=t("code",null,"数组",-1),Qr=t("code",null,"动态规划",-1),Zr={style:{"text-align":"left"}},$r=t("td",{style:{"text-align":"center"}},"392",-1),th={style:{"text-align":"left"}},eh={href:"https://leetcode.com/problems/is-subsequence",target:"_blank",rel:"noopener noreferrer"},oh={style:{"text-align":"center"}},lh={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0392",target:"_blank",rel:"noopener noreferrer"},nh={style:{"text-align":"left"}},sh=t("code",null,"双指针",-1),dh=t("code",null,"字符串",-1),_h=t("code",null,"动态规划",-1),ih={style:{"text-align":"left"}},ch=t("td",{style:{"text-align":"center"}},"396",-1),ah={style:{"text-align":"left"}},rh={href:"https://leetcode.com/problems/rotate-function",target:"_blank",rel:"noopener noreferrer"},hh=t("td",{style:{"text-align":"center"}},null,-1),uh={style:{"text-align":"left"}},fh=t("code",null,"数组",-1),gh=t("code",null,"数学",-1),mh=t("code",null,"动态规划",-1),yh={style:{"text-align":"left"}},xh=t("td",{style:{"text-align":"center"}},"397",-1),ph={style:{"text-align":"left"}},bh={href:"https://leetcode.com/problems/integer-replacement",target:"_blank",rel:"noopener noreferrer"},kh=t("td",{style:{"text-align":"center"}},null,-1),Mh={style:{"text-align":"left"}},Hh=t("code",null,"贪心",-1),Ih=t("code",null,"位运算",-1),wh=t("code",null,"记忆化搜索",-1),vh=t("code",null,"1+",-1),qh={style:{"text-align":"left"}},jh=t("td",{style:{"text-align":"center"}},"403",-1),zh={style:{"text-align":"left"}},Ch={href:"https://leetcode.com/problems/frog-jump",target:"_blank",rel:"noopener noreferrer"},Oh=t("td",{style:{"text-align":"center"}},null,-1),Lh={style:{"text-align":"left"}},Eh=t("code",null,"数组",-1),Ph=t("code",null,"动态规划",-1),Kh={style:{"text-align":"left"}},Vh=t("td",{style:{"text-align":"center"}},"410",-1),Nh={style:{"text-align":"left"}},Dh={href:"https://leetcode.com/problems/split-array-largest-sum",target:"_blank",rel:"noopener noreferrer"},Bh=t("td",{style:{"text-align":"center"}},null,-1),Yh={style:{"text-align":"left"}},Ah=t("code",null,"贪心",-1),Jh=t("code",null,"数组",-1),Rh=t("code",null,"二分查找",-1),Sh=t("code",null,"2+",-1),Uh={style:{"text-align":"left"}},Wh=t("td",{style:{"text-align":"center"}},"413",-1),Xh={style:{"text-align":"left"}},Fh={href:"https://leetcode.com/problems/arithmetic-slices",target:"_blank",rel:"noopener noreferrer"},Gh=t("td",{style:{"text-align":"center"}},null,-1),Th={style:{"text-align":"left"}},Qh=t("code",null,"数组",-1),Zh=t("code",null,"动态规划",-1),$h=t("code",null,"滑动窗口",-1),t1={style:{"text-align":"left"}},e1=t("td",{style:{"text-align":"center"}},"416",-1),o1={style:{"text-align":"left"}},l1={href:"https://leetcode.com/problems/partition-equal-subset-sum",target:"_blank",rel:"noopener noreferrer"},n1={style:{"text-align":"center"}},s1={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0416",target:"_blank",rel:"noopener noreferrer"},d1={style:{"text-align":"left"}},_1=t("code",null,"数组",-1),i1=t("code",null,"动态规划",-1),c1={style:{"text-align":"left"}},a1=t("td",{style:{"text-align":"center"}},"418",-1),r1={style:{"text-align":"left"}},h1={href:"https://leetcode.com/problems/sentence-screen-fitting",target:"_blank",rel:"noopener noreferrer"},u1=t("td",{style:{"text-align":"center"}},null,-1),f1={style:{"text-align":"left"}},g1=t("code",null,"数组",-1),m1=t("code",null,"字符串",-1),y1=t("code",null,"动态规划",-1),x1={style:{"text-align":"left"}},p1=t("td",{style:{"text-align":"center"}},"435",-1),b1={style:{"text-align":"left"}},k1={href:"https://leetcode.com/problems/non-overlapping-intervals",target:"_blank",rel:"noopener noreferrer"},M1=t("td",{style:{"text-align":"center"}},null,-1),H1={style:{"text-align":"left"}},I1=t("code",null,"贪心",-1),w1=t("code",null,"数组",-1),v1=t("code",null,"动态规划",-1),q1=t("code",null,"1+",-1),j1={style:{"text-align":"left"}},z1=t("td",{style:{"text-align":"center"}},"446",-1),C1={style:{"text-align":"left"}},O1={href:"https://leetcode.com/problems/arithmetic-slices-ii-subsequence",target:"_blank",rel:"noopener noreferrer"},L1=t("td",{style:{"text-align":"center"}},null,-1),E1={style:{"text-align":"left"}},P1=t("code",null,"数组",-1),K1=t("code",null,"动态规划",-1),V1={style:{"text-align":"left"}},N1=t("td",{style:{"text-align":"center"}},"458",-1),D1={style:{"text-align":"left"}},B1={href:"https://leetcode.com/problems/poor-pigs",target:"_blank",rel:"noopener noreferrer"},Y1=t("td",{style:{"text-align":"center"}},null,-1),A1={style:{"text-align":"left"}},J1=t("code",null,"数学",-1),R1=t("code",null,"动态规划",-1),S1=t("code",null,"组合数学",-1),U1={style:{"text-align":"left"}},W1=t("td",{style:{"text-align":"center"}},"464",-1),X1={style:{"text-align":"left"}},F1={href:"https://leetcode.com/problems/can-i-win",target:"_blank",rel:"noopener noreferrer"},G1=t("td",{style:{"text-align":"center"}},null,-1),T1={style:{"text-align":"left"}},Q1=t("code",null,"位运算",-1),Z1=t("code",null,"记忆化搜索",-1),$1=t("code",null,"数学",-1),tu=t("code",null,"3+",-1),eu={style:{"text-align":"left"}},ou=t("td",{style:{"text-align":"center"}},"465",-1),lu={style:{"text-align":"left"}},nu={href:"https://leetcode.com/problems/optimal-account-balancing",target:"_blank",rel:"noopener noreferrer"},su=t("td",{style:{"text-align":"center"}},null,-1),du={style:{"text-align":"left"}},_u=t("code",null,"位运算",-1),iu=t("code",null,"数组",-1),cu=t("code",null,"动态规划",-1),au=t("code",null,"2+",-1),ru={style:{"text-align":"left"}},hu=t("td",{style:{"text-align":"center"}},"466",-1),uu={style:{"text-align":"left"}},fu={href:"https://leetcode.com/problems/count-the-repetitions",target:"_blank",rel:"noopener noreferrer"},gu=t("td",{style:{"text-align":"center"}},null,-1),mu={style:{"text-align":"left"}},yu=t("code",null,"字符串",-1),xu=t("code",null,"动态规划",-1),pu={style:{"text-align":"left"}},bu=t("td",{style:{"text-align":"center"}},"467",-1),ku={style:{"text-align":"left"}},Mu={href:"https://leetcode.com/problems/unique-substrings-in-wraparound-string",target:"_blank",rel:"noopener noreferrer"},Hu=t("td",{style:{"text-align":"center"}},null,-1),Iu={style:{"text-align":"left"}},wu=t("code",null,"字符串",-1),vu=t("code",null,"动态规划",-1),qu={style:{"text-align":"left"}},ju=t("td",{style:{"text-align":"center"}},"471",-1),zu={style:{"text-align":"left"}},Cu={href:"https://leetcode.com/problems/encode-string-with-shortest-length",target:"_blank",rel:"noopener noreferrer"},Ou=t("td",{style:{"text-align":"center"}},null,-1),Lu={style:{"text-align":"left"}},Eu=t("code",null,"字符串",-1),Pu=t("code",null,"动态规划",-1),Ku={style:{"text-align":"left"}},Vu=t("td",{style:{"text-align":"center"}},"472",-1),Nu={style:{"text-align":"left"}},Du={href:"https://leetcode.com/problems/concatenated-words",target:"_blank",rel:"noopener noreferrer"},Bu=t("td",{style:{"text-align":"center"}},null,-1),Yu={style:{"text-align":"left"}},Au=t("code",null,"深度优先搜索",-1),Ju=t("code",null,"字典树",-1),Ru=t("code",null,"数组",-1),Su=t("code",null,"2+",-1),Uu={style:{"text-align":"left"}},Wu=t("td",{style:{"text-align":"center"}},"473",-1),Xu={style:{"text-align":"left"}},Fu={href:"https://leetcode.com/problems/matchsticks-to-square",target:"_blank",rel:"noopener noreferrer"},Gu=t("td",{style:{"text-align":"center"}},null,-1),Tu={style:{"text-align":"left"}},Qu=t("code",null,"位运算",-1),Zu=t("code",null,"数组",-1),$u=t("code",null,"动态规划",-1),tf=t("code",null,"2+",-1),ef={style:{"text-align":"left"}},of=t("td",{style:{"text-align":"center"}},"474",-1),lf={style:{"text-align":"left"}},nf={href:"https://leetcode.com/problems/ones-and-zeroes",target:"_blank",rel:"noopener noreferrer"},sf={style:{"text-align":"center"}},df={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0474",target:"_blank",rel:"noopener noreferrer"},_f={style:{"text-align":"left"}},cf=t("code",null,"数组",-1),af=t("code",null,"字符串",-1),rf=t("code",null,"动态规划",-1),hf={style:{"text-align":"left"}},uf=t("td",{style:{"text-align":"center"}},"486",-1),ff={style:{"text-align":"left"}},gf={href:"https://leetcode.com/problems/predict-the-winner",target:"_blank",rel:"noopener noreferrer"},mf=t("td",{style:{"text-align":"center"}},null,-1),yf={style:{"text-align":"left"}},xf=t("code",null,"递归",-1),pf=t("code",null,"数组",-1),bf=t("code",null,"数学",-1),kf=t("code",null,"2+",-1),Mf={style:{"text-align":"left"}},Hf=t("td",{style:{"text-align":"center"}},"487",-1),If={style:{"text-align":"left"}},wf={href:"https://leetcode.com/problems/max-consecutive-ones-ii",target:"_blank",rel:"noopener noreferrer"},vf=t("td",{style:{"text-align":"center"}},null,-1),qf={style:{"text-align":"left"}},jf=t("code",null,"数组",-1),zf=t("code",null,"动态规划",-1),Cf=t("code",null,"滑动窗口",-1),Of={style:{"text-align":"left"}},Lf=t("td",{style:{"text-align":"center"}},"488",-1),Ef={style:{"text-align":"left"}},Pf={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},Kf=t("td",{style:{"text-align":"center"}},null,-1),Vf={style:{"text-align":"left"}},Nf=t("code",null,"栈",-1),Df=t("code",null,"广度优先搜索",-1),Bf=t("code",null,"记忆化搜索",-1),Yf=t("code",null,"2+",-1),Af={style:{"text-align":"left"}},Jf=t("td",{style:{"text-align":"center"}},"494",-1),Rf={style:{"text-align":"left"}},Sf={href:"https://leetcode.com/problems/target-sum",target:"_blank",rel:"noopener noreferrer"},Uf={style:{"text-align":"center"}},Wf={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0494",target:"_blank",rel:"noopener noreferrer"},Xf={style:{"text-align":"left"}},Ff=t("code",null,"数组",-1),Gf=t("code",null,"动态规划",-1),Tf=t("code",null,"回溯",-1),Qf={style:{"text-align":"left"}},Zf=t("td",{style:{"text-align":"center"}},"509",-1),$f={style:{"text-align":"left"}},tg={href:"https://leetcode.com/problems/fibonacci-number",target:"_blank",rel:"noopener noreferrer"},eg={style:{"text-align":"center"}},og={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0509",target:"_blank",rel:"noopener noreferrer"},lg={style:{"text-align":"left"}},ng=t("code",null,"递归",-1),sg=t("code",null,"记忆化搜索",-1),dg=t("code",null,"数学",-1),_g=t("code",null,"1+",-1),ig={style:{"text-align":"left"}},cg=t("td",{style:{"text-align":"center"}},"514",-1),ag={style:{"text-align":"left"}},rg={href:"https://leetcode.com/problems/freedom-trail",target:"_blank",rel:"noopener noreferrer"},hg={style:{"text-align":"center"}},ug={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0514",target:"_blank",rel:"noopener noreferrer"},fg={style:{"text-align":"left"}},gg=t("code",null,"深度优先搜索",-1),mg=t("code",null,"广度优先搜索",-1),yg=t("code",null,"字符串",-1),xg=t("code",null,"1+",-1),pg={style:{"text-align":"left"}},bg=t("td",{style:{"text-align":"center"}},"516",-1),kg={style:{"text-align":"left"}},Mg={href:"https://leetcode.com/problems/longest-palindromic-subsequence",target:"_blank",rel:"noopener noreferrer"},Hg={style:{"text-align":"center"}},Ig={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0516",target:"_blank",rel:"noopener noreferrer"},wg={style:{"text-align":"left"}},vg=t("code",null,"字符串",-1),qg=t("code",null,"动态规划",-1),jg={style:{"text-align":"left"}},zg=t("td",{style:{"text-align":"center"}},"518",-1),Cg={style:{"text-align":"left"}},Og={href:"https://leetcode.com/problems/coin-change-ii",target:"_blank",rel:"noopener noreferrer"},Lg={style:{"text-align":"center"}},Eg={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0518",target:"_blank",rel:"noopener noreferrer"},Pg={style:{"text-align":"left"}},Kg=t("code",null,"数组",-1),Vg=t("code",null,"动态规划",-1),Ng={style:{"text-align":"left"}},Dg=t("td",{style:{"text-align":"center"}},"526",-1),Bg={style:{"text-align":"left"}},Yg={href:"https://leetcode.com/problems/beautiful-arrangement",target:"_blank",rel:"noopener noreferrer"},Ag=t("td",{style:{"text-align":"center"}},null,-1),Jg={style:{"text-align":"left"}},Rg=t("code",null,"位运算",-1),Sg=t("code",null,"数组",-1),Ug=t("code",null,"动态规划",-1),Wg=t("code",null,"2+",-1),Xg={style:{"text-align":"left"}},Fg=t("td",{style:{"text-align":"center"}},"542",-1),Gg={style:{"text-align":"left"}},Tg={href:"https://leetcode.com/problems/01-matrix",target:"_blank",rel:"noopener noreferrer"},Qg=t("td",{style:{"text-align":"center"}},null,-1),Zg={style:{"text-align":"left"}},$g=t("code",null,"广度优先搜索",-1),tm=t("code",null,"数组",-1),em=t("code",null,"动态规划",-1),om=t("code",null,"1+",-1),lm={style:{"text-align":"left"}},nm=t("td",{style:{"text-align":"center"}},"546",-1),sm={style:{"text-align":"left"}},dm={href:"https://leetcode.com/problems/remove-boxes",target:"_blank",rel:"noopener noreferrer"},_m=t("td",{style:{"text-align":"center"}},null,-1),im={style:{"text-align":"left"}},cm=t("code",null,"记忆化搜索",-1),am=t("code",null,"数组",-1),rm=t("code",null,"动态规划",-1),hm={style:{"text-align":"left"}},um=t("td",{style:{"text-align":"center"}},"552",-1),fm={style:{"text-align":"left"}},gm={href:"https://leetcode.com/problems/student-attendance-record-ii",target:"_blank",rel:"noopener noreferrer"},mm=t("td",{style:{"text-align":"center"}},null,-1),ym={style:{"text-align":"left"}},xm=t("code",null,"动态规划",-1),pm={style:{"text-align":"left"}},bm=t("td",{style:{"text-align":"center"}},"553",-1),km={style:{"text-align":"left"}},Mm={href:"https://leetcode.com/problems/optimal-division",target:"_blank",rel:"noopener noreferrer"},Hm=t("td",{style:{"text-align":"center"}},null,-1),Im={style:{"text-align":"left"}},wm=t("code",null,"数组",-1),vm=t("code",null,"数学",-1),qm=t("code",null,"动态规划",-1),jm={style:{"text-align":"left"}},zm=t("td",{style:{"text-align":"center"}},"562",-1),Cm={style:{"text-align":"left"}},Om={href:"https://leetcode.com/problems/longest-line-of-consecutive-one-in-matrix",target:"_blank",rel:"noopener noreferrer"},Lm=t("td",{style:{"text-align":"center"}},null,-1),Em={style:{"text-align":"left"}},Pm=t("code",null,"数组",-1),Km=t("code",null,"动态规划",-1),Vm=t("code",null,"矩阵",-1),Nm={style:{"text-align":"left"}},Dm=t("td",{style:{"text-align":"center"}},"568",-1),Bm={style:{"text-align":"left"}},Ym={href:"https://leetcode.com/problems/maximum-vacation-days",target:"_blank",rel:"noopener noreferrer"},Am=t("td",{style:{"text-align":"center"}},null,-1),Jm={style:{"text-align":"left"}},Rm=t("code",null,"数组",-1),Sm=t("code",null,"动态规划",-1),Um=t("code",null,"矩阵",-1),Wm={style:{"text-align":"left"}},Xm=t("td",{style:{"text-align":"center"}},"576",-1),Fm={style:{"text-align":"left"}},Gm={href:"https://leetcode.com/problems/out-of-boundary-paths",target:"_blank",rel:"noopener noreferrer"},Tm=t("td",{style:{"text-align":"center"}},null,-1),Qm={style:{"text-align":"left"}},Zm=t("code",null,"动态规划",-1),$m={style:{"text-align":"left"}},ty=t("td",{style:{"text-align":"center"}},"583",-1),ey={style:{"text-align":"left"}},oy={href:"https://leetcode.com/problems/delete-operation-for-two-strings",target:"_blank",rel:"noopener noreferrer"},ly={style:{"text-align":"center"}},ny={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0583",target:"_blank",rel:"noopener noreferrer"},sy={style:{"text-align":"left"}},dy=t("code",null,"字符串",-1),_y=t("code",null,"动态规划",-1),iy={style:{"text-align":"left"}},cy=t("td",{style:{"text-align":"center"}},"600",-1),ay={style:{"text-align":"left"}},ry={href:"https://leetcode.com/problems/non-negative-integers-without-consecutive-ones",target:"_blank",rel:"noopener noreferrer"},hy=t("td",{style:{"text-align":"center"}},null,-1),uy={style:{"text-align":"left"}},fy=t("code",null,"动态规划",-1),gy={style:{"text-align":"left"}},my=t("td",{style:{"text-align":"center"}},"629",-1),yy={style:{"text-align":"left"}},xy={href:"https://leetcode.com/problems/k-inverse-pairs-array",target:"_blank",rel:"noopener noreferrer"},py=t("td",{style:{"text-align":"center"}},null,-1),by={style:{"text-align":"left"}},ky=t("code",null,"动态规划",-1),My={style:{"text-align":"left"}},Hy=t("td",{style:{"text-align":"center"}},"634",-1),Iy={style:{"text-align":"left"}},wy={href:"https://leetcode.com/problems/find-the-derangement-of-an-array",target:"_blank",rel:"noopener noreferrer"},vy=t("td",{style:{"text-align":"center"}},null,-1),qy={style:{"text-align":"left"}},jy=t("code",null,"数学",-1),zy=t("code",null,"动态规划",-1),Cy={style:{"text-align":"left"}},Oy=t("td",{style:{"text-align":"center"}},"638",-1),Ly={style:{"text-align":"left"}},Ey={href:"https://leetcode.com/problems/shopping-offers",target:"_blank",rel:"noopener noreferrer"},Py=t("td",{style:{"text-align":"center"}},null,-1),Ky={style:{"text-align":"left"}},Vy=t("code",null,"位运算",-1),Ny=t("code",null,"记忆化搜索",-1),Dy=t("code",null,"数组",-1),By=t("code",null,"3+",-1),Yy={style:{"text-align":"left"}},Ay=t("td",{style:{"text-align":"center"}},"639",-1),Jy={style:{"text-align":"left"}},Ry={href:"https://leetcode.com/problems/decode-ways-ii",target:"_blank",rel:"noopener noreferrer"},Sy=t("td",{style:{"text-align":"center"}},null,-1),Uy={style:{"text-align":"left"}},Wy=t("code",null,"字符串",-1),Xy=t("code",null,"动态规划",-1),Fy={style:{"text-align":"left"}},Gy=t("td",{style:{"text-align":"center"}},"646",-1),Ty={style:{"text-align":"left"}},Qy={href:"https://leetcode.com/problems/maximum-length-of-pair-chain",target:"_blank",rel:"noopener noreferrer"},Zy=t("td",{style:{"text-align":"center"}},null,-1),$y={style:{"text-align":"left"}},t3=t("code",null,"贪心",-1),e3=t("code",null,"数组",-1),o3=t("code",null,"动态规划",-1),l3=t("code",null,"1+",-1),n3={style:{"text-align":"left"}},s3=t("td",{style:{"text-align":"center"}},"647",-1),d3={style:{"text-align":"left"}},_3={href:"https://leetcode.com/problems/palindromic-substrings",target:"_blank",rel:"noopener noreferrer"},i3=t("td",{style:{"text-align":"center"}},null,-1),c3={style:{"text-align":"left"}},a3=t("code",null,"双指针",-1),r3=t("code",null,"字符串",-1),h3=t("code",null,"动态规划",-1),u3={style:{"text-align":"left"}},f3=t("td",{style:{"text-align":"center"}},"650",-1),g3={style:{"text-align":"left"}},m3={href:"https://leetcode.com/problems/2-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},y3=t("td",{style:{"text-align":"center"}},null,-1),x3={style:{"text-align":"left"}},p3=t("code",null,"数学",-1),b3=t("code",null,"动态规划",-1),k3={style:{"text-align":"left"}},M3=t("td",{style:{"text-align":"center"}},"651",-1),H3={style:{"text-align":"left"}},I3={href:"https://leetcode.com/problems/4-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},w3=t("td",{style:{"text-align":"center"}},null,-1),v3={style:{"text-align":"left"}},q3=t("code",null,"数学",-1),j3=t("code",null,"动态规划",-1),z3={style:{"text-align":"left"}},C3=t("td",{style:{"text-align":"center"}},"656",-1),O3={style:{"text-align":"left"}},L3={href:"https://leetcode.com/problems/coin-path",target:"_blank",rel:"noopener noreferrer"},E3=t("td",{style:{"text-align":"center"}},null,-1),P3={style:{"text-align":"left"}},K3=t("code",null,"数组",-1),V3=t("code",null,"动态规划",-1),N3={style:{"text-align":"left"}},D3=t("td",{style:{"text-align":"center"}},"664",-1),B3={style:{"text-align":"left"}},Y3={href:"https://leetcode.com/problems/strange-printer",target:"_blank",rel:"noopener noreferrer"},A3=t("td",{style:{"text-align":"center"}},null,-1),J3={style:{"text-align":"left"}},R3=t("code",null,"字符串",-1),S3=t("code",null,"动态规划",-1),U3={style:{"text-align":"left"}},W3=t("td",{style:{"text-align":"center"}},"673",-1),X3={style:{"text-align":"left"}},F3={href:"https://leetcode.com/problems/number-of-longest-increasing-subsequence",target:"_blank",rel:"noopener noreferrer"},G3=t("td",{style:{"text-align":"center"}},null,-1),T3={style:{"text-align":"left"}},Q3=t("code",null,"树状数组",-1),Z3=t("code",null,"线段树",-1),$3=t("code",null,"数组",-1),tx=t("code",null,"1+",-1),ex={style:{"text-align":"left"}},ox=t("td",{style:{"text-align":"center"}},"678",-1),lx={style:{"text-align":"left"}},nx={href:"https://leetcode.com/problems/valid-parenthesis-string",target:"_blank",rel:"noopener noreferrer"},sx={style:{"text-align":"center"}},dx={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0678",target:"_blank",rel:"noopener noreferrer"},_x={style:{"text-align":"left"}},ix=t("code",null,"栈",-1),cx=t("code",null,"贪心",-1),ax=t("code",null,"字符串",-1),rx=t("code",null,"1+",-1),hx={style:{"text-align":"left"}},ux=t("td",{style:{"text-align":"center"}},"688",-1),fx={style:{"text-align":"left"}},gx={href:"https://leetcode.com/problems/knight-probability-in-chessboard",target:"_blank",rel:"noopener noreferrer"},mx=t("td",{style:{"text-align":"center"}},null,-1),yx={style:{"text-align":"left"}},xx=t("code",null,"动态规划",-1),px={style:{"text-align":"left"}},bx=t("td",{style:{"text-align":"center"}},"689",-1),kx={style:{"text-align":"left"}},Mx={href:"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays",target:"_blank",rel:"noopener noreferrer"},Hx=t("td",{style:{"text-align":"center"}},null,-1),Ix={style:{"text-align":"left"}},wx=t("code",null,"数组",-1),vx=t("code",null,"动态规划",-1),qx={style:{"text-align":"left"}},jx=t("td",{style:{"text-align":"center"}},"691",-1),zx={style:{"text-align":"left"}},Cx={href:"https://leetcode.com/problems/stickers-to-spell-word",target:"_blank",rel:"noopener noreferrer"},Ox=t("td",{style:{"text-align":"center"}},null,-1),Lx={style:{"text-align":"left"}},Ex=t("code",null,"位运算",-1),Px=t("code",null,"数组",-1),Kx=t("code",null,"字符串",-1),Vx=t("code",null,"3+",-1),Nx={style:{"text-align":"left"}},Dx=t("td",{style:{"text-align":"center"}},"698",-1),Bx={style:{"text-align":"left"}},Yx={href:"https://leetcode.com/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},Ax=t("td",{style:{"text-align":"center"}},null,-1),Jx={style:{"text-align":"left"}},Rx=t("code",null,"位运算",-1),Sx=t("code",null,"记忆化搜索",-1),Ux=t("code",null,"数组",-1),Wx=t("code",null,"3+",-1),Xx={style:{"text-align":"left"}},Fx=t("td",{style:{"text-align":"center"}},"712",-1),Gx={style:{"text-align":"left"}},Tx={href:"https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings",target:"_blank",rel:"noopener noreferrer"},Qx={style:{"text-align":"center"}},Zx={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0712",target:"_blank",rel:"noopener noreferrer"},$x={style:{"text-align":"left"}},t2=t("code",null,"字符串",-1),e2=t("code",null,"动态规划",-1),o2={style:{"text-align":"left"}},l2=t("td",{style:{"text-align":"center"}},"714",-1),n2={style:{"text-align":"left"}},s2={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee",target:"_blank",rel:"noopener noreferrer"},d2={style:{"text-align":"center"}},_2={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0714",target:"_blank",rel:"noopener noreferrer"},i2={style:{"text-align":"left"}},c2=t("code",null,"贪心",-1),a2=t("code",null,"数组",-1),r2=t("code",null,"动态规划",-1),h2={style:{"text-align":"left"}},u2=t("td",{style:{"text-align":"center"}},"718",-1),f2={style:{"text-align":"left"}},g2={href:"https://leetcode.com/problems/maximum-length-of-repeated-subarray",target:"_blank",rel:"noopener noreferrer"},m2=t("td",{style:{"text-align":"center"}},null,-1),y2={style:{"text-align":"left"}},x2=t("code",null,"数组",-1),p2=t("code",null,"二分查找",-1),b2=t("code",null,"动态规划",-1),k2=t("code",null,"3+",-1),M2={style:{"text-align":"left"}},H2=t("td",{style:{"text-align":"center"}},"727",-1),I2={style:{"text-align":"left"}},w2={href:"https://leetcode.com/problems/minimum-window-subsequence",target:"_blank",rel:"noopener noreferrer"},v2=t("td",{style:{"text-align":"center"}},null,-1),q2={style:{"text-align":"left"}},j2=t("code",null,"字符串",-1),z2=t("code",null,"动态规划",-1),C2=t("code",null,"滑动窗口",-1),O2={style:{"text-align":"left"}},L2=t("td",{style:{"text-align":"center"}},"730",-1),E2={style:{"text-align":"left"}},P2={href:"https://leetcode.com/problems/count-different-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},K2=t("td",{style:{"text-align":"center"}},null,-1),V2={style:{"text-align":"left"}},N2=t("code",null,"字符串",-1),D2=t("code",null,"动态规划",-1),B2={style:{"text-align":"left"}},Y2=t("td",{style:{"text-align":"center"}},"740",-1),A2={style:{"text-align":"left"}},J2={href:"https://leetcode.com/problems/delete-and-earn",target:"_blank",rel:"noopener noreferrer"},R2=t("td",{style:{"text-align":"center"}},null,-1),S2={style:{"text-align":"left"}},U2=t("code",null,"数组",-1),W2=t("code",null,"哈希表",-1),X2=t("code",null,"动态规划",-1),F2={style:{"text-align":"left"}},G2=t("td",{style:{"text-align":"center"}},"741",-1),T2={style:{"text-align":"left"}},Q2={href:"https://leetcode.com/problems/cherry-pickup",target:"_blank",rel:"noopener noreferrer"},Z2=t("td",{style:{"text-align":"center"}},null,-1),$2={style:{"text-align":"left"}},t4=t("code",null,"数组",-1),e4=t("code",null,"动态规划",-1),o4=t("code",null,"矩阵",-1),l4={style:{"text-align":"left"}},n4=t("td",{style:{"text-align":"center"}},"746",-1),s4={style:{"text-align":"left"}},d4={href:"https://leetcode.com/problems/min-cost-climbing-stairs",target:"_blank",rel:"noopener noreferrer"},_4=t("td",{style:{"text-align":"center"}},null,-1),i4={style:{"text-align":"left"}},c4=t("code",null,"数组",-1),a4=t("code",null,"动态规划",-1),r4={style:{"text-align":"left"}},h4=t("td",{style:{"text-align":"center"}},"750",-1),u4={style:{"text-align":"left"}},f4={href:"https://leetcode.com/problems/number-of-corner-rectangles",target:"_blank",rel:"noopener noreferrer"},g4=t("td",{style:{"text-align":"center"}},null,-1),m4={style:{"text-align":"left"}},y4=t("code",null,"数组",-1),x4=t("code",null,"数学",-1),p4=t("code",null,"动态规划",-1),b4=t("code",null,"1+",-1),k4={style:{"text-align":"left"}},M4=t("td",{style:{"text-align":"center"}},"764",-1),H4={style:{"text-align":"left"}},I4={href:"https://leetcode.com/problems/largest-plus-sign",target:"_blank",rel:"noopener noreferrer"},w4=t("td",{style:{"text-align":"center"}},null,-1),v4={style:{"text-align":"left"}},q4=t("code",null,"数组",-1),j4=t("code",null,"动态规划",-1),z4={style:{"text-align":"left"}},C4=t("td",{style:{"text-align":"center"}},"787",-1),O4={style:{"text-align":"left"}},L4={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},E4=t("td",{style:{"text-align":"center"}},null,-1),P4={style:{"text-align":"left"}},K4=t("code",null,"深度优先搜索",-1),V4=t("code",null,"广度优先搜索",-1),N4=t("code",null,"图",-1),D4=t("code",null,"3+",-1),B4={style:{"text-align":"left"}},Y4=t("td",{style:{"text-align":"center"}},"788",-1),A4={style:{"text-align":"left"}},J4={href:"https://leetcode.com/problems/rotated-digits",target:"_blank",rel:"noopener noreferrer"},R4=t("td",{style:{"text-align":"center"}},null,-1),S4={style:{"text-align":"left"}},U4=t("code",null,"数学",-1),W4=t("code",null,"动态规划",-1),X4={style:{"text-align":"left"}},F4=t("td",{style:{"text-align":"center"}},"790",-1),G4={style:{"text-align":"left"}},T4={href:"https://leetcode.com/problems/domino-and-tromino-tiling",target:"_blank",rel:"noopener noreferrer"},Q4=t("td",{style:{"text-align":"center"}},null,-1),Z4={style:{"text-align":"left"}},$4=t("code",null,"动态规划",-1),tp={style:{"text-align":"left"}},ep=t("td",{style:{"text-align":"center"}},"792",-1),op={style:{"text-align":"left"}},lp={href:"https://leetcode.com/problems/number-of-matching-subsequences",target:"_blank",rel:"noopener noreferrer"},np=t("td",{style:{"text-align":"center"}},null,-1),sp={style:{"text-align":"left"}},dp=t("code",null,"字典树",-1),_p=t("code",null,"数组",-1),ip=t("code",null,"哈希表",-1),cp=t("code",null,"4+",-1),ap={style:{"text-align":"left"}},rp=t("td",{style:{"text-align":"center"}},"799",-1),hp={style:{"text-align":"left"}},up={href:"https://leetcode.com/problems/champagne-tower",target:"_blank",rel:"noopener noreferrer"},fp=t("td",{style:{"text-align":"center"}},null,-1),gp={style:{"text-align":"left"}},mp=t("code",null,"动态规划",-1),yp={style:{"text-align":"left"}},xp=t("td",{style:{"text-align":"center"}},"801",-1),pp={style:{"text-align":"left"}},bp={href:"https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing",target:"_blank",rel:"noopener noreferrer"},kp=t("td",{style:{"text-align":"center"}},null,-1),Mp={style:{"text-align":"left"}},Hp=t("code",null,"数组",-1),Ip=t("code",null,"动态规划",-1),wp={style:{"text-align":"left"}},vp=t("td",{style:{"text-align":"center"}},"805",-1),qp={style:{"text-align":"left"}},jp={href:"https://leetcode.com/problems/split-array-with-same-average",target:"_blank",rel:"noopener noreferrer"},zp=t("td",{style:{"text-align":"center"}},null,-1),Cp={style:{"text-align":"left"}},Op=t("code",null,"位运算",-1),Lp=t("code",null,"数组",-1),Ep=t("code",null,"数学",-1),Pp=t("code",null,"2+",-1),Kp={style:{"text-align":"left"}},Vp=t("td",{style:{"text-align":"center"}},"808",-1),Np={style:{"text-align":"left"}},Dp={href:"https://leetcode.com/problems/soup-servings",target:"_blank",rel:"noopener noreferrer"},Bp=t("td",{style:{"text-align":"center"}},null,-1),Yp={style:{"text-align":"left"}},Ap=t("code",null,"数学",-1),Jp=t("code",null,"动态规划",-1),Rp=t("code",null,"概率与统计",-1),Sp={style:{"text-align":"left"}},Up=t("td",{style:{"text-align":"center"}},"813",-1),Wp={style:{"text-align":"left"}},Xp={href:"https://leetcode.com/problems/largest-sum-of-averages",target:"_blank",rel:"noopener noreferrer"},Fp=t("td",{style:{"text-align":"center"}},null,-1),Gp={style:{"text-align":"left"}},Tp=t("code",null,"数组",-1),Qp=t("code",null,"动态规划",-1),Zp=t("code",null,"前缀和",-1),$p={style:{"text-align":"left"}},tb=t("td",{style:{"text-align":"center"}},"818",-1),eb={style:{"text-align":"left"}},ob={href:"https://leetcode.com/problems/race-car",target:"_blank",rel:"noopener noreferrer"},lb=t("td",{style:{"text-align":"center"}},null,-1),nb={style:{"text-align":"left"}},sb=t("code",null,"动态规划",-1),db={style:{"text-align":"left"}},_b=t("td",{style:{"text-align":"center"}},"823",-1),ib={style:{"text-align":"left"}},cb={href:"https://leetcode.com/problems/binary-trees-with-factors",target:"_blank",rel:"noopener noreferrer"},ab=t("td",{style:{"text-align":"center"}},null,-1),rb={style:{"text-align":"left"}},hb=t("code",null,"数组",-1),ub=t("code",null,"哈希表",-1),fb=t("code",null,"动态规划",-1),gb=t("code",null,"1+",-1),mb={style:{"text-align":"left"}},yb=t("td",{style:{"text-align":"center"}},"828",-1),xb={style:{"text-align":"left"}},pb={href:"https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string",target:"_blank",rel:"noopener noreferrer"},bb=t("td",{style:{"text-align":"center"}},null,-1),kb={style:{"text-align":"left"}},Mb=t("code",null,"哈希表",-1),Hb=t("code",null,"字符串",-1),Ib=t("code",null,"动态规划",-1),wb={style:{"text-align":"left"}},vb=t("td",{style:{"text-align":"center"}},"834",-1),qb={style:{"text-align":"left"}},jb={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},zb=t("td",{style:{"text-align":"center"}},null,-1),Cb={style:{"text-align":"left"}},Ob=t("code",null,"树",-1),Lb=t("code",null,"深度优先搜索",-1),Eb=t("code",null,"图",-1),Pb=t("code",null,"1+",-1),Kb={style:{"text-align":"left"}},Vb=t("td",{style:{"text-align":"center"}},"837",-1),Nb={style:{"text-align":"left"}},Db={href:"https://leetcode.com/problems/new-21-game",target:"_blank",rel:"noopener noreferrer"},Bb=t("td",{style:{"text-align":"center"}},null,-1),Yb={style:{"text-align":"left"}},Ab=t("code",null,"数学",-1),Jb=t("code",null,"动态规划",-1),Rb=t("code",null,"滑动窗口",-1),Sb=t("code",null,"1+",-1),Ub={style:{"text-align":"left"}},Wb=t("td",{style:{"text-align":"center"}},"838",-1),Xb={style:{"text-align":"left"}},Fb={href:"https://leetcode.com/problems/push-dominoes",target:"_blank",rel:"noopener noreferrer"},Gb=t("td",{style:{"text-align":"center"}},null,-1),Tb={style:{"text-align":"left"}},Qb=t("code",null,"双指针",-1),Zb=t("code",null,"字符串",-1),$b=t("code",null,"动态规划",-1),t5={style:{"text-align":"left"}},e5=t("td",{style:{"text-align":"center"}},"845",-1),o5={style:{"text-align":"left"}},l5={href:"https://leetcode.com/problems/longest-mountain-in-array",target:"_blank",rel:"noopener noreferrer"},n5=t("td",{style:{"text-align":"center"}},null,-1),s5={style:{"text-align":"left"}},d5=t("code",null,"数组",-1),_5=t("code",null,"双指针",-1),i5=t("code",null,"动态规划",-1),c5=t("code",null,"1+",-1),a5={style:{"text-align":"left"}},r5=t("td",{style:{"text-align":"center"}},"847",-1),h5={style:{"text-align":"left"}},u5={href:"https://leetcode.com/problems/shortest-path-visiting-all-nodes",target:"_blank",rel:"noopener noreferrer"},f5=t("td",{style:{"text-align":"center"}},null,-1),g5={style:{"text-align":"left"}},m5=t("code",null,"位运算",-1),y5=t("code",null,"广度优先搜索",-1),x5=t("code",null,"图",-1),p5=t("code",null,"2+",-1),b5={style:{"text-align":"left"}},k5=t("td",{style:{"text-align":"center"}},"871",-1),M5={style:{"text-align":"left"}},H5={href:"https://leetcode.com/problems/minimum-number-of-refueling-stops",target:"_blank",rel:"noopener noreferrer"},I5=t("td",{style:{"text-align":"center"}},null,-1),w5={style:{"text-align":"left"}},v5=t("code",null,"贪心",-1),q5=t("code",null,"数组",-1),j5=t("code",null,"动态规划",-1),z5=t("code",null,"1+",-1),C5={style:{"text-align":"left"}},O5=t("td",{style:{"text-align":"center"}},"873",-1),L5={style:{"text-align":"left"}},E5={href:"https://leetcode.com/problems/length-of-longest-fibonacci-subsequence",target:"_blank",rel:"noopener noreferrer"},P5=t("td",{style:{"text-align":"center"}},null,-1),K5={style:{"text-align":"left"}},V5=t("code",null,"数组",-1),N5=t("code",null,"哈希表",-1),D5=t("code",null,"动态规划",-1),B5={style:{"text-align":"left"}},Y5=t("td",{style:{"text-align":"center"}},"877",-1),A5={style:{"text-align":"left"}},J5={href:"https://leetcode.com/problems/stone-game",target:"_blank",rel:"noopener noreferrer"},R5=t("td",{style:{"text-align":"center"}},null,-1),S5={style:{"text-align":"left"}},U5=t("code",null,"数组",-1),W5=t("code",null,"数学",-1),X5=t("code",null,"动态规划",-1),F5=t("code",null,"1+",-1),G5={style:{"text-align":"left"}},T5=t("td",{style:{"text-align":"center"}},"879",-1),Q5={style:{"text-align":"left"}},Z5={href:"https://leetcode.com/problems/profitable-schemes",target:"_blank",rel:"noopener noreferrer"},$5=t("td",{style:{"text-align":"center"}},null,-1),t0={style:{"text-align":"left"}},e0=t("code",null,"数组",-1),o0=t("code",null,"动态规划",-1),l0={style:{"text-align":"left"}},n0=t("td",{style:{"text-align":"center"}},"887",-1),s0={style:{"text-align":"left"}},d0={href:"https://leetcode.com/problems/super-egg-drop",target:"_blank",rel:"noopener noreferrer"},_0=t("td",{style:{"text-align":"center"}},null,-1),i0={style:{"text-align":"left"}},c0=t("code",null,"数学",-1),a0=t("code",null,"二分查找",-1),r0=t("code",null,"动态规划",-1),h0={style:{"text-align":"left"}},u0=t("td",{style:{"text-align":"center"}},"894",-1),f0={style:{"text-align":"left"}},g0={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},m0=t("td",{style:{"text-align":"center"}},null,-1),y0={style:{"text-align":"left"}},x0=t("code",null,"树",-1),p0=t("code",null,"递归",-1),b0=t("code",null,"记忆化搜索",-1),k0=t("code",null,"2+",-1),M0={style:{"text-align":"left"}},H0=t("td",{style:{"text-align":"center"}},"898",-1),I0={style:{"text-align":"left"}},w0={href:"https://leetcode.com/problems/bitwise-ors-of-subarrays",target:"_blank",rel:"noopener noreferrer"},v0=t("td",{style:{"text-align":"center"}},null,-1),q0={style:{"text-align":"left"}},j0=t("code",null,"位运算",-1),z0=t("code",null,"数组",-1),C0=t("code",null,"动态规划",-1),O0={style:{"text-align":"left"}},L0=t("td",{style:{"text-align":"center"}},"902",-1),E0={style:{"text-align":"left"}},P0={href:"https://leetcode.com/problems/numbers-at-most-n-given-digit-set",target:"_blank",rel:"noopener noreferrer"},K0=t("td",{style:{"text-align":"center"}},null,-1),V0={style:{"text-align":"left"}},N0=t("code",null,"数组",-1),D0=t("code",null,"数学",-1),B0=t("code",null,"字符串",-1),Y0=t("code",null,"2+",-1),A0={style:{"text-align":"left"}},J0=t("td",{style:{"text-align":"center"}},"903",-1),R0={style:{"text-align":"left"}},S0={href:"https://leetcode.com/problems/valid-permutations-for-di-sequence",target:"_blank",rel:"noopener noreferrer"},U0=t("td",{style:{"text-align":"center"}},null,-1),W0={style:{"text-align":"left"}},X0=t("code",null,"字符串",-1),F0=t("code",null,"动态规划",-1),G0=t("code",null,"前缀和",-1),T0={style:{"text-align":"left"}},Q0=t("td",{style:{"text-align":"center"}},"907",-1),Z0={style:{"text-align":"left"}},$0={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},t8=t("td",{style:{"text-align":"center"}},null,-1),e8={style:{"text-align":"left"}},o8=t("code",null,"栈",-1),l8=t("code",null,"数组",-1),n8=t("code",null,"动态规划",-1),s8=t("code",null,"1+",-1),d8={style:{"text-align":"left"}},_8=t("td",{style:{"text-align":"center"}},"913",-1),i8={style:{"text-align":"left"}},c8={href:"https://leetcode.com/problems/cat-and-mouse",target:"_blank",rel:"noopener noreferrer"},a8=t("td",{style:{"text-align":"center"}},null,-1),r8={style:{"text-align":"left"}},h8=t("code",null,"图",-1),u8=t("code",null,"拓扑排序",-1),f8=t("code",null,"记忆化搜索",-1),g8=t("code",null,"3+",-1),m8={style:{"text-align":"left"}},y8=t("td",{style:{"text-align":"center"}},"918",-1),x8={style:{"text-align":"left"}},p8={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},b8={style:{"text-align":"center"}},k8={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0918",target:"_blank",rel:"noopener noreferrer"},M8={style:{"text-align":"left"}},H8=t("code",null,"队列",-1),I8=t("code",null,"数组",-1),w8=t("code",null,"分治",-1),v8=t("code",null,"2+",-1),q8={style:{"text-align":"left"}},j8=t("td",{style:{"text-align":"center"}},"920",-1),z8={style:{"text-align":"left"}},C8={href:"https://leetcode.com/problems/number-of-music-playlists",target:"_blank",rel:"noopener noreferrer"},O8=t("td",{style:{"text-align":"center"}},null,-1),L8={style:{"text-align":"left"}},E8=t("code",null,"数学",-1),P8=t("code",null,"动态规划",-1),K8=t("code",null,"组合数学",-1),V8={style:{"text-align":"left"}},N8=t("td",{style:{"text-align":"center"}},"926",-1),D8={style:{"text-align":"left"}},B8={href:"https://leetcode.com/problems/flip-string-to-monotone-increasing",target:"_blank",rel:"noopener noreferrer"},Y8=t("td",{style:{"text-align":"center"}},null,-1),A8={style:{"text-align":"left"}},J8=t("code",null,"字符串",-1),R8=t("code",null,"动态规划",-1),S8={style:{"text-align":"left"}},U8=t("td",{style:{"text-align":"center"}},"931",-1),W8={style:{"text-align":"left"}},X8={href:"https://leetcode.com/problems/minimum-falling-path-sum",target:"_blank",rel:"noopener noreferrer"},F8={style:{"text-align":"center"}},G8={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0931",target:"_blank",rel:"noopener noreferrer"},T8={style:{"text-align":"left"}},Q8=t("code",null,"数组",-1),Z8=t("code",null,"动态规划",-1),$8=t("code",null,"矩阵",-1),t6={style:{"text-align":"left"}},e6=t("td",{style:{"text-align":"center"}},"935",-1),o6={style:{"text-align":"left"}},l6={href:"https://leetcode.com/problems/knight-dialer",target:"_blank",rel:"noopener noreferrer"},n6=t("td",{style:{"text-align":"center"}},null,-1),s6={style:{"text-align":"left"}},d6=t("code",null,"动态规划",-1),_6={style:{"text-align":"left"}},i6=t("td",{style:{"text-align":"center"}},"940",-1),c6={style:{"text-align":"left"}},a6={href:"https://leetcode.com/problems/distinct-subsequences-ii",target:"_blank",rel:"noopener noreferrer"},r6=t("td",{style:{"text-align":"center"}},null,-1),h6={style:{"text-align":"left"}},u6=t("code",null,"字符串",-1),f6=t("code",null,"动态规划",-1),g6={style:{"text-align":"left"}},m6=t("td",{style:{"text-align":"center"}},"943",-1),y6={style:{"text-align":"left"}},x6={href:"https://leetcode.com/problems/find-the-shortest-superstring",target:"_blank",rel:"noopener noreferrer"},p6=t("td",{style:{"text-align":"center"}},null,-1),b6={style:{"text-align":"left"}},k6=t("code",null,"位运算",-1),M6=t("code",null,"数组",-1),H6=t("code",null,"字符串",-1),I6=t("code",null,"2+",-1),w6={style:{"text-align":"left"}},v6=t("td",{style:{"text-align":"center"}},"956",-1),q6={style:{"text-align":"left"}},j6={href:"https://leetcode.com/problems/tallest-billboard",target:"_blank",rel:"noopener noreferrer"},z6=t("td",{style:{"text-align":"center"}},null,-1),C6={style:{"text-align":"left"}},O6=t("code",null,"数组",-1),L6=t("code",null,"动态规划",-1),E6={style:{"text-align":"left"}},P6=t("td",{style:{"text-align":"center"}},"960",-1),K6={style:{"text-align":"left"}},V6={href:"https://leetcode.com/problems/delete-columns-to-make-sorted-iii",target:"_blank",rel:"noopener noreferrer"},N6=t("td",{style:{"text-align":"center"}},null,-1),D6={style:{"text-align":"left"}},B6=t("code",null,"数组",-1),Y6=t("code",null,"字符串",-1),A6=t("code",null,"动态规划",-1),J6={style:{"text-align":"left"}},R6=t("td",{style:{"text-align":"center"}},"964",-1),S6={style:{"text-align":"left"}},U6={href:"https://leetcode.com/problems/least-operators-to-express-number",target:"_blank",rel:"noopener noreferrer"},W6=t("td",{style:{"text-align":"center"}},null,-1),X6={style:{"text-align":"left"}},F6=t("code",null,"记忆化搜索",-1),G6=t("code",null,"数学",-1),T6=t("code",null,"动态规划",-1),Q6={style:{"text-align":"left"}},Z6=t("td",{style:{"text-align":"center"}},"968",-1),$6={style:{"text-align":"left"}},t7={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},e7=t("td",{style:{"text-align":"center"}},null,-1),o7={style:{"text-align":"left"}},l7=t("code",null,"树",-1),n7=t("code",null,"深度优先搜索",-1),s7=t("code",null,"动态规划",-1),d7=t("code",null,"1+",-1),_7={style:{"text-align":"left"}},i7=t("td",{style:{"text-align":"center"}},"975",-1),c7={style:{"text-align":"left"}},a7={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},r7=t("td",{style:{"text-align":"center"}},null,-1),h7={style:{"text-align":"left"}},u7=t("code",null,"栈",-1),f7=t("code",null,"数组",-1),g7=t("code",null,"动态规划",-1),m7=t("code",null,"2+",-1),y7={style:{"text-align":"left"}},x7=t("td",{style:{"text-align":"center"}},"978",-1),p7={style:{"text-align":"left"}},b7={href:"https://leetcode.com/problems/longest-turbulent-subarray",target:"_blank",rel:"noopener noreferrer"},k7=t("td",{style:{"text-align":"center"}},null,-1),M7={style:{"text-align":"left"}},H7=t("code",null,"数组",-1),I7=t("code",null,"动态规划",-1),w7=t("code",null,"滑动窗口",-1),v7={style:{"text-align":"left"}},q7=t("td",{style:{"text-align":"center"}},"983",-1),j7={style:{"text-align":"left"}},z7={href:"https://leetcode.com/problems/minimum-cost-for-tickets",target:"_blank",rel:"noopener noreferrer"},C7=t("td",{style:{"text-align":"center"}},null,-1),O7={style:{"text-align":"left"}},L7=t("code",null,"数组",-1),E7=t("code",null,"动态规划",-1),P7={style:{"text-align":"left"}},K7=t("td",{style:{"text-align":"center"}},"996",-1),V7={style:{"text-align":"left"}},N7={href:"https://leetcode.com/problems/number-of-squareful-arrays",target:"_blank",rel:"noopener noreferrer"},D7=t("td",{style:{"text-align":"center"}},null,-1),B7={style:{"text-align":"left"}},Y7=t("code",null,"位运算",-1),A7=t("code",null,"数组",-1),J7=t("code",null,"哈希表",-1),R7=t("code",null,"4+",-1),S7={style:{"text-align":"left"}},U7=t("td",{style:{"text-align":"center"}},"1000",-1),W7={style:{"text-align":"left"}},X7={href:"https://leetcode.com/problems/minimum-cost-to-merge-stones",target:"_blank",rel:"noopener noreferrer"},F7=t("td",{style:{"text-align":"center"}},null,-1),G7={style:{"text-align":"left"}},T7=t("code",null,"数组",-1),Q7=t("code",null,"动态规划",-1),Z7=t("code",null,"前缀和",-1),$7={style:{"text-align":"left"}},t9=t("td",{style:{"text-align":"center"}},"1012",-1),e9={style:{"text-align":"left"}},o9={href:"https://leetcode.com/problems/numbers-with-repeated-digits",target:"_blank",rel:"noopener noreferrer"},l9=t("td",{style:{"text-align":"center"}},null,-1),n9={style:{"text-align":"left"}},s9=t("code",null,"数学",-1),d9=t("code",null,"动态规划",-1),_9={style:{"text-align":"left"}},i9=t("td",{style:{"text-align":"center"}},"1014",-1),c9={style:{"text-align":"left"}},a9={href:"https://leetcode.com/problems/best-sightseeing-pair",target:"_blank",rel:"noopener noreferrer"},r9=t("td",{style:{"text-align":"center"}},null,-1),h9={style:{"text-align":"left"}},u9=t("code",null,"数组",-1),f9=t("code",null,"动态规划",-1),g9={style:{"text-align":"left"}},m9=t("td",{style:{"text-align":"center"}},"1024",-1),y9={style:{"text-align":"left"}},x9={href:"https://leetcode.com/problems/video-stitching",target:"_blank",rel:"noopener noreferrer"},p9=t("td",{style:{"text-align":"center"}},null,-1),b9={style:{"text-align":"left"}},k9=t("code",null,"贪心",-1),M9=t("code",null,"数组",-1),H9=t("code",null,"动态规划",-1),I9={style:{"text-align":"left"}},w9=t("td",{style:{"text-align":"center"}},"1025",-1),v9={style:{"text-align":"left"}},q9={href:"https://leetcode.com/problems/divisor-game",target:"_blank",rel:"noopener noreferrer"},j9=t("td",{style:{"text-align":"center"}},null,-1),z9={style:{"text-align":"left"}},C9=t("code",null,"脑筋急转弯",-1),O9=t("code",null,"数学",-1),L9=t("code",null,"动态规划",-1),E9=t("code",null,"1+",-1),P9={style:{"text-align":"left"}},K9=t("td",{style:{"text-align":"center"}},"1027",-1),V9={style:{"text-align":"left"}},N9={href:"https://leetcode.com/problems/longest-arithmetic-subsequence",target:"_blank",rel:"noopener noreferrer"},D9=t("td",{style:{"text-align":"center"}},null,-1),B9={style:{"text-align":"left"}},Y9=t("code",null,"数组",-1),A9=t("code",null,"哈希表",-1),J9=t("code",null,"二分查找",-1),R9=t("code",null,"1+",-1),S9={style:{"text-align":"left"}},U9=t("td",{style:{"text-align":"center"}},"1031",-1),W9={style:{"text-align":"left"}},X9={href:"https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays",target:"_blank",rel:"noopener noreferrer"},F9=t("td",{style:{"text-align":"center"}},null,-1),G9={style:{"text-align":"left"}},T9=t("code",null,"数组",-1),Q9=t("code",null,"动态规划",-1),Z9=t("code",null,"滑动窗口",-1),$9={style:{"text-align":"left"}},tk=t("td",{style:{"text-align":"center"}},"1035",-1),ek={style:{"text-align":"left"}},ok={href:"https://leetcode.com/problems/uncrossed-lines",target:"_blank",rel:"noopener noreferrer"},lk=t("td",{style:{"text-align":"center"}},null,-1),nk={style:{"text-align":"left"}},sk=t("code",null,"数组",-1),dk=t("code",null,"动态规划",-1),_k={style:{"text-align":"left"}},ik=t("td",{style:{"text-align":"center"}},"1039",-1),ck={style:{"text-align":"left"}},ak={href:"https://leetcode.com/problems/minimum-score-triangulation-of-polygon",target:"_blank",rel:"noopener noreferrer"},rk=t("td",{style:{"text-align":"center"}},null,-1),hk={style:{"text-align":"left"}},uk=t("code",null,"数组",-1),fk=t("code",null,"动态规划",-1),gk={style:{"text-align":"left"}},mk=t("td",{style:{"text-align":"center"}},"1043",-1),yk={style:{"text-align":"left"}},xk={href:"https://leetcode.com/problems/partition-array-for-maximum-sum",target:"_blank",rel:"noopener noreferrer"},pk=t("td",{style:{"text-align":"center"}},null,-1),bk={style:{"text-align":"left"}},kk=t("code",null,"数组",-1),Mk=t("code",null,"动态规划",-1),Hk={style:{"text-align":"left"}},Ik=t("td",{style:{"text-align":"center"}},"1048",-1),wk={style:{"text-align":"left"}},vk={href:"https://leetcode.com/problems/longest-string-chain",target:"_blank",rel:"noopener noreferrer"},qk=t("td",{style:{"text-align":"center"}},null,-1),jk={style:{"text-align":"left"}},zk=t("code",null,"数组",-1),Ck=t("code",null,"哈希表",-1),Ok=t("code",null,"双指针",-1),Lk=t("code",null,"3+",-1),Ek={style:{"text-align":"left"}},Pk=t("td",{style:{"text-align":"center"}},"1049",-1),Kk={style:{"text-align":"left"}},Vk={href:"https://leetcode.com/problems/last-stone-weight-ii",target:"_blank",rel:"noopener noreferrer"},Nk={style:{"text-align":"center"}},Dk={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1049",target:"_blank",rel:"noopener noreferrer"},Bk={style:{"text-align":"left"}},Yk=t("code",null,"数组",-1),Ak=t("code",null,"动态规划",-1),Jk={style:{"text-align":"left"}},Rk=t("td",{style:{"text-align":"center"}},"1062",-1),Sk={style:{"text-align":"left"}},Uk={href:"https://leetcode.com/problems/longest-repeating-substring",target:"_blank",rel:"noopener noreferrer"},Wk=t("td",{style:{"text-align":"center"}},null,-1),Xk={style:{"text-align":"left"}},Fk=t("code",null,"字符串",-1),Gk=t("code",null,"二分查找",-1),Tk=t("code",null,"动态规划",-1),Qk=t("code",null,"3+",-1),Zk={style:{"text-align":"left"}},$k=t("td",{style:{"text-align":"center"}},"1066",-1),tM={style:{"text-align":"left"}},eM={href:"https://leetcode.com/problems/campus-bikes-ii",target:"_blank",rel:"noopener noreferrer"},oM=t("td",{style:{"text-align":"center"}},null,-1),lM={style:{"text-align":"left"}},nM=t("code",null,"位运算",-1),sM=t("code",null,"数组",-1),dM=t("code",null,"动态规划",-1),_M=t("code",null,"2+",-1),iM={style:{"text-align":"left"}},cM=t("td",{style:{"text-align":"center"}},"1067",-1),aM={style:{"text-align":"left"}},rM={href:"https://leetcode.com/problems/digit-count-in-range",target:"_blank",rel:"noopener noreferrer"},hM=t("td",{style:{"text-align":"center"}},null,-1),uM={style:{"text-align":"left"}},fM=t("code",null,"数学",-1),gM=t("code",null,"动态规划",-1),mM={style:{"text-align":"left"}},yM=t("td",{style:{"text-align":"center"}},"1092",-1),xM={style:{"text-align":"left"}},pM={href:"https://leetcode.com/problems/shortest-common-supersequence",target:"_blank",rel:"noopener noreferrer"},bM=t("td",{style:{"text-align":"center"}},null,-1),kM={style:{"text-align":"left"}},MM=t("code",null,"字符串",-1),HM=t("code",null,"动态规划",-1),IM={style:{"text-align":"left"}},wM=t("td",{style:{"text-align":"center"}},"1105",-1),vM={style:{"text-align":"left"}},qM={href:"https://leetcode.com/problems/filling-bookcase-shelves",target:"_blank",rel:"noopener noreferrer"},jM=t("td",{style:{"text-align":"center"}},null,-1),zM={style:{"text-align":"left"}},CM=t("code",null,"数组",-1),OM=t("code",null,"动态规划",-1),LM={style:{"text-align":"left"}},EM=t("td",{style:{"text-align":"center"}},"1125",-1),PM={style:{"text-align":"left"}},KM={href:"https://leetcode.com/problems/smallest-sufficient-team",target:"_blank",rel:"noopener noreferrer"},VM=t("td",{style:{"text-align":"center"}},null,-1),NM={style:{"text-align":"left"}},DM=t("code",null,"位运算",-1),BM=t("code",null,"数组",-1),YM=t("code",null,"动态规划",-1),AM=t("code",null,"1+",-1),JM={style:{"text-align":"left"}},RM=t("td",{style:{"text-align":"center"}},"1130",-1),SM={style:{"text-align":"left"}},UM={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},WM=t("td",{style:{"text-align":"center"}},null,-1),XM={style:{"text-align":"left"}},FM=t("code",null,"栈",-1),GM=t("code",null,"贪心",-1),TM=t("code",null,"数组",-1),QM=t("code",null,"2+",-1),ZM={style:{"text-align":"left"}},$M=t("td",{style:{"text-align":"center"}},"1137",-1),tH={style:{"text-align":"left"}},eH={href:"https://leetcode.com/problems/n-th-tribonacci-number",target:"_blank",rel:"noopener noreferrer"},oH={style:{"text-align":"center"}},lH={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1137",target:"_blank",rel:"noopener noreferrer"},nH={style:{"text-align":"left"}},sH=t("code",null,"记忆化搜索",-1),dH=t("code",null,"数学",-1),_H=t("code",null,"动态规划",-1),iH={style:{"text-align":"left"}},cH=t("td",{style:{"text-align":"center"}},"1139",-1),aH={style:{"text-align":"left"}},rH={href:"https://leetcode.com/problems/largest-1-bordered-square",target:"_blank",rel:"noopener noreferrer"},hH=t("td",{style:{"text-align":"center"}},null,-1),uH={style:{"text-align":"left"}},fH=t("code",null,"数组",-1),gH=t("code",null,"动态规划",-1),mH=t("code",null,"矩阵",-1),yH={style:{"text-align":"left"}},xH=t("td",{style:{"text-align":"center"}},"1140",-1),pH={style:{"text-align":"left"}},bH={href:"https://leetcode.com/problems/stone-game-ii",target:"_blank",rel:"noopener noreferrer"},kH=t("td",{style:{"text-align":"center"}},null,-1),MH={style:{"text-align":"left"}},HH=t("code",null,"数组",-1),IH=t("code",null,"数学",-1),wH=t("code",null,"动态规划",-1),vH=t("code",null,"2+",-1),qH={style:{"text-align":"left"}},jH=t("td",{style:{"text-align":"center"}},"1143",-1),zH={style:{"text-align":"left"}},CH={href:"https://leetcode.com/problems/longest-common-subsequence",target:"_blank",rel:"noopener noreferrer"},OH={style:{"text-align":"center"}},LH={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1143",target:"_blank",rel:"noopener noreferrer"},EH={style:{"text-align":"left"}},PH=t("code",null,"字符串",-1),KH=t("code",null,"动态规划",-1),VH={style:{"text-align":"left"}},NH=t("td",{style:{"text-align":"center"}},"1147",-1),DH={style:{"text-align":"left"}},BH={href:"https://leetcode.com/problems/longest-chunked-palindrome-decomposition",target:"_blank",rel:"noopener noreferrer"},YH=t("td",{style:{"text-align":"center"}},null,-1),AH={style:{"text-align":"left"}},JH=t("code",null,"贪心",-1),RH=t("code",null,"双指针",-1),SH=t("code",null,"字符串",-1),UH=t("code",null,"3+",-1),WH={style:{"text-align":"left"}},XH=t("td",{style:{"text-align":"center"}},"1155",-1),FH={style:{"text-align":"left"}},GH={href:"https://leetcode.com/problems/number-of-dice-rolls-with-target-sum",target:"_blank",rel:"noopener noreferrer"},TH=t("td",{style:{"text-align":"center"}},null,-1),QH={style:{"text-align":"left"}},ZH=t("code",null,"动态规划",-1),$H={style:{"text-align":"left"}},tI=t("td",{style:{"text-align":"center"}},"1162",-1),eI={style:{"text-align":"left"}},oI={href:"https://leetcode.com/problems/as-far-from-land-as-possible",target:"_blank",rel:"noopener noreferrer"},lI=t("td",{style:{"text-align":"center"}},null,-1),nI={style:{"text-align":"left"}},sI=t("code",null,"广度优先搜索",-1),dI=t("code",null,"数组",-1),_I=t("code",null,"动态规划",-1),iI=t("code",null,"1+",-1),cI={style:{"text-align":"left"}},aI=t("td",{style:{"text-align":"center"}},"1182",-1),rI={style:{"text-align":"left"}},hI={href:"https://leetcode.com/problems/shortest-distance-to-target-color",target:"_blank",rel:"noopener noreferrer"},uI=t("td",{style:{"text-align":"center"}},null,-1),fI={style:{"text-align":"left"}},gI=t("code",null,"数组",-1),mI=t("code",null,"二分查找",-1),yI=t("code",null,"动态规划",-1),xI={style:{"text-align":"left"}},pI=t("td",{style:{"text-align":"center"}},"1186",-1),bI={style:{"text-align":"left"}},kI={href:"https://leetcode.com/problems/maximum-subarray-sum-with-one-deletion",target:"_blank",rel:"noopener noreferrer"},MI=t("td",{style:{"text-align":"center"}},null,-1),HI={style:{"text-align":"left"}},II=t("code",null,"数组",-1),wI=t("code",null,"动态规划",-1),vI={style:{"text-align":"left"}},qI=t("td",{style:{"text-align":"center"}},"1187",-1),jI={style:{"text-align":"left"}},zI={href:"https://leetcode.com/problems/make-array-strictly-increasing",target:"_blank",rel:"noopener noreferrer"},CI=t("td",{style:{"text-align":"center"}},null,-1),OI={style:{"text-align":"left"}},LI=t("code",null,"数组",-1),EI=t("code",null,"二分查找",-1),PI=t("code",null,"动态规划",-1),KI=t("code",null,"1+",-1),VI={style:{"text-align":"left"}},NI=t("td",{style:{"text-align":"center"}},"1191",-1),DI={style:{"text-align":"left"}},BI={href:"https://leetcode.com/problems/k-concatenation-maximum-sum",target:"_blank",rel:"noopener noreferrer"},YI=t("td",{style:{"text-align":"center"}},null,-1),AI={style:{"text-align":"left"}},JI=t("code",null,"数组",-1),RI=t("code",null,"动态规划",-1),SI={style:{"text-align":"left"}},UI=t("td",{style:{"text-align":"center"}},"1216",-1),WI={style:{"text-align":"left"}},XI={href:"https://leetcode.com/problems/valid-palindrome-iii",target:"_blank",rel:"noopener noreferrer"},FI=t("td",{style:{"text-align":"center"}},null,-1),GI={style:{"text-align":"left"}},TI=t("code",null,"字符串",-1),QI=t("code",null,"动态规划",-1),ZI={style:{"text-align":"left"}},$I=t("td",{style:{"text-align":"center"}},"1218",-1),tw={style:{"text-align":"left"}},ew={href:"https://leetcode.com/problems/longest-arithmetic-subsequence-of-given-difference",target:"_blank",rel:"noopener noreferrer"},ow=t("td",{style:{"text-align":"center"}},null,-1),lw={style:{"text-align":"left"}},nw=t("code",null,"数组",-1),sw=t("code",null,"哈希表",-1),dw=t("code",null,"动态规划",-1),_w={style:{"text-align":"left"}},iw=t("td",{style:{"text-align":"center"}},"1220",-1),cw={style:{"text-align":"left"}},aw={href:"https://leetcode.com/problems/count-vowels-permutation",target:"_blank",rel:"noopener noreferrer"},rw=t("td",{style:{"text-align":"center"}},null,-1),hw={style:{"text-align":"left"}},uw=t("code",null,"动态规划",-1),fw={style:{"text-align":"left"}},gw=t("td",{style:{"text-align":"center"}},"1223",-1),mw={style:{"text-align":"left"}},yw={href:"https://leetcode.com/problems/dice-roll-simulation",target:"_blank",rel:"noopener noreferrer"},xw=t("td",{style:{"text-align":"center"}},null,-1),pw={style:{"text-align":"left"}},bw=t("code",null,"数组",-1),kw=t("code",null,"动态规划",-1),Mw={style:{"text-align":"left"}},Hw=t("td",{style:{"text-align":"center"}},"1227",-1),Iw={style:{"text-align":"left"}},ww={href:"https://leetcode.com/problems/airplane-seat-assignment-probability",target:"_blank",rel:"noopener noreferrer"},vw=t("td",{style:{"text-align":"center"}},null,-1),qw={style:{"text-align":"left"}},jw=t("code",null,"脑筋急转弯",-1),zw=t("code",null,"数学",-1),Cw=t("code",null,"动态规划",-1),Ow=t("code",null,"1+",-1),Lw={style:{"text-align":"left"}},Ew=t("td",{style:{"text-align":"center"}},"1230",-1),Pw={style:{"text-align":"left"}},Kw={href:"https://leetcode.com/problems/toss-strange-coins",target:"_blank",rel:"noopener noreferrer"},Vw=t("td",{style:{"text-align":"center"}},null,-1),Nw={style:{"text-align":"left"}},Dw=t("code",null,"数组",-1),Bw=t("code",null,"数学",-1),Yw=t("code",null,"动态规划",-1),Aw=t("code",null,"1+",-1),Jw={style:{"text-align":"left"}},Rw=t("td",{style:{"text-align":"center"}},"1235",-1),Sw={style:{"text-align":"left"}},Uw={href:"https://leetcode.com/problems/maximum-profit-in-job-scheduling",target:"_blank",rel:"noopener noreferrer"},Ww=t("td",{style:{"text-align":"center"}},null,-1),Xw={style:{"text-align":"left"}},Fw=t("code",null,"数组",-1),Gw=t("code",null,"二分查找",-1),Tw=t("code",null,"动态规划",-1),Qw=t("code",null,"1+",-1),Zw={style:{"text-align":"left"}},$w=t("td",{style:{"text-align":"center"}},"1246",-1),tv={style:{"text-align":"left"}},ev={href:"https://leetcode.com/problems/palindrome-removal",target:"_blank",rel:"noopener noreferrer"},ov=t("td",{style:{"text-align":"center"}},null,-1),lv={style:{"text-align":"left"}},nv=t("code",null,"数组",-1),sv=t("code",null,"动态规划",-1),dv={style:{"text-align":"left"}},_v=t("td",{style:{"text-align":"center"}},"1255",-1),iv={style:{"text-align":"left"}},cv={href:"https://leetcode.com/problems/maximum-score-words-formed-by-letters",target:"_blank",rel:"noopener noreferrer"},av=t("td",{style:{"text-align":"center"}},null,-1),rv={style:{"text-align":"left"}},hv=t("code",null,"位运算",-1),uv=t("code",null,"数组",-1),fv=t("code",null,"字符串",-1),gv=t("code",null,"3+",-1),mv={style:{"text-align":"left"}},yv=t("td",{style:{"text-align":"center"}},"1259",-1),xv={style:{"text-align":"left"}},pv={href:"https://leetcode.com/problems/handshakes-that-dont-cross",target:"_blank",rel:"noopener noreferrer"},bv=t("td",{style:{"text-align":"center"}},null,-1),kv={style:{"text-align":"left"}},Mv=t("code",null,"数学",-1),Hv=t("code",null,"动态规划",-1),Iv={style:{"text-align":"left"}},wv=t("td",{style:{"text-align":"center"}},"1262",-1),vv={style:{"text-align":"left"}},qv={href:"https://leetcode.com/problems/greatest-sum-divisible-by-three",target:"_blank",rel:"noopener noreferrer"},jv=t("td",{style:{"text-align":"center"}},null,-1),zv={style:{"text-align":"left"}},Cv=t("code",null,"贪心",-1),Ov=t("code",null,"数组",-1),Lv=t("code",null,"动态规划",-1),Ev=t("code",null,"1+",-1),Pv={style:{"text-align":"left"}},Kv=t("td",{style:{"text-align":"center"}},"1269",-1),Vv={style:{"text-align":"left"}},Nv={href:"https://leetcode.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps",target:"_blank",rel:"noopener noreferrer"},Dv=t("td",{style:{"text-align":"center"}},null,-1),Bv={style:{"text-align":"left"}},Yv=t("code",null,"动态规划",-1),Av={style:{"text-align":"left"}},Jv=t("td",{style:{"text-align":"center"}},"1277",-1),Rv={style:{"text-align":"left"}},Sv={href:"https://leetcode.com/problems/count-square-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},Uv=t("td",{style:{"text-align":"center"}},null,-1),Wv={style:{"text-align":"left"}},Xv=t("code",null,"数组",-1),Fv=t("code",null,"动态规划",-1),Gv=t("code",null,"矩阵",-1),Tv={style:{"text-align":"left"}},Qv=t("td",{style:{"text-align":"center"}},"1278",-1),Zv={style:{"text-align":"left"}},$v={href:"https://leetcode.com/problems/palindrome-partitioning-iii",target:"_blank",rel:"noopener noreferrer"},tq=t("td",{style:{"text-align":"center"}},null,-1),eq={style:{"text-align":"left"}},oq=t("code",null,"字符串",-1),lq=t("code",null,"动态规划",-1),nq={style:{"text-align":"left"}},sq=t("td",{style:{"text-align":"center"}},"1289",-1),dq={style:{"text-align":"left"}},_q={href:"https://leetcode.com/problems/minimum-falling-path-sum-ii",target:"_blank",rel:"noopener noreferrer"},iq=t("td",{style:{"text-align":"center"}},null,-1),cq={style:{"text-align":"left"}},aq=t("code",null,"数组",-1),rq=t("code",null,"动态规划",-1),hq=t("code",null,"矩阵",-1),uq={style:{"text-align":"left"}},fq=t("td",{style:{"text-align":"center"}},"1301",-1),gq={style:{"text-align":"left"}},mq={href:"https://leetcode.com/problems/number-of-paths-with-max-score",target:"_blank",rel:"noopener noreferrer"},yq=t("td",{style:{"text-align":"center"}},null,-1),xq={style:{"text-align":"left"}},pq=t("code",null,"数组",-1),bq=t("code",null,"动态规划",-1),kq=t("code",null,"矩阵",-1),Mq={style:{"text-align":"left"}},Hq=t("td",{style:{"text-align":"center"}},"1312",-1),Iq={style:{"text-align":"left"}},wq={href:"https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome",target:"_blank",rel:"noopener noreferrer"},vq={style:{"text-align":"center"}},qq={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1312",target:"_blank",rel:"noopener noreferrer"},jq={style:{"text-align":"left"}},zq=t("code",null,"字符串",-1),Cq=t("code",null,"动态规划",-1),Oq={style:{"text-align":"left"}},Lq=t("td",{style:{"text-align":"center"}},"1320",-1),Eq={style:{"text-align":"left"}},Pq={href:"https://leetcode.com/problems/minimum-distance-to-type-a-word-using-two-fingers",target:"_blank",rel:"noopener noreferrer"},Kq=t("td",{style:{"text-align":"center"}},null,-1),Vq={style:{"text-align":"left"}},Nq=t("code",null,"字符串",-1),Dq=t("code",null,"动态规划",-1),Bq={style:{"text-align":"left"}},Yq=t("td",{style:{"text-align":"center"}},"1326",-1),Aq={style:{"text-align":"left"}},Jq={href:"https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden",target:"_blank",rel:"noopener noreferrer"},Rq=t("td",{style:{"text-align":"center"}},null,-1),Sq={style:{"text-align":"left"}},Uq=t("code",null,"贪心",-1),Wq=t("code",null,"数组",-1),Xq=t("code",null,"动态规划",-1),Fq={style:{"text-align":"left"}},Gq=t("td",{style:{"text-align":"center"}},"1334",-1),Tq={style:{"text-align":"left"}},Qq={href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},Zq=t("td",{style:{"text-align":"center"}},null,-1),$q={style:{"text-align":"left"}},tj=t("code",null,"图",-1),ej=t("code",null,"动态规划",-1),oj=t("code",null,"最短路",-1),lj={style:{"text-align":"left"}},nj=t("td",{style:{"text-align":"center"}},"1335",-1),sj={style:{"text-align":"left"}},dj={href:"https://leetcode.com/problems/minimum-difficulty-of-a-job-schedule",target:"_blank",rel:"noopener noreferrer"},_j=t("td",{style:{"text-align":"center"}},null,-1),ij={style:{"text-align":"left"}},cj=t("code",null,"数组",-1),aj=t("code",null,"动态规划",-1),rj={style:{"text-align":"left"}},hj=t("td",{style:{"text-align":"center"}},"1340",-1),uj={style:{"text-align":"left"}},fj={href:"https://leetcode.com/problems/jump-game-v",target:"_blank",rel:"noopener noreferrer"},gj=t("td",{style:{"text-align":"center"}},null,-1),mj={style:{"text-align":"left"}},yj=t("code",null,"数组",-1),xj=t("code",null,"动态规划",-1),pj=t("code",null,"排序",-1),bj={style:{"text-align":"left"}},kj=t("td",{style:{"text-align":"center"}},"1349",-1),Mj={style:{"text-align":"left"}},Hj={href:"https://leetcode.com/problems/maximum-students-taking-exam",target:"_blank",rel:"noopener noreferrer"},Ij=t("td",{style:{"text-align":"center"}},null,-1),wj={style:{"text-align":"left"}},vj=t("code",null,"位运算",-1),qj=t("code",null,"数组",-1),jj=t("code",null,"动态规划",-1),zj=t("code",null,"2+",-1),Cj={style:{"text-align":"left"}},Oj=t("td",{style:{"text-align":"center"}},"1359",-1),Lj={style:{"text-align":"left"}},Ej={href:"https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options",target:"_blank",rel:"noopener noreferrer"},Pj=t("td",{style:{"text-align":"center"}},null,-1),Kj={style:{"text-align":"left"}},Vj=t("code",null,"数学",-1),Nj=t("code",null,"动态规划",-1),Dj=t("code",null,"组合数学",-1),Bj={style:{"text-align":"left"}},Yj=t("td",{style:{"text-align":"center"}},"1363",-1),Aj={style:{"text-align":"left"}},Jj={href:"https://leetcode.com/problems/largest-multiple-of-three",target:"_blank",rel:"noopener noreferrer"},Rj=t("td",{style:{"text-align":"center"}},null,-1),Sj={style:{"text-align":"left"}},Uj=t("code",null,"贪心",-1),Wj=t("code",null,"数组",-1),Xj=t("code",null,"动态规划",-1),Fj={style:{"text-align":"left"}},Gj=t("td",{style:{"text-align":"center"}},"1372",-1),Tj={style:{"text-align":"left"}},Qj={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Zj=t("td",{style:{"text-align":"center"}},null,-1),$j={style:{"text-align":"left"}},tz=t("code",null,"树",-1),ez=t("code",null,"深度优先搜索",-1),oz=t("code",null,"动态规划",-1),lz=t("code",null,"1+",-1),nz={style:{"text-align":"left"}},sz=t("td",{style:{"text-align":"center"}},"1373",-1),dz={style:{"text-align":"left"}},_z={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},iz=t("td",{style:{"text-align":"center"}},null,-1),cz={style:{"text-align":"left"}},az=t("code",null,"树",-1),rz=t("code",null,"深度优先搜索",-1),hz=t("code",null,"二叉搜索树",-1),uz=t("code",null,"2+",-1),fz={style:{"text-align":"left"}},gz=t("td",{style:{"text-align":"center"}},"1387",-1),mz={style:{"text-align":"left"}},yz={href:"https://leetcode.com/problems/sort-integers-by-the-power-value",target:"_blank",rel:"noopener noreferrer"},xz=t("td",{style:{"text-align":"center"}},null,-1),pz={style:{"text-align":"left"}},bz=t("code",null,"记忆化搜索",-1),kz=t("code",null,"动态规划",-1),Mz=t("code",null,"排序",-1),Hz={style:{"text-align":"left"}},Iz=t("td",{style:{"text-align":"center"}},"1388",-1),wz={style:{"text-align":"left"}},vz={href:"https://leetcode.com/problems/pizza-with-3n-slices",target:"_blank",rel:"noopener noreferrer"},qz=t("td",{style:{"text-align":"center"}},null,-1),jz={style:{"text-align":"left"}},zz=t("code",null,"贪心",-1),Cz=t("code",null,"数组",-1),Oz=t("code",null,"动态规划",-1),Lz=t("code",null,"1+",-1),Ez={style:{"text-align":"left"}},Pz=t("td",{style:{"text-align":"center"}},"1395",-1),Kz={style:{"text-align":"left"}},Vz={href:"https://leetcode.com/problems/count-number-of-teams",target:"_blank",rel:"noopener noreferrer"},Nz=t("td",{style:{"text-align":"center"}},null,-1),Dz={style:{"text-align":"left"}},Bz=t("code",null,"树状数组",-1),Yz=t("code",null,"线段树",-1),Az=t("code",null,"数组",-1),Jz=t("code",null,"1+",-1),Rz={style:{"text-align":"left"}},Sz=t("td",{style:{"text-align":"center"}},"1397",-1),Uz={style:{"text-align":"left"}},Wz={href:"https://leetcode.com/problems/find-all-good-strings",target:"_blank",rel:"noopener noreferrer"},Xz=t("td",{style:{"text-align":"center"}},null,-1),Fz={style:{"text-align":"left"}},Gz=t("code",null,"字符串",-1),Tz=t("code",null,"动态规划",-1),Qz=t("code",null,"字符串匹配",-1),Zz={style:{"text-align":"left"}},$z=t("td",{style:{"text-align":"center"}},"1402",-1),tC={style:{"text-align":"left"}},eC={href:"https://leetcode.com/problems/reducing-dishes",target:"_blank",rel:"noopener noreferrer"},oC=t("td",{style:{"text-align":"center"}},null,-1),lC={style:{"text-align":"left"}},nC=t("code",null,"贪心",-1),sC=t("code",null,"数组",-1),dC=t("code",null,"动态规划",-1),_C=t("code",null,"1+",-1),iC={style:{"text-align":"left"}},cC=t("td",{style:{"text-align":"center"}},"1406",-1),aC={style:{"text-align":"left"}},rC={href:"https://leetcode.com/problems/stone-game-iii",target:"_blank",rel:"noopener noreferrer"},hC=t("td",{style:{"text-align":"center"}},null,-1),uC={style:{"text-align":"left"}},fC=t("code",null,"数组",-1),gC=t("code",null,"数学",-1),mC=t("code",null,"动态规划",-1),yC=t("code",null,"1+",-1),xC={style:{"text-align":"left"}},pC=t("td",{style:{"text-align":"center"}},"1411",-1),bC={style:{"text-align":"left"}},kC={href:"https://leetcode.com/problems/number-of-ways-to-paint-n-3-grid",target:"_blank",rel:"noopener noreferrer"},MC=t("td",{style:{"text-align":"center"}},null,-1),HC={style:{"text-align":"left"}},IC=t("code",null,"动态规划",-1),wC={style:{"text-align":"left"}},vC=t("td",{style:{"text-align":"center"}},"1416",-1),qC={style:{"text-align":"left"}},jC={href:"https://leetcode.com/problems/restore-the-array",target:"_blank",rel:"noopener noreferrer"},zC=t("td",{style:{"text-align":"center"}},null,-1),CC={style:{"text-align":"left"}},OC=t("code",null,"字符串",-1),LC=t("code",null,"动态规划",-1),EC={style:{"text-align":"left"}},PC=t("td",{style:{"text-align":"center"}},"1420",-1),KC={style:{"text-align":"left"}},VC={href:"https://leetcode.com/problems/build-array-where-you-can-find-the-maximum-exactly-k-comparisons",target:"_blank",rel:"noopener noreferrer"},NC=t("td",{style:{"text-align":"center"}},null,-1),DC={style:{"text-align":"left"}},BC=t("code",null,"动态规划",-1),YC=t("code",null,"前缀和",-1),AC={style:{"text-align":"left"}},JC=t("td",{style:{"text-align":"center"}},"1425",-1),RC={style:{"text-align":"left"}},SC={href:"https://leetcode.com/problems/constrained-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},UC=t("td",{style:{"text-align":"center"}},null,-1),WC={style:{"text-align":"left"}},XC=t("code",null,"队列",-1),FC=t("code",null,"数组",-1),GC=t("code",null,"动态规划",-1),TC=t("code",null,"3+",-1),QC={style:{"text-align":"left"}},ZC=t("td",{style:{"text-align":"center"}},"1434",-1),$C={style:{"text-align":"left"}},tO={href:"https://leetcode.com/problems/number-of-ways-to-wear-different-hats-to-each-other",target:"_blank",rel:"noopener noreferrer"},eO=t("td",{style:{"text-align":"center"}},null,-1),oO={style:{"text-align":"left"}},lO=t("code",null,"位运算",-1),nO=t("code",null,"数组",-1),sO=t("code",null,"动态规划",-1),dO=t("code",null,"1+",-1),_O={style:{"text-align":"left"}},iO=t("td",{style:{"text-align":"center"}},"1444",-1),cO={style:{"text-align":"left"}},aO={href:"https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza",target:"_blank",rel:"noopener noreferrer"},rO=t("td",{style:{"text-align":"center"}},null,-1),hO={style:{"text-align":"left"}},uO=t("code",null,"记忆化搜索",-1),fO=t("code",null,"数组",-1),gO=t("code",null,"动态规划",-1),mO=t("code",null,"1+",-1),yO={style:{"text-align":"left"}},xO=t("td",{style:{"text-align":"center"}},"1449",-1),pO={style:{"text-align":"left"}},bO={href:"https://leetcode.com/problems/form-largest-integer-with-digits-that-add-up-to-target",target:"_blank",rel:"noopener noreferrer"},kO=t("td",{style:{"text-align":"center"}},null,-1),MO={style:{"text-align":"left"}},HO=t("code",null,"数组",-1),IO=t("code",null,"动态规划",-1),wO={style:{"text-align":"left"}},vO=t("td",{style:{"text-align":"center"}},"1458",-1),qO={style:{"text-align":"left"}},jO={href:"https://leetcode.com/problems/max-dot-product-of-two-subsequences",target:"_blank",rel:"noopener noreferrer"},zO=t("td",{style:{"text-align":"center"}},null,-1),CO={style:{"text-align":"left"}},OO=t("code",null,"数组",-1),LO=t("code",null,"动态规划",-1),EO={style:{"text-align":"left"}},PO=t("td",{style:{"text-align":"center"}},"1463",-1),KO={style:{"text-align":"left"}},VO={href:"https://leetcode.com/problems/cherry-pickup-ii",target:"_blank",rel:"noopener noreferrer"},NO=t("td",{style:{"text-align":"center"}},null,-1),DO={style:{"text-align":"left"}},BO=t("code",null,"数组",-1),YO=t("code",null,"动态规划",-1),AO=t("code",null,"矩阵",-1),JO={style:{"text-align":"left"}},RO=t("td",{style:{"text-align":"center"}},"1467",-1),SO={style:{"text-align":"left"}},UO={href:"https://leetcode.com/problems/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",target:"_blank",rel:"noopener noreferrer"},WO=t("td",{style:{"text-align":"center"}},null,-1),XO={style:{"text-align":"left"}},FO=t("code",null,"数组",-1),GO=t("code",null,"数学",-1),TO=t("code",null,"动态规划",-1),QO=t("code",null,"3+",-1),ZO={style:{"text-align":"left"}},$O=t("td",{style:{"text-align":"center"}},"1473",-1),tL={style:{"text-align":"left"}},eL={href:"https://leetcode.com/problems/paint-house-iii",target:"_blank",rel:"noopener noreferrer"},oL=t("td",{style:{"text-align":"center"}},null,-1),lL={style:{"text-align":"left"}},nL=t("code",null,"数组",-1),sL=t("code",null,"动态规划",-1),dL={style:{"text-align":"left"}},_L=t("td",{style:{"text-align":"center"}},"1477",-1),iL={style:{"text-align":"left"}},cL={href:"https://leetcode.com/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum",target:"_blank",rel:"noopener noreferrer"},aL=t("td",{style:{"text-align":"center"}},null,-1),rL={style:{"text-align":"left"}},hL=t("code",null,"数组",-1),uL=t("code",null,"哈希表",-1),fL=t("code",null,"二分查找",-1),gL=t("code",null,"2+",-1),mL={style:{"text-align":"left"}},yL=t("td",{style:{"text-align":"center"}},"1478",-1),xL={style:{"text-align":"left"}},pL={href:"https://leetcode.com/problems/allocate-mailboxes",target:"_blank",rel:"noopener noreferrer"},bL=t("td",{style:{"text-align":"center"}},null,-1),kL={style:{"text-align":"left"}},ML=t("code",null,"数组",-1),HL=t("code",null,"数学",-1),IL=t("code",null,"动态规划",-1),wL=t("code",null,"1+",-1),vL={style:{"text-align":"left"}},qL=t("td",{style:{"text-align":"center"}},"1483",-1),jL={style:{"text-align":"left"}},zL={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},CL=t("td",{style:{"text-align":"center"}},null,-1),OL={style:{"text-align":"left"}},LL=t("code",null,"树",-1),EL=t("code",null,"深度优先搜索",-1),PL=t("code",null,"广度优先搜索",-1),KL=t("code",null,"3+",-1),VL={style:{"text-align":"left"}},NL=t("td",{style:{"text-align":"center"}},"1493",-1),DL={style:{"text-align":"left"}},BL={href:"https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element",target:"_blank",rel:"noopener noreferrer"},YL=t("td",{style:{"text-align":"center"}},null,-1),AL={style:{"text-align":"left"}},JL=t("code",null,"数组",-1),RL=t("code",null,"动态规划",-1),SL=t("code",null,"滑动窗口",-1),UL={style:{"text-align":"left"}},WL=t("td",{style:{"text-align":"center"}},"1494",-1),XL={style:{"text-align":"left"}},FL={href:"https://leetcode.com/problems/parallel-courses-ii",target:"_blank",rel:"noopener noreferrer"},GL=t("td",{style:{"text-align":"center"}},null,-1),TL={style:{"text-align":"left"}},QL=t("code",null,"位运算",-1),ZL=t("code",null,"图",-1),$L=t("code",null,"动态规划",-1),tE=t("code",null,"1+",-1),eE={style:{"text-align":"left"}},oE=t("td",{style:{"text-align":"center"}},"1504",-1),lE={style:{"text-align":"left"}},nE={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},sE=t("td",{style:{"text-align":"center"}},null,-1),dE={style:{"text-align":"left"}},_E=t("code",null,"栈",-1),iE=t("code",null,"数组",-1),cE=t("code",null,"动态规划",-1),aE=t("code",null,"2+",-1),rE={style:{"text-align":"left"}},hE=t("td",{style:{"text-align":"center"}},"1510",-1),uE={style:{"text-align":"left"}},fE={href:"https://leetcode.com/problems/stone-game-iv",target:"_blank",rel:"noopener noreferrer"},gE=t("td",{style:{"text-align":"center"}},null,-1),mE={style:{"text-align":"left"}},yE=t("code",null,"数学",-1),xE=t("code",null,"动态规划",-1),pE=t("code",null,"博弈",-1),bE={style:{"text-align":"left"}},kE=t("td",{style:{"text-align":"center"}},"1524",-1),ME={style:{"text-align":"left"}},HE={href:"https://leetcode.com/problems/number-of-sub-arrays-with-odd-sum",target:"_blank",rel:"noopener noreferrer"},IE=t("td",{style:{"text-align":"center"}},null,-1),wE={style:{"text-align":"left"}},vE=t("code",null,"数组",-1),qE=t("code",null,"数学",-1),jE=t("code",null,"动态规划",-1),zE=t("code",null,"1+",-1),CE={style:{"text-align":"left"}},OE=t("td",{style:{"text-align":"center"}},"1525",-1),LE={style:{"text-align":"left"}},EE={href:"https://leetcode.com/problems/number-of-good-ways-to-split-a-string",target:"_blank",rel:"noopener noreferrer"},PE=t("td",{style:{"text-align":"center"}},null,-1),KE={style:{"text-align":"left"}},VE=t("code",null,"位运算",-1),NE=t("code",null,"哈希表",-1),DE=t("code",null,"字符串",-1),BE=t("code",null,"1+",-1),YE={style:{"text-align":"left"}},AE=t("td",{style:{"text-align":"center"}},"1526",-1),JE={style:{"text-align":"left"}},RE={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},SE=t("td",{style:{"text-align":"center"}},null,-1),UE={style:{"text-align":"left"}},WE=t("code",null,"栈",-1),XE=t("code",null,"贪心",-1),FE=t("code",null,"数组",-1),GE=t("code",null,"2+",-1),TE={style:{"text-align":"left"}},QE=t("td",{style:{"text-align":"center"}},"1531",-1),ZE={style:{"text-align":"left"}},$E={href:"https://leetcode.com/problems/string-compression-ii",target:"_blank",rel:"noopener noreferrer"},tP=t("td",{style:{"text-align":"center"}},null,-1),eP={style:{"text-align":"left"}},oP=t("code",null,"字符串",-1),lP=t("code",null,"动态规划",-1),nP={style:{"text-align":"left"}},sP=t("td",{style:{"text-align":"center"}},"1537",-1),dP={style:{"text-align":"left"}},_P={href:"https://leetcode.com/problems/get-the-maximum-score",target:"_blank",rel:"noopener noreferrer"},iP=t("td",{style:{"text-align":"center"}},null,-1),cP={style:{"text-align":"left"}},aP=t("code",null,"贪心",-1),rP=t("code",null,"数组",-1),hP=t("code",null,"双指针",-1),uP=t("code",null,"1+",-1),fP={style:{"text-align":"left"}},gP=t("td",{style:{"text-align":"center"}},"1547",-1),mP={style:{"text-align":"left"}},yP={href:"https://leetcode.com/problems/minimum-cost-to-cut-a-stick",target:"_blank",rel:"noopener noreferrer"},xP=t("td",{style:{"text-align":"center"}},null,-1),pP={style:{"text-align":"left"}},bP=t("code",null,"数组",-1),kP=t("code",null,"动态规划",-1),MP=t("code",null,"排序",-1),HP={style:{"text-align":"left"}},IP=t("td",{style:{"text-align":"center"}},"1548",-1),wP={style:{"text-align":"left"}},vP={href:"https://leetcode.com/problems/the-most-similar-path-in-a-graph",target:"_blank",rel:"noopener noreferrer"},qP=t("td",{style:{"text-align":"center"}},null,-1),jP={style:{"text-align":"left"}},zP=t("code",null,"图",-1),CP=t("code",null,"动态规划",-1),OP={style:{"text-align":"left"}},LP=t("td",{style:{"text-align":"center"}},"1553",-1),EP={style:{"text-align":"left"}},PP={href:"https://leetcode.com/problems/minimum-number-of-days-to-eat-n-oranges",target:"_blank",rel:"noopener noreferrer"},KP=t("td",{style:{"text-align":"center"}},null,-1),VP={style:{"text-align":"left"}},NP=t("code",null,"记忆化搜索",-1),DP=t("code",null,"动态规划",-1),BP={style:{"text-align":"left"}},YP=t("td",{style:{"text-align":"center"}},"1563",-1),AP={style:{"text-align":"left"}},JP={href:"https://leetcode.com/problems/stone-game-v",target:"_blank",rel:"noopener noreferrer"},RP=t("td",{style:{"text-align":"center"}},null,-1),SP={style:{"text-align":"left"}},UP=t("code",null,"数组",-1),WP=t("code",null,"数学",-1),XP=t("code",null,"动态规划",-1),FP=t("code",null,"1+",-1),GP={style:{"text-align":"left"}},TP=t("td",{style:{"text-align":"center"}},"1567",-1),QP={style:{"text-align":"left"}},ZP={href:"https://leetcode.com/problems/maximum-length-of-subarray-with-positive-product",target:"_blank",rel:"noopener noreferrer"},$P=t("td",{style:{"text-align":"center"}},null,-1),tK={style:{"text-align":"left"}},eK=t("code",null,"贪心",-1),oK=t("code",null,"数组",-1),lK=t("code",null,"动态规划",-1),nK={style:{"text-align":"left"}},sK=t("td",{style:{"text-align":"center"}},"1569",-1),dK={style:{"text-align":"left"}},_K={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},iK=t("td",{style:{"text-align":"center"}},null,-1),cK={style:{"text-align":"left"}},aK=t("code",null,"树",-1),rK=t("code",null,"并查集",-1),hK=t("code",null,"二叉搜索树",-1),uK=t("code",null,"7+",-1),fK={style:{"text-align":"left"}},gK=t("td",{style:{"text-align":"center"}},"1575",-1),mK={style:{"text-align":"left"}},yK={href:"https://leetcode.com/problems/count-all-possible-routes",target:"_blank",rel:"noopener noreferrer"},xK=t("td",{style:{"text-align":"center"}},null,-1),pK={style:{"text-align":"left"}},bK=t("code",null,"记忆化搜索",-1),kK=t("code",null,"数组",-1),MK=t("code",null,"动态规划",-1),HK={style:{"text-align":"left"}},IK=t("td",{style:{"text-align":"center"}},"1578",-1),wK={style:{"text-align":"left"}},vK={href:"https://leetcode.com/problems/minimum-time-to-make-rope-colorful",target:"_blank",rel:"noopener noreferrer"},qK=t("td",{style:{"text-align":"center"}},null,-1),jK={style:{"text-align":"left"}},zK=t("code",null,"贪心",-1),CK=t("code",null,"数组",-1),OK=t("code",null,"字符串",-1),LK=t("code",null,"1+",-1),EK={style:{"text-align":"left"}},PK=t("td",{style:{"text-align":"center"}},"1594",-1),KK={style:{"text-align":"left"}},VK={href:"https://leetcode.com/problems/maximum-non-negative-product-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},NK=t("td",{style:{"text-align":"center"}},null,-1),DK={style:{"text-align":"left"}},BK=t("code",null,"数组",-1),YK=t("code",null,"动态规划",-1),AK=t("code",null,"矩阵",-1),JK={style:{"text-align":"left"}},RK=t("td",{style:{"text-align":"center"}},"1595",-1),SK={style:{"text-align":"left"}},UK={href:"https://leetcode.com/problems/minimum-cost-to-connect-two-groups-of-points",target:"_blank",rel:"noopener noreferrer"},WK=t("td",{style:{"text-align":"center"}},null,-1),XK={style:{"text-align":"left"}},FK=t("code",null,"位运算",-1),GK=t("code",null,"数组",-1),TK=t("code",null,"动态规划",-1),QK=t("code",null,"2+",-1),ZK={style:{"text-align":"left"}},$K=t("td",{style:{"text-align":"center"}},"1611",-1),tV={style:{"text-align":"left"}},eV={href:"https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero",target:"_blank",rel:"noopener noreferrer"},oV=t("td",{style:{"text-align":"center"}},null,-1),lV={style:{"text-align":"left"}},nV=t("code",null,"位运算",-1),sV=t("code",null,"记忆化搜索",-1),dV=t("code",null,"动态规划",-1),_V={style:{"text-align":"left"}},iV=t("td",{style:{"text-align":"center"}},"1617",-1),cV={style:{"text-align":"left"}},aV={href:"https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities",target:"_blank",rel:"noopener noreferrer"},rV=t("td",{style:{"text-align":"center"}},null,-1),hV={style:{"text-align":"left"}},uV=t("code",null,"位运算",-1),fV=t("code",null,"树",-1),gV=t("code",null,"动态规划",-1),mV=t("code",null,"2+",-1),yV={style:{"text-align":"left"}},xV=t("td",{style:{"text-align":"center"}},"1621",-1),pV={style:{"text-align":"left"}},bV={href:"https://leetcode.com/problems/number-of-sets-of-k-non-overlapping-line-segments",target:"_blank",rel:"noopener noreferrer"},kV=t("td",{style:{"text-align":"center"}},null,-1),MV={style:{"text-align":"left"}},HV=t("code",null,"数学",-1),IV=t("code",null,"动态规划",-1),wV=t("code",null,"组合数学",-1),vV={style:{"text-align":"left"}},qV=t("td",{style:{"text-align":"center"}},"1626",-1),jV={style:{"text-align":"left"}},zV={href:"https://leetcode.com/problems/best-team-with-no-conflicts",target:"_blank",rel:"noopener noreferrer"},CV=t("td",{style:{"text-align":"center"}},null,-1),OV={style:{"text-align":"left"}},LV=t("code",null,"数组",-1),EV=t("code",null,"动态规划",-1),PV=t("code",null,"排序",-1),KV={style:{"text-align":"left"}},VV=t("td",{style:{"text-align":"center"}},"1638",-1),NV={style:{"text-align":"left"}},DV={href:"https://leetcode.com/problems/count-substrings-that-differ-by-one-character",target:"_blank",rel:"noopener noreferrer"},BV=t("td",{style:{"text-align":"center"}},null,-1),YV={style:{"text-align":"left"}},AV=t("code",null,"哈希表",-1),JV=t("code",null,"字符串",-1),RV=t("code",null,"动态规划",-1),SV=t("code",null,"1+",-1),UV={style:{"text-align":"left"}},WV=t("td",{style:{"text-align":"center"}},"1639",-1),XV={style:{"text-align":"left"}},FV={href:"https://leetcode.com/problems/number-of-ways-to-form-a-target-string-given-a-dictionary",target:"_blank",rel:"noopener noreferrer"},GV=t("td",{style:{"text-align":"center"}},null,-1),TV={style:{"text-align":"left"}},QV=t("code",null,"数组",-1),ZV=t("code",null,"字符串",-1),$V=t("code",null,"动态规划",-1),tN={style:{"text-align":"left"}},eN=t("td",{style:{"text-align":"center"}},"1641",-1),oN={style:{"text-align":"left"}},lN={href:"https://leetcode.com/problems/count-sorted-vowel-strings",target:"_blank",rel:"noopener noreferrer"},nN=t("td",{style:{"text-align":"center"}},null,-1),sN={style:{"text-align":"left"}},dN=t("code",null,"数学",-1),_N=t("code",null,"动态规划",-1),iN=t("code",null,"组合数学",-1),cN={style:{"text-align":"left"}},aN=t("td",{style:{"text-align":"center"}},"1643",-1),rN={style:{"text-align":"left"}},hN={href:"https://leetcode.com/problems/kth-smallest-instructions",target:"_blank",rel:"noopener noreferrer"},uN=t("td",{style:{"text-align":"center"}},null,-1),fN={style:{"text-align":"left"}},gN=t("code",null,"数组",-1),mN=t("code",null,"数学",-1),yN=t("code",null,"动态规划",-1),xN=t("code",null,"1+",-1),pN={style:{"text-align":"left"}},bN=t("td",{style:{"text-align":"center"}},"1653",-1),kN={style:{"text-align":"left"}},MN={href:"https://leetcode.com/problems/minimum-deletions-to-make-string-balanced",target:"_blank",rel:"noopener noreferrer"},HN=t("td",{style:{"text-align":"center"}},null,-1),IN={style:{"text-align":"left"}},wN=t("code",null,"栈",-1),vN=t("code",null,"字符串",-1),qN=t("code",null,"动态规划",-1),jN={style:{"text-align":"left"}},zN=t("td",{style:{"text-align":"center"}},"1654",-1),CN={style:{"text-align":"left"}},ON={href:"https://leetcode.com/problems/minimum-jumps-to-reach-home",target:"_blank",rel:"noopener noreferrer"},LN=t("td",{style:{"text-align":"center"}},null,-1),EN={style:{"text-align":"left"}},PN=t("code",null,"广度优先搜索",-1),KN=t("code",null,"数组",-1),VN=t("code",null,"动态规划",-1),NN={style:{"text-align":"left"}},DN=t("td",{style:{"text-align":"center"}},"1655",-1),BN={style:{"text-align":"left"}},YN={href:"https://leetcode.com/problems/distribute-repeating-integers",target:"_blank",rel:"noopener noreferrer"},AN=t("td",{style:{"text-align":"center"}},null,-1),JN={style:{"text-align":"left"}},RN=t("code",null,"位运算",-1),SN=t("code",null,"数组",-1),UN=t("code",null,"动态规划",-1),WN=t("code",null,"2+",-1),XN={style:{"text-align":"left"}},FN=t("td",{style:{"text-align":"center"}},"1659",-1),GN={style:{"text-align":"left"}},TN={href:"https://leetcode.com/problems/maximize-grid-happiness",target:"_blank",rel:"noopener noreferrer"},QN=t("td",{style:{"text-align":"center"}},null,-1),ZN={style:{"text-align":"left"}},$N=t("code",null,"位运算",-1),tD=t("code",null,"记忆化搜索",-1),eD=t("code",null,"动态规划",-1),oD=t("code",null,"1+",-1),lD={style:{"text-align":"left"}},nD=t("td",{style:{"text-align":"center"}},"1668",-1),sD={style:{"text-align":"left"}},dD={href:"https://leetcode.com/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},_D=t("td",{style:{"text-align":"center"}},null,-1),iD={style:{"text-align":"left"}},cD=t("code",null,"字符串",-1),aD=t("code",null,"动态规划",-1),rD=t("code",null,"字符串匹配",-1),hD={style:{"text-align":"left"}},uD=t("td",{style:{"text-align":"center"}},"1671",-1),fD={style:{"text-align":"left"}},gD={href:"https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array",target:"_blank",rel:"noopener noreferrer"},mD=t("td",{style:{"text-align":"center"}},null,-1),yD={style:{"text-align":"left"}},xD=t("code",null,"贪心",-1),pD=t("code",null,"数组",-1),bD=t("code",null,"二分查找",-1),kD=t("code",null,"1+",-1),MD={style:{"text-align":"left"}},HD=t("td",{style:{"text-align":"center"}},"1681",-1),ID={style:{"text-align":"left"}},wD={href:"https://leetcode.com/problems/minimum-incompatibility",target:"_blank",rel:"noopener noreferrer"},vD=t("td",{style:{"text-align":"center"}},null,-1),qD={style:{"text-align":"left"}},jD=t("code",null,"位运算",-1),zD=t("code",null,"数组",-1),CD=t("code",null,"动态规划",-1),OD=t("code",null,"1+",-1),LD={style:{"text-align":"left"}},ED=t("td",{style:{"text-align":"center"}},"1682",-1),PD={style:{"text-align":"left"}},KD={href:"https://leetcode.com/problems/longest-palindromic-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},VD=t("td",{style:{"text-align":"center"}},null,-1),ND={style:{"text-align":"left"}},DD=t("code",null,"字符串",-1),BD=t("code",null,"动态规划",-1),YD={style:{"text-align":"left"}},AD=t("td",{style:{"text-align":"center"}},"1687",-1),JD={style:{"text-align":"left"}},RD={href:"https://leetcode.com/problems/delivering-boxes-from-storage-to-ports",target:"_blank",rel:"noopener noreferrer"},SD=t("td",{style:{"text-align":"center"}},null,-1),UD={style:{"text-align":"left"}},WD=t("code",null,"线段树",-1),XD=t("code",null,"队列",-1),FD=t("code",null,"数组",-1),GD=t("code",null,"4+",-1),TD={style:{"text-align":"left"}},QD=t("td",{style:{"text-align":"center"}},"1690",-1),ZD={style:{"text-align":"left"}},$D={href:"https://leetcode.com/problems/stone-game-vii",target:"_blank",rel:"noopener noreferrer"},tB=t("td",{style:{"text-align":"center"}},null,-1),eB={style:{"text-align":"left"}},oB=t("code",null,"数组",-1),lB=t("code",null,"数学",-1),nB=t("code",null,"动态规划",-1),sB=t("code",null,"1+",-1),dB={style:{"text-align":"left"}},_B=t("td",{style:{"text-align":"center"}},"1691",-1),iB={style:{"text-align":"left"}},cB={href:"https://leetcode.com/problems/maximum-height-by-stacking-cuboids",target:"_blank",rel:"noopener noreferrer"},aB=t("td",{style:{"text-align":"center"}},null,-1),rB={style:{"text-align":"left"}},hB=t("code",null,"数组",-1),uB=t("code",null,"动态规划",-1),fB=t("code",null,"排序",-1),gB={style:{"text-align":"left"}},mB=t("td",{style:{"text-align":"center"}},"1692",-1),yB={style:{"text-align":"left"}},xB={href:"https://leetcode.com/problems/count-ways-to-distribute-candies",target:"_blank",rel:"noopener noreferrer"},pB=t("td",{style:{"text-align":"center"}},null,-1),bB={style:{"text-align":"left"}},kB=t("code",null,"动态规划",-1),MB={style:{"text-align":"left"}},HB=t("td",{style:{"text-align":"center"}},"1696",-1),IB={style:{"text-align":"left"}},wB={href:"https://leetcode.com/problems/jump-game-vi",target:"_blank",rel:"noopener noreferrer"},vB=t("td",{style:{"text-align":"center"}},null,-1),qB={style:{"text-align":"left"}},jB=t("code",null,"队列",-1),zB=t("code",null,"数组",-1),CB=t("code",null,"动态规划",-1),OB=t("code",null,"2+",-1),LB={style:{"text-align":"left"}},EB=t("td",{style:{"text-align":"center"}},"1714",-1),PB={style:{"text-align":"left"}},KB={href:"https://leetcode.com/problems/sum-of-special-evenly-spaced-elements-in-array",target:"_blank",rel:"noopener noreferrer"},VB=t("td",{style:{"text-align":"center"}},null,-1),NB={style:{"text-align":"left"}},DB=t("code",null,"数组",-1),BB=t("code",null,"动态规划",-1),YB={style:{"text-align":"left"}},AB=t("td",{style:{"text-align":"center"}},"1723",-1),JB={style:{"text-align":"left"}},RB={href:"https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs",target:"_blank",rel:"noopener noreferrer"},SB=t("td",{style:{"text-align":"center"}},null,-1),UB={style:{"text-align":"left"}},WB=t("code",null,"位运算",-1),XB=t("code",null,"数组",-1),FB=t("code",null,"动态规划",-1),GB=t("code",null,"2+",-1),TB={style:{"text-align":"left"}},QB=t("td",{style:{"text-align":"center"}},"1728",-1),ZB={style:{"text-align":"left"}},$B={href:"https://leetcode.com/problems/cat-and-mouse-ii",target:"_blank",rel:"noopener noreferrer"},tY=t("td",{style:{"text-align":"center"}},null,-1),eY={style:{"text-align":"left"}},oY=t("code",null,"图",-1),lY=t("code",null,"拓扑排序",-1),nY=t("code",null,"记忆化搜索",-1),sY=t("code",null,"5+",-1),dY={style:{"text-align":"left"}},_Y=t("td",{style:{"text-align":"center"}},"1735",-1),iY={style:{"text-align":"left"}},cY={href:"https://leetcode.com/problems/count-ways-to-make-array-with-product",target:"_blank",rel:"noopener noreferrer"},aY=t("td",{style:{"text-align":"center"}},null,-1),rY={style:{"text-align":"left"}},hY=t("code",null,"数组",-1),uY=t("code",null,"数学",-1),fY=t("code",null,"动态规划",-1),gY=t("code",null,"2+",-1),mY={style:{"text-align":"left"}},yY=t("td",{style:{"text-align":"center"}},"1745",-1),xY={style:{"text-align":"left"}},pY={href:"https://leetcode.com/problems/palindrome-partitioning-iv",target:"_blank",rel:"noopener noreferrer"},bY=t("td",{style:{"text-align":"center"}},null,-1),kY={style:{"text-align":"left"}},MY=t("code",null,"字符串",-1),HY=t("code",null,"动态规划",-1),IY={style:{"text-align":"left"}},wY=t("td",{style:{"text-align":"center"}},"1746",-1),vY={style:{"text-align":"left"}},qY={href:"https://leetcode.com/problems/maximum-subarray-sum-after-one-operation",target:"_blank",rel:"noopener noreferrer"},jY=t("td",{style:{"text-align":"center"}},null,-1),zY={style:{"text-align":"left"}},CY=t("code",null,"数组",-1),OY=t("code",null,"动态规划",-1),LY={style:{"text-align":"left"}},EY=t("td",{style:{"text-align":"center"}},"1749",-1),PY={style:{"text-align":"left"}},KY={href:"https://leetcode.com/problems/maximum-absolute-sum-of-any-subarray",target:"_blank",rel:"noopener noreferrer"},VY=t("td",{style:{"text-align":"center"}},null,-1),NY={style:{"text-align":"left"}},DY=t("code",null,"数组",-1),BY=t("code",null,"动态规划",-1),YY={style:{"text-align":"left"}},AY=t("td",{style:{"text-align":"center"}},"1751",-1),JY={style:{"text-align":"left"}},RY={href:"https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii",target:"_blank",rel:"noopener noreferrer"},SY=t("td",{style:{"text-align":"center"}},null,-1),UY={style:{"text-align":"left"}},WY=t("code",null,"数组",-1),XY=t("code",null,"二分查找",-1),FY=t("code",null,"动态规划",-1),GY=t("code",null,"1+",-1),TY={style:{"text-align":"left"}},QY=t("td",{style:{"text-align":"center"}},"1755",-1),ZY={style:{"text-align":"left"}},$Y={href:"https://leetcode.com/problems/closest-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},tA=t("td",{style:{"text-align":"center"}},null,-1),eA={style:{"text-align":"left"}},oA=t("code",null,"位运算",-1),lA=t("code",null,"数组",-1),nA=t("code",null,"双指针",-1),sA=t("code",null,"2+",-1),dA={style:{"text-align":"left"}},_A=t("td",{style:{"text-align":"center"}},"1770",-1),iA={style:{"text-align":"left"}},cA={href:"https://leetcode.com/problems/maximum-score-from-performing-multiplication-operations",target:"_blank",rel:"noopener noreferrer"},aA=t("td",{style:{"text-align":"center"}},null,-1),rA={style:{"text-align":"left"}},hA=t("code",null,"数组",-1),uA=t("code",null,"动态规划",-1),fA={style:{"text-align":"left"}},gA=t("td",{style:{"text-align":"center"}},"1771",-1),mA={style:{"text-align":"left"}},yA={href:"https://leetcode.com/problems/maximize-palindrome-length-from-subsequences",target:"_blank",rel:"noopener noreferrer"},xA=t("td",{style:{"text-align":"center"}},null,-1),pA={style:{"text-align":"left"}},bA=t("code",null,"字符串",-1),kA=t("code",null,"动态规划",-1),MA={style:{"text-align":"left"}},HA=t("td",{style:{"text-align":"center"}},"1774",-1),IA={style:{"text-align":"left"}},wA={href:"https://leetcode.com/problems/closest-dessert-cost",target:"_blank",rel:"noopener noreferrer"},vA=t("td",{style:{"text-align":"center"}},null,-1),qA={style:{"text-align":"left"}},jA=t("code",null,"数组",-1),zA=t("code",null,"动态规划",-1),CA=t("code",null,"回溯",-1),OA={style:{"text-align":"left"}},LA=t("td",{style:{"text-align":"center"}},"1786",-1),EA={style:{"text-align":"left"}},PA={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},KA=t("td",{style:{"text-align":"center"}},null,-1),VA={style:{"text-align":"left"}},NA=t("code",null,"图",-1),DA=t("code",null,"拓扑排序",-1),BA=t("code",null,"动态规划",-1),YA=t("code",null,"2+",-1),AA={style:{"text-align":"left"}},JA=t("td",{style:{"text-align":"center"}},"1787",-1),RA={style:{"text-align":"left"}},SA={href:"https://leetcode.com/problems/make-the-xor-of-all-segments-equal-to-zero",target:"_blank",rel:"noopener noreferrer"},UA=t("td",{style:{"text-align":"center"}},null,-1),WA={style:{"text-align":"left"}},XA=t("code",null,"位运算",-1),FA=t("code",null,"数组",-1),GA=t("code",null,"动态规划",-1),TA={style:{"text-align":"left"}},QA=t("td",{style:{"text-align":"center"}},"1799",-1),ZA={style:{"text-align":"left"}},$A={href:"https://leetcode.com/problems/maximize-score-after-n-operations",target:"_blank",rel:"noopener noreferrer"},tJ=t("td",{style:{"text-align":"center"}},null,-1),eJ={style:{"text-align":"left"}},oJ=t("code",null,"位运算",-1),lJ=t("code",null,"数组",-1),nJ=t("code",null,"数学",-1),sJ=t("code",null,"4+",-1),dJ={style:{"text-align":"left"}},_J=t("td",{style:{"text-align":"center"}},"1815",-1),iJ={style:{"text-align":"left"}},cJ={href:"https://leetcode.com/problems/maximum-number-of-groups-getting-fresh-donuts",target:"_blank",rel:"noopener noreferrer"},aJ=t("td",{style:{"text-align":"center"}},null,-1),rJ={style:{"text-align":"left"}},hJ=t("code",null,"位运算",-1),uJ=t("code",null,"记忆化搜索",-1),fJ=t("code",null,"数组",-1),gJ=t("code",null,"2+",-1),mJ={style:{"text-align":"left"}},yJ=t("td",{style:{"text-align":"center"}},"1824",-1),xJ={style:{"text-align":"left"}},pJ={href:"https://leetcode.com/problems/minimum-sideway-jumps",target:"_blank",rel:"noopener noreferrer"},bJ=t("td",{style:{"text-align":"center"}},null,-1),kJ={style:{"text-align":"left"}},MJ=t("code",null,"贪心",-1),HJ=t("code",null,"数组",-1),IJ=t("code",null,"动态规划",-1),wJ={style:{"text-align":"left"}},vJ=t("td",{style:{"text-align":"center"}},"1857",-1),qJ={style:{"text-align":"left"}},jJ={href:"https://leetcode.com/problems/largest-color-value-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},zJ=t("td",{style:{"text-align":"center"}},null,-1),CJ={style:{"text-align":"left"}},OJ=t("code",null,"图",-1),LJ=t("code",null,"拓扑排序",-1),EJ=t("code",null,"记忆化搜索",-1),PJ=t("code",null,"3+",-1),KJ={style:{"text-align":"left"}},VJ=t("td",{style:{"text-align":"center"}},"1866",-1),NJ={style:{"text-align":"left"}},DJ={href:"https://leetcode.com/problems/number-of-ways-to-rearrange-sticks-with-k-sticks-visible",target:"_blank",rel:"noopener noreferrer"},BJ=t("td",{style:{"text-align":"center"}},null,-1),YJ={style:{"text-align":"left"}},AJ=t("code",null,"数学",-1),JJ=t("code",null,"动态规划",-1),RJ=t("code",null,"组合数学",-1),SJ={style:{"text-align":"left"}},UJ=t("td",{style:{"text-align":"center"}},"1871",-1),WJ={style:{"text-align":"left"}},XJ={href:"https://leetcode.com/problems/jump-game-vii",target:"_blank",rel:"noopener noreferrer"},FJ=t("td",{style:{"text-align":"center"}},null,-1),GJ={style:{"text-align":"left"}},TJ=t("code",null,"字符串",-1),QJ=t("code",null,"动态规划",-1),ZJ=t("code",null,"前缀和",-1),$J=t("code",null,"1+",-1),tR={style:{"text-align":"left"}},eR=t("td",{style:{"text-align":"center"}},"1872",-1),oR={style:{"text-align":"left"}},lR={href:"https://leetcode.com/problems/stone-game-viii",target:"_blank",rel:"noopener noreferrer"},nR=t("td",{style:{"text-align":"center"}},null,-1),sR={style:{"text-align":"left"}},dR=t("code",null,"数组",-1),_R=t("code",null,"数学",-1),iR=t("code",null,"动态规划",-1),cR=t("code",null,"2+",-1),aR={style:{"text-align":"left"}},rR=t("td",{style:{"text-align":"center"}},"1879",-1),hR={style:{"text-align":"left"}},uR={href:"https://leetcode.com/problems/minimum-xor-sum-of-two-arrays",target:"_blank",rel:"noopener noreferrer"},fR=t("td",{style:{"text-align":"center"}},null,-1),gR={style:{"text-align":"left"}},mR=t("code",null,"位运算",-1),yR=t("code",null,"数组",-1),xR=t("code",null,"动态规划",-1),pR=t("code",null,"1+",-1),bR={style:{"text-align":"left"}},kR=t("td",{style:{"text-align":"center"}},"1883",-1),MR={style:{"text-align":"left"}},HR={href:"https://leetcode.com/problems/minimum-skips-to-arrive-at-meeting-on-time",target:"_blank",rel:"noopener noreferrer"},IR=t("td",{style:{"text-align":"center"}},null,-1),wR={style:{"text-align":"left"}},vR=t("code",null,"数组",-1),qR=t("code",null,"动态规划",-1),jR={style:{"text-align":"left"}},zR=t("td",{style:{"text-align":"center"}},"1884",-1),CR={style:{"text-align":"left"}},OR={href:"https://leetcode.com/problems/egg-drop-with-2-eggs-and-n-floors",target:"_blank",rel:"noopener noreferrer"},LR=t("td",{style:{"text-align":"center"}},null,-1),ER={style:{"text-align":"left"}},PR=t("code",null,"数学",-1),KR=t("code",null,"动态规划",-1),VR={style:{"text-align":"left"}},NR=t("td",{style:{"text-align":"center"}},"1888",-1),DR={style:{"text-align":"left"}},BR={href:"https://leetcode.com/problems/minimum-number-of-flips-to-make-the-binary-string-alternating",target:"_blank",rel:"noopener noreferrer"},YR=t("td",{style:{"text-align":"center"}},null,-1),AR={style:{"text-align":"left"}},JR=t("code",null,"贪心",-1),RR=t("code",null,"字符串",-1),SR=t("code",null,"动态规划",-1),UR=t("code",null,"1+",-1),WR={style:{"text-align":"left"}},XR=t("td",{style:{"text-align":"center"}},"1896",-1),FR={style:{"text-align":"left"}},GR={href:"https://leetcode.com/problems/minimum-cost-to-change-the-final-value-of-expression",target:"_blank",rel:"noopener noreferrer"},TR=t("td",{style:{"text-align":"center"}},null,-1),QR={style:{"text-align":"left"}},ZR=t("code",null,"栈",-1),$R=t("code",null,"数学",-1),tS=t("code",null,"字符串",-1),eS=t("code",null,"1+",-1),oS={style:{"text-align":"left"}},lS=t("td",{style:{"text-align":"center"}},"1900",-1),nS={style:{"text-align":"left"}},sS={href:"https://leetcode.com/problems/the-earliest-and-latest-rounds-where-players-compete",target:"_blank",rel:"noopener noreferrer"},dS=t("td",{style:{"text-align":"center"}},null,-1),_S={style:{"text-align":"left"}},iS=t("code",null,"记忆化搜索",-1),cS=t("code",null,"动态规划",-1),aS={style:{"text-align":"left"}},rS=t("td",{style:{"text-align":"center"}},"1908",-1),hS={style:{"text-align":"left"}},uS={href:"https://leetcode.com/problems/game-of-nim",target:"_blank",rel:"noopener noreferrer"},fS=t("td",{style:{"text-align":"center"}},null,-1),gS={style:{"text-align":"left"}},mS=t("code",null,"位运算",-1),yS=t("code",null,"脑筋急转弯",-1),xS=t("code",null,"数组",-1),pS=t("code",null,"3+",-1),bS={style:{"text-align":"left"}},kS=t("td",{style:{"text-align":"center"}},"1911",-1),MS={style:{"text-align":"left"}},HS={href:"https://leetcode.com/problems/maximum-alternating-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},IS=t("td",{style:{"text-align":"center"}},null,-1),wS={style:{"text-align":"left"}},vS=t("code",null,"数组",-1),qS=t("code",null,"动态规划",-1),jS={style:{"text-align":"left"}},zS=t("td",{style:{"text-align":"center"}},"1916",-1),CS={style:{"text-align":"left"}},OS={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},LS=t("td",{style:{"text-align":"center"}},null,-1),ES={style:{"text-align":"left"}},PS=t("code",null,"树",-1),KS=t("code",null,"图",-1),VS=t("code",null,"拓扑排序",-1),NS=t("code",null,"3+",-1),DS={style:{"text-align":"left"}},BS=t("td",{style:{"text-align":"center"}},"1928",-1),YS={style:{"text-align":"left"}},AS={href:"https://leetcode.com/problems/minimum-cost-to-reach-destination-in-time",target:"_blank",rel:"noopener noreferrer"},JS=t("td",{style:{"text-align":"center"}},null,-1),RS={style:{"text-align":"left"}},SS=t("code",null,"图",-1),US=t("code",null,"数组",-1),WS=t("code",null,"动态规划",-1),XS={style:{"text-align":"left"}},FS=t("td",{style:{"text-align":"center"}},"1931",-1),GS={style:{"text-align":"left"}},TS={href:"https://leetcode.com/problems/painting-a-grid-with-three-different-colors",target:"_blank",rel:"noopener noreferrer"},QS=t("td",{style:{"text-align":"center"}},null,-1),ZS={style:{"text-align":"left"}},$S=t("code",null,"动态规划",-1),tU={style:{"text-align":"left"}},eU=t("td",{style:{"text-align":"center"}},"1937",-1),oU={style:{"text-align":"left"}},lU={href:"https://leetcode.com/problems/maximum-number-of-points-with-cost",target:"_blank",rel:"noopener noreferrer"},nU=t("td",{style:{"text-align":"center"}},null,-1),sU={style:{"text-align":"left"}},dU=t("code",null,"数组",-1),_U=t("code",null,"动态规划",-1),iU=t("code",null,"矩阵",-1),cU={style:{"text-align":"left"}},aU=t("td",{style:{"text-align":"center"}},"1947",-1),rU={style:{"text-align":"left"}},hU={href:"https://leetcode.com/problems/maximum-compatibility-score-sum",target:"_blank",rel:"noopener noreferrer"},uU=t("td",{style:{"text-align":"center"}},null,-1),fU={style:{"text-align":"left"}},gU=t("code",null,"位运算",-1),mU=t("code",null,"数组",-1),yU=t("code",null,"动态规划",-1),xU=t("code",null,"2+",-1),pU={style:{"text-align":"left"}},bU=t("td",{style:{"text-align":"center"}},"1955",-1),kU={style:{"text-align":"left"}},MU={href:"https://leetcode.com/problems/count-number-of-special-subsequences",target:"_blank",rel:"noopener noreferrer"},HU=t("td",{style:{"text-align":"center"}},null,-1),IU={style:{"text-align":"left"}},wU=t("code",null,"数组",-1),vU=t("code",null,"动态规划",-1),qU={style:{"text-align":"left"}},jU=t("td",{style:{"text-align":"center"}},"1959",-1),zU={style:{"text-align":"left"}},CU={href:"https://leetcode.com/problems/minimum-total-space-wasted-with-k-resizing-operations",target:"_blank",rel:"noopener noreferrer"},OU=t("td",{style:{"text-align":"center"}},null,-1),LU={style:{"text-align":"left"}},EU=t("code",null,"数组",-1),PU=t("code",null,"动态规划",-1),KU={style:{"text-align":"left"}},VU=t("td",{style:{"text-align":"center"}},"1976",-1),NU={style:{"text-align":"left"}},DU={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},BU=t("td",{style:{"text-align":"center"}},null,-1),YU={style:{"text-align":"left"}},AU=t("code",null,"图",-1),JU=t("code",null,"拓扑排序",-1),RU=t("code",null,"动态规划",-1),SU=t("code",null,"1+",-1),UU={style:{"text-align":"left"}},WU=t("td",{style:{"text-align":"center"}},"1977",-1),XU={style:{"text-align":"left"}},FU={href:"https://leetcode.com/problems/number-of-ways-to-separate-numbers",target:"_blank",rel:"noopener noreferrer"},GU=t("td",{style:{"text-align":"center"}},null,-1),TU={style:{"text-align":"left"}},QU=t("code",null,"字符串",-1),ZU=t("code",null,"动态规划",-1),$U=t("code",null,"后缀数组",-1),tW={style:{"text-align":"left"}},eW=t("td",{style:{"text-align":"center"}},"1981",-1),oW={style:{"text-align":"left"}},lW={href:"https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements",target:"_blank",rel:"noopener noreferrer"},nW=t("td",{style:{"text-align":"center"}},null,-1),sW={style:{"text-align":"left"}},dW=t("code",null,"数组",-1),_W=t("code",null,"动态规划",-1),iW=t("code",null,"矩阵",-1),cW={style:{"text-align":"left"}},aW=t("td",{style:{"text-align":"center"}},"1986",-1),rW={style:{"text-align":"left"}},hW={href:"https://leetcode.com/problems/minimum-number-of-work-sessions-to-finish-the-tasks",target:"_blank",rel:"noopener noreferrer"},uW=t("td",{style:{"text-align":"center"}},null,-1),fW={style:{"text-align":"left"}},gW=t("code",null,"位运算",-1),mW=t("code",null,"数组",-1),yW=t("code",null,"动态规划",-1),xW=t("code",null,"2+",-1),pW={style:{"text-align":"left"}},bW=t("td",{style:{"text-align":"center"}},"1987",-1),kW={style:{"text-align":"left"}},MW={href:"https://leetcode.com/problems/number-of-unique-good-subsequences",target:"_blank",rel:"noopener noreferrer"},HW=t("td",{style:{"text-align":"center"}},null,-1),IW={style:{"text-align":"left"}},wW=t("code",null,"字符串",-1),vW=t("code",null,"动态规划",-1),qW={style:{"text-align":"left"}},jW=t("td",{style:{"text-align":"center"}},"1994",-1),zW={style:{"text-align":"left"}},CW={href:"https://leetcode.com/problems/the-number-of-good-subsets",target:"_blank",rel:"noopener noreferrer"},OW=t("td",{style:{"text-align":"center"}},null,-1),LW={style:{"text-align":"left"}},EW=t("code",null,"位运算",-1),PW=t("code",null,"数组",-1),KW=t("code",null,"数学",-1),VW=t("code",null,"2+",-1),NW={style:{"text-align":"left"}},DW=t("td",{style:{"text-align":"center"}},"1997",-1),BW={style:{"text-align":"left"}},YW={href:"https://leetcode.com/problems/first-day-where-you-have-been-in-all-the-rooms",target:"_blank",rel:"noopener noreferrer"},AW=t("td",{style:{"text-align":"center"}},null,-1),JW={style:{"text-align":"left"}},RW=t("code",null,"数组",-1),SW=t("code",null,"动态规划",-1),UW={style:{"text-align":"left"}},WW=t("td",{style:{"text-align":"center"}},"2002",-1),XW={style:{"text-align":"left"}},FW={href:"https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},GW=t("td",{style:{"text-align":"center"}},null,-1),TW={style:{"text-align":"left"}},QW=t("code",null,"位运算",-1),ZW=t("code",null,"字符串",-1),$W=t("code",null,"动态规划",-1),tX=t("code",null,"2+",-1),eX={style:{"text-align":"left"}},oX=t("td",{style:{"text-align":"center"}},"2003",-1),lX={style:{"text-align":"left"}},nX={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},sX=t("td",{style:{"text-align":"center"}},null,-1),dX={style:{"text-align":"left"}},_X=t("code",null,"树",-1),iX=t("code",null,"深度优先搜索",-1),cX=t("code",null,"并查集",-1),aX=t("code",null,"1+",-1),rX={style:{"text-align":"left"}},hX=t("td",{style:{"text-align":"center"}},"2005",-1),uX={style:{"text-align":"left"}},fX={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},gX=t("td",{style:{"text-align":"center"}},null,-1),mX={style:{"text-align":"left"}},yX=t("code",null,"树",-1),xX=t("code",null,"数学",-1),pX=t("code",null,"动态规划",-1),bX=t("code",null,"2+",-1),kX={style:{"text-align":"left"}},MX=t("td",{style:{"text-align":"center"}},"2008",-1),HX={style:{"text-align":"left"}},IX={href:"https://leetcode.com/problems/maximum-earnings-from-taxi",target:"_blank",rel:"noopener noreferrer"},wX=t("td",{style:{"text-align":"center"}},null,-1),vX={style:{"text-align":"left"}},qX=t("code",null,"数组",-1),jX=t("code",null,"哈希表",-1),zX=t("code",null,"二分查找",-1),CX=t("code",null,"2+",-1),OX={style:{"text-align":"left"}},LX=t("td",{style:{"text-align":"center"}},"2019",-1),EX={style:{"text-align":"left"}},PX={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},KX=t("td",{style:{"text-align":"center"}},null,-1),VX={style:{"text-align":"left"}},NX=t("code",null,"栈",-1),DX=t("code",null,"记忆化搜索",-1),BX=t("code",null,"数组",-1),YX=t("code",null,"3+",-1),AX={style:{"text-align":"left"}},JX=t("td",{style:{"text-align":"center"}},"2035",-1),RX={style:{"text-align":"left"}},SX={href:"https://leetcode.com/problems/partition-array-into-two-arrays-to-minimize-sum-difference",target:"_blank",rel:"noopener noreferrer"},UX=t("td",{style:{"text-align":"center"}},null,-1),WX={style:{"text-align":"left"}},XX=t("code",null,"位运算",-1),FX=t("code",null,"数组",-1),GX=t("code",null,"双指针",-1),TX=t("code",null,"4+",-1),QX={style:{"text-align":"left"}},ZX=t("td",{style:{"text-align":"center"}},"2036",-1),$X={style:{"text-align":"left"}},tF={href:"https://leetcode.com/problems/maximum-alternating-subarray-sum",target:"_blank",rel:"noopener noreferrer"},eF=t("td",{style:{"text-align":"center"}},null,-1),oF={style:{"text-align":"left"}},lF=t("code",null,"数组",-1),nF=t("code",null,"动态规划",-1),sF={style:{"text-align":"left"}},dF=t("td",{style:{"text-align":"center"}},"2050",-1),_F={style:{"text-align":"left"}},iF={href:"https://leetcode.com/problems/parallel-courses-iii",target:"_blank",rel:"noopener noreferrer"},cF=t("td",{style:{"text-align":"center"}},null,-1),aF={style:{"text-align":"left"}},rF=t("code",null,"图",-1),hF=t("code",null,"拓扑排序",-1),uF=t("code",null,"数组",-1),fF=t("code",null,"1+",-1),gF={style:{"text-align":"left"}},mF=t("td",{style:{"text-align":"center"}},"2052",-1),yF={style:{"text-align":"left"}},xF={href:"https://leetcode.com/problems/minimum-cost-to-separate-sentence-into-rows",target:"_blank",rel:"noopener noreferrer"},pF=t("td",{style:{"text-align":"center"}},null,-1),bF={style:{"text-align":"left"}},kF=t("code",null,"数组",-1),MF=t("code",null,"动态规划",-1),HF={style:{"text-align":"left"}},IF=t("td",{style:{"text-align":"center"}},"2054",-1),wF={style:{"text-align":"left"}},vF={href:"https://leetcode.com/problems/two-best-non-overlapping-events",target:"_blank",rel:"noopener noreferrer"},qF=t("td",{style:{"text-align":"center"}},null,-1),jF={style:{"text-align":"left"}},zF=t("code",null,"数组",-1),CF=t("code",null,"二分查找",-1),OF=t("code",null,"动态规划",-1),LF=t("code",null,"2+",-1),EF={style:{"text-align":"left"}},PF=t("td",{style:{"text-align":"center"}},"2060",-1),KF={style:{"text-align":"left"}},VF={href:"https://leetcode.com/problems/check-if-an-original-string-exists-given-two-encoded-strings",target:"_blank",rel:"noopener noreferrer"},NF=t("td",{style:{"text-align":"center"}},null,-1),DF={style:{"text-align":"left"}},BF=t("code",null,"字符串",-1),YF=t("code",null,"动态规划",-1),AF={style:{"text-align":"left"}},JF=t("td",{style:{"text-align":"center"}},"2063",-1),RF={style:{"text-align":"left"}},SF={href:"https://leetcode.com/problems/vowels-of-all-substrings",target:"_blank",rel:"noopener noreferrer"},UF=t("td",{style:{"text-align":"center"}},null,-1),WF={style:{"text-align":"left"}},XF=t("code",null,"数学",-1),FF=t("code",null,"字符串",-1),GF=t("code",null,"动态规划",-1),TF=t("code",null,"1+",-1),QF={style:{"text-align":"left"}},ZF=t("td",{style:{"text-align":"center"}},"2086",-1),$F={style:{"text-align":"left"}},tG={href:"https://leetcode.com/problems/minimum-number-of-food-buckets-to-feed-the-hamsters",target:"_blank",rel:"noopener noreferrer"},eG=t("td",{style:{"text-align":"center"}},null,-1),oG={style:{"text-align":"left"}},lG=t("code",null,"贪心",-1),nG=t("code",null,"字符串",-1),sG=t("code",null,"动态规划",-1),dG={style:{"text-align":"left"}},_G=t("td",{style:{"text-align":"center"}},"2088",-1),iG={style:{"text-align":"left"}},cG={href:"https://leetcode.com/problems/count-fertile-pyramids-in-a-land",target:"_blank",rel:"noopener noreferrer"},aG=t("td",{style:{"text-align":"center"}},null,-1),rG={style:{"text-align":"left"}},hG=t("code",null,"数组",-1),uG=t("code",null,"动态规划",-1),fG=t("code",null,"矩阵",-1),gG={style:{"text-align":"left"}},mG=t("td",{style:{"text-align":"center"}},"2100",-1),yG={style:{"text-align":"left"}},xG={href:"https://leetcode.com/problems/find-good-days-to-rob-the-bank",target:"_blank",rel:"noopener noreferrer"},pG=t("td",{style:{"text-align":"center"}},null,-1),bG={style:{"text-align":"left"}},kG=t("code",null,"数组",-1),MG=t("code",null,"动态规划",-1),HG=t("code",null,"前缀和",-1),IG={style:{"text-align":"left"}},wG=t("td",{style:{"text-align":"center"}},"2110",-1),vG={style:{"text-align":"left"}},qG={href:"https://leetcode.com/problems/number-of-smooth-descent-periods-of-a-stock",target:"_blank",rel:"noopener noreferrer"},jG=t("td",{style:{"text-align":"center"}},null,-1),zG={style:{"text-align":"left"}},CG=t("code",null,"数组",-1),OG=t("code",null,"数学",-1),LG=t("code",null,"动态规划",-1),EG={style:{"text-align":"left"}},PG=t("td",{style:{"text-align":"center"}},"2140",-1),KG={style:{"text-align":"left"}},VG={href:"https://leetcode.com/problems/solving-questions-with-brainpower",target:"_blank",rel:"noopener noreferrer"},NG=t("td",{style:{"text-align":"center"}},null,-1),DG={style:{"text-align":"left"}},BG=t("code",null,"数组",-1),YG=t("code",null,"动态规划",-1),AG={style:{"text-align":"left"}},JG=t("td",{style:{"text-align":"center"}},"2143",-1),RG={style:{"text-align":"left"}},SG={href:"https://leetcode.com/problems/choose-numbers-from-two-arrays-in-range",target:"_blank",rel:"noopener noreferrer"},UG=t("td",{style:{"text-align":"center"}},null,-1),WG={style:{"text-align":"left"}},XG=t("code",null,"数组",-1),FG=t("code",null,"动态规划",-1),GG={style:{"text-align":"left"}},TG=t("td",{style:{"text-align":"center"}},"2147",-1),QG={style:{"text-align":"left"}},ZG={href:"https://leetcode.com/problems/number-of-ways-to-divide-a-long-corridor",target:"_blank",rel:"noopener noreferrer"},$G=t("td",{style:{"text-align":"center"}},null,-1),tT={style:{"text-align":"left"}},eT=t("code",null,"数学",-1),oT=t("code",null,"字符串",-1),lT=t("code",null,"动态规划",-1),nT={style:{"text-align":"left"}},sT=t("td",{style:{"text-align":"center"}},"2152",-1),dT={style:{"text-align":"left"}},_T={href:"https://leetcode.com/problems/minimum-number-of-lines-to-cover-points",target:"_blank",rel:"noopener noreferrer"},iT=t("td",{style:{"text-align":"center"}},null,-1),cT={style:{"text-align":"left"}},aT=t("code",null,"位运算",-1),rT=t("code",null,"几何",-1),hT=t("code",null,"数组",-1),uT=t("code",null,"5+",-1),fT={style:{"text-align":"left"}},gT=t("td",{style:{"text-align":"center"}},"2163",-1),mT={style:{"text-align":"left"}},yT={href:"https://leetcode.com/problems/minimum-difference-in-sums-after-removal-of-elements",target:"_blank",rel:"noopener noreferrer"},xT=t("td",{style:{"text-align":"center"}},null,-1),pT={style:{"text-align":"left"}},bT=t("code",null,"数组",-1),kT=t("code",null,"动态规划",-1),MT=t("code",null,"堆（优先队列）",-1),HT={style:{"text-align":"left"}},IT=t("td",{style:{"text-align":"center"}},"2167",-1),wT={style:{"text-align":"left"}},vT={href:"https://leetcode.com/problems/minimum-time-to-remove-all-cars-containing-illegal-goods",target:"_blank",rel:"noopener noreferrer"},qT=t("td",{style:{"text-align":"center"}},null,-1),jT={style:{"text-align":"left"}},zT=t("code",null,"字符串",-1),CT=t("code",null,"动态规划",-1),OT={style:{"text-align":"left"}},LT=t("td",{style:{"text-align":"center"}},"2172",-1),ET={style:{"text-align":"left"}},PT={href:"https://leetcode.com/problems/maximum-and-sum-of-array",target:"_blank",rel:"noopener noreferrer"},KT=t("td",{style:{"text-align":"center"}},null,-1),VT={style:{"text-align":"left"}},NT=t("code",null,"位运算",-1),DT=t("code",null,"数组",-1),BT=t("code",null,"动态规划",-1),YT=t("code",null,"1+",-1),AT={style:{"text-align":"left"}},JT=t("td",{style:{"text-align":"center"}},"2184",-1),RT={style:{"text-align":"left"}},ST={href:"https://leetcode.com/problems/number-of-ways-to-build-sturdy-brick-wall",target:"_blank",rel:"noopener noreferrer"},UT=t("td",{style:{"text-align":"center"}},null,-1),WT={style:{"text-align":"left"}},XT=t("code",null,"位运算",-1),FT=t("code",null,"数组",-1),GT=t("code",null,"动态规划",-1),TT=t("code",null,"1+",-1),QT={style:{"text-align":"left"}},ZT=t("td",{style:{"text-align":"center"}},"2188",-1),$T={style:{"text-align":"left"}},tQ={href:"https://leetcode.com/problems/minimum-time-to-finish-the-race",target:"_blank",rel:"noopener noreferrer"},eQ=t("td",{style:{"text-align":"center"}},null,-1),oQ={style:{"text-align":"left"}},lQ=t("code",null,"数组",-1),nQ=t("code",null,"动态规划",-1),sQ={style:{"text-align":"left"}},dQ=t("td",{style:{"text-align":"center"}},"2189",-1),_Q={style:{"text-align":"left"}},iQ={href:"https://leetcode.com/problems/number-of-ways-to-build-house-of-cards",target:"_blank",rel:"noopener noreferrer"},cQ=t("td",{style:{"text-align":"center"}},null,-1),aQ={style:{"text-align":"left"}},rQ=t("code",null,"数学",-1),hQ=t("code",null,"动态规划",-1),uQ={style:{"text-align":"left"}},fQ=t("td",{style:{"text-align":"center"}},"2209",-1),gQ={style:{"text-align":"left"}},mQ={href:"https://leetcode.com/problems/minimum-white-tiles-after-covering-with-carpets",target:"_blank",rel:"noopener noreferrer"},yQ=t("td",{style:{"text-align":"center"}},null,-1),xQ={style:{"text-align":"left"}},pQ=t("code",null,"字符串",-1),bQ=t("code",null,"动态规划",-1),kQ=t("code",null,"前缀和",-1),MQ={style:{"text-align":"left"}},HQ=t("td",{style:{"text-align":"center"}},"2218",-1),IQ={style:{"text-align":"left"}},wQ={href:"https://leetcode.com/problems/maximum-value-of-k-coins-from-piles",target:"_blank",rel:"noopener noreferrer"},vQ=t("td",{style:{"text-align":"center"}},null,-1),qQ={style:{"text-align":"left"}},jQ=t("code",null,"数组",-1),zQ=t("code",null,"动态规划",-1),CQ=t("code",null,"前缀和",-1),OQ={style:{"text-align":"left"}},LQ=t("td",{style:{"text-align":"center"}},"2222",-1),EQ={style:{"text-align":"left"}},PQ={href:"https://leetcode.com/problems/number-of-ways-to-select-buildings",target:"_blank",rel:"noopener noreferrer"},KQ=t("td",{style:{"text-align":"center"}},null,-1),VQ={style:{"text-align":"left"}},NQ=t("code",null,"字符串",-1),DQ=t("code",null,"动态规划",-1),BQ=t("code",null,"前缀和",-1),YQ={style:{"text-align":"left"}},AQ=t("td",{style:{"text-align":"center"}},"2247",-1),JQ={style:{"text-align":"left"}},RQ={href:"https://leetcode.com/problems/maximum-cost-of-trip-with-k-highways",target:"_blank",rel:"noopener noreferrer"},SQ=t("td",{style:{"text-align":"center"}},null,-1),UQ={style:{"text-align":"left"}},WQ=t("code",null,"位运算",-1),XQ=t("code",null,"图",-1),FQ=t("code",null,"动态规划",-1),GQ=t("code",null,"1+",-1),TQ={style:{"text-align":"left"}},QQ=t("td",{style:{"text-align":"center"}},"2262",-1),ZQ={style:{"text-align":"left"}},$Q={href:"https://leetcode.com/problems/total-appeal-of-a-string",target:"_blank",rel:"noopener noreferrer"},tZ={style:{"text-align":"center"}},eZ={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/2262",target:"_blank",rel:"noopener noreferrer"},oZ={style:{"text-align":"left"}},lZ=t("code",null,"哈希表",-1),nZ=t("code",null,"字符串",-1),sZ=t("code",null,"动态规划",-1),dZ={style:{"text-align":"left"}},_Z=t("td",{style:{"text-align":"center"}},"2263",-1),iZ={style:{"text-align":"left"}},cZ={href:"https://leetcode.com/problems/make-array-non-decreasing-or-non-increasing",target:"_blank",rel:"noopener noreferrer"},aZ=t("td",{style:{"text-align":"center"}},null,-1),rZ={style:{"text-align":"left"}},hZ=t("code",null,"贪心",-1),uZ=t("code",null,"动态规划",-1),fZ={style:{"text-align":"left"}},gZ=t("td",{style:{"text-align":"center"}},"2266",-1),mZ={style:{"text-align":"left"}},yZ={href:"https://leetcode.com/problems/count-number-of-texts",target:"_blank",rel:"noopener noreferrer"},xZ=t("td",{style:{"text-align":"center"}},null,-1),pZ={style:{"text-align":"left"}},bZ=t("code",null,"哈希表",-1),kZ=t("code",null,"数学",-1),MZ=t("code",null,"字符串",-1),HZ=t("code",null,"1+",-1),IZ={style:{"text-align":"left"}},wZ=t("td",{style:{"text-align":"center"}},"2267",-1),vZ={style:{"text-align":"left"}},qZ={href:"https://leetcode.com/problems/check-if-there-is-a-valid-parentheses-string-path",target:"_blank",rel:"noopener noreferrer"},jZ=t("td",{style:{"text-align":"center"}},null,-1),zZ={style:{"text-align":"left"}},CZ=t("code",null,"数组",-1),OZ=t("code",null,"动态规划",-1),LZ=t("code",null,"矩阵",-1),EZ={style:{"text-align":"left"}},PZ=t("td",{style:{"text-align":"center"}},"2272",-1),KZ={style:{"text-align":"left"}},VZ={href:"https://leetcode.com/problems/substring-with-largest-variance",target:"_blank",rel:"noopener noreferrer"},NZ=t("td",{style:{"text-align":"center"}},null,-1),DZ={style:{"text-align":"left"}},BZ=t("code",null,"数组",-1),YZ=t("code",null,"动态规划",-1),AZ={style:{"text-align":"left"}},JZ=t("td",{style:{"text-align":"center"}},"2291",-1),RZ={style:{"text-align":"left"}},SZ={href:"https://leetcode.com/problems/maximum-profit-from-trading-stocks",target:"_blank",rel:"noopener noreferrer"},UZ=t("td",{style:{"text-align":"center"}},null,-1),WZ={style:{"text-align":"left"}},XZ=t("code",null,"数组",-1),FZ=t("code",null,"动态规划",-1),GZ={style:{"text-align":"left"}},TZ=t("td",{style:{"text-align":"center"}},"2297",-1),QZ={style:{"text-align":"left"}},ZZ={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},$Z=t("td",{style:{"text-align":"center"}},null,-1),t$={style:{"text-align":"left"}},e$=t("code",null,"栈",-1),o$=t("code",null,"图",-1),l$=t("code",null,"数组",-1),n$=t("code",null,"3+",-1),s$={style:{"text-align":"left"}},d$=t("td",{style:{"text-align":"center"}},"2304",-1),_$={style:{"text-align":"left"}},i$={href:"https://leetcode.com/problems/minimum-path-cost-in-a-grid",target:"_blank",rel:"noopener noreferrer"},c$=t("td",{style:{"text-align":"center"}},null,-1),a$={style:{"text-align":"left"}},r$=t("code",null,"数组",-1),h$=t("code",null,"动态规划",-1),u$=t("code",null,"矩阵",-1),f$={style:{"text-align":"left"}},g$=t("td",{style:{"text-align":"center"}},"2305",-1),m$={style:{"text-align":"left"}},y$={href:"https://leetcode.com/problems/fair-distribution-of-cookies",target:"_blank",rel:"noopener noreferrer"},x$=t("td",{style:{"text-align":"center"}},null,-1),p$={style:{"text-align":"left"}},b$=t("code",null,"位运算",-1),k$=t("code",null,"数组",-1),M$=t("code",null,"动态规划",-1),H$=t("code",null,"2+",-1),I$={style:{"text-align":"left"}},w$=t("td",{style:{"text-align":"center"}},"2310",-1),v$={style:{"text-align":"left"}},q$={href:"https://leetcode.com/problems/sum-of-numbers-with-units-digit-k",target:"_blank",rel:"noopener noreferrer"},j$=t("td",{style:{"text-align":"center"}},null,-1),z$={style:{"text-align":"left"}},C$=t("code",null,"贪心",-1),O$=t("code",null,"数学",-1),L$=t("code",null,"动态规划",-1),E$=t("code",null,"1+",-1),P$={style:{"text-align":"left"}},K$=t("td",{style:{"text-align":"center"}},"2311",-1),V$={style:{"text-align":"left"}},N$={href:"https://leetcode.com/problems/longest-binary-subsequence-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},D$=t("td",{style:{"text-align":"center"}},null,-1),B$={style:{"text-align":"left"}},Y$=t("code",null,"贪心",-1),A$=t("code",null,"记忆化搜索",-1),J$=t("code",null,"字符串",-1),R$=t("code",null,"1+",-1),S$={style:{"text-align":"left"}},U$=t("td",{style:{"text-align":"center"}},"2312",-1),W$={style:{"text-align":"left"}},X$={href:"https://leetcode.com/problems/selling-pieces-of-wood",target:"_blank",rel:"noopener noreferrer"},F$=t("td",{style:{"text-align":"center"}},null,-1),G$={style:{"text-align":"left"}},T$=t("code",null,"记忆化搜索",-1),Q$=t("code",null,"数组",-1),Z$=t("code",null,"动态规划",-1),$$={style:{"text-align":"left"}},ttt=t("td",{style:{"text-align":"center"}},"2313",-1),ett={style:{"text-align":"left"}},ott={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},ltt=t("td",{style:{"text-align":"center"}},null,-1),ntt={style:{"text-align":"left"}},stt=t("code",null,"树",-1),dtt=t("code",null,"深度优先搜索",-1),_tt=t("code",null,"动态规划",-1),itt=t("code",null,"1+",-1),ctt={style:{"text-align":"left"}},att=t("td",{style:{"text-align":"center"}},"2318",-1),rtt={style:{"text-align":"left"}},htt={href:"https://leetcode.com/problems/number-of-distinct-roll-sequences",target:"_blank",rel:"noopener noreferrer"},utt=t("td",{style:{"text-align":"center"}},null,-1),ftt={style:{"text-align":"left"}},gtt=t("code",null,"记忆化搜索",-1),mtt=t("code",null,"动态规划",-1),ytt={style:{"text-align":"left"}},xtt=t("td",{style:{"text-align":"center"}},"2320",-1),ptt={style:{"text-align":"left"}},btt={href:"https://leetcode.com/problems/count-number-of-ways-to-place-houses",target:"_blank",rel:"noopener noreferrer"},ktt=t("td",{style:{"text-align":"center"}},null,-1),Mtt={style:{"text-align":"left"}},Htt=t("code",null,"动态规划",-1),Itt={style:{"text-align":"left"}},wtt=t("td",{style:{"text-align":"center"}},"2321",-1),vtt={style:{"text-align":"left"}},qtt={href:"https://leetcode.com/problems/maximum-score-of-spliced-array",target:"_blank",rel:"noopener noreferrer"},jtt=t("td",{style:{"text-align":"center"}},null,-1),ztt={style:{"text-align":"left"}},Ctt=t("code",null,"数组",-1),Ott=t("code",null,"动态规划",-1),Ltt={style:{"text-align":"left"}},Ett=t("td",{style:{"text-align":"center"}},"2327",-1),Ptt={style:{"text-align":"left"}},Ktt={href:"https://leetcode.com/problems/number-of-people-aware-of-a-secret",target:"_blank",rel:"noopener noreferrer"},Vtt=t("td",{style:{"text-align":"center"}},null,-1),Ntt={style:{"text-align":"left"}},Dtt=t("code",null,"队列",-1),Btt=t("code",null,"动态规划",-1),Ytt=t("code",null,"模拟",-1),Att={style:{"text-align":"left"}},Jtt=t("td",{style:{"text-align":"center"}},"2328",-1),Rtt={style:{"text-align":"left"}},Stt={href:"https://leetcode.com/problems/number-of-increasing-paths-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Utt=t("td",{style:{"text-align":"center"}},null,-1),Wtt={style:{"text-align":"left"}},Xtt=t("code",null,"深度优先搜索",-1),Ftt=t("code",null,"广度优先搜索",-1),Gtt=t("code",null,"图",-1),Ttt=t("code",null,"5+",-1),Qtt={style:{"text-align":"left"}},Ztt=t("td",{style:{"text-align":"center"}},"2338",-1),$tt={style:{"text-align":"left"}},tet={href:"https://leetcode.com/problems/count-the-number-of-ideal-arrays",target:"_blank",rel:"noopener noreferrer"},eet=t("td",{style:{"text-align":"center"}},null,-1),oet={style:{"text-align":"left"}},net=t("code",null,"数学",-1),set=t("code",null,"动态规划",-1),det=t("code",null,"组合数学",-1),_et=t("code",null,"1+",-1),iet={style:{"text-align":"left"}},cet=t("td",{style:{"text-align":"center"}},"2355",-1),aet={style:{"text-align":"left"}},ret={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},het=t("td",{style:{"text-align":"center"}},null,-1),uet={style:{"text-align":"left"}},fet=t("code",null,"栈",-1),get=t("code",null,"数组",-1),met=t("code",null,"动态规划",-1),yet=t("code",null,"1+",-1),xet={style:{"text-align":"left"}},pet=t("td",{style:{"text-align":"center"}},"2361",-1),bet={style:{"text-align":"left"}},ket={href:"https://leetcode.com/problems/minimum-costs-using-the-train-line",target:"_blank",rel:"noopener noreferrer"},Met=t("td",{style:{"text-align":"center"}},null,-1),Het={style:{"text-align":"left"}},Iet=t("code",null,"数组",-1),wet=t("code",null,"动态规划",-1),vet={style:{"text-align":"left"}},qet=t("td",{style:{"text-align":"center"}},"2369",-1),jet={style:{"text-align":"left"}},zet={href:"https://leetcode.com/problems/check-if-there-is-a-valid-partition-for-the-array",target:"_blank",rel:"noopener noreferrer"},Cet=t("td",{style:{"text-align":"center"}},null,-1),Oet={style:{"text-align":"left"}},Let=t("code",null,"数组",-1),Eet=t("code",null,"动态规划",-1),Pet={style:{"text-align":"left"}},Ket=t("td",{style:{"text-align":"center"}},"2370",-1),Vet={style:{"text-align":"left"}},Net={href:"https://leetcode.com/problems/longest-ideal-subsequence",target:"_blank",rel:"noopener noreferrer"},Det=t("td",{style:{"text-align":"center"}},null,-1),Bet={style:{"text-align":"left"}},Yet=t("code",null,"哈希表",-1),Aet=t("code",null,"字符串",-1),Jet=t("code",null,"动态规划",-1),Ret={style:{"text-align":"left"}},Set=t("td",{style:{"text-align":"center"}},"2376",-1),Uet={style:{"text-align":"left"}},Wet={href:"https://leetcode.com/problems/count-special-integers",target:"_blank",rel:"noopener noreferrer"},Xet=t("td",{style:{"text-align":"center"}},null,-1),Fet={style:{"text-align":"left"}},Get=t("code",null,"数学",-1),Tet=t("code",null,"动态规划",-1),Qet={style:{"text-align":"left"}},Zet=t("td",{style:{"text-align":"center"}},"2378",-1),$et={style:{"text-align":"left"}},tot={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},eot=t("td",{style:{"text-align":"center"}},null,-1),oot={style:{"text-align":"left"}},lot=t("code",null,"树",-1),not=t("code",null,"深度优先搜索",-1),sot=t("code",null,"动态规划",-1),dot={style:{"text-align":"left"}},_ot=t("td",{style:{"text-align":"center"}},"2380",-1),iot={style:{"text-align":"left"}},cot={href:"https://leetcode.com/problems/time-needed-to-rearrange-a-binary-string",target:"_blank",rel:"noopener noreferrer"},aot=t("td",{style:{"text-align":"center"}},null,-1),rot={style:{"text-align":"left"}},hot=t("code",null,"字符串",-1),uot=t("code",null,"动态规划",-1),fot=t("code",null,"模拟",-1),got={style:{"text-align":"left"}},mot=t("td",{style:{"text-align":"center"}},"2393",-1),yot={style:{"text-align":"left"}},xot={href:"https://leetcode.com/problems/count-strictly-increasing-subarrays",target:"_blank",rel:"noopener noreferrer"},pot=t("td",{style:{"text-align":"center"}},null,-1),bot={style:{"text-align":"left"}},kot=t("code",null,"数组",-1),Mot=t("code",null,"数学",-1),Hot=t("code",null,"动态规划",-1),Iot={style:{"text-align":"left"}},wot=t("td",{style:{"text-align":"center"}},"2400",-1),vot={style:{"text-align":"left"}},qot={href:"https://leetcode.com/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps",target:"_blank",rel:"noopener noreferrer"},jot=t("td",{style:{"text-align":"center"}},null,-1),zot={style:{"text-align":"left"}},Cot=t("code",null,"数学",-1),Oot=t("code",null,"动态规划",-1),Lot=t("code",null,"组合数学",-1),Eot={style:{"text-align":"left"}},Pot=t("td",{style:{"text-align":"center"}},"2403",-1),Kot={style:{"text-align":"left"}},Vot={href:"https://leetcode.com/problems/minimum-time-to-kill-all-monsters",target:"_blank",rel:"noopener noreferrer"},Not=t("td",{style:{"text-align":"center"}},null,-1),Dot={style:{"text-align":"left"}},Bot=t("code",null,"位运算",-1),Yot=t("code",null,"数组",-1),Aot=t("code",null,"动态规划",-1),Jot=t("code",null,"1+",-1),Rot={style:{"text-align":"left"}},Sot=t("td",{style:{"text-align":"center"}},"2407",-1),Uot={style:{"text-align":"left"}},Wot={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},Xot=t("td",{style:{"text-align":"center"}},null,-1),Fot={style:{"text-align":"left"}},Got=t("code",null,"树状数组",-1),Tot=t("code",null,"线段树",-1),Qot=t("code",null,"队列",-1),Zot=t("code",null,"4+",-1),$ot={style:{"text-align":"left"}},tlt=t("td",{style:{"text-align":"center"}},"2420",-1),elt={style:{"text-align":"left"}},olt={href:"https://leetcode.com/problems/find-all-good-indices",target:"_blank",rel:"noopener noreferrer"},llt=t("td",{style:{"text-align":"center"}},null,-1),nlt={style:{"text-align":"left"}},slt=t("code",null,"数组",-1),dlt=t("code",null,"动态规划",-1),_lt=t("code",null,"前缀和",-1),ilt={style:{"text-align":"left"}},clt=t("td",{style:{"text-align":"center"}},"2430",-1),alt={style:{"text-align":"left"}},rlt={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},hlt=t("td",{style:{"text-align":"center"}},null,-1),ult={style:{"text-align":"left"}},flt=t("code",null,"字符串",-1),glt=t("code",null,"动态规划",-1),mlt=t("code",null,"字符串匹配",-1),ylt=t("code",null,"2+",-1),xlt={style:{"text-align":"left"}},plt=t("td",{style:{"text-align":"center"}},"2431",-1),blt={style:{"text-align":"left"}},klt={href:"https://leetcode.com/problems/maximize-total-tastiness-of-purchased-fruits",target:"_blank",rel:"noopener noreferrer"},Mlt=t("td",{style:{"text-align":"center"}},null,-1),Hlt={style:{"text-align":"left"}},Ilt=t("code",null,"数组",-1),wlt=t("code",null,"动态规划",-1),vlt={style:{"text-align":"left"}},qlt=t("td",{style:{"text-align":"center"}},"2435",-1),jlt={style:{"text-align":"left"}},zlt={href:"https://leetcode.com/problems/paths-in-matrix-whose-sum-is-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},Clt=t("td",{style:{"text-align":"center"}},null,-1),Olt={style:{"text-align":"left"}},Llt=t("code",null,"数组",-1),Elt=t("code",null,"动态规划",-1),Plt=t("code",null,"矩阵",-1),Klt={style:{"text-align":"left"}},Vlt=t("td",{style:{"text-align":"center"}},"2436",-1),Nlt={style:{"text-align":"left"}},Dlt={href:"https://leetcode.com/problems/minimum-split-into-subarrays-with-gcd-greater-than-one",target:"_blank",rel:"noopener noreferrer"},Blt=t("td",{style:{"text-align":"center"}},null,-1),Ylt={style:{"text-align":"left"}},Alt=t("code",null,"贪心",-1),Jlt=t("code",null,"数组",-1),Rlt=t("code",null,"数学",-1),Slt=t("code",null,"2+",-1),Ult={style:{"text-align":"left"}},Wlt=t("td",{style:{"text-align":"center"}},"2439",-1),Xlt={style:{"text-align":"left"}},Flt={href:"https://leetcode.com/problems/minimize-maximum-of-array",target:"_blank",rel:"noopener noreferrer"},Glt=t("td",{style:{"text-align":"center"}},null,-1),Tlt={style:{"text-align":"left"}},Qlt=t("code",null,"贪心",-1),Zlt=t("code",null,"数组",-1),$lt=t("code",null,"二分查找",-1),tnt=t("code",null,"2+",-1),ent={style:{"text-align":"left"}},ont=t("td",{style:{"text-align":"center"}},"2463",-1),lnt={style:{"text-align":"left"}},nnt={href:"https://leetcode.com/problems/minimum-total-distance-traveled",target:"_blank",rel:"noopener noreferrer"},snt=t("td",{style:{"text-align":"center"}},null,-1),dnt={style:{"text-align":"left"}},_nt=t("code",null,"数组",-1),int=t("code",null,"动态规划",-1),cnt=t("code",null,"排序",-1),ant={style:{"text-align":"left"}},rnt=t("td",{style:{"text-align":"center"}},"2464",-1),hnt={style:{"text-align":"left"}},unt={href:"https://leetcode.com/problems/minimum-subarrays-in-a-valid-split",target:"_blank",rel:"noopener noreferrer"},fnt=t("td",{style:{"text-align":"center"}},null,-1),gnt={style:{"text-align":"left"}},mnt=t("code",null,"数组",-1),ynt=t("code",null,"数学",-1),xnt=t("code",null,"动态规划",-1),pnt=t("code",null,"1+",-1),bnt={style:{"text-align":"left"}},knt=t("td",{style:{"text-align":"center"}},"2466",-1),Mnt={style:{"text-align":"left"}},Hnt={href:"https://leetcode.com/problems/count-ways-to-build-good-strings",target:"_blank",rel:"noopener noreferrer"},Int=t("td",{style:{"text-align":"center"}},null,-1),wnt={style:{"text-align":"left"}},vnt=t("code",null,"动态规划",-1),qnt={style:{"text-align":"left"}},jnt=t("td",{style:{"text-align":"center"}},"2472",-1),znt={style:{"text-align":"left"}},Cnt={href:"https://leetcode.com/problems/maximum-number-of-non-overlapping-palindrome-substrings",target:"_blank",rel:"noopener noreferrer"},Ont=t("td",{style:{"text-align":"center"}},null,-1),Lnt={style:{"text-align":"left"}},Ent=t("code",null,"贪心",-1),Pnt=t("code",null,"双指针",-1),Knt=t("code",null,"字符串",-1),Vnt=t("code",null,"1+",-1),Nnt={style:{"text-align":"left"}},Dnt=t("td",{style:{"text-align":"center"}},"2478",-1),Bnt={style:{"text-align":"left"}},Ynt={href:"https://leetcode.com/problems/number-of-beautiful-partitions",target:"_blank",rel:"noopener noreferrer"},Ant=t("td",{style:{"text-align":"center"}},null,-1),Jnt={style:{"text-align":"left"}},Rnt=t("code",null,"字符串",-1),Snt=t("code",null,"动态规划",-1),Unt={style:{"text-align":"left"}},Wnt=t("td",{style:{"text-align":"center"}},"2484",-1),Xnt={style:{"text-align":"left"}},Fnt={href:"https://leetcode.com/problems/count-palindromic-subsequences",target:"_blank",rel:"noopener noreferrer"},Gnt=t("td",{style:{"text-align":"center"}},null,-1),Tnt={style:{"text-align":"left"}},Qnt=t("code",null,"字符串",-1),Znt=t("code",null,"动态规划",-1),$nt={style:{"text-align":"left"}},tst=t("td",{style:{"text-align":"center"}},"2495",-1),est={style:{"text-align":"left"}},ost={href:"https://leetcode.com/problems/number-of-subarrays-having-even-product",target:"_blank",rel:"noopener noreferrer"},lst=t("td",{style:{"text-align":"center"}},null,-1),nst={style:{"text-align":"left"}},sst=t("code",null,"数组",-1),dst=t("code",null,"数学",-1),_st=t("code",null,"动态规划",-1),ist={style:{"text-align":"left"}},cst=t("td",{style:{"text-align":"center"}},"2501",-1),ast={style:{"text-align":"left"}},rst={href:"https://leetcode.com/problems/longest-square-streak-in-an-array",target:"_blank",rel:"noopener noreferrer"},hst=t("td",{style:{"text-align":"center"}},null,-1),ust={style:{"text-align":"left"}},fst=t("code",null,"数组",-1),gst=t("code",null,"哈希表",-1),mst=t("code",null,"二分查找",-1),yst=t("code",null,"2+",-1),xst={style:{"text-align":"left"}},pst=t("td",{style:{"text-align":"center"}},"2510",-1),bst={style:{"text-align":"left"}},kst={href:"https://leetcode.com/problems/check-if-there-is-a-path-with-equal-number-of-0s-and-1s",target:"_blank",rel:"noopener noreferrer"},Mst=t("td",{style:{"text-align":"center"}},null,-1),Hst={style:{"text-align":"left"}},Ist=t("code",null,"数组",-1),wst=t("code",null,"动态规划",-1),vst=t("code",null,"矩阵",-1),qst={style:{"text-align":"left"}},jst=t("td",{style:{"text-align":"center"}},"2518",-1),zst={style:{"text-align":"left"}},Cst={href:"https://leetcode.com/problems/number-of-great-partitions",target:"_blank",rel:"noopener noreferrer"},Ost=t("td",{style:{"text-align":"center"}},null,-1),Lst={style:{"text-align":"left"}},Est=t("code",null,"数组",-1),Pst=t("code",null,"动态规划",-1),Kst={style:{"text-align":"left"}},Vst=t("td",{style:{"text-align":"center"}},"2522",-1),Nst={style:{"text-align":"left"}},Dst={href:"https://leetcode.com/problems/partition-string-into-substrings-with-values-at-most-k",target:"_blank",rel:"noopener noreferrer"},Bst=t("td",{style:{"text-align":"center"}},null,-1),Yst={style:{"text-align":"left"}},Ast=t("code",null,"贪心",-1),Jst=t("code",null,"字符串",-1),Rst=t("code",null,"动态规划",-1),Sst={style:{"text-align":"left"}},Ust=t("td",{style:{"text-align":"center"}},"2533",-1),Wst={style:{"text-align":"left"}},Xst={href:"https://leetcode.com/problems/number-of-good-binary-strings",target:"_blank",rel:"noopener noreferrer"},Fst=t("td",{style:{"text-align":"center"}},null,-1),Gst={style:{"text-align":"left"}},Tst=t("code",null,"动态规划",-1),Qst={style:{"text-align":"left"}},Zst=t("td",{style:{"text-align":"center"}},"2538",-1),$st={style:{"text-align":"left"}},tdt={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},edt=t("td",{style:{"text-align":"center"}},null,-1),odt={style:{"text-align":"left"}},ldt=t("code",null,"树",-1),ndt=t("code",null,"深度优先搜索",-1),sdt=t("code",null,"数组",-1),ddt=t("code",null,"1+",-1),_dt={style:{"text-align":"left"}},idt=t("td",{style:{"text-align":"center"}},"2547",-1),cdt={style:{"text-align":"left"}},adt={href:"https://leetcode.com/problems/minimum-cost-to-split-an-array",target:"_blank",rel:"noopener noreferrer"},rdt=t("td",{style:{"text-align":"center"}},null,-1),hdt={style:{"text-align":"left"}},udt=t("code",null,"数组",-1),fdt=t("code",null,"哈希表",-1),gdt=t("code",null,"动态规划",-1),mdt=t("code",null,"1+",-1),ydt={style:{"text-align":"left"}},xdt=t("td",{style:{"text-align":"center"}},"2552",-1),pdt={style:{"text-align":"left"}},bdt={href:"https://leetcode.com/problems/count-increasing-quadruplets",target:"_blank",rel:"noopener noreferrer"},kdt=t("td",{style:{"text-align":"center"}},null,-1),Mdt={style:{"text-align":"left"}},Hdt=t("code",null,"树状数组",-1),Idt=t("code",null,"数组",-1),wdt=t("code",null,"动态规划",-1),vdt=t("code",null,"2+",-1),qdt={style:{"text-align":"left"}},jdt=t("td",{style:{"text-align":"center"}},"2556",-1),zdt={style:{"text-align":"left"}},Cdt={href:"https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip",target:"_blank",rel:"noopener noreferrer"},Odt=t("td",{style:{"text-align":"center"}},null,-1),Ldt={style:{"text-align":"left"}},Edt=t("code",null,"深度优先搜索",-1),Pdt=t("code",null,"广度优先搜索",-1),Kdt=t("code",null,"数组",-1),Vdt=t("code",null,"2+",-1),Ndt={style:{"text-align":"left"}},Ddt=t("td",{style:{"text-align":"center"}},"2571",-1),Bdt={style:{"text-align":"left"}},Ydt={href:"https://leetcode.com/problems/minimum-operations-to-reduce-an-integer-to-0",target:"_blank",rel:"noopener noreferrer"},Adt=t("td",{style:{"text-align":"center"}},null,-1),Jdt={style:{"text-align":"left"}},Rdt=t("code",null,"贪心",-1),Sdt=t("code",null,"位运算",-1),Udt=t("code",null,"动态规划",-1),Wdt={style:{"text-align":"left"}},Xdt=t("td",{style:{"text-align":"center"}},"2572",-1),Fdt={style:{"text-align":"left"}},Gdt={href:"https://leetcode.com/problems/count-the-number-of-square-free-subsets",target:"_blank",rel:"noopener noreferrer"},Tdt=t("td",{style:{"text-align":"center"}},null,-1),Qdt={style:{"text-align":"left"}},Zdt=t("code",null,"位运算",-1),$dt=t("code",null,"数组",-1),t_t=t("code",null,"数学",-1),e_t=t("code",null,"2+",-1),o_t={style:{"text-align":"left"}},l_t=t("td",{style:{"text-align":"center"}},"2573",-1),n_t={style:{"text-align":"left"}},s_t={href:"https://leetcode.com/problems/find-the-string-with-lcp",target:"_blank",rel:"noopener noreferrer"},d_t=t("td",{style:{"text-align":"center"}},null,-1),__t={style:{"text-align":"left"}},i_t=t("code",null,"贪心",-1),c_t=t("code",null,"并查集",-1),a_t=t("code",null,"数组",-1),r_t=t("code",null,"3+",-1),h_t={style:{"text-align":"left"}},u_t=t("td",{style:{"text-align":"center"}},"2581",-1),f_t={style:{"text-align":"left"}},g_t={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},m_t=t("td",{style:{"text-align":"center"}},null,-1),y_t={style:{"text-align":"left"}},x_t=t("code",null,"树",-1),p_t=t("code",null,"深度优先搜索",-1),b_t=t("code",null,"数组",-1),k_t=t("code",null,"2+",-1),M_t={style:{"text-align":"left"}},H_t=t("td",{style:{"text-align":"center"}},"2585",-1),I_t={style:{"text-align":"left"}},w_t={href:"https://leetcode.com/problems/number-of-ways-to-earn-points",target:"_blank",rel:"noopener noreferrer"},v_t=t("td",{style:{"text-align":"center"}},null,-1),q_t={style:{"text-align":"left"}},j_t=t("code",null,"数组",-1),z_t=t("code",null,"动态规划",-1),C_t={style:{"text-align":"left"}},O_t=t("td",{style:{"text-align":"center"}},"2597",-1),L_t={style:{"text-align":"left"}},E_t={href:"https://leetcode.com/problems/the-number-of-beautiful-subsets",target:"_blank",rel:"noopener noreferrer"},P_t=t("td",{style:{"text-align":"center"}},null,-1),K_t={style:{"text-align":"left"}},V_t=t("code",null,"数组",-1),N_t=t("code",null,"哈希表",-1),D_t=t("code",null,"数学",-1),B_t=t("code",null,"4+",-1),Y_t={style:{"text-align":"left"}},A_t=t("td",{style:{"text-align":"center"}},"2606",-1),J_t={style:{"text-align":"left"}},R_t={href:"https://leetcode.com/problems/find-the-substring-with-maximum-cost",target:"_blank",rel:"noopener noreferrer"},S_t=t("td",{style:{"text-align":"center"}},null,-1),U_t={style:{"text-align":"left"}},W_t=t("code",null,"数组",-1),X_t=t("code",null,"哈希表",-1),F_t=t("code",null,"字符串",-1),G_t=t("code",null,"1+",-1),T_t={style:{"text-align":"left"}},Q_t=t("td",{style:{"text-align":"center"}},"2617",-1),Z_t={style:{"text-align":"left"}},$_t={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},tit=t("td",{style:{"text-align":"center"}},null,-1),eit={style:{"text-align":"left"}},oit=t("code",null,"栈",-1),lit=t("code",null,"广度优先搜索",-1),nit=t("code",null,"并查集",-1),sit=t("code",null,"5+",-1),dit={style:{"text-align":"left"}},_it=t("td",{style:{"text-align":"center"}},"2638",-1),iit={style:{"text-align":"left"}},cit={href:"https://leetcode.com/problems/count-the-number-of-k-free-subsets",target:"_blank",rel:"noopener noreferrer"},ait=t("td",{style:{"text-align":"center"}},null,-1),rit={style:{"text-align":"left"}},hit=t("code",null,"数组",-1),uit=t("code",null,"数学",-1),fit=t("code",null,"动态规划",-1),git=t("code",null,"2+",-1),mit={style:{"text-align":"left"}},yit=t("td",{style:{"text-align":"center"}},"2645",-1),xit={style:{"text-align":"left"}},pit={href:"https://leetcode.com/problems/minimum-additions-to-make-valid-string",target:"_blank",rel:"noopener noreferrer"},bit=t("td",{style:{"text-align":"center"}},null,-1),kit={style:{"text-align":"left"}},Mit=t("code",null,"栈",-1),Hit=t("code",null,"贪心",-1),Iit=t("code",null,"字符串",-1),wit=t("code",null,"1+",-1),vit={style:{"text-align":"left"}},qit=t("td",{style:{"text-align":"center"}},"2646",-1),jit={style:{"text-align":"left"}},zit={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},Cit=t("td",{style:{"text-align":"center"}},null,-1),Oit={style:{"text-align":"left"}},Lit=t("code",null,"树",-1),Eit=t("code",null,"深度优先搜索",-1),Pit=t("code",null,"图",-1),Kit=t("code",null,"2+",-1),Vit={style:{"text-align":"left"}},Nit=t("td",{style:{"text-align":"center"}},"2673",-1),Dit={style:{"text-align":"left"}},Bit={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yit=t("td",{style:{"text-align":"center"}},null,-1),Ait={style:{"text-align":"left"}},Jit=t("code",null,"贪心",-1),Rit=t("code",null,"树",-1),Sit=t("code",null,"数组",-1),Uit=t("code",null,"2+",-1),Wit={style:{"text-align":"left"}},Xit=t("td",{style:{"text-align":"center"}},"2681",-1),Fit={style:{"text-align":"left"}},Git={href:"https://leetcode.com/problems/power-of-heroes",target:"_blank",rel:"noopener noreferrer"},Tit=t("td",{style:{"text-align":"center"}},null,-1),Qit={style:{"text-align":"left"}},Zit=t("code",null,"数组",-1),$it=t("code",null,"数学",-1),tct=t("code",null,"动态规划",-1),ect=t("code",null,"2+",-1),oct={style:{"text-align":"left"}},lct=t("td",{style:{"text-align":"center"}},"2684",-1),nct={style:{"text-align":"left"}},sct={href:"https://leetcode.com/problems/maximum-number-of-moves-in-a-grid",target:"_blank",rel:"noopener noreferrer"},dct=t("td",{style:{"text-align":"center"}},null,-1),_ct={style:{"text-align":"left"}},ict=t("code",null,"数组",-1),cct=t("code",null,"动态规划",-1),act=t("code",null,"矩阵",-1),rct={style:{"text-align":"left"}},hct=t("td",{style:{"text-align":"center"}},"2707",-1),uct={style:{"text-align":"left"}},fct={href:"https://leetcode.com/problems/extra-characters-in-a-string",target:"_blank",rel:"noopener noreferrer"},gct=t("td",{style:{"text-align":"center"}},null,-1),mct={style:{"text-align":"left"}},yct=t("code",null,"字典树",-1),xct=t("code",null,"数组",-1),pct=t("code",null,"哈希表",-1),bct=t("code",null,"2+",-1),kct={style:{"text-align":"left"}},Mct=t("td",{style:{"text-align":"center"}},"2708",-1),Hct={style:{"text-align":"left"}},Ict={href:"https://leetcode.com/problems/maximum-strength-of-a-group",target:"_blank",rel:"noopener noreferrer"},wct=t("td",{style:{"text-align":"center"}},null,-1),vct={style:{"text-align":"left"}},qct=t("code",null,"贪心",-1),jct=t("code",null,"位运算",-1),zct=t("code",null,"数组",-1),Cct=t("code",null,"4+",-1),Oct={style:{"text-align":"left"}},Lct=t("td",{style:{"text-align":"center"}},"2712",-1),Ect={style:{"text-align":"left"}},Pct={href:"https://leetcode.com/problems/minimum-cost-to-make-all-characters-equal",target:"_blank",rel:"noopener noreferrer"},Kct=t("td",{style:{"text-align":"center"}},null,-1),Vct={style:{"text-align":"left"}},Nct=t("code",null,"贪心",-1),Dct=t("code",null,"字符串",-1),Bct=t("code",null,"动态规划",-1),Yct={style:{"text-align":"left"}},Act=t("td",{style:{"text-align":"center"}},"2713",-1),Jct={style:{"text-align":"left"}},Rct={href:"https://leetcode.com/problems/maximum-strictly-increasing-cells-in-a-matrix",target:"_blank",rel:"noopener noreferrer"},Sct=t("td",{style:{"text-align":"center"}},null,-1),Uct={style:{"text-align":"left"}},Wct=t("code",null,"记忆化搜索",-1),Xct=t("code",null,"数组",-1),Fct=t("code",null,"哈希表",-1),Gct=t("code",null,"5+",-1),Tct={style:{"text-align":"left"}},Qct=t("td",{style:{"text-align":"center"}},"2719",-1),Zct={style:{"text-align":"left"}},$ct={href:"https://leetcode.com/problems/count-of-integers",target:"_blank",rel:"noopener noreferrer"},tat=t("td",{style:{"text-align":"center"}},null,-1),eat={style:{"text-align":"left"}},oat=t("code",null,"数学",-1),lat=t("code",null,"字符串",-1),nat=t("code",null,"动态规划",-1),sat={style:{"text-align":"left"}},dat=t("td",{style:{"text-align":"center"}},"2741",-1),_at={style:{"text-align":"left"}},iat={href:"https://leetcode.com/problems/special-permutations",target:"_blank",rel:"noopener noreferrer"},cat=t("td",{style:{"text-align":"center"}},null,-1),aat={style:{"text-align":"left"}},rat=t("code",null,"位运算",-1),hat=t("code",null,"数组",-1),uat=t("code",null,"动态规划",-1),fat=t("code",null,"1+",-1),gat={style:{"text-align":"left"}},mat=t("td",{style:{"text-align":"center"}},"2742",-1),yat={style:{"text-align":"left"}},xat={href:"https://leetcode.com/problems/painting-the-walls",target:"_blank",rel:"noopener noreferrer"},pat=t("td",{style:{"text-align":"center"}},null,-1),bat={style:{"text-align":"left"}},kat=t("code",null,"数组",-1),Mat=t("code",null,"动态规划",-1),Hat={style:{"text-align":"left"}},Iat=t("td",{style:{"text-align":"center"}},"2745",-1),wat={style:{"text-align":"left"}},vat={href:"https://leetcode.com/problems/construct-the-longest-new-string",target:"_blank",rel:"noopener noreferrer"},qat=t("td",{style:{"text-align":"center"}},null,-1),jat={style:{"text-align":"left"}},zat=t("code",null,"贪心",-1),Cat=t("code",null,"脑筋急转弯",-1),Oat=t("code",null,"数学",-1),Lat=t("code",null,"1+",-1),Eat={style:{"text-align":"left"}},Pat=t("td",{style:{"text-align":"center"}},"2746",-1),Kat={style:{"text-align":"left"}},Vat={href:"https://leetcode.com/problems/decremental-string-concatenation",target:"_blank",rel:"noopener noreferrer"},Nat=t("td",{style:{"text-align":"center"}},null,-1),Dat={style:{"text-align":"left"}},Bat=t("code",null,"数组",-1),Yat=t("code",null,"字符串",-1),Aat=t("code",null,"动态规划",-1),Jat={style:{"text-align":"left"}},Rat=t("td",{style:{"text-align":"center"}},"2750",-1),Sat={style:{"text-align":"left"}},Uat={href:"https://leetcode.com/problems/ways-to-split-array-into-good-subarrays",target:"_blank",rel:"noopener noreferrer"},Wat=t("td",{style:{"text-align":"center"}},null,-1),Xat={style:{"text-align":"left"}},Fat=t("code",null,"数组",-1),Gat=t("code",null,"数学",-1),Tat=t("code",null,"动态规划",-1),Qat={style:{"text-align":"left"}},Zat=t("td",{style:{"text-align":"center"}},"2767",-1),$at={style:{"text-align":"left"}},trt={href:"https://leetcode.com/problems/partition-string-into-minimum-beautiful-substrings",target:"_blank",rel:"noopener noreferrer"},ert=t("td",{style:{"text-align":"center"}},null,-1),ort={style:{"text-align":"left"}},lrt=t("code",null,"哈希表",-1),nrt=t("code",null,"字符串",-1),srt=t("code",null,"动态规划",-1),drt=t("code",null,"1+",-1),_rt={style:{"text-align":"left"}},irt=t("td",{style:{"text-align":"center"}},"2770",-1),crt={style:{"text-align":"left"}},art={href:"https://leetcode.com/problems/maximum-number-of-jumps-to-reach-the-last-index",target:"_blank",rel:"noopener noreferrer"},rrt=t("td",{style:{"text-align":"center"}},null,-1),hrt={style:{"text-align":"left"}},urt=t("code",null,"数组",-1),frt=t("code",null,"动态规划",-1),grt={style:{"text-align":"left"}},mrt=t("td",{style:{"text-align":"center"}},"2771",-1),yrt={style:{"text-align":"left"}},xrt={href:"https://leetcode.com/problems/longest-non-decreasing-subarray-from-two-arrays",target:"_blank",rel:"noopener noreferrer"},prt=t("td",{style:{"text-align":"center"}},null,-1),brt={style:{"text-align":"left"}},krt=t("code",null,"数组",-1),Mrt=t("code",null,"动态规划",-1),Hrt={style:{"text-align":"left"}},Irt=t("td",{style:{"text-align":"center"}},"2786",-1),wrt={style:{"text-align":"left"}},vrt={href:"https://leetcode.com/problems/visit-array-positions-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},qrt=t("td",{style:{"text-align":"center"}},null,-1),jrt={style:{"text-align":"left"}},zrt=t("code",null,"数组",-1),Crt=t("code",null,"动态规划",-1),Ort={style:{"text-align":"left"}},Lrt=t("td",{style:{"text-align":"center"}},"2787",-1),Ert={style:{"text-align":"left"}},Prt={href:"https://leetcode.com/problems/ways-to-express-an-integer-as-sum-of-powers",target:"_blank",rel:"noopener noreferrer"},Krt=t("td",{style:{"text-align":"center"}},null,-1),Vrt={style:{"text-align":"left"}},Nrt=t("code",null,"动态规划",-1),Drt={style:{"text-align":"left"}},Brt=t("td",{style:{"text-align":"center"}},"2791",-1),Yrt={style:{"text-align":"left"}},Art={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Jrt=t("td",{style:{"text-align":"center"}},null,-1),Rrt={style:{"text-align":"left"}},Srt=t("code",null,"位运算",-1),Urt=t("code",null,"树",-1),Wrt=t("code",null,"深度优先搜索",-1),Xrt=t("code",null,"2+",-1),Frt={style:{"text-align":"left"}},Grt=t("td",{style:{"text-align":"center"}},"2801",-1),Trt={style:{"text-align":"left"}},Qrt={href:"https://leetcode.com/problems/count-stepping-numbers-in-range",target:"_blank",rel:"noopener noreferrer"},Zrt=t("td",{style:{"text-align":"center"}},null,-1),$rt={style:{"text-align":"left"}},tht=t("code",null,"字符串",-1),eht=t("code",null,"动态规划",-1),oht={style:{"text-align":"left"}},lht=t("td",{style:{"text-align":"center"}},"2809",-1),nht={style:{"text-align":"left"}},sht={href:"https://leetcode.com/problems/minimum-time-to-make-array-sum-at-most-x",target:"_blank",rel:"noopener noreferrer"},dht=t("td",{style:{"text-align":"center"}},null,-1),_ht={style:{"text-align":"left"}},iht=t("code",null,"数组",-1),cht=t("code",null,"动态规划",-1),aht=t("code",null,"排序",-1),rht={style:{"text-align":"left"}},hht=t("td",{style:{"text-align":"center"}},"2811",-1),uht={style:{"text-align":"left"}},fht={href:"https://leetcode.com/problems/check-if-it-is-possible-to-split-array",target:"_blank",rel:"noopener noreferrer"},ght=t("td",{style:{"text-align":"center"}},null,-1),mht={style:{"text-align":"left"}},yht=t("code",null,"贪心",-1),xht=t("code",null,"数组",-1),pht=t("code",null,"动态规划",-1),bht={style:{"text-align":"left"}},kht=t("td",{style:{"text-align":"center"}},"2826",-1),Mht={style:{"text-align":"left"}},Hht={href:"https://leetcode.com/problems/sorting-three-groups",target:"_blank",rel:"noopener noreferrer"},Iht=t("td",{style:{"text-align":"center"}},null,-1),wht={style:{"text-align":"left"}},vht=t("code",null,"数组",-1),qht=t("code",null,"二分查找",-1),jht=t("code",null,"动态规划",-1),zht={style:{"text-align":"left"}},Cht=t("td",{style:{"text-align":"center"}},"2827",-1),Oht={style:{"text-align":"left"}},Lht={href:"https://leetcode.com/problems/number-of-beautiful-integers-in-the-range",target:"_blank",rel:"noopener noreferrer"},Eht=t("td",{style:{"text-align":"center"}},null,-1),Pht={style:{"text-align":"left"}},Kht=t("code",null,"数学",-1),Vht=t("code",null,"动态规划",-1),Nht={style:{"text-align":"left"}},Dht=t("td",{style:{"text-align":"center"}},"2830",-1),Bht={style:{"text-align":"left"}},Yht={href:"https://leetcode.com/problems/maximize-the-profit-as-the-salesman",target:"_blank",rel:"noopener noreferrer"},Aht=t("td",{style:{"text-align":"center"}},null,-1),Jht={style:{"text-align":"left"}},Rht=t("code",null,"数组",-1),Sht=t("code",null,"哈希表",-1),Uht=t("code",null,"二分查找",-1),Wht=t("code",null,"2+",-1),Xht={style:{"text-align":"left"}},Fht=t("td",{style:{"text-align":"center"}},"2836",-1),Ght={style:{"text-align":"left"}},Tht={href:"https://leetcode.com/problems/maximize-value-of-function-in-a-ball-passing-game",target:"_blank",rel:"noopener noreferrer"},Qht=t("td",{style:{"text-align":"center"}},null,-1),Zht={style:{"text-align":"left"}},$ht=t("code",null,"位运算",-1),t1t=t("code",null,"数组",-1),e1t=t("code",null,"动态规划",-1),o1t={style:{"text-align":"left"}},l1t=t("td",{style:{"text-align":"center"}},"2850",-1),n1t={style:{"text-align":"left"}},s1t={href:"https://leetcode.com/problems/minimum-moves-to-spread-stones-over-grid",target:"_blank",rel:"noopener noreferrer"},d1t=t("td",{style:{"text-align":"center"}},null,-1),_1t={style:{"text-align":"left"}},i1t=t("code",null,"广度优先搜索",-1),c1t=t("code",null,"数组",-1),a1t=t("code",null,"动态规划",-1),r1t=t("code",null,"1+",-1),h1t={style:{"text-align":"left"}},u1t=t("td",{style:{"text-align":"center"}},"2851",-1),f1t={style:{"text-align":"left"}},g1t={href:"https://leetcode.com/problems/string-transformation",target:"_blank",rel:"noopener noreferrer"},m1t=t("td",{style:{"text-align":"center"}},null,-1),y1t={style:{"text-align":"left"}},x1t=t("code",null,"数学",-1),p1t=t("code",null,"字符串",-1),b1t=t("code",null,"动态规划",-1),k1t=t("code",null,"1+",-1),M1t={style:{"text-align":"left"}},H1t=t("td",{style:{"text-align":"center"}},"2858",-1),I1t={style:{"text-align":"left"}},w1t={href:"https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable",target:"_blank",rel:"noopener noreferrer"},v1t=t("td",{style:{"text-align":"center"}},null,-1),q1t={style:{"text-align":"left"}},j1t=t("code",null,"深度优先搜索",-1),z1t=t("code",null,"广度优先搜索",-1),C1t=t("code",null,"图",-1),O1t=t("code",null,"1+",-1),L1t={style:{"text-align":"left"}},E1t=t("td",{style:{"text-align":"center"}},"2867",-1),P1t={style:{"text-align":"left"}},K1t={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},V1t=t("td",{style:{"text-align":"center"}},null,-1),N1t={style:{"text-align":"left"}},D1t=t("code",null,"树",-1),B1t=t("code",null,"深度优先搜索",-1),Y1t=t("code",null,"数学",-1),A1t=t("code",null,"2+",-1),J1t={style:{"text-align":"left"}},R1t=t("td",{style:{"text-align":"center"}},"2876",-1),S1t={style:{"text-align":"left"}},U1t={href:"https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph",target:"_blank",rel:"noopener noreferrer"},W1t=t("td",{style:{"text-align":"center"}},null,-1),X1t={style:{"text-align":"left"}},F1t=t("code",null,"图",-1),G1t=t("code",null,"记忆化搜索",-1),T1t=t("code",null,"动态规划",-1),Q1t={style:{"text-align":"left"}},Z1t=t("td",{style:{"text-align":"center"}},"2892",-1),$1t={style:{"text-align":"left"}},tut={href:"https://leetcode.com/problems/minimizing-array-after-replacing-pairs-with-their-product",target:"_blank",rel:"noopener noreferrer"},eut=t("td",{style:{"text-align":"center"}},null,-1),out={style:{"text-align":"left"}},lut=t("code",null,"贪心",-1),nut=t("code",null,"数组",-1),sut=t("code",null,"动态规划",-1),dut={style:{"text-align":"left"}},_ut=t("td",{style:{"text-align":"center"}},"2896",-1),iut={style:{"text-align":"left"}},cut={href:"https://leetcode.com/problems/apply-operations-to-make-two-strings-equal",target:"_blank",rel:"noopener noreferrer"},aut=t("td",{style:{"text-align":"center"}},null,-1),rut={style:{"text-align":"left"}},hut=t("code",null,"字符串",-1),uut=t("code",null,"动态规划",-1),fut={style:{"text-align":"left"}},gut=t("td",{style:{"text-align":"center"}},"2900",-1),mut={style:{"text-align":"left"}},yut={href:"https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-i",target:"_blank",rel:"noopener noreferrer"},xut=t("td",{style:{"text-align":"center"}},null,-1),put={style:{"text-align":"left"}},but=t("code",null,"贪心",-1),kut=t("code",null,"数组",-1),Mut=t("code",null,"字符串",-1),Hut=t("code",null,"1+",-1),Iut={style:{"text-align":"left"}},wut=t("td",{style:{"text-align":"center"}},"2901",-1),vut={style:{"text-align":"left"}},qut={href:"https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},jut=t("td",{style:{"text-align":"center"}},null,-1),zut={style:{"text-align":"left"}},Cut=t("code",null,"数组",-1),Out=t("code",null,"字符串",-1),Lut=t("code",null,"动态规划",-1),Eut={style:{"text-align":"left"}},Put=t("td",{style:{"text-align":"center"}},"2902",-1),Kut={style:{"text-align":"left"}},Vut={href:"https://leetcode.com/problems/count-of-sub-multisets-with-bounded-sum",target:"_blank",rel:"noopener noreferrer"},Nut=t("td",{style:{"text-align":"center"}},null,-1),Dut={style:{"text-align":"left"}},But=t("code",null,"数组",-1),Yut=t("code",null,"哈希表",-1),Aut=t("code",null,"动态规划",-1),Jut=t("code",null,"1+",-1),Rut={style:{"text-align":"left"}},Sut=t("td",{style:{"text-align":"center"}},"2911",-1),Uut={style:{"text-align":"left"}},Wut={href:"https://leetcode.com/problems/minimum-changes-to-make-k-semi-palindromes",target:"_blank",rel:"noopener noreferrer"},Xut=t("td",{style:{"text-align":"center"}},null,-1),Fut={style:{"text-align":"left"}},Gut=t("code",null,"双指针",-1),Tut=t("code",null,"字符串",-1),Qut=t("code",null,"动态规划",-1),Zut={style:{"text-align":"left"}},$ut=t("td",{style:{"text-align":"center"}},"2912",-1),tft={style:{"text-align":"left"}},eft={href:"https://leetcode.com/problems/number-of-ways-to-reach-destination-in-the-grid",target:"_blank",rel:"noopener noreferrer"},oft=t("td",{style:{"text-align":"center"}},null,-1),lft={style:{"text-align":"left"}},nft=t("code",null,"数学",-1),sft=t("code",null,"动态规划",-1),dft=t("code",null,"组合数学",-1),_ft={style:{"text-align":"left"}},ift=t("td",{style:{"text-align":"center"}},"2915",-1),cft={style:{"text-align":"left"}},aft={href:"https://leetcode.com/problems/length-of-the-longest-subsequence-that-sums-to-target",target:"_blank",rel:"noopener noreferrer"},rft=t("td",{style:{"text-align":"center"}},null,-1),hft={style:{"text-align":"left"}},uft=t("code",null,"数组",-1),fft=t("code",null,"动态规划",-1),gft={style:{"text-align":"left"}},mft=t("td",{style:{"text-align":"center"}},"2916",-1),yft={style:{"text-align":"left"}},xft={href:"https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-ii",target:"_blank",rel:"noopener noreferrer"},pft=t("td",{style:{"text-align":"center"}},null,-1),bft={style:{"text-align":"left"}},kft=t("code",null,"树状数组",-1),Mft=t("code",null,"线段树",-1),Hft=t("code",null,"数组",-1),Ift=t("code",null,"1+",-1),wft={style:{"text-align":"left"}},vft=t("td",{style:{"text-align":"center"}},"2919",-1),qft={style:{"text-align":"left"}},jft={href:"https://leetcode.com/problems/minimum-increment-operations-to-make-array-beautiful",target:"_blank",rel:"noopener noreferrer"},zft=t("td",{style:{"text-align":"center"}},null,-1),Cft={style:{"text-align":"left"}},Oft=t("code",null,"数组",-1),Lft=t("code",null,"动态规划",-1),Eft={style:{"text-align":"left"}},Pft=t("td",{style:{"text-align":"center"}},"2920",-1),Kft={style:{"text-align":"left"}},Vft={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},Nft=t("td",{style:{"text-align":"center"}},null,-1),Dft={style:{"text-align":"left"}},Bft=t("code",null,"位运算",-1),Yft=t("code",null,"树",-1),Aft=t("code",null,"深度优先搜索",-1),Jft=t("code",null,"2+",-1),Rft={style:{"text-align":"left"}},Sft=t("td",{style:{"text-align":"center"}},"2925",-1),Uft={style:{"text-align":"left"}},Wft={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},Xft=t("td",{style:{"text-align":"center"}},null,-1),Fft={style:{"text-align":"left"}},Gft=t("code",null,"树",-1),Tft=t("code",null,"深度优先搜索",-1),Qft=t("code",null,"动态规划",-1),Zft={style:{"text-align":"left"}},$ft=t("td",{style:{"text-align":"center"}},"2926",-1),tgt={style:{"text-align":"left"}},egt={href:"https://leetcode.com/problems/maximum-balanced-subsequence-sum",target:"_blank",rel:"noopener noreferrer"},ogt=t("td",{style:{"text-align":"center"}},null,-1),lgt={style:{"text-align":"left"}},ngt=t("code",null,"树状数组",-1),sgt=t("code",null,"线段树",-1),dgt=t("code",null,"数组",-1),_gt=t("code",null,"2+",-1),igt={style:{"text-align":"left"}},cgt=t("td",{style:{"text-align":"center"}},"2930",-1),agt={style:{"text-align":"left"}},rgt={href:"https://leetcode.com/problems/number-of-strings-which-can-be-rearranged-to-contain-substring",target:"_blank",rel:"noopener noreferrer"},hgt=t("td",{style:{"text-align":"center"}},null,-1),ugt={style:{"text-align":"left"}},fgt=t("code",null,"数学",-1),ggt=t("code",null,"动态规划",-1),mgt=t("code",null,"组合数学",-1),ygt={style:{"text-align":"left"}},xgt=t("td",{style:{"text-align":"center"}},"2944",-1),pgt={style:{"text-align":"left"}},bgt={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits",target:"_blank",rel:"noopener noreferrer"},kgt=t("td",{style:{"text-align":"center"}},null,-1),Mgt={style:{"text-align":"left"}},Hgt=t("code",null,"队列",-1),Igt=t("code",null,"数组",-1),wgt=t("code",null,"动态规划",-1),vgt=t("code",null,"2+",-1),qgt={style:{"text-align":"left"}},jgt=t("td",{style:{"text-align":"center"}},"2945",-1),zgt={style:{"text-align":"left"}},Cgt={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},Ogt=t("td",{style:{"text-align":"center"}},null,-1),Lgt={style:{"text-align":"left"}},Egt=t("code",null,"栈",-1),Pgt=t("code",null,"队列",-1),Kgt=t("code",null,"数组",-1),Vgt=t("code",null,"4+",-1),Ngt={style:{"text-align":"left"}},Dgt=t("td",{style:{"text-align":"center"}},"2957",-1),Bgt={style:{"text-align":"left"}},Ygt={href:"https://leetcode.com/problems/remove-adjacent-almost-equal-characters",target:"_blank",rel:"noopener noreferrer"},Agt=t("td",{style:{"text-align":"center"}},null,-1),Jgt={style:{"text-align":"left"}},Rgt=t("code",null,"贪心",-1),Sgt=t("code",null,"字符串",-1),Ugt=t("code",null,"动态规划",-1),Wgt={style:{"text-align":"left"}},Xgt=t("td",{style:{"text-align":"center"}},"2969",-1),Fgt={style:{"text-align":"left"}},Ggt={href:"https://leetcode.com/problems/minimum-number-of-coins-for-fruits-ii",target:"_blank",rel:"noopener noreferrer"},Tgt=t("td",{style:{"text-align":"center"}},null,-1),Qgt={style:{"text-align":"left"}},Zgt=t("code",null,"队列",-1),$gt=t("code",null,"数组",-1),tmt=t("code",null,"动态规划",-1),emt=t("code",null,"2+",-1),omt={style:{"text-align":"left"}},lmt=t("td",{style:{"text-align":"center"}},"2973",-1),nmt={style:{"text-align":"left"}},smt={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},dmt=t("td",{style:{"text-align":"center"}},null,-1),_mt={style:{"text-align":"left"}},imt=t("code",null,"树",-1),cmt=t("code",null,"深度优先搜索",-1),amt=t("code",null,"动态规划",-1),rmt=t("code",null,"2+",-1),hmt={style:{"text-align":"left"}},umt=t("td",{style:{"text-align":"center"}},"2977",-1),fmt={style:{"text-align":"left"}},gmt={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},mmt=t("td",{style:{"text-align":"center"}},null,-1),ymt={style:{"text-align":"left"}},xmt=t("code",null,"图",-1),pmt=t("code",null,"字典树",-1),bmt=t("code",null,"数组",-1),kmt=t("code",null,"3+",-1),Mmt={style:{"text-align":"left"}},Hmt=t("td",{style:{"text-align":"center"}},"2979",-1),Imt={style:{"text-align":"left"}},wmt={href:"https://leetcode.com/problems/most-expensive-item-that-can-not-be-bought",target:"_blank",rel:"noopener noreferrer"},vmt=t("td",{style:{"text-align":"center"}},null,-1),qmt={style:{"text-align":"left"}},jmt=t("code",null,"数学",-1),zmt=t("code",null,"动态规划",-1),Cmt=t("code",null,"数论",-1),Omt={style:{"text-align":"left"}},Lmt=t("td",{style:{"text-align":"center"}},"2992",-1),Emt={style:{"text-align":"left"}},Pmt={href:"https://leetcode.com/problems/number-of-self-divisible-permutations",target:"_blank",rel:"noopener noreferrer"},Kmt=t("td",{style:{"text-align":"center"}},null,-1),Vmt={style:{"text-align":"left"}},Nmt=t("code",null,"位运算",-1),Dmt=t("code",null,"数组",-1),Bmt=t("code",null,"动态规划",-1),Ymt=t("code",null,"2+",-1),Amt={style:{"text-align":"left"}},Jmt=t("td",{style:{"text-align":"center"}},"2998",-1),Rmt={style:{"text-align":"left"}},Smt={href:"https://leetcode.com/problems/minimum-number-of-operations-to-make-x-and-y-equal",target:"_blank",rel:"noopener noreferrer"},Umt=t("td",{style:{"text-align":"center"}},null,-1),Wmt={style:{"text-align":"left"}},Xmt=t("code",null,"广度优先搜索",-1),Fmt=t("code",null,"记忆化搜索",-1),Gmt=t("code",null,"动态规划",-1),Tmt={style:{"text-align":"left"}},Qmt=t("td",{style:{"text-align":"center"}},"2999",-1),Zmt={style:{"text-align":"left"}},$mt={href:"https://leetcode.com/problems/count-the-number-of-powerful-integers",target:"_blank",rel:"noopener noreferrer"},tyt=t("td",{style:{"text-align":"center"}},null,-1),eyt={style:{"text-align":"left"}},oyt=t("code",null,"数学",-1),lyt=t("code",null,"字符串",-1),nyt=t("code",null,"动态规划",-1),syt={style:{"text-align":"left"}},dyt=t("td",{style:{"text-align":"center"}},"3003",-1),_yt={style:{"text-align":"left"}},iyt={href:"https://leetcode.com/problems/maximize-the-number-of-partitions-after-operations",target:"_blank",rel:"noopener noreferrer"},cyt=t("td",{style:{"text-align":"center"}},null,-1),ayt={style:{"text-align":"left"}},ryt=t("code",null,"位运算",-1),hyt=t("code",null,"字符串",-1),uyt=t("code",null,"动态规划",-1),fyt=t("code",null,"1+",-1),gyt={style:{"text-align":"left"}},myt=t("td",{style:{"text-align":"center"}},"3004",-1),yyt={style:{"text-align":"left"}},xyt={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},pyt=t("td",{style:{"text-align":"center"}},null,-1),byt={style:{"text-align":"left"}},kyt=t("code",null,"树",-1),Myt=t("code",null,"深度优先搜索",-1),Hyt=t("code",null,"数组",-1),Iyt=t("code",null,"1+",-1),wyt={style:{"text-align":"left"}},vyt=t("td",{style:{"text-align":"center"}},"3007",-1),qyt={style:{"text-align":"left"}},jyt={href:"https://leetcode.com/problems/maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",target:"_blank",rel:"noopener noreferrer"},zyt=t("td",{style:{"text-align":"center"}},null,-1),Cyt={style:{"text-align":"left"}},Oyt=t("code",null,"位运算",-1),Lyt=t("code",null,"二分查找",-1),Eyt=t("code",null,"动态规划",-1),Pyt={style:{"text-align":"left"}},Kyt=t("td",{style:{"text-align":"center"}},"3018",-1),Vyt={style:{"text-align":"left"}},Nyt={href:"https://leetcode.com/problems/maximum-number-of-removal-queries-that-can-be-processed-i",target:"_blank",rel:"noopener noreferrer"},Dyt=t("td",{style:{"text-align":"center"}},null,-1),Byt={style:{"text-align":"left"}},Yyt=t("code",null,"数组",-1),Ayt=t("code",null,"动态规划",-1),Jyt={style:{"text-align":"left"}},Ryt=t("td",{style:{"text-align":"center"}},"3032",-1),Syt={style:{"text-align":"left"}},Uyt={href:"https://leetcode.com/problems/count-numbers-with-unique-digits-ii",target:"_blank",rel:"noopener noreferrer"},Wyt=t("td",{style:{"text-align":"center"}},null,-1),Xyt={style:{"text-align":"left"}},Fyt=t("code",null,"哈希表",-1),Gyt=t("code",null,"数学",-1),Tyt=t("code",null,"动态规划",-1),Qyt={style:{"text-align":"left"}},Zyt=t("td",{style:{"text-align":"center"}},"3040",-1),$yt={style:{"text-align":"left"}},t3t={href:"https://leetcode.com/problems/maximum-number-of-operations-with-the-same-score-ii",target:"_blank",rel:"noopener noreferrer"},e3t=t("td",{style:{"text-align":"center"}},null,-1),o3t={style:{"text-align":"left"}},l3t=t("code",null,"记忆化搜索",-1),n3t=t("code",null,"数组",-1),s3t=t("code",null,"动态规划",-1),d3t={style:{"text-align":"left"}},_3t=t("td",{style:{"text-align":"center"}},"3041",-1),i3t={style:{"text-align":"left"}},c3t={href:"https://leetcode.com/problems/maximize-consecutive-elements-in-an-array-after-modification",target:"_blank",rel:"noopener noreferrer"},a3t=t("td",{style:{"text-align":"center"}},null,-1),r3t={style:{"text-align":"left"}},h3t=t("code",null,"数组",-1),u3t=t("code",null,"动态规划",-1),f3t=t("code",null,"排序",-1),g3t={style:{"text-align":"left"}},m3t=t("td",{style:{"text-align":"center"}},"3068",-1),y3t={style:{"text-align":"left"}},x3t={href:"https://leetcode.com/problems/find-the-maximum-sum-of-node-values",target:"_blank",rel:"noopener noreferrer"},p3t=t("td",{style:{"text-align":"center"}},null,-1),b3t={style:{"text-align":"left"}},k3t=t("code",null,"贪心",-1),M3t=t("code",null,"位运算",-1),H3t=t("code",null,"树",-1),I3t=t("code",null,"3+",-1),w3t={style:{"text-align":"left"}},v3t=t("td",{style:{"text-align":"center"}},"3077",-1),q3t={style:{"text-align":"left"}},j3t={href:"https://leetcode.com/problems/maximum-strength-of-k-disjoint-subarrays",target:"_blank",rel:"noopener noreferrer"},z3t=t("td",{style:{"text-align":"center"}},null,-1),C3t={style:{"text-align":"left"}},O3t=t("code",null,"数组",-1),L3t=t("code",null,"动态规划",-1),E3t=t("code",null,"前缀和",-1),P3t={style:{"text-align":"left"}},K3t=t("td",{style:{"text-align":"center"}},"3082",-1),V3t={style:{"text-align":"left"}},N3t={href:"https://leetcode.com/problems/find-the-sum-of-the-power-of-all-subsequences",target:"_blank",rel:"noopener noreferrer"},D3t=t("td",{style:{"text-align":"center"}},null,-1),B3t={style:{"text-align":"left"}},Y3t=t("code",null,"数组",-1),A3t=t("code",null,"动态规划",-1),J3t={style:{"text-align":"left"}},R3t=t("td",{style:{"text-align":"center"}},"3098",-1),S3t={style:{"text-align":"left"}},U3t={href:"https://leetcode.com/problems/find-the-sum-of-subsequence-powers",target:"_blank",rel:"noopener noreferrer"},W3t=t("td",{style:{"text-align":"center"}},null,-1),X3t={style:{"text-align":"left"}},F3t=t("code",null,"数组",-1),G3t=t("code",null,"动态规划",-1),T3t=t("code",null,"排序",-1),Q3t={style:{"text-align":"left"}},Z3t=t("td",{style:{"text-align":"center"}},"3117",-1),$3t={style:{"text-align":"left"}},txt={href:"https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array",target:"_blank",rel:"noopener noreferrer"},ext=t("td",{style:{"text-align":"center"}},null,-1),oxt={style:{"text-align":"left"}},lxt=t("code",null,"位运算",-1),nxt=t("code",null,"线段树",-1),sxt=t("code",null,"队列",-1),dxt=t("code",null,"3+",-1),_xt={style:{"text-align":"left"}},ixt=t("td",{style:{"text-align":"center"}},"3122",-1),cxt={style:{"text-align":"left"}},axt={href:"https://leetcode.com/problems/minimum-number-of-operations-to-satisfy-conditions",target:"_blank",rel:"noopener noreferrer"},rxt=t("td",{style:{"text-align":"center"}},null,-1),hxt={style:{"text-align":"left"}},uxt=t("code",null,"数组",-1),fxt=t("code",null,"动态规划",-1),gxt=t("code",null,"矩阵",-1),mxt={style:{"text-align":"left"}},yxt=t("td",{style:{"text-align":"center"}},"3129",-1),xxt={style:{"text-align":"left"}},pxt={href:"https://leetcode.com/problems/find-all-possible-stable-binary-arrays-i",target:"_blank",rel:"noopener noreferrer"},bxt=t("td",{style:{"text-align":"center"}},null,-1),kxt={style:{"text-align":"left"}},Mxt=t("code",null,"动态规划",-1),Hxt=t("code",null,"前缀和",-1),Ixt={style:{"text-align":"left"}},wxt=t("td",{style:{"text-align":"center"}},"3130",-1),vxt={style:{"text-align":"left"}},qxt={href:"https://leetcode.com/problems/find-all-possible-stable-binary-arrays-ii",target:"_blank",rel:"noopener noreferrer"},jxt=t("td",{style:{"text-align":"center"}},null,-1),zxt={style:{"text-align":"left"}},Cxt=t("code",null,"动态规划",-1),Oxt=t("code",null,"前缀和",-1),Lxt={style:{"text-align":"left"}},Ext=t("td",{style:{"text-align":"center"}},"3135",-1),Pxt={style:{"text-align":"left"}},Kxt={href:"https://leetcode.com/problems/equalize-strings-by-adding-or-removing-characters-at-ends",target:"_blank",rel:"noopener noreferrer"},Vxt=t("td",{style:{"text-align":"center"}},null,-1),Nxt={style:{"text-align":"left"}},Dxt=t("code",null,"字符串",-1),Bxt=t("code",null,"二分查找",-1),Yxt=t("code",null,"动态规划",-1),Axt=t("code",null,"2+",-1),Jxt={style:{"text-align":"left"}},Rxt=t("td",{style:{"text-align":"center"}},"3144",-1),Sxt={style:{"text-align":"left"}},Uxt={href:"https://leetcode.com/problems/minimum-substring-partition-of-equal-character-frequency",target:"_blank",rel:"noopener noreferrer"},Wxt=t("td",{style:{"text-align":"center"}},null,-1),Xxt={style:{"text-align":"left"}},Fxt=t("code",null,"哈希表",-1),Gxt=t("code",null,"字符串",-1),Txt=t("code",null,"动态规划",-1),Qxt=t("code",null,"1+",-1),Zxt={style:{"text-align":"left"}},$xt=t("td",{style:{"text-align":"center"}},"3148",-1),t2t={style:{"text-align":"left"}},e2t={href:"https://leetcode.com/problems/maximum-difference-score-in-a-grid",target:"_blank",rel:"noopener noreferrer"},o2t=t("td",{style:{"text-align":"center"}},null,-1),l2t={style:{"text-align":"left"}},n2t=t("code",null,"数组",-1),s2t=t("code",null,"动态规划",-1),d2t=t("code",null,"矩阵",-1),_2t={style:{"text-align":"left"}},i2t=t("td",{style:{"text-align":"center"}},"3149",-1),c2t={style:{"text-align":"left"}},a2t={href:"https://leetcode.com/problems/find-the-minimum-cost-array-permutation",target:"_blank",rel:"noopener noreferrer"},r2t=t("td",{style:{"text-align":"center"}},null,-1),h2t={style:{"text-align":"left"}},u2t=t("code",null,"位运算",-1),f2t=t("code",null,"数组",-1),g2t=t("code",null,"动态规划",-1),m2t=t("code",null,"1+",-1),y2t={style:{"text-align":"left"}},x2t=t("td",{style:{"text-align":"center"}},"3154",-1),p2t={style:{"text-align":"left"}},b2t={href:"https://leetcode.com/problems/find-number-of-ways-to-reach-the-k-th-stair",target:"_blank",rel:"noopener noreferrer"},k2t=t("td",{style:{"text-align":"center"}},null,-1),M2t={style:{"text-align":"left"}},H2t=t("code",null,"位运算",-1),I2t=t("code",null,"记忆化搜索",-1),w2t=t("code",null,"数学",-1),v2t=t("code",null,"2+",-1),q2t={style:{"text-align":"left"}},j2t=t("td",{style:{"text-align":"center"}},"3165",-1),z2t={style:{"text-align":"left"}},C2t={href:"https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},O2t=t("td",{style:{"text-align":"center"}},null,-1),L2t={style:{"text-align":"left"}},E2t=t("code",null,"线段树",-1),P2t=t("code",null,"数组",-1),K2t=t("code",null,"分治",-1),V2t=t("code",null,"1+",-1),N2t={style:{"text-align":"left"}},D2t=t("td",{style:{"text-align":"center"}},"3176",-1),B2t={style:{"text-align":"left"}},Y2t={href:"https://leetcode.com/problems/find-the-maximum-length-of-a-good-subsequence-i",target:"_blank",rel:"noopener noreferrer"},A2t=t("td",{style:{"text-align":"center"}},null,-1),J2t={style:{"text-align":"left"}},R2t=t("code",null,"数组",-1),S2t=t("code",null,"哈希表",-1),U2t=t("code",null,"动态规划",-1),W2t={style:{"text-align":"left"}},X2t=t("td",{style:{"text-align":"center"}},"3177",-1),F2t={style:{"text-align":"left"}},G2t={href:"https://leetcode.com/problems/find-the-maximum-length-of-a-good-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},T2t=t("td",{style:{"text-align":"center"}},null,-1),Q2t={style:{"text-align":"left"}},Z2t=t("code",null,"数组",-1),$2t=t("code",null,"哈希表",-1),t4t=t("code",null,"动态规划",-1),e4t={style:{"text-align":"left"}},o4t=t("td",{style:{"text-align":"center"}},"3180",-1),l4t={style:{"text-align":"left"}},n4t={href:"https://leetcode.com/problems/maximum-total-reward-using-operations-i",target:"_blank",rel:"noopener noreferrer"},s4t=t("td",{style:{"text-align":"center"}},null,-1),d4t={style:{"text-align":"left"}},_4t=t("code",null,"数组",-1),i4t=t("code",null,"动态规划",-1),c4t={style:{"text-align":"left"}},a4t=t("td",{style:{"text-align":"center"}},"3181",-1),r4t={style:{"text-align":"left"}},h4t={href:"https://leetcode.com/problems/maximum-total-reward-using-operations-ii",target:"_blank",rel:"noopener noreferrer"},u4t=t("td",{style:{"text-align":"center"}},null,-1),f4t={style:{"text-align":"left"}},g4t=t("code",null,"位运算",-1),m4t=t("code",null,"数组",-1),y4t=t("code",null,"动态规划",-1),x4t={style:{"text-align":"left"}},p4t=t("td",{style:{"text-align":"center"}},"3183",-1),b4t={style:{"text-align":"left"}},k4t={href:"https://leetcode.com/problems/the-number-of-ways-to-make-the-sum",target:"_blank",rel:"noopener noreferrer"},M4t=t("td",{style:{"text-align":"center"}},null,-1),H4t={style:{"text-align":"left"}},I4t=t("code",null,"数组",-1),w4t=t("code",null,"动态规划",-1),v4t={style:{"text-align":"left"}},q4t=t("td",{style:{"text-align":"center"}},"3186",-1),j4t={style:{"text-align":"left"}},z4t={href:"https://leetcode.com/problems/maximum-total-damage-with-spell-casting",target:"_blank",rel:"noopener noreferrer"},C4t=t("td",{style:{"text-align":"center"}},null,-1),O4t={style:{"text-align":"left"}},L4t=t("code",null,"数组",-1),E4t=t("code",null,"哈希表",-1),P4t=t("code",null,"双指针",-1),K4t=t("code",null,"4+",-1),V4t={style:{"text-align":"left"}},N4t=t("td",{style:{"text-align":"center"}},"3192",-1),D4t={style:{"text-align":"left"}},B4t={href:"https://leetcode.com/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-ii",target:"_blank",rel:"noopener noreferrer"},Y4t=t("td",{style:{"text-align":"center"}},null,-1),A4t={style:{"text-align":"left"}},J4t=t("code",null,"贪心",-1),R4t=t("code",null,"数组",-1),S4t=t("code",null,"动态规划",-1),U4t={style:{"text-align":"left"}},W4t=t("td",{style:{"text-align":"center"}},"3193",-1),X4t={style:{"text-align":"left"}},F4t={href:"https://leetcode.com/problems/count-the-number-of-inversions",target:"_blank",rel:"noopener noreferrer"},G4t=t("td",{style:{"text-align":"center"}},null,-1),T4t={style:{"text-align":"left"}},Q4t=t("code",null,"数组",-1),Z4t=t("code",null,"动态规划",-1),$4t={style:{"text-align":"left"}},tpt=t("td",{style:{"text-align":"center"}},"3196",-1),ept={style:{"text-align":"left"}},opt={href:"https://leetcode.com/problems/maximize-total-cost-of-alternating-subarrays",target:"_blank",rel:"noopener noreferrer"},lpt=t("td",{style:{"text-align":"center"}},null,-1),npt={style:{"text-align":"left"}},spt=t("code",null,"数组",-1),dpt=t("code",null,"动态规划",-1),_pt={style:{"text-align":"left"}},ipt=t("td",{style:{"text-align":"center"}},"3201",-1),cpt={style:{"text-align":"left"}},apt={href:"https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-i",target:"_blank",rel:"noopener noreferrer"},rpt=t("td",{style:{"text-align":"center"}},null,-1),hpt={style:{"text-align":"left"}},upt=t("code",null,"数组",-1),fpt=t("code",null,"动态规划",-1),gpt={style:{"text-align":"left"}},mpt=t("td",{style:{"text-align":"center"}},"3202",-1),ypt={style:{"text-align":"left"}},xpt={href:"https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},ppt=t("td",{style:{"text-align":"center"}},null,-1),bpt={style:{"text-align":"left"}},kpt=t("code",null,"数组",-1),Mpt=t("code",null,"动态规划",-1),Hpt={style:{"text-align":"left"}},Ipt=t("td",{style:{"text-align":"center"}},"3205",-1),wpt={style:{"text-align":"left"}},vpt={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},qpt=t("td",{style:{"text-align":"center"}},null,-1),jpt={style:{"text-align":"left"}},zpt=t("code",null,"栈",-1),Cpt=t("code",null,"贪心",-1),Opt=t("code",null,"数组",-1),Lpt=t("code",null,"2+",-1),Ept={style:{"text-align":"left"}},Ppt=t("td",{style:{"text-align":"center"}},"3213",-1),Kpt={style:{"text-align":"left"}},Vpt={href:"https://leetcode.com/problems/construct-string-with-minimum-cost",target:"_blank",rel:"noopener noreferrer"},Npt=t("td",{style:{"text-align":"center"}},null,-1),Dpt={style:{"text-align":"left"}},Bpt=t("code",null,"数组",-1),Ypt=t("code",null,"字符串",-1),Apt=t("code",null,"动态规划",-1),Jpt=t("code",null,"1+",-1),Rpt={style:{"text-align":"left"}},Spt=t("td",{style:{"text-align":"center"}},"3218",-1),Upt={style:{"text-align":"left"}},Wpt={href:"https://leetcode.com/problems/minimum-cost-for-cutting-cake-i",target:"_blank",rel:"noopener noreferrer"},Xpt=t("td",{style:{"text-align":"center"}},null,-1),Fpt={style:{"text-align":"left"}},Gpt=t("code",null,"贪心",-1),Tpt=t("code",null,"数组",-1),Qpt=t("code",null,"动态规划",-1),Zpt=t("code",null,"1+",-1),$pt={style:{"text-align":"left"}},tbt=t("td",{style:{"text-align":"center"}},"3225",-1),ebt={style:{"text-align":"left"}},obt={href:"https://leetcode.com/problems/maximum-score-from-grid-operations",target:"_blank",rel:"noopener noreferrer"},lbt=t("td",{style:{"text-align":"center"}},null,-1),nbt={style:{"text-align":"left"}},sbt=t("code",null,"数组",-1),dbt=t("code",null,"动态规划",-1),_bt=t("code",null,"矩阵",-1),ibt=t("code",null,"1+",-1),cbt={style:{"text-align":"left"}},abt=t("td",{style:{"text-align":"center"}},"3229",-1),rbt={style:{"text-align":"left"}},hbt={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},ubt=t("td",{style:{"text-align":"center"}},null,-1),fbt={style:{"text-align":"left"}},gbt=t("code",null,"栈",-1),mbt=t("code",null,"贪心",-1),ybt=t("code",null,"数组",-1),xbt=t("code",null,"2+",-1),pbt={style:{"text-align":"left"}},bbt=t("td",{style:{"text-align":"center"}},"3241",-1),kbt={style:{"text-align":"left"}},Mbt={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},Hbt=t("td",{style:{"text-align":"center"}},null,-1),Ibt={style:{"text-align":"left"}},wbt=t("code",null,"树",-1),vbt=t("code",null,"深度优先搜索",-1),qbt=t("code",null,"图",-1),jbt=t("code",null,"1+",-1),zbt={style:{"text-align":"left"}},Cbt=t("td",{style:{"text-align":"center"}},"3247",-1),Obt={style:{"text-align":"left"}},Lbt={href:"https://leetcode.com/problems/number-of-subsequences-with-odd-sum",target:"_blank",rel:"noopener noreferrer"},Ebt=t("td",{style:{"text-align":"center"}},null,-1),Pbt={style:{"text-align":"left"}},Kbt=t("code",null,"数组",-1),Vbt=t("code",null,"数学",-1),Nbt=t("code",null,"动态规划",-1),Dbt=t("code",null,"1+",-1),Bbt={style:{"text-align":"left"}},Ybt=t("td",{style:{"text-align":"center"}},"3250",-1),Abt={style:{"text-align":"left"}},Jbt={href:"https://leetcode.com/problems/find-the-count-of-monotonic-pairs-i",target:"_blank",rel:"noopener noreferrer"},Rbt=t("td",{style:{"text-align":"center"}},null,-1),Sbt={style:{"text-align":"left"}},Ubt=t("code",null,"数组",-1),Wbt=t("code",null,"数学",-1),Xbt=t("code",null,"动态规划",-1),Fbt=t("code",null,"2+",-1),Gbt={style:{"text-align":"left"}},Tbt=t("td",{style:{"text-align":"center"}},"3251",-1),Qbt={style:{"text-align":"left"}},Zbt={href:"https://leetcode.com/problems/find-the-count-of-monotonic-pairs-ii",target:"_blank",rel:"noopener noreferrer"},$bt=t("td",{style:{"text-align":"center"}},null,-1),t5t={style:{"text-align":"left"}},e5t=t("code",null,"数组",-1),o5t=t("code",null,"数学",-1),l5t=t("code",null,"动态规划",-1),n5t=t("code",null,"2+",-1),s5t={style:{"text-align":"left"}},d5t=t("td",{style:{"text-align":"center"}},"3256",-1),_5t={style:{"text-align":"left"}},i5t={href:"https://leetcode.com/problems/maximum-value-sum-by-placing-three-rooks-i",target:"_blank",rel:"noopener noreferrer"},c5t=t("td",{style:{"text-align":"center"}},null,-1),a5t={style:{"text-align":"left"}},r5t=t("code",null,"数组",-1),h5t=t("code",null,"动态规划",-1),u5t=t("code",null,"枚举",-1),f5t=t("code",null,"1+",-1),g5t={style:{"text-align":"left"}},m5t=t("td",{style:{"text-align":"center"}},"3257",-1),y5t={style:{"text-align":"left"}},x5t={href:"https://leetcode.com/problems/maximum-value-sum-by-placing-three-rooks-ii",target:"_blank",rel:"noopener noreferrer"},p5t=t("td",{style:{"text-align":"center"}},null,-1),b5t={style:{"text-align":"left"}},k5t=t("code",null,"数组",-1),M5t=t("code",null,"动态规划",-1),H5t=t("code",null,"枚举",-1),I5t=t("code",null,"1+",-1),w5t={style:{"text-align":"left"}},v5t=t("td",{style:{"text-align":"center"}},"3259",-1),q5t={style:{"text-align":"left"}},j5t={href:"https://leetcode.com/problems/maximum-energy-boost-from-two-drinks",target:"_blank",rel:"noopener noreferrer"},z5t=t("td",{style:{"text-align":"center"}},null,-1),C5t={style:{"text-align":"left"}},O5t=t("code",null,"数组",-1),L5t=t("code",null,"动态规划",-1),E5t={style:{"text-align":"left"}},P5t=t("td",{style:{"text-align":"center"}},"3260",-1),K5t={style:{"text-align":"left"}},V5t={href:"https://leetcode.com/problems/find-the-largest-palindrome-divisible-by-k",target:"_blank",rel:"noopener noreferrer"},N5t=t("td",{style:{"text-align":"center"}},null,-1),D5t={style:{"text-align":"left"}},B5t=t("code",null,"贪心",-1),Y5t=t("code",null,"数学",-1),A5t=t("code",null,"字符串",-1),J5t=t("code",null,"2+",-1),R5t={style:{"text-align":"left"}},S5t=t("td",{style:{"text-align":"center"}},"3269",-1),U5t={style:{"text-align":"left"}},W5t={href:"https://leetcode.com/problems/constructing-two-increasing-arrays",target:"_blank",rel:"noopener noreferrer"},X5t=t("td",{style:{"text-align":"center"}},null,-1),F5t={style:{"text-align":"left"}},G5t=t("code",null,"数组",-1),T5t=t("code",null,"动态规划",-1),Q5t={style:{"text-align":"left"}},Z5t=t("td",{style:{"text-align":"center"}},"3276",-1),$5t={style:{"text-align":"left"}},t0t={href:"https://leetcode.com/problems/select-cells-in-grid-with-maximum-score",target:"_blank",rel:"noopener noreferrer"},e0t=t("td",{style:{"text-align":"center"}},null,-1),o0t={style:{"text-align":"left"}},l0t=t("code",null,"位运算",-1),n0t=t("code",null,"数组",-1),s0t=t("code",null,"动态规划",-1),d0t=t("code",null,"2+",-1),_0t={style:{"text-align":"left"}},i0t=t("td",{style:{"text-align":"center"}},"3277",-1),c0t={style:{"text-align":"left"}},a0t={href:"https://leetcode.com/problems/maximum-xor-score-subarray-queries",target:"_blank",rel:"noopener noreferrer"},r0t=t("td",{style:{"text-align":"center"}},null,-1),h0t={style:{"text-align":"left"}},u0t=t("code",null,"数组",-1),f0t=t("code",null,"动态规划",-1),g0t={style:{"text-align":"left"}},m0t=t("td",{style:{"text-align":"center"}},"3284",-1),y0t={style:{"text-align":"left"}},x0t={href:"https://leetcode.com/problems/sum-of-consecutive-subarrays",target:"_blank",rel:"noopener noreferrer"},p0t=t("td",{style:{"text-align":"center"}},null,-1),b0t={style:{"text-align":"left"}},k0t=t("code",null,"数组",-1),M0t=t("code",null,"双指针",-1),H0t=t("code",null,"动态规划",-1),I0t={style:{"text-align":"left"}},w0t=t("td",{style:{"text-align":"center"}},"3287",-1),v0t={style:{"text-align":"left"}},q0t={href:"https://leetcode.com/problems/find-the-maximum-sequence-value-of-array",target:"_blank",rel:"noopener noreferrer"},j0t=t("td",{style:{"text-align":"center"}},null,-1),z0t={style:{"text-align":"left"}},C0t=t("code",null,"位运算",-1),O0t=t("code",null,"数组",-1),L0t=t("code",null,"动态规划",-1),E0t={style:{"text-align":"left"}},P0t=t("td",{style:{"text-align":"center"}},"3290",-1),K0t={style:{"text-align":"left"}},V0t={href:"https://leetcode.com/problems/maximum-multiplication-score",target:"_blank",rel:"noopener noreferrer"},N0t=t("td",{style:{"text-align":"center"}},null,-1),D0t={style:{"text-align":"left"}},B0t=t("code",null,"数组",-1),Y0t=t("code",null,"动态规划",-1),A0t={style:{"text-align":"left"}},J0t=t("td",{style:{"text-align":"center"}},"3291",-1),R0t={style:{"text-align":"left"}},S0t={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},U0t=t("td",{style:{"text-align":"center"}},null,-1),W0t={style:{"text-align":"left"}},X0t=t("code",null,"字典树",-1),F0t=t("code",null,"线段树",-1),G0t=t("code",null,"数组",-1),T0t=t("code",null,"6+",-1),Q0t={style:{"text-align":"left"}},Z0t=t("td",{style:{"text-align":"center"}},"3292",-1),$0t={style:{"text-align":"left"}},t8t={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},e8t=t("td",{style:{"text-align":"center"}},null,-1),o8t={style:{"text-align":"left"}},l8t=t("code",null,"线段树",-1),n8t=t("code",null,"数组",-1),s8t=t("code",null,"字符串",-1),d8t=t("code",null,"5+",-1),_8t={style:{"text-align":"left"}},i8t=t("td",{style:{"text-align":"center"}},"3299",-1),c8t={style:{"text-align":"left"}},a8t={href:"https://leetcode.com/problems/sum-of-consecutive-subsequences",target:"_blank",rel:"noopener noreferrer"},r8t=t("td",{style:{"text-align":"center"}},null,-1),h8t={style:{"text-align":"left"}},u8t=t("code",null,"数组",-1),f8t=t("code",null,"哈希表",-1),g8t=t("code",null,"动态规划",-1),m8t={style:{"text-align":"left"}},y8t=t("td",{style:{"text-align":"center"}},"3302",-1),x8t={style:{"text-align":"left"}},p8t={href:"https://leetcode.com/problems/find-the-lexicographically-smallest-valid-sequence",target:"_blank",rel:"noopener noreferrer"},b8t=t("td",{style:{"text-align":"center"}},null,-1),k8t={style:{"text-align":"left"}},M8t=t("code",null,"贪心",-1),H8t=t("code",null,"双指针",-1),I8t=t("code",null,"字符串",-1),w8t=t("code",null,"1+",-1),v8t={style:{"text-align":"left"}},q8t=t("td",{style:{"text-align":"center"}},"LCP 04",-1),j8t={style:{"text-align":"left"}},z8t={href:"https://leetcode.cn/problems/broken-board-dominoes",target:"_blank",rel:"noopener noreferrer"},C8t=t("td",{style:{"text-align":"center"}},null,-1),O8t={style:{"text-align":"left"}},L8t=t("code",null,"位运算",-1),E8t=t("code",null,"图",-1),P8t=t("code",null,"数组",-1),K8t=t("code",null,"2+",-1),V8t={style:{"text-align":"left"}},N8t=t("td",{style:{"text-align":"center"}},"LCP 07",-1),D8t={style:{"text-align":"left"}},B8t={href:"https://leetcode.cn/problems/chuan-di-xin-xi",target:"_blank",rel:"noopener noreferrer"},Y8t=t("td",{style:{"text-align":"center"}},null,-1),A8t={style:{"text-align":"left"}},J8t=t("code",null,"深度优先搜索",-1),R8t=t("code",null,"广度优先搜索",-1),S8t=t("code",null,"图",-1),U8t=t("code",null,"1+",-1),W8t={style:{"text-align":"left"}},X8t=t("td",{style:{"text-align":"center"}},"LCP 09",-1),F8t={style:{"text-align":"left"}},G8t={href:"https://leetcode.cn/problems/zui-xiao-tiao-yue-ci-shu",target:"_blank",rel:"noopener noreferrer"},T8t=t("td",{style:{"text-align":"center"}},null,-1),Q8t={style:{"text-align":"left"}},Z8t=t("code",null,"广度优先搜索",-1),$8t=t("code",null,"线段树",-1),t6t=t("code",null,"数组",-1),e6t=t("code",null,"1+",-1),o6t={style:{"text-align":"left"}},l6t=t("td",{style:{"text-align":"center"}},"LCP 10",-1),n6t={style:{"text-align":"left"}},s6t={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},d6t=t("td",{style:{"text-align":"center"}},null,-1),_6t={style:{"text-align":"left"}},i6t=t("code",null,"树",-1),c6t=t("code",null,"深度优先搜索",-1),a6t=t("code",null,"动态规划",-1),r6t=t("code",null,"1+",-1),h6t={style:{"text-align":"left"}},u6t=t("td",{style:{"text-align":"center"}},"LCP 13",-1),f6t={style:{"text-align":"left"}},g6t={href:"https://leetcode.cn/problems/xun-bao",target:"_blank",rel:"noopener noreferrer"},m6t=t("td",{style:{"text-align":"center"}},null,-1),y6t={style:{"text-align":"left"}},x6t=t("code",null,"位运算",-1),p6t=t("code",null,"广度优先搜索",-1),b6t=t("code",null,"数组",-1),k6t=t("code",null,"3+",-1),M6t={style:{"text-align":"left"}},H6t=t("td",{style:{"text-align":"center"}},"LCP 14",-1),I6t={style:{"text-align":"left"}},w6t={href:"https://leetcode.cn/problems/qie-fen-shu-zu",target:"_blank",rel:"noopener noreferrer"},v6t=t("td",{style:{"text-align":"center"}},null,-1),q6t={style:{"text-align":"left"}},j6t=t("code",null,"数组",-1),z6t=t("code",null,"数学",-1),C6t=t("code",null,"动态规划",-1),O6t=t("code",null,"1+",-1),L6t={style:{"text-align":"left"}},E6t=t("td",{style:{"text-align":"center"}},"LCP 19",-1),P6t={style:{"text-align":"left"}},K6t={href:"https://leetcode.cn/problems/UlBDOe",target:"_blank",rel:"noopener noreferrer"},V6t=t("td",{style:{"text-align":"center"}},null,-1),N6t={style:{"text-align":"left"}},D6t=t("code",null,"字符串",-1),B6t=t("code",null,"动态规划",-1),Y6t={style:{"text-align":"left"}},A6t=t("td",{style:{"text-align":"center"}},"LCP 20",-1),J6t={style:{"text-align":"left"}},R6t={href:"https://leetcode.cn/problems/meChtZ",target:"_blank",rel:"noopener noreferrer"},S6t=t("td",{style:{"text-align":"center"}},null,-1),U6t={style:{"text-align":"left"}},W6t=t("code",null,"记忆化搜索",-1),X6t=t("code",null,"数组",-1),F6t=t("code",null,"动态规划",-1),G6t={style:{"text-align":"left"}},T6t=t("td",{style:{"text-align":"center"}},"LCP 25",-1),Q6t={style:{"text-align":"left"}},Z6t={href:"https://leetcode.cn/problems/Uh984O",target:"_blank",rel:"noopener noreferrer"},$6t=t("td",{style:{"text-align":"center"}},null,-1),t7t={style:{"text-align":"left"}},e7t=t("code",null,"数学",-1),o7t=t("code",null,"动态规划",-1),l7t=t("code",null,"组合数学",-1),n7t={style:{"text-align":"left"}},s7t=t("td",{style:{"text-align":"center"}},"LCP 26",-1),d7t={style:{"text-align":"left"}},_7t={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},i7t=t("td",{style:{"text-align":"center"}},null,-1),c7t={style:{"text-align":"left"}},a7t=t("code",null,"树",-1),r7t=t("code",null,"动态规划",-1),h7t=t("code",null,"二叉树",-1),u7t={style:{"text-align":"left"}},f7t=t("td",{style:{"text-align":"center"}},"LCP 31",-1),g7t={style:{"text-align":"left"}},m7t={href:"https://leetcode.cn/problems/Db3wC1",target:"_blank",rel:"noopener noreferrer"},y7t=t("td",{style:{"text-align":"center"}},null,-1),x7t={style:{"text-align":"left"}},p7t=t("code",null,"深度优先搜索",-1),b7t=t("code",null,"广度优先搜索",-1),k7t=t("code",null,"数组",-1),M7t=t("code",null,"2+",-1),H7t={style:{"text-align":"left"}},I7t=t("td",{style:{"text-align":"center"}},"LCP 34",-1),w7t={style:{"text-align":"left"}},v7t={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},q7t=t("td",{style:{"text-align":"center"}},null,-1),j7t={style:{"text-align":"left"}},z7t=t("code",null,"树",-1),C7t=t("code",null,"动态规划",-1),O7t=t("code",null,"二叉树",-1),L7t={style:{"text-align":"left"}},E7t=t("td",{style:{"text-align":"center"}},"LCP 36",-1),P7t={style:{"text-align":"left"}},K7t={href:"https://leetcode.cn/problems/Up5XYM",target:"_blank",rel:"noopener noreferrer"},V7t=t("td",{style:{"text-align":"center"}},null,-1),N7t={style:{"text-align":"left"}},D7t=t("code",null,"数组",-1),B7t=t("code",null,"动态规划",-1),Y7t=t("code",null,"排序",-1),A7t={style:{"text-align":"left"}},J7t=t("td",{style:{"text-align":"center"}},"LCP 38",-1),R7t={style:{"text-align":"left"}},S7t={href:"https://leetcode.cn/problems/7rLGCR",target:"_blank",rel:"noopener noreferrer"},U7t=t("td",{style:{"text-align":"center"}},null,-1),W7t={style:{"text-align":"left"}},X7t=t("code",null,"数组",-1),F7t=t("code",null,"动态规划",-1),G7t=t("code",null,"矩阵",-1),T7t={style:{"text-align":"left"}},Q7t=t("td",{style:{"text-align":"center"}},"LCP 43",-1),Z7t={style:{"text-align":"left"}},$7t={href:"https://leetcode.cn/problems/Y1VbOX",target:"_blank",rel:"noopener noreferrer"},t9t=t("td",{style:{"text-align":"center"}},null,-1),e9t={style:{"text-align":"left"}},o9t=t("code",null,"数组",-1),l9t=t("code",null,"字符串",-1),n9t=t("code",null,"动态规划",-1),s9t={style:{"text-align":"left"}},d9t=t("td",{style:{"text-align":"center"}},"LCP 45",-1),_9t={style:{"text-align":"left"}},i9t={href:"https://leetcode.cn/problems/kplEvH",target:"_blank",rel:"noopener noreferrer"},c9t=t("td",{style:{"text-align":"center"}},null,-1),a9t={style:{"text-align":"left"}},r9t=t("code",null,"深度优先搜索",-1),h9t=t("code",null,"广度优先搜索",-1),u9t=t("code",null,"记忆化搜索",-1),f9t=t("code",null,"3+",-1),g9t={style:{"text-align":"left"}},m9t=t("td",{style:{"text-align":"center"}},"LCP 47",-1),y9t={style:{"text-align":"left"}},x9t={href:"https://leetcode.cn/problems/oPs9Bm",target:"_blank",rel:"noopener noreferrer"},p9t=t("td",{style:{"text-align":"center"}},null,-1),b9t={style:{"text-align":"left"}},k9t=t("code",null,"数组",-1),M9t=t("code",null,"动态规划",-1),H9t={style:{"text-align":"left"}},I9t=t("td",{style:{"text-align":"center"}},"LCP 53",-1),w9t={style:{"text-align":"left"}},v9t={href:"https://leetcode.cn/problems/EJvmW4",target:"_blank",rel:"noopener noreferrer"},q9t=t("td",{style:{"text-align":"center"}},null,-1),j9t={style:{"text-align":"left"}},z9t=t("code",null,"位运算",-1),C9t=t("code",null,"数组",-1),O9t=t("code",null,"动态规划",-1),L9t=t("code",null,"1+",-1),E9t={style:{"text-align":"left"}},P9t=t("td",{style:{"text-align":"center"}},"LCP 57",-1),K9t={style:{"text-align":"left"}},V9t={href:"https://leetcode.cn/problems/ZbAuEH",target:"_blank",rel:"noopener noreferrer"},N9t=t("td",{style:{"text-align":"center"}},null,-1),D9t={style:{"text-align":"left"}},B9t=t("code",null,"数组",-1),Y9t=t("code",null,"动态规划",-1),A9t=t("code",null,"矩阵",-1),J9t=t("code",null,"1+",-1),R9t={style:{"text-align":"left"}},S9t=t("td",{style:{"text-align":"center"}},"LCP 59",-1),U9t={style:{"text-align":"left"}},W9t={href:"https://leetcode.cn/problems/NfY1m5",target:"_blank",rel:"noopener noreferrer"},X9t=t("td",{style:{"text-align":"center"}},null,-1),F9t={style:{"text-align":"left"}},G9t=t("code",null,"数组",-1),T9t=t("code",null,"动态规划",-1),Q9t={style:{"text-align":"left"}},Z9t=t("td",{style:{"text-align":"center"}},"LCP 60",-1),$9t={style:{"text-align":"left"}},tkt={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},ekt=t("td",{style:{"text-align":"center"}},null,-1),okt={style:{"text-align":"left"}},lkt=t("code",null,"树",-1),nkt=t("code",null,"动态规划",-1),skt=t("code",null,"二叉树",-1),dkt={style:{"text-align":"left"}},_kt=t("td",{style:{"text-align":"center"}},"LCP 63",-1),ikt={style:{"text-align":"left"}},ckt={href:"https://leetcode.cn/problems/EXvqDp",target:"_blank",rel:"noopener noreferrer"},akt=t("td",{style:{"text-align":"center"}},null,-1),rkt={style:{"text-align":"left"}},hkt=t("code",null,"深度优先搜索",-1),ukt=t("code",null,"广度优先搜索",-1),fkt=t("code",null,"图",-1),gkt=t("code",null,"5+",-1),mkt={style:{"text-align":"left"}},ykt=t("td",{style:{"text-align":"center"}},"LCP 64",-1),xkt={style:{"text-align":"left"}},pkt={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},bkt=t("td",{style:{"text-align":"center"}},null,-1),kkt={style:{"text-align":"left"}},Mkt=t("code",null,"树",-1),Hkt=t("code",null,"深度优先搜索",-1),Ikt=t("code",null,"动态规划",-1),wkt=t("code",null,"1+",-1),vkt={style:{"text-align":"left"}},qkt=t("td",{style:{"text-align":"center"}},"LCP 65",-1),jkt={style:{"text-align":"left"}},zkt={href:"https://leetcode.cn/problems/3aqs1c",target:"_blank",rel:"noopener noreferrer"},Ckt=t("td",{style:{"text-align":"center"}},null,-1),Okt={style:{"text-align":"left"}},Lkt=t("code",null,"数组",-1),Ekt=t("code",null,"动态规划",-1),Pkt={style:{"text-align":"left"}},Kkt=t("td",{style:{"text-align":"center"}},"LCP 69",-1),Vkt={style:{"text-align":"left"}},Nkt={href:"https://leetcode.cn/problems/rMeRt2",target:"_blank",rel:"noopener noreferrer"},Dkt=t("td",{style:{"text-align":"center"}},null,-1),Bkt={style:{"text-align":"left"}},Ykt=t("code",null,"位运算",-1),Akt=t("code",null,"数组",-1),Jkt=t("code",null,"字符串",-1),Rkt=t("code",null,"2+",-1),Skt={style:{"text-align":"left"}},Ukt=t("td",{style:{"text-align":"center"}},"LCS 01",-1),Wkt={style:{"text-align":"left"}},Xkt={href:"https://leetcode.cn/problems/Ju9Xwi",target:"_blank",rel:"noopener noreferrer"},Fkt=t("td",{style:{"text-align":"center"}},null,-1),Gkt={style:{"text-align":"left"}},Tkt=t("code",null,"贪心",-1),Qkt=t("code",null,"数学",-1),Zkt=t("code",null,"动态规划",-1),$kt={style:{"text-align":"left"}},tMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 10 - I",-1),eMt={style:{"text-align":"left"}},oMt={href:"https://leetcode.cn/problems/fei-bo-na-qi-shu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},lMt={style:{"text-align":"center"}},nMt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_10_1",target:"_blank",rel:"noopener noreferrer"},sMt={style:{"text-align":"left"}},dMt=t("code",null,"记忆化搜索",-1),_Mt=t("code",null,"数学",-1),iMt=t("code",null,"动态规划",-1),cMt={style:{"text-align":"left"}},aMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 10 - II",-1),rMt={style:{"text-align":"left"}},hMt={href:"https://leetcode.cn/problems/qing-wa-tiao-tai-jie-wen-ti-lcof",target:"_blank",rel:"noopener noreferrer"},uMt={style:{"text-align":"center"}},fMt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_10_2",target:"_blank",rel:"noopener noreferrer"},gMt={style:{"text-align":"left"}},mMt=t("code",null,"记忆化搜索",-1),yMt=t("code",null,"数学",-1),xMt=t("code",null,"动态规划",-1),pMt={style:{"text-align":"left"}},bMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 13",-1),kMt={style:{"text-align":"left"}},MMt={href:"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof",target:"_blank",rel:"noopener noreferrer"},HMt={style:{"text-align":"center"}},IMt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_13_1",target:"_blank",rel:"noopener noreferrer"},wMt={style:{"text-align":"left"}},vMt=t("code",null,"深度优先搜索",-1),qMt=t("code",null,"广度优先搜索",-1),jMt=t("code",null,"动态规划",-1),zMt={style:{"text-align":"left"}},CMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 14 - I",-1),OMt={style:{"text-align":"left"}},LMt={href:"https://leetcode.cn/problems/jian-sheng-zi-lcof",target:"_blank",rel:"noopener noreferrer"},EMt={style:{"text-align":"center"}},PMt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_14_1",target:"_blank",rel:"noopener noreferrer"},KMt={style:{"text-align":"left"}},VMt=t("code",null,"数学",-1),NMt=t("code",null,"动态规划",-1),DMt={style:{"text-align":"left"}},BMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 14 - II",-1),YMt={style:{"text-align":"left"}},AMt={href:"https://leetcode.cn/problems/jian-sheng-zi-ii-lcof",target:"_blank",rel:"noopener noreferrer"},JMt={style:{"text-align":"center"}},RMt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_14_2",target:"_blank",rel:"noopener noreferrer"},SMt={style:{"text-align":"left"}},UMt=t("code",null,"数学",-1),WMt=t("code",null,"动态规划",-1),XMt={style:{"text-align":"left"}},FMt=t("td",{style:{"text-align":"center"}},"剑指 Offer 19",-1),GMt={style:{"text-align":"left"}},TMt={href:"https://leetcode.cn/problems/zheng-ze-biao-da-shi-pi-pei-lcof",target:"_blank",rel:"noopener noreferrer"},QMt={style:{"text-align":"center"}},ZMt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_19_1",target:"_blank",rel:"noopener noreferrer"},$Mt={style:{"text-align":"left"}},tHt=t("code",null,"递归",-1),eHt=t("code",null,"字符串",-1),oHt=t("code",null,"动态规划",-1),lHt={style:{"text-align":"left"}},nHt=t("td",{style:{"text-align":"center"}},"剑指 Offer 42",-1),sHt={style:{"text-align":"left"}},dHt={href:"https://leetcode.cn/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof",target:"_blank",rel:"noopener noreferrer"},_Ht={style:{"text-align":"center"}},iHt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_42_1",target:"_blank",rel:"noopener noreferrer"},cHt={style:{"text-align":"left"}},aHt=t("code",null,"数组",-1),rHt=t("code",null,"分治",-1),hHt=t("code",null,"动态规划",-1),uHt={style:{"text-align":"left"}},fHt=t("td",{style:{"text-align":"center"}},"剑指 Offer 43",-1),gHt={style:{"text-align":"left"}},mHt={href:"https://leetcode.cn/problems/1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof",target:"_blank",rel:"noopener noreferrer"},yHt=t("td",{style:{"text-align":"center"}},null,-1),xHt={style:{"text-align":"left"}},pHt=t("code",null,"递归",-1),bHt=t("code",null,"数学",-1),kHt=t("code",null,"动态规划",-1),MHt={style:{"text-align":"left"}},HHt=t("td",{style:{"text-align":"center"}},"剑指 Offer 46",-1),IHt={style:{"text-align":"left"}},wHt={href:"https://leetcode.cn/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof",target:"_blank",rel:"noopener noreferrer"},vHt=t("td",{style:{"text-align":"center"}},null,-1),qHt={style:{"text-align":"left"}},jHt=t("code",null,"字符串",-1),zHt=t("code",null,"动态规划",-1),CHt={style:{"text-align":"left"}},OHt=t("td",{style:{"text-align":"center"}},"剑指 Offer 47",-1),LHt={style:{"text-align":"left"}},EHt={href:"https://leetcode.cn/problems/li-wu-de-zui-da-jie-zhi-lcof",target:"_blank",rel:"noopener noreferrer"},PHt={style:{"text-align":"center"}},KHt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_47_1",target:"_blank",rel:"noopener noreferrer"},VHt={style:{"text-align":"left"}},NHt=t("code",null,"数组",-1),DHt=t("code",null,"动态规划",-1),BHt=t("code",null,"矩阵",-1),YHt={style:{"text-align":"left"}},AHt=t("td",{style:{"text-align":"center"}},"剑指 Offer 49",-1),JHt={style:{"text-align":"left"}},RHt={href:"https://leetcode.cn/problems/chou-shu-lcof",target:"_blank",rel:"noopener noreferrer"},SHt={style:{"text-align":"center"}},UHt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_49_1",target:"_blank",rel:"noopener noreferrer"},WHt={style:{"text-align":"left"}},XHt=t("code",null,"哈希表",-1),FHt=t("code",null,"数学",-1),GHt=t("code",null,"动态规划",-1),THt=t("code",null,"1+",-1),QHt={style:{"text-align":"left"}},ZHt=t("td",{style:{"text-align":"center"}},"剑指 Offer 60",-1),$Ht={style:{"text-align":"left"}},tIt={href:"https://leetcode.cn/problems/nge-tou-zi-de-dian-shu-lcof",target:"_blank",rel:"noopener noreferrer"},eIt={style:{"text-align":"center"}},oIt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_60_1",target:"_blank",rel:"noopener noreferrer"},lIt={style:{"text-align":"left"}},nIt=t("code",null,"数学",-1),sIt=t("code",null,"动态规划",-1),dIt=t("code",null,"概率与统计",-1),_It={style:{"text-align":"left"}},iIt=t("td",{style:{"text-align":"center"}},"剑指 Offer 63",-1),cIt={style:{"text-align":"left"}},aIt={href:"https://leetcode.cn/problems/gu-piao-de-zui-da-li-run-lcof",target:"_blank",rel:"noopener noreferrer"},rIt={style:{"text-align":"center"}},hIt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_63_1",target:"_blank",rel:"noopener noreferrer"},uIt={style:{"text-align":"left"}},fIt=t("code",null,"数组",-1),gIt=t("code",null,"动态规划",-1),mIt={style:{"text-align":"left"}},yIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 100",-1),xIt={style:{"text-align":"left"}},pIt={href:"https://leetcode.cn/problems/IlPe0q",target:"_blank",rel:"noopener noreferrer"},bIt=t("td",{style:{"text-align":"center"}},null,-1),kIt={style:{"text-align":"left"}},MIt=t("code",null,"数组",-1),HIt=t("code",null,"动态规划",-1),IIt={style:{"text-align":"left"}},wIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 102",-1),vIt={style:{"text-align":"left"}},qIt={href:"https://leetcode.cn/problems/YaVDxD",target:"_blank",rel:"noopener noreferrer"},jIt=t("td",{style:{"text-align":"center"}},null,-1),zIt={style:{"text-align":"left"}},CIt=t("code",null,"数组",-1),OIt=t("code",null,"动态规划",-1),LIt=t("code",null,"回溯",-1),EIt={style:{"text-align":"left"}},PIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 103",-1),KIt={style:{"text-align":"left"}},VIt={href:"https://leetcode.cn/problems/gaM7Ch",target:"_blank",rel:"noopener noreferrer"},NIt=t("td",{style:{"text-align":"center"}},null,-1),DIt={style:{"text-align":"left"}},BIt=t("code",null,"广度优先搜索",-1),YIt=t("code",null,"数组",-1),AIt=t("code",null,"动态规划",-1),JIt={style:{"text-align":"left"}},RIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 104",-1),SIt={style:{"text-align":"left"}},UIt={href:"https://leetcode.cn/problems/D0F0SV",target:"_blank",rel:"noopener noreferrer"},WIt=t("td",{style:{"text-align":"center"}},null,-1),XIt={style:{"text-align":"left"}},FIt=t("code",null,"数组",-1),GIt=t("code",null,"动态规划",-1),TIt={style:{"text-align":"left"}},QIt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 107",-1),ZIt={style:{"text-align":"left"}},$It={href:"https://leetcode.cn/problems/2bCMpM",target:"_blank",rel:"noopener noreferrer"},twt=t("td",{style:{"text-align":"center"}},null,-1),ewt={style:{"text-align":"left"}},owt=t("code",null,"广度优先搜索",-1),lwt=t("code",null,"数组",-1),nwt=t("code",null,"动态规划",-1),swt=t("code",null,"1+",-1),dwt={style:{"text-align":"left"}},_wt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 112",-1),iwt={style:{"text-align":"left"}},cwt={href:"https://leetcode.cn/problems/fpTFWP",target:"_blank",rel:"noopener noreferrer"},awt=t("td",{style:{"text-align":"center"}},null,-1),rwt={style:{"text-align":"left"}},hwt=t("code",null,"深度优先搜索",-1),uwt=t("code",null,"广度优先搜索",-1),fwt=t("code",null,"图",-1),gwt=t("code",null,"5+",-1),mwt={style:{"text-align":"left"}},ywt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 20",-1),xwt={style:{"text-align":"left"}},pwt={href:"https://leetcode.cn/problems/a7VOhD",target:"_blank",rel:"noopener noreferrer"},bwt=t("td",{style:{"text-align":"center"}},null,-1),kwt={style:{"text-align":"left"}},Mwt=t("code",null,"字符串",-1),Hwt=t("code",null,"动态规划",-1),Iwt={style:{"text-align":"left"}},wwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 3",-1),vwt={style:{"text-align":"left"}},qwt={href:"https://leetcode.cn/problems/w3tCBm",target:"_blank",rel:"noopener noreferrer"},jwt=t("td",{style:{"text-align":"center"}},null,-1),zwt={style:{"text-align":"left"}},Cwt=t("code",null,"位运算",-1),Owt=t("code",null,"动态规划",-1),Lwt={style:{"text-align":"left"}},Ewt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),Pwt={style:{"text-align":"left"}},Kwt={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},Vwt=t("td",{style:{"text-align":"center"}},null,-1),Nwt={style:{"text-align":"left"}},Dwt=t("code",null,"栈",-1),Bwt=t("code",null,"数组",-1),Ywt=t("code",null,"动态规划",-1),Awt=t("code",null,"2+",-1),Jwt={style:{"text-align":"left"}},Rwt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),Swt={style:{"text-align":"left"}},Uwt={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},Wwt=t("td",{style:{"text-align":"center"}},null,-1),Xwt={style:{"text-align":"left"}},Fwt=t("code",null,"树",-1),Gwt=t("code",null,"深度优先搜索",-1),Twt=t("code",null,"动态规划",-1),Qwt=t("code",null,"1+",-1),Zwt={style:{"text-align":"left"}},$wt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 85",-1),tvt={style:{"text-align":"left"}},evt={href:"https://leetcode.cn/problems/IDBivT",target:"_blank",rel:"noopener noreferrer"},ovt=t("td",{style:{"text-align":"center"}},null,-1),lvt={style:{"text-align":"left"}},nvt=t("code",null,"字符串",-1),svt=t("code",null,"动态规划",-1),dvt=t("code",null,"回溯",-1),_vt={style:{"text-align":"left"}},ivt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 88",-1),cvt={style:{"text-align":"left"}},avt={href:"https://leetcode.cn/problems/GzCJIP",target:"_blank",rel:"noopener noreferrer"},rvt=t("td",{style:{"text-align":"center"}},null,-1),hvt={style:{"text-align":"left"}},uvt=t("code",null,"数组",-1),fvt=t("code",null,"动态规划",-1),gvt={style:{"text-align":"left"}},mvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 89",-1),yvt={style:{"text-align":"left"}},xvt={href:"https://leetcode.cn/problems/Gu0c2T",target:"_blank",rel:"noopener noreferrer"},pvt=t("td",{style:{"text-align":"center"}},null,-1),bvt={style:{"text-align":"left"}},kvt=t("code",null,"数组",-1),Mvt=t("code",null,"动态规划",-1),Hvt={style:{"text-align":"left"}},Ivt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 90",-1),wvt={style:{"text-align":"left"}},vvt={href:"https://leetcode.cn/problems/PzWKhm",target:"_blank",rel:"noopener noreferrer"},qvt=t("td",{style:{"text-align":"center"}},null,-1),jvt={style:{"text-align":"left"}},zvt=t("code",null,"数组",-1),Cvt=t("code",null,"动态规划",-1),Ovt={style:{"text-align":"left"}},Lvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 91",-1),Evt={style:{"text-align":"left"}},Pvt={href:"https://leetcode.cn/problems/JEj789",target:"_blank",rel:"noopener noreferrer"},Kvt=t("td",{style:{"text-align":"center"}},null,-1),Vvt={style:{"text-align":"left"}},Nvt=t("code",null,"数组",-1),Dvt=t("code",null,"动态规划",-1),Bvt={style:{"text-align":"left"}},Yvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 92",-1),Avt={style:{"text-align":"left"}},Jvt={href:"https://leetcode.cn/problems/cyJERH",target:"_blank",rel:"noopener noreferrer"},Rvt=t("td",{style:{"text-align":"center"}},null,-1),Svt={style:{"text-align":"left"}},Uvt=t("code",null,"字符串",-1),Wvt=t("code",null,"动态规划",-1),Xvt={style:{"text-align":"left"}},Fvt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 93",-1),Gvt={style:{"text-align":"left"}},Tvt={href:"https://leetcode.cn/problems/Q91FMA",target:"_blank",rel:"noopener noreferrer"},Qvt=t("td",{style:{"text-align":"center"}},null,-1),Zvt={style:{"text-align":"left"}},$vt=t("code",null,"数组",-1),tqt=t("code",null,"哈希表",-1),eqt=t("code",null,"动态规划",-1),oqt={style:{"text-align":"left"}},lqt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 94",-1),nqt={style:{"text-align":"left"}},sqt={href:"https://leetcode.cn/problems/omKAoA",target:"_blank",rel:"noopener noreferrer"},dqt=t("td",{style:{"text-align":"center"}},null,-1),_qt={style:{"text-align":"left"}},iqt=t("code",null,"字符串",-1),cqt=t("code",null,"动态规划",-1),aqt={style:{"text-align":"left"}},rqt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 95",-1),hqt={style:{"text-align":"left"}},uqt={href:"https://leetcode.cn/problems/qJnOS7",target:"_blank",rel:"noopener noreferrer"},fqt=t("td",{style:{"text-align":"center"}},null,-1),gqt={style:{"text-align":"left"}},mqt=t("code",null,"字符串",-1),yqt=t("code",null,"动态规划",-1),xqt={style:{"text-align":"left"}},pqt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 96",-1),bqt={style:{"text-align":"left"}},kqt={href:"https://leetcode.cn/problems/IY6buf",target:"_blank",rel:"noopener noreferrer"},Mqt=t("td",{style:{"text-align":"center"}},null,-1),Hqt={style:{"text-align":"left"}},Iqt=t("code",null,"字符串",-1),wqt=t("code",null,"动态规划",-1),vqt={style:{"text-align":"left"}},qqt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 97",-1),jqt={style:{"text-align":"left"}},zqt={href:"https://leetcode.cn/problems/21dk04",target:"_blank",rel:"noopener noreferrer"},Cqt=t("td",{style:{"text-align":"center"}},null,-1),Oqt={style:{"text-align":"left"}},Lqt=t("code",null,"字符串",-1),Eqt=t("code",null,"动态规划",-1),Pqt={style:{"text-align":"left"}},Kqt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 98",-1),Vqt={style:{"text-align":"left"}},Nqt={href:"https://leetcode.cn/problems/2AoeFn",target:"_blank",rel:"noopener noreferrer"},Dqt=t("td",{style:{"text-align":"center"}},null,-1),Bqt={style:{"text-align":"left"}},Yqt=t("code",null,"数学",-1),Aqt=t("code",null,"动态规划",-1),Jqt=t("code",null,"组合数学",-1),Rqt={style:{"text-align":"left"}},Sqt=t("td",{style:{"text-align":"center"}},"剑指 Offer II 99",-1),Uqt={style:{"text-align":"left"}},Wqt={href:"https://leetcode.cn/problems/0i0mDW",target:"_blank",rel:"noopener noreferrer"},Xqt=t("td",{style:{"text-align":"center"}},null,-1),Fqt={style:{"text-align":"left"}},Gqt=t("code",null,"数组",-1),Tqt=t("code",null,"动态规划",-1),Qqt=t("code",null,"矩阵",-1),Zqt={style:{"text-align":"left"}},$qt=t("td",{style:{"text-align":"center"}},"面试题 05.03",-1),tjt={style:{"text-align":"left"}},ejt={href:"https://leetcode.cn/problems/reverse-bits-lcci",target:"_blank",rel:"noopener noreferrer"},ojt=t("td",{style:{"text-align":"center"}},null,-1),ljt={style:{"text-align":"left"}},njt=t("code",null,"位运算",-1),sjt=t("code",null,"动态规划",-1),djt={style:{"text-align":"left"}},_jt=t("td",{style:{"text-align":"center"}},"面试题 08.01",-1),ijt={style:{"text-align":"left"}},cjt={href:"https://leetcode.cn/problems/three-steps-problem-lcci",target:"_blank",rel:"noopener noreferrer"},ajt=t("td",{style:{"text-align":"center"}},null,-1),rjt={style:{"text-align":"left"}},hjt=t("code",null,"记忆化搜索",-1),ujt=t("code",null,"数学",-1),fjt=t("code",null,"动态规划",-1),gjt={style:{"text-align":"left"}},mjt=t("td",{style:{"text-align":"center"}},"面试题 08.02",-1),yjt={style:{"text-align":"left"}},xjt={href:"https://leetcode.cn/problems/robot-in-a-grid-lcci",target:"_blank",rel:"noopener noreferrer"},pjt=t("td",{style:{"text-align":"center"}},null,-1),bjt={style:{"text-align":"left"}},kjt=t("code",null,"数组",-1),Mjt=t("code",null,"动态规划",-1),Hjt=t("code",null,"回溯",-1),Ijt=t("code",null,"1+",-1),wjt={style:{"text-align":"left"}},vjt=t("td",{style:{"text-align":"center"}},"面试题 08.09",-1),qjt={style:{"text-align":"left"}},jjt={href:"https://leetcode.cn/problems/bracket-lcci",target:"_blank",rel:"noopener noreferrer"},zjt=t("td",{style:{"text-align":"center"}},null,-1),Cjt={style:{"text-align":"left"}},Ojt=t("code",null,"字符串",-1),Ljt=t("code",null,"动态规划",-1),Ejt=t("code",null,"回溯",-1),Pjt={style:{"text-align":"left"}},Kjt=t("td",{style:{"text-align":"center"}},"面试题 08.11",-1),Vjt={style:{"text-align":"left"}},Njt={href:"https://leetcode.cn/problems/coin-lcci",target:"_blank",rel:"noopener noreferrer"},Djt=t("td",{style:{"text-align":"center"}},null,-1),Bjt={style:{"text-align":"left"}},Yjt=t("code",null,"数组",-1),Ajt=t("code",null,"数学",-1),Jjt=t("code",null,"动态规划",-1),Rjt={style:{"text-align":"left"}},Sjt=t("td",{style:{"text-align":"center"}},"面试题 08.13",-1),Ujt={style:{"text-align":"left"}},Wjt={href:"https://leetcode.cn/problems/pile-box-lcci",target:"_blank",rel:"noopener noreferrer"},Xjt=t("td",{style:{"text-align":"center"}},null,-1),Fjt={style:{"text-align":"left"}},Gjt=t("code",null,"数组",-1),Tjt=t("code",null,"动态规划",-1),Qjt=t("code",null,"排序",-1),Zjt={style:{"text-align":"left"}},$jt=t("td",{style:{"text-align":"center"}},"面试题 08.14",-1),tzt={style:{"text-align":"left"}},ezt={href:"https://leetcode.cn/problems/boolean-evaluation-lcci",target:"_blank",rel:"noopener noreferrer"},ozt=t("td",{style:{"text-align":"center"}},null,-1),lzt={style:{"text-align":"left"}},nzt=t("code",null,"记忆化搜索",-1),szt=t("code",null,"字符串",-1),dzt=t("code",null,"动态规划",-1),_zt={style:{"text-align":"left"}},izt=t("td",{style:{"text-align":"center"}},"面试题 16.17",-1),czt={style:{"text-align":"left"}},azt={href:"https://leetcode.cn/problems/contiguous-sequence-lcci",target:"_blank",rel:"noopener noreferrer"},rzt=t("td",{style:{"text-align":"center"}},null,-1),hzt={style:{"text-align":"left"}},uzt=t("code",null,"数组",-1),fzt=t("code",null,"分治",-1),gzt=t("code",null,"动态规划",-1),mzt={style:{"text-align":"left"}},yzt=t("td",{style:{"text-align":"center"}},"面试题 17.06",-1),xzt={style:{"text-align":"left"}},pzt={href:"https://leetcode.cn/problems/number-of-2s-in-range-lcci",target:"_blank",rel:"noopener noreferrer"},bzt=t("td",{style:{"text-align":"center"}},null,-1),kzt={style:{"text-align":"left"}},Mzt=t("code",null,"递归",-1),Hzt=t("code",null,"数学",-1),Izt=t("code",null,"动态规划",-1),wzt={style:{"text-align":"left"}},vzt=t("td",{style:{"text-align":"center"}},"面试题 17.08",-1),qzt={style:{"text-align":"left"}},jzt={href:"https://leetcode.cn/problems/circus-tower-lcci",target:"_blank",rel:"noopener noreferrer"},zzt=t("td",{style:{"text-align":"center"}},null,-1),Czt={style:{"text-align":"left"}},Ozt=t("code",null,"数组",-1),Lzt=t("code",null,"二分查找",-1),Ezt=t("code",null,"动态规划",-1),Pzt=t("code",null,"1+",-1),Kzt={style:{"text-align":"left"}},Vzt=t("td",{style:{"text-align":"center"}},"面试题 17.09",-1),Nzt={style:{"text-align":"left"}},Dzt={href:"https://leetcode.cn/problems/get-kth-magic-number-lcci",target:"_blank",rel:"noopener noreferrer"},Bzt=t("td",{style:{"text-align":"center"}},null,-1),Yzt={style:{"text-align":"left"}},Azt=t("code",null,"哈希表",-1),Jzt=t("code",null,"数学",-1),Rzt=t("code",null,"动态规划",-1),Szt=t("code",null,"1+",-1),Uzt={style:{"text-align":"left"}},Wzt=t("td",{style:{"text-align":"center"}},"面试题 17.13",-1),Xzt={style:{"text-align":"left"}},Fzt={href:"https://leetcode.cn/problems/re-space-lcci",target:"_blank",rel:"noopener noreferrer"},Gzt=t("td",{style:{"text-align":"center"}},null,-1),Tzt={style:{"text-align":"left"}},Qzt=t("code",null,"字典树",-1),Zzt=t("code",null,"数组",-1),$zt=t("code",null,"哈希表",-1),tCt=t("code",null,"4+",-1),eCt={style:{"text-align":"left"}},oCt=t("td",{style:{"text-align":"center"}},"面试题 17.16",-1),lCt={style:{"text-align":"left"}},nCt={href:"https://leetcode.cn/problems/the-masseuse-lcci",target:"_blank",rel:"noopener noreferrer"},sCt=t("td",{style:{"text-align":"center"}},null,-1),dCt={style:{"text-align":"left"}},_Ct=t("code",null,"数组",-1),iCt=t("code",null,"动态规划",-1),cCt={style:{"text-align":"left"}},aCt=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),rCt={style:{"text-align":"left"}},hCt={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"},uCt=t("td",{style:{"text-align":"center"}},null,-1),fCt={style:{"text-align":"left"}},gCt=t("code",null,"栈",-1),mCt=t("code",null,"数组",-1),yCt=t("code",null,"双指针",-1),xCt=t("code",null,"2+",-1),pCt={style:{"text-align":"left"}},bCt=t("td",{style:{"text-align":"center"}},"面试题 17.23",-1),kCt={style:{"text-align":"left"}},MCt={href:"https://leetcode.cn/problems/max-black-square-lcci",target:"_blank",rel:"noopener noreferrer"},HCt=t("td",{style:{"text-align":"center"}},null,-1),ICt={style:{"text-align":"left"}},wCt=t("code",null,"数组",-1),vCt=t("code",null,"动态规划",-1),qCt=t("code",null,"矩阵",-1),jCt={style:{"text-align":"left"}},zCt=t("td",{style:{"text-align":"center"}},"面试题 17.24",-1),CCt={style:{"text-align":"left"}},OCt={href:"https://leetcode.cn/problems/max-submatrix-lcci",target:"_blank",rel:"noopener noreferrer"},LCt=t("td",{style:{"text-align":"center"}},null,-1),ECt={style:{"text-align":"left"}},PCt=t("code",null,"数组",-1),KCt=t("code",null,"动态规划",-1),VCt=t("code",null,"矩阵",-1),NCt=t("code",null,"1+",-1),DCt={style:{"text-align":"left"}};function BCt(YCt,ACt){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return c(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[S]),_:1})]),U,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[T]),_:1}),o(),Q,o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[Ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Pt]),_:1})])]),Kt,r(" prettier-ignore "),t("table",null,[Vt,t("tbody",null,[t("tr",null,[Nt,t("td",Dt,[t("a",Bt,[o("最长回文子串"),e(s)])]),t("td",Yt,[t("a",At,[o("[✓]"),e(s)])]),t("td",Jt,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[Rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[St]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ut]),_:1})]),t("td",Wt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xt,t("td",Ft,[t("a",Gt,[o("正则表达式匹配"),e(s)])]),t("td",Tt,[t("a",Qt,[o("[✓]"),e(s)])]),t("td",Zt,[e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[te]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ee]),_:1})]),t("td",oe,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[le,t("td",ne,[t("a",se,[o("括号生成"),e(s)])]),t("td",de,[t("a",_e,[o("[✓]"),e(s)])]),t("td",ie,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[ce]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[re]),_:1})]),t("td",he,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[o("最长有效括号"),e(s)])]),t("td",me,[t("a",ye,[o("[✓]"),e(s)])]),t("td",xe,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[pe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[be]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ke]),_:1})]),t("td",Me,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[He,t("td",Ie,[t("a",we,[o("接雨水"),e(s)])]),t("td",ve,[t("a",qe,[o("[✓]"),e(s)])]),t("td",je,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ze]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ce]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[Oe]),_:1}),o(),Le]),t("td",Ee,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Pe,t("td",Ke,[t("a",Ve,[o("通配符匹配"),e(s)])]),t("td",Ne,[t("a",De,[o("[✓]"),e(s)])]),t("td",Be,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Ye]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[Ae]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Je]),_:1}),o(),Re]),t("td",Se,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ue,t("td",We,[t("a",Xe,[o("跳跃游戏 II"),e(s)])]),t("td",Fe,[t("a",Ge,[o("[✓]"),e(s)])]),t("td",Te,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Qe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ze]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[$e]),_:1})]),t("td",to,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[eo,t("td",oo,[t("a",lo,[o("最大子数组和"),e(s)])]),t("td",no,[t("a",so,[o("[✓]"),e(s)])]),t("td",_o,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[io]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[co]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ao]),_:1})]),t("td",ro,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ho,t("td",uo,[t("a",fo,[o("跳跃游戏"),e(s)])]),t("td",go,[t("a",mo,[o("[✓]"),e(s)])]),t("td",yo,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[xo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[po]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[bo]),_:1})]),t("td",ko,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Mo,t("td",Ho,[t("a",Io,[o("不同路径"),e(s)])]),t("td",wo,[t("a",vo,[o("[✓]"),e(s)])]),t("td",qo,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[jo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[zo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Co]),_:1})]),t("td",Oo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Lo,t("td",Eo,[t("a",Po,[o("不同路径 II"),e(s)])]),t("td",Ko,[t("a",Vo,[o("[✓]"),e(s)])]),t("td",No,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Do]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Bo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[Yo]),_:1})]),t("td",Ao,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Jo,t("td",Ro,[t("a",So,[o("最小路径和"),e(s)])]),t("td",Uo,[t("a",Wo,[o("[✓]"),e(s)])]),t("td",Xo,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Fo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Go]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[To]),_:1})]),t("td",Qo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Zo,t("td",$o,[t("a",tl,[o("爬楼梯"),e(s)])]),t("td",el,[t("a",ol,[o("[✓]"),e(s)])]),t("td",ll,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[nl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[sl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[dl]),_:1})]),t("td",_l,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[il,t("td",cl,[t("a",al,[o("编辑距离"),e(s)])]),t("td",rl,[t("a",hl,[o("[✓]"),e(s)])]),t("td",ul,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[fl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[gl]),_:1})]),t("td",ml,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yl,t("td",xl,[t("a",pl,[o("最大矩形"),e(s)])]),t("td",bl,[t("a",kl,[o("[✓]"),e(s)])]),t("td",Ml,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Hl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Il]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[wl]),_:1}),o(),vl]),t("td",ql,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[jl,t("td",zl,[t("a",Cl,[o("扰乱字符串"),e(s)])]),Ol,t("td",Ll,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[El]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Pl]),_:1})]),t("td",Kl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Vl,t("td",Nl,[t("a",Dl,[o("解码方法"),e(s)])]),Bl,t("td",Yl,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Al]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Jl]),_:1})]),t("td",Rl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Sl,t("td",Ul,[t("a",Wl,[o("不同的二叉搜索树 II"),e(s)])]),t("td",Xl,[t("a",Fl,[o("[✓]"),e(s)])]),t("td",Gl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Tl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Ql]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Zl]),_:1}),o(),$l]),t("td",tn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[en,t("td",on,[t("a",ln,[o("不同的二叉搜索树"),e(s)])]),t("td",nn,[t("a",sn,[o("[✓]"),e(s)])]),t("td",dn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[_n]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[cn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[an]),_:1}),o(),rn]),t("td",hn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[un,t("td",fn,[t("a",gn,[o("交错字符串"),e(s)])]),t("td",mn,[t("a",yn,[o("[✓]"),e(s)])]),t("td",xn,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[pn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[bn]),_:1})]),t("td",kn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Mn,t("td",Hn,[t("a",In,[o("不同的子序列"),e(s)])]),wn,t("td",vn,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[qn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[jn]),_:1})]),t("td",zn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Cn,t("td",On,[t("a",Ln,[o("杨辉三角"),e(s)])]),t("td",En,[t("a",Pn,[o("[✓]"),e(s)])]),t("td",Kn,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Vn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Nn]),_:1})]),t("td",Dn,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Bn,t("td",Yn,[t("a",An,[o("杨辉三角 II"),e(s)])]),Jn,t("td",Rn,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Sn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Un]),_:1})]),t("td",Wn,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Xn,t("td",Fn,[t("a",Gn,[o("三角形最小路径和"),e(s)])]),t("td",Tn,[t("a",Qn,[o("[✓]"),e(s)])]),t("td",Zn,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[$n]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ts]),_:1})]),t("td",es,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[os,t("td",ls,[t("a",ns,[o("买卖股票的最佳时机"),e(s)])]),t("td",ss,[t("a",ds,[o("[✓]"),e(s)])]),t("td",_s,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[is]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[cs]),_:1})]),t("td",as,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[rs,t("td",hs,[t("a",us,[o("买卖股票的最佳时机 II"),e(s)])]),t("td",fs,[t("a",gs,[o("[✓]"),e(s)])]),t("td",ms,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[ys]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[xs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ps]),_:1})]),t("td",bs,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ks,t("td",Ms,[t("a",Hs,[o("买卖股票的最佳时机 III"),e(s)])]),t("td",Is,[t("a",ws,[o("[✓]"),e(s)])]),t("td",vs,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[qs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[js]),_:1})]),t("td",zs,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Cs,t("td",Os,[t("a",Ls,[o("二叉树中的最大路径和"),e(s)])]),t("td",Es,[t("a",Ps,[o("[✓]"),e(s)])]),t("td",Ks,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Vs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ns]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ds]),_:1}),o(),Bs]),t("td",Ys,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[As,t("td",Js,[t("a",Rs,[o("分割回文串"),e(s)])]),t("td",Ss,[t("a",Us,[o("[✓]"),e(s)])]),t("td",Ws,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Xs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Fs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[Gs]),_:1})]),t("td",Ts,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Qs,t("td",Zs,[t("a",$s,[o("分割回文串 II"),e(s)])]),td,t("td",ed,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[od]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ld]),_:1})]),t("td",nd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[sd,t("td",dd,[t("a",_d,[o("单词拆分"),e(s)])]),t("td",id,[t("a",cd,[o("[✓]"),e(s)])]),t("td",ad,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[rd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[hd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ud]),_:1}),o(),fd]),t("td",gd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[md,t("td",yd,[t("a",xd,[o("单词拆分 II"),e(s)])]),pd,t("td",bd,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[kd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[Md]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Hd]),_:1}),o(),Id]),t("td",wd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[vd,t("td",qd,[t("a",jd,[o("乘积最大子数组"),e(s)])]),t("td",zd,[t("a",Cd,[o("[✓]"),e(s)])]),t("td",Od,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ld]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ed]),_:1})]),t("td",Pd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Kd,t("td",Vd,[t("a",Nd,[o("地下城游戏"),e(s)])]),t("td",Dd,[t("a",Bd,[o("[✓]"),e(s)])]),t("td",Yd,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ad]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Jd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[Rd]),_:1})]),t("td",Sd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ud,t("td",Wd,[t("a",Xd,[o("买卖股票的最佳时机 IV"),e(s)])]),t("td",Fd,[t("a",Gd,[o("[✓]"),e(s)])]),t("td",Td,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Qd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Zd]),_:1})]),t("td",$d,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[t_,t("td",e_,[t("a",o_,[o("打家劫舍"),e(s)])]),t("td",l_,[t("a",n_,[o("[✓]"),e(s)])]),t("td",s_,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[d_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[__]),_:1})]),t("td",i_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[c_,t("td",a_,[t("a",r_,[o("打家劫舍 II"),e(s)])]),h_,t("td",u_,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[f_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[g_]),_:1})]),t("td",m_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[y_,t("td",x_,[t("a",p_,[o("最大正方形"),e(s)])]),t("td",b_,[t("a",k_,[o("[✓]"),e(s)])]),t("td",M_,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[H_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[I_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[w_]),_:1})]),t("td",v_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[q_,t("td",j_,[t("a",z_,[o("数字 1 的个数"),e(s)])]),C_,t("td",O_,[e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[L_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[E_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[P_]),_:1})]),t("td",K_,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[V_,t("td",N_,[t("a",D_,[o("为运算表达式设计优先级"),e(s)])]),B_,t("td",Y_,[e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[A_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[J_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[R_]),_:1}),o(),S_]),t("td",U_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[W_,t("td",X_,[t("a",F_,[o("粉刷房子"),e(s)])]),G_,t("td",T_,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Q_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Z_]),_:1})]),t("td",$_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ti,t("td",ei,[t("a",oi,[o("丑数 II"),e(s)])]),t("td",li,[t("a",ni,[o("[✓]"),e(s)])]),t("td",si,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[di]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[_i]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ii]),_:1}),o(),ci]),t("td",ai,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ri,t("td",hi,[t("a",ui,[o("粉刷房子 II"),e(s)])]),fi,t("td",gi,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[mi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[yi]),_:1})]),t("td",xi,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[pi,t("td",bi,[t("a",ki,[o("栅栏涂色"),e(s)])]),Mi,t("td",Hi,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ii]),_:1})]),t("td",wi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[vi,t("td",qi,[t("a",ji,[o("完全平方数"),e(s)])]),t("td",zi,[t("a",Ci,[o("[✓]"),e(s)])]),t("td",Oi,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Li]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Ei]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Pi]),_:1})]),t("td",Ki,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Vi,t("td",Ni,[t("a",Di,[o("翻转游戏 II"),e(s)])]),Bi,t("td",Yi,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[Ai]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Ji]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ri]),_:1}),o(),Si]),t("td",Ui,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wi,t("td",Xi,[t("a",Fi,[o("最长递增子序列"),e(s)])]),t("td",Gi,[t("a",Ti,[o("[✓]"),e(s)])]),t("td",Qi,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Zi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[$i]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[tc]),_:1})]),t("td",ec,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[oc,t("td",lc,[t("a",nc,[o("买卖股票的最佳时机含冷冻期"),e(s)])]),t("td",sc,[t("a",dc,[o("[✓]"),e(s)])]),t("td",_c,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ic]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[cc]),_:1})]),t("td",ac,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[rc,t("td",hc,[t("a",uc,[o("戳气球"),e(s)])]),fc,t("td",gc,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[mc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[yc]),_:1})]),t("td",xc,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[pc,t("td",bc,[t("a",kc,[o("超级丑数"),e(s)])]),Mc,t("td",Hc,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ic]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[wc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[vc]),_:1})]),t("td",qc,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jc,t("td",zc,[t("a",Cc,[o("零钱兑换"),e(s)])]),t("td",Oc,[t("a",Lc,[o("[✓]"),e(s)])]),t("td",Ec,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Pc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Kc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Vc]),_:1})]),t("td",Nc,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Dc,t("td",Bc,[t("a",Yc,[o("矩阵中的最长递增路径"),e(s)])]),Ac,t("td",Jc,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Rc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Sc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Uc]),_:1}),o(),Wc]),t("td",Xc,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Fc,t("td",Gc,[t("a",Tc,[o("最大二叉搜索子树"),e(s)])]),Qc,t("td",Zc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$c]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ta]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[ea]),_:1}),o(),oa]),t("td",la,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[na,t("td",sa,[t("a",da,[o("打家劫舍 III"),e(s)])]),_a,t("td",ia,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ca]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[aa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ra]),_:1}),o(),ha]),t("td",ua,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fa,t("td",ga,[t("a",ma,[o("比特位计数"),e(s)])]),ya,t("td",xa,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[pa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ba]),_:1})]),t("td",ka,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ma,t("td",Ha,[t("a",Ia,[o("整数拆分"),e(s)])]),t("td",wa,[t("a",va,[o("[✓]"),e(s)])]),t("td",qa,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[ja]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[za]),_:1})]),t("td",Ca,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Oa,t("td",La,[t("a",Ea,[o("安卓系统手势解锁"),e(s)])]),Pa,t("td",Ka,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Va]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Na]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[Da]),_:1}),o(),Ba]),t("td",Ya,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Aa,t("td",Ja,[t("a",Ra,[o("俄罗斯套娃信封问题"),e(s)])]),t("td",Sa,[t("a",Ua,[o("[✓]"),e(s)])]),t("td",Wa,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Xa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Fa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ga]),_:1}),o(),Ta]),t("td",Qa,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Za,t("td",$a,[t("a",tr,[o("统计各位数字都不同的数字个数"),e(s)])]),er,t("td",or,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[lr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[nr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[sr]),_:1})]),t("td",dr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_r,t("td",ir,[t("a",cr,[o("轰炸敌人"),e(s)])]),ar,t("td",rr,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ur]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[fr]),_:1})]),t("td",gr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[mr,t("td",yr,[t("a",xr,[o("最大整除子集"),e(s)])]),pr,t("td",br,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[kr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Mr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Hr]),_:1}),o(),Ir]),t("td",wr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[vr,t("td",qr,[t("a",jr,[o("猜数字大小 II"),e(s)])]),t("td",zr,[t("a",Cr,[o("[✓]"),e(s)])]),t("td",Or,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Lr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Er]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[Pr]),_:1})]),t("td",Kr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Vr,t("td",Nr,[t("a",Dr,[o("摆动序列"),e(s)])]),Br,t("td",Yr,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Ar]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Jr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Rr]),_:1})]),t("td",Sr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ur,t("td",Wr,[t("a",Xr,[o("组合总和 Ⅳ"),e(s)])]),Fr,t("td",Gr,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Tr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Qr]),_:1})]),t("td",Zr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[$r,t("td",th,[t("a",eh,[o("判断子序列"),e(s)])]),t("td",oh,[t("a",lh,[o("[✓]"),e(s)])]),t("td",nh,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[sh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[dh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[_h]),_:1})]),t("td",ih,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ch,t("td",ah,[t("a",rh,[o("旋转函数"),e(s)])]),hh,t("td",uh,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[fh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[gh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[mh]),_:1})]),t("td",yh,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xh,t("td",ph,[t("a",bh,[o("整数替换"),e(s)])]),kh,t("td",Mh,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Hh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Ih]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[wh]),_:1}),o(),vh]),t("td",qh,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jh,t("td",zh,[t("a",Ch,[o("青蛙过河"),e(s)])]),Oh,t("td",Lh,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Eh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ph]),_:1})]),t("td",Kh,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Vh,t("td",Nh,[t("a",Dh,[o("分割数组的最大值"),e(s)])]),Bh,t("td",Yh,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Ah]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Jh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Rh]),_:1}),o(),Sh]),t("td",Uh,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Wh,t("td",Xh,[t("a",Fh,[o("等差数列划分"),e(s)])]),Gh,t("td",Th,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Qh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Zh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[$h]),_:1})]),t("td",t1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[e1,t("td",o1,[t("a",l1,[o("分割等和子集"),e(s)])]),t("td",n1,[t("a",s1,[o("[✓]"),e(s)])]),t("td",d1,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[_1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[i1]),_:1})]),t("td",c1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[a1,t("td",r1,[t("a",h1,[o("屏幕可显示句子的数量"),e(s)])]),u1,t("td",f1,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[g1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[m1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[y1]),_:1})]),t("td",x1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[p1,t("td",b1,[t("a",k1,[o("无重叠区间"),e(s)])]),M1,t("td",H1,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[I1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[w1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[v1]),_:1}),o(),q1]),t("td",j1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[z1,t("td",C1,[t("a",O1,[o("等差数列划分 II - 子序列"),e(s)])]),L1,t("td",E1,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[P1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[K1]),_:1})]),t("td",V1,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[N1,t("td",D1,[t("a",B1,[o("可怜的小猪"),e(s)])]),Y1,t("td",A1,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[J1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[R1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[S1]),_:1})]),t("td",U1,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[W1,t("td",X1,[t("a",F1,[o("我能赢吗"),e(s)])]),G1,t("td",T1,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Q1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[Z1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[$1]),_:1}),o(),tu]),t("td",eu,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ou,t("td",lu,[t("a",nu,[o("最优账单平衡"),e(s)])]),su,t("td",du,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[_u]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[iu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[cu]),_:1}),o(),au]),t("td",ru,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[hu,t("td",uu,[t("a",fu,[o("统计重复个数"),e(s)])]),gu,t("td",mu,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[yu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[xu]),_:1})]),t("td",pu,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bu,t("td",ku,[t("a",Mu,[o("环绕字符串中唯一的子字符串"),e(s)])]),Hu,t("td",Iu,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[wu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[vu]),_:1})]),t("td",qu,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ju,t("td",zu,[t("a",Cu,[o("编码最短长度的字符串"),e(s)])]),Ou,t("td",Lu,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Eu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Pu]),_:1})]),t("td",Ku,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Vu,t("td",Nu,[t("a",Du,[o("连接词"),e(s)])]),Bu,t("td",Yu,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Au]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[Ju]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ru]),_:1}),o(),Su]),t("td",Uu,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Wu,t("td",Xu,[t("a",Fu,[o("火柴拼正方形"),e(s)])]),Gu,t("td",Tu,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Qu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Zu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[$u]),_:1}),o(),tf]),t("td",ef,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[of,t("td",lf,[t("a",nf,[o("一和零"),e(s)])]),t("td",sf,[t("a",df,[o("[✓]"),e(s)])]),t("td",_f,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[cf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[af]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[rf]),_:1})]),t("td",hf,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[uf,t("td",ff,[t("a",gf,[o("预测赢家"),e(s)])]),mf,t("td",yf,[e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[xf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[pf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[bf]),_:1}),o(),kf]),t("td",Mf,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Hf,t("td",If,[t("a",wf,[o("最大连续1的个数 II"),e(s)])]),vf,t("td",qf,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[jf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[zf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[Cf]),_:1})]),t("td",Of,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Lf,t("td",Ef,[t("a",Pf,[o("祖玛游戏"),e(s)])]),Kf,t("td",Vf,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Nf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Df]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[Bf]),_:1}),o(),Yf]),t("td",Af,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Jf,t("td",Rf,[t("a",Sf,[o("目标和"),e(s)])]),t("td",Uf,[t("a",Wf,[o("[✓]"),e(s)])]),t("td",Xf,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ff]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Gf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[Tf]),_:1})]),t("td",Qf,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Zf,t("td",$f,[t("a",tg,[o("斐波那契数"),e(s)])]),t("td",eg,[t("a",og,[o("[✓]"),e(s)])]),t("td",lg,[e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[ng]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[sg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[dg]),_:1}),o(),_g]),t("td",ig,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[cg,t("td",ag,[t("a",rg,[o("自由之路"),e(s)])]),t("td",hg,[t("a",ug,[o("[✓]"),e(s)])]),t("td",fg,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[gg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[mg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[yg]),_:1}),o(),xg]),t("td",pg,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bg,t("td",kg,[t("a",Mg,[o("最长回文子序列"),e(s)])]),t("td",Hg,[t("a",Ig,[o("[✓]"),e(s)])]),t("td",wg,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[vg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[qg]),_:1})]),t("td",jg,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zg,t("td",Cg,[t("a",Og,[o("零钱兑换 II"),e(s)])]),t("td",Lg,[t("a",Eg,[o("[✓]"),e(s)])]),t("td",Pg,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Kg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Vg]),_:1})]),t("td",Ng,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Dg,t("td",Bg,[t("a",Yg,[o("优美的排列"),e(s)])]),Ag,t("td",Jg,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Rg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Sg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ug]),_:1}),o(),Wg]),t("td",Xg,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Fg,t("td",Gg,[t("a",Tg,[o("01 矩阵"),e(s)])]),Qg,t("td",Zg,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[$g]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[tm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[em]),_:1}),o(),om]),t("td",lm,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[nm,t("td",sm,[t("a",dm,[o("移除盒子"),e(s)])]),_m,t("td",im,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[cm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[am]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[rm]),_:1})]),t("td",hm,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[um,t("td",fm,[t("a",gm,[o("学生出勤记录 II"),e(s)])]),mm,t("td",ym,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[xm]),_:1})]),t("td",pm,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bm,t("td",km,[t("a",Mm,[o("最优除法"),e(s)])]),Hm,t("td",Im,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[wm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[vm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[qm]),_:1})]),t("td",jm,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zm,t("td",Cm,[t("a",Om,[o("矩阵中最长的连续1线段"),e(s)])]),Lm,t("td",Em,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Pm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Km]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[Vm]),_:1})]),t("td",Nm,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Dm,t("td",Bm,[t("a",Ym,[o("最大休假天数"),e(s)])]),Am,t("td",Jm,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Rm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Sm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[Um]),_:1})]),t("td",Wm,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Xm,t("td",Fm,[t("a",Gm,[o("出界的路径数"),e(s)])]),Tm,t("td",Qm,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Zm]),_:1})]),t("td",$m,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ty,t("td",ey,[t("a",oy,[o("两个字符串的删除操作"),e(s)])]),t("td",ly,[t("a",ny,[o("[✓]"),e(s)])]),t("td",sy,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[dy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[_y]),_:1})]),t("td",iy,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[cy,t("td",ay,[t("a",ry,[o("不含连续1的非负整数"),e(s)])]),hy,t("td",uy,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[fy]),_:1})]),t("td",gy,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[my,t("td",yy,[t("a",xy,[o("K 个逆序对数组"),e(s)])]),py,t("td",by,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ky]),_:1})]),t("td",My,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Hy,t("td",Iy,[t("a",wy,[o("寻找数组的错位排列"),e(s)])]),vy,t("td",qy,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[jy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[zy]),_:1})]),t("td",Cy,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Oy,t("td",Ly,[t("a",Ey,[o("大礼包"),e(s)])]),Py,t("td",Ky,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Vy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[Ny]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Dy]),_:1}),o(),By]),t("td",Yy,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ay,t("td",Jy,[t("a",Ry,[o("解码方法 II"),e(s)])]),Sy,t("td",Uy,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Wy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Xy]),_:1})]),t("td",Fy,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Gy,t("td",Ty,[t("a",Qy,[o("最长数对链"),e(s)])]),Zy,t("td",$y,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[t3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[e3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[o3]),_:1}),o(),l3]),t("td",n3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[s3,t("td",d3,[t("a",_3,[o("回文子串"),e(s)])]),i3,t("td",c3,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[a3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[r3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[h3]),_:1})]),t("td",u3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[f3,t("td",g3,[t("a",m3,[o("两个键的键盘"),e(s)])]),y3,t("td",x3,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[p3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[b3]),_:1})]),t("td",k3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[M3,t("td",H3,[t("a",I3,[o("四个键的键盘"),e(s)])]),w3,t("td",v3,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[q3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[j3]),_:1})]),t("td",z3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[C3,t("td",O3,[t("a",L3,[o("成本最小路径"),e(s)])]),E3,t("td",P3,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[K3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[V3]),_:1})]),t("td",N3,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[D3,t("td",B3,[t("a",Y3,[o("奇怪的打印机"),e(s)])]),A3,t("td",J3,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[R3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[S3]),_:1})]),t("td",U3,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[W3,t("td",X3,[t("a",F3,[o("最长递增子序列的个数"),e(s)])]),G3,t("td",T3,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Q3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Z3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[$3]),_:1}),o(),tx]),t("td",ex,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ox,t("td",lx,[t("a",nx,[o("有效的括号字符串"),e(s)])]),t("td",sx,[t("a",dx,[o("[✓]"),e(s)])]),t("td",_x,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ix]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[cx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[ax]),_:1}),o(),rx]),t("td",hx,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ux,t("td",fx,[t("a",gx,[o("骑士在棋盘上的概率"),e(s)])]),mx,t("td",yx,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[xx]),_:1})]),t("td",px,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[bx,t("td",kx,[t("a",Mx,[o("三个无重叠子数组的最大和"),e(s)])]),Hx,t("td",Ix,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[wx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[vx]),_:1})]),t("td",qx,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[jx,t("td",zx,[t("a",Cx,[o("贴纸拼词"),e(s)])]),Ox,t("td",Lx,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Ex]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Px]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Kx]),_:1}),o(),Vx]),t("td",Nx,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Dx,t("td",Bx,[t("a",Yx,[o("划分为k个相等的子集"),e(s)])]),Ax,t("td",Jx,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Rx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[Sx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ux]),_:1}),o(),Wx]),t("td",Xx,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Fx,t("td",Gx,[t("a",Tx,[o("两个字符串的最小ASCII删除和"),e(s)])]),t("td",Qx,[t("a",Zx,[o("[✓]"),e(s)])]),t("td",$x,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[t2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[e2]),_:1})]),t("td",o2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[l2,t("td",n2,[t("a",s2,[o("买卖股票的最佳时机含手续费"),e(s)])]),t("td",d2,[t("a",_2,[o("[✓]"),e(s)])]),t("td",i2,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[c2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[a2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[r2]),_:1})]),t("td",h2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[u2,t("td",f2,[t("a",g2,[o("最长重复子数组"),e(s)])]),m2,t("td",y2,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[x2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[p2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[b2]),_:1}),o(),k2]),t("td",M2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[H2,t("td",I2,[t("a",w2,[o("最小窗口子序列"),e(s)])]),v2,t("td",q2,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[j2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[z2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[C2]),_:1})]),t("td",O2,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[L2,t("td",E2,[t("a",P2,[o("统计不同回文子序列"),e(s)])]),K2,t("td",V2,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[N2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[D2]),_:1})]),t("td",B2,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Y2,t("td",A2,[t("a",J2,[o("删除并获得点数"),e(s)])]),R2,t("td",S2,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[U2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[W2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[X2]),_:1})]),t("td",F2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[G2,t("td",T2,[t("a",Q2,[o("摘樱桃"),e(s)])]),Z2,t("td",$2,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[t4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[e4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[o4]),_:1})]),t("td",l4,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[n4,t("td",s4,[t("a",d4,[o("使用最小花费爬楼梯"),e(s)])]),_4,t("td",i4,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[c4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[a4]),_:1})]),t("td",r4,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[h4,t("td",u4,[t("a",f4,[o("角矩形的数量"),e(s)])]),g4,t("td",m4,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[x4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[p4]),_:1}),o(),b4]),t("td",k4,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[M4,t("td",H4,[t("a",I4,[o("最大加号标志"),e(s)])]),w4,t("td",v4,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[q4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[j4]),_:1})]),t("td",z4,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[C4,t("td",O4,[t("a",L4,[o("K 站中转内最便宜的航班"),e(s)])]),E4,t("td",P4,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[K4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[V4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[N4]),_:1}),o(),D4]),t("td",B4,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Y4,t("td",A4,[t("a",J4,[o("旋转数字"),e(s)])]),R4,t("td",S4,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[U4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[W4]),_:1})]),t("td",X4,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[F4,t("td",G4,[t("a",T4,[o("多米诺和托米诺平铺"),e(s)])]),Q4,t("td",Z4,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[$4]),_:1})]),t("td",tp,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ep,t("td",op,[t("a",lp,[o("匹配子序列的单词数"),e(s)])]),np,t("td",sp,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[dp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[_p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ip]),_:1}),o(),cp]),t("td",ap,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[rp,t("td",hp,[t("a",up,[o("香槟塔"),e(s)])]),fp,t("td",gp,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[mp]),_:1})]),t("td",yp,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xp,t("td",pp,[t("a",bp,[o("使序列递增的最小交换次数"),e(s)])]),kp,t("td",Mp,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Hp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ip]),_:1})]),t("td",wp,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[vp,t("td",qp,[t("a",jp,[o("数组的均值分割"),e(s)])]),zp,t("td",Cp,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Op]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Lp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Ep]),_:1}),o(),Pp]),t("td",Kp,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Vp,t("td",Np,[t("a",Dp,[o("分汤"),e(s)])]),Bp,t("td",Yp,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Ap]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Jp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[Rp]),_:1})]),t("td",Sp,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Up,t("td",Wp,[t("a",Xp,[o("最大平均值和的分组"),e(s)])]),Fp,t("td",Gp,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Tp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Qp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[Zp]),_:1})]),t("td",$p,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[tb,t("td",eb,[t("a",ob,[o("赛车"),e(s)])]),lb,t("td",nb,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[sb]),_:1})]),t("td",db,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_b,t("td",ib,[t("a",cb,[o("带因子的二叉树"),e(s)])]),ab,t("td",rb,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ub]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[fb]),_:1}),o(),gb]),t("td",mb,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yb,t("td",xb,[t("a",pb,[o("统计子串中的唯一字符"),e(s)])]),bb,t("td",kb,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Mb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Hb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ib]),_:1})]),t("td",wb,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[vb,t("td",qb,[t("a",jb,[o("树中距离之和"),e(s)])]),zb,t("td",Cb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ob]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Lb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Eb]),_:1}),o(),Pb]),t("td",Kb,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Vb,t("td",Nb,[t("a",Db,[o("新 21 点"),e(s)])]),Bb,t("td",Yb,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Ab]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Jb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[Rb]),_:1}),o(),Sb]),t("td",Ub,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wb,t("td",Xb,[t("a",Fb,[o("推多米诺"),e(s)])]),Gb,t("td",Tb,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[Qb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Zb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[$b]),_:1})]),t("td",t5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[e5,t("td",o5,[t("a",l5,[o("数组中的最长山脉"),e(s)])]),n5,t("td",s5,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[d5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[_5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[i5]),_:1}),o(),c5]),t("td",a5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[r5,t("td",h5,[t("a",u5,[o("访问所有节点的最短路径"),e(s)])]),f5,t("td",g5,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[m5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[y5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[x5]),_:1}),o(),p5]),t("td",b5,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[k5,t("td",M5,[t("a",H5,[o("最低加油次数"),e(s)])]),I5,t("td",w5,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[v5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[q5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[j5]),_:1}),o(),z5]),t("td",C5,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[O5,t("td",L5,[t("a",E5,[o("最长的斐波那契子序列的长度"),e(s)])]),P5,t("td",K5,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[V5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[N5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[D5]),_:1})]),t("td",B5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Y5,t("td",A5,[t("a",J5,[o("石子游戏"),e(s)])]),R5,t("td",S5,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[U5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[W5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[X5]),_:1}),o(),F5]),t("td",G5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[T5,t("td",Q5,[t("a",Z5,[o("盈利计划"),e(s)])]),$5,t("td",t0,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[e0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[o0]),_:1})]),t("td",l0,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[n0,t("td",s0,[t("a",d0,[o("鸡蛋掉落"),e(s)])]),_0,t("td",i0,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[c0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[a0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[r0]),_:1})]),t("td",h0,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[u0,t("td",f0,[t("a",g0,[o("所有可能的真二叉树"),e(s)])]),m0,t("td",y0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[x0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[p0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[b0]),_:1}),o(),k0]),t("td",M0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[H0,t("td",I0,[t("a",w0,[o("子数组按位或操作"),e(s)])]),v0,t("td",q0,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[j0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[z0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[C0]),_:1})]),t("td",O0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[L0,t("td",E0,[t("a",P0,[o("最大为 N 的数字组合"),e(s)])]),K0,t("td",V0,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[N0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[D0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[B0]),_:1}),o(),Y0]),t("td",A0,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[J0,t("td",R0,[t("a",S0,[o("DI 序列的有效排列"),e(s)])]),U0,t("td",W0,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[X0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[F0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[G0]),_:1})]),t("td",T0,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Q0,t("td",Z0,[t("a",$0,[o("子数组的最小值之和"),e(s)])]),t8,t("td",e8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[o8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[l8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[n8]),_:1}),o(),s8]),t("td",d8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_8,t("td",i8,[t("a",c8,[o("猫和老鼠"),e(s)])]),a8,t("td",r8,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[h8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[u8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[f8]),_:1}),o(),g8]),t("td",m8,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[y8,t("td",x8,[t("a",p8,[o("环形子数组的最大和"),e(s)])]),t("td",b8,[t("a",k8,[o("[✓]"),e(s)])]),t("td",M8,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[H8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[I8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[w8]),_:1}),o(),v8]),t("td",q8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[j8,t("td",z8,[t("a",C8,[o("播放列表的数量"),e(s)])]),O8,t("td",L8,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[E8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[P8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[K8]),_:1})]),t("td",V8,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[N8,t("td",D8,[t("a",B8,[o("将字符串翻转到单调递增"),e(s)])]),Y8,t("td",A8,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[J8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[R8]),_:1})]),t("td",S8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[U8,t("td",W8,[t("a",X8,[o("下降路径最小和"),e(s)])]),t("td",F8,[t("a",G8,[o("[✓]"),e(s)])]),t("td",T8,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Q8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Z8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[$8]),_:1})]),t("td",t6,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[e6,t("td",o6,[t("a",l6,[o("骑士拨号器"),e(s)])]),n6,t("td",s6,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[d6]),_:1})]),t("td",_6,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[i6,t("td",c6,[t("a",a6,[o("不同的子序列 II"),e(s)])]),r6,t("td",h6,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[u6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[f6]),_:1})]),t("td",g6,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[m6,t("td",y6,[t("a",x6,[o("最短超级串"),e(s)])]),p6,t("td",b6,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[k6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[M6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[H6]),_:1}),o(),I6]),t("td",w6,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[v6,t("td",q6,[t("a",j6,[o("最高的广告牌"),e(s)])]),z6,t("td",C6,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[O6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[L6]),_:1})]),t("td",E6,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[P6,t("td",K6,[t("a",V6,[o("删列造序 III"),e(s)])]),N6,t("td",D6,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[B6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Y6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[A6]),_:1})]),t("td",J6,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[R6,t("td",S6,[t("a",U6,[o("表示数字的最少运算符"),e(s)])]),W6,t("td",X6,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[F6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[G6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[T6]),_:1})]),t("td",Q6,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Z6,t("td",$6,[t("a",t7,[o("监控二叉树"),e(s)])]),e7,t("td",o7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[l7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[n7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[s7]),_:1}),o(),d7]),t("td",_7,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[i7,t("td",c7,[t("a",a7,[o("奇偶跳"),e(s)])]),r7,t("td",h7,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[u7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[f7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[g7]),_:1}),o(),m7]),t("td",y7,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[x7,t("td",p7,[t("a",b7,[o("最长湍流子数组"),e(s)])]),k7,t("td",M7,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[H7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[I7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[w7]),_:1})]),t("td",v7,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[q7,t("td",j7,[t("a",z7,[o("最低票价"),e(s)])]),C7,t("td",O7,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[L7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[E7]),_:1})]),t("td",P7,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[K7,t("td",V7,[t("a",N7,[o("平方数组的数目"),e(s)])]),D7,t("td",B7,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Y7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[A7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[J7]),_:1}),o(),R7]),t("td",S7,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[U7,t("td",W7,[t("a",X7,[o("合并石头的最低成本"),e(s)])]),F7,t("td",G7,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[T7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Q7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[Z7]),_:1})]),t("td",$7,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[t9,t("td",e9,[t("a",o9,[o("至少有 1 位重复的数字"),e(s)])]),l9,t("td",n9,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[s9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[d9]),_:1})]),t("td",_9,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[i9,t("td",c9,[t("a",a9,[o("最佳观光组合"),e(s)])]),r9,t("td",h9,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[u9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[f9]),_:1})]),t("td",g9,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[m9,t("td",y9,[t("a",x9,[o("视频拼接"),e(s)])]),p9,t("td",b9,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[k9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[M9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[H9]),_:1})]),t("td",I9,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[w9,t("td",v9,[t("a",q9,[o("除数博弈"),e(s)])]),j9,t("td",z9,[e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[C9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[O9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[L9]),_:1}),o(),E9]),t("td",P9,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[K9,t("td",V9,[t("a",N9,[o("最长等差数列"),e(s)])]),D9,t("td",B9,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Y9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[A9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[J9]),_:1}),o(),R9]),t("td",S9,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[U9,t("td",W9,[t("a",X9,[o("两个非重叠子数组的最大和"),e(s)])]),F9,t("td",G9,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[T9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Q9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[Z9]),_:1})]),t("td",$9,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[tk,t("td",ek,[t("a",ok,[o("不相交的线"),e(s)])]),lk,t("td",nk,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[sk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[dk]),_:1})]),t("td",_k,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ik,t("td",ck,[t("a",ak,[o("多边形三角剖分的最低得分"),e(s)])]),rk,t("td",hk,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[uk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[fk]),_:1})]),t("td",gk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[mk,t("td",yk,[t("a",xk,[o("分隔数组以得到最大和"),e(s)])]),pk,t("td",bk,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[kk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Mk]),_:1})]),t("td",Hk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ik,t("td",wk,[t("a",vk,[o("最长字符串链"),e(s)])]),qk,t("td",jk,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[zk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Ck]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[Ok]),_:1}),o(),Lk]),t("td",Ek,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Pk,t("td",Kk,[t("a",Vk,[o("最后一块石头的重量 II"),e(s)])]),t("td",Nk,[t("a",Dk,[o("[✓]"),e(s)])]),t("td",Bk,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Yk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ak]),_:1})]),t("td",Jk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Rk,t("td",Sk,[t("a",Uk,[o("最长重复子串"),e(s)])]),Wk,t("td",Xk,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Fk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Gk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Tk]),_:1}),o(),Qk]),t("td",Zk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[$k,t("td",tM,[t("a",eM,[o("校园自行车分配 II"),e(s)])]),oM,t("td",lM,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[nM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[sM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[dM]),_:1}),o(),_M]),t("td",iM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[cM,t("td",aM,[t("a",rM,[o("范围内的数字计数"),e(s)])]),hM,t("td",uM,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[fM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[gM]),_:1})]),t("td",mM,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[yM,t("td",xM,[t("a",pM,[o("最短公共超序列"),e(s)])]),bM,t("td",kM,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[MM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[HM]),_:1})]),t("td",IM,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[wM,t("td",vM,[t("a",qM,[o("填充书架"),e(s)])]),jM,t("td",zM,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[CM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[OM]),_:1})]),t("td",LM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[EM,t("td",PM,[t("a",KM,[o("最小的必要团队"),e(s)])]),VM,t("td",NM,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[DM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[BM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[YM]),_:1}),o(),AM]),t("td",JM,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[RM,t("td",SM,[t("a",UM,[o("叶值的最小代价生成树"),e(s)])]),WM,t("td",XM,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[FM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[GM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[TM]),_:1}),o(),QM]),t("td",ZM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[$M,t("td",tH,[t("a",eH,[o("第 N 个泰波那契数"),e(s)])]),t("td",oH,[t("a",lH,[o("[✓]"),e(s)])]),t("td",nH,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[sH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[dH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[_H]),_:1})]),t("td",iH,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[cH,t("td",aH,[t("a",rH,[o("最大的以 1 为边界的正方形"),e(s)])]),hH,t("td",uH,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[fH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[gH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[mH]),_:1})]),t("td",yH,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xH,t("td",pH,[t("a",bH,[o("石子游戏 II"),e(s)])]),kH,t("td",MH,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[HH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[IH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[wH]),_:1}),o(),vH]),t("td",qH,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jH,t("td",zH,[t("a",CH,[o("最长公共子序列"),e(s)])]),t("td",OH,[t("a",LH,[o("[✓]"),e(s)])]),t("td",EH,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[PH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[KH]),_:1})]),t("td",VH,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[NH,t("td",DH,[t("a",BH,[o("段式回文"),e(s)])]),YH,t("td",AH,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[JH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[RH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[SH]),_:1}),o(),UH]),t("td",WH,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[XH,t("td",FH,[t("a",GH,[o("掷骰子等于目标和的方法数"),e(s)])]),TH,t("td",QH,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ZH]),_:1})]),t("td",$H,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[tI,t("td",eI,[t("a",oI,[o("地图分析"),e(s)])]),lI,t("td",nI,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[sI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[dI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[_I]),_:1}),o(),iI]),t("td",cI,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[aI,t("td",rI,[t("a",hI,[o("与目标颜色间的最短距离"),e(s)])]),uI,t("td",fI,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[gI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[mI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[yI]),_:1})]),t("td",xI,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[pI,t("td",bI,[t("a",kI,[o("删除一次得到子数组最大和"),e(s)])]),MI,t("td",HI,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[II]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[wI]),_:1})]),t("td",vI,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qI,t("td",jI,[t("a",zI,[o("使数组严格递增"),e(s)])]),CI,t("td",OI,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[LI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[EI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[PI]),_:1}),o(),KI]),t("td",VI,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[NI,t("td",DI,[t("a",BI,[o("K 次串联后最大子数组之和"),e(s)])]),YI,t("td",AI,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[JI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[RI]),_:1})]),t("td",SI,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[UI,t("td",WI,[t("a",XI,[o("验证回文串 III"),e(s)])]),FI,t("td",GI,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[TI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[QI]),_:1})]),t("td",ZI,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$I,t("td",tw,[t("a",ew,[o("最长定差子序列"),e(s)])]),ow,t("td",lw,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[nw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[sw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[dw]),_:1})]),t("td",_w,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[iw,t("td",cw,[t("a",aw,[o("统计元音字母序列的数目"),e(s)])]),rw,t("td",hw,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[uw]),_:1})]),t("td",fw,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gw,t("td",mw,[t("a",yw,[o("掷骰子模拟"),e(s)])]),xw,t("td",pw,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[bw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[kw]),_:1})]),t("td",Mw,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Hw,t("td",Iw,[t("a",ww,[o("飞机座位分配概率"),e(s)])]),vw,t("td",qw,[e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[jw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[zw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Cw]),_:1}),o(),Ow]),t("td",Lw,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ew,t("td",Pw,[t("a",Kw,[o("抛掷硬币"),e(s)])]),Vw,t("td",Nw,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Dw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Bw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Yw]),_:1}),o(),Aw]),t("td",Jw,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Rw,t("td",Sw,[t("a",Uw,[o("规划兼职工作"),e(s)])]),Ww,t("td",Xw,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Fw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Gw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Tw]),_:1}),o(),Qw]),t("td",Zw,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$w,t("td",tv,[t("a",ev,[o("删除回文子数组"),e(s)])]),ov,t("td",lv,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[nv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[sv]),_:1})]),t("td",dv,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_v,t("td",iv,[t("a",cv,[o("得分最高的单词集合"),e(s)])]),av,t("td",rv,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[hv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[uv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[fv]),_:1}),o(),gv]),t("td",mv,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[yv,t("td",xv,[t("a",pv,[o("不相交的握手"),e(s)])]),bv,t("td",kv,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Mv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Hv]),_:1})]),t("td",Iv,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[wv,t("td",vv,[t("a",qv,[o("可被三整除的最大和"),e(s)])]),jv,t("td",zv,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Cv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ov]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Lv]),_:1}),o(),Ev]),t("td",Pv,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Kv,t("td",Vv,[t("a",Nv,[o("停在原地的方案数"),e(s)])]),Dv,t("td",Bv,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Yv]),_:1})]),t("td",Av,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Jv,t("td",Rv,[t("a",Sv,[o("统计全为 1 的正方形子矩阵"),e(s)])]),Uv,t("td",Wv,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Xv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Fv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[Gv]),_:1})]),t("td",Tv,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Qv,t("td",Zv,[t("a",$v,[o("分割回文串 III"),e(s)])]),tq,t("td",eq,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[oq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[lq]),_:1})]),t("td",nq,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[sq,t("td",dq,[t("a",_q,[o("下降路径最小和 II"),e(s)])]),iq,t("td",cq,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[aq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[rq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[hq]),_:1})]),t("td",uq,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[fq,t("td",gq,[t("a",mq,[o("最大得分的路径数目"),e(s)])]),yq,t("td",xq,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[pq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[bq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[kq]),_:1})]),t("td",Mq,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Hq,t("td",Iq,[t("a",wq,[o("让字符串成为回文串的最少插入次数"),e(s)])]),t("td",vq,[t("a",qq,[o("[✓]"),e(s)])]),t("td",jq,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[zq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Cq]),_:1})]),t("td",Oq,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Lq,t("td",Eq,[t("a",Pq,[o("二指输入的的最小距离"),e(s)])]),Kq,t("td",Vq,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Nq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Dq]),_:1})]),t("td",Bq,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Yq,t("td",Aq,[t("a",Jq,[o("灌溉花园的最少水龙头数目"),e(s)])]),Rq,t("td",Sq,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Uq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Wq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Xq]),_:1})]),t("td",Fq,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Gq,t("td",Tq,[t("a",Qq,[o("阈值距离内邻居最少的城市"),e(s)])]),Zq,t("td",$q,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[tj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ej]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[oj]),_:1})]),t("td",lj,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[nj,t("td",sj,[t("a",dj,[o("工作计划的最低难度"),e(s)])]),_j,t("td",ij,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[cj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[aj]),_:1})]),t("td",rj,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[hj,t("td",uj,[t("a",fj,[o("跳跃游戏 V"),e(s)])]),gj,t("td",mj,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[yj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[xj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[pj]),_:1})]),t("td",bj,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[kj,t("td",Mj,[t("a",Hj,[o("参加考试的最大学生数"),e(s)])]),Ij,t("td",wj,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[vj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[qj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[jj]),_:1}),o(),zj]),t("td",Cj,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Oj,t("td",Lj,[t("a",Ej,[o("有效的快递序列数目"),e(s)])]),Pj,t("td",Kj,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Vj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Nj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Dj]),_:1})]),t("td",Bj,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Yj,t("td",Aj,[t("a",Jj,[o("形成三的最大倍数"),e(s)])]),Rj,t("td",Sj,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Uj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Wj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Xj]),_:1})]),t("td",Fj,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Gj,t("td",Tj,[t("a",Qj,[o("二叉树中的最长交错路径"),e(s)])]),Zj,t("td",$j,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[tz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ez]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[oz]),_:1}),o(),lz]),t("td",nz,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[sz,t("td",dz,[t("a",_z,[o("二叉搜索子树的最大键值和"),e(s)])]),iz,t("td",cz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[az]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[rz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[hz]),_:1}),o(),uz]),t("td",fz,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gz,t("td",mz,[t("a",yz,[o("将整数按权重排序"),e(s)])]),xz,t("td",pz,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[bz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[kz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Mz]),_:1})]),t("td",Hz,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Iz,t("td",wz,[t("a",vz,[o("3n 块披萨"),e(s)])]),qz,t("td",jz,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[zz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Cz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Oz]),_:1}),o(),Lz]),t("td",Ez,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Pz,t("td",Kz,[t("a",Vz,[o("统计作战单位数"),e(s)])]),Nz,t("td",Dz,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Bz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Yz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Az]),_:1}),o(),Jz]),t("td",Rz,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Sz,t("td",Uz,[t("a",Wz,[o("找到所有好字符串"),e(s)])]),Xz,t("td",Fz,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Gz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Tz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[Qz]),_:1})]),t("td",Zz,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$z,t("td",tC,[t("a",eC,[o("做菜顺序"),e(s)])]),oC,t("td",lC,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[nC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[sC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[dC]),_:1}),o(),_C]),t("td",iC,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[cC,t("td",aC,[t("a",rC,[o("石子游戏 III"),e(s)])]),hC,t("td",uC,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[fC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[gC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[mC]),_:1}),o(),yC]),t("td",xC,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[pC,t("td",bC,[t("a",kC,[o("给 N x 3 网格图涂色的方案数"),e(s)])]),MC,t("td",HC,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[IC]),_:1})]),t("td",wC,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[vC,t("td",qC,[t("a",jC,[o("恢复数组"),e(s)])]),zC,t("td",CC,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[OC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[LC]),_:1})]),t("td",EC,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[PC,t("td",KC,[t("a",VC,[o("生成数组"),e(s)])]),NC,t("td",DC,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[BC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[YC]),_:1})]),t("td",AC,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[JC,t("td",RC,[t("a",SC,[o("带限制的子序列和"),e(s)])]),UC,t("td",WC,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[XC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[FC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[GC]),_:1}),o(),TC]),t("td",QC,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ZC,t("td",$C,[t("a",tO,[o("每个人戴不同帽子的方案数"),e(s)])]),eO,t("td",oO,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[lO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[nO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[sO]),_:1}),o(),dO]),t("td",_O,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[iO,t("td",cO,[t("a",aO,[o("切披萨的方案数"),e(s)])]),rO,t("td",hO,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[uO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[fO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[gO]),_:1}),o(),mO]),t("td",yO,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[xO,t("td",pO,[t("a",bO,[o("数位成本和为目标值的最大数字"),e(s)])]),kO,t("td",MO,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[HO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[IO]),_:1})]),t("td",wO,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[vO,t("td",qO,[t("a",jO,[o("两个子序列的最大点积"),e(s)])]),zO,t("td",CO,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[OO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[LO]),_:1})]),t("td",EO,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[PO,t("td",KO,[t("a",VO,[o("摘樱桃 II"),e(s)])]),NO,t("td",DO,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[BO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[YO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[AO]),_:1})]),t("td",JO,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[RO,t("td",SO,[t("a",UO,[o("两个盒子中球的颜色数相同的概率"),e(s)])]),WO,t("td",XO,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[FO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[GO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[TO]),_:1}),o(),QO]),t("td",ZO,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$O,t("td",tL,[t("a",eL,[o("粉刷房子 III"),e(s)])]),oL,t("td",lL,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[nL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[sL]),_:1})]),t("td",dL,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_L,t("td",iL,[t("a",cL,[o("找两个和为目标值且不重叠的子数组"),e(s)])]),aL,t("td",rL,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[uL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[fL]),_:1}),o(),gL]),t("td",mL,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yL,t("td",xL,[t("a",pL,[o("安排邮筒"),e(s)])]),bL,t("td",kL,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ML]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[HL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[IL]),_:1}),o(),wL]),t("td",vL,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[qL,t("td",jL,[t("a",zL,[o("树节点的第 K 个祖先"),e(s)])]),CL,t("td",OL,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[LL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[EL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[PL]),_:1}),o(),KL]),t("td",VL,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[NL,t("td",DL,[t("a",BL,[o("删掉一个元素以后全为 1 的最长子数组"),e(s)])]),YL,t("td",AL,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[JL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[RL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[SL]),_:1})]),t("td",UL,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[WL,t("td",XL,[t("a",FL,[o("并行课程 II"),e(s)])]),GL,t("td",TL,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[QL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[ZL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[$L]),_:1}),o(),tE]),t("td",eE,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[oE,t("td",lE,[t("a",nE,[o("统计全 1 子矩形"),e(s)])]),sE,t("td",dE,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[_E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[iE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[cE]),_:1}),o(),aE]),t("td",rE,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[hE,t("td",uE,[t("a",fE,[o("石子游戏 IV"),e(s)])]),gE,t("td",mE,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[yE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[xE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[pE]),_:1})]),t("td",bE,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[kE,t("td",ME,[t("a",HE,[o("和为奇数的子数组数目"),e(s)])]),IE,t("td",wE,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[vE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[qE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[jE]),_:1}),o(),zE]),t("td",CE,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[OE,t("td",LE,[t("a",EE,[o("字符串的好分割数目"),e(s)])]),PE,t("td",KE,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[VE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[NE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[DE]),_:1}),o(),BE]),t("td",YE,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[AE,t("td",JE,[t("a",RE,[o("形成目标数组的子数组最少增加次数"),e(s)])]),SE,t("td",UE,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[WE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[XE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[FE]),_:1}),o(),GE]),t("td",TE,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[QE,t("td",ZE,[t("a",$E,[o("压缩字符串 II"),e(s)])]),tP,t("td",eP,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[oP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[lP]),_:1})]),t("td",nP,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[sP,t("td",dP,[t("a",_P,[o("最大得分"),e(s)])]),iP,t("td",cP,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[aP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[rP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[hP]),_:1}),o(),uP]),t("td",fP,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gP,t("td",mP,[t("a",yP,[o("切棍子的最小成本"),e(s)])]),xP,t("td",pP,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[bP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[kP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[MP]),_:1})]),t("td",HP,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[IP,t("td",wP,[t("a",vP,[o("图中最相似的路径"),e(s)])]),qP,t("td",jP,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[zP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[CP]),_:1})]),t("td",OP,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[LP,t("td",EP,[t("a",PP,[o("吃掉 N 个橘子的最少天数"),e(s)])]),KP,t("td",VP,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[NP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[DP]),_:1})]),t("td",BP,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[YP,t("td",AP,[t("a",JP,[o("石子游戏 V"),e(s)])]),RP,t("td",SP,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[UP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[WP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[XP]),_:1}),o(),FP]),t("td",GP,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[TP,t("td",QP,[t("a",ZP,[o("乘积为正数的最长子数组长度"),e(s)])]),$P,t("td",tK,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[eK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[oK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[lK]),_:1})]),t("td",nK,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[sK,t("td",dK,[t("a",_K,[o("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),iK,t("td",cK,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[aK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[rK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[hK]),_:1}),o(),uK]),t("td",fK,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gK,t("td",mK,[t("a",yK,[o("统计所有可行路径"),e(s)])]),xK,t("td",pK,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[bK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[kK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[MK]),_:1})]),t("td",HK,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[IK,t("td",wK,[t("a",vK,[o("使绳子变成彩色的最短时间"),e(s)])]),qK,t("td",jK,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[zK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[CK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[OK]),_:1}),o(),LK]),t("td",EK,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[PK,t("td",KK,[t("a",VK,[o("矩阵的最大非负积"),e(s)])]),NK,t("td",DK,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[BK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[YK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[AK]),_:1})]),t("td",JK,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[RK,t("td",SK,[t("a",UK,[o("连通两组点的最小成本"),e(s)])]),WK,t("td",XK,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[FK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[GK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[TK]),_:1}),o(),QK]),t("td",ZK,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$K,t("td",tV,[t("a",eV,[o("使整数变为 0 的最少操作次数"),e(s)])]),oV,t("td",lV,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[nV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[sV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[dV]),_:1})]),t("td",_V,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[iV,t("td",cV,[t("a",aV,[o("统计子树中城市之间最大距离"),e(s)])]),rV,t("td",hV,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[uV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[fV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[gV]),_:1}),o(),mV]),t("td",yV,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[xV,t("td",pV,[t("a",bV,[o("大小为 K 的不重叠线段的数目"),e(s)])]),kV,t("td",MV,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[HV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[IV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[wV]),_:1})]),t("td",vV,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qV,t("td",jV,[t("a",zV,[o("无矛盾的最佳球队"),e(s)])]),CV,t("td",OV,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[LV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[EV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[PV]),_:1})]),t("td",KV,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[VV,t("td",NV,[t("a",DV,[o("统计只差一个字符的子串数目"),e(s)])]),BV,t("td",YV,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[AV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[JV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[RV]),_:1}),o(),SV]),t("td",UV,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[WV,t("td",XV,[t("a",FV,[o("通过给定词典构造目标字符串的方案数"),e(s)])]),GV,t("td",TV,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[QV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[ZV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[$V]),_:1})]),t("td",tN,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[eN,t("td",oN,[t("a",lN,[o("统计字典序元音字符串的数目"),e(s)])]),nN,t("td",sN,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[dN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[_N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[iN]),_:1})]),t("td",cN,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[aN,t("td",rN,[t("a",hN,[o("第 K 条最小指令"),e(s)])]),uN,t("td",fN,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[gN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[mN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[yN]),_:1}),o(),xN]),t("td",pN,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bN,t("td",kN,[t("a",MN,[o("使字符串平衡的最少删除次数"),e(s)])]),HN,t("td",IN,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[wN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[vN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[qN]),_:1})]),t("td",jN,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zN,t("td",CN,[t("a",ON,[o("到家的最少跳跃次数"),e(s)])]),LN,t("td",EN,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[PN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[KN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[VN]),_:1})]),t("td",NN,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[DN,t("td",BN,[t("a",YN,[o("分配重复整数"),e(s)])]),AN,t("td",JN,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[RN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[SN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[UN]),_:1}),o(),WN]),t("td",XN,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[FN,t("td",GN,[t("a",TN,[o("最大化网格幸福感"),e(s)])]),QN,t("td",ZN,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[$N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[tD]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[eD]),_:1}),o(),oD]),t("td",lD,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[nD,t("td",sD,[t("a",dD,[o("最大重复子字符串"),e(s)])]),_D,t("td",iD,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[cD]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[aD]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[rD]),_:1})]),t("td",hD,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[uD,t("td",fD,[t("a",gD,[o("得到山形数组的最少删除次数"),e(s)])]),mD,t("td",yD,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[xD]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[pD]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[bD]),_:1}),o(),kD]),t("td",MD,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[HD,t("td",ID,[t("a",wD,[o("最小不兼容性"),e(s)])]),vD,t("td",qD,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[jD]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[zD]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[CD]),_:1}),o(),OD]),t("td",LD,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ED,t("td",PD,[t("a",KD,[o("最长回文子序列 II"),e(s)])]),VD,t("td",ND,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[DD]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[BD]),_:1})]),t("td",YD,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[AD,t("td",JD,[t("a",RD,[o("从仓库到码头运输箱子"),e(s)])]),SD,t("td",UD,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[WD]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[XD]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[FD]),_:1}),o(),GD]),t("td",TD,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[QD,t("td",ZD,[t("a",$D,[o("石子游戏 VII"),e(s)])]),tB,t("td",eB,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[oB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[lB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[nB]),_:1}),o(),sB]),t("td",dB,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_B,t("td",iB,[t("a",cB,[o("堆叠长方体的最大高度"),e(s)])]),aB,t("td",rB,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[uB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[fB]),_:1})]),t("td",gB,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[mB,t("td",yB,[t("a",xB,[o("计算分配糖果的不同方式"),e(s)])]),pB,t("td",bB,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[kB]),_:1})]),t("td",MB,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[HB,t("td",IB,[t("a",wB,[o("跳跃游戏 VI"),e(s)])]),vB,t("td",qB,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[jB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[zB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[CB]),_:1}),o(),OB]),t("td",LB,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[EB,t("td",PB,[t("a",KB,[o("数组中特殊等间距元素的和"),e(s)])]),VB,t("td",NB,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[DB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[BB]),_:1})]),t("td",YB,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[AB,t("td",JB,[t("a",RB,[o("完成所有工作的最短时间"),e(s)])]),SB,t("td",UB,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[WB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[XB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[FB]),_:1}),o(),GB]),t("td",TB,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[QB,t("td",ZB,[t("a",$B,[o("猫和老鼠 II"),e(s)])]),tY,t("td",eY,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[oY]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[lY]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[nY]),_:1}),o(),sY]),t("td",dY,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_Y,t("td",iY,[t("a",cY,[o("生成乘积数组的方案数"),e(s)])]),aY,t("td",rY,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hY]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[uY]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[fY]),_:1}),o(),gY]),t("td",mY,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[yY,t("td",xY,[t("a",pY,[o("分割回文串 IV"),e(s)])]),bY,t("td",kY,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[MY]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[HY]),_:1})]),t("td",IY,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[wY,t("td",vY,[t("a",qY,[o("经过一次操作后的最大子数组和"),e(s)])]),jY,t("td",zY,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[CY]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[OY]),_:1})]),t("td",LY,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[EY,t("td",PY,[t("a",KY,[o("任意子数组和的绝对值的最大值"),e(s)])]),VY,t("td",NY,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[DY]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[BY]),_:1})]),t("td",YY,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[AY,t("td",JY,[t("a",RY,[o("最多可以参加的会议数目 II"),e(s)])]),SY,t("td",UY,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[WY]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[XY]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[FY]),_:1}),o(),GY]),t("td",TY,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[QY,t("td",ZY,[t("a",$Y,[o("最接近目标值的子序列和"),e(s)])]),tA,t("td",eA,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[oA]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[lA]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[nA]),_:1}),o(),sA]),t("td",dA,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_A,t("td",iA,[t("a",cA,[o("执行乘法运算的最大分数"),e(s)])]),aA,t("td",rA,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hA]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[uA]),_:1})]),t("td",fA,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gA,t("td",mA,[t("a",yA,[o("由子序列构造的最长回文串的长度"),e(s)])]),xA,t("td",pA,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[bA]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[kA]),_:1})]),t("td",MA,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[HA,t("td",IA,[t("a",wA,[o("最接近目标价格的甜点成本"),e(s)])]),vA,t("td",qA,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[jA]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[zA]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[CA]),_:1})]),t("td",OA,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[LA,t("td",EA,[t("a",PA,[o("从第一个节点出发到最后一个节点的受限路径数"),e(s)])]),KA,t("td",VA,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[NA]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[DA]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[BA]),_:1}),o(),YA]),t("td",AA,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[JA,t("td",RA,[t("a",SA,[o("使所有区间的异或结果为零"),e(s)])]),UA,t("td",WA,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[XA]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[FA]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[GA]),_:1})]),t("td",TA,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[QA,t("td",ZA,[t("a",$A,[o("N 次操作后的最大分数和"),e(s)])]),tJ,t("td",eJ,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[oJ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[lJ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[nJ]),_:1}),o(),sJ]),t("td",dJ,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_J,t("td",iJ,[t("a",cJ,[o("得到新鲜甜甜圈的最多组数"),e(s)])]),aJ,t("td",rJ,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[hJ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[uJ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[fJ]),_:1}),o(),gJ]),t("td",mJ,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[yJ,t("td",xJ,[t("a",pJ,[o("最少侧跳次数"),e(s)])]),bJ,t("td",kJ,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[MJ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[HJ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[IJ]),_:1})]),t("td",wJ,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[vJ,t("td",qJ,[t("a",jJ,[o("有向图中最大颜色值"),e(s)])]),zJ,t("td",CJ,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[OJ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[LJ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[EJ]),_:1}),o(),PJ]),t("td",KJ,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[VJ,t("td",NJ,[t("a",DJ,[o("恰有 K 根木棍可以看到的排列数目"),e(s)])]),BJ,t("td",YJ,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[AJ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[JJ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[RJ]),_:1})]),t("td",SJ,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[UJ,t("td",WJ,[t("a",XJ,[o("跳跃游戏 VII"),e(s)])]),FJ,t("td",GJ,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[TJ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[QJ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[ZJ]),_:1}),o(),$J]),t("td",tR,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[eR,t("td",oR,[t("a",lR,[o("石子游戏 VIII"),e(s)])]),nR,t("td",sR,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[dR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[_R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[iR]),_:1}),o(),cR]),t("td",aR,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[rR,t("td",hR,[t("a",uR,[o("两个数组最小的异或值之和"),e(s)])]),fR,t("td",gR,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[mR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[yR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[xR]),_:1}),o(),pR]),t("td",bR,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[kR,t("td",MR,[t("a",HR,[o("准时抵达会议现场的最小跳过休息次数"),e(s)])]),IR,t("td",wR,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[vR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[qR]),_:1})]),t("td",jR,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[zR,t("td",CR,[t("a",OR,[o("鸡蛋掉落-两枚鸡蛋"),e(s)])]),LR,t("td",ER,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[PR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[KR]),_:1})]),t("td",VR,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[NR,t("td",DR,[t("a",BR,[o("使二进制字符串字符交替的最少反转次数"),e(s)])]),YR,t("td",AR,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[JR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[RR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[SR]),_:1}),o(),UR]),t("td",WR,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[XR,t("td",FR,[t("a",GR,[o("反转表达式值的最少操作次数"),e(s)])]),TR,t("td",QR,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ZR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[$R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[tS]),_:1}),o(),eS]),t("td",oS,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[lS,t("td",nS,[t("a",sS,[o("最佳运动员的比拼回合"),e(s)])]),dS,t("td",_S,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[iS]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[cS]),_:1})]),t("td",aS,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[rS,t("td",hS,[t("a",uS,[o("Nim 游戏 II"),e(s)])]),fS,t("td",gS,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[mS]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[yS]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[xS]),_:1}),o(),pS]),t("td",bS,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[kS,t("td",MS,[t("a",HS,[o("最大子序列交替和"),e(s)])]),IS,t("td",wS,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[vS]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[qS]),_:1})]),t("td",jS,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zS,t("td",CS,[t("a",OS,[o("统计为蚁群构筑房间的不同顺序"),e(s)])]),LS,t("td",ES,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[PS]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[KS]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[VS]),_:1}),o(),NS]),t("td",DS,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[BS,t("td",YS,[t("a",AS,[o("规定时间内到达终点的最小花费"),e(s)])]),JS,t("td",RS,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[SS]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[US]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[WS]),_:1})]),t("td",XS,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[FS,t("td",GS,[t("a",TS,[o("用三种不同颜色为网格涂色"),e(s)])]),QS,t("td",ZS,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[$S]),_:1})]),t("td",tU,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[eU,t("td",oU,[t("a",lU,[o("扣分后的最大得分"),e(s)])]),nU,t("td",sU,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[dU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[_U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[iU]),_:1})]),t("td",cU,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[aU,t("td",rU,[t("a",hU,[o("最大兼容性评分和"),e(s)])]),uU,t("td",fU,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[gU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[mU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[yU]),_:1}),o(),xU]),t("td",pU,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[bU,t("td",kU,[t("a",MU,[o("统计特殊子序列的数目"),e(s)])]),HU,t("td",IU,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[wU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[vU]),_:1})]),t("td",qU,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[jU,t("td",zU,[t("a",CU,[o("K 次调整数组大小浪费的最小总空间"),e(s)])]),OU,t("td",LU,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[EU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[PU]),_:1})]),t("td",KU,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[VU,t("td",NU,[t("a",DU,[o("到达目的地的方案数"),e(s)])]),BU,t("td",YU,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[AU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[JU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[RU]),_:1}),o(),SU]),t("td",UU,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[WU,t("td",XU,[t("a",FU,[o("划分数字的方案数"),e(s)])]),GU,t("td",TU,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[QU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ZU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[$U]),_:1})]),t("td",tW,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[eW,t("td",oW,[t("a",lW,[o("最小化目标值与所选元素的差"),e(s)])]),nW,t("td",sW,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[dW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[_W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[iW]),_:1})]),t("td",cW,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[aW,t("td",rW,[t("a",hW,[o("完成任务的最少工作时间段"),e(s)])]),uW,t("td",fW,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[gW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[mW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[yW]),_:1}),o(),xW]),t("td",pW,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[bW,t("td",kW,[t("a",MW,[o("不同的好子序列数目"),e(s)])]),HW,t("td",IW,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[wW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[vW]),_:1})]),t("td",qW,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[jW,t("td",zW,[t("a",CW,[o("好子集的数目"),e(s)])]),OW,t("td",LW,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[EW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[PW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[KW]),_:1}),o(),VW]),t("td",NW,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[DW,t("td",BW,[t("a",YW,[o("访问完所有房间的第一天"),e(s)])]),AW,t("td",JW,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[RW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[SW]),_:1})]),t("td",UW,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[WW,t("td",XW,[t("a",FW,[o("两个回文子序列长度的最大乘积"),e(s)])]),GW,t("td",TW,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[QW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[ZW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[$W]),_:1}),o(),tX]),t("td",eX,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[oX,t("td",lX,[t("a",nX,[o("每棵子树内缺失的最小基因值"),e(s)])]),sX,t("td",dX,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[_X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[iX]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[cX]),_:1}),o(),aX]),t("td",rX,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[hX,t("td",uX,[t("a",fX,[o("斐波那契树的移除子树游戏"),e(s)])]),gX,t("td",mX,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[yX]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[xX]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[pX]),_:1}),o(),bX]),t("td",kX,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[MX,t("td",HX,[t("a",IX,[o("出租车的最大盈利"),e(s)])]),wX,t("td",vX,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[qX]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[jX]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[zX]),_:1}),o(),CX]),t("td",OX,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[LX,t("td",EX,[t("a",PX,[o("解出数学表达式的学生分数"),e(s)])]),KX,t("td",VX,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[NX]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[DX]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[BX]),_:1}),o(),YX]),t("td",AX,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[JX,t("td",RX,[t("a",SX,[o("将数组分成两个数组并最小化数组和的差"),e(s)])]),UX,t("td",WX,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[XX]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[FX]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[GX]),_:1}),o(),TX]),t("td",QX,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ZX,t("td",$X,[t("a",tF,[o("最大交替子数组和"),e(s)])]),eF,t("td",oF,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[lF]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[nF]),_:1})]),t("td",sF,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[dF,t("td",_F,[t("a",iF,[o("并行课程 III"),e(s)])]),cF,t("td",aF,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[rF]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[hF]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[uF]),_:1}),o(),fF]),t("td",gF,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[mF,t("td",yF,[t("a",xF,[o("将句子分隔成行的最低成本"),e(s)])]),pF,t("td",bF,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[kF]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[MF]),_:1})]),t("td",HF,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[IF,t("td",wF,[t("a",vF,[o("两个最好的不重叠活动"),e(s)])]),qF,t("td",jF,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[zF]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[CF]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[OF]),_:1}),o(),LF]),t("td",EF,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[PF,t("td",KF,[t("a",VF,[o("同源字符串检测"),e(s)])]),NF,t("td",DF,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[BF]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[YF]),_:1})]),t("td",AF,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[JF,t("td",RF,[t("a",SF,[o("所有子字符串中的元音"),e(s)])]),UF,t("td",WF,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[XF]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[FF]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[GF]),_:1}),o(),TF]),t("td",QF,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ZF,t("td",$F,[t("a",tG,[o("喂食仓鼠的最小食物桶数"),e(s)])]),eG,t("td",oG,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[lG]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[nG]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[sG]),_:1})]),t("td",dG,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_G,t("td",iG,[t("a",cG,[o("统计农场中肥沃金字塔的数目"),e(s)])]),aG,t("td",rG,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hG]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[uG]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[fG]),_:1})]),t("td",gG,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[mG,t("td",yG,[t("a",xG,[o("适合野炊的日子"),e(s)])]),pG,t("td",bG,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[kG]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[MG]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[HG]),_:1})]),t("td",IG,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[wG,t("td",vG,[t("a",qG,[o("股票平滑下跌阶段的数目"),e(s)])]),jG,t("td",zG,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[CG]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[OG]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[LG]),_:1})]),t("td",EG,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[PG,t("td",KG,[t("a",VG,[o("解决智力问题"),e(s)])]),NG,t("td",DG,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[BG]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[YG]),_:1})]),t("td",AG,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[JG,t("td",RG,[t("a",SG,[o("在两个数组的区间中选取数字"),e(s)])]),UG,t("td",WG,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[XG]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[FG]),_:1})]),t("td",GG,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[TG,t("td",QG,[t("a",ZG,[o("分隔长廊的方案数"),e(s)])]),$G,t("td",tT,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[eT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[oT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[lT]),_:1})]),t("td",nT,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[sT,t("td",dT,[t("a",_T,[o("穿过所有点的所需最少直线数量"),e(s)])]),iT,t("td",cT,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[aT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[rT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hT]),_:1}),o(),uT]),t("td",fT,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[gT,t("td",mT,[t("a",yT,[o("删除元素后和的最小差值"),e(s)])]),xT,t("td",pT,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[bT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[kT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[MT]),_:1})]),t("td",HT,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[IT,t("td",wT,[t("a",vT,[o("移除所有载有违禁货物车厢所需的最少时间"),e(s)])]),qT,t("td",jT,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[zT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[CT]),_:1})]),t("td",OT,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[LT,t("td",ET,[t("a",PT,[o("数组的最大与和"),e(s)])]),KT,t("td",VT,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[NT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[DT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[BT]),_:1}),o(),YT]),t("td",AT,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[JT,t("td",RT,[t("a",ST,[o("建造坚实的砖墙的方法数"),e(s)])]),UT,t("td",WT,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[XT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[FT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[GT]),_:1}),o(),TT]),t("td",QT,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ZT,t("td",$T,[t("a",tQ,[o("完成比赛的最少时间"),e(s)])]),eQ,t("td",oQ,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[lQ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[nQ]),_:1})]),t("td",sQ,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[dQ,t("td",_Q,[t("a",iQ,[o("建造纸牌屋的方法数"),e(s)])]),cQ,t("td",aQ,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[rQ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[hQ]),_:1})]),t("td",uQ,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fQ,t("td",gQ,[t("a",mQ,[o("用地毯覆盖后的最少白色砖块"),e(s)])]),yQ,t("td",xQ,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[pQ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[bQ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[kQ]),_:1})]),t("td",MQ,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[HQ,t("td",IQ,[t("a",wQ,[o("从栈中取出 K 个硬币的最大面值和"),e(s)])]),vQ,t("td",qQ,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[jQ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[zQ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[CQ]),_:1})]),t("td",OQ,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[LQ,t("td",EQ,[t("a",PQ,[o("选择建筑的方案数"),e(s)])]),KQ,t("td",VQ,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[NQ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[DQ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[BQ]),_:1})]),t("td",YQ,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[AQ,t("td",JQ,[t("a",RQ,[o("K 条高速公路的最大旅行费用"),e(s)])]),SQ,t("td",UQ,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[WQ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[XQ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[FQ]),_:1}),o(),GQ]),t("td",TQ,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[QQ,t("td",ZQ,[t("a",$Q,[o("字符串的总引力"),e(s)])]),t("td",tZ,[t("a",eZ,[o("[✓]"),e(s)])]),t("td",oZ,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[lZ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[nZ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[sZ]),_:1})]),t("td",dZ,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_Z,t("td",iZ,[t("a",cZ,[o("数组变为有序的最小操作次数"),e(s)])]),aZ,t("td",rZ,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[hZ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[uZ]),_:1})]),t("td",fZ,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gZ,t("td",mZ,[t("a",yZ,[o("统计打字方案数"),e(s)])]),xZ,t("td",pZ,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[bZ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[kZ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[MZ]),_:1}),o(),HZ]),t("td",IZ,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[wZ,t("td",vZ,[t("a",qZ,[o("检查是否有合法括号字符串路径"),e(s)])]),jZ,t("td",zZ,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[CZ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[OZ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[LZ]),_:1})]),t("td",EZ,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[PZ,t("td",KZ,[t("a",VZ,[o("最大波动的子字符串"),e(s)])]),NZ,t("td",DZ,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[BZ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[YZ]),_:1})]),t("td",AZ,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[JZ,t("td",RZ,[t("a",SZ,[o("最大股票收益"),e(s)])]),UZ,t("td",WZ,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[XZ]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[FZ]),_:1})]),t("td",GZ,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[TZ,t("td",QZ,[t("a",ZZ,[o("跳跃游戏 VIII"),e(s)])]),$Z,t("td",t$,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[e$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[o$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[l$]),_:1}),o(),n$]),t("td",s$,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[d$,t("td",_$,[t("a",i$,[o("网格中的最小路径代价"),e(s)])]),c$,t("td",a$,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[r$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[h$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[u$]),_:1})]),t("td",f$,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[g$,t("td",m$,[t("a",y$,[o("公平分发饼干"),e(s)])]),x$,t("td",p$,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[b$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[k$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[M$]),_:1}),o(),H$]),t("td",I$,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[w$,t("td",v$,[t("a",q$,[o("个位数字为 K 的整数之和"),e(s)])]),j$,t("td",z$,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[C$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[O$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[L$]),_:1}),o(),E$]),t("td",P$,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[K$,t("td",V$,[t("a",N$,[o("小于等于 K 的最长二进制子序列"),e(s)])]),D$,t("td",B$,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Y$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[A$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[J$]),_:1}),o(),R$]),t("td",S$,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[U$,t("td",W$,[t("a",X$,[o("卖木头块"),e(s)])]),F$,t("td",G$,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[T$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Q$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Z$]),_:1})]),t("td",$$,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ttt,t("td",ett,[t("a",ott,[o("二叉树中得到结果所需的最少翻转次数"),e(s)])]),ltt,t("td",ntt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[stt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[dtt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[_tt]),_:1}),o(),itt]),t("td",ctt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[att,t("td",rtt,[t("a",htt,[o("不同骰子序列的数目"),e(s)])]),utt,t("td",ftt,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[gtt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[mtt]),_:1})]),t("td",ytt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[xtt,t("td",ptt,[t("a",btt,[o("统计放置房子的方式数"),e(s)])]),ktt,t("td",Mtt,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Htt]),_:1})]),t("td",Itt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[wtt,t("td",vtt,[t("a",qtt,[o("拼接数组的最大分数"),e(s)])]),jtt,t("td",ztt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ctt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ott]),_:1})]),t("td",Ltt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ett,t("td",Ptt,[t("a",Ktt,[o("知道秘密的人数"),e(s)])]),Vtt,t("td",Ntt,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Dtt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Btt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[Ytt]),_:1})]),t("td",Att,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Jtt,t("td",Rtt,[t("a",Stt,[o("网格图中递增路径的数目"),e(s)])]),Utt,t("td",Wtt,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Xtt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Ftt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Gtt]),_:1}),o(),Ttt]),t("td",Qtt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ztt,t("td",$tt,[t("a",tet,[o("统计理想数组的数目"),e(s)])]),eet,t("td",oet,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[net]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[set]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[det]),_:1}),o(),_et]),t("td",iet,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[cet,t("td",aet,[t("a",ret,[o("你能拿走的最大图书数量"),e(s)])]),het,t("td",uet,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[fet]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[get]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[met]),_:1}),o(),yet]),t("td",xet,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[pet,t("td",bet,[t("a",ket,[o("乘坐火车路线的最少费用"),e(s)])]),Met,t("td",Het,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Iet]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[wet]),_:1})]),t("td",vet,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[qet,t("td",jet,[t("a",zet,[o("检查数组是否存在有效划分"),e(s)])]),Cet,t("td",Oet,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Let]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Eet]),_:1})]),t("td",Pet,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ket,t("td",Vet,[t("a",Net,[o("最长理想子序列"),e(s)])]),Det,t("td",Bet,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Yet]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Aet]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Jet]),_:1})]),t("td",Ret,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Set,t("td",Uet,[t("a",Wet,[o("统计特殊整数"),e(s)])]),Xet,t("td",Fet,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Get]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Tet]),_:1})]),t("td",Qet,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Zet,t("td",$et,[t("a",tot,[o("选择边来最大化树的得分"),e(s)])]),eot,t("td",oot,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[lot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[not]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[sot]),_:1})]),t("td",dot,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_ot,t("td",iot,[t("a",cot,[o("二进制字符串重新安排顺序需要的时间"),e(s)])]),aot,t("td",rot,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[hot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[uot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[fot]),_:1})]),t("td",got,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[mot,t("td",yot,[t("a",xot,[o("严格递增的子数组个数"),e(s)])]),pot,t("td",bot,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[kot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Mot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Hot]),_:1})]),t("td",Iot,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[wot,t("td",vot,[t("a",qot,[o("恰好移动 k 步到达某一位置的方法数目"),e(s)])]),jot,t("td",zot,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Cot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Oot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Lot]),_:1})]),t("td",Eot,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Pot,t("td",Kot,[t("a",Vot,[o("杀死所有怪物的最短时间"),e(s)])]),Not,t("td",Dot,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Bot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Yot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Aot]),_:1}),o(),Jot]),t("td",Rot,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Sot,t("td",Uot,[t("a",Wot,[o("最长递增子序列 II"),e(s)])]),Xot,t("td",Fot,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Got]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Tot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Qot]),_:1}),o(),Zot]),t("td",$ot,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[tlt,t("td",elt,[t("a",olt,[o("找到所有好下标"),e(s)])]),llt,t("td",nlt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[slt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[dlt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[_lt]),_:1})]),t("td",ilt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[clt,t("td",alt,[t("a",rlt,[o("对字母串可执行的最大删除数"),e(s)])]),hlt,t("td",ult,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[flt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[glt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[mlt]),_:1}),o(),ylt]),t("td",xlt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[plt,t("td",blt,[t("a",klt,[o("最大限度地提高购买水果的口味"),e(s)])]),Mlt,t("td",Hlt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ilt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[wlt]),_:1})]),t("td",vlt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qlt,t("td",jlt,[t("a",zlt,[o("矩阵中和能被 K 整除的路径"),e(s)])]),Clt,t("td",Olt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Llt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Elt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[Plt]),_:1})]),t("td",Klt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Vlt,t("td",Nlt,[t("a",Dlt,[o("使子数组最大公约数大于一的最小分割数"),e(s)])]),Blt,t("td",Ylt,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Alt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Jlt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Rlt]),_:1}),o(),Slt]),t("td",Ult,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wlt,t("td",Xlt,[t("a",Flt,[o("最小化数组中的最大值"),e(s)])]),Glt,t("td",Tlt,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Qlt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Zlt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[$lt]),_:1}),o(),tnt]),t("td",ent,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ont,t("td",lnt,[t("a",nnt,[o("最小移动总距离"),e(s)])]),snt,t("td",dnt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[_nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[int]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[cnt]),_:1})]),t("td",ant,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[rnt,t("td",hnt,[t("a",unt,[o("有效分割中的最少子数组数目"),e(s)])]),fnt,t("td",gnt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[mnt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[ynt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[xnt]),_:1}),o(),pnt]),t("td",bnt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[knt,t("td",Mnt,[t("a",Hnt,[o("统计构造好字符串的方案数"),e(s)])]),Int,t("td",wnt,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[vnt]),_:1})]),t("td",qnt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jnt,t("td",znt,[t("a",Cnt,[o("不重叠回文子字符串的最大数目"),e(s)])]),Ont,t("td",Lnt,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Ent]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[Pnt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Knt]),_:1}),o(),Vnt]),t("td",Nnt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Dnt,t("td",Bnt,[t("a",Ynt,[o("完美分割的方案数"),e(s)])]),Ant,t("td",Jnt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Rnt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Snt]),_:1})]),t("td",Unt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Wnt,t("td",Xnt,[t("a",Fnt,[o("统计回文子序列数目"),e(s)])]),Gnt,t("td",Tnt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Qnt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Znt]),_:1})]),t("td",$nt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[tst,t("td",est,[t("a",ost,[o("乘积为偶数的子数组数"),e(s)])]),lst,t("td",nst,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[sst]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[dst]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[_st]),_:1})]),t("td",ist,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[cst,t("td",ast,[t("a",rst,[o("数组中最长的方波"),e(s)])]),hst,t("td",ust,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[fst]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[gst]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[mst]),_:1}),o(),yst]),t("td",xst,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[pst,t("td",bst,[t("a",kst,[o("检查是否有路径经过相同数量的 0 和 1"),e(s)])]),Mst,t("td",Hst,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ist]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[wst]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[vst]),_:1})]),t("td",qst,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jst,t("td",zst,[t("a",Cst,[o("好分区的数目"),e(s)])]),Ost,t("td",Lst,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Est]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Pst]),_:1})]),t("td",Kst,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Vst,t("td",Nst,[t("a",Dst,[o("将字符串分割成值不超过 K 的子字符串"),e(s)])]),Bst,t("td",Yst,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Ast]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Jst]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Rst]),_:1})]),t("td",Sst,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ust,t("td",Wst,[t("a",Xst,[o("好二进制字符串的数量"),e(s)])]),Fst,t("td",Gst,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Tst]),_:1})]),t("td",Qst,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Zst,t("td",$st,[t("a",tdt,[o("最大价值和与最小价值和的差值"),e(s)])]),edt,t("td",odt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ldt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ndt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[sdt]),_:1}),o(),ddt]),t("td",_dt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[idt,t("td",cdt,[t("a",adt,[o("拆分数组的最小代价"),e(s)])]),rdt,t("td",hdt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[udt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[fdt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[gdt]),_:1}),o(),mdt]),t("td",ydt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[xdt,t("td",pdt,[t("a",bdt,[o("统计上升四元组"),e(s)])]),kdt,t("td",Mdt,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Hdt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Idt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[wdt]),_:1}),o(),vdt]),t("td",qdt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[jdt,t("td",zdt,[t("a",Cdt,[o("二进制矩阵中翻转最多一次使路径不连通"),e(s)])]),Odt,t("td",Ldt,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Edt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Pdt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Kdt]),_:1}),o(),Vdt]),t("td",Ndt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ddt,t("td",Bdt,[t("a",Ydt,[o("将整数减少到零需要的最少操作数"),e(s)])]),Adt,t("td",Jdt,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Rdt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Sdt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Udt]),_:1})]),t("td",Wdt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xdt,t("td",Fdt,[t("a",Gdt,[o("无平方子集计数"),e(s)])]),Tdt,t("td",Qdt,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Zdt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[$dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[t_t]),_:1}),o(),e_t]),t("td",o_t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[l_t,t("td",n_t,[t("a",s_t,[o("找出对应 LCP 矩阵的字符串"),e(s)])]),d_t,t("td",__t,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[i_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[c_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[a_t]),_:1}),o(),r_t]),t("td",h_t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[u_t,t("td",f_t,[t("a",g_t,[o("统计可能的树根数目"),e(s)])]),m_t,t("td",y_t,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[x_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[p_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[b_t]),_:1}),o(),k_t]),t("td",M_t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[H_t,t("td",I_t,[t("a",w_t,[o("获得分数的方法数"),e(s)])]),v_t,t("td",q_t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[j_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[z_t]),_:1})]),t("td",C_t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[O_t,t("td",L_t,[t("a",E_t,[o("美丽子集的数目"),e(s)])]),P_t,t("td",K_t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[V_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[N_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[D_t]),_:1}),o(),B_t]),t("td",Y_t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[A_t,t("td",J_t,[t("a",R_t,[o("找到最大开销的子字符串"),e(s)])]),S_t,t("td",U_t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[W_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[X_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[F_t]),_:1}),o(),G_t]),t("td",T_t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Q_t,t("td",Z_t,[t("a",$_t,[o("网格图中最少访问的格子数"),e(s)])]),tit,t("td",eit,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[oit]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[lit]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[nit]),_:1}),o(),sit]),t("td",dit,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_it,t("td",iit,[t("a",cit,[o("统计 K-Free 子集的总数"),e(s)])]),ait,t("td",rit,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hit]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[uit]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[fit]),_:1}),o(),git]),t("td",mit,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yit,t("td",xit,[t("a",pit,[o("构造有效字符串的最少插入数"),e(s)])]),bit,t("td",kit,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Mit]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Hit]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Iit]),_:1}),o(),wit]),t("td",vit,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qit,t("td",jit,[t("a",zit,[o("最小化旅行的价格总和"),e(s)])]),Cit,t("td",Oit,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Lit]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Eit]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Pit]),_:1}),o(),Kit]),t("td",Vit,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Nit,t("td",Dit,[t("a",Bit,[o("使二叉树所有路径值相等的最小代价"),e(s)])]),Yit,t("td",Ait,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Jit]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Rit]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Sit]),_:1}),o(),Uit]),t("td",Wit,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xit,t("td",Fit,[t("a",Git,[o("英雄的力量"),e(s)])]),Tit,t("td",Qit,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Zit]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[$it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[tct]),_:1}),o(),ect]),t("td",oct,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[lct,t("td",nct,[t("a",sct,[o("矩阵中移动的最大次数"),e(s)])]),dct,t("td",_ct,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ict]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[cct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[act]),_:1})]),t("td",rct,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[hct,t("td",uct,[t("a",fct,[o("字符串中的额外字符"),e(s)])]),gct,t("td",mct,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[yct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[xct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[pct]),_:1}),o(),bct]),t("td",kct,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Mct,t("td",Hct,[t("a",Ict,[o("一个小组的最大实力值"),e(s)])]),wct,t("td",vct,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[qct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[jct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[zct]),_:1}),o(),Cct]),t("td",Oct,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Lct,t("td",Ect,[t("a",Pct,[o("使所有字符相等的最小成本"),e(s)])]),Kct,t("td",Vct,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Nct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Dct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Bct]),_:1})]),t("td",Yct,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Act,t("td",Jct,[t("a",Rct,[o("矩阵中严格递增的单元格数"),e(s)])]),Sct,t("td",Uct,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[Wct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Xct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Fct]),_:1}),o(),Gct]),t("td",Tct,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Qct,t("td",Zct,[t("a",$ct,[o("统计整数数目"),e(s)])]),tat,t("td",eat,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[oat]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[lat]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[nat]),_:1})]),t("td",sat,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[dat,t("td",_at,[t("a",iat,[o("特别的排列"),e(s)])]),cat,t("td",aat,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[rat]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hat]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[uat]),_:1}),o(),fat]),t("td",gat,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[mat,t("td",yat,[t("a",xat,[o("给墙壁刷油漆"),e(s)])]),pat,t("td",bat,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[kat]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Mat]),_:1})]),t("td",Hat,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Iat,t("td",wat,[t("a",vat,[o("构造最长的新字符串"),e(s)])]),qat,t("td",jat,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[zat]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Cat]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Oat]),_:1}),o(),Lat]),t("td",Eat,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Pat,t("td",Kat,[t("a",Vat,[o("字符串连接删减字母"),e(s)])]),Nat,t("td",Dat,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Bat]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Yat]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Aat]),_:1})]),t("td",Jat,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Rat,t("td",Sat,[t("a",Uat,[o("将数组划分成若干好子数组的方式"),e(s)])]),Wat,t("td",Xat,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Fat]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Gat]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Tat]),_:1})]),t("td",Qat,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Zat,t("td",$at,[t("a",trt,[o("将字符串分割为最少的美丽子字符串"),e(s)])]),ert,t("td",ort,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[lrt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[nrt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[srt]),_:1}),o(),drt]),t("td",_rt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[irt,t("td",crt,[t("a",art,[o("达到末尾下标所需的最大跳跃次数"),e(s)])]),rrt,t("td",hrt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[urt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[frt]),_:1})]),t("td",grt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[mrt,t("td",yrt,[t("a",xrt,[o("构造最长非递减子数组"),e(s)])]),prt,t("td",brt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[krt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Mrt]),_:1})]),t("td",Hrt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Irt,t("td",wrt,[t("a",vrt,[o("访问数组中的位置使分数最大"),e(s)])]),qrt,t("td",jrt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[zrt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Crt]),_:1})]),t("td",Ort,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Lrt,t("td",Ert,[t("a",Prt,[o("将一个数字表示成幂的和的方案数"),e(s)])]),Krt,t("td",Vrt,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Nrt]),_:1})]),t("td",Drt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Brt,t("td",Yrt,[t("a",Art,[o("树中可以形成回文的路径数"),e(s)])]),Jrt,t("td",Rrt,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Srt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Urt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Wrt]),_:1}),o(),Xrt]),t("td",Frt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Grt,t("td",Trt,[t("a",Qrt,[o("统计范围内的步进数字数目"),e(s)])]),Zrt,t("td",$rt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[tht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[eht]),_:1})]),t("td",oht,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[lht,t("td",nht,[t("a",sht,[o("使数组和小于等于 x 的最少时间"),e(s)])]),dht,t("td",_ht,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[iht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[cht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[aht]),_:1})]),t("td",rht,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[hht,t("td",uht,[t("a",fht,[o("判断是否能拆分数组"),e(s)])]),ght,t("td",mht,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[yht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[xht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[pht]),_:1})]),t("td",bht,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[kht,t("td",Mht,[t("a",Hht,[o("将三个组排序"),e(s)])]),Iht,t("td",wht,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[vht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[qht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[jht]),_:1})]),t("td",zht,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Cht,t("td",Oht,[t("a",Lht,[o("范围中美丽整数的数目"),e(s)])]),Eht,t("td",Pht,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Kht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Vht]),_:1})]),t("td",Nht,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Dht,t("td",Bht,[t("a",Yht,[o("销售利润最大化"),e(s)])]),Aht,t("td",Jht,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Rht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Sht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Uht]),_:1}),o(),Wht]),t("td",Xht,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Fht,t("td",Ght,[t("a",Tht,[o("在传球游戏中最大化函数值"),e(s)])]),Qht,t("td",Zht,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[$ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[t1t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[e1t]),_:1})]),t("td",o1t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[l1t,t("td",n1t,[t("a",s1t,[o("将石头分散到网格图的最少移动次数"),e(s)])]),d1t,t("td",_1t,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[i1t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[c1t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[a1t]),_:1}),o(),r1t]),t("td",h1t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[u1t,t("td",f1t,[t("a",g1t,[o("字符串转换"),e(s)])]),m1t,t("td",y1t,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[x1t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[p1t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[b1t]),_:1}),o(),k1t]),t("td",M1t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[H1t,t("td",I1t,[t("a",w1t,[o("可以到达每一个节点的最少边反转次数"),e(s)])]),v1t,t("td",q1t,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[j1t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[z1t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[C1t]),_:1}),o(),O1t]),t("td",L1t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[E1t,t("td",P1t,[t("a",K1t,[o("统计树中的合法路径数目"),e(s)])]),V1t,t("td",N1t,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[D1t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[B1t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Y1t]),_:1}),o(),A1t]),t("td",J1t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[R1t,t("td",S1t,[t("a",U1t,[o("有向图访问计数"),e(s)])]),W1t,t("td",X1t,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[F1t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[G1t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[T1t]),_:1})]),t("td",Q1t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Z1t,t("td",$1t,[t("a",tut,[o("将相邻元素相乘后得到最小化数组"),e(s)])]),eut,t("td",out,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[lut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[nut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[sut]),_:1})]),t("td",dut,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_ut,t("td",iut,[t("a",cut,[o("执行操作使两个字符串相等"),e(s)])]),aut,t("td",rut,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[hut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[uut]),_:1})]),t("td",fut,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[gut,t("td",mut,[t("a",yut,[o("最长相邻不相等子序列 I"),e(s)])]),xut,t("td",put,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[but]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[kut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Mut]),_:1}),o(),Hut]),t("td",Iut,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[wut,t("td",vut,[t("a",qut,[o("最长相邻不相等子序列 II"),e(s)])]),jut,t("td",zut,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Cut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Out]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Lut]),_:1})]),t("td",Eut,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Put,t("td",Kut,[t("a",Vut,[o("和带限制的子多重集合的数目"),e(s)])]),Nut,t("td",Dut,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[But]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Yut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Aut]),_:1}),o(),Jut]),t("td",Rut,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Sut,t("td",Uut,[t("a",Wut,[o("得到 K 个半回文串的最少修改次数"),e(s)])]),Xut,t("td",Fut,[e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[Gut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Tut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Qut]),_:1})]),t("td",Zut,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$ut,t("td",tft,[t("a",eft,[o("在网格上移动到目的地的方法数"),e(s)])]),oft,t("td",lft,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[nft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[sft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[dft]),_:1})]),t("td",_ft,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ift,t("td",cft,[t("a",aft,[o("和为目标值的最长子序列的长度"),e(s)])]),rft,t("td",hft,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[uft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[fft]),_:1})]),t("td",gft,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[mft,t("td",yft,[t("a",xft,[o("子数组不同元素数目的平方和 II"),e(s)])]),pft,t("td",bft,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[kft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Mft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Hft]),_:1}),o(),Ift]),t("td",wft,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[vft,t("td",qft,[t("a",jft,[o("使数组变美的最小增量运算数"),e(s)])]),zft,t("td",Cft,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Oft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Lft]),_:1})]),t("td",Eft,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Pft,t("td",Kft,[t("a",Vft,[o("收集所有金币可获得的最大积分"),e(s)])]),Nft,t("td",Dft,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Bft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Yft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Aft]),_:1}),o(),Jft]),t("td",Rft,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Sft,t("td",Uft,[t("a",Wft,[o("在树上执行操作以后得到的最大分数"),e(s)])]),Xft,t("td",Fft,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Gft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Tft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Qft]),_:1})]),t("td",Zft,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[$ft,t("td",tgt,[t("a",egt,[o("平衡子序列的最大和"),e(s)])]),ogt,t("td",lgt,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[ngt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[sgt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[dgt]),_:1}),o(),_gt]),t("td",igt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[cgt,t("td",agt,[t("a",rgt,[o("重新排列后包含指定子字符串的字符串数目"),e(s)])]),hgt,t("td",ugt,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[fgt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ggt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[mgt]),_:1})]),t("td",ygt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xgt,t("td",pgt,[t("a",bgt,[o("购买水果需要的最少金币数"),e(s)])]),kgt,t("td",Mgt,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Hgt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Igt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[wgt]),_:1}),o(),vgt]),t("td",qgt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jgt,t("td",zgt,[t("a",Cgt,[o("找到最大非递减数组的长度"),e(s)])]),Ogt,t("td",Lgt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Egt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Pgt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Kgt]),_:1}),o(),Vgt]),t("td",Ngt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Dgt,t("td",Bgt,[t("a",Ygt,[o("消除相邻近似相等字符"),e(s)])]),Agt,t("td",Jgt,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Rgt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Sgt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ugt]),_:1})]),t("td",Wgt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xgt,t("td",Fgt,[t("a",Ggt,[o("购买水果需要的最少金币数 II"),e(s)])]),Tgt,t("td",Qgt,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Zgt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[$gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[tmt]),_:1}),o(),emt]),t("td",omt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[lmt,t("td",nmt,[t("a",smt,[o("树中每个节点放置的金币数目"),e(s)])]),dmt,t("td",_mt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[imt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[cmt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[amt]),_:1}),o(),rmt]),t("td",hmt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[umt,t("td",fmt,[t("a",gmt,[o("转换字符串的最小成本 II"),e(s)])]),mmt,t("td",ymt,[e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[xmt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[pmt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[bmt]),_:1}),o(),kmt]),t("td",Mmt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Hmt,t("td",Imt,[t("a",wmt,[o("最贵的无法购买的商品"),e(s)])]),vmt,t("td",qmt,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[jmt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[zmt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[Cmt]),_:1})]),t("td",Omt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Lmt,t("td",Emt,[t("a",Pmt,[o("自整除排列的数量"),e(s)])]),Kmt,t("td",Vmt,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Nmt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Dmt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Bmt]),_:1}),o(),Ymt]),t("td",Amt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Jmt,t("td",Rmt,[t("a",Smt,[o("使 X 和 Y 相等的最少操作次数"),e(s)])]),Umt,t("td",Wmt,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Xmt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[Fmt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Gmt]),_:1})]),t("td",Tmt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Qmt,t("td",Zmt,[t("a",$mt,[o("统计强大整数的数目"),e(s)])]),tyt,t("td",eyt,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[oyt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[lyt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[nyt]),_:1})]),t("td",syt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[dyt,t("td",_yt,[t("a",iyt,[o("执行操作后的最大分割数量"),e(s)])]),cyt,t("td",ayt,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[ryt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[hyt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[uyt]),_:1}),o(),fyt]),t("td",gyt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[myt,t("td",yyt,[t("a",xyt,[o("相同颜色的最大子树"),e(s)])]),pyt,t("td",byt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[kyt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Myt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Hyt]),_:1}),o(),Iyt]),t("td",wyt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[vyt,t("td",qyt,[t("a",jyt,[o("价值和小于等于 K 的最大数字"),e(s)])]),zyt,t("td",Cyt,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Oyt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Lyt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Eyt]),_:1})]),t("td",Pyt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Kyt,t("td",Vyt,[t("a",Nyt,[o("可处理的最大删除操作数 I"),e(s)])]),Dyt,t("td",Byt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Yyt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ayt]),_:1})]),t("td",Jyt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ryt,t("td",Syt,[t("a",Uyt,[o("统计各位数字都不同的数字个数 II"),e(s)])]),Wyt,t("td",Xyt,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Fyt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Gyt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Tyt]),_:1})]),t("td",Qyt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Zyt,t("td",$yt,[t("a",t3t,[o("相同分数的最大操作数目 II"),e(s)])]),e3t,t("td",o3t,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[l3t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[n3t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[s3t]),_:1})]),t("td",d3t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_3t,t("td",i3t,[t("a",c3t,[o("修改数组后最大化数组中的连续元素数目"),e(s)])]),a3t,t("td",r3t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[h3t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[u3t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[f3t]),_:1})]),t("td",g3t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[m3t,t("td",y3t,[t("a",x3t,[o("最大节点价值之和"),e(s)])]),p3t,t("td",b3t,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[k3t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[M3t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[H3t]),_:1}),o(),I3t]),t("td",w3t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[v3t,t("td",q3t,[t("a",j3t,[o("K 个不相交子数组的最大能量值"),e(s)])]),z3t,t("td",C3t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[O3t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[L3t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[E3t]),_:1})]),t("td",P3t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[K3t,t("td",V3t,[t("a",N3t,[o("求出所有子序列的能量和"),e(s)])]),D3t,t("td",B3t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Y3t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[A3t]),_:1})]),t("td",J3t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[R3t,t("td",S3t,[t("a",U3t,[o("求出所有子序列的能量和"),e(s)])]),W3t,t("td",X3t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[F3t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[G3t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[T3t]),_:1})]),t("td",Q3t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Z3t,t("td",$3t,[t("a",txt,[o("划分数组得到最小的值之和"),e(s)])]),ext,t("td",oxt,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[lxt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[nxt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[sxt]),_:1}),o(),dxt]),t("td",_xt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ixt,t("td",cxt,[t("a",axt,[o("使矩阵满足条件的最少操作次数"),e(s)])]),rxt,t("td",hxt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[uxt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[fxt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[gxt]),_:1})]),t("td",mxt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yxt,t("td",xxt,[t("a",pxt,[o("找出所有稳定的二进制数组 I"),e(s)])]),bxt,t("td",kxt,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Mxt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[Hxt]),_:1})]),t("td",Ixt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[wxt,t("td",vxt,[t("a",qxt,[o("找出所有稳定的二进制数组 II"),e(s)])]),jxt,t("td",zxt,[e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Cxt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[Oxt]),_:1})]),t("td",Lxt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ext,t("td",Pxt,[t("a",Kxt,[o("通过添加或删除结尾字符来同化字符串"),e(s)])]),Vxt,t("td",Nxt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Dxt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Bxt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Yxt]),_:1}),o(),Axt]),t("td",Jxt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Rxt,t("td",Sxt,[t("a",Uxt,[o("分割字符频率相等的最少子字符串"),e(s)])]),Wxt,t("td",Xxt,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Fxt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Gxt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Txt]),_:1}),o(),Qxt]),t("td",Zxt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[$xt,t("td",t2t,[t("a",e2t,[o("矩阵中的最大得分"),e(s)])]),o2t,t("td",l2t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[n2t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[s2t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[d2t]),_:1})]),t("td",_2t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[i2t,t("td",c2t,[t("a",a2t,[o("找出分数最低的排列"),e(s)])]),r2t,t("td",h2t,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[u2t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[f2t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[g2t]),_:1}),o(),m2t]),t("td",y2t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[x2t,t("td",p2t,[t("a",b2t,[o("到达第 K 级台阶的方案数"),e(s)])]),k2t,t("td",M2t,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[H2t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[I2t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[w2t]),_:1}),o(),v2t]),t("td",q2t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[j2t,t("td",z2t,[t("a",C2t,[o("不包含相邻元素的子序列的最大和"),e(s)])]),O2t,t("td",L2t,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[E2t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[P2t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[K2t]),_:1}),o(),V2t]),t("td",N2t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[D2t,t("td",B2t,[t("a",Y2t,[o("求出最长好子序列 I"),e(s)])]),A2t,t("td",J2t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[R2t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[S2t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[U2t]),_:1})]),t("td",W2t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[X2t,t("td",F2t,[t("a",G2t,[o("求出最长好子序列 II"),e(s)])]),T2t,t("td",Q2t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Z2t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[$2t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[t4t]),_:1})]),t("td",e4t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[o4t,t("td",l4t,[t("a",n4t,[o("执行操作可获得的最大总奖励 I"),e(s)])]),s4t,t("td",d4t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[_4t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[i4t]),_:1})]),t("td",c4t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[a4t,t("td",r4t,[t("a",h4t,[o("执行操作可获得的最大总奖励 II"),e(s)])]),u4t,t("td",f4t,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[g4t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[m4t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[y4t]),_:1})]),t("td",x4t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[p4t,t("td",b4t,[t("a",k4t,[o("达到总和的方法数量"),e(s)])]),M4t,t("td",H4t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[I4t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[w4t]),_:1})]),t("td",v4t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[q4t,t("td",j4t,[t("a",z4t,[o("施咒的最大总伤害"),e(s)])]),C4t,t("td",O4t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[L4t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[E4t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[P4t]),_:1}),o(),K4t]),t("td",V4t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[N4t,t("td",D4t,[t("a",B4t,[o("使二进制数组全部等于 1 的最少操作次数 II"),e(s)])]),Y4t,t("td",A4t,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[J4t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[R4t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[S4t]),_:1})]),t("td",U4t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[W4t,t("td",X4t,[t("a",F4t,[o("统计逆序对的数目"),e(s)])]),G4t,t("td",T4t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Q4t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Z4t]),_:1})]),t("td",$4t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[tpt,t("td",ept,[t("a",opt,[o("最大化子数组的总成本"),e(s)])]),lpt,t("td",npt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[spt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[dpt]),_:1})]),t("td",_pt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ipt,t("td",cpt,[t("a",apt,[o("找出有效子序列的最大长度 I"),e(s)])]),rpt,t("td",hpt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[upt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[fpt]),_:1})]),t("td",gpt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[mpt,t("td",ypt,[t("a",xpt,[o("找出有效子序列的最大长度 II"),e(s)])]),ppt,t("td",bpt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[kpt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Mpt]),_:1})]),t("td",Hpt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ipt,t("td",wpt,[t("a",vpt,[o("最大数组跳跃得分 I"),e(s)])]),qpt,t("td",jpt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[zpt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Cpt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Opt]),_:1}),o(),Lpt]),t("td",Ept,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ppt,t("td",Kpt,[t("a",Vpt,[o("最小代价构造字符串"),e(s)])]),Npt,t("td",Dpt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Bpt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ypt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Apt]),_:1}),o(),Jpt]),t("td",Rpt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Spt,t("td",Upt,[t("a",Wpt,[o("切蛋糕的最小总开销 I"),e(s)])]),Xpt,t("td",Fpt,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Gpt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Tpt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Qpt]),_:1}),o(),Zpt]),t("td",$pt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[tbt,t("td",ebt,[t("a",obt,[o("网格图操作后的最大分数"),e(s)])]),lbt,t("td",nbt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[sbt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[dbt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[_bt]),_:1}),o(),ibt]),t("td",cbt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[abt,t("td",rbt,[t("a",hbt,[o("使数组等于目标数组所需的最少操作次数"),e(s)])]),ubt,t("td",fbt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[gbt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[mbt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ybt]),_:1}),o(),xbt]),t("td",pbt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bbt,t("td",kbt,[t("a",Mbt,[o("标记所有节点需要的时间"),e(s)])]),Hbt,t("td",Ibt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[wbt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[vbt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[qbt]),_:1}),o(),jbt]),t("td",zbt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Cbt,t("td",Obt,[t("a",Lbt,[o("奇数和子序列的数量"),e(s)])]),Ebt,t("td",Pbt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Kbt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Vbt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Nbt]),_:1}),o(),Dbt]),t("td",Bbt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ybt,t("td",Abt,[t("a",Jbt,[o("单调数组对的数目 I"),e(s)])]),Rbt,t("td",Sbt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ubt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Wbt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Xbt]),_:1}),o(),Fbt]),t("td",Gbt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Tbt,t("td",Qbt,[t("a",Zbt,[o("单调数组对的数目 II"),e(s)])]),$bt,t("td",t5t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[e5t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[o5t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[l5t]),_:1}),o(),n5t]),t("td",s5t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[d5t,t("td",_5t,[t("a",i5t,[o("放三个车的价值之和最大 I"),e(s)])]),c5t,t("td",a5t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[r5t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[h5t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[u5t]),_:1}),o(),f5t]),t("td",g5t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[m5t,t("td",y5t,[t("a",x5t,[o("放三个车的价值之和最大 II"),e(s)])]),p5t,t("td",b5t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[k5t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[M5t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[H5t]),_:1}),o(),I5t]),t("td",w5t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[v5t,t("td",q5t,[t("a",j5t,[o("超级饮料的最大强化能量"),e(s)])]),z5t,t("td",C5t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[O5t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[L5t]),_:1})]),t("td",E5t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[P5t,t("td",K5t,[t("a",V5t,[o("找出最大的 N 位 K 回文数"),e(s)])]),N5t,t("td",D5t,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[B5t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Y5t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[A5t]),_:1}),o(),J5t]),t("td",R5t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[S5t,t("td",U5t,[t("a",W5t,[o("构建两个递增数组"),e(s)])]),X5t,t("td",F5t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[G5t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[T5t]),_:1})]),t("td",Q5t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Z5t,t("td",$5t,[t("a",t0t,[o("选择矩阵中单元格的最大得分"),e(s)])]),e0t,t("td",o0t,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[l0t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[n0t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[s0t]),_:1}),o(),d0t]),t("td",_0t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[i0t,t("td",c0t,[t("a",a0t,[o("查询子数组最大异或值"),e(s)])]),r0t,t("td",h0t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[u0t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[f0t]),_:1})]),t("td",g0t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[m0t,t("td",y0t,[t("a",x0t,[o("连续子数组的和"),e(s)])]),p0t,t("td",b0t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[k0t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[M0t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[H0t]),_:1})]),t("td",I0t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[w0t,t("td",v0t,[t("a",q0t,[o("求出数组中最大序列值"),e(s)])]),j0t,t("td",z0t,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[C0t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[O0t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[L0t]),_:1})]),t("td",E0t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[P0t,t("td",K0t,[t("a",V0t,[o("最高乘法得分"),e(s)])]),N0t,t("td",D0t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[B0t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Y0t]),_:1})]),t("td",A0t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[J0t,t("td",R0t,[t("a",S0t,[o("形成目标字符串需要的最少字符串数 I"),e(s)])]),U0t,t("td",W0t,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[X0t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[F0t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[G0t]),_:1}),o(),T0t]),t("td",Q0t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Z0t,t("td",$0t,[t("a",t8t,[o("形成目标字符串需要的最少字符串数 II"),e(s)])]),e8t,t("td",o8t,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[l8t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[n8t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[s8t]),_:1}),o(),d8t]),t("td",_8t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[i8t,t("td",c8t,[t("a",a8t,[o("连续子序列的和"),e(s)])]),r8t,t("td",h8t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[u8t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[f8t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[g8t]),_:1})]),t("td",m8t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[y8t,t("td",x8t,[t("a",p8t,[o("字典序最小的合法序列"),e(s)])]),b8t,t("td",k8t,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[M8t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[H8t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[I8t]),_:1}),o(),w8t]),t("td",v8t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[q8t,t("td",j8t,[t("a",z8t,[o("覆盖"),e(s)])]),C8t,t("td",O8t,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[L8t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[E8t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[P8t]),_:1}),o(),K8t]),t("td",V8t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[N8t,t("td",D8t,[t("a",B8t,[o("传递信息"),e(s)])]),Y8t,t("td",A8t,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[J8t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[R8t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[S8t]),_:1}),o(),U8t]),t("td",W8t,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[X8t,t("td",F8t,[t("a",G8t,[o("最小跳跃次数"),e(s)])]),T8t,t("td",Q8t,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Z8t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[$8t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[t6t]),_:1}),o(),e6t]),t("td",o6t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[l6t,t("td",n6t,[t("a",s6t,[o("二叉树任务调度"),e(s)])]),d6t,t("td",_6t,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[i6t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[c6t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[a6t]),_:1}),o(),r6t]),t("td",h6t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[u6t,t("td",f6t,[t("a",g6t,[o("寻宝"),e(s)])]),m6t,t("td",y6t,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[x6t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[p6t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[b6t]),_:1}),o(),k6t]),t("td",M6t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[H6t,t("td",I6t,[t("a",w6t,[o("切分数组"),e(s)])]),v6t,t("td",q6t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[j6t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[z6t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[C6t]),_:1}),o(),O6t]),t("td",L6t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[E6t,t("td",P6t,[t("a",K6t,[o("秋叶收藏集"),e(s)])]),V6t,t("td",N6t,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[D6t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[B6t]),_:1})]),t("td",Y6t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[A6t,t("td",J6t,[t("a",R6t,[o("快速公交"),e(s)])]),S6t,t("td",U6t,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[W6t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[X6t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[F6t]),_:1})]),t("td",G6t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[T6t,t("td",Q6t,[t("a",Z6t,[o("古董键盘"),e(s)])]),$6t,t("td",t7t,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[e7t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[o7t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[l7t]),_:1})]),t("td",n7t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[s7t,t("td",d7t,[t("a",_7t,[o("导航装置"),e(s)])]),i7t,t("td",c7t,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[a7t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[r7t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[h7t]),_:1})]),t("td",u7t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[f7t,t("td",g7t,[t("a",m7t,[o("变换的迷宫"),e(s)])]),y7t,t("td",x7t,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[p7t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[b7t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[k7t]),_:1}),o(),M7t]),t("td",H7t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[I7t,t("td",w7t,[t("a",v7t,[o("二叉树染色"),e(s)])]),q7t,t("td",j7t,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[z7t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[C7t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[O7t]),_:1})]),t("td",L7t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[E7t,t("td",P7t,[t("a",K7t,[o("最多牌组数"),e(s)])]),V7t,t("td",N7t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[D7t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[B7t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Y7t]),_:1})]),t("td",A7t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[J7t,t("td",R7t,[t("a",S7t,[o("守卫城堡"),e(s)])]),U7t,t("td",W7t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[X7t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[F7t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[G7t]),_:1})]),t("td",T7t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Q7t,t("td",Z7t,[t("a",$7t,[o("十字路口的交通"),e(s)])]),t9t,t("td",e9t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[o9t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[l9t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[n9t]),_:1})]),t("td",s9t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[d9t,t("td",_9t,[t("a",i9t,[o("自行车炫技赛场"),e(s)])]),c9t,t("td",a9t,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[r9t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[h9t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[u9t]),_:1}),o(),f9t]),t("td",g9t,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[m9t,t("td",y9t,[t("a",x9t,[o("入场安检"),e(s)])]),p9t,t("td",b9t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[k9t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[M9t]),_:1})]),t("td",H9t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[I9t,t("td",w9t,[t("a",v9t,[o("守护太空城"),e(s)])]),q9t,t("td",j9t,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[z9t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[C9t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[O9t]),_:1}),o(),L9t]),t("td",E9t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[P9t,t("td",K9t,[t("a",V9t,[o("打地鼠"),e(s)])]),N9t,t("td",D9t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[B9t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Y9t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[A9t]),_:1}),o(),J9t]),t("td",R9t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[S9t,t("td",U9t,[t("a",W9t,[o("搭桥过河"),e(s)])]),X9t,t("td",F9t,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[G9t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[T9t]),_:1})]),t("td",Q9t,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Z9t,t("td",$9t,[t("a",tkt,[o("力扣泡泡龙"),e(s)])]),ekt,t("td",okt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[lkt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[nkt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[skt]),_:1})]),t("td",dkt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_kt,t("td",ikt,[t("a",ckt,[o("弹珠游戏"),e(s)])]),akt,t("td",rkt,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[hkt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ukt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[fkt]),_:1}),o(),gkt]),t("td",mkt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ykt,t("td",xkt,[t("a",pkt,[o("二叉树灯饰"),e(s)])]),bkt,t("td",kkt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Mkt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Hkt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ikt]),_:1}),o(),wkt]),t("td",vkt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qkt,t("td",jkt,[t("a",zkt,[o("舒适的湿度"),e(s)])]),Ckt,t("td",Okt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Lkt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ekt]),_:1})]),t("td",Pkt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Kkt,t("td",Vkt,[t("a",Nkt,[o("Hello LeetCode!"),e(s)])]),Dkt,t("td",Bkt,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Ykt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Akt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Jkt]),_:1}),o(),Rkt]),t("td",Skt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ukt,t("td",Wkt,[t("a",Xkt,[o("下载插件"),e(s)])]),Fkt,t("td",Gkt,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Tkt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Qkt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Zkt]),_:1})]),t("td",$kt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[tMt,t("td",eMt,[t("a",oMt,[o("斐波那契数列"),e(s)])]),t("td",lMt,[t("a",nMt,[o("[✓]"),e(s)])]),t("td",sMt,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[dMt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[_Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[iMt]),_:1})]),t("td",cMt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[aMt,t("td",rMt,[t("a",hMt,[o("青蛙跳台阶问题"),e(s)])]),t("td",uMt,[t("a",fMt,[o("[✓]"),e(s)])]),t("td",gMt,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[mMt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[yMt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[xMt]),_:1})]),t("td",pMt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[bMt,t("td",kMt,[t("a",MMt,[o("机器人的运动范围"),e(s)])]),t("td",HMt,[t("a",IMt,[o("[✓]"),e(s)])]),t("td",wMt,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[vMt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[qMt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[jMt]),_:1})]),t("td",zMt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[CMt,t("td",OMt,[t("a",LMt,[o("剪绳子"),e(s)])]),t("td",EMt,[t("a",PMt,[o("[✓]"),e(s)])]),t("td",KMt,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[VMt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[NMt]),_:1})]),t("td",DMt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[BMt,t("td",YMt,[t("a",AMt,[o("剪绳子 II"),e(s)])]),t("td",JMt,[t("a",RMt,[o("[✓]"),e(s)])]),t("td",SMt,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[UMt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[WMt]),_:1})]),t("td",XMt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[FMt,t("td",GMt,[t("a",TMt,[o("正则表达式匹配"),e(s)])]),t("td",QMt,[t("a",ZMt,[o("[✓]"),e(s)])]),t("td",$Mt,[e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[tHt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[eHt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[oHt]),_:1})]),t("td",lHt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[nHt,t("td",sHt,[t("a",dHt,[o("连续子数组的最大和"),e(s)])]),t("td",_Ht,[t("a",iHt,[o("[✓]"),e(s)])]),t("td",cHt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[aHt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[rHt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[hHt]),_:1})]),t("td",uHt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[fHt,t("td",gHt,[t("a",mHt,[o("1～n 整数中 1 出现的次数"),e(s)])]),yHt,t("td",xHt,[e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[pHt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[bHt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[kHt]),_:1})]),t("td",MHt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[HHt,t("td",IHt,[t("a",wHt,[o("把数字翻译成字符串"),e(s)])]),vHt,t("td",qHt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[jHt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[zHt]),_:1})]),t("td",CHt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[OHt,t("td",LHt,[t("a",EHt,[o("礼物的最大价值"),e(s)])]),t("td",PHt,[t("a",KHt,[o("[✓]"),e(s)])]),t("td",VHt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[NHt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[DHt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[BHt]),_:1})]),t("td",YHt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[AHt,t("td",JHt,[t("a",RHt,[o("丑数"),e(s)])]),t("td",SHt,[t("a",UHt,[o("[✓]"),e(s)])]),t("td",WHt,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[XHt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[FHt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[GHt]),_:1}),o(),THt]),t("td",QHt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ZHt,t("td",$Ht,[t("a",tIt,[o("n个骰子的点数"),e(s)])]),t("td",eIt,[t("a",oIt,[o("[✓]"),e(s)])]),t("td",lIt,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[nIt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[sIt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[dIt]),_:1})]),t("td",_It,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[iIt,t("td",cIt,[t("a",aIt,[o("股票的最大利润"),e(s)])]),t("td",rIt,[t("a",hIt,[o("[✓]"),e(s)])]),t("td",uIt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[fIt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[gIt]),_:1})]),t("td",mIt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yIt,t("td",xIt,[t("a",pIt,[o("三角形中最小路径之和"),e(s)])]),bIt,t("td",kIt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[MIt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[HIt]),_:1})]),t("td",IIt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[wIt,t("td",vIt,[t("a",qIt,[o("加减的目标值"),e(s)])]),jIt,t("td",zIt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[CIt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[OIt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[LIt]),_:1})]),t("td",EIt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[PIt,t("td",KIt,[t("a",VIt,[o("最少的硬币数目"),e(s)])]),NIt,t("td",DIt,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[BIt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[YIt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[AIt]),_:1})]),t("td",JIt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[RIt,t("td",SIt,[t("a",UIt,[o("排列的数目"),e(s)])]),WIt,t("td",XIt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[FIt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[GIt]),_:1})]),t("td",TIt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[QIt,t("td",ZIt,[t("a",$It,[o("矩阵中的距离"),e(s)])]),twt,t("td",ewt,[e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[owt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[lwt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[nwt]),_:1}),o(),swt]),t("td",dwt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_wt,t("td",iwt,[t("a",cwt,[o("最长递增路径"),e(s)])]),awt,t("td",rwt,[e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[hwt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[uwt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[fwt]),_:1}),o(),gwt]),t("td",mwt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ywt,t("td",xwt,[t("a",pwt,[o("回文子字符串的个数"),e(s)])]),bwt,t("td",kwt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Mwt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Hwt]),_:1})]),t("td",Iwt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[wwt,t("td",vwt,[t("a",qwt,[o("前 n 个数字二进制中 1 的个数"),e(s)])]),jwt,t("td",zwt,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Cwt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Owt]),_:1})]),t("td",Lwt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ewt,t("td",Pwt,[t("a",Kwt,[o("矩阵中最大的矩形"),e(s)])]),Vwt,t("td",Nwt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Dwt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Bwt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ywt]),_:1}),o(),Awt]),t("td",Jwt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Rwt,t("td",Swt,[t("a",Uwt,[o("节点之和最大的路径"),e(s)])]),Wwt,t("td",Xwt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Fwt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Gwt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Twt]),_:1}),o(),Qwt]),t("td",Zwt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$wt,t("td",tvt,[t("a",evt,[o("生成匹配的括号"),e(s)])]),ovt,t("td",lvt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[nvt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[svt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[dvt]),_:1})]),t("td",_vt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ivt,t("td",cvt,[t("a",avt,[o("爬楼梯的最少成本"),e(s)])]),rvt,t("td",hvt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[uvt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[fvt]),_:1})]),t("td",gvt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[mvt,t("td",yvt,[t("a",xvt,[o("房屋偷盗"),e(s)])]),pvt,t("td",bvt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[kvt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Mvt]),_:1})]),t("td",Hvt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ivt,t("td",wvt,[t("a",vvt,[o("环形房屋偷盗"),e(s)])]),qvt,t("td",jvt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[zvt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Cvt]),_:1})]),t("td",Ovt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Lvt,t("td",Evt,[t("a",Pvt,[o("粉刷房子"),e(s)])]),Kvt,t("td",Vvt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Nvt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Dvt]),_:1})]),t("td",Bvt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Yvt,t("td",Avt,[t("a",Jvt,[o("翻转字符"),e(s)])]),Rvt,t("td",Svt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Uvt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Wvt]),_:1})]),t("td",Xvt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Fvt,t("td",Gvt,[t("a",Tvt,[o("最长斐波那契数列"),e(s)])]),Qvt,t("td",Zvt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[$vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[tqt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[eqt]),_:1})]),t("td",oqt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[lqt,t("td",nqt,[t("a",sqt,[o("最少回文分割"),e(s)])]),dqt,t("td",_qt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[iqt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[cqt]),_:1})]),t("td",aqt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[rqt,t("td",hqt,[t("a",uqt,[o("最长公共子序列"),e(s)])]),fqt,t("td",gqt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[mqt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[yqt]),_:1})]),t("td",xqt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[pqt,t("td",bqt,[t("a",kqt,[o("字符串交织"),e(s)])]),Mqt,t("td",Hqt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Iqt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[wqt]),_:1})]),t("td",vqt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qqt,t("td",jqt,[t("a",zqt,[o("子序列的数目"),e(s)])]),Cqt,t("td",Oqt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Lqt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Eqt]),_:1})]),t("td",Pqt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Kqt,t("td",Vqt,[t("a",Nqt,[o("路径的数目"),e(s)])]),Dqt,t("td",Bqt,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Yqt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Aqt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[Jqt]),_:1})]),t("td",Rqt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Sqt,t("td",Uqt,[t("a",Wqt,[o("最小路径之和"),e(s)])]),Xqt,t("td",Fqt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Gqt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Tqt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[Qqt]),_:1})]),t("td",Zqt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[$qt,t("td",tjt,[t("a",ejt,[o("翻转数位"),e(s)])]),ojt,t("td",ljt,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[njt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[sjt]),_:1})]),t("td",djt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[_jt,t("td",ijt,[t("a",cjt,[o("三步问题"),e(s)])]),ajt,t("td",rjt,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[hjt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[ujt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[fjt]),_:1})]),t("td",gjt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[mjt,t("td",yjt,[t("a",xjt,[o("迷路的机器人"),e(s)])]),pjt,t("td",bjt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[kjt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Mjt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[Hjt]),_:1}),o(),Ijt]),t("td",wjt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[vjt,t("td",qjt,[t("a",jjt,[o("括号"),e(s)])]),zjt,t("td",Cjt,[e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Ojt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ljt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[Ejt]),_:1})]),t("td",Pjt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Kjt,t("td",Vjt,[t("a",Njt,[o("硬币"),e(s)])]),Djt,t("td",Bjt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Yjt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Ajt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Jjt]),_:1})]),t("td",Rjt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Sjt,t("td",Ujt,[t("a",Wjt,[o("堆箱子"),e(s)])]),Xjt,t("td",Fjt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Gjt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Tjt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Qjt]),_:1})]),t("td",Zjt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$jt,t("td",tzt,[t("a",ezt,[o("布尔运算"),e(s)])]),ozt,t("td",lzt,[e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[nzt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[szt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[dzt]),_:1})]),t("td",_zt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[izt,t("td",czt,[t("a",azt,[o("连续数列"),e(s)])]),rzt,t("td",hzt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[uzt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[fzt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[gzt]),_:1})]),t("td",mzt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[yzt,t("td",xzt,[t("a",pzt,[o("2出现的次数"),e(s)])]),bzt,t("td",kzt,[e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[Mzt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Hzt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Izt]),_:1})]),t("td",wzt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[vzt,t("td",qzt,[t("a",jzt,[o("马戏团人塔"),e(s)])]),zzt,t("td",Czt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ozt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Lzt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ezt]),_:1}),o(),Pzt]),t("td",Kzt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Vzt,t("td",Nzt,[t("a",Dzt,[o("第 k 个数"),e(s)])]),Bzt,t("td",Yzt,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Azt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Jzt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Rzt]),_:1}),o(),Szt]),t("td",Uzt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wzt,t("td",Xzt,[t("a",Fzt,[o("恢复空格"),e(s)])]),Gzt,t("td",Tzt,[e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[Qzt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Zzt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[$zt]),_:1}),o(),tCt]),t("td",eCt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[oCt,t("td",lCt,[t("a",nCt,[o("按摩师"),e(s)])]),sCt,t("td",dCt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[_Ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[iCt]),_:1})]),t("td",cCt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[aCt,t("td",rCt,[t("a",hCt,[o("直方图的水量"),e(s)])]),uCt,t("td",fCt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[gCt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[mCt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[yCt]),_:1}),o(),xCt]),t("td",pCt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bCt,t("td",kCt,[t("a",MCt,[o("最大黑方阵"),e(s)])]),HCt,t("td",ICt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[wCt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[vCt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[qCt]),_:1})]),t("td",jCt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zCt,t("td",CCt,[t("a",OCt,[o("最大子矩阵"),e(s)])]),LCt,t("td",ECt,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[PCt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[KCt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[VCt]),_:1}),o(),NCt]),t("td",DCt,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])])])])])}const RCt=i(h,[["render",BCt],["__file","dynamic-programming.html.vue"]]);export{RCt as default};
