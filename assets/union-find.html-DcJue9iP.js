import{_ as c,r as _,o as i,c as a,a as t,d as e,w as o,b as l,f as h}from"./app-qrCIIj1V.js";const r={},u=t("h1",{id:"并查集",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#并查集","aria-hidden":"true"},"#"),l(" 并查集")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),j=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),M=t("code",null,"队列",-1),H=t("code",null,"单调队列",-1),w=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),I=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),O=t("code",null,"最小生成树",-1),E=t("code",null,"图",-1),P=t("code",null,"有序集合",-1),B=t("code",null,"拓扑排序",-1),N=t("code",null,"最短路",-1),V=t("code",null,"强连通分量",-1),W=t("code",null,"欧拉回路",-1),A=t("code",null,"双连通分量",-1),K=t("span",{class:"blue"},"并查集",-1),Q=t("code",null,"字典树",-1),R=t("code",null,"线段树",-1),U=t("code",null,"树状数组",-1),F=t("code",null,"后缀数组",-1),G=t("p",null,[t("strong",null,"算法")],-1),S=t("code",null,"枚举",-1),T=t("code",null,"递归",-1),X=t("code",null,"分治",-1),Y=t("code",null,"回溯",-1),Z=t("code",null,"贪心",-1),D=t("code",null,"动态规划",-1),J=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ht=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),jt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),Mt=t("code",null,"组合数学",-1),Ht=t("code",null,"随机化",-1),wt=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),It=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),Ot=t("code",null,"交互",-1),Et=t("code",null,"迭代器",-1),Pt=t("code",null,"多线程",-1),Bt=t("hr",null,null,-1),Nt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Vt=t("td",{style:{"text-align":"center"}},"128",-1),Wt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},Kt={style:{"text-align":"center"}},Qt={style:{"text-align":"left"}},Rt=t("code",null,"并查集",-1),Ut=t("code",null,"数组",-1),Ft=t("code",null,"哈希表",-1),Gt={style:{"text-align":"left"}},St=t("td",{style:{"text-align":"center"}},"130",-1),Tt={style:{"text-align":"left"}},Xt={href:"https://leetcode.com/problems/surrounded-regions",target:"_blank",rel:"noopener noreferrer"},Yt={style:{"text-align":"center"}},Zt={style:{"text-align":"left"}},Dt=t("code",null,"深度优先搜索",-1),Jt=t("code",null,"广度优先搜索",-1),$t=t("code",null,"并查集",-1),te=t("code",null,"2+",-1),ee={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"200",-1),oe={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},se={style:{"text-align":"center"}},de={style:{"text-align":"left"}},_e=t("code",null,"深度优先搜索",-1),ce=t("code",null,"广度优先搜索",-1),ie=t("code",null,"并查集",-1),ae=t("code",null,"2+",-1),he={style:{"text-align":"left"}},re=t("td",{style:{"text-align":"center"}},"261",-1),ue={style:{"text-align":"left"}},fe={href:"https://leetcode.com/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},ge=t("td",{style:{"text-align":"center"}},null,-1),me={style:{"text-align":"left"}},ye=t("code",null,"深度优先搜索",-1),xe=t("code",null,"广度优先搜索",-1),pe=t("code",null,"并查集",-1),be=t("code",null,"1+",-1),je={style:{"text-align":"left"}},ke=t("td",{style:{"text-align":"center"}},"305",-1),Me={style:{"text-align":"left"}},He={href:"https://leetcode.com/problems/number-of-islands-ii",target:"_blank",rel:"noopener noreferrer"},we=t("td",{style:{"text-align":"center"}},null,-1),ve={style:{"text-align":"left"}},Ie=t("code",null,"并查集",-1),qe=t("code",null,"数组",-1),Le=t("code",null,"哈希表",-1),ze={style:{"text-align":"left"}},Ce=t("td",{style:{"text-align":"center"}},"323",-1),Oe={style:{"text-align":"left"}},Ee={href:"https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Pe=t("td",{style:{"text-align":"center"}},null,-1),Be={style:{"text-align":"left"}},Ne=t("code",null,"深度优先搜索",-1),Ve=t("code",null,"广度优先搜索",-1),We=t("code",null,"并查集",-1),Ae=t("code",null,"1+",-1),Ke={style:{"text-align":"left"}},Qe=t("td",{style:{"text-align":"center"}},"399",-1),Re={style:{"text-align":"left"}},Ue={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},Fe={style:{"text-align":"center"}},Ge={style:{"text-align":"left"}},Se=t("code",null,"深度优先搜索",-1),Te=t("code",null,"广度优先搜索",-1),Xe=t("code",null,"并查集",-1),Ye=t("code",null,"4+",-1),Ze={style:{"text-align":"left"}},De=t("td",{style:{"text-align":"center"}},"547",-1),Je={style:{"text-align":"left"}},$e={href:"https://leetcode.com/problems/number-of-provinces",target:"_blank",rel:"noopener noreferrer"},tl=t("td",{style:{"text-align":"center"}},null,-1),el={style:{"text-align":"left"}},ll=t("code",null,"深度优先搜索",-1),ol=t("code",null,"广度优先搜索",-1),nl=t("code",null,"并查集",-1),sl=t("code",null,"1+",-1),dl={style:{"text-align":"left"}},_l=t("td",{style:{"text-align":"center"}},"684",-1),cl={style:{"text-align":"left"}},il={href:"https://leetcode.com/problems/redundant-connection",target:"_blank",rel:"noopener noreferrer"},al=t("td",{style:{"text-align":"center"}},null,-1),hl={style:{"text-align":"left"}},rl=t("code",null,"深度优先搜索",-1),ul=t("code",null,"广度优先搜索",-1),fl=t("code",null,"并查集",-1),gl=t("code",null,"1+",-1),ml={style:{"text-align":"left"}},yl=t("td",{style:{"text-align":"center"}},"685",-1),xl={style:{"text-align":"left"}},pl={href:"https://leetcode.com/problems/redundant-connection-ii",target:"_blank",rel:"noopener noreferrer"},bl=t("td",{style:{"text-align":"center"}},null,-1),jl={style:{"text-align":"left"}},kl=t("code",null,"深度优先搜索",-1),Ml=t("code",null,"广度优先搜索",-1),Hl=t("code",null,"并查集",-1),wl=t("code",null,"1+",-1),vl={style:{"text-align":"left"}},Il=t("td",{style:{"text-align":"center"}},"694",-1),ql={style:{"text-align":"left"}},Ll={href:"https://leetcode.com/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},zl=t("td",{style:{"text-align":"center"}},null,-1),Cl={style:{"text-align":"left"}},Ol=t("code",null,"深度优先搜索",-1),El=t("code",null,"广度优先搜索",-1),Pl=t("code",null,"并查集",-1),Bl=t("code",null,"2+",-1),Nl={style:{"text-align":"left"}},Vl=t("td",{style:{"text-align":"center"}},"695",-1),Wl={style:{"text-align":"left"}},Al={href:"https://leetcode.com/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},Kl={style:{"text-align":"center"}},Ql={style:{"text-align":"left"}},Rl=t("code",null,"深度优先搜索",-1),Ul=t("code",null,"广度优先搜索",-1),Fl=t("code",null,"并查集",-1),Gl=t("code",null,"2+",-1),Sl={style:{"text-align":"left"}},Tl=t("td",{style:{"text-align":"center"}},"711",-1),Xl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/number-of-distinct-islands-ii",target:"_blank",rel:"noopener noreferrer"},Zl=t("td",{style:{"text-align":"center"}},null,-1),Dl={style:{"text-align":"left"}},Jl=t("code",null,"深度优先搜索",-1),$l=t("code",null,"广度优先搜索",-1),to=t("code",null,"并查集",-1),eo=t("code",null,"2+",-1),lo={style:{"text-align":"left"}},oo=t("td",{style:{"text-align":"center"}},"721",-1),no={style:{"text-align":"left"}},so={href:"https://leetcode.com/problems/accounts-merge",target:"_blank",rel:"noopener noreferrer"},_o=t("td",{style:{"text-align":"center"}},null,-1),co={style:{"text-align":"left"}},io=t("code",null,"深度优先搜索",-1),ao=t("code",null,"广度优先搜索",-1),ho=t("code",null,"并查集",-1),ro=t("code",null,"4+",-1),uo={style:{"text-align":"left"}},fo=t("td",{style:{"text-align":"center"}},"737",-1),go={style:{"text-align":"left"}},mo={href:"https://leetcode.com/problems/sentence-similarity-ii",target:"_blank",rel:"noopener noreferrer"},yo=t("td",{style:{"text-align":"center"}},null,-1),xo={style:{"text-align":"left"}},po=t("code",null,"深度优先搜索",-1),bo=t("code",null,"广度优先搜索",-1),jo=t("code",null,"并查集",-1),ko=t("code",null,"3+",-1),Mo={style:{"text-align":"left"}},Ho=t("td",{style:{"text-align":"center"}},"765",-1),wo={style:{"text-align":"left"}},vo={href:"https://leetcode.com/problems/couples-holding-hands",target:"_blank",rel:"noopener noreferrer"},Io=t("td",{style:{"text-align":"center"}},null,-1),qo={style:{"text-align":"left"}},Lo=t("code",null,"贪心",-1),zo=t("code",null,"深度优先搜索",-1),Co=t("code",null,"广度优先搜索",-1),Oo=t("code",null,"2+",-1),Eo={style:{"text-align":"left"}},Po=t("td",{style:{"text-align":"center"}},"778",-1),Bo={style:{"text-align":"left"}},No={href:"https://leetcode.com/problems/swim-in-rising-water",target:"_blank",rel:"noopener noreferrer"},Vo=t("td",{style:{"text-align":"center"}},null,-1),Wo={style:{"text-align":"left"}},Ao=t("code",null,"深度优先搜索",-1),Ko=t("code",null,"广度优先搜索",-1),Qo=t("code",null,"并查集",-1),Ro=t("code",null,"4+",-1),Uo={style:{"text-align":"left"}},Fo=t("td",{style:{"text-align":"center"}},"785",-1),Go={style:{"text-align":"left"}},So={href:"https://leetcode.com/problems/is-graph-bipartite",target:"_blank",rel:"noopener noreferrer"},To=t("td",{style:{"text-align":"center"}},null,-1),Xo={style:{"text-align":"left"}},Yo=t("code",null,"深度优先搜索",-1),Zo=t("code",null,"广度优先搜索",-1),Do=t("code",null,"并查集",-1),Jo=t("code",null,"1+",-1),$o={style:{"text-align":"left"}},tn=t("td",{style:{"text-align":"center"}},"803",-1),en={style:{"text-align":"left"}},ln={href:"https://leetcode.com/problems/bricks-falling-when-hit",target:"_blank",rel:"noopener noreferrer"},on=t("td",{style:{"text-align":"center"}},null,-1),nn={style:{"text-align":"left"}},sn=t("code",null,"并查集",-1),dn=t("code",null,"数组",-1),_n=t("code",null,"矩阵",-1),cn={style:{"text-align":"left"}},an=t("td",{style:{"text-align":"center"}},"827",-1),hn={style:{"text-align":"left"}},rn={href:"https://leetcode.com/problems/making-a-large-island",target:"_blank",rel:"noopener noreferrer"},un=t("td",{style:{"text-align":"center"}},null,-1),fn={style:{"text-align":"left"}},gn=t("code",null,"深度优先搜索",-1),mn=t("code",null,"广度优先搜索",-1),yn=t("code",null,"并查集",-1),xn=t("code",null,"2+",-1),pn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"839",-1),jn={style:{"text-align":"left"}},kn={href:"https://leetcode.com/problems/similar-string-groups",target:"_blank",rel:"noopener noreferrer"},Mn=t("td",{style:{"text-align":"center"}},null,-1),Hn={style:{"text-align":"left"}},wn=t("code",null,"深度优先搜索",-1),vn=t("code",null,"广度优先搜索",-1),In=t("code",null,"并查集",-1),qn=t("code",null,"3+",-1),Ln={style:{"text-align":"left"}},zn=t("td",{style:{"text-align":"center"}},"886",-1),Cn={style:{"text-align":"left"}},On={href:"https://leetcode.com/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},En=t("td",{style:{"text-align":"center"}},null,-1),Pn={style:{"text-align":"left"}},Bn=t("code",null,"深度优先搜索",-1),Nn=t("code",null,"广度优先搜索",-1),Vn=t("code",null,"并查集",-1),Wn=t("code",null,"1+",-1),An={style:{"text-align":"left"}},Kn=t("td",{style:{"text-align":"center"}},"924",-1),Qn={style:{"text-align":"left"}},Rn={href:"https://leetcode.com/problems/minimize-malware-spread",target:"_blank",rel:"noopener noreferrer"},Un=t("td",{style:{"text-align":"center"}},null,-1),Fn={style:{"text-align":"left"}},Gn=t("code",null,"深度优先搜索",-1),Sn=t("code",null,"广度优先搜索",-1),Tn=t("code",null,"并查集",-1),Xn=t("code",null,"3+",-1),Yn={style:{"text-align":"left"}},Zn=t("td",{style:{"text-align":"center"}},"928",-1),Dn={style:{"text-align":"left"}},Jn={href:"https://leetcode.com/problems/minimize-malware-spread-ii",target:"_blank",rel:"noopener noreferrer"},$n=t("td",{style:{"text-align":"center"}},null,-1),ts={style:{"text-align":"left"}},es=t("code",null,"深度优先搜索",-1),ls=t("code",null,"广度优先搜索",-1),os=t("code",null,"并查集",-1),ns=t("code",null,"3+",-1),ss={style:{"text-align":"left"}},ds=t("td",{style:{"text-align":"center"}},"947",-1),_s={style:{"text-align":"left"}},cs={href:"https://leetcode.com/problems/most-stones-removed-with-same-row-or-column",target:"_blank",rel:"noopener noreferrer"},is=t("td",{style:{"text-align":"center"}},null,-1),as={style:{"text-align":"left"}},hs=t("code",null,"深度优先搜索",-1),rs=t("code",null,"并查集",-1),us=t("code",null,"图",-1),fs=t("code",null,"1+",-1),gs={style:{"text-align":"left"}},ms=t("td",{style:{"text-align":"center"}},"952",-1),ys={style:{"text-align":"left"}},xs={href:"https://leetcode.com/problems/largest-component-size-by-common-factor",target:"_blank",rel:"noopener noreferrer"},ps=t("td",{style:{"text-align":"center"}},null,-1),bs={style:{"text-align":"left"}},js=t("code",null,"并查集",-1),ks=t("code",null,"数组",-1),Ms=t("code",null,"哈希表",-1),Hs=t("code",null,"2+",-1),ws={style:{"text-align":"left"}},vs=t("td",{style:{"text-align":"center"}},"959",-1),Is={style:{"text-align":"left"}},qs={href:"https://leetcode.com/problems/regions-cut-by-slashes",target:"_blank",rel:"noopener noreferrer"},Ls=t("td",{style:{"text-align":"center"}},null,-1),zs={style:{"text-align":"left"}},Cs=t("code",null,"深度优先搜索",-1),Os=t("code",null,"广度优先搜索",-1),Es=t("code",null,"并查集",-1),Ps=t("code",null,"3+",-1),Bs={style:{"text-align":"left"}},Ns=t("td",{style:{"text-align":"center"}},"990",-1),Vs={style:{"text-align":"left"}},Ws={href:"https://leetcode.com/problems/satisfiability-of-equality-equations",target:"_blank",rel:"noopener noreferrer"},As=t("td",{style:{"text-align":"center"}},null,-1),Ks={style:{"text-align":"left"}},Qs=t("code",null,"并查集",-1),Rs=t("code",null,"图",-1),Us=t("code",null,"数组",-1),Fs=t("code",null,"1+",-1),Gs={style:{"text-align":"left"}},Ss=t("td",{style:{"text-align":"center"}},"1020",-1),Ts={style:{"text-align":"left"}},Xs={href:"https://leetcode.com/problems/number-of-enclaves",target:"_blank",rel:"noopener noreferrer"},Ys=t("td",{style:{"text-align":"center"}},null,-1),Zs={style:{"text-align":"left"}},Ds=t("code",null,"深度优先搜索",-1),Js=t("code",null,"广度优先搜索",-1),$s=t("code",null,"并查集",-1),td=t("code",null,"2+",-1),ed={style:{"text-align":"left"}},ld=t("td",{style:{"text-align":"center"}},"1061",-1),od={style:{"text-align":"left"}},nd={href:"https://leetcode.com/problems/lexicographically-smallest-equivalent-string",target:"_blank",rel:"noopener noreferrer"},sd=t("td",{style:{"text-align":"center"}},null,-1),dd={style:{"text-align":"left"}},_d=t("code",null,"并查集",-1),cd=t("code",null,"字符串",-1),id={style:{"text-align":"left"}},ad=t("td",{style:{"text-align":"center"}},"1101",-1),hd={style:{"text-align":"left"}},rd={href:"https://leetcode.com/problems/the-earliest-moment-when-everyone-become-friends",target:"_blank",rel:"noopener noreferrer"},ud=t("td",{style:{"text-align":"center"}},null,-1),fd={style:{"text-align":"left"}},gd=t("code",null,"并查集",-1),md=t("code",null,"数组",-1),yd=t("code",null,"排序",-1),xd={style:{"text-align":"left"}},pd=t("td",{style:{"text-align":"center"}},"1102",-1),bd={style:{"text-align":"left"}},jd={href:"https://leetcode.com/problems/path-with-maximum-minimum-value",target:"_blank",rel:"noopener noreferrer"},kd=t("td",{style:{"text-align":"center"}},null,-1),Md={style:{"text-align":"left"}},Hd=t("code",null,"深度优先搜索",-1),wd=t("code",null,"广度优先搜索",-1),vd=t("code",null,"并查集",-1),Id=t("code",null,"4+",-1),qd={style:{"text-align":"left"}},Ld=t("td",{style:{"text-align":"center"}},"1135",-1),zd={style:{"text-align":"left"}},Cd={href:"https://leetcode.com/problems/connecting-cities-with-minimum-cost",target:"_blank",rel:"noopener noreferrer"},Od=t("td",{style:{"text-align":"center"}},null,-1),Ed={style:{"text-align":"left"}},Pd=t("code",null,"并查集",-1),Bd=t("code",null,"图",-1),Nd=t("code",null,"最小生成树",-1),Vd=t("code",null,"1+",-1),Wd={style:{"text-align":"left"}},Ad=t("td",{style:{"text-align":"center"}},"1168",-1),Kd={style:{"text-align":"left"}},Qd={href:"https://leetcode.com/problems/optimize-water-distribution-in-a-village",target:"_blank",rel:"noopener noreferrer"},Rd=t("td",{style:{"text-align":"center"}},null,-1),Ud={style:{"text-align":"left"}},Fd=t("code",null,"并查集",-1),Gd=t("code",null,"图",-1),Sd=t("code",null,"最小生成树",-1),Td=t("code",null,"1+",-1),Xd={style:{"text-align":"left"}},Yd=t("td",{style:{"text-align":"center"}},"1202",-1),Zd={style:{"text-align":"left"}},Dd={href:"https://leetcode.com/problems/smallest-string-with-swaps",target:"_blank",rel:"noopener noreferrer"},Jd=t("td",{style:{"text-align":"center"}},null,-1),$d={style:{"text-align":"left"}},t_=t("code",null,"深度优先搜索",-1),e_=t("code",null,"广度优先搜索",-1),l_=t("code",null,"并查集",-1),o_=t("code",null,"4+",-1),n_={style:{"text-align":"left"}},s_=t("td",{style:{"text-align":"center"}},"1254",-1),d_={style:{"text-align":"left"}},__={href:"https://leetcode.com/problems/number-of-closed-islands",target:"_blank",rel:"noopener noreferrer"},c_=t("td",{style:{"text-align":"center"}},null,-1),i_={style:{"text-align":"left"}},a_=t("code",null,"深度优先搜索",-1),h_=t("code",null,"广度优先搜索",-1),r_=t("code",null,"并查集",-1),u_=t("code",null,"2+",-1),f_={style:{"text-align":"left"}},g_=t("td",{style:{"text-align":"center"}},"1258",-1),m_={style:{"text-align":"left"}},y_={href:"https://leetcode.com/problems/synonymous-sentences",target:"_blank",rel:"noopener noreferrer"},x_=t("td",{style:{"text-align":"center"}},null,-1),p_={style:{"text-align":"left"}},b_=t("code",null,"并查集",-1),j_=t("code",null,"数组",-1),k_=t("code",null,"哈希表",-1),M_=t("code",null,"2+",-1),H_={style:{"text-align":"left"}},w_=t("td",{style:{"text-align":"center"}},"1267",-1),v_={style:{"text-align":"left"}},I_={href:"https://leetcode.com/problems/count-servers-that-communicate",target:"_blank",rel:"noopener noreferrer"},q_=t("td",{style:{"text-align":"center"}},null,-1),L_={style:{"text-align":"left"}},z_=t("code",null,"深度优先搜索",-1),C_=t("code",null,"广度优先搜索",-1),O_=t("code",null,"并查集",-1),E_=t("code",null,"3+",-1),P_={style:{"text-align":"left"}},B_=t("td",{style:{"text-align":"center"}},"1319",-1),N_={style:{"text-align":"left"}},V_={href:"https://leetcode.com/problems/number-of-operations-to-make-network-connected",target:"_blank",rel:"noopener noreferrer"},W_=t("td",{style:{"text-align":"center"}},null,-1),A_={style:{"text-align":"left"}},K_=t("code",null,"深度优先搜索",-1),Q_=t("code",null,"广度优先搜索",-1),R_=t("code",null,"并查集",-1),U_=t("code",null,"1+",-1),F_={style:{"text-align":"left"}},G_=t("td",{style:{"text-align":"center"}},"1361",-1),S_={style:{"text-align":"left"}},T_={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},X_=t("td",{style:{"text-align":"center"}},null,-1),Y_={style:{"text-align":"left"}},Z_=t("code",null,"树",-1),D_=t("code",null,"深度优先搜索",-1),J_=t("code",null,"广度优先搜索",-1),$_=t("code",null,"3+",-1),tc={style:{"text-align":"left"}},ec=t("td",{style:{"text-align":"center"}},"1391",-1),lc={style:{"text-align":"left"}},oc={href:"https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},nc=t("td",{style:{"text-align":"center"}},null,-1),sc={style:{"text-align":"left"}},dc=t("code",null,"深度优先搜索",-1),_c=t("code",null,"广度优先搜索",-1),cc=t("code",null,"并查集",-1),ic=t("code",null,"2+",-1),ac={style:{"text-align":"left"}},hc=t("td",{style:{"text-align":"center"}},"1489",-1),rc={style:{"text-align":"left"}},uc={href:"https://leetcode.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",target:"_blank",rel:"noopener noreferrer"},fc=t("td",{style:{"text-align":"center"}},null,-1),gc={style:{"text-align":"left"}},mc=t("code",null,"并查集",-1),yc=t("code",null,"图",-1),xc=t("code",null,"最小生成树",-1),pc=t("code",null,"2+",-1),bc={style:{"text-align":"left"}},jc=t("td",{style:{"text-align":"center"}},"1559",-1),kc={style:{"text-align":"left"}},Mc={href:"https://leetcode.com/problems/detect-cycles-in-2d-grid",target:"_blank",rel:"noopener noreferrer"},Hc=t("td",{style:{"text-align":"center"}},null,-1),wc={style:{"text-align":"left"}},vc=t("code",null,"深度优先搜索",-1),Ic=t("code",null,"广度优先搜索",-1),qc=t("code",null,"并查集",-1),Lc=t("code",null,"2+",-1),zc={style:{"text-align":"left"}},Cc=t("td",{style:{"text-align":"center"}},"1569",-1),Oc={style:{"text-align":"left"}},Ec={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},Pc=t("td",{style:{"text-align":"center"}},null,-1),Bc={style:{"text-align":"left"}},Nc=t("code",null,"树",-1),Vc=t("code",null,"并查集",-1),Wc=t("code",null,"二叉搜索树",-1),Ac=t("code",null,"7+",-1),Kc={style:{"text-align":"left"}},Qc=t("td",{style:{"text-align":"center"}},"1579",-1),Rc={style:{"text-align":"left"}},Uc={href:"https://leetcode.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable",target:"_blank",rel:"noopener noreferrer"},Fc=t("td",{style:{"text-align":"center"}},null,-1),Gc={style:{"text-align":"left"}},Sc=t("code",null,"并查集",-1),Tc=t("code",null,"图",-1),Xc={style:{"text-align":"left"}},Yc=t("td",{style:{"text-align":"center"}},"1584",-1),Zc={style:{"text-align":"left"}},Dc={href:"https://leetcode.com/problems/min-cost-to-connect-all-points",target:"_blank",rel:"noopener noreferrer"},Jc=t("td",{style:{"text-align":"center"}},null,-1),$c={style:{"text-align":"left"}},ti=t("code",null,"并查集",-1),ei=t("code",null,"图",-1),li=t("code",null,"数组",-1),oi=t("code",null,"1+",-1),ni={style:{"text-align":"left"}},si=t("td",{style:{"text-align":"center"}},"1627",-1),di={style:{"text-align":"left"}},_i={href:"https://leetcode.com/problems/graph-connectivity-with-threshold",target:"_blank",rel:"noopener noreferrer"},ci=t("td",{style:{"text-align":"center"}},null,-1),ii={style:{"text-align":"left"}},ai=t("code",null,"并查集",-1),hi=t("code",null,"数组",-1),ri=t("code",null,"数学",-1),ui=t("code",null,"1+",-1),fi={style:{"text-align":"left"}},gi=t("td",{style:{"text-align":"center"}},"1631",-1),mi={style:{"text-align":"left"}},yi={href:"https://leetcode.com/problems/path-with-minimum-effort",target:"_blank",rel:"noopener noreferrer"},xi=t("td",{style:{"text-align":"center"}},null,-1),pi={style:{"text-align":"left"}},bi=t("code",null,"深度优先搜索",-1),ji=t("code",null,"广度优先搜索",-1),ki=t("code",null,"并查集",-1),Mi=t("code",null,"4+",-1),Hi={style:{"text-align":"left"}},wi=t("td",{style:{"text-align":"center"}},"1632",-1),vi={style:{"text-align":"left"}},Ii={href:"https://leetcode.com/problems/rank-transform-of-a-matrix",target:"_blank",rel:"noopener noreferrer"},qi=t("td",{style:{"text-align":"center"}},null,-1),Li={style:{"text-align":"left"}},zi=t("code",null,"并查集",-1),Ci=t("code",null,"图",-1),Oi=t("code",null,"拓扑排序",-1),Ei=t("code",null,"3+",-1),Pi={style:{"text-align":"left"}},Bi=t("td",{style:{"text-align":"center"}},"1697",-1),Ni={style:{"text-align":"left"}},Vi={href:"https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths",target:"_blank",rel:"noopener noreferrer"},Wi=t("td",{style:{"text-align":"center"}},null,-1),Ai={style:{"text-align":"left"}},Ki=t("code",null,"并查集",-1),Qi=t("code",null,"图",-1),Ri=t("code",null,"数组",-1),Ui=t("code",null,"2+",-1),Fi={style:{"text-align":"left"}},Gi=t("td",{style:{"text-align":"center"}},"1722",-1),Si={style:{"text-align":"left"}},Ti={href:"https://leetcode.com/problems/minimize-hamming-distance-after-swap-operations",target:"_blank",rel:"noopener noreferrer"},Xi=t("td",{style:{"text-align":"center"}},null,-1),Yi={style:{"text-align":"left"}},Zi=t("code",null,"深度优先搜索",-1),Di=t("code",null,"并查集",-1),Ji=t("code",null,"数组",-1),$i={style:{"text-align":"left"}},ta=t("td",{style:{"text-align":"center"}},"1724",-1),ea={style:{"text-align":"left"}},la={href:"https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths-ii",target:"_blank",rel:"noopener noreferrer"},oa=t("td",{style:{"text-align":"center"}},null,-1),na={style:{"text-align":"left"}},sa=t("code",null,"并查集",-1),da=t("code",null,"图",-1),_a=t("code",null,"最小生成树",-1),ca={style:{"text-align":"left"}},ia=t("td",{style:{"text-align":"center"}},"1905",-1),aa={style:{"text-align":"left"}},ha={href:"https://leetcode.com/problems/count-sub-islands",target:"_blank",rel:"noopener noreferrer"},ra=t("td",{style:{"text-align":"center"}},null,-1),ua={style:{"text-align":"left"}},fa=t("code",null,"深度优先搜索",-1),ga=t("code",null,"广度优先搜索",-1),ma=t("code",null,"并查集",-1),ya=t("code",null,"2+",-1),xa={style:{"text-align":"left"}},pa=t("td",{style:{"text-align":"center"}},"1970",-1),ba={style:{"text-align":"left"}},ja={href:"https://leetcode.com/problems/last-day-where-you-can-still-cross",target:"_blank",rel:"noopener noreferrer"},ka=t("td",{style:{"text-align":"center"}},null,-1),Ma={style:{"text-align":"left"}},Ha=t("code",null,"深度优先搜索",-1),wa=t("code",null,"广度优先搜索",-1),va=t("code",null,"并查集",-1),Ia=t("code",null,"3+",-1),qa={style:{"text-align":"left"}},La=t("td",{style:{"text-align":"center"}},"1971",-1),za={style:{"text-align":"left"}},Ca={href:"https://leetcode.com/problems/find-if-path-exists-in-graph",target:"_blank",rel:"noopener noreferrer"},Oa=t("td",{style:{"text-align":"center"}},null,-1),Ea={style:{"text-align":"left"}},Pa=t("code",null,"深度优先搜索",-1),Ba=t("code",null,"广度优先搜索",-1),Na=t("code",null,"并查集",-1),Va=t("code",null,"1+",-1),Wa={style:{"text-align":"left"}},Aa=t("td",{style:{"text-align":"center"}},"1998",-1),Ka={style:{"text-align":"left"}},Qa={href:"https://leetcode.com/problems/gcd-sort-of-an-array",target:"_blank",rel:"noopener noreferrer"},Ra=t("td",{style:{"text-align":"center"}},null,-1),Ua={style:{"text-align":"left"}},Fa=t("code",null,"并查集",-1),Ga=t("code",null,"数组",-1),Sa=t("code",null,"数学",-1),Ta=t("code",null,"2+",-1),Xa={style:{"text-align":"left"}},Ya=t("td",{style:{"text-align":"center"}},"2003",-1),Za={style:{"text-align":"left"}},Da={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},Ja=t("td",{style:{"text-align":"center"}},null,-1),$a={style:{"text-align":"left"}},th=t("code",null,"树",-1),eh=t("code",null,"深度优先搜索",-1),lh=t("code",null,"并查集",-1),oh=t("code",null,"1+",-1),nh={style:{"text-align":"left"}},sh=t("td",{style:{"text-align":"center"}},"2076",-1),dh={style:{"text-align":"left"}},_h={href:"https://leetcode.com/problems/process-restricted-friend-requests",target:"_blank",rel:"noopener noreferrer"},ch=t("td",{style:{"text-align":"center"}},null,-1),ih={style:{"text-align":"left"}},ah=t("code",null,"并查集",-1),hh=t("code",null,"图",-1),rh={style:{"text-align":"left"}},uh=t("td",{style:{"text-align":"center"}},"2092",-1),fh={style:{"text-align":"left"}},gh={href:"https://leetcode.com/problems/find-all-people-with-secret",target:"_blank",rel:"noopener noreferrer"},mh=t("td",{style:{"text-align":"center"}},null,-1),yh={style:{"text-align":"left"}},xh=t("code",null,"深度优先搜索",-1),ph=t("code",null,"广度优先搜索",-1),bh=t("code",null,"并查集",-1),jh=t("code",null,"2+",-1),kh={style:{"text-align":"left"}},Mh=t("td",{style:{"text-align":"center"}},"2157",-1),Hh={style:{"text-align":"left"}},wh={href:"https://leetcode.com/problems/groups-of-strings",target:"_blank",rel:"noopener noreferrer"},vh=t("td",{style:{"text-align":"center"}},null,-1),Ih={style:{"text-align":"left"}},qh=t("code",null,"位运算",-1),Lh=t("code",null,"并查集",-1),zh=t("code",null,"字符串",-1),Ch={style:{"text-align":"left"}},Oh=t("td",{style:{"text-align":"center"}},"2204",-1),Eh={style:{"text-align":"left"}},Ph={href:"https://leetcode.com/problems/distance-to-a-cycle-in-undirected-graph",target:"_blank",rel:"noopener noreferrer"},Bh=t("td",{style:{"text-align":"center"}},null,-1),Nh={style:{"text-align":"left"}},Vh=t("code",null,"深度优先搜索",-1),Wh=t("code",null,"广度优先搜索",-1),Ah=t("code",null,"并查集",-1),Kh=t("code",null,"1+",-1),Qh={style:{"text-align":"left"}},Rh=t("td",{style:{"text-align":"center"}},"2307",-1),Uh={style:{"text-align":"left"}},Fh={href:"https://leetcode.com/problems/check-for-contradictions-in-equations",target:"_blank",rel:"noopener noreferrer"},Gh=t("td",{style:{"text-align":"center"}},null,-1),Sh={style:{"text-align":"left"}},Th=t("code",null,"深度优先搜索",-1),Xh=t("code",null,"并查集",-1),Yh=t("code",null,"图",-1),Zh=t("code",null,"1+",-1),Dh={style:{"text-align":"left"}},Jh=t("td",{style:{"text-align":"center"}},"2316",-1),$h={style:{"text-align":"left"}},tr={href:"https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph",target:"_blank",rel:"noopener noreferrer"},er=t("td",{style:{"text-align":"center"}},null,-1),lr={style:{"text-align":"left"}},or=t("code",null,"深度优先搜索",-1),nr=t("code",null,"广度优先搜索",-1),sr=t("code",null,"并查集",-1),dr=t("code",null,"1+",-1),_r={style:{"text-align":"left"}},cr=t("td",{style:{"text-align":"center"}},"2334",-1),ir={style:{"text-align":"left"}},ar={href:"https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},hr=t("td",{style:{"text-align":"center"}},null,-1),rr={style:{"text-align":"left"}},ur=t("code",null,"栈",-1),fr=t("code",null,"并查集",-1),gr=t("code",null,"数组",-1),mr=t("code",null,"1+",-1),yr={style:{"text-align":"left"}},xr=t("td",{style:{"text-align":"center"}},"2368",-1),pr={style:{"text-align":"left"}},br={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},jr=t("td",{style:{"text-align":"center"}},null,-1),kr={style:{"text-align":"left"}},Mr=t("code",null,"树",-1),Hr=t("code",null,"深度优先搜索",-1),wr=t("code",null,"广度优先搜索",-1),vr=t("code",null,"4+",-1),Ir={style:{"text-align":"left"}},qr=t("td",{style:{"text-align":"center"}},"2371",-1),Lr={style:{"text-align":"left"}},zr={href:"https://leetcode.com/problems/minimize-maximum-value-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Cr=t("td",{style:{"text-align":"center"}},null,-1),Or={style:{"text-align":"left"}},Er=t("code",null,"并查集",-1),Pr=t("code",null,"图",-1),Br=t("code",null,"拓扑排序",-1),Nr=t("code",null,"3+",-1),Vr={style:{"text-align":"left"}},Wr=t("td",{style:{"text-align":"center"}},"2382",-1),Ar={style:{"text-align":"left"}},Kr={href:"https://leetcode.com/problems/maximum-segment-sum-after-removals",target:"_blank",rel:"noopener noreferrer"},Qr=t("td",{style:{"text-align":"center"}},null,-1),Rr={style:{"text-align":"left"}},Ur=t("code",null,"并查集",-1),Fr=t("code",null,"数组",-1),Gr=t("code",null,"有序集合",-1),Sr=t("code",null,"1+",-1),Tr={style:{"text-align":"left"}},Xr=t("td",{style:{"text-align":"center"}},"2421",-1),Yr={style:{"text-align":"left"}},Zr={href:"https://leetcode.com/problems/number-of-good-paths",target:"_blank",rel:"noopener noreferrer"},Dr=t("td",{style:{"text-align":"center"}},null,-1),Jr={style:{"text-align":"left"}},$r=t("code",null,"树",-1),tu=t("code",null,"并查集",-1),eu=t("code",null,"图",-1),lu=t("code",null,"3+",-1),ou={style:{"text-align":"left"}},nu=t("td",{style:{"text-align":"center"}},"2424",-1),su={style:{"text-align":"left"}},du={href:"https://leetcode.com/problems/longest-uploaded-prefix",target:"_blank",rel:"noopener noreferrer"},_u=t("td",{style:{"text-align":"center"}},null,-1),cu={style:{"text-align":"left"}},iu=t("code",null,"并查集",-1),au=t("code",null,"设计",-1),hu=t("code",null,"树状数组",-1),ru=t("code",null,"4+",-1),uu={style:{"text-align":"left"}},fu=t("td",{style:{"text-align":"center"}},"2492",-1),gu={style:{"text-align":"left"}},mu={href:"https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities",target:"_blank",rel:"noopener noreferrer"},yu=t("td",{style:{"text-align":"center"}},null,-1),xu={style:{"text-align":"left"}},pu=t("code",null,"深度优先搜索",-1),bu=t("code",null,"广度优先搜索",-1),ju=t("code",null,"并查集",-1),ku=t("code",null,"1+",-1),Mu={style:{"text-align":"left"}},Hu=t("td",{style:{"text-align":"center"}},"2493",-1),wu={style:{"text-align":"left"}},vu={href:"https://leetcode.com/problems/divide-nodes-into-the-maximum-number-of-groups",target:"_blank",rel:"noopener noreferrer"},Iu=t("td",{style:{"text-align":"center"}},null,-1),qu={style:{"text-align":"left"}},Lu=t("code",null,"广度优先搜索",-1),zu=t("code",null,"并查集",-1),Cu=t("code",null,"图",-1),Ou={style:{"text-align":"left"}},Eu=t("td",{style:{"text-align":"center"}},"2503",-1),Pu={style:{"text-align":"left"}},Bu={href:"https://leetcode.com/problems/maximum-number-of-points-from-grid-queries",target:"_blank",rel:"noopener noreferrer"},Nu=t("td",{style:{"text-align":"center"}},null,-1),Vu={style:{"text-align":"left"}},Wu=t("code",null,"广度优先搜索",-1),Au=t("code",null,"并查集",-1),Ku=t("code",null,"数组",-1),Qu=t("code",null,"4+",-1),Ru={style:{"text-align":"left"}},Uu=t("td",{style:{"text-align":"center"}},"2573",-1),Fu={style:{"text-align":"left"}},Gu={href:"https://leetcode.com/problems/find-the-string-with-lcp",target:"_blank",rel:"noopener noreferrer"},Su=t("td",{style:{"text-align":"center"}},null,-1),Tu={style:{"text-align":"left"}},Xu=t("code",null,"贪心",-1),Yu=t("code",null,"并查集",-1),Zu=t("code",null,"数组",-1),Du=t("code",null,"3+",-1),Ju={style:{"text-align":"left"}},$u=t("td",{style:{"text-align":"center"}},"2617",-1),t1={style:{"text-align":"left"}},e1={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},l1=t("td",{style:{"text-align":"center"}},null,-1),o1={style:{"text-align":"left"}},n1=t("code",null,"栈",-1),s1=t("code",null,"广度优先搜索",-1),d1=t("code",null,"并查集",-1),_1=t("code",null,"5+",-1),c1={style:{"text-align":"left"}},i1=t("td",{style:{"text-align":"center"}},"2658",-1),a1={style:{"text-align":"left"}},h1={href:"https://leetcode.com/problems/maximum-number-of-fish-in-a-grid",target:"_blank",rel:"noopener noreferrer"},r1=t("td",{style:{"text-align":"center"}},null,-1),u1={style:{"text-align":"left"}},f1=t("code",null,"深度优先搜索",-1),g1=t("code",null,"广度优先搜索",-1),m1=t("code",null,"并查集",-1),y1=t("code",null,"2+",-1),x1={style:{"text-align":"left"}},p1=t("td",{style:{"text-align":"center"}},"2709",-1),b1={style:{"text-align":"left"}},j1={href:"https://leetcode.com/problems/greatest-common-divisor-traversal",target:"_blank",rel:"noopener noreferrer"},k1=t("td",{style:{"text-align":"center"}},null,-1),M1={style:{"text-align":"left"}},H1=t("code",null,"并查集",-1),w1=t("code",null,"数组",-1),v1=t("code",null,"数学",-1),I1=t("code",null,"1+",-1),q1={style:{"text-align":"left"}},L1=t("td",{style:{"text-align":"center"}},"2782",-1),z1={style:{"text-align":"left"}},C1={href:"https://leetcode.com/problems/number-of-unique-categories",target:"_blank",rel:"noopener noreferrer"},O1=t("td",{style:{"text-align":"center"}},null,-1),E1={style:{"text-align":"left"}},P1=t("code",null,"并查集",-1),B1=t("code",null,"计数",-1),N1=t("code",null,"交互",-1),V1={style:{"text-align":"left"}},W1=t("td",{style:{"text-align":"center"}},"2812",-1),A1={style:{"text-align":"left"}},K1={href:"https://leetcode.com/problems/find-the-safest-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Q1=t("td",{style:{"text-align":"center"}},null,-1),R1={style:{"text-align":"left"}},U1=t("code",null,"广度优先搜索",-1),F1=t("code",null,"并查集",-1),G1=t("code",null,"数组",-1),S1=t("code",null,"2+",-1),T1={style:{"text-align":"left"}},X1=t("td",{style:{"text-align":"center"}},"2852",-1),Y1={style:{"text-align":"left"}},Z1={href:"https://leetcode.com/problems/sum-of-remoteness-of-all-cells",target:"_blank",rel:"noopener noreferrer"},D1=t("td",{style:{"text-align":"center"}},null,-1),J1={style:{"text-align":"left"}},$1=t("code",null,"深度优先搜索",-1),tf=t("code",null,"广度优先搜索",-1),ef=t("code",null,"并查集",-1),lf=t("code",null,"3+",-1),of={style:{"text-align":"left"}},nf=t("td",{style:{"text-align":"center"}},"2948",-1),sf={style:{"text-align":"left"}},df={href:"https://leetcode.com/problems/make-lexicographically-smallest-array-by-swapping-elements",target:"_blank",rel:"noopener noreferrer"},_f=t("td",{style:{"text-align":"center"}},null,-1),cf={style:{"text-align":"left"}},af=t("code",null,"并查集",-1),hf=t("code",null,"数组",-1),rf=t("code",null,"排序",-1),uf={style:{"text-align":"left"}},ff=t("td",{style:{"text-align":"center"}},"3108",-1),gf={style:{"text-align":"left"}},mf={href:"https://leetcode.com/problems/minimum-cost-walk-in-weighted-graph",target:"_blank",rel:"noopener noreferrer"},yf=t("td",{style:{"text-align":"center"}},null,-1),xf={style:{"text-align":"left"}},pf=t("code",null,"位运算",-1),bf=t("code",null,"并查集",-1),jf=t("code",null,"图",-1),kf=t("code",null,"1+",-1),Mf={style:{"text-align":"left"}},Hf=t("td",{style:{"text-align":"center"}},"3235",-1),wf={style:{"text-align":"left"}},vf={href:"https://leetcode.com/problems/check-if-the-rectangle-corner-is-reachable",target:"_blank",rel:"noopener noreferrer"},If=t("td",{style:{"text-align":"center"}},null,-1),qf={style:{"text-align":"left"}},Lf=t("code",null,"深度优先搜索",-1),zf=t("code",null,"广度优先搜索",-1),Cf=t("code",null,"并查集",-1),Of=t("code",null,"3+",-1),Ef={style:{"text-align":"left"}},Pf=t("td",{style:{"text-align":"center"}},"LCP 49",-1),Bf={style:{"text-align":"left"}},Nf={href:"https://leetcode.cn/problems/K8GULz",target:"_blank",rel:"noopener noreferrer"},Vf=t("td",{style:{"text-align":"center"}},null,-1),Wf={style:{"text-align":"left"}},Af=t("code",null,"位运算",-1),Kf=t("code",null,"并查集",-1),Qf=t("code",null,"数组",-1),Rf=t("code",null,"1+",-1),Uf={style:{"text-align":"left"}},Ff=t("td",{style:{"text-align":"center"}},"LCP 71",-1),Gf={style:{"text-align":"left"}},Sf={href:"https://leetcode.cn/problems/kskhHQ",target:"_blank",rel:"noopener noreferrer"},Tf=t("td",{style:{"text-align":"center"}},null,-1),Xf={style:{"text-align":"left"}},Yf=t("code",null,"并查集",-1),Zf=t("code",null,"数组",-1),Df=t("code",null,"矩阵",-1),Jf={style:{"text-align":"left"}},$f=t("td",{style:{"text-align":"center"}},"LCS 03",-1),tg={style:{"text-align":"left"}},eg={href:"https://leetcode.cn/problems/YesdPw",target:"_blank",rel:"noopener noreferrer"},lg=t("td",{style:{"text-align":"center"}},null,-1),og={style:{"text-align":"left"}},ng=t("code",null,"深度优先搜索",-1),sg=t("code",null,"广度优先搜索",-1),dg=t("code",null,"并查集",-1),_g=t("code",null,"2+",-1),cg={style:{"text-align":"left"}},ig=t("td",{style:{"text-align":"center"}},"剑指 Offer II 105",-1),ag={style:{"text-align":"left"}},hg={href:"https://leetcode.cn/problems/ZL6zAn",target:"_blank",rel:"noopener noreferrer"},rg=t("td",{style:{"text-align":"center"}},null,-1),ug={style:{"text-align":"left"}},fg=t("code",null,"深度优先搜索",-1),gg=t("code",null,"广度优先搜索",-1),mg=t("code",null,"并查集",-1),yg=t("code",null,"2+",-1),xg={style:{"text-align":"left"}},pg=t("td",{style:{"text-align":"center"}},"剑指 Offer II 106",-1),bg={style:{"text-align":"left"}},jg={href:"https://leetcode.cn/problems/vEAB3K",target:"_blank",rel:"noopener noreferrer"},kg=t("td",{style:{"text-align":"center"}},null,-1),Mg={style:{"text-align":"left"}},Hg=t("code",null,"深度优先搜索",-1),wg=t("code",null,"广度优先搜索",-1),vg=t("code",null,"并查集",-1),Ig=t("code",null,"1+",-1),qg={style:{"text-align":"left"}},Lg=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),zg={style:{"text-align":"left"}},Cg={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},Og=t("td",{style:{"text-align":"center"}},null,-1),Eg={style:{"text-align":"left"}},Pg=t("code",null,"深度优先搜索",-1),Bg=t("code",null,"广度优先搜索",-1),Ng=t("code",null,"并查集",-1),Vg=t("code",null,"3+",-1),Wg={style:{"text-align":"left"}},Ag=t("td",{style:{"text-align":"center"}},"剑指 Offer II 116",-1),Kg={style:{"text-align":"left"}},Qg={href:"https://leetcode.cn/problems/bLyHh0",target:"_blank",rel:"noopener noreferrer"},Rg=t("td",{style:{"text-align":"center"}},null,-1),Ug={style:{"text-align":"left"}},Fg=t("code",null,"深度优先搜索",-1),Gg=t("code",null,"广度优先搜索",-1),Sg=t("code",null,"并查集",-1),Tg=t("code",null,"1+",-1),Xg={style:{"text-align":"left"}},Yg=t("td",{style:{"text-align":"center"}},"剑指 Offer II 117",-1),Zg={style:{"text-align":"left"}},Dg={href:"https://leetcode.cn/problems/H6lPxb",target:"_blank",rel:"noopener noreferrer"},Jg=t("td",{style:{"text-align":"center"}},null,-1),$g={style:{"text-align":"left"}},tm=t("code",null,"深度优先搜索",-1),em=t("code",null,"广度优先搜索",-1),lm=t("code",null,"并查集",-1),om=t("code",null,"3+",-1),nm={style:{"text-align":"left"}},sm=t("td",{style:{"text-align":"center"}},"剑指 Offer II 118",-1),dm={style:{"text-align":"left"}},_m={href:"https://leetcode.cn/problems/7LpjUW",target:"_blank",rel:"noopener noreferrer"},cm=t("td",{style:{"text-align":"center"}},null,-1),im={style:{"text-align":"left"}},am=t("code",null,"深度优先搜索",-1),hm=t("code",null,"广度优先搜索",-1),rm=t("code",null,"并查集",-1),um=t("code",null,"1+",-1),fm={style:{"text-align":"left"}},gm=t("td",{style:{"text-align":"center"}},"剑指 Offer II 119",-1),mm={style:{"text-align":"left"}},ym={href:"https://leetcode.cn/problems/WhsWhI",target:"_blank",rel:"noopener noreferrer"},xm=t("td",{style:{"text-align":"center"}},null,-1),pm={style:{"text-align":"left"}},bm=t("code",null,"并查集",-1),jm=t("code",null,"数组",-1),km=t("code",null,"哈希表",-1),Mm={style:{"text-align":"left"}},Hm=t("td",{style:{"text-align":"center"}},"面试题 16.19",-1),wm={style:{"text-align":"left"}},vm={href:"https://leetcode.cn/problems/pond-sizes-lcci",target:"_blank",rel:"noopener noreferrer"},Im=t("td",{style:{"text-align":"center"}},null,-1),qm={style:{"text-align":"left"}},Lm=t("code",null,"深度优先搜索",-1),zm=t("code",null,"广度优先搜索",-1),Cm=t("code",null,"并查集",-1),Om=t("code",null,"2+",-1),Em={style:{"text-align":"left"}},Pm=t("td",{style:{"text-align":"center"}},"面试题 17.07",-1),Bm={style:{"text-align":"left"}},Nm={href:"https://leetcode.cn/problems/baby-names-lcci",target:"_blank",rel:"noopener noreferrer"},Vm=t("td",{style:{"text-align":"center"}},null,-1),Wm={style:{"text-align":"left"}},Am=t("code",null,"深度优先搜索",-1),Km=t("code",null,"广度优先搜索",-1),Qm=t("code",null,"并查集",-1),Rm=t("code",null,"4+",-1),Um={style:{"text-align":"left"}};function Fm(Gm,Sm){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/strongly-connected-component.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:o(()=>[A]),_:1}),l(),K,l(),e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[F]),_:1})]),G,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/randomized.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/reservoir-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rejection-sampling.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/database.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/interactive.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/iterator.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/concurrency.html"},{default:o(()=>[Pt]),_:1})])]),Bt,h(" prettier-ignore "),t("table",null,[Nt,t("tbody",null,[t("tr",null,[Vt,t("td",Wt,[t("a",At,[l("最长连续序列"),e(s)])]),t("td",Kt,[e(n,{to:"/leetcode-js/problem/0128.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Qt,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Rt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Ft]),_:1})]),t("td",Gt,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[St,t("td",Tt,[t("a",Xt,[l("被围绕的区域"),e(s)])]),t("td",Yt,[e(n,{to:"/leetcode-js/problem/0130.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Zt,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Dt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Jt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[$t]),_:1}),l(),te]),t("td",ee,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[le,t("td",oe,[t("a",ne,[l("岛屿数量"),e(s)])]),t("td",se,[e(n,{to:"/leetcode-js/problem/0200.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",de,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[_e]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[ie]),_:1}),l(),ae]),t("td",he,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[re,t("td",ue,[t("a",fe,[l("以图判树"),e(s)])]),ge,t("td",me,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ye]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[xe]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[pe]),_:1}),l(),be]),t("td",je,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ke,t("td",Me,[t("a",He,[l("岛屿数量 II"),e(s)])]),we,t("td",ve,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Ie]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[qe]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Le]),_:1})]),t("td",ze,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ce,t("td",Oe,[t("a",Ee,[l("无向图中连通分量的数目"),e(s)])]),Pe,t("td",Be,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ne]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ve]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[We]),_:1}),l(),Ae]),t("td",Ke,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qe,t("td",Re,[t("a",Ue,[l("除法求值"),e(s)])]),t("td",Fe,[e(n,{to:"/leetcode-js/problem/0399.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ge,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Se]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Te]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Xe]),_:1}),l(),Ye]),t("td",Ze,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[De,t("td",Je,[t("a",$e,[l("省份数量"),e(s)])]),tl,t("td",el,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ll]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ol]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[nl]),_:1}),l(),sl]),t("td",dl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_l,t("td",cl,[t("a",il,[l("冗余连接"),e(s)])]),al,t("td",hl,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[rl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ul]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[fl]),_:1}),l(),gl]),t("td",ml,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yl,t("td",xl,[t("a",pl,[l("冗余连接 II"),e(s)])]),bl,t("td",jl,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[kl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ml]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Hl]),_:1}),l(),wl]),t("td",vl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Il,t("td",ql,[t("a",Ll,[l("不同岛屿的数量"),e(s)])]),zl,t("td",Cl,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ol]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[El]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Pl]),_:1}),l(),Bl]),t("td",Nl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vl,t("td",Wl,[t("a",Al,[l("岛屿的最大面积"),e(s)])]),t("td",Kl,[e(n,{to:"/leetcode-js/problem/0695.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ql,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Rl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ul]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Fl]),_:1}),l(),Gl]),t("td",Sl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tl,t("td",Xl,[t("a",Yl,[l("不同岛屿的数量 II"),e(s)])]),Zl,t("td",Dl,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Jl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[$l]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[to]),_:1}),l(),eo]),t("td",lo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[oo,t("td",no,[t("a",so,[l("账户合并"),e(s)])]),_o,t("td",co,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[io]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ao]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[ho]),_:1}),l(),ro]),t("td",uo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fo,t("td",go,[t("a",mo,[l("句子相似性 II"),e(s)])]),yo,t("td",xo,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[po]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[bo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[jo]),_:1}),l(),ko]),t("td",Mo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ho,t("td",wo,[t("a",vo,[l("情侣牵手"),e(s)])]),Io,t("td",qo,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Lo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[zo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Co]),_:1}),l(),Oo]),t("td",Eo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Po,t("td",Bo,[t("a",No,[l("水位上升的泳池中游泳"),e(s)])]),Vo,t("td",Wo,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ao]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ko]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Qo]),_:1}),l(),Ro]),t("td",Uo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fo,t("td",Go,[t("a",So,[l("判断二分图"),e(s)])]),To,t("td",Xo,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Yo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Zo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Do]),_:1}),l(),Jo]),t("td",$o,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tn,t("td",en,[t("a",ln,[l("打砖块"),e(s)])]),on,t("td",nn,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[dn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[_n]),_:1})]),t("td",cn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[an,t("td",hn,[t("a",rn,[l("最大人工岛"),e(s)])]),un,t("td",fn,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[gn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[yn]),_:1}),l(),xn]),t("td",pn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bn,t("td",jn,[t("a",kn,[l("相似字符串组"),e(s)])]),Mn,t("td",Hn,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[wn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[vn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[In]),_:1}),l(),qn]),t("td",Ln,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zn,t("td",Cn,[t("a",On,[l("可能的二分法"),e(s)])]),En,t("td",Pn,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Bn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Nn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Vn]),_:1}),l(),Wn]),t("td",An,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Kn,t("td",Qn,[t("a",Rn,[l("尽量减少恶意软件的传播"),e(s)])]),Un,t("td",Fn,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Gn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Sn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Tn]),_:1}),l(),Xn]),t("td",Yn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Zn,t("td",Dn,[t("a",Jn,[l("尽量减少恶意软件的传播 II"),e(s)])]),$n,t("td",ts,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[es]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ls]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[os]),_:1}),l(),ns]),t("td",ss,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ds,t("td",_s,[t("a",cs,[l("移除最多的同行或同列石头"),e(s)])]),is,t("td",as,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[hs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[rs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[us]),_:1}),l(),fs]),t("td",gs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ms,t("td",ys,[t("a",xs,[l("按公因数计算最大组件大小"),e(s)])]),ps,t("td",bs,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[js]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ks]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Ms]),_:1}),l(),Hs]),t("td",ws,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[vs,t("td",Is,[t("a",qs,[l("由斜杠划分区域"),e(s)])]),Ls,t("td",zs,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Cs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Os]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Es]),_:1}),l(),Ps]),t("td",Bs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ns,t("td",Vs,[t("a",Ws,[l("等式方程的可满足性"),e(s)])]),As,t("td",Ks,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Qs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Rs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Us]),_:1}),l(),Fs]),t("td",Gs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ss,t("td",Ts,[t("a",Xs,[l("飞地的数量"),e(s)])]),Ys,t("td",Zs,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ds]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Js]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[$s]),_:1}),l(),td]),t("td",ed,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ld,t("td",od,[t("a",nd,[l("按字典序排列最小的等效字符串"),e(s)])]),sd,t("td",dd,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[_d]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[cd]),_:1})]),t("td",id,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ad,t("td",hd,[t("a",rd,[l("彼此熟识的最早时间"),e(s)])]),ud,t("td",fd,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[gd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[md]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[yd]),_:1})]),t("td",xd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pd,t("td",bd,[t("a",jd,[l("得分最高的路径"),e(s)])]),kd,t("td",Md,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Hd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[wd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[vd]),_:1}),l(),Id]),t("td",qd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ld,t("td",zd,[t("a",Cd,[l("最低成本连通所有城市"),e(s)])]),Od,t("td",Ed,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Pd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Bd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[Nd]),_:1}),l(),Vd]),t("td",Wd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ad,t("td",Kd,[t("a",Qd,[l("水资源分配优化"),e(s)])]),Rd,t("td",Ud,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Fd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Gd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[Sd]),_:1}),l(),Td]),t("td",Xd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yd,t("td",Zd,[t("a",Dd,[l("交换字符串中的元素"),e(s)])]),Jd,t("td",$d,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[t_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[e_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[l_]),_:1}),l(),o_]),t("td",n_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s_,t("td",d_,[t("a",__,[l("统计封闭岛屿的数目"),e(s)])]),c_,t("td",i_,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[a_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[h_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[r_]),_:1}),l(),u_]),t("td",f_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g_,t("td",m_,[t("a",y_,[l("近义词句子"),e(s)])]),x_,t("td",p_,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[b_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[j_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[k_]),_:1}),l(),M_]),t("td",H_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w_,t("td",v_,[t("a",I_,[l("统计参与通信的服务器"),e(s)])]),q_,t("td",L_,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[z_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[C_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[O_]),_:1}),l(),E_]),t("td",P_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B_,t("td",N_,[t("a",V_,[l("连通网络的操作次数"),e(s)])]),W_,t("td",A_,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[K_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Q_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[R_]),_:1}),l(),U_]),t("td",F_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G_,t("td",S_,[t("a",T_,[l("验证二叉树"),e(s)])]),X_,t("td",Y_,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Z_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[D_]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[J_]),_:1}),l(),$_]),t("td",tc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ec,t("td",lc,[t("a",oc,[l("检查网格中是否存在有效路径"),e(s)])]),nc,t("td",sc,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[_c]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[cc]),_:1}),l(),ic]),t("td",ac,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hc,t("td",rc,[t("a",uc,[l("找到最小生成树里的关键边和伪关键边"),e(s)])]),fc,t("td",gc,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[mc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[yc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[xc]),_:1}),l(),pc]),t("td",bc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[jc,t("td",kc,[t("a",Mc,[l("二维网格图中探测环"),e(s)])]),Hc,t("td",wc,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[vc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ic]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[qc]),_:1}),l(),Lc]),t("td",zc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cc,t("td",Oc,[t("a",Ec,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),Pc,t("td",Bc,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Nc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Vc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[Wc]),_:1}),l(),Ac]),t("td",Kc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qc,t("td",Rc,[t("a",Uc,[l("保证图可完全遍历"),e(s)])]),Fc,t("td",Gc,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Sc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Tc]),_:1})]),t("td",Xc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yc,t("td",Zc,[t("a",Dc,[l("连接所有点的最小费用"),e(s)])]),Jc,t("td",$c,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[ti]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[ei]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[li]),_:1}),l(),oi]),t("td",ni,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[si,t("td",di,[t("a",_i,[l("带阈值的图连通性"),e(s)])]),ci,t("td",ii,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[ai]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[hi]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[ri]),_:1}),l(),ui]),t("td",fi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gi,t("td",mi,[t("a",yi,[l("最小体力消耗路径"),e(s)])]),xi,t("td",pi,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[bi]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ji]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[ki]),_:1}),l(),Mi]),t("td",Hi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wi,t("td",vi,[t("a",Ii,[l("矩阵转换后的秩"),e(s)])]),qi,t("td",Li,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[zi]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Ci]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[Oi]),_:1}),l(),Ei]),t("td",Pi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Bi,t("td",Ni,[t("a",Vi,[l("检查边长度限制的路径是否存在"),e(s)])]),Wi,t("td",Ai,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Ki]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Qi]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ri]),_:1}),l(),Ui]),t("td",Fi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gi,t("td",Si,[t("a",Ti,[l("执行交换操作后的最小汉明距离"),e(s)])]),Xi,t("td",Yi,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Zi]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Di]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ji]),_:1})]),t("td",$i,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ta,t("td",ea,[t("a",la,[l("检查边长度限制的路径是否存在 II"),e(s)])]),oa,t("td",na,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[sa]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[da]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[_a]),_:1})]),t("td",ca,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ia,t("td",aa,[t("a",ha,[l("统计子岛屿"),e(s)])]),ra,t("td",ua,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[fa]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ga]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[ma]),_:1}),l(),ya]),t("td",xa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pa,t("td",ba,[t("a",ja,[l("你能穿过矩阵的最后一天"),e(s)])]),ka,t("td",Ma,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Ha]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[wa]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[va]),_:1}),l(),Ia]),t("td",qa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[La,t("td",za,[t("a",Ca,[l("寻找图中是否存在路径"),e(s)])]),Oa,t("td",Ea,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Pa]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Ba]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Na]),_:1}),l(),Va]),t("td",Wa,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Aa,t("td",Ka,[t("a",Qa,[l("数组的最大公因数排序"),e(s)])]),Ra,t("td",Ua,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Fa]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ga]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[Sa]),_:1}),l(),Ta]),t("td",Xa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ya,t("td",Za,[t("a",Da,[l("每棵子树内缺失的最小基因值"),e(s)])]),Ja,t("td",$a,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[th]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[eh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[lh]),_:1}),l(),oh]),t("td",nh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sh,t("td",dh,[t("a",_h,[l("处理含限制条件的好友请求"),e(s)])]),ch,t("td",ih,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[ah]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[hh]),_:1})]),t("td",rh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[uh,t("td",fh,[t("a",gh,[l("找出知晓秘密的所有专家"),e(s)])]),mh,t("td",yh,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[xh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ph]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[bh]),_:1}),l(),jh]),t("td",kh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Mh,t("td",Hh,[t("a",wh,[l("字符串分组"),e(s)])]),vh,t("td",Ih,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[qh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Lh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[zh]),_:1})]),t("td",Ch,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oh,t("td",Eh,[t("a",Ph,[l("无向图中到环的距离"),e(s)])]),Bh,t("td",Nh,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Vh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Wh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Ah]),_:1}),l(),Kh]),t("td",Qh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rh,t("td",Uh,[t("a",Fh,[l("检查方程中的矛盾之处"),e(s)])]),Gh,t("td",Sh,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Th]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Xh]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Yh]),_:1}),l(),Zh]),t("td",Dh,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Jh,t("td",$h,[t("a",tr,[l("统计无向图中无法互相到达点对数"),e(s)])]),er,t("td",lr,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[or]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[nr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[sr]),_:1}),l(),dr]),t("td",_r,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cr,t("td",ir,[t("a",ar,[l("元素值大于变化阈值的子数组"),e(s)])]),hr,t("td",rr,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[ur]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[fr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[gr]),_:1}),l(),mr]),t("td",yr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xr,t("td",pr,[t("a",br,[l("受限条件下可到达节点的数目"),e(s)])]),jr,t("td",kr,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Mr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Hr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[wr]),_:1}),l(),vr]),t("td",Ir,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qr,t("td",Lr,[t("a",zr,[l("最小化网格中的最大值"),e(s)])]),Cr,t("td",Or,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Er]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Pr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[Br]),_:1}),l(),Nr]),t("td",Vr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Wr,t("td",Ar,[t("a",Kr,[l("删除操作后的最大子段和"),e(s)])]),Qr,t("td",Rr,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Ur]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Fr]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[Gr]),_:1}),l(),Sr]),t("td",Tr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Xr,t("td",Yr,[t("a",Zr,[l("好路径的数目"),e(s)])]),Dr,t("td",Jr,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[$r]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[tu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[eu]),_:1}),l(),lu]),t("td",ou,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[nu,t("td",su,[t("a",du,[l("最长上传前缀"),e(s)])]),_u,t("td",cu,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[iu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[au]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[hu]),_:1}),l(),ru]),t("td",uu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fu,t("td",gu,[t("a",mu,[l("两个城市间路径的最小分数"),e(s)])]),yu,t("td",xu,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[pu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[bu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[ju]),_:1}),l(),ku]),t("td",Mu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hu,t("td",wu,[t("a",vu,[l("将节点分成尽可能多的组"),e(s)])]),Iu,t("td",qu,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Lu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[zu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[Cu]),_:1})]),t("td",Ou,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Eu,t("td",Pu,[t("a",Bu,[l("矩阵查询可获得的最大分数"),e(s)])]),Nu,t("td",Vu,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Wu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Au]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ku]),_:1}),l(),Qu]),t("td",Ru,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Uu,t("td",Fu,[t("a",Gu,[l("找出对应 LCP 矩阵的字符串"),e(s)])]),Su,t("td",Tu,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[Xu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Yu]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Zu]),_:1}),l(),Du]),t("td",Ju,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$u,t("td",t1,[t("a",e1,[l("网格图中最少访问的格子数"),e(s)])]),l1,t("td",o1,[e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[n1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[s1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[d1]),_:1}),l(),_1]),t("td",c1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i1,t("td",a1,[t("a",h1,[l("网格图中鱼的最大数目"),e(s)])]),r1,t("td",u1,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[f1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[g1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[m1]),_:1}),l(),y1]),t("td",x1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[p1,t("td",b1,[t("a",j1,[l("最大公约数遍历"),e(s)])]),k1,t("td",M1,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[H1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[w1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[v1]),_:1}),l(),I1]),t("td",q1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[L1,t("td",z1,[t("a",C1,[l("唯一类别的数量"),e(s)])]),O1,t("td",E1,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[P1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting.html"},{default:o(()=>[B1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/interactive.html"},{default:o(()=>[N1]),_:1})]),t("td",V1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[W1,t("td",A1,[t("a",K1,[l("找出最安全路径"),e(s)])]),Q1,t("td",R1,[e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[U1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[F1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[G1]),_:1}),l(),S1]),t("td",T1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[X1,t("td",Y1,[t("a",Z1,[l("所有单元格的远离程度之和"),e(s)])]),D1,t("td",J1,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[$1]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[tf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[ef]),_:1}),l(),lf]),t("td",of,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[nf,t("td",sf,[t("a",df,[l("交换得到字典序最小的数组"),e(s)])]),_f,t("td",cf,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[af]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[hf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[rf]),_:1})]),t("td",uf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ff,t("td",gf,[t("a",mf,[l("带权图里旅途的最小代价"),e(s)])]),yf,t("td",xf,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[pf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[bf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[jf]),_:1}),l(),kf]),t("td",Mf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Hf,t("td",wf,[t("a",vf,[l("判断矩形的两个角落是否可达"),e(s)])]),If,t("td",qf,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Lf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[zf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Cf]),_:1}),l(),Of]),t("td",Ef,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Pf,t("td",Bf,[t("a",Nf,[l("环形闯关游戏"),e(s)])]),Vf,t("td",Wf,[e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[Af]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Kf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Qf]),_:1}),l(),Rf]),t("td",Uf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ff,t("td",Gf,[t("a",Sf,[l("集水器"),e(s)])]),Tf,t("td",Xf,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Yf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Zf]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[Df]),_:1})]),t("td",Jf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$f,t("td",tg,[t("a",eg,[l("主题空间"),e(s)])]),lg,t("td",og,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[ng]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[sg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[dg]),_:1}),l(),_g]),t("td",cg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ig,t("td",ag,[t("a",hg,[l("岛屿的最大面积"),e(s)])]),rg,t("td",ug,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[fg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[gg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[mg]),_:1}),l(),yg]),t("td",xg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pg,t("td",bg,[t("a",jg,[l("二分图"),e(s)])]),kg,t("td",Mg,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Hg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[wg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[vg]),_:1}),l(),Ig]),t("td",qg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Lg,t("td",zg,[t("a",Cg,[l("计算除法"),e(s)])]),Og,t("td",Eg,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Pg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Bg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Ng]),_:1}),l(),Vg]),t("td",Wg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ag,t("td",Kg,[t("a",Qg,[l("省份数量"),e(s)])]),Rg,t("td",Ug,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Fg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Gg]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Sg]),_:1}),l(),Tg]),t("td",Xg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yg,t("td",Zg,[t("a",Dg,[l("相似的字符串"),e(s)])]),Jg,t("td",$g,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[tm]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[em]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[lm]),_:1}),l(),om]),t("td",nm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sm,t("td",dm,[t("a",_m,[l("多余的边"),e(s)])]),cm,t("td",im,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[am]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[hm]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[rm]),_:1}),l(),um]),t("td",fm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gm,t("td",mm,[t("a",ym,[l("最长连续序列"),e(s)])]),xm,t("td",pm,[e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[bm]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[jm]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[km]),_:1})]),t("td",Mm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hm,t("td",wm,[t("a",vm,[l("水域大小"),e(s)])]),Im,t("td",qm,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Lm]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[zm]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Cm]),_:1}),l(),Om]),t("td",Em,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pm,t("td",Bm,[t("a",Nm,[l("婴儿名字"),e(s)])]),Vm,t("td",Wm,[e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Am]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[Km]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[Qm]),_:1}),l(),Rm]),t("td",Um,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const Xm=c(r,[["render",Fm],["__file","union-find.html.vue"]]);export{Xm as default};
