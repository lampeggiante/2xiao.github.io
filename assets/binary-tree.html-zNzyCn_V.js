import{_ as c,r as _,o as i,c as r,a as t,d as e,w as o,b as l,f as a}from"./app-GnK0vSxb.js";const h={},u=t("h1",{id:"二叉树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#二叉树","aria-hidden":"true"},"#"),l(" 二叉树")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("code",null,"单调栈",-1),v=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),E=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),z=t("code",null,"字符串",-1),O=t("code",null,"字符串匹配",-1),q=t("code",null,"树",-1),j=t("span",{class:"blue"},"二叉树",-1),H=t("code",null,"二叉搜索树",-1),L=t("code",null,"最小生成树",-1),C=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),B=t("code",null,"强连通分量",-1),V=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),U=t("code",null,"并查集",-1),R=t("code",null,"字典树",-1),W=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),Y=t("code",null,"后缀数组",-1),Q=t("p",null,[t("strong",null,"算法")],-1),S=t("code",null,"枚举",-1),D=t("code",null,"递归",-1),Z=t("code",null,"分治",-1),A=t("code",null,"回溯",-1),F=t("code",null,"贪心",-1),J=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),vt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),Et=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),zt=t("code",null,"拒绝采样",-1),Ot=t("code",null,"数据库",-1),qt=t("code",null,"设计",-1),jt=t("code",null,"数据流",-1),Ht=t("code",null,"脑筋急转弯",-1),Lt=t("code",null,"交互",-1),Ct=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Bt=t("td",{style:{"text-align":"center"}},"94",-1),Vt={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},Rt={style:{"text-align":"left"}},Wt=t("code",null,"栈",-1),Gt=t("code",null,"树",-1),Yt=t("code",null,"深度优先搜索",-1),Qt=t("code",null,"1+",-1),St={style:{"text-align":"left"}},Dt=t("td",{style:{"text-align":"center"}},"95",-1),Zt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},Ft={style:{"text-align":"center"}},Jt={style:{"text-align":"left"}},Xt=t("code",null,"树",-1),$t=t("code",null,"二叉搜索树",-1),te=t("code",null,"动态规划",-1),ee=t("code",null,"2+",-1),le={style:{"text-align":"left"}},oe=t("td",{style:{"text-align":"center"}},"96",-1),ne={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},de={style:{"text-align":"center"}},_e={style:{"text-align":"left"}},ce=t("code",null,"树",-1),ie=t("code",null,"二叉搜索树",-1),re=t("code",null,"数学",-1),ae=t("code",null,"2+",-1),he={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"98",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},me={style:{"text-align":"center"}},ye={style:{"text-align":"left"}},xe=t("code",null,"树",-1),be=t("code",null,"深度优先搜索",-1),pe=t("code",null,"二叉搜索树",-1),ke=t("code",null,"1+",-1),Me={style:{"text-align":"left"}},ve=t("td",{style:{"text-align":"center"}},"99",-1),Ie={style:{"text-align":"left"}},Ee={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},we={style:{"text-align":"center"}},ze={style:{"text-align":"left"}},Oe=t("code",null,"树",-1),qe=t("code",null,"深度优先搜索",-1),je=t("code",null,"二叉搜索树",-1),He=t("code",null,"1+",-1),Le={style:{"text-align":"left"}},Ce=t("td",{style:{"text-align":"center"}},"100",-1),Ne={style:{"text-align":"left"}},Pe={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Ke={style:{"text-align":"center"}},Be={style:{"text-align":"left"}},Ve=t("code",null,"树",-1),Te=t("code",null,"深度优先搜索",-1),Ue=t("code",null,"广度优先搜索",-1),Re=t("code",null,"1+",-1),We={style:{"text-align":"left"}},Ge=t("td",{style:{"text-align":"center"}},"101",-1),Ye={style:{"text-align":"left"}},Qe={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},Se={style:{"text-align":"center"}},De={style:{"text-align":"left"}},Ze=t("code",null,"树",-1),Ae=t("code",null,"深度优先搜索",-1),Fe=t("code",null,"广度优先搜索",-1),Je=t("code",null,"1+",-1),Xe={style:{"text-align":"left"}},$e=t("td",{style:{"text-align":"center"}},"102",-1),tl={style:{"text-align":"left"}},el={href:"https://leetcode.com/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},ll={style:{"text-align":"center"}},ol={style:{"text-align":"left"}},nl=t("code",null,"树",-1),sl=t("code",null,"广度优先搜索",-1),dl=t("code",null,"二叉树",-1),_l={style:{"text-align":"left"}},cl=t("td",{style:{"text-align":"center"}},"103",-1),il={style:{"text-align":"left"}},rl={href:"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},al={style:{"text-align":"center"}},hl={style:{"text-align":"left"}},ul=t("code",null,"树",-1),fl=t("code",null,"广度优先搜索",-1),gl=t("code",null,"二叉树",-1),ml={style:{"text-align":"left"}},yl=t("td",{style:{"text-align":"center"}},"104",-1),xl={style:{"text-align":"left"}},bl={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},pl={style:{"text-align":"center"}},kl={style:{"text-align":"left"}},Ml=t("code",null,"树",-1),vl=t("code",null,"深度优先搜索",-1),Il=t("code",null,"广度优先搜索",-1),El=t("code",null,"1+",-1),wl={style:{"text-align":"left"}},zl=t("td",{style:{"text-align":"center"}},"105",-1),Ol={style:{"text-align":"left"}},ql={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},jl={style:{"text-align":"center"}},Hl={style:{"text-align":"left"}},Ll=t("code",null,"树",-1),Cl=t("code",null,"数组",-1),Nl=t("code",null,"哈希表",-1),Pl=t("code",null,"2+",-1),Kl={style:{"text-align":"left"}},Bl=t("td",{style:{"text-align":"center"}},"106",-1),Vl={style:{"text-align":"left"}},Tl={href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ul={style:{"text-align":"center"}},Rl={style:{"text-align":"left"}},Wl=t("code",null,"树",-1),Gl=t("code",null,"数组",-1),Yl=t("code",null,"哈希表",-1),Ql=t("code",null,"2+",-1),Sl={style:{"text-align":"left"}},Dl=t("td",{style:{"text-align":"center"}},"107",-1),Zl={style:{"text-align":"left"}},Al={href:"https://leetcode.com/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},Fl={style:{"text-align":"center"}},Jl={style:{"text-align":"left"}},Xl=t("code",null,"树",-1),$l=t("code",null,"广度优先搜索",-1),to=t("code",null,"二叉树",-1),eo={style:{"text-align":"left"}},lo=t("td",{style:{"text-align":"center"}},"108",-1),oo={style:{"text-align":"left"}},no={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},so={style:{"text-align":"center"}},_o={style:{"text-align":"left"}},co=t("code",null,"树",-1),io=t("code",null,"二叉搜索树",-1),ro=t("code",null,"数组",-1),ao=t("code",null,"2+",-1),ho={style:{"text-align":"left"}},uo=t("td",{style:{"text-align":"center"}},"109",-1),fo={style:{"text-align":"left"}},go={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},mo={style:{"text-align":"center"}},yo={style:{"text-align":"left"}},xo=t("code",null,"树",-1),bo=t("code",null,"二叉搜索树",-1),po=t("code",null,"链表",-1),ko=t("code",null,"2+",-1),Mo={style:{"text-align":"left"}},vo=t("td",{style:{"text-align":"center"}},"110",-1),Io={style:{"text-align":"left"}},Eo={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},wo={style:{"text-align":"center"}},zo={style:{"text-align":"left"}},Oo=t("code",null,"树",-1),qo=t("code",null,"深度优先搜索",-1),jo=t("code",null,"二叉树",-1),Ho={style:{"text-align":"left"}},Lo=t("td",{style:{"text-align":"center"}},"111",-1),Co={style:{"text-align":"left"}},No={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Po={style:{"text-align":"center"}},Ko={style:{"text-align":"left"}},Bo=t("code",null,"树",-1),Vo=t("code",null,"深度优先搜索",-1),To=t("code",null,"广度优先搜索",-1),Uo=t("code",null,"1+",-1),Ro={style:{"text-align":"left"}},Wo=t("td",{style:{"text-align":"center"}},"112",-1),Go={style:{"text-align":"left"}},Yo={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},Qo={style:{"text-align":"center"}},So={style:{"text-align":"left"}},Do=t("code",null,"树",-1),Zo=t("code",null,"深度优先搜索",-1),Ao=t("code",null,"广度优先搜索",-1),Fo=t("code",null,"1+",-1),Jo={style:{"text-align":"left"}},Xo=t("td",{style:{"text-align":"center"}},"113",-1),$o={style:{"text-align":"left"}},tn={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},en={style:{"text-align":"center"}},ln={style:{"text-align":"left"}},on=t("code",null,"树",-1),nn=t("code",null,"深度优先搜索",-1),sn=t("code",null,"回溯",-1),dn=t("code",null,"1+",-1),_n={style:{"text-align":"left"}},cn=t("td",{style:{"text-align":"center"}},"114",-1),rn={style:{"text-align":"left"}},an={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},hn={style:{"text-align":"center"}},un={style:{"text-align":"left"}},fn=t("code",null,"栈",-1),gn=t("code",null,"树",-1),mn=t("code",null,"深度优先搜索",-1),yn=t("code",null,"2+",-1),xn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"116",-1),pn={style:{"text-align":"left"}},kn={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},Mn={style:{"text-align":"center"}},vn={style:{"text-align":"left"}},In=t("code",null,"树",-1),En=t("code",null,"深度优先搜索",-1),wn=t("code",null,"广度优先搜索",-1),zn=t("code",null,"2+",-1),On={style:{"text-align":"left"}},qn=t("td",{style:{"text-align":"center"}},"117",-1),jn={style:{"text-align":"left"}},Hn={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},Ln={style:{"text-align":"center"}},Cn={style:{"text-align":"left"}},Nn=t("code",null,"树",-1),Pn=t("code",null,"深度优先搜索",-1),Kn=t("code",null,"广度优先搜索",-1),Bn=t("code",null,"2+",-1),Vn={style:{"text-align":"left"}},Tn=t("td",{style:{"text-align":"center"}},"124",-1),Un={style:{"text-align":"left"}},Rn={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},Wn={style:{"text-align":"center"}},Gn={style:{"text-align":"left"}},Yn=t("code",null,"树",-1),Qn=t("code",null,"深度优先搜索",-1),Sn=t("code",null,"动态规划",-1),Dn=t("code",null,"1+",-1),Zn={style:{"text-align":"left"}},An=t("td",{style:{"text-align":"center"}},"129",-1),Fn={style:{"text-align":"left"}},Jn={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},Xn={style:{"text-align":"center"}},$n={style:{"text-align":"left"}},ts=t("code",null,"树",-1),es=t("code",null,"深度优先搜索",-1),ls=t("code",null,"二叉树",-1),os={style:{"text-align":"left"}},ns=t("td",{style:{"text-align":"center"}},"144",-1),ss={style:{"text-align":"left"}},ds={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},_s={style:{"text-align":"center"}},cs={style:{"text-align":"left"}},is=t("code",null,"栈",-1),rs=t("code",null,"树",-1),as=t("code",null,"深度优先搜索",-1),hs=t("code",null,"1+",-1),us={style:{"text-align":"left"}},fs=t("td",{style:{"text-align":"center"}},"145",-1),gs={style:{"text-align":"left"}},ms={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},ys={style:{"text-align":"center"}},xs={style:{"text-align":"left"}},bs=t("code",null,"栈",-1),ps=t("code",null,"树",-1),ks=t("code",null,"深度优先搜索",-1),Ms=t("code",null,"1+",-1),vs={style:{"text-align":"left"}},Is=t("td",{style:{"text-align":"center"}},"156",-1),Es={style:{"text-align":"left"}},ws={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},zs={style:{"text-align":"center"}},Os={style:{"text-align":"left"}},qs=t("code",null,"树",-1),js=t("code",null,"深度优先搜索",-1),Hs=t("code",null,"二叉树",-1),Ls={style:{"text-align":"left"}},Cs=t("td",{style:{"text-align":"center"}},"173",-1),Ns={style:{"text-align":"left"}},Ps={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},Ks={style:{"text-align":"center"}},Bs={style:{"text-align":"left"}},Vs=t("code",null,"栈",-1),Ts=t("code",null,"树",-1),Us=t("code",null,"设计",-1),Rs=t("code",null,"3+",-1),Ws={style:{"text-align":"left"}},Gs=t("td",{style:{"text-align":"center"}},"199",-1),Ys={style:{"text-align":"left"}},Qs={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},Ss={style:{"text-align":"center"}},Ds={style:{"text-align":"left"}},Zs=t("code",null,"树",-1),As=t("code",null,"深度优先搜索",-1),Fs=t("code",null,"广度优先搜索",-1),Js=t("code",null,"1+",-1),Xs={style:{"text-align":"left"}},$s=t("td",{style:{"text-align":"center"}},"222",-1),td={style:{"text-align":"left"}},ed={href:"https://leetcode.com/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},ld={style:{"text-align":"center"}},od={style:{"text-align":"left"}},nd=t("code",null,"位运算",-1),sd=t("code",null,"树",-1),dd=t("code",null,"二分查找",-1),_d=t("code",null,"1+",-1),cd={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"226",-1),rd={style:{"text-align":"left"}},ad={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},hd={style:{"text-align":"center"}},ud={style:{"text-align":"left"}},fd=t("code",null,"树",-1),gd=t("code",null,"深度优先搜索",-1),md=t("code",null,"广度优先搜索",-1),yd=t("code",null,"1+",-1),xd={style:{"text-align":"left"}},bd=t("td",{style:{"text-align":"center"}},"230",-1),pd={style:{"text-align":"left"}},kd={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Md={style:{"text-align":"center"}},vd={style:{"text-align":"left"}},Id=t("code",null,"树",-1),Ed=t("code",null,"深度优先搜索",-1),wd=t("code",null,"二叉搜索树",-1),zd=t("code",null,"1+",-1),Od={style:{"text-align":"left"}},qd=t("td",{style:{"text-align":"center"}},"235",-1),jd={style:{"text-align":"left"}},Hd={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ld={style:{"text-align":"center"}},Cd={style:{"text-align":"left"}},Nd=t("code",null,"树",-1),Pd=t("code",null,"深度优先搜索",-1),Kd=t("code",null,"二叉搜索树",-1),Bd=t("code",null,"1+",-1),Vd={style:{"text-align":"left"}},Td=t("td",{style:{"text-align":"center"}},"236",-1),Ud={style:{"text-align":"left"}},Rd={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wd={style:{"text-align":"center"}},Gd={style:{"text-align":"left"}},Yd=t("code",null,"树",-1),Qd=t("code",null,"深度优先搜索",-1),Sd=t("code",null,"二叉树",-1),Dd={style:{"text-align":"left"}},Zd=t("td",{style:{"text-align":"center"}},"250",-1),Ad={style:{"text-align":"left"}},Fd={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},Jd=t("td",{style:{"text-align":"center"}},null,-1),Xd={style:{"text-align":"left"}},$d=t("code",null,"树",-1),t_=t("code",null,"深度优先搜索",-1),e_=t("code",null,"二叉树",-1),l_={style:{"text-align":"left"}},o_=t("td",{style:{"text-align":"center"}},"255",-1),n_={style:{"text-align":"left"}},s_={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},d_=t("td",{style:{"text-align":"center"}},null,-1),__={style:{"text-align":"left"}},c_=t("code",null,"栈",-1),i_=t("code",null,"树",-1),r_=t("code",null,"二叉搜索树",-1),a_=t("code",null,"4+",-1),h_={style:{"text-align":"left"}},u_=t("td",{style:{"text-align":"center"}},"257",-1),f_={style:{"text-align":"left"}},g_={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},m_={style:{"text-align":"center"}},y_={style:{"text-align":"left"}},x_=t("code",null,"树",-1),b_=t("code",null,"深度优先搜索",-1),p_=t("code",null,"字符串",-1),k_=t("code",null,"2+",-1),M_={style:{"text-align":"left"}},v_=t("td",{style:{"text-align":"center"}},"270",-1),I_={style:{"text-align":"left"}},E_={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},w_=t("td",{style:{"text-align":"center"}},null,-1),z_={style:{"text-align":"left"}},O_=t("code",null,"树",-1),q_=t("code",null,"深度优先搜索",-1),j_=t("code",null,"二叉搜索树",-1),H_=t("code",null,"2+",-1),L_={style:{"text-align":"left"}},C_=t("td",{style:{"text-align":"center"}},"272",-1),N_={style:{"text-align":"left"}},P_={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},K_=t("td",{style:{"text-align":"center"}},null,-1),B_={style:{"text-align":"left"}},V_=t("code",null,"栈",-1),T_=t("code",null,"树",-1),U_=t("code",null,"深度优先搜索",-1),R_=t("code",null,"4+",-1),W_={style:{"text-align":"left"}},G_=t("td",{style:{"text-align":"center"}},"285",-1),Y_={style:{"text-align":"left"}},Q_={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},S_=t("td",{style:{"text-align":"center"}},null,-1),D_={style:{"text-align":"left"}},Z_=t("code",null,"树",-1),A_=t("code",null,"深度优先搜索",-1),F_=t("code",null,"二叉搜索树",-1),J_=t("code",null,"1+",-1),X_={style:{"text-align":"left"}},$_=t("td",{style:{"text-align":"center"}},"297",-1),tc={style:{"text-align":"left"}},ec={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},lc={style:{"text-align":"center"}},oc={style:{"text-align":"left"}},nc=t("code",null,"树",-1),sc=t("code",null,"深度优先搜索",-1),dc=t("code",null,"广度优先搜索",-1),_c=t("code",null,"3+",-1),cc={style:{"text-align":"left"}},ic=t("td",{style:{"text-align":"center"}},"298",-1),rc={style:{"text-align":"left"}},ac={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},hc=t("td",{style:{"text-align":"center"}},null,-1),uc={style:{"text-align":"left"}},fc=t("code",null,"树",-1),gc=t("code",null,"深度优先搜索",-1),mc=t("code",null,"二叉树",-1),yc={style:{"text-align":"left"}},xc=t("td",{style:{"text-align":"center"}},"314",-1),bc={style:{"text-align":"left"}},pc={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},kc=t("td",{style:{"text-align":"center"}},null,-1),Mc={style:{"text-align":"left"}},vc=t("code",null,"树",-1),Ic=t("code",null,"深度优先搜索",-1),Ec=t("code",null,"广度优先搜索",-1),wc=t("code",null,"3+",-1),zc={style:{"text-align":"left"}},Oc=t("td",{style:{"text-align":"center"}},"331",-1),qc={style:{"text-align":"left"}},jc={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Hc=t("td",{style:{"text-align":"center"}},null,-1),Lc={style:{"text-align":"left"}},Cc=t("code",null,"栈",-1),Nc=t("code",null,"树",-1),Pc=t("code",null,"字符串",-1),Kc=t("code",null,"1+",-1),Bc={style:{"text-align":"left"}},Vc=t("td",{style:{"text-align":"center"}},"333",-1),Tc={style:{"text-align":"left"}},Uc={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},Rc=t("td",{style:{"text-align":"center"}},null,-1),Wc={style:{"text-align":"left"}},Gc=t("code",null,"树",-1),Yc=t("code",null,"深度优先搜索",-1),Qc=t("code",null,"二叉搜索树",-1),Sc=t("code",null,"2+",-1),Dc={style:{"text-align":"left"}},Zc=t("td",{style:{"text-align":"center"}},"337",-1),Ac={style:{"text-align":"left"}},Fc={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Jc=t("td",{style:{"text-align":"center"}},null,-1),Xc={style:{"text-align":"left"}},$c=t("code",null,"树",-1),ti=t("code",null,"深度优先搜索",-1),ei=t("code",null,"动态规划",-1),li=t("code",null,"1+",-1),oi={style:{"text-align":"left"}},ni=t("td",{style:{"text-align":"center"}},"366",-1),si={style:{"text-align":"left"}},di={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},_i={style:{"text-align":"center"}},ci={style:{"text-align":"left"}},ii=t("code",null,"树",-1),ri=t("code",null,"深度优先搜索",-1),ai=t("code",null,"二叉树",-1),hi={style:{"text-align":"left"}},ui=t("td",{style:{"text-align":"center"}},"404",-1),fi={style:{"text-align":"left"}},gi={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},mi=t("td",{style:{"text-align":"center"}},null,-1),yi={style:{"text-align":"left"}},xi=t("code",null,"树",-1),bi=t("code",null,"深度优先搜索",-1),pi=t("code",null,"广度优先搜索",-1),ki=t("code",null,"1+",-1),Mi={style:{"text-align":"left"}},vi=t("td",{style:{"text-align":"center"}},"426",-1),Ii={style:{"text-align":"left"}},Ei={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},wi={style:{"text-align":"center"}},zi={style:{"text-align":"left"}},Oi=t("code",null,"栈",-1),qi=t("code",null,"树",-1),ji=t("code",null,"深度优先搜索",-1),Hi=t("code",null,"4+",-1),Li={style:{"text-align":"left"}},Ci=t("td",{style:{"text-align":"center"}},"431",-1),Ni={style:{"text-align":"left"}},Pi={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ki=t("td",{style:{"text-align":"center"}},null,-1),Bi={style:{"text-align":"left"}},Vi=t("code",null,"树",-1),Ti=t("code",null,"深度优先搜索",-1),Ui=t("code",null,"广度优先搜索",-1),Ri=t("code",null,"2+",-1),Wi={style:{"text-align":"left"}},Gi=t("td",{style:{"text-align":"center"}},"437",-1),Yi={style:{"text-align":"left"}},Qi={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},Si={style:{"text-align":"center"}},Di={style:{"text-align":"left"}},Zi=t("code",null,"树",-1),Ai=t("code",null,"深度优先搜索",-1),Fi=t("code",null,"二叉树",-1),Ji={style:{"text-align":"left"}},Xi=t("td",{style:{"text-align":"center"}},"449",-1),$i={style:{"text-align":"left"}},tr={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},er=t("td",{style:{"text-align":"center"}},null,-1),lr={style:{"text-align":"left"}},or=t("code",null,"树",-1),nr=t("code",null,"深度优先搜索",-1),sr=t("code",null,"广度优先搜索",-1),dr=t("code",null,"4+",-1),_r={style:{"text-align":"left"}},cr=t("td",{style:{"text-align":"center"}},"450",-1),ir={style:{"text-align":"left"}},rr={href:"https://leetcode.com/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},ar={style:{"text-align":"center"}},hr={style:{"text-align":"left"}},ur=t("code",null,"树",-1),fr=t("code",null,"二叉搜索树",-1),gr=t("code",null,"二叉树",-1),mr={style:{"text-align":"left"}},yr=t("td",{style:{"text-align":"center"}},"501",-1),xr={style:{"text-align":"left"}},br={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},pr=t("td",{style:{"text-align":"center"}},null,-1),kr={style:{"text-align":"left"}},Mr=t("code",null,"树",-1),vr=t("code",null,"深度优先搜索",-1),Ir=t("code",null,"二叉搜索树",-1),Er=t("code",null,"1+",-1),wr={style:{"text-align":"left"}},zr=t("td",{style:{"text-align":"center"}},"508",-1),Or={style:{"text-align":"left"}},qr={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},jr=t("td",{style:{"text-align":"center"}},null,-1),Hr={style:{"text-align":"left"}},Lr=t("code",null,"树",-1),Cr=t("code",null,"深度优先搜索",-1),Nr=t("code",null,"哈希表",-1),Pr=t("code",null,"1+",-1),Kr={style:{"text-align":"left"}},Br=t("td",{style:{"text-align":"center"}},"510",-1),Vr={style:{"text-align":"left"}},Tr={href:"https://leetcode.com/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},Ur=t("td",{style:{"text-align":"center"}},null,-1),Rr={style:{"text-align":"left"}},Wr=t("code",null,"树",-1),Gr=t("code",null,"二叉搜索树",-1),Yr=t("code",null,"二叉树",-1),Qr={style:{"text-align":"left"}},Sr=t("td",{style:{"text-align":"center"}},"513",-1),Dr={style:{"text-align":"left"}},Zr={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},Ar=t("td",{style:{"text-align":"center"}},null,-1),Fr={style:{"text-align":"left"}},Jr=t("code",null,"树",-1),Xr=t("code",null,"深度优先搜索",-1),$r=t("code",null,"广度优先搜索",-1),ta=t("code",null,"1+",-1),ea={style:{"text-align":"left"}},la=t("td",{style:{"text-align":"center"}},"515",-1),oa={style:{"text-align":"left"}},na={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},sa=t("td",{style:{"text-align":"center"}},null,-1),da={style:{"text-align":"left"}},_a=t("code",null,"树",-1),ca=t("code",null,"深度优先搜索",-1),ia=t("code",null,"广度优先搜索",-1),ra=t("code",null,"1+",-1),aa={style:{"text-align":"left"}},ha=t("td",{style:{"text-align":"center"}},"530",-1),ua={style:{"text-align":"left"}},fa={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},ga={style:{"text-align":"center"}},ma={style:{"text-align":"left"}},ya=t("code",null,"树",-1),xa=t("code",null,"深度优先搜索",-1),ba=t("code",null,"广度优先搜索",-1),pa=t("code",null,"2+",-1),ka={style:{"text-align":"left"}},Ma=t("td",{style:{"text-align":"center"}},"536",-1),va={style:{"text-align":"left"}},Ia={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},Ea=t("td",{style:{"text-align":"center"}},null,-1),wa={style:{"text-align":"left"}},za=t("code",null,"栈",-1),Oa=t("code",null,"树",-1),qa=t("code",null,"深度优先搜索",-1),ja=t("code",null,"2+",-1),Ha={style:{"text-align":"left"}},La=t("td",{style:{"text-align":"center"}},"538",-1),Ca={style:{"text-align":"left"}},Na={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},Pa=t("td",{style:{"text-align":"center"}},null,-1),Ka={style:{"text-align":"left"}},Ba=t("code",null,"树",-1),Va=t("code",null,"深度优先搜索",-1),Ta=t("code",null,"二叉搜索树",-1),Ua=t("code",null,"1+",-1),Ra={style:{"text-align":"left"}},Wa=t("td",{style:{"text-align":"center"}},"543",-1),Ga={style:{"text-align":"left"}},Ya={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Qa={style:{"text-align":"center"}},Sa={style:{"text-align":"left"}},Da=t("code",null,"树",-1),Za=t("code",null,"深度优先搜索",-1),Aa=t("code",null,"二叉树",-1),Fa={style:{"text-align":"left"}},Ja=t("td",{style:{"text-align":"center"}},"545",-1),Xa={style:{"text-align":"left"}},$a={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},t1=t("td",{style:{"text-align":"center"}},null,-1),e1={style:{"text-align":"left"}},l1=t("code",null,"树",-1),o1=t("code",null,"深度优先搜索",-1),n1=t("code",null,"二叉树",-1),s1={style:{"text-align":"left"}},d1=t("td",{style:{"text-align":"center"}},"549",-1),_1={style:{"text-align":"left"}},c1={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},i1=t("td",{style:{"text-align":"center"}},null,-1),r1={style:{"text-align":"left"}},a1=t("code",null,"树",-1),h1=t("code",null,"深度优先搜索",-1),u1=t("code",null,"二叉树",-1),f1={style:{"text-align":"left"}},g1=t("td",{style:{"text-align":"center"}},"563",-1),m1={style:{"text-align":"left"}},y1={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},x1=t("td",{style:{"text-align":"center"}},null,-1),b1={style:{"text-align":"left"}},p1=t("code",null,"树",-1),k1=t("code",null,"深度优先搜索",-1),M1=t("code",null,"二叉树",-1),v1={style:{"text-align":"left"}},I1=t("td",{style:{"text-align":"center"}},"572",-1),E1={style:{"text-align":"left"}},w1={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},z1={style:{"text-align":"center"}},O1={style:{"text-align":"left"}},q1=t("code",null,"树",-1),j1=t("code",null,"深度优先搜索",-1),H1=t("code",null,"二叉树",-1),L1=t("code",null,"2+",-1),C1={style:{"text-align":"left"}},N1=t("td",{style:{"text-align":"center"}},"606",-1),P1={style:{"text-align":"left"}},K1={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},B1=t("td",{style:{"text-align":"center"}},null,-1),V1={style:{"text-align":"left"}},T1=t("code",null,"树",-1),U1=t("code",null,"深度优先搜索",-1),R1=t("code",null,"字符串",-1),W1=t("code",null,"1+",-1),G1={style:{"text-align":"left"}},Y1=t("td",{style:{"text-align":"center"}},"617",-1),Q1={style:{"text-align":"left"}},S1={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},D1={style:{"text-align":"center"}},Z1={style:{"text-align":"left"}},A1=t("code",null,"树",-1),F1=t("code",null,"深度优先搜索",-1),J1=t("code",null,"广度优先搜索",-1),X1=t("code",null,"1+",-1),$1={style:{"text-align":"left"}},th=t("td",{style:{"text-align":"center"}},"623",-1),eh={style:{"text-align":"left"}},lh={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},oh=t("td",{style:{"text-align":"center"}},null,-1),nh={style:{"text-align":"left"}},sh=t("code",null,"树",-1),dh=t("code",null,"深度优先搜索",-1),_h=t("code",null,"广度优先搜索",-1),ch=t("code",null,"1+",-1),ih={style:{"text-align":"left"}},rh=t("td",{style:{"text-align":"center"}},"637",-1),ah={style:{"text-align":"left"}},hh={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},uh={style:{"text-align":"center"}},fh={style:{"text-align":"left"}},gh=t("code",null,"树",-1),mh=t("code",null,"深度优先搜索",-1),yh=t("code",null,"广度优先搜索",-1),xh=t("code",null,"1+",-1),bh={style:{"text-align":"left"}},ph=t("td",{style:{"text-align":"center"}},"652",-1),kh={style:{"text-align":"left"}},Mh={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},vh=t("td",{style:{"text-align":"center"}},null,-1),Ih={style:{"text-align":"left"}},Eh=t("code",null,"树",-1),wh=t("code",null,"深度优先搜索",-1),zh=t("code",null,"哈希表",-1),Oh=t("code",null,"1+",-1),qh={style:{"text-align":"left"}},jh=t("td",{style:{"text-align":"center"}},"653",-1),Hh={style:{"text-align":"left"}},Lh={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},Ch=t("td",{style:{"text-align":"center"}},null,-1),Nh={style:{"text-align":"left"}},Ph=t("code",null,"树",-1),Kh=t("code",null,"深度优先搜索",-1),Bh=t("code",null,"广度优先搜索",-1),Vh=t("code",null,"4+",-1),Th={style:{"text-align":"left"}},Uh=t("td",{style:{"text-align":"center"}},"654",-1),Rh={style:{"text-align":"left"}},Wh={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Gh={style:{"text-align":"center"}},Yh={style:{"text-align":"left"}},Qh=t("code",null,"栈",-1),Sh=t("code",null,"树",-1),Dh=t("code",null,"数组",-1),Zh=t("code",null,"3+",-1),Ah={style:{"text-align":"left"}},Fh=t("td",{style:{"text-align":"center"}},"655",-1),Jh={style:{"text-align":"left"}},Xh={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},$h=t("td",{style:{"text-align":"center"}},null,-1),tu={style:{"text-align":"left"}},eu=t("code",null,"树",-1),lu=t("code",null,"深度优先搜索",-1),ou=t("code",null,"广度优先搜索",-1),nu=t("code",null,"1+",-1),su={style:{"text-align":"left"}},du=t("td",{style:{"text-align":"center"}},"662",-1),_u={style:{"text-align":"left"}},cu={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},iu={style:{"text-align":"center"}},ru={style:{"text-align":"left"}},au=t("code",null,"树",-1),hu=t("code",null,"深度优先搜索",-1),uu=t("code",null,"广度优先搜索",-1),fu=t("code",null,"1+",-1),gu={style:{"text-align":"left"}},mu=t("td",{style:{"text-align":"center"}},"663",-1),yu={style:{"text-align":"left"}},xu={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},bu=t("td",{style:{"text-align":"center"}},null,-1),pu={style:{"text-align":"left"}},ku=t("code",null,"树",-1),Mu=t("code",null,"深度优先搜索",-1),vu=t("code",null,"二叉树",-1),Iu={style:{"text-align":"left"}},Eu=t("td",{style:{"text-align":"center"}},"666",-1),wu={style:{"text-align":"left"}},zu={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},Ou=t("td",{style:{"text-align":"center"}},null,-1),qu={style:{"text-align":"left"}},ju=t("code",null,"树",-1),Hu=t("code",null,"深度优先搜索",-1),Lu=t("code",null,"数组",-1),Cu=t("code",null,"2+",-1),Nu={style:{"text-align":"left"}},Pu=t("td",{style:{"text-align":"center"}},"669",-1),Ku={style:{"text-align":"left"}},Bu={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Vu=t("td",{style:{"text-align":"center"}},null,-1),Tu={style:{"text-align":"left"}},Uu=t("code",null,"树",-1),Ru=t("code",null,"深度优先搜索",-1),Wu=t("code",null,"二叉搜索树",-1),Gu=t("code",null,"1+",-1),Yu={style:{"text-align":"left"}},Qu=t("td",{style:{"text-align":"center"}},"671",-1),Su={style:{"text-align":"left"}},Du={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Zu=t("td",{style:{"text-align":"center"}},null,-1),Au={style:{"text-align":"left"}},Fu=t("code",null,"树",-1),Ju=t("code",null,"深度优先搜索",-1),Xu=t("code",null,"二叉树",-1),$u={style:{"text-align":"left"}},tf=t("td",{style:{"text-align":"center"}},"687",-1),ef={style:{"text-align":"left"}},lf={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},of=t("td",{style:{"text-align":"center"}},null,-1),nf={style:{"text-align":"left"}},sf=t("code",null,"树",-1),df=t("code",null,"深度优先搜索",-1),_f=t("code",null,"二叉树",-1),cf={style:{"text-align":"left"}},rf=t("td",{style:{"text-align":"center"}},"700",-1),af={style:{"text-align":"left"}},hf={href:"https://leetcode.com/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},uf={style:{"text-align":"center"}},ff={style:{"text-align":"left"}},gf=t("code",null,"树",-1),mf=t("code",null,"二叉搜索树",-1),yf=t("code",null,"二叉树",-1),xf={style:{"text-align":"left"}},bf=t("td",{style:{"text-align":"center"}},"701",-1),pf={style:{"text-align":"left"}},kf={href:"https://leetcode.com/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Mf={style:{"text-align":"center"}},vf={style:{"text-align":"left"}},If=t("code",null,"树",-1),Ef=t("code",null,"二叉搜索树",-1),wf=t("code",null,"二叉树",-1),zf={style:{"text-align":"left"}},Of=t("td",{style:{"text-align":"center"}},"703",-1),qf={style:{"text-align":"left"}},jf={href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},Hf={style:{"text-align":"center"}},Lf={style:{"text-align":"left"}},Cf=t("code",null,"树",-1),Nf=t("code",null,"设计",-1),Pf=t("code",null,"二叉搜索树",-1),Kf=t("code",null,"3+",-1),Bf={style:{"text-align":"left"}},Vf=t("td",{style:{"text-align":"center"}},"742",-1),Tf={style:{"text-align":"left"}},Uf={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Rf=t("td",{style:{"text-align":"center"}},null,-1),Wf={style:{"text-align":"left"}},Gf=t("code",null,"树",-1),Yf=t("code",null,"深度优先搜索",-1),Qf=t("code",null,"广度优先搜索",-1),Sf=t("code",null,"1+",-1),Df={style:{"text-align":"left"}},Zf=t("td",{style:{"text-align":"center"}},"776",-1),Af={style:{"text-align":"left"}},Ff={href:"https://leetcode.com/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},Jf=t("td",{style:{"text-align":"center"}},null,-1),Xf={style:{"text-align":"left"}},$f=t("code",null,"树",-1),tg=t("code",null,"二叉搜索树",-1),eg=t("code",null,"递归",-1),lg=t("code",null,"1+",-1),og={style:{"text-align":"left"}},ng=t("td",{style:{"text-align":"center"}},"783",-1),sg={style:{"text-align":"left"}},dg={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},_g={style:{"text-align":"center"}},cg={style:{"text-align":"left"}},ig=t("code",null,"树",-1),rg=t("code",null,"深度优先搜索",-1),ag=t("code",null,"广度优先搜索",-1),hg=t("code",null,"2+",-1),ug={style:{"text-align":"left"}},fg=t("td",{style:{"text-align":"center"}},"814",-1),gg={style:{"text-align":"left"}},mg={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},yg=t("td",{style:{"text-align":"center"}},null,-1),xg={style:{"text-align":"left"}},bg=t("code",null,"树",-1),pg=t("code",null,"深度优先搜索",-1),kg=t("code",null,"二叉树",-1),Mg={style:{"text-align":"left"}},vg=t("td",{style:{"text-align":"center"}},"863",-1),Ig={style:{"text-align":"left"}},Eg={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},wg=t("td",{style:{"text-align":"center"}},null,-1),zg={style:{"text-align":"left"}},Og=t("code",null,"树",-1),qg=t("code",null,"深度优先搜索",-1),jg=t("code",null,"广度优先搜索",-1),Hg=t("code",null,"2+",-1),Lg={style:{"text-align":"left"}},Cg=t("td",{style:{"text-align":"center"}},"865",-1),Ng={style:{"text-align":"left"}},Pg={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},Kg=t("td",{style:{"text-align":"center"}},null,-1),Bg={style:{"text-align":"left"}},Vg=t("code",null,"树",-1),Tg=t("code",null,"深度优先搜索",-1),Ug=t("code",null,"广度优先搜索",-1),Rg=t("code",null,"2+",-1),Wg={style:{"text-align":"left"}},Gg=t("td",{style:{"text-align":"center"}},"872",-1),Yg={style:{"text-align":"left"}},Qg={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},Sg=t("td",{style:{"text-align":"center"}},null,-1),Dg={style:{"text-align":"left"}},Zg=t("code",null,"树",-1),Ag=t("code",null,"深度优先搜索",-1),Fg=t("code",null,"二叉树",-1),Jg={style:{"text-align":"left"}},Xg=t("td",{style:{"text-align":"center"}},"889",-1),$g={style:{"text-align":"left"}},tm={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},em={style:{"text-align":"center"}},lm={style:{"text-align":"left"}},om=t("code",null,"树",-1),nm=t("code",null,"数组",-1),sm=t("code",null,"哈希表",-1),dm=t("code",null,"2+",-1),_m={style:{"text-align":"left"}},cm=t("td",{style:{"text-align":"center"}},"894",-1),im={style:{"text-align":"left"}},rm={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},am=t("td",{style:{"text-align":"center"}},null,-1),hm={style:{"text-align":"left"}},um=t("code",null,"树",-1),fm=t("code",null,"递归",-1),gm=t("code",null,"记忆化搜索",-1),mm=t("code",null,"2+",-1),ym={style:{"text-align":"left"}},xm=t("td",{style:{"text-align":"center"}},"897",-1),bm={style:{"text-align":"left"}},pm={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},km=t("td",{style:{"text-align":"center"}},null,-1),Mm={style:{"text-align":"left"}},vm=t("code",null,"栈",-1),Im=t("code",null,"树",-1),Em=t("code",null,"深度优先搜索",-1),wm=t("code",null,"2+",-1),zm={style:{"text-align":"left"}},Om=t("td",{style:{"text-align":"center"}},"919",-1),qm={style:{"text-align":"left"}},jm={href:"https://leetcode.com/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},Hm=t("td",{style:{"text-align":"center"}},null,-1),Lm={style:{"text-align":"left"}},Cm=t("code",null,"树",-1),Nm=t("code",null,"广度优先搜索",-1),Pm=t("code",null,"设计",-1),Km=t("code",null,"1+",-1),Bm={style:{"text-align":"left"}},Vm=t("td",{style:{"text-align":"center"}},"938",-1),Tm={style:{"text-align":"left"}},Um={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},Rm=t("td",{style:{"text-align":"center"}},null,-1),Wm={style:{"text-align":"left"}},Gm=t("code",null,"树",-1),Ym=t("code",null,"深度优先搜索",-1),Qm=t("code",null,"二叉搜索树",-1),Sm=t("code",null,"1+",-1),Dm={style:{"text-align":"left"}},Zm=t("td",{style:{"text-align":"center"}},"951",-1),Am={style:{"text-align":"left"}},Fm={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Jm=t("td",{style:{"text-align":"center"}},null,-1),Xm={style:{"text-align":"left"}},$m=t("code",null,"树",-1),ty=t("code",null,"深度优先搜索",-1),ey=t("code",null,"二叉树",-1),ly={style:{"text-align":"left"}},oy=t("td",{style:{"text-align":"center"}},"958",-1),ny={style:{"text-align":"left"}},sy={href:"https://leetcode.com/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},dy={style:{"text-align":"center"}},_y={style:{"text-align":"left"}},cy=t("code",null,"树",-1),iy=t("code",null,"广度优先搜索",-1),ry=t("code",null,"二叉树",-1),ay={style:{"text-align":"left"}},hy=t("td",{style:{"text-align":"center"}},"965",-1),uy={style:{"text-align":"left"}},fy={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},gy=t("td",{style:{"text-align":"center"}},null,-1),my={style:{"text-align":"left"}},yy=t("code",null,"树",-1),xy=t("code",null,"深度优先搜索",-1),by=t("code",null,"广度优先搜索",-1),py=t("code",null,"1+",-1),ky={style:{"text-align":"left"}},My=t("td",{style:{"text-align":"center"}},"968",-1),vy={style:{"text-align":"left"}},Iy={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},Ey=t("td",{style:{"text-align":"center"}},null,-1),wy={style:{"text-align":"left"}},zy=t("code",null,"树",-1),Oy=t("code",null,"深度优先搜索",-1),qy=t("code",null,"动态规划",-1),jy=t("code",null,"1+",-1),Hy={style:{"text-align":"left"}},Ly=t("td",{style:{"text-align":"center"}},"971",-1),Cy={style:{"text-align":"left"}},Ny={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Py=t("td",{style:{"text-align":"center"}},null,-1),Ky={style:{"text-align":"left"}},By=t("code",null,"树",-1),Vy=t("code",null,"深度优先搜索",-1),Ty=t("code",null,"二叉树",-1),Uy={style:{"text-align":"left"}},Ry=t("td",{style:{"text-align":"center"}},"979",-1),Wy={style:{"text-align":"left"}},Gy={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Yy=t("td",{style:{"text-align":"center"}},null,-1),Qy={style:{"text-align":"left"}},Sy=t("code",null,"树",-1),Dy=t("code",null,"深度优先搜索",-1),Zy=t("code",null,"二叉树",-1),Ay={style:{"text-align":"left"}},Fy=t("td",{style:{"text-align":"center"}},"987",-1),Jy={style:{"text-align":"left"}},Xy={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},$y=t("td",{style:{"text-align":"center"}},null,-1),tx={style:{"text-align":"left"}},ex=t("code",null,"树",-1),lx=t("code",null,"深度优先搜索",-1),ox=t("code",null,"广度优先搜索",-1),nx=t("code",null,"3+",-1),sx={style:{"text-align":"left"}},dx=t("td",{style:{"text-align":"center"}},"988",-1),_x={style:{"text-align":"left"}},cx={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},ix=t("td",{style:{"text-align":"center"}},null,-1),rx={style:{"text-align":"left"}},ax=t("code",null,"树",-1),hx=t("code",null,"深度优先搜索",-1),ux=t("code",null,"字符串",-1),fx=t("code",null,"2+",-1),gx={style:{"text-align":"left"}},mx=t("td",{style:{"text-align":"center"}},"993",-1),yx={style:{"text-align":"left"}},xx={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},bx=t("td",{style:{"text-align":"center"}},null,-1),px={style:{"text-align":"left"}},kx=t("code",null,"树",-1),Mx=t("code",null,"深度优先搜索",-1),vx=t("code",null,"广度优先搜索",-1),Ix=t("code",null,"1+",-1),Ex={style:{"text-align":"left"}},wx=t("td",{style:{"text-align":"center"}},"998",-1),zx={style:{"text-align":"left"}},Ox={href:"https://leetcode.com/problems/maximum-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},qx=t("td",{style:{"text-align":"center"}},null,-1),jx={style:{"text-align":"left"}},Hx=t("code",null,"树",-1),Lx=t("code",null,"二叉树",-1),Cx={style:{"text-align":"left"}},Nx=t("td",{style:{"text-align":"center"}},"1008",-1),Px={style:{"text-align":"left"}},Kx={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Bx={style:{"text-align":"center"}},Vx={style:{"text-align":"left"}},Tx=t("code",null,"栈",-1),Ux=t("code",null,"树",-1),Rx=t("code",null,"二叉搜索树",-1),Wx=t("code",null,"3+",-1),Gx={style:{"text-align":"left"}},Yx=t("td",{style:{"text-align":"center"}},"1022",-1),Qx={style:{"text-align":"left"}},Sx={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},Dx=t("td",{style:{"text-align":"center"}},null,-1),Zx={style:{"text-align":"left"}},Ax=t("code",null,"树",-1),Fx=t("code",null,"深度优先搜索",-1),Jx=t("code",null,"二叉树",-1),Xx={style:{"text-align":"left"}},$x=t("td",{style:{"text-align":"center"}},"1026",-1),tb={style:{"text-align":"left"}},eb={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},lb=t("td",{style:{"text-align":"center"}},null,-1),ob={style:{"text-align":"left"}},nb=t("code",null,"树",-1),sb=t("code",null,"深度优先搜索",-1),db=t("code",null,"二叉树",-1),_b={style:{"text-align":"left"}},cb=t("td",{style:{"text-align":"center"}},"1028",-1),ib={style:{"text-align":"left"}},rb={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},ab=t("td",{style:{"text-align":"center"}},null,-1),hb={style:{"text-align":"left"}},ub=t("code",null,"树",-1),fb=t("code",null,"深度优先搜索",-1),gb=t("code",null,"字符串",-1),mb=t("code",null,"1+",-1),yb={style:{"text-align":"left"}},xb=t("td",{style:{"text-align":"center"}},"1038",-1),bb={style:{"text-align":"left"}},pb={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},kb=t("td",{style:{"text-align":"center"}},null,-1),Mb={style:{"text-align":"left"}},vb=t("code",null,"树",-1),Ib=t("code",null,"深度优先搜索",-1),Eb=t("code",null,"二叉搜索树",-1),wb=t("code",null,"1+",-1),zb={style:{"text-align":"left"}},Ob=t("td",{style:{"text-align":"center"}},"1080",-1),qb={style:{"text-align":"left"}},jb={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},Hb=t("td",{style:{"text-align":"center"}},null,-1),Lb={style:{"text-align":"left"}},Cb=t("code",null,"树",-1),Nb=t("code",null,"深度优先搜索",-1),Pb=t("code",null,"二叉树",-1),Kb={style:{"text-align":"left"}},Bb=t("td",{style:{"text-align":"center"}},"1104",-1),Vb={style:{"text-align":"left"}},Tb={href:"https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ub=t("td",{style:{"text-align":"center"}},null,-1),Rb={style:{"text-align":"left"}},Wb=t("code",null,"树",-1),Gb=t("code",null,"数学",-1),Yb=t("code",null,"二叉树",-1),Qb={style:{"text-align":"left"}},Sb=t("td",{style:{"text-align":"center"}},"1110",-1),Db={style:{"text-align":"left"}},Zb={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},Ab=t("td",{style:{"text-align":"center"}},null,-1),Fb={style:{"text-align":"left"}},Jb=t("code",null,"树",-1),Xb=t("code",null,"深度优先搜索",-1),$b=t("code",null,"数组",-1),t2=t("code",null,"2+",-1),e2={style:{"text-align":"left"}},l2=t("td",{style:{"text-align":"center"}},"1120",-1),o2={style:{"text-align":"left"}},n2={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},s2=t("td",{style:{"text-align":"center"}},null,-1),d2={style:{"text-align":"left"}},_2=t("code",null,"树",-1),c2=t("code",null,"深度优先搜索",-1),i2=t("code",null,"二叉树",-1),r2={style:{"text-align":"left"}},a2=t("td",{style:{"text-align":"center"}},"1123",-1),h2={style:{"text-align":"left"}},u2={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},f2=t("td",{style:{"text-align":"center"}},null,-1),g2={style:{"text-align":"left"}},m2=t("code",null,"树",-1),y2=t("code",null,"深度优先搜索",-1),x2=t("code",null,"广度优先搜索",-1),b2=t("code",null,"2+",-1),p2={style:{"text-align":"left"}},k2=t("td",{style:{"text-align":"center"}},"1145",-1),M2={style:{"text-align":"left"}},v2={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},I2=t("td",{style:{"text-align":"center"}},null,-1),E2={style:{"text-align":"left"}},w2=t("code",null,"树",-1),z2=t("code",null,"深度优先搜索",-1),O2=t("code",null,"二叉树",-1),q2={style:{"text-align":"left"}},j2=t("td",{style:{"text-align":"center"}},"1161",-1),H2={style:{"text-align":"left"}},L2={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},C2=t("td",{style:{"text-align":"center"}},null,-1),N2={style:{"text-align":"left"}},P2=t("code",null,"树",-1),K2=t("code",null,"深度优先搜索",-1),B2=t("code",null,"广度优先搜索",-1),V2=t("code",null,"1+",-1),T2={style:{"text-align":"left"}},U2=t("td",{style:{"text-align":"center"}},"1214",-1),R2={style:{"text-align":"left"}},W2={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},G2=t("td",{style:{"text-align":"center"}},null,-1),Y2={style:{"text-align":"left"}},Q2=t("code",null,"栈",-1),S2=t("code",null,"树",-1),D2=t("code",null,"深度优先搜索",-1),Z2=t("code",null,"4+",-1),A2={style:{"text-align":"left"}},F2=t("td",{style:{"text-align":"center"}},"1261",-1),J2={style:{"text-align":"left"}},X2={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},$2=t("td",{style:{"text-align":"center"}},null,-1),t0={style:{"text-align":"left"}},e0=t("code",null,"树",-1),l0=t("code",null,"深度优先搜索",-1),o0=t("code",null,"广度优先搜索",-1),n0=t("code",null,"3+",-1),s0={style:{"text-align":"left"}},d0=t("td",{style:{"text-align":"center"}},"1302",-1),_0={style:{"text-align":"left"}},c0={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},i0=t("td",{style:{"text-align":"center"}},null,-1),r0={style:{"text-align":"left"}},a0=t("code",null,"树",-1),h0=t("code",null,"深度优先搜索",-1),u0=t("code",null,"广度优先搜索",-1),f0=t("code",null,"1+",-1),g0={style:{"text-align":"left"}},m0=t("td",{style:{"text-align":"center"}},"1305",-1),y0={style:{"text-align":"left"}},x0={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},b0=t("td",{style:{"text-align":"center"}},null,-1),p0={style:{"text-align":"left"}},k0=t("code",null,"树",-1),M0=t("code",null,"深度优先搜索",-1),v0=t("code",null,"二叉搜索树",-1),I0=t("code",null,"2+",-1),E0={style:{"text-align":"left"}},w0=t("td",{style:{"text-align":"center"}},"1315",-1),z0={style:{"text-align":"left"}},O0={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},q0=t("td",{style:{"text-align":"center"}},null,-1),j0={style:{"text-align":"left"}},H0=t("code",null,"树",-1),L0=t("code",null,"深度优先搜索",-1),C0=t("code",null,"广度优先搜索",-1),N0=t("code",null,"1+",-1),P0={style:{"text-align":"left"}},K0=t("td",{style:{"text-align":"center"}},"1325",-1),B0={style:{"text-align":"left"}},V0={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},T0=t("td",{style:{"text-align":"center"}},null,-1),U0={style:{"text-align":"left"}},R0=t("code",null,"树",-1),W0=t("code",null,"深度优先搜索",-1),G0=t("code",null,"二叉树",-1),Y0={style:{"text-align":"left"}},Q0=t("td",{style:{"text-align":"center"}},"1339",-1),S0={style:{"text-align":"left"}},D0={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},Z0=t("td",{style:{"text-align":"center"}},null,-1),A0={style:{"text-align":"left"}},F0=t("code",null,"树",-1),J0=t("code",null,"深度优先搜索",-1),X0=t("code",null,"二叉树",-1),$0={style:{"text-align":"left"}},tp=t("td",{style:{"text-align":"center"}},"1361",-1),ep={style:{"text-align":"left"}},lp={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},op=t("td",{style:{"text-align":"center"}},null,-1),np={style:{"text-align":"left"}},sp=t("code",null,"树",-1),dp=t("code",null,"深度优先搜索",-1),_p=t("code",null,"广度优先搜索",-1),cp=t("code",null,"3+",-1),ip={style:{"text-align":"left"}},rp=t("td",{style:{"text-align":"center"}},"1367",-1),ap={style:{"text-align":"left"}},hp={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},up=t("td",{style:{"text-align":"center"}},null,-1),fp={style:{"text-align":"left"}},gp=t("code",null,"树",-1),mp=t("code",null,"深度优先搜索",-1),yp=t("code",null,"链表",-1),xp=t("code",null,"1+",-1),bp={style:{"text-align":"left"}},pp=t("td",{style:{"text-align":"center"}},"1372",-1),kp={style:{"text-align":"left"}},Mp={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},vp=t("td",{style:{"text-align":"center"}},null,-1),Ip={style:{"text-align":"left"}},Ep=t("code",null,"树",-1),wp=t("code",null,"深度优先搜索",-1),zp=t("code",null,"动态规划",-1),Op=t("code",null,"1+",-1),qp={style:{"text-align":"left"}},jp=t("td",{style:{"text-align":"center"}},"1373",-1),Hp={style:{"text-align":"left"}},Lp={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Cp=t("td",{style:{"text-align":"center"}},null,-1),Np={style:{"text-align":"left"}},Pp=t("code",null,"树",-1),Kp=t("code",null,"深度优先搜索",-1),Bp=t("code",null,"二叉搜索树",-1),Vp=t("code",null,"2+",-1),Tp={style:{"text-align":"left"}},Up=t("td",{style:{"text-align":"center"}},"1379",-1),Rp={style:{"text-align":"left"}},Wp={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},Gp=t("td",{style:{"text-align":"center"}},null,-1),Yp={style:{"text-align":"left"}},Qp=t("code",null,"树",-1),Sp=t("code",null,"深度优先搜索",-1),Dp=t("code",null,"广度优先搜索",-1),Zp=t("code",null,"1+",-1),Ap={style:{"text-align":"left"}},Fp=t("td",{style:{"text-align":"center"}},"1382",-1),Jp={style:{"text-align":"left"}},Xp={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},$p=t("td",{style:{"text-align":"center"}},null,-1),t6={style:{"text-align":"left"}},e6=t("code",null,"贪心",-1),l6=t("code",null,"树",-1),o6=t("code",null,"深度优先搜索",-1),n6=t("code",null,"3+",-1),s6={style:{"text-align":"left"}},d6=t("td",{style:{"text-align":"center"}},"1430",-1),_6={style:{"text-align":"left"}},c6={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},i6=t("td",{style:{"text-align":"center"}},null,-1),r6={style:{"text-align":"left"}},a6=t("code",null,"树",-1),h6=t("code",null,"深度优先搜索",-1),u6=t("code",null,"广度优先搜索",-1),f6=t("code",null,"1+",-1),g6={style:{"text-align":"left"}},m6=t("td",{style:{"text-align":"center"}},"1448",-1),y6={style:{"text-align":"left"}},x6={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},b6=t("td",{style:{"text-align":"center"}},null,-1),p6={style:{"text-align":"left"}},k6=t("code",null,"树",-1),M6=t("code",null,"深度优先搜索",-1),v6=t("code",null,"广度优先搜索",-1),I6=t("code",null,"1+",-1),E6={style:{"text-align":"left"}},w6=t("td",{style:{"text-align":"center"}},"1457",-1),z6={style:{"text-align":"left"}},O6={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},q6=t("td",{style:{"text-align":"center"}},null,-1),j6={style:{"text-align":"left"}},H6=t("code",null,"位运算",-1),L6=t("code",null,"树",-1),C6=t("code",null,"深度优先搜索",-1),N6=t("code",null,"2+",-1),P6={style:{"text-align":"left"}},K6=t("td",{style:{"text-align":"center"}},"1469",-1),B6={style:{"text-align":"left"}},V6={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},T6=t("td",{style:{"text-align":"center"}},null,-1),U6={style:{"text-align":"left"}},R6=t("code",null,"树",-1),W6=t("code",null,"深度优先搜索",-1),G6=t("code",null,"广度优先搜索",-1),Y6=t("code",null,"1+",-1),Q6={style:{"text-align":"left"}},S6=t("td",{style:{"text-align":"center"}},"1485",-1),D6={style:{"text-align":"left"}},Z6={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},A6=t("td",{style:{"text-align":"center"}},null,-1),F6={style:{"text-align":"left"}},J6=t("code",null,"树",-1),X6=t("code",null,"深度优先搜索",-1),$6=t("code",null,"广度优先搜索",-1),t8=t("code",null,"2+",-1),e8={style:{"text-align":"left"}},l8=t("td",{style:{"text-align":"center"}},"1530",-1),o8={style:{"text-align":"left"}},n8={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},s8=t("td",{style:{"text-align":"center"}},null,-1),d8={style:{"text-align":"left"}},_8=t("code",null,"树",-1),c8=t("code",null,"深度优先搜索",-1),i8=t("code",null,"二叉树",-1),r8={style:{"text-align":"left"}},a8=t("td",{style:{"text-align":"center"}},"1569",-1),h8={style:{"text-align":"left"}},u8={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},f8=t("td",{style:{"text-align":"center"}},null,-1),g8={style:{"text-align":"left"}},m8=t("code",null,"树",-1),y8=t("code",null,"并查集",-1),x8=t("code",null,"二叉搜索树",-1),b8=t("code",null,"7+",-1),p8={style:{"text-align":"left"}},k8=t("td",{style:{"text-align":"center"}},"1586",-1),M8={style:{"text-align":"left"}},v8={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},I8=t("td",{style:{"text-align":"center"}},null,-1),E8={style:{"text-align":"left"}},w8=t("code",null,"栈",-1),z8=t("code",null,"树",-1),O8=t("code",null,"设计",-1),q8=t("code",null,"3+",-1),j8={style:{"text-align":"left"}},H8=t("td",{style:{"text-align":"center"}},"1597",-1),L8={style:{"text-align":"left"}},C8={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},N8=t("td",{style:{"text-align":"center"}},null,-1),P8={style:{"text-align":"left"}},K8=t("code",null,"栈",-1),B8=t("code",null,"树",-1),V8=t("code",null,"字符串",-1),T8=t("code",null,"1+",-1),U8={style:{"text-align":"left"}},R8=t("td",{style:{"text-align":"center"}},"1602",-1),W8={style:{"text-align":"left"}},G8={href:"https://leetcode.com/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Y8=t("td",{style:{"text-align":"center"}},null,-1),Q8={style:{"text-align":"left"}},S8=t("code",null,"树",-1),D8=t("code",null,"广度优先搜索",-1),Z8=t("code",null,"二叉树",-1),A8={style:{"text-align":"left"}},F8=t("td",{style:{"text-align":"center"}},"1609",-1),J8={style:{"text-align":"left"}},X8={href:"https://leetcode.com/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},$8=t("td",{style:{"text-align":"center"}},null,-1),t3={style:{"text-align":"left"}},e3=t("code",null,"树",-1),l3=t("code",null,"广度优先搜索",-1),o3=t("code",null,"二叉树",-1),n3={style:{"text-align":"left"}},s3=t("td",{style:{"text-align":"center"}},"1612",-1),d3={style:{"text-align":"left"}},_3={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},c3=t("td",{style:{"text-align":"center"}},null,-1),i3={style:{"text-align":"left"}},r3=t("code",null,"树",-1),a3=t("code",null,"深度优先搜索",-1),h3=t("code",null,"哈希表",-1),u3=t("code",null,"2+",-1),f3={style:{"text-align":"left"}},g3=t("td",{style:{"text-align":"center"}},"1628",-1),m3={style:{"text-align":"left"}},y3={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},x3=t("td",{style:{"text-align":"center"}},null,-1),b3={style:{"text-align":"left"}},p3=t("code",null,"栈",-1),k3=t("code",null,"树",-1),M3=t("code",null,"设计",-1),v3=t("code",null,"3+",-1),I3={style:{"text-align":"left"}},E3=t("td",{style:{"text-align":"center"}},"1644",-1),w3={style:{"text-align":"left"}},z3={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},O3=t("td",{style:{"text-align":"center"}},null,-1),q3={style:{"text-align":"left"}},j3=t("code",null,"树",-1),H3=t("code",null,"深度优先搜索",-1),L3=t("code",null,"二叉树",-1),C3={style:{"text-align":"left"}},N3=t("td",{style:{"text-align":"center"}},"1650",-1),P3={style:{"text-align":"left"}},K3={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii",target:"_blank",rel:"noopener noreferrer"},B3=t("td",{style:{"text-align":"center"}},null,-1),V3={style:{"text-align":"left"}},T3=t("code",null,"树",-1),U3=t("code",null,"哈希表",-1),R3=t("code",null,"双指针",-1),W3=t("code",null,"1+",-1),G3={style:{"text-align":"left"}},Y3=t("td",{style:{"text-align":"center"}},"1660",-1),Q3={style:{"text-align":"left"}},S3={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},D3=t("td",{style:{"text-align":"center"}},null,-1),Z3={style:{"text-align":"left"}},A3=t("code",null,"树",-1),F3=t("code",null,"深度优先搜索",-1),J3=t("code",null,"广度优先搜索",-1),X3=t("code",null,"2+",-1),$3={style:{"text-align":"left"}},t5=t("td",{style:{"text-align":"center"}},"1666",-1),e5={style:{"text-align":"left"}},l5={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},o5=t("td",{style:{"text-align":"center"}},null,-1),n5={style:{"text-align":"left"}},s5=t("code",null,"树",-1),d5=t("code",null,"深度优先搜索",-1),_5=t("code",null,"二叉树",-1),c5={style:{"text-align":"left"}},i5=t("td",{style:{"text-align":"center"}},"1676",-1),r5={style:{"text-align":"left"}},a5={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},h5=t("td",{style:{"text-align":"center"}},null,-1),u5={style:{"text-align":"left"}},f5=t("code",null,"树",-1),g5=t("code",null,"深度优先搜索",-1),m5=t("code",null,"哈希表",-1),y5=t("code",null,"1+",-1),x5={style:{"text-align":"left"}},b5=t("td",{style:{"text-align":"center"}},"1740",-1),p5={style:{"text-align":"left"}},k5={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},M5=t("td",{style:{"text-align":"center"}},null,-1),v5={style:{"text-align":"left"}},I5=t("code",null,"树",-1),E5=t("code",null,"深度优先搜索",-1),w5=t("code",null,"广度优先搜索",-1),z5=t("code",null,"2+",-1),O5={style:{"text-align":"left"}},q5=t("td",{style:{"text-align":"center"}},"1902",-1),j5={style:{"text-align":"left"}},H5={href:"https://leetcode.com/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},L5=t("td",{style:{"text-align":"center"}},null,-1),C5={style:{"text-align":"left"}},N5=t("code",null,"树",-1),P5=t("code",null,"二叉搜索树",-1),K5=t("code",null,"数组",-1),B5=t("code",null,"2+",-1),V5={style:{"text-align":"left"}},T5=t("td",{style:{"text-align":"center"}},"1932",-1),U5={style:{"text-align":"left"}},R5={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},W5=t("td",{style:{"text-align":"center"}},null,-1),G5={style:{"text-align":"left"}},Y5=t("code",null,"树",-1),Q5=t("code",null,"深度优先搜索",-1),S5=t("code",null,"哈希表",-1),D5=t("code",null,"2+",-1),Z5={style:{"text-align":"left"}},A5=t("td",{style:{"text-align":"center"}},"1973",-1),F5={style:{"text-align":"left"}},J5={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},X5=t("td",{style:{"text-align":"center"}},null,-1),$5={style:{"text-align":"left"}},t4=t("code",null,"树",-1),e4=t("code",null,"深度优先搜索",-1),l4=t("code",null,"二叉树",-1),o4={style:{"text-align":"left"}},n4=t("td",{style:{"text-align":"center"}},"2005",-1),s4={style:{"text-align":"left"}},d4={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},_4=t("td",{style:{"text-align":"center"}},null,-1),c4={style:{"text-align":"left"}},i4=t("code",null,"树",-1),r4=t("code",null,"数学",-1),a4=t("code",null,"动态规划",-1),h4=t("code",null,"2+",-1),u4={style:{"text-align":"left"}},f4=t("td",{style:{"text-align":"center"}},"2049",-1),g4={style:{"text-align":"left"}},m4={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},y4=t("td",{style:{"text-align":"center"}},null,-1),x4={style:{"text-align":"left"}},b4=t("code",null,"树",-1),p4=t("code",null,"深度优先搜索",-1),k4=t("code",null,"数组",-1),M4=t("code",null,"1+",-1),v4={style:{"text-align":"left"}},I4=t("td",{style:{"text-align":"center"}},"2096",-1),E4={style:{"text-align":"left"}},w4={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},z4=t("td",{style:{"text-align":"center"}},null,-1),O4={style:{"text-align":"left"}},q4=t("code",null,"树",-1),j4=t("code",null,"深度优先搜索",-1),H4=t("code",null,"字符串",-1),L4=t("code",null,"1+",-1),C4={style:{"text-align":"left"}},N4=t("td",{style:{"text-align":"center"}},"2196",-1),P4={style:{"text-align":"left"}},K4={href:"https://leetcode.com/problems/create-binary-tree-from-descriptions",target:"_blank",rel:"noopener noreferrer"},B4={style:{"text-align":"center"}},V4={style:{"text-align":"left"}},T4=t("code",null,"树",-1),U4=t("code",null,"数组",-1),R4=t("code",null,"哈希表",-1),W4=t("code",null,"1+",-1),G4={style:{"text-align":"left"}},Y4=t("td",{style:{"text-align":"center"}},"2236",-1),Q4={style:{"text-align":"left"}},S4={href:"https://leetcode.com/problems/root-equals-sum-of-children",target:"_blank",rel:"noopener noreferrer"},D4=t("td",{style:{"text-align":"center"}},null,-1),Z4={style:{"text-align":"left"}},A4=t("code",null,"树",-1),F4=t("code",null,"二叉树",-1),J4={style:{"text-align":"left"}},X4=t("td",{style:{"text-align":"center"}},"2265",-1),$4={style:{"text-align":"left"}},t9={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},e9=t("td",{style:{"text-align":"center"}},null,-1),l9={style:{"text-align":"left"}},o9=t("code",null,"树",-1),n9=t("code",null,"深度优先搜索",-1),s9=t("code",null,"二叉树",-1),d9={style:{"text-align":"left"}},_9=t("td",{style:{"text-align":"center"}},"2313",-1),c9={style:{"text-align":"left"}},i9={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},r9=t("td",{style:{"text-align":"center"}},null,-1),a9={style:{"text-align":"left"}},h9=t("code",null,"树",-1),u9=t("code",null,"深度优先搜索",-1),f9=t("code",null,"动态规划",-1),g9=t("code",null,"1+",-1),m9={style:{"text-align":"left"}},y9=t("td",{style:{"text-align":"center"}},"2331",-1),x9={style:{"text-align":"left"}},b9={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},p9=t("td",{style:{"text-align":"center"}},null,-1),k9={style:{"text-align":"left"}},M9=t("code",null,"树",-1),v9=t("code",null,"深度优先搜索",-1),I9=t("code",null,"二叉树",-1),E9={style:{"text-align":"left"}},w9=t("td",{style:{"text-align":"center"}},"2385",-1),z9={style:{"text-align":"left"}},O9={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},q9=t("td",{style:{"text-align":"center"}},null,-1),j9={style:{"text-align":"left"}},H9=t("code",null,"树",-1),L9=t("code",null,"深度优先搜索",-1),C9=t("code",null,"广度优先搜索",-1),N9=t("code",null,"2+",-1),P9={style:{"text-align":"left"}},K9=t("td",{style:{"text-align":"center"}},"2415",-1),B9={style:{"text-align":"left"}},V9={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},T9=t("td",{style:{"text-align":"center"}},null,-1),U9={style:{"text-align":"left"}},R9=t("code",null,"树",-1),W9=t("code",null,"深度优先搜索",-1),G9=t("code",null,"广度优先搜索",-1),Y9=t("code",null,"1+",-1),Q9={style:{"text-align":"left"}},S9=t("td",{style:{"text-align":"center"}},"2445",-1),D9={style:{"text-align":"left"}},Z9={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},A9=t("td",{style:{"text-align":"center"}},null,-1),F9={style:{"text-align":"left"}},J9=t("code",null,"树",-1),X9=t("code",null,"深度优先搜索",-1),$9=t("code",null,"广度优先搜索",-1),t7=t("code",null,"1+",-1),e7={style:{"text-align":"left"}},l7=t("td",{style:{"text-align":"center"}},"2458",-1),o7={style:{"text-align":"left"}},n7={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},s7=t("td",{style:{"text-align":"center"}},null,-1),d7={style:{"text-align":"left"}},_7=t("code",null,"树",-1),c7=t("code",null,"深度优先搜索",-1),i7=t("code",null,"广度优先搜索",-1),r7=t("code",null,"2+",-1),a7={style:{"text-align":"left"}},h7=t("td",{style:{"text-align":"center"}},"2471",-1),u7={style:{"text-align":"left"}},f7={href:"https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},g7=t("td",{style:{"text-align":"center"}},null,-1),m7={style:{"text-align":"left"}},y7=t("code",null,"树",-1),x7=t("code",null,"广度优先搜索",-1),b7=t("code",null,"二叉树",-1),p7={style:{"text-align":"left"}},k7=t("td",{style:{"text-align":"center"}},"2476",-1),M7={style:{"text-align":"left"}},v7={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},I7=t("td",{style:{"text-align":"center"}},null,-1),E7={style:{"text-align":"left"}},w7=t("code",null,"树",-1),z7=t("code",null,"深度优先搜索",-1),O7=t("code",null,"二叉搜索树",-1),q7=t("code",null,"3+",-1),j7={style:{"text-align":"left"}},H7=t("td",{style:{"text-align":"center"}},"2509",-1),L7={style:{"text-align":"left"}},C7={href:"https://leetcode.com/problems/cycle-length-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},N7=t("td",{style:{"text-align":"center"}},null,-1),P7={style:{"text-align":"left"}},K7=t("code",null,"树",-1),B7=t("code",null,"数组",-1),V7=t("code",null,"二叉树",-1),T7={style:{"text-align":"left"}},U7=t("td",{style:{"text-align":"center"}},"2583",-1),R7={style:{"text-align":"left"}},W7={href:"https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},G7=t("td",{style:{"text-align":"center"}},null,-1),Y7={style:{"text-align":"left"}},Q7=t("code",null,"树",-1),S7=t("code",null,"广度优先搜索",-1),D7=t("code",null,"二叉树",-1),Z7=t("code",null,"1+",-1),A7={style:{"text-align":"left"}},F7=t("td",{style:{"text-align":"center"}},"2641",-1),J7={style:{"text-align":"left"}},X7={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},$7=t("td",{style:{"text-align":"center"}},null,-1),tk={style:{"text-align":"left"}},ek=t("code",null,"树",-1),lk=t("code",null,"深度优先搜索",-1),ok=t("code",null,"广度优先搜索",-1),nk=t("code",null,"2+",-1),sk={style:{"text-align":"left"}},dk=t("td",{style:{"text-align":"center"}},"2673",-1),_k={style:{"text-align":"left"}},ck={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ik=t("td",{style:{"text-align":"center"}},null,-1),rk={style:{"text-align":"left"}},ak=t("code",null,"贪心",-1),hk=t("code",null,"树",-1),uk=t("code",null,"数组",-1),fk=t("code",null,"2+",-1),gk={style:{"text-align":"left"}},mk=t("td",{style:{"text-align":"center"}},"2689",-1),yk={style:{"text-align":"left"}},xk={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},bk=t("td",{style:{"text-align":"center"}},null,-1),pk={style:{"text-align":"left"}},kk=t("code",null,"树",-1),Mk=t("code",null,"深度优先搜索",-1),vk=t("code",null,"二叉树",-1),Ik={style:{"text-align":"left"}},Ek=t("td",{style:{"text-align":"center"}},"2764",-1),wk={style:{"text-align":"left"}},zk={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ok=t("td",{style:{"text-align":"center"}},null,-1),qk={style:{"text-align":"left"}},jk=t("code",null,"栈",-1),Hk=t("code",null,"树",-1),Lk=t("code",null,"深度优先搜索",-1),Ck=t("code",null,"1+",-1),Nk={style:{"text-align":"left"}},Pk=t("td",{style:{"text-align":"center"}},"2773",-1),Kk={style:{"text-align":"left"}},Bk={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},Vk=t("td",{style:{"text-align":"center"}},null,-1),Tk={style:{"text-align":"left"}},Uk=t("code",null,"树",-1),Rk=t("code",null,"深度优先搜索",-1),Wk=t("code",null,"广度优先搜索",-1),Gk=t("code",null,"1+",-1),Yk={style:{"text-align":"left"}},Qk=t("td",{style:{"text-align":"center"}},"2792",-1),Sk={style:{"text-align":"left"}},Dk={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},Zk=t("td",{style:{"text-align":"center"}},null,-1),Ak={style:{"text-align":"left"}},Fk=t("code",null,"树",-1),Jk=t("code",null,"深度优先搜索",-1),Xk=t("code",null,"分治",-1),$k=t("code",null,"1+",-1),tM={style:{"text-align":"left"}},eM=t("td",{style:{"text-align":"center"}},"3157",-1),lM={style:{"text-align":"left"}},oM={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},nM=t("td",{style:{"text-align":"center"}},null,-1),sM={style:{"text-align":"left"}},dM=t("code",null,"树",-1),_M=t("code",null,"深度优先搜索",-1),cM=t("code",null,"广度优先搜索",-1),iM=t("code",null,"1+",-1),rM={style:{"text-align":"left"}},aM=t("td",{style:{"text-align":"center"}},"3319",-1),hM={style:{"text-align":"left"}},uM={href:"https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},fM={style:{"text-align":"center"}},gM={style:{"text-align":"left"}},mM=t("code",null,"树",-1),yM=t("code",null,"深度优先搜索",-1),xM=t("code",null,"二叉树",-1),bM=t("code",null,"1+",-1),pM={style:{"text-align":"left"}},kM=t("td",{style:{"text-align":"center"}},"LCP 10",-1),MM={style:{"text-align":"left"}},vM={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},IM=t("td",{style:{"text-align":"center"}},null,-1),EM={style:{"text-align":"left"}},wM=t("code",null,"树",-1),zM=t("code",null,"深度优先搜索",-1),OM=t("code",null,"动态规划",-1),qM=t("code",null,"1+",-1),jM={style:{"text-align":"left"}},HM=t("td",{style:{"text-align":"center"}},"LCP 26",-1),LM={style:{"text-align":"left"}},CM={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},NM=t("td",{style:{"text-align":"center"}},null,-1),PM={style:{"text-align":"left"}},KM=t("code",null,"树",-1),BM=t("code",null,"动态规划",-1),VM=t("code",null,"二叉树",-1),TM={style:{"text-align":"left"}},UM=t("td",{style:{"text-align":"center"}},"LCP 34",-1),RM={style:{"text-align":"left"}},WM={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},GM=t("td",{style:{"text-align":"center"}},null,-1),YM={style:{"text-align":"left"}},QM=t("code",null,"树",-1),SM=t("code",null,"动态规划",-1),DM=t("code",null,"二叉树",-1),ZM={style:{"text-align":"left"}},AM=t("td",{style:{"text-align":"center"}},"LCP 44",-1),FM={style:{"text-align":"left"}},JM={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},XM=t("td",{style:{"text-align":"center"}},null,-1),$M={style:{"text-align":"left"}},tv=t("code",null,"树",-1),ev=t("code",null,"深度优先搜索",-1),lv=t("code",null,"广度优先搜索",-1),ov=t("code",null,"2+",-1),nv={style:{"text-align":"left"}},sv=t("td",{style:{"text-align":"center"}},"LCP 52",-1),dv={style:{"text-align":"left"}},_v={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},cv=t("td",{style:{"text-align":"center"}},null,-1),iv={style:{"text-align":"left"}},rv=t("code",null,"树",-1),av=t("code",null,"线段树",-1),hv=t("code",null,"二叉搜索树",-1),uv=t("code",null,"4+",-1),fv={style:{"text-align":"left"}},gv=t("td",{style:{"text-align":"center"}},"LCP 60",-1),mv={style:{"text-align":"left"}},yv={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},xv=t("td",{style:{"text-align":"center"}},null,-1),bv={style:{"text-align":"left"}},pv=t("code",null,"树",-1),kv=t("code",null,"动态规划",-1),Mv=t("code",null,"二叉树",-1),vv={style:{"text-align":"left"}},Iv=t("td",{style:{"text-align":"center"}},"LCP 64",-1),Ev={style:{"text-align":"left"}},wv={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},zv=t("td",{style:{"text-align":"center"}},null,-1),Ov={style:{"text-align":"left"}},qv=t("code",null,"树",-1),jv=t("code",null,"深度优先搜索",-1),Hv=t("code",null,"动态规划",-1),Lv=t("code",null,"1+",-1),Cv={style:{"text-align":"left"}},Nv=t("td",{style:{"text-align":"center"}},"LCP 67",-1),Pv={style:{"text-align":"left"}},Kv={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},Bv=t("td",{style:{"text-align":"center"}},null,-1),Vv={style:{"text-align":"left"}},Tv=t("code",null,"树",-1),Uv=t("code",null,"深度优先搜索",-1),Rv=t("code",null,"广度优先搜索",-1),Wv=t("code",null,"1+",-1),Gv={style:{"text-align":"left"}},Yv=t("td",{style:{"text-align":"center"}},"剑指 Offer 07",-1),Qv={style:{"text-align":"left"}},Sv={href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},Dv={style:{"text-align":"center"}},Zv={style:{"text-align":"left"}},Av=t("code",null,"树",-1),Fv=t("code",null,"数组",-1),Jv=t("code",null,"哈希表",-1),Xv=t("code",null,"2+",-1),$v={style:{"text-align":"left"}},tI=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),eI={style:{"text-align":"left"}},lI={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},oI={style:{"text-align":"center"}},nI={style:{"text-align":"left"}},sI=t("code",null,"树",-1),dI=t("code",null,"深度优先搜索",-1),_I=t("code",null,"二叉树",-1),cI={style:{"text-align":"left"}},iI=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),rI={style:{"text-align":"left"}},aI={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},hI={style:{"text-align":"center"}},uI={style:{"text-align":"left"}},fI=t("code",null,"树",-1),gI=t("code",null,"深度优先搜索",-1),mI=t("code",null,"广度优先搜索",-1),yI=t("code",null,"1+",-1),xI={style:{"text-align":"left"}},bI=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),pI={style:{"text-align":"left"}},kI={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},MI={style:{"text-align":"center"}},vI={style:{"text-align":"left"}},II=t("code",null,"树",-1),EI=t("code",null,"深度优先搜索",-1),wI=t("code",null,"广度优先搜索",-1),zI=t("code",null,"1+",-1),OI={style:{"text-align":"left"}},qI=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - I",-1),jI={style:{"text-align":"left"}},HI={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},LI={style:{"text-align":"center"}},CI={style:{"text-align":"left"}},NI=t("code",null,"树",-1),PI=t("code",null,"广度优先搜索",-1),KI=t("code",null,"二叉树",-1),BI={style:{"text-align":"left"}},VI=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - II",-1),TI={style:{"text-align":"left"}},UI={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof",target:"_blank",rel:"noopener noreferrer"},RI={style:{"text-align":"center"}},WI={style:{"text-align":"left"}},GI=t("code",null,"树",-1),YI=t("code",null,"广度优先搜索",-1),QI=t("code",null,"二叉树",-1),SI={style:{"text-align":"left"}},DI=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - III",-1),ZI={style:{"text-align":"left"}},AI={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof",target:"_blank",rel:"noopener noreferrer"},FI={style:{"text-align":"center"}},JI={style:{"text-align":"left"}},XI=t("code",null,"树",-1),$I=t("code",null,"广度优先搜索",-1),tE=t("code",null,"二叉树",-1),eE={style:{"text-align":"left"}},lE=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),oE={style:{"text-align":"left"}},nE={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},sE={style:{"text-align":"center"}},dE={style:{"text-align":"left"}},_E=t("code",null,"栈",-1),cE=t("code",null,"树",-1),iE=t("code",null,"二叉搜索树",-1),rE=t("code",null,"4+",-1),aE={style:{"text-align":"left"}},hE=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),uE={style:{"text-align":"left"}},fE={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},gE={style:{"text-align":"center"}},mE={style:{"text-align":"left"}},yE=t("code",null,"树",-1),xE=t("code",null,"深度优先搜索",-1),bE=t("code",null,"回溯",-1),pE=t("code",null,"1+",-1),kE={style:{"text-align":"left"}},ME=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),vE={style:{"text-align":"left"}},IE={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},EE={style:{"text-align":"center"}},wE={style:{"text-align":"left"}},zE=t("code",null,"栈",-1),OE=t("code",null,"树",-1),qE=t("code",null,"深度优先搜索",-1),jE=t("code",null,"4+",-1),HE={style:{"text-align":"left"}},LE=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),CE={style:{"text-align":"left"}},NE={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},PE={style:{"text-align":"center"}},KE={style:{"text-align":"left"}},BE=t("code",null,"树",-1),VE=t("code",null,"深度优先搜索",-1),TE=t("code",null,"广度优先搜索",-1),UE=t("code",null,"3+",-1),RE={style:{"text-align":"left"}},WE=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),GE={style:{"text-align":"left"}},YE={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},QE={style:{"text-align":"center"}},SE={style:{"text-align":"left"}},DE=t("code",null,"树",-1),ZE=t("code",null,"深度优先搜索",-1),AE=t("code",null,"二叉搜索树",-1),FE=t("code",null,"1+",-1),JE={style:{"text-align":"left"}},XE=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - I",-1),$E={style:{"text-align":"left"}},tw={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},ew={style:{"text-align":"center"}},lw={style:{"text-align":"left"}},ow=t("code",null,"树",-1),nw=t("code",null,"深度优先搜索",-1),sw=t("code",null,"广度优先搜索",-1),dw=t("code",null,"1+",-1),_w={style:{"text-align":"left"}},cw=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - II",-1),iw={style:{"text-align":"left"}},rw={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},aw=t("td",{style:{"text-align":"center"}},null,-1),hw={style:{"text-align":"left"}},uw=t("code",null,"树",-1),fw=t("code",null,"深度优先搜索",-1),gw=t("code",null,"二叉树",-1),mw={style:{"text-align":"left"}},yw=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - I",-1),xw={style:{"text-align":"left"}},bw={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},pw=t("td",{style:{"text-align":"center"}},null,-1),kw={style:{"text-align":"left"}},Mw=t("code",null,"树",-1),vw=t("code",null,"深度优先搜索",-1),Iw=t("code",null,"二叉搜索树",-1),Ew=t("code",null,"1+",-1),ww={style:{"text-align":"left"}},zw=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - II",-1),Ow={style:{"text-align":"left"}},qw={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},jw=t("td",{style:{"text-align":"center"}},null,-1),Hw={style:{"text-align":"left"}},Lw=t("code",null,"树",-1),Cw=t("code",null,"深度优先搜索",-1),Nw=t("code",null,"二叉树",-1),Pw={style:{"text-align":"left"}},Kw=t("td",{style:{"text-align":"center"}},"剑指 Offer II 43",-1),Bw={style:{"text-align":"left"}},Vw={href:"https://leetcode.cn/problems/NaqhDT",target:"_blank",rel:"noopener noreferrer"},Tw=t("td",{style:{"text-align":"center"}},null,-1),Uw={style:{"text-align":"left"}},Rw=t("code",null,"树",-1),Ww=t("code",null,"广度优先搜索",-1),Gw=t("code",null,"设计",-1),Yw=t("code",null,"1+",-1),Qw={style:{"text-align":"left"}},Sw=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),Dw={style:{"text-align":"left"}},Zw={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},Aw=t("td",{style:{"text-align":"center"}},null,-1),Fw={style:{"text-align":"left"}},Jw=t("code",null,"树",-1),Xw=t("code",null,"深度优先搜索",-1),$w=t("code",null,"广度优先搜索",-1),tz=t("code",null,"1+",-1),ez={style:{"text-align":"left"}},lz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),oz={style:{"text-align":"left"}},nz={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},sz=t("td",{style:{"text-align":"center"}},null,-1),dz={style:{"text-align":"left"}},_z=t("code",null,"树",-1),cz=t("code",null,"深度优先搜索",-1),iz=t("code",null,"广度优先搜索",-1),rz=t("code",null,"1+",-1),az={style:{"text-align":"left"}},hz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),uz={style:{"text-align":"left"}},fz={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},gz=t("td",{style:{"text-align":"center"}},null,-1),mz={style:{"text-align":"left"}},yz=t("code",null,"树",-1),xz=t("code",null,"深度优先搜索",-1),bz=t("code",null,"广度优先搜索",-1),pz=t("code",null,"1+",-1),kz={style:{"text-align":"left"}},Mz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),vz={style:{"text-align":"left"}},Iz={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},Ez=t("td",{style:{"text-align":"center"}},null,-1),wz={style:{"text-align":"left"}},zz=t("code",null,"树",-1),Oz=t("code",null,"深度优先搜索",-1),qz=t("code",null,"二叉树",-1),jz={style:{"text-align":"left"}},Hz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),Lz={style:{"text-align":"left"}},Cz={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},Nz=t("td",{style:{"text-align":"center"}},null,-1),Pz={style:{"text-align":"left"}},Kz=t("code",null,"树",-1),Bz=t("code",null,"深度优先搜索",-1),Vz=t("code",null,"广度优先搜索",-1),Tz=t("code",null,"3+",-1),Uz={style:{"text-align":"left"}},Rz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),Wz={style:{"text-align":"left"}},Gz={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},Yz=t("td",{style:{"text-align":"center"}},null,-1),Qz={style:{"text-align":"left"}},Sz=t("code",null,"树",-1),Dz=t("code",null,"深度优先搜索",-1),Zz=t("code",null,"二叉树",-1),Az={style:{"text-align":"left"}},Fz=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),Jz={style:{"text-align":"left"}},Xz={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},$z=t("td",{style:{"text-align":"center"}},null,-1),tO={style:{"text-align":"left"}},eO=t("code",null,"树",-1),lO=t("code",null,"深度优先搜索",-1),oO=t("code",null,"二叉树",-1),nO={style:{"text-align":"left"}},sO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),dO={style:{"text-align":"left"}},_O={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},cO=t("td",{style:{"text-align":"center"}},null,-1),iO={style:{"text-align":"left"}},rO=t("code",null,"树",-1),aO=t("code",null,"深度优先搜索",-1),hO=t("code",null,"动态规划",-1),uO=t("code",null,"1+",-1),fO={style:{"text-align":"left"}},gO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),mO={style:{"text-align":"left"}},yO={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},xO=t("td",{style:{"text-align":"center"}},null,-1),bO={style:{"text-align":"left"}},pO=t("code",null,"栈",-1),kO=t("code",null,"树",-1),MO=t("code",null,"深度优先搜索",-1),vO=t("code",null,"2+",-1),IO={style:{"text-align":"left"}},EO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),wO={style:{"text-align":"left"}},zO={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},OO=t("td",{style:{"text-align":"center"}},null,-1),qO={style:{"text-align":"left"}},jO=t("code",null,"树",-1),HO=t("code",null,"深度优先搜索",-1),LO=t("code",null,"二叉搜索树",-1),CO=t("code",null,"1+",-1),NO={style:{"text-align":"left"}},PO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),KO={style:{"text-align":"left"}},BO={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},VO=t("td",{style:{"text-align":"center"}},null,-1),TO={style:{"text-align":"left"}},UO=t("code",null,"树",-1),RO=t("code",null,"深度优先搜索",-1),WO=t("code",null,"二叉搜索树",-1),GO=t("code",null,"1+",-1),YO={style:{"text-align":"left"}},QO=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),SO={style:{"text-align":"left"}},DO={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},ZO=t("td",{style:{"text-align":"center"}},null,-1),AO={style:{"text-align":"left"}},FO=t("code",null,"栈",-1),JO=t("code",null,"树",-1),XO=t("code",null,"设计",-1),$O=t("code",null,"3+",-1),tq={style:{"text-align":"left"}},eq=t("td",{style:{"text-align":"center"}},"剑指 Offer II 59",-1),lq={style:{"text-align":"left"}},oq={href:"https://leetcode.cn/problems/jBjn9C",target:"_blank",rel:"noopener noreferrer"},nq=t("td",{style:{"text-align":"center"}},null,-1),sq={style:{"text-align":"left"}},dq=t("code",null,"树",-1),_q=t("code",null,"设计",-1),cq=t("code",null,"二叉搜索树",-1),iq=t("code",null,"3+",-1),rq={style:{"text-align":"left"}},aq=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),hq={style:{"text-align":"left"}},uq={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},fq=t("td",{style:{"text-align":"center"}},null,-1),gq={style:{"text-align":"left"}},mq=t("code",null,"树",-1),yq=t("code",null,"二叉搜索树",-1),xq=t("code",null,"数组",-1),bq=t("code",null,"2+",-1),pq={style:{"text-align":"left"}},kq=t("td",{style:{"text-align":"center"}},"面试题 04.03",-1),Mq={style:{"text-align":"left"}},vq={href:"https://leetcode.cn/problems/list-of-depth-lcci",target:"_blank",rel:"noopener noreferrer"},Iq=t("td",{style:{"text-align":"center"}},null,-1),Eq={style:{"text-align":"left"}},wq=t("code",null,"树",-1),zq=t("code",null,"广度优先搜索",-1),Oq=t("code",null,"链表",-1),qq=t("code",null,"1+",-1),jq={style:{"text-align":"left"}},Hq=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),Lq={style:{"text-align":"left"}},Cq={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},Nq=t("td",{style:{"text-align":"center"}},null,-1),Pq={style:{"text-align":"left"}},Kq=t("code",null,"树",-1),Bq=t("code",null,"深度优先搜索",-1),Vq=t("code",null,"二叉树",-1),Tq={style:{"text-align":"left"}},Uq=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),Rq={style:{"text-align":"left"}},Wq={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},Gq=t("td",{style:{"text-align":"center"}},null,-1),Yq={style:{"text-align":"left"}},Qq=t("code",null,"树",-1),Sq=t("code",null,"深度优先搜索",-1),Dq=t("code",null,"二叉搜索树",-1),Zq=t("code",null,"1+",-1),Aq={style:{"text-align":"left"}},Fq=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),Jq={style:{"text-align":"left"}},Xq={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},$q=t("td",{style:{"text-align":"center"}},null,-1),tj={style:{"text-align":"left"}},ej=t("code",null,"树",-1),lj=t("code",null,"深度优先搜索",-1),oj=t("code",null,"二叉搜索树",-1),nj=t("code",null,"1+",-1),sj={style:{"text-align":"left"}},dj=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),_j={style:{"text-align":"left"}},cj={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},ij=t("td",{style:{"text-align":"center"}},null,-1),rj={style:{"text-align":"left"}},aj=t("code",null,"树",-1),hj=t("code",null,"深度优先搜索",-1),uj=t("code",null,"二叉树",-1),fj={style:{"text-align":"left"}},gj=t("td",{style:{"text-align":"center"}},"面试题 04.09",-1),mj={style:{"text-align":"left"}},yj={href:"https://leetcode.cn/problems/bst-sequences-lcci",target:"_blank",rel:"noopener noreferrer"},xj=t("td",{style:{"text-align":"center"}},null,-1),bj={style:{"text-align":"left"}},pj=t("code",null,"树",-1),kj=t("code",null,"二叉搜索树",-1),Mj=t("code",null,"回溯",-1),vj=t("code",null,"1+",-1),Ij={style:{"text-align":"left"}},Ej=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),wj={style:{"text-align":"left"}},zj={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},Oj=t("td",{style:{"text-align":"center"}},null,-1),qj={style:{"text-align":"left"}},jj=t("code",null,"树",-1),Hj=t("code",null,"深度优先搜索",-1),Lj=t("code",null,"二叉树",-1),Cj=t("code",null,"2+",-1),Nj={style:{"text-align":"left"}},Pj=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),Kj={style:{"text-align":"left"}},Bj={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},Vj=t("td",{style:{"text-align":"center"}},null,-1),Tj={style:{"text-align":"left"}},Uj=t("code",null,"树",-1),Rj=t("code",null,"深度优先搜索",-1),Wj=t("code",null,"二叉树",-1),Gj={style:{"text-align":"left"}},Yj=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),Qj={style:{"text-align":"left"}},Sj={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},Dj=t("td",{style:{"text-align":"center"}},null,-1),Zj={style:{"text-align":"left"}},Aj=t("code",null,"栈",-1),Fj=t("code",null,"树",-1),Jj=t("code",null,"深度优先搜索",-1),Xj=t("code",null,"3+",-1),$j={style:{"text-align":"left"}};function tH(eH,lH){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),r("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[q]),_:1}),l(),j,l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[Y]),_:1})]),Q,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:o(()=>[Ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Nt]),_:1})])]),Pt,a(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Bt,t("td",Vt,[t("a",Tt,[l("二叉树的中序遍历"),e(s)])]),t("td",Ut,[e(n,{to:"/leetcode/problem/0094.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Rt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Yt]),_:1}),l(),Qt]),t("td",St,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Dt,t("td",Zt,[t("a",At,[l("不同的二叉搜索树 II"),e(s)])]),t("td",Ft,[e(n,{to:"/leetcode/problem/0095.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Jt,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[$t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[te]),_:1}),l(),ee]),t("td",le,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oe,t("td",ne,[t("a",se,[l("不同的二叉搜索树"),e(s)])]),t("td",de,[e(n,{to:"/leetcode/problem/0096.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_e,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[ie]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[re]),_:1}),l(),ae]),t("td",he,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[l("验证二叉搜索树"),e(s)])]),t("td",me,[e(n,{to:"/leetcode/problem/0098.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ye,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[xe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[be]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[pe]),_:1}),l(),ke]),t("td",Me,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ve,t("td",Ie,[t("a",Ee,[l("恢复二叉搜索树"),e(s)])]),t("td",we,[e(n,{to:"/leetcode/problem/0099.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ze,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Oe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qe]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[je]),_:1}),l(),He]),t("td",Le,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ce,t("td",Ne,[t("a",Pe,[l("相同的树"),e(s)])]),t("td",Ke,[e(n,{to:"/leetcode/problem/0100.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Be,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ve]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Te]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ue]),_:1}),l(),Re]),t("td",We,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ge,t("td",Ye,[t("a",Qe,[l("对称二叉树"),e(s)])]),t("td",Se,[e(n,{to:"/leetcode/problem/0101.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",De,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ze]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ae]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Fe]),_:1}),l(),Je]),t("td",Xe,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$e,t("td",tl,[t("a",el,[l("二叉树的层序遍历"),e(s)])]),t("td",ll,[e(n,{to:"/leetcode/problem/0102.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ol,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[nl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[sl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[dl]),_:1})]),t("td",_l,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cl,t("td",il,[t("a",rl,[l("二叉树的锯齿形层序遍历"),e(s)])]),t("td",al,[e(n,{to:"/leetcode/problem/0103.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ul]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[fl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[gl]),_:1})]),t("td",ml,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yl,t("td",xl,[t("a",bl,[l("二叉树的最大深度"),e(s)])]),t("td",pl,[e(n,{to:"/leetcode/problem/0104.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",kl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ml]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[vl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Il]),_:1}),l(),El]),t("td",wl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zl,t("td",Ol,[t("a",ql,[l("从前序与中序遍历序列构造二叉树"),e(s)])]),t("td",jl,[e(n,{to:"/leetcode/problem/0105.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Hl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ll]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Cl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Nl]),_:1}),l(),Pl]),t("td",Kl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bl,t("td",Vl,[t("a",Tl,[l("从中序与后序遍历序列构造二叉树"),e(s)])]),t("td",Ul,[e(n,{to:"/leetcode/problem/0106.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Rl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Wl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Gl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Yl]),_:1}),l(),Ql]),t("td",Sl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Dl,t("td",Zl,[t("a",Al,[l("二叉树的层序遍历 II"),e(s)])]),t("td",Fl,[e(n,{to:"/leetcode/problem/0107.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Jl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Xl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$l]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[to]),_:1})]),t("td",eo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lo,t("td",oo,[t("a",no,[l("将有序数组转换为二叉搜索树"),e(s)])]),t("td",so,[e(n,{to:"/leetcode/problem/0108.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_o,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[co]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[io]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ro]),_:1}),l(),ao]),t("td",ho,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[uo,t("td",fo,[t("a",go,[l("有序链表转换二叉搜索树"),e(s)])]),t("td",mo,[e(n,{to:"/leetcode/problem/0109.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yo,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[xo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[bo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[po]),_:1}),l(),ko]),t("td",Mo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vo,t("td",Io,[t("a",Eo,[l("平衡二叉树"),e(s)])]),t("td",wo,[e(n,{to:"/leetcode/problem/0110.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",zo,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Oo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[jo]),_:1})]),t("td",Ho,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Lo,t("td",Co,[t("a",No,[l("二叉树的最小深度"),e(s)])]),t("td",Po,[e(n,{to:"/leetcode/problem/0111.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ko,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Bo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Vo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[To]),_:1}),l(),Uo]),t("td",Ro,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Wo,t("td",Go,[t("a",Yo,[l("路径总和"),e(s)])]),t("td",Qo,[e(n,{to:"/leetcode/problem/0112.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",So,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Do]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Zo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ao]),_:1}),l(),Fo]),t("td",Jo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xo,t("td",$o,[t("a",tn,[l("路径总和 II"),e(s)])]),t("td",en,[e(n,{to:"/leetcode/problem/0113.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ln,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[on]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[sn]),_:1}),l(),dn]),t("td",_n,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cn,t("td",rn,[t("a",an,[l("二叉树展开为链表"),e(s)])]),t("td",hn,[e(n,{to:"/leetcode/problem/0114.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",un,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[fn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[mn]),_:1}),l(),yn]),t("td",xn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bn,t("td",pn,[t("a",kn,[l("填充每个节点的下一个右侧节点指针"),e(s)])]),t("td",Mn,[e(n,{to:"/leetcode/problem/0116.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[In]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[En]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[wn]),_:1}),l(),zn]),t("td",On,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qn,t("td",jn,[t("a",Hn,[l("填充每个节点的下一个右侧节点指针 II"),e(s)])]),t("td",Ln,[e(n,{to:"/leetcode/problem/0117.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Cn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Nn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Pn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Kn]),_:1}),l(),Bn]),t("td",Vn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Tn,t("td",Un,[t("a",Rn,[l("二叉树中的最大路径和"),e(s)])]),t("td",Wn,[e(n,{to:"/leetcode/problem/0124.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Yn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Sn]),_:1}),l(),Dn]),t("td",Zn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[An,t("td",Fn,[t("a",Jn,[l("求根节点到叶节点数字之和"),e(s)])]),t("td",Xn,[e(n,{to:"/leetcode/problem/0129.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",$n,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ts]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[es]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[ls]),_:1})]),t("td",os,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ns,t("td",ss,[t("a",ds,[l("二叉树的前序遍历"),e(s)])]),t("td",_s,[e(n,{to:"/leetcode/problem/0144.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",cs,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[is]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[rs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[as]),_:1}),l(),hs]),t("td",us,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fs,t("td",gs,[t("a",ms,[l("二叉树的后序遍历"),e(s)])]),t("td",ys,[e(n,{to:"/leetcode/problem/0145.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xs,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[bs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ps]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ks]),_:1}),l(),Ms]),t("td",vs,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Is,t("td",Es,[t("a",ws,[l("上下翻转二叉树"),e(s)])]),t("td",zs,[e(n,{to:"/leetcode/problem/0156.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Os,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[qs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[js]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Hs]),_:1})]),t("td",Ls,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cs,t("td",Ns,[t("a",Ps,[l("二叉搜索树迭代器"),e(s)])]),t("td",Ks,[e(n,{to:"/leetcode/problem/0173.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Bs,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Vs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ts]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Us]),_:1}),l(),Rs]),t("td",Ws,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gs,t("td",Ys,[t("a",Qs,[l("二叉树的右视图"),e(s)])]),t("td",Ss,[e(n,{to:"/leetcode/problem/0199.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ds,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Zs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[As]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Fs]),_:1}),l(),Js]),t("td",Xs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$s,t("td",td,[t("a",ed,[l("完全二叉树的节点个数"),e(s)])]),t("td",ld,[e(n,{to:"/leetcode/problem/0222.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",od,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[nd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[sd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[dd]),_:1}),l(),_d]),t("td",cd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[id,t("td",rd,[t("a",ad,[l("翻转二叉树"),e(s)])]),t("td",hd,[e(n,{to:"/leetcode/problem/0226.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ud,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[fd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[md]),_:1}),l(),yd]),t("td",xd,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[bd,t("td",pd,[t("a",kd,[l("二叉搜索树中第 K 小的元素"),e(s)])]),t("td",Md,[e(n,{to:"/leetcode/problem/0230.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vd,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Id]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ed]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[wd]),_:1}),l(),zd]),t("td",Od,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[qd,t("td",jd,[t("a",Hd,[l("二叉搜索树的最近公共祖先"),e(s)])]),t("td",Ld,[e(n,{to:"/leetcode/problem/0235.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Cd,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Nd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Pd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Kd]),_:1}),l(),Bd]),t("td",Vd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Td,t("td",Ud,[t("a",Rd,[l("二叉树的最近公共祖先"),e(s)])]),t("td",Wd,[e(n,{to:"/leetcode/problem/0236.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gd,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Yd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Qd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Sd]),_:1})]),t("td",Dd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zd,t("td",Ad,[t("a",Fd,[l("统计同值子树"),e(s)])]),Jd,t("td",Xd,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$d]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[t_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[e_]),_:1})]),t("td",l_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[o_,t("td",n_,[t("a",s_,[l("验证二叉搜索树的前序遍历序列"),e(s)])]),d_,t("td",__,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[c_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[i_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[r_]),_:1}),l(),a_]),t("td",h_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u_,t("td",f_,[t("a",g_,[l("二叉树的所有路径"),e(s)])]),t("td",m_,[e(n,{to:"/leetcode/problem/0257.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",y_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[x_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[b_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[p_]),_:1}),l(),k_]),t("td",M_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[v_,t("td",I_,[t("a",E_,[l("最接近的二叉搜索树值"),e(s)])]),w_,t("td",z_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[O_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[q_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[j_]),_:1}),l(),H_]),t("td",L_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[C_,t("td",N_,[t("a",P_,[l("最接近的二叉搜索树值 II"),e(s)])]),K_,t("td",B_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[V_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[T_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[U_]),_:1}),l(),R_]),t("td",W_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[G_,t("td",Y_,[t("a",Q_,[l("二叉搜索树中的中序后继"),e(s)])]),S_,t("td",D_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Z_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[A_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[F_]),_:1}),l(),J_]),t("td",X_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$_,t("td",tc,[t("a",ec,[l("二叉树的序列化与反序列化"),e(s)])]),t("td",lc,[e(n,{to:"/leetcode/problem/0297.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",oc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[nc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[sc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[dc]),_:1}),l(),_c]),t("td",cc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ic,t("td",rc,[t("a",ac,[l("二叉树最长连续序列"),e(s)])]),hc,t("td",uc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[fc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[mc]),_:1})]),t("td",yc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xc,t("td",bc,[t("a",pc,[l("二叉树的垂直遍历"),e(s)])]),kc,t("td",Mc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ic]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ec]),_:1}),l(),wc]),t("td",zc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Oc,t("td",qc,[t("a",jc,[l("验证二叉树的前序序列化"),e(s)])]),Hc,t("td",Lc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Cc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Nc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Pc]),_:1}),l(),Kc]),t("td",Bc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vc,t("td",Tc,[t("a",Uc,[l("最大二叉搜索子树"),e(s)])]),Rc,t("td",Wc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Gc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Yc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Qc]),_:1}),l(),Sc]),t("td",Dc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zc,t("td",Ac,[t("a",Fc,[l("打家劫舍 III"),e(s)])]),Jc,t("td",Xc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$c]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ti]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[ei]),_:1}),l(),li]),t("td",oi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ni,t("td",si,[t("a",di,[l("寻找二叉树的叶子节点"),e(s)])]),t("td",_i,[e(n,{to:"/leetcode/problem/0366.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ci,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ii]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ri]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[ai]),_:1})]),t("td",hi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ui,t("td",fi,[t("a",gi,[l("左叶子之和"),e(s)])]),mi,t("td",yi,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[xi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[bi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[pi]),_:1}),l(),ki]),t("td",Mi,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vi,t("td",Ii,[t("a",Ei,[l("将二叉搜索树转化为排序的双向链表"),e(s)])]),t("td",wi,[e(n,{to:"/leetcode/problem/0426.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",zi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Oi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[qi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ji]),_:1}),l(),Hi]),t("td",Li,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ci,t("td",Ni,[t("a",Pi,[l("将 N 叉树编码为二叉树"),e(s)])]),Ki,t("td",Bi,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Vi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ti]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ui]),_:1}),l(),Ri]),t("td",Wi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gi,t("td",Yi,[t("a",Qi,[l("路径总和 III"),e(s)])]),t("td",Si,[e(n,{to:"/leetcode/problem/0437.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Di,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Zi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ai]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Fi]),_:1})]),t("td",Ji,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xi,t("td",$i,[t("a",tr,[l("序列化和反序列化二叉搜索树"),e(s)])]),er,t("td",lr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[or]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[sr]),_:1}),l(),dr]),t("td",_r,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cr,t("td",ir,[t("a",rr,[l("删除二叉搜索树中的节点"),e(s)])]),t("td",ar,[e(n,{to:"/leetcode/problem/0450.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",hr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ur]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[fr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[gr]),_:1})]),t("td",mr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[yr,t("td",xr,[t("a",br,[l("二叉搜索树中的众数"),e(s)])]),pr,t("td",kr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Mr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[vr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Ir]),_:1}),l(),Er]),t("td",wr,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zr,t("td",Or,[t("a",qr,[l("出现次数最多的子树元素和"),e(s)])]),jr,t("td",Hr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Lr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Cr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Nr]),_:1}),l(),Pr]),t("td",Kr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Br,t("td",Vr,[t("a",Tr,[l("二叉搜索树中的中序后继 II"),e(s)])]),Ur,t("td",Rr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Wr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Gr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Yr]),_:1})]),t("td",Qr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sr,t("td",Dr,[t("a",Zr,[l("找树左下角的值"),e(s)])]),Ar,t("td",Fr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Jr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Xr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$r]),_:1}),l(),ta]),t("td",ea,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[la,t("td",oa,[t("a",na,[l("在每个树行中找最大值"),e(s)])]),sa,t("td",da,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_a]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ca]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ia]),_:1}),l(),ra]),t("td",aa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ha,t("td",ua,[t("a",fa,[l("二叉搜索树的最小绝对差"),e(s)])]),t("td",ga,[e(n,{to:"/leetcode/problem/0530.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ma,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ya]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[xa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ba]),_:1}),l(),pa]),t("td",ka,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ma,t("td",va,[t("a",Ia,[l("从字符串生成二叉树"),e(s)])]),Ea,t("td",wa,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[za]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Oa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qa]),_:1}),l(),ja]),t("td",Ha,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[La,t("td",Ca,[t("a",Na,[l("把二叉搜索树转换为累加树"),e(s)])]),Pa,t("td",Ka,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ba]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Va]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Ta]),_:1}),l(),Ua]),t("td",Ra,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wa,t("td",Ga,[t("a",Ya,[l("二叉树的直径"),e(s)])]),t("td",Qa,[e(n,{to:"/leetcode/problem/0543.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Sa,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Da]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Za]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Aa]),_:1})]),t("td",Fa,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ja,t("td",Xa,[t("a",$a,[l("二叉树的边界"),e(s)])]),t1,t("td",e1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[l1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[o1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[n1]),_:1})]),t("td",s1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d1,t("td",_1,[t("a",c1,[l("二叉树最长连续序列 II"),e(s)])]),i1,t("td",r1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[a1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[h1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[u1]),_:1})]),t("td",f1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g1,t("td",m1,[t("a",y1,[l("二叉树的坡度"),e(s)])]),x1,t("td",b1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[p1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[k1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[M1]),_:1})]),t("td",v1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[I1,t("td",E1,[t("a",w1,[l("另一棵树的子树"),e(s)])]),t("td",z1,[e(n,{to:"/leetcode/problem/0572.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",O1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[q1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[j1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[H1]),_:1}),l(),L1]),t("td",C1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[N1,t("td",P1,[t("a",K1,[l("根据二叉树创建字符串"),e(s)])]),B1,t("td",V1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[T1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[U1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[R1]),_:1}),l(),W1]),t("td",G1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y1,t("td",Q1,[t("a",S1,[l("合并二叉树"),e(s)])]),t("td",D1,[e(n,{to:"/leetcode/problem/0617.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Z1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[A1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[F1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[J1]),_:1}),l(),X1]),t("td",$1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[th,t("td",eh,[t("a",lh,[l("在二叉树中增加一行"),e(s)])]),oh,t("td",nh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[sh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_h]),_:1}),l(),ch]),t("td",ih,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rh,t("td",ah,[t("a",hh,[l("二叉树的层平均值"),e(s)])]),t("td",uh,[e(n,{to:"/leetcode/problem/0637.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[mh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[yh]),_:1}),l(),xh]),t("td",bh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ph,t("td",kh,[t("a",Mh,[l("寻找重复的子树"),e(s)])]),vh,t("td",Ih,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Eh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[zh]),_:1}),l(),Oh]),t("td",qh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jh,t("td",Hh,[t("a",Lh,[l("两数之和 IV - 输入二叉搜索树"),e(s)])]),Ch,t("td",Nh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ph]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Kh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Bh]),_:1}),l(),Vh]),t("td",Th,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Uh,t("td",Rh,[t("a",Wh,[l("最大二叉树"),e(s)])]),t("td",Gh,[e(n,{to:"/leetcode/problem/0654.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Qh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Sh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Dh]),_:1}),l(),Zh]),t("td",Ah,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fh,t("td",Jh,[t("a",Xh,[l("输出二叉树"),e(s)])]),$h,t("td",tu,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[eu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[lu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ou]),_:1}),l(),nu]),t("td",su,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[du,t("td",_u,[t("a",cu,[l("二叉树最大宽度"),e(s)])]),t("td",iu,[e(n,{to:"/leetcode/problem/0662.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ru,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[au]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[hu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[uu]),_:1}),l(),fu]),t("td",gu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mu,t("td",yu,[t("a",xu,[l("均匀树划分"),e(s)])]),bu,t("td",pu,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ku]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Mu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[vu]),_:1})]),t("td",Iu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Eu,t("td",wu,[t("a",zu,[l("路径总和 IV"),e(s)])]),Ou,t("td",qu,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ju]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Hu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Lu]),_:1}),l(),Cu]),t("td",Nu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pu,t("td",Ku,[t("a",Bu,[l("修剪二叉搜索树"),e(s)])]),Vu,t("td",Tu,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Uu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ru]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Wu]),_:1}),l(),Gu]),t("td",Yu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qu,t("td",Su,[t("a",Du,[l("二叉树中第二小的节点"),e(s)])]),Zu,t("td",Au,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Fu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ju]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Xu]),_:1})]),t("td",$u,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[tf,t("td",ef,[t("a",lf,[l("最长同值路径"),e(s)])]),of,t("td",nf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[sf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[df]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[_f]),_:1})]),t("td",cf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rf,t("td",af,[t("a",hf,[l("二叉搜索树中的搜索"),e(s)])]),t("td",uf,[e(n,{to:"/leetcode/problem/0700.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ff,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[mf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[yf]),_:1})]),t("td",xf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[bf,t("td",pf,[t("a",kf,[l("二叉搜索树中的插入操作"),e(s)])]),t("td",Mf,[e(n,{to:"/leetcode/problem/0701.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[If]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Ef]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[wf]),_:1})]),t("td",zf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Of,t("td",qf,[t("a",jf,[l("数据流中的第 K 大元素"),e(s)])]),t("td",Hf,[e(n,{to:"/leetcode/problem/0703.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Lf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Cf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Nf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Pf]),_:1}),l(),Kf]),t("td",Bf,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Vf,t("td",Tf,[t("a",Uf,[l("二叉树最近的叶节点"),e(s)])]),Rf,t("td",Wf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Gf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Yf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Qf]),_:1}),l(),Sf]),t("td",Df,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Zf,t("td",Af,[t("a",Ff,[l("拆分二叉搜索树"),e(s)])]),Jf,t("td",Xf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$f]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[tg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[eg]),_:1}),l(),lg]),t("td",og,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ng,t("td",sg,[t("a",dg,[l("二叉搜索树节点最小距离"),e(s)])]),t("td",_g,[e(n,{to:"/leetcode/problem/0783.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",cg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ig]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[rg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ag]),_:1}),l(),hg]),t("td",ug,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[fg,t("td",gg,[t("a",mg,[l("二叉树剪枝"),e(s)])]),yg,t("td",xg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[bg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[pg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[kg]),_:1})]),t("td",Mg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[vg,t("td",Ig,[t("a",Eg,[l("二叉树中所有距离为 K 的结点"),e(s)])]),wg,t("td",zg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Og]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[jg]),_:1}),l(),Hg]),t("td",Lg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cg,t("td",Ng,[t("a",Pg,[l("具有所有最深节点的最小子树"),e(s)])]),Kg,t("td",Bg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Vg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Tg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ug]),_:1}),l(),Rg]),t("td",Wg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gg,t("td",Yg,[t("a",Qg,[l("叶子相似的树"),e(s)])]),Sg,t("td",Dg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Zg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ag]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Fg]),_:1})]),t("td",Jg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xg,t("td",$g,[t("a",tm,[l("根据前序和后序遍历构造二叉树"),e(s)])]),t("td",em,[e(n,{to:"/leetcode/problem/0889.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",lm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[om]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[nm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[sm]),_:1}),l(),dm]),t("td",_m,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cm,t("td",im,[t("a",rm,[l("所有可能的真二叉树"),e(s)])]),am,t("td",hm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[um]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[fm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[gm]),_:1}),l(),mm]),t("td",ym,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xm,t("td",bm,[t("a",pm,[l("递增顺序搜索树"),e(s)])]),km,t("td",Mm,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[vm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Im]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Em]),_:1}),l(),wm]),t("td",zm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Om,t("td",qm,[t("a",jm,[l("完全二叉树插入器"),e(s)])]),Hm,t("td",Lm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Cm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Nm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Pm]),_:1}),l(),Km]),t("td",Bm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vm,t("td",Tm,[t("a",Um,[l("二叉搜索树的范围和"),e(s)])]),Rm,t("td",Wm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Gm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ym]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Qm]),_:1}),l(),Sm]),t("td",Dm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Zm,t("td",Am,[t("a",Fm,[l("翻转等价二叉树"),e(s)])]),Jm,t("td",Xm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$m]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ty]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[ey]),_:1})]),t("td",ly,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oy,t("td",ny,[t("a",sy,[l("二叉树的完全性检验"),e(s)])]),t("td",dy,[e(n,{to:"/leetcode/problem/0958.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_y,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[cy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[iy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[ry]),_:1})]),t("td",ay,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hy,t("td",uy,[t("a",fy,[l("单值二叉树"),e(s)])]),gy,t("td",my,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[yy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[xy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[by]),_:1}),l(),py]),t("td",ky,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[My,t("td",vy,[t("a",Iy,[l("监控二叉树"),e(s)])]),Ey,t("td",wy,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[zy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Oy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[qy]),_:1}),l(),jy]),t("td",Hy,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ly,t("td",Cy,[t("a",Ny,[l("翻转二叉树以匹配先序遍历"),e(s)])]),Py,t("td",Ky,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[By]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Vy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Ty]),_:1})]),t("td",Uy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ry,t("td",Wy,[t("a",Gy,[l("在二叉树中分配硬币"),e(s)])]),Yy,t("td",Qy,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Sy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Dy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Zy]),_:1})]),t("td",Ay,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fy,t("td",Jy,[t("a",Xy,[l("二叉树的垂序遍历"),e(s)])]),$y,t("td",tx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ex]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[lx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ox]),_:1}),l(),nx]),t("td",sx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[dx,t("td",_x,[t("a",cx,[l("从叶结点开始的最小字符串"),e(s)])]),ix,t("td",rx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ax]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[hx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[ux]),_:1}),l(),fx]),t("td",gx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mx,t("td",yx,[t("a",xx,[l("二叉树的堂兄弟节点"),e(s)])]),bx,t("td",px,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[kx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Mx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[vx]),_:1}),l(),Ix]),t("td",Ex,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wx,t("td",zx,[t("a",Ox,[l("最大二叉树 II"),e(s)])]),qx,t("td",jx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Hx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Lx]),_:1})]),t("td",Cx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nx,t("td",Px,[t("a",Kx,[l("前序遍历构造二叉搜索树"),e(s)])]),t("td",Bx,[e(n,{to:"/leetcode/problem/1008.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Vx,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Tx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ux]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Rx]),_:1}),l(),Wx]),t("td",Gx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yx,t("td",Qx,[t("a",Sx,[l("从根到叶的二进制数之和"),e(s)])]),Dx,t("td",Zx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ax]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Fx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Jx]),_:1})]),t("td",Xx,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[$x,t("td",tb,[t("a",eb,[l("节点与其祖先之间的最大差值"),e(s)])]),lb,t("td",ob,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[nb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[sb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[db]),_:1})]),t("td",_b,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cb,t("td",ib,[t("a",rb,[l("从先序遍历还原二叉树"),e(s)])]),ab,t("td",hb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ub]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[gb]),_:1}),l(),mb]),t("td",yb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xb,t("td",bb,[t("a",pb,[l("从二叉搜索树到更大和树"),e(s)])]),kb,t("td",Mb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ib]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Eb]),_:1}),l(),wb]),t("td",zb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ob,t("td",qb,[t("a",jb,[l("根到叶路径上的不足节点"),e(s)])]),Hb,t("td",Lb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Cb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Nb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Pb]),_:1})]),t("td",Kb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bb,t("td",Vb,[t("a",Tb,[l("二叉树寻路"),e(s)])]),Ub,t("td",Rb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Wb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[Gb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Yb]),_:1})]),t("td",Qb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sb,t("td",Db,[t("a",Zb,[l("删点成林"),e(s)])]),Ab,t("td",Fb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Jb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Xb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[$b]),_:1}),l(),t2]),t("td",e2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l2,t("td",o2,[t("a",n2,[l("子树的最大平均值"),e(s)])]),s2,t("td",d2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[c2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[i2]),_:1})]),t("td",r2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a2,t("td",h2,[t("a",u2,[l("最深叶节点的最近公共祖先"),e(s)])]),f2,t("td",g2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[m2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[y2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[x2]),_:1}),l(),b2]),t("td",p2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[k2,t("td",M2,[t("a",v2,[l("二叉树着色游戏"),e(s)])]),I2,t("td",E2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[w2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[z2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[O2]),_:1})]),t("td",q2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j2,t("td",H2,[t("a",L2,[l("最大层内元素和"),e(s)])]),C2,t("td",N2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[P2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[K2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[B2]),_:1}),l(),V2]),t("td",T2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[U2,t("td",R2,[t("a",W2,[l("查找两棵二叉搜索树之和"),e(s)])]),G2,t("td",Y2,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Q2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[S2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[D2]),_:1}),l(),Z2]),t("td",A2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F2,t("td",J2,[t("a",X2,[l("在受污染的二叉树中查找元素"),e(s)])]),$2,t("td",t0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[e0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[l0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[o0]),_:1}),l(),n0]),t("td",s0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d0,t("td",_0,[t("a",c0,[l("层数最深叶子节点的和"),e(s)])]),i0,t("td",r0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[a0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[h0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[u0]),_:1}),l(),f0]),t("td",g0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m0,t("td",y0,[t("a",x0,[l("两棵二叉搜索树中的所有元素"),e(s)])]),b0,t("td",p0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[k0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[M0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[v0]),_:1}),l(),I0]),t("td",E0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w0,t("td",z0,[t("a",O0,[l("祖父节点值为偶数的节点和"),e(s)])]),q0,t("td",j0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[H0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[L0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[C0]),_:1}),l(),N0]),t("td",P0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K0,t("td",B0,[t("a",V0,[l("删除给定值的叶子节点"),e(s)])]),T0,t("td",U0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[R0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[W0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[G0]),_:1})]),t("td",Y0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Q0,t("td",S0,[t("a",D0,[l("分裂二叉树的最大乘积"),e(s)])]),Z0,t("td",A0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[F0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[J0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[X0]),_:1})]),t("td",$0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tp,t("td",ep,[t("a",lp,[l("验证二叉树"),e(s)])]),op,t("td",np,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[sp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_p]),_:1}),l(),cp]),t("td",ip,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rp,t("td",ap,[t("a",hp,[l("二叉树中的链表"),e(s)])]),up,t("td",fp,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[mp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[yp]),_:1}),l(),xp]),t("td",bp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[pp,t("td",kp,[t("a",Mp,[l("二叉树中的最长交错路径"),e(s)])]),vp,t("td",Ip,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Ep]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[wp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[zp]),_:1}),l(),Op]),t("td",qp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jp,t("td",Hp,[t("a",Lp,[l("二叉搜索子树的最大键值和"),e(s)])]),Cp,t("td",Np,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Pp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Kp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Bp]),_:1}),l(),Vp]),t("td",Tp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Up,t("td",Rp,[t("a",Wp,[l("找出克隆二叉树中的相同节点"),e(s)])]),Gp,t("td",Yp,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Qp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Sp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Dp]),_:1}),l(),Zp]),t("td",Ap,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fp,t("td",Jp,[t("a",Xp,[l("将二叉搜索树变平衡"),e(s)])]),$p,t("td",t6,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[e6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[l6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[o6]),_:1}),l(),n6]),t("td",s6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d6,t("td",_6,[t("a",c6,[l("判断给定的序列是否是二叉树从根到叶的路径"),e(s)])]),i6,t("td",r6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[a6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[h6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[u6]),_:1}),l(),f6]),t("td",g6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m6,t("td",y6,[t("a",x6,[l("统计二叉树中好节点的数目"),e(s)])]),b6,t("td",p6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[k6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[M6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[v6]),_:1}),l(),I6]),t("td",E6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[w6,t("td",z6,[t("a",O6,[l("二叉树中的伪回文路径"),e(s)])]),q6,t("td",j6,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[H6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[L6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[C6]),_:1}),l(),N6]),t("td",P6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K6,t("td",B6,[t("a",V6,[l("寻找所有的独生节点"),e(s)])]),T6,t("td",U6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[R6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[W6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[G6]),_:1}),l(),Y6]),t("td",Q6,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[S6,t("td",D6,[t("a",Z6,[l("克隆含随机指针的二叉树"),e(s)])]),A6,t("td",F6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[J6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[X6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$6]),_:1}),l(),t8]),t("td",e8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l8,t("td",o8,[t("a",n8,[l("好叶子节点对的数量"),e(s)])]),s8,t("td",d8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[c8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[i8]),_:1})]),t("td",r8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[a8,t("td",h8,[t("a",u8,[l("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),f8,t("td",g8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[m8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[y8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[x8]),_:1}),l(),b8]),t("td",p8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[k8,t("td",M8,[t("a",v8,[l("二叉搜索树迭代器 II"),e(s)])]),I8,t("td",E8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[w8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[z8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[O8]),_:1}),l(),q8]),t("td",j8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H8,t("td",L8,[t("a",C8,[l("根据中缀表达式构造二叉表达式树"),e(s)])]),N8,t("td",P8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[K8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[B8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[V8]),_:1}),l(),T8]),t("td",U8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[R8,t("td",W8,[t("a",G8,[l("找到二叉树中最近的右侧节点"),e(s)])]),Y8,t("td",Q8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[S8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[D8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Z8]),_:1})]),t("td",A8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F8,t("td",J8,[t("a",X8,[l("奇偶树"),e(s)])]),$8,t("td",t3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[e3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[l3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[o3]),_:1})]),t("td",n3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s3,t("td",d3,[t("a",_3,[l("检查两棵二叉表达式树是否等价"),e(s)])]),c3,t("td",i3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[r3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[a3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[h3]),_:1}),l(),u3]),t("td",f3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g3,t("td",m3,[t("a",y3,[l("设计带解析函数的表达式树"),e(s)])]),x3,t("td",b3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[p3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[k3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[M3]),_:1}),l(),v3]),t("td",I3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[E3,t("td",w3,[t("a",z3,[l("二叉树的最近公共祖先 II"),e(s)])]),O3,t("td",q3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[j3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[H3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[L3]),_:1})]),t("td",C3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N3,t("td",P3,[t("a",K3,[l("二叉树的最近公共祖先 III"),e(s)])]),B3,t("td",V3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[T3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[U3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[R3]),_:1}),l(),W3]),t("td",G3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y3,t("td",Q3,[t("a",S3,[l("纠正二叉树"),e(s)])]),D3,t("td",Z3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[A3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[F3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[J3]),_:1}),l(),X3]),t("td",$3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[t5,t("td",e5,[t("a",l5,[l("改变二叉树的根节点"),e(s)])]),o5,t("td",n5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[s5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[d5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[_5]),_:1})]),t("td",c5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[i5,t("td",r5,[t("a",a5,[l("二叉树的最近公共祖先 IV"),e(s)])]),h5,t("td",u5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[f5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[g5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[m5]),_:1}),l(),y5]),t("td",x5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[b5,t("td",p5,[t("a",k5,[l("找到二叉树中的距离"),e(s)])]),M5,t("td",v5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[I5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[E5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[w5]),_:1}),l(),z5]),t("td",O5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[q5,t("td",j5,[t("a",H5,[l("给定二叉搜索树的插入顺序求深度"),e(s)])]),L5,t("td",C5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[N5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[P5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[K5]),_:1}),l(),B5]),t("td",V5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T5,t("td",U5,[t("a",R5,[l("合并多棵二叉搜索树"),e(s)])]),W5,t("td",G5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Y5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Q5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[S5]),_:1}),l(),D5]),t("td",Z5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[A5,t("td",F5,[t("a",J5,[l("值等于子节点值之和的节点数量"),e(s)])]),X5,t("td",$5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[t4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[e4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[l4]),_:1})]),t("td",o4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n4,t("td",s4,[t("a",d4,[l("斐波那契树的移除子树游戏"),e(s)])]),_4,t("td",c4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[i4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[r4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[a4]),_:1}),l(),h4]),t("td",u4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f4,t("td",g4,[t("a",m4,[l("统计最高分的节点数目"),e(s)])]),y4,t("td",x4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[b4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[p4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[k4]),_:1}),l(),M4]),t("td",v4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[I4,t("td",E4,[t("a",w4,[l("从二叉树一个节点到另一个节点每一步的方向"),e(s)])]),z4,t("td",O4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[q4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[j4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[H4]),_:1}),l(),L4]),t("td",C4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N4,t("td",P4,[t("a",K4,[l("根据描述创建二叉树"),e(s)])]),t("td",B4,[e(n,{to:"/leetcode/problem/2196.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",V4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[T4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[U4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[R4]),_:1}),l(),W4]),t("td",G4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y4,t("td",Q4,[t("a",S4,[l("判断根结点是否等于子结点之和"),e(s)])]),D4,t("td",Z4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[A4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[F4]),_:1})]),t("td",J4,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[X4,t("td",$4,[t("a",t9,[l("统计值等于子树平均值的节点数"),e(s)])]),e9,t("td",l9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[o9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[n9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[s9]),_:1})]),t("td",d9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_9,t("td",c9,[t("a",i9,[l("二叉树中得到结果所需的最少翻转次数"),e(s)])]),r9,t("td",a9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[h9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[u9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[f9]),_:1}),l(),g9]),t("td",m9,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[y9,t("td",x9,[t("a",b9,[l("计算布尔二叉树的值"),e(s)])]),p9,t("td",k9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[M9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[v9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[I9]),_:1})]),t("td",E9,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[w9,t("td",z9,[t("a",O9,[l("感染二叉树需要的总时间"),e(s)])]),q9,t("td",j9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[H9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[L9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[C9]),_:1}),l(),N9]),t("td",P9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[K9,t("td",B9,[t("a",V9,[l("反转二叉树的奇数层"),e(s)])]),T9,t("td",U9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[R9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[W9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[G9]),_:1}),l(),Y9]),t("td",Q9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S9,t("td",D9,[t("a",Z9,[l("值为 1 的节点数"),e(s)])]),A9,t("td",F9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[J9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[X9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$9]),_:1}),l(),t7]),t("td",e7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l7,t("td",o7,[t("a",n7,[l("移除子树后的二叉树高度"),e(s)])]),s7,t("td",d7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[c7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[i7]),_:1}),l(),r7]),t("td",a7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[h7,t("td",u7,[t("a",f7,[l("逐层排序二叉树所需的最少操作数目"),e(s)])]),g7,t("td",m7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[y7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[x7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[b7]),_:1})]),t("td",p7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[k7,t("td",M7,[t("a",v7,[l("二叉搜索树最近节点查询"),e(s)])]),I7,t("td",E7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[w7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[z7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[O7]),_:1}),l(),q7]),t("td",j7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H7,t("td",L7,[t("a",C7,[l("查询树中环的长度"),e(s)])]),N7,t("td",P7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[K7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[B7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[V7]),_:1})]),t("td",T7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[U7,t("td",R7,[t("a",W7,[l("二叉树中的第 K 大层和"),e(s)])]),G7,t("td",Y7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Q7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[S7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[D7]),_:1}),l(),Z7]),t("td",A7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F7,t("td",J7,[t("a",X7,[l("二叉树的堂兄弟节点 II"),e(s)])]),$7,t("td",tk,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ek]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[lk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[ok]),_:1}),l(),nk]),t("td",sk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dk,t("td",_k,[t("a",ck,[l("使二叉树所有路径值相等的最小代价"),e(s)])]),ik,t("td",rk,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[ak]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[hk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[uk]),_:1}),l(),fk]),t("td",gk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mk,t("td",yk,[t("a",xk,[l("从 Rope 树中提取第 K 个字符"),e(s)])]),bk,t("td",pk,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[kk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Mk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[vk]),_:1})]),t("td",Ik,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ek,t("td",wk,[t("a",zk,[l("数组是否表示某二叉树的前序遍历"),e(s)])]),Ok,t("td",qk,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[jk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Hk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Lk]),_:1}),l(),Ck]),t("td",Nk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pk,t("td",Kk,[t("a",Bk,[l("特殊二叉树的高度"),e(s)])]),Vk,t("td",Tk,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Uk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Rk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Wk]),_:1}),l(),Gk]),t("td",Yk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qk,t("td",Sk,[t("a",Dk,[l("计算足够大的节点数"),e(s)])]),Zk,t("td",Ak,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Fk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Jk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[Xk]),_:1}),l(),$k]),t("td",tM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[eM,t("td",lM,[t("a",oM,[l("找到具有最小和的树的层数"),e(s)])]),nM,t("td",sM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[dM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[_M]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[cM]),_:1}),l(),iM]),t("td",rM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[aM,t("td",hM,[t("a",uM,[l("第 K 大的完美二叉子树的大小"),e(s)])]),t("td",fM,[e(n,{to:"/leetcode/problem/3319.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",gM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[mM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[yM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[xM]),_:1}),l(),bM]),t("td",pM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kM,t("td",MM,[t("a",vM,[l("二叉树任务调度"),e(s)])]),IM,t("td",EM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[wM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[zM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[OM]),_:1}),l(),qM]),t("td",jM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[HM,t("td",LM,[t("a",CM,[l("导航装置"),e(s)])]),NM,t("td",PM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[KM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[BM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[VM]),_:1})]),t("td",TM,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[UM,t("td",RM,[t("a",WM,[l("二叉树染色"),e(s)])]),GM,t("td",YM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[QM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[SM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[DM]),_:1})]),t("td",ZM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[AM,t("td",FM,[t("a",JM,[l("开幕式焰火"),e(s)])]),XM,t("td",$M,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[tv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ev]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[lv]),_:1}),l(),ov]),t("td",nv,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[sv,t("td",dv,[t("a",_v,[l("二叉搜索树染色"),e(s)])]),cv,t("td",iv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[rv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[av]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[hv]),_:1}),l(),uv]),t("td",fv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gv,t("td",mv,[t("a",yv,[l("力扣泡泡龙"),e(s)])]),xv,t("td",bv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[pv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[kv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Mv]),_:1})]),t("td",vv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Iv,t("td",Ev,[t("a",wv,[l("二叉树灯饰"),e(s)])]),zv,t("td",Ov,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[qv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[jv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Hv]),_:1}),l(),Lv]),t("td",Cv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nv,t("td",Pv,[t("a",Kv,[l("装饰树"),e(s)])]),Bv,t("td",Vv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Tv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Uv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Rv]),_:1}),l(),Wv]),t("td",Gv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yv,t("td",Qv,[t("a",Sv,[l("重建二叉树"),e(s)])]),t("td",Dv,[e(n,{to:"/leetcode/problem/jz_offer_07_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Zv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Av]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Fv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Jv]),_:1}),l(),Xv]),t("td",$v,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tI,t("td",eI,[t("a",lI,[l("树的子结构"),e(s)])]),t("td",oI,[e(n,{to:"/leetcode/problem/jz_offer_26_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",nI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[sI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[_I]),_:1})]),t("td",cI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[iI,t("td",rI,[t("a",aI,[l("二叉树的镜像"),e(s)])]),t("td",hI,[e(n,{to:"/leetcode/problem/jz_offer_27_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",uI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[fI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[gI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[mI]),_:1}),l(),yI]),t("td",xI,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[bI,t("td",pI,[t("a",kI,[l("对称的二叉树"),e(s)])]),t("td",MI,[e(n,{to:"/leetcode/problem/jz_offer_28_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",vI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[II]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[EI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[wI]),_:1}),l(),zI]),t("td",OI,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[qI,t("td",jI,[t("a",HI,[l("从上到下打印二叉树"),e(s)])]),t("td",LI,[e(n,{to:"/leetcode/problem/jz_offer_32_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",CI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[NI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[PI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[KI]),_:1})]),t("td",BI,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[VI,t("td",TI,[t("a",UI,[l("从上到下打印二叉树 II"),e(s)])]),t("td",RI,[e(n,{to:"/leetcode/problem/jz_offer_32_2.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",WI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[GI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[YI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[QI]),_:1})]),t("td",SI,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[DI,t("td",ZI,[t("a",AI,[l("从上到下打印二叉树 III"),e(s)])]),t("td",FI,[e(n,{to:"/leetcode/problem/jz_offer_32_3.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",JI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[XI]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[tE]),_:1})]),t("td",eE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lE,t("td",oE,[t("a",nE,[l("二叉搜索树的后序遍历序列"),e(s)])]),t("td",sE,[e(n,{to:"/leetcode/problem/jz_offer_33_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",dE,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[_E]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[cE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[iE]),_:1}),l(),rE]),t("td",aE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hE,t("td",uE,[t("a",fE,[l("二叉树中和为某一值的路径"),e(s)])]),t("td",gE,[e(n,{to:"/leetcode/problem/jz_offer_34_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",mE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[yE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[xE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[bE]),_:1}),l(),pE]),t("td",kE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ME,t("td",vE,[t("a",IE,[l("二叉搜索树与双向链表"),e(s)])]),t("td",EE,[e(n,{to:"/leetcode/problem/jz_offer_36_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wE,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[zE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[OE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[qE]),_:1}),l(),jE]),t("td",HE,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[LE,t("td",CE,[t("a",NE,[l("序列化二叉树"),e(s)])]),t("td",PE,[e(n,{to:"/leetcode/problem/jz_offer_37_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",KE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[BE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[VE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[TE]),_:1}),l(),UE]),t("td",RE,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[WE,t("td",GE,[t("a",YE,[l("二叉搜索树的第k大节点"),e(s)])]),t("td",QE,[e(n,{to:"/leetcode/problem/jz_offer_54_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",SE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[DE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ZE]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[AE]),_:1}),l(),FE]),t("td",JE,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[XE,t("td",$E,[t("a",tw,[l("二叉树的深度"),e(s)])]),t("td",ew,[e(n,{to:"/leetcode/problem/jz_offer_55_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",lw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ow]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[sw]),_:1}),l(),dw]),t("td",_w,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[cw,t("td",iw,[t("a",rw,[l("平衡二叉树"),e(s)])]),aw,t("td",hw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[uw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[fw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[gw]),_:1})]),t("td",mw,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yw,t("td",xw,[t("a",bw,[l("二叉搜索树的最近公共祖先"),e(s)])]),pw,t("td",kw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Mw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[vw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Iw]),_:1}),l(),Ew]),t("td",ww,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[zw,t("td",Ow,[t("a",qw,[l("二叉树的最近公共祖先"),e(s)])]),jw,t("td",Hw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Lw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Cw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Nw]),_:1})]),t("td",Pw,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Kw,t("td",Bw,[t("a",Vw,[l("往完全二叉树添加节点"),e(s)])]),Tw,t("td",Uw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Rw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Ww]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Gw]),_:1}),l(),Yw]),t("td",Qw,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sw,t("td",Dw,[t("a",Zw,[l("二叉树每层的最大值"),e(s)])]),Aw,t("td",Fw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Jw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Xw]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$w]),_:1}),l(),tz]),t("td",ez,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[lz,t("td",oz,[t("a",nz,[l("二叉树最底层最左边的值"),e(s)])]),sz,t("td",dz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[_z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[cz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[iz]),_:1}),l(),rz]),t("td",az,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hz,t("td",uz,[t("a",fz,[l("二叉树的右侧视图"),e(s)])]),gz,t("td",mz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[yz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[xz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[bz]),_:1}),l(),pz]),t("td",kz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mz,t("td",vz,[t("a",Iz,[l("二叉树剪枝"),e(s)])]),Ez,t("td",wz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[zz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Oz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[qz]),_:1})]),t("td",jz,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hz,t("td",Lz,[t("a",Cz,[l("序列化与反序列化二叉树"),e(s)])]),Nz,t("td",Pz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Kz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Bz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[Vz]),_:1}),l(),Tz]),t("td",Uz,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rz,t("td",Wz,[t("a",Gz,[l("从根节点到叶节点的路径数字之和"),e(s)])]),Yz,t("td",Qz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Sz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Dz]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Zz]),_:1})]),t("td",Az,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fz,t("td",Jz,[t("a",Xz,[l("向下的路径节点之和"),e(s)])]),$z,t("td",tO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[eO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[lO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[oO]),_:1})]),t("td",nO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[sO,t("td",dO,[t("a",_O,[l("节点之和最大的路径"),e(s)])]),cO,t("td",iO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[rO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[aO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[hO]),_:1}),l(),uO]),t("td",fO,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[gO,t("td",mO,[t("a",yO,[l("展平二叉搜索树"),e(s)])]),xO,t("td",bO,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[pO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[kO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[MO]),_:1}),l(),vO]),t("td",IO,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[EO,t("td",wO,[t("a",zO,[l("二叉搜索树中的中序后继"),e(s)])]),OO,t("td",qO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[jO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[HO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[LO]),_:1}),l(),CO]),t("td",NO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[PO,t("td",KO,[t("a",BO,[l("所有大于等于节点的值之和"),e(s)])]),VO,t("td",TO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[UO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[RO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[WO]),_:1}),l(),GO]),t("td",YO,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[QO,t("td",SO,[t("a",DO,[l("二叉搜索树迭代器"),e(s)])]),ZO,t("td",AO,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[FO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[JO]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[XO]),_:1}),l(),$O]),t("td",tq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[eq,t("td",lq,[t("a",oq,[l("数据流的第 K 大数值"),e(s)])]),nq,t("td",sq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[dq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[_q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[cq]),_:1}),l(),iq]),t("td",rq,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[aq,t("td",hq,[t("a",uq,[l("最小高度树"),e(s)])]),fq,t("td",gq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[mq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[yq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[xq]),_:1}),l(),bq]),t("td",pq,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[kq,t("td",Mq,[t("a",vq,[l("特定深度节点链表"),e(s)])]),Iq,t("td",Eq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[wq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[zq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[Oq]),_:1}),l(),qq]),t("td",jq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hq,t("td",Lq,[t("a",Cq,[l("检查平衡性"),e(s)])]),Nq,t("td",Pq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Kq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Bq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Vq]),_:1})]),t("td",Tq,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Uq,t("td",Rq,[t("a",Wq,[l("合法二叉搜索树"),e(s)])]),Gq,t("td",Yq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Qq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Sq]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[Dq]),_:1}),l(),Zq]),t("td",Aq,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fq,t("td",Jq,[t("a",Xq,[l("后继者"),e(s)])]),$q,t("td",tj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[ej]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[lj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[oj]),_:1}),l(),nj]),t("td",sj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[dj,t("td",_j,[t("a",cj,[l("首个共同祖先"),e(s)])]),ij,t("td",rj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[aj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[hj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[uj]),_:1})]),t("td",fj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gj,t("td",mj,[t("a",yj,[l("二叉搜索树序列"),e(s)])]),xj,t("td",bj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[pj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[kj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[Mj]),_:1}),l(),vj]),t("td",Ij,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ej,t("td",wj,[t("a",zj,[l("检查子树"),e(s)])]),Oj,t("td",qj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[jj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Hj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Lj]),_:1}),l(),Cj]),t("td",Nj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pj,t("td",Kj,[t("a",Bj,[l("求和路径"),e(s)])]),Vj,t("td",Tj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Uj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Rj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[Wj]),_:1})]),t("td",Gj,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yj,t("td",Qj,[t("a",Sj,[l("BiNode"),e(s)])]),Dj,t("td",Zj,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Aj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Fj]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Jj]),_:1}),l(),Xj]),t("td",$j,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])])])])])}const nH=c(h,[["render",tH],["__file","binary-tree.html.vue"]]);export{nH as default};
