import{_ as c,r as _,o as i,c as r,a as t,d as e,w as l,b as o,f as a}from"./app-mvY9N9Pc.js";const h={},u=t("h1",{id:"树",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#树","aria-hidden":"true"},"#"),o(" 树")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),M=t("code",null,"单调栈",-1),j=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),I=t("code",null,"堆（优先队列）",-1),E=t("code",null,"哈希表",-1),w=t("code",null,"字符串",-1),H=t("code",null,"字符串匹配",-1),z=t("span",{class:"blue"},"树",-1),O=t("code",null,"二叉树",-1),q=t("code",null,"二叉搜索树",-1),N=t("code",null,"最小生成树",-1),L=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),K=t("code",null,"最短路",-1),B=t("code",null,"强连通分量",-1),T=t("code",null,"欧拉回路",-1),V=t("code",null,"双连通分量",-1),U=t("code",null,"并查集",-1),R=t("code",null,"字典树",-1),W=t("code",null,"线段树",-1),G=t("code",null,"树状数组",-1),Y=t("code",null,"后缀数组",-1),Q=t("p",null,[t("strong",null,"算法")],-1),S=t("code",null,"枚举",-1),D=t("code",null,"递归",-1),F=t("code",null,"分治",-1),Z=t("code",null,"回溯",-1),A=t("code",null,"贪心",-1),J=t("code",null,"动态规划",-1),X=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),rt=t("code",null,"前缀和",-1),at=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),jt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),It=t("code",null,"概率与统计",-1),Et=t("code",null,"水塘抽样",-1),wt=t("code",null,"拒绝采样",-1),Ht=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),qt=t("code",null,"脑筋急转弯",-1),Nt=t("code",null,"交互",-1),Lt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Kt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Bt=t("td",{style:{"text-align":"center"}},"94",-1),Tt={style:{"text-align":"left"}},Vt={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},Rt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0094",target:"_blank",rel:"noopener noreferrer"},Wt={style:{"text-align":"left"}},Gt=t("code",null,"栈",-1),Yt=t("code",null,"树",-1),Qt=t("code",null,"深度优先搜索",-1),St=t("code",null,"1+",-1),Dt={style:{"text-align":"left"}},Ft=t("td",{style:{"text-align":"center"}},"95",-1),Zt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/unique-binary-search-trees-ii",target:"_blank",rel:"noopener noreferrer"},Jt={style:{"text-align":"center"}},Xt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0095",target:"_blank",rel:"noopener noreferrer"},$t={style:{"text-align":"left"}},te=t("code",null,"树",-1),ee=t("code",null,"二叉搜索树",-1),oe=t("code",null,"动态规划",-1),le=t("code",null,"2+",-1),ne={style:{"text-align":"left"}},se=t("td",{style:{"text-align":"center"}},"96",-1),de={style:{"text-align":"left"}},_e={href:"https://leetcode.com/problems/unique-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},ce={style:{"text-align":"center"}},ie={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0096",target:"_blank",rel:"noopener noreferrer"},re={style:{"text-align":"left"}},ae=t("code",null,"树",-1),he=t("code",null,"二叉搜索树",-1),ue=t("code",null,"数学",-1),fe=t("code",null,"2+",-1),ge={style:{"text-align":"left"}},me=t("td",{style:{"text-align":"center"}},"98",-1),ye={style:{"text-align":"left"}},xe={href:"https://leetcode.com/problems/validate-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},be={style:{"text-align":"center"}},pe={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0098",target:"_blank",rel:"noopener noreferrer"},ke={style:{"text-align":"left"}},Me=t("code",null,"树",-1),je=t("code",null,"深度优先搜索",-1),ve=t("code",null,"二叉搜索树",-1),Ie=t("code",null,"1+",-1),Ee={style:{"text-align":"left"}},we=t("td",{style:{"text-align":"center"}},"99",-1),He={style:{"text-align":"left"}},ze={href:"https://leetcode.com/problems/recover-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Oe={style:{"text-align":"center"}},qe={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0099",target:"_blank",rel:"noopener noreferrer"},Ne={style:{"text-align":"left"}},Le=t("code",null,"树",-1),Ce=t("code",null,"深度优先搜索",-1),Pe=t("code",null,"二叉搜索树",-1),Ke=t("code",null,"1+",-1),Be={style:{"text-align":"left"}},Te=t("td",{style:{"text-align":"center"}},"100",-1),Ve={style:{"text-align":"left"}},Ue={href:"https://leetcode.com/problems/same-tree",target:"_blank",rel:"noopener noreferrer"},Re={style:{"text-align":"center"}},We={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0100",target:"_blank",rel:"noopener noreferrer"},Ge={style:{"text-align":"left"}},Ye=t("code",null,"树",-1),Qe=t("code",null,"深度优先搜索",-1),Se=t("code",null,"广度优先搜索",-1),De=t("code",null,"1+",-1),Fe={style:{"text-align":"left"}},Ze=t("td",{style:{"text-align":"center"}},"101",-1),Ae={style:{"text-align":"left"}},Je={href:"https://leetcode.com/problems/symmetric-tree",target:"_blank",rel:"noopener noreferrer"},Xe={style:{"text-align":"center"}},$e={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0101",target:"_blank",rel:"noopener noreferrer"},to={style:{"text-align":"left"}},eo=t("code",null,"树",-1),oo=t("code",null,"深度优先搜索",-1),lo=t("code",null,"广度优先搜索",-1),no=t("code",null,"1+",-1),so={style:{"text-align":"left"}},_o=t("td",{style:{"text-align":"center"}},"102",-1),co={style:{"text-align":"left"}},io={href:"https://leetcode.com/problems/binary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},ro={style:{"text-align":"center"}},ao={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0102",target:"_blank",rel:"noopener noreferrer"},ho={style:{"text-align":"left"}},uo=t("code",null,"树",-1),fo=t("code",null,"广度优先搜索",-1),go=t("code",null,"二叉树",-1),mo={style:{"text-align":"left"}},yo=t("td",{style:{"text-align":"center"}},"103",-1),xo={style:{"text-align":"left"}},bo={href:"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},po={style:{"text-align":"center"}},ko={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0103",target:"_blank",rel:"noopener noreferrer"},Mo={style:{"text-align":"left"}},jo=t("code",null,"树",-1),vo=t("code",null,"广度优先搜索",-1),Io=t("code",null,"二叉树",-1),Eo={style:{"text-align":"left"}},wo=t("td",{style:{"text-align":"center"}},"104",-1),Ho={style:{"text-align":"left"}},zo={href:"https://leetcode.com/problems/maximum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Oo={style:{"text-align":"center"}},qo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0104",target:"_blank",rel:"noopener noreferrer"},No={style:{"text-align":"left"}},Lo=t("code",null,"树",-1),Co=t("code",null,"深度优先搜索",-1),Po=t("code",null,"广度优先搜索",-1),Ko=t("code",null,"1+",-1),Bo={style:{"text-align":"left"}},To=t("td",{style:{"text-align":"center"}},"105",-1),Vo={style:{"text-align":"left"}},Uo={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ro={style:{"text-align":"center"}},Wo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0105",target:"_blank",rel:"noopener noreferrer"},Go={style:{"text-align":"left"}},Yo=t("code",null,"树",-1),Qo=t("code",null,"数组",-1),So=t("code",null,"哈希表",-1),Do=t("code",null,"2+",-1),Fo={style:{"text-align":"left"}},Zo=t("td",{style:{"text-align":"center"}},"106",-1),Ao={style:{"text-align":"left"}},Jo={href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Xo={style:{"text-align":"center"}},$o={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0106",target:"_blank",rel:"noopener noreferrer"},tl={style:{"text-align":"left"}},el=t("code",null,"树",-1),ol=t("code",null,"数组",-1),ll=t("code",null,"哈希表",-1),nl=t("code",null,"2+",-1),sl={style:{"text-align":"left"}},dl=t("td",{style:{"text-align":"center"}},"107",-1),_l={style:{"text-align":"left"}},cl={href:"https://leetcode.com/problems/binary-tree-level-order-traversal-ii",target:"_blank",rel:"noopener noreferrer"},il={style:{"text-align":"center"}},rl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0107",target:"_blank",rel:"noopener noreferrer"},al={style:{"text-align":"left"}},hl=t("code",null,"树",-1),ul=t("code",null,"广度优先搜索",-1),fl=t("code",null,"二叉树",-1),gl={style:{"text-align":"left"}},ml=t("td",{style:{"text-align":"center"}},"108",-1),yl={style:{"text-align":"left"}},xl={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},bl={style:{"text-align":"center"}},pl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0108",target:"_blank",rel:"noopener noreferrer"},kl={style:{"text-align":"left"}},Ml=t("code",null,"树",-1),jl=t("code",null,"二叉搜索树",-1),vl=t("code",null,"数组",-1),Il=t("code",null,"2+",-1),El={style:{"text-align":"left"}},wl=t("td",{style:{"text-align":"center"}},"109",-1),Hl={style:{"text-align":"left"}},zl={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ol={style:{"text-align":"center"}},ql={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0109",target:"_blank",rel:"noopener noreferrer"},Nl={style:{"text-align":"left"}},Ll=t("code",null,"树",-1),Cl=t("code",null,"二叉搜索树",-1),Pl=t("code",null,"链表",-1),Kl=t("code",null,"2+",-1),Bl={style:{"text-align":"left"}},Tl=t("td",{style:{"text-align":"center"}},"110",-1),Vl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/balanced-binary-tree",target:"_blank",rel:"noopener noreferrer"},Rl={style:{"text-align":"center"}},Wl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0110",target:"_blank",rel:"noopener noreferrer"},Gl={style:{"text-align":"left"}},Yl=t("code",null,"树",-1),Ql=t("code",null,"深度优先搜索",-1),Sl=t("code",null,"二叉树",-1),Dl={style:{"text-align":"left"}},Fl=t("td",{style:{"text-align":"center"}},"111",-1),Zl={style:{"text-align":"left"}},Al={href:"https://leetcode.com/problems/minimum-depth-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Jl={style:{"text-align":"center"}},Xl={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0111",target:"_blank",rel:"noopener noreferrer"},$l={style:{"text-align":"left"}},tn=t("code",null,"树",-1),en=t("code",null,"深度优先搜索",-1),on=t("code",null,"广度优先搜索",-1),ln=t("code",null,"1+",-1),nn={style:{"text-align":"left"}},sn=t("td",{style:{"text-align":"center"}},"112",-1),dn={style:{"text-align":"left"}},_n={href:"https://leetcode.com/problems/path-sum",target:"_blank",rel:"noopener noreferrer"},cn={style:{"text-align":"center"}},rn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0112",target:"_blank",rel:"noopener noreferrer"},an={style:{"text-align":"left"}},hn=t("code",null,"树",-1),un=t("code",null,"深度优先搜索",-1),fn=t("code",null,"广度优先搜索",-1),gn=t("code",null,"1+",-1),mn={style:{"text-align":"left"}},yn=t("td",{style:{"text-align":"center"}},"113",-1),xn={style:{"text-align":"left"}},bn={href:"https://leetcode.com/problems/path-sum-ii",target:"_blank",rel:"noopener noreferrer"},pn={style:{"text-align":"center"}},kn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0113",target:"_blank",rel:"noopener noreferrer"},Mn={style:{"text-align":"left"}},jn=t("code",null,"树",-1),vn=t("code",null,"深度优先搜索",-1),In=t("code",null,"回溯",-1),En=t("code",null,"1+",-1),wn={style:{"text-align":"left"}},Hn=t("td",{style:{"text-align":"center"}},"114",-1),zn={style:{"text-align":"left"}},On={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},qn={style:{"text-align":"center"}},Nn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0114",target:"_blank",rel:"noopener noreferrer"},Ln={style:{"text-align":"left"}},Cn=t("code",null,"栈",-1),Pn=t("code",null,"树",-1),Kn=t("code",null,"深度优先搜索",-1),Bn=t("code",null,"2+",-1),Tn={style:{"text-align":"left"}},Vn=t("td",{style:{"text-align":"center"}},"116",-1),Un={style:{"text-align":"left"}},Rn={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node",target:"_blank",rel:"noopener noreferrer"},Wn={style:{"text-align":"center"}},Gn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0116",target:"_blank",rel:"noopener noreferrer"},Yn={style:{"text-align":"left"}},Qn=t("code",null,"树",-1),Sn=t("code",null,"深度优先搜索",-1),Dn=t("code",null,"广度优先搜索",-1),Fn=t("code",null,"2+",-1),Zn={style:{"text-align":"left"}},An=t("td",{style:{"text-align":"center"}},"117",-1),Jn={style:{"text-align":"left"}},Xn={href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",target:"_blank",rel:"noopener noreferrer"},$n={style:{"text-align":"center"}},ts={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0117",target:"_blank",rel:"noopener noreferrer"},es={style:{"text-align":"left"}},os=t("code",null,"树",-1),ls=t("code",null,"深度优先搜索",-1),ns=t("code",null,"广度优先搜索",-1),ss=t("code",null,"2+",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"124",-1),cs={style:{"text-align":"left"}},is={href:"https://leetcode.com/problems/binary-tree-maximum-path-sum",target:"_blank",rel:"noopener noreferrer"},rs={style:{"text-align":"center"}},as={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0124",target:"_blank",rel:"noopener noreferrer"},hs={style:{"text-align":"left"}},us=t("code",null,"树",-1),fs=t("code",null,"深度优先搜索",-1),gs=t("code",null,"动态规划",-1),ms=t("code",null,"1+",-1),ys={style:{"text-align":"left"}},xs=t("td",{style:{"text-align":"center"}},"129",-1),bs={style:{"text-align":"left"}},ps={href:"https://leetcode.com/problems/sum-root-to-leaf-numbers",target:"_blank",rel:"noopener noreferrer"},ks={style:{"text-align":"center"}},Ms={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0129",target:"_blank",rel:"noopener noreferrer"},js={style:{"text-align":"left"}},vs=t("code",null,"树",-1),Is=t("code",null,"深度优先搜索",-1),Es=t("code",null,"二叉树",-1),ws={style:{"text-align":"left"}},Hs=t("td",{style:{"text-align":"center"}},"144",-1),zs={style:{"text-align":"left"}},Os={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},qs={style:{"text-align":"center"}},Ns={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0144",target:"_blank",rel:"noopener noreferrer"},Ls={style:{"text-align":"left"}},Cs=t("code",null,"栈",-1),Ps=t("code",null,"树",-1),Ks=t("code",null,"深度优先搜索",-1),Bs=t("code",null,"1+",-1),Ts={style:{"text-align":"left"}},Vs=t("td",{style:{"text-align":"center"}},"145",-1),Us={style:{"text-align":"left"}},Rs={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ws={style:{"text-align":"center"}},Gs={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0145",target:"_blank",rel:"noopener noreferrer"},Ys={style:{"text-align":"left"}},Qs=t("code",null,"栈",-1),Ss=t("code",null,"树",-1),Ds=t("code",null,"深度优先搜索",-1),Fs=t("code",null,"1+",-1),Zs={style:{"text-align":"left"}},As=t("td",{style:{"text-align":"center"}},"156",-1),Js={style:{"text-align":"left"}},Xs={href:"https://leetcode.com/problems/binary-tree-upside-down",target:"_blank",rel:"noopener noreferrer"},$s={style:{"text-align":"center"}},td={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0156",target:"_blank",rel:"noopener noreferrer"},ed={style:{"text-align":"left"}},od=t("code",null,"树",-1),ld=t("code",null,"深度优先搜索",-1),nd=t("code",null,"二叉树",-1),sd={style:{"text-align":"left"}},dd=t("td",{style:{"text-align":"center"}},"173",-1),_d={style:{"text-align":"left"}},cd={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},id={style:{"text-align":"center"}},rd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0173",target:"_blank",rel:"noopener noreferrer"},ad={style:{"text-align":"left"}},hd=t("code",null,"栈",-1),ud=t("code",null,"树",-1),fd=t("code",null,"设计",-1),gd=t("code",null,"3+",-1),md={style:{"text-align":"left"}},yd=t("td",{style:{"text-align":"center"}},"199",-1),xd={style:{"text-align":"left"}},bd={href:"https://leetcode.com/problems/binary-tree-right-side-view",target:"_blank",rel:"noopener noreferrer"},pd={style:{"text-align":"center"}},kd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0199",target:"_blank",rel:"noopener noreferrer"},Md={style:{"text-align":"left"}},jd=t("code",null,"树",-1),vd=t("code",null,"深度优先搜索",-1),Id=t("code",null,"广度优先搜索",-1),Ed=t("code",null,"1+",-1),wd={style:{"text-align":"left"}},Hd=t("td",{style:{"text-align":"center"}},"222",-1),zd={style:{"text-align":"left"}},Od={href:"https://leetcode.com/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},qd={style:{"text-align":"center"}},Nd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0222",target:"_blank",rel:"noopener noreferrer"},Ld={style:{"text-align":"left"}},Cd=t("code",null,"位运算",-1),Pd=t("code",null,"树",-1),Kd=t("code",null,"二分查找",-1),Bd=t("code",null,"1+",-1),Td={style:{"text-align":"left"}},Vd=t("td",{style:{"text-align":"center"}},"226",-1),Ud={style:{"text-align":"left"}},Rd={href:"https://leetcode.com/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wd={style:{"text-align":"center"}},Gd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0226",target:"_blank",rel:"noopener noreferrer"},Yd={style:{"text-align":"left"}},Qd=t("code",null,"树",-1),Sd=t("code",null,"深度优先搜索",-1),Dd=t("code",null,"广度优先搜索",-1),Fd=t("code",null,"1+",-1),Zd={style:{"text-align":"left"}},Ad=t("td",{style:{"text-align":"center"}},"230",-1),Jd={style:{"text-align":"left"}},Xd={href:"https://leetcode.com/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},$d={style:{"text-align":"center"}},t_={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0230",target:"_blank",rel:"noopener noreferrer"},e_={style:{"text-align":"left"}},o_=t("code",null,"树",-1),l_=t("code",null,"深度优先搜索",-1),n_=t("code",null,"二叉搜索树",-1),s_=t("code",null,"1+",-1),d_={style:{"text-align":"left"}},__=t("td",{style:{"text-align":"center"}},"235",-1),c_={style:{"text-align":"left"}},i_={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},r_={style:{"text-align":"center"}},a_={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0235",target:"_blank",rel:"noopener noreferrer"},h_={style:{"text-align":"left"}},u_=t("code",null,"树",-1),f_=t("code",null,"深度优先搜索",-1),g_=t("code",null,"二叉搜索树",-1),m_=t("code",null,"1+",-1),y_={style:{"text-align":"left"}},x_=t("td",{style:{"text-align":"center"}},"236",-1),b_={style:{"text-align":"left"}},p_={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},k_={style:{"text-align":"center"}},M_={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0236",target:"_blank",rel:"noopener noreferrer"},j_={style:{"text-align":"left"}},v_=t("code",null,"树",-1),I_=t("code",null,"深度优先搜索",-1),E_=t("code",null,"二叉树",-1),w_={style:{"text-align":"left"}},H_=t("td",{style:{"text-align":"center"}},"250",-1),z_={style:{"text-align":"left"}},O_={href:"https://leetcode.com/problems/count-univalue-subtrees",target:"_blank",rel:"noopener noreferrer"},q_=t("td",{style:{"text-align":"center"}},null,-1),N_={style:{"text-align":"left"}},L_=t("code",null,"树",-1),C_=t("code",null,"深度优先搜索",-1),P_=t("code",null,"二叉树",-1),K_={style:{"text-align":"left"}},B_=t("td",{style:{"text-align":"center"}},"255",-1),T_={style:{"text-align":"left"}},V_={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},U_=t("td",{style:{"text-align":"center"}},null,-1),R_={style:{"text-align":"left"}},W_=t("code",null,"栈",-1),G_=t("code",null,"树",-1),Y_=t("code",null,"二叉搜索树",-1),Q_=t("code",null,"4+",-1),S_={style:{"text-align":"left"}},D_=t("td",{style:{"text-align":"center"}},"257",-1),F_={style:{"text-align":"left"}},Z_={href:"https://leetcode.com/problems/binary-tree-paths",target:"_blank",rel:"noopener noreferrer"},A_={style:{"text-align":"center"}},J_={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0257",target:"_blank",rel:"noopener noreferrer"},X_={style:{"text-align":"left"}},$_=t("code",null,"树",-1),tc=t("code",null,"深度优先搜索",-1),ec=t("code",null,"字符串",-1),oc=t("code",null,"2+",-1),lc={style:{"text-align":"left"}},nc=t("td",{style:{"text-align":"center"}},"270",-1),sc={style:{"text-align":"left"}},dc={href:"https://leetcode.com/problems/closest-binary-search-tree-value",target:"_blank",rel:"noopener noreferrer"},_c=t("td",{style:{"text-align":"center"}},null,-1),cc={style:{"text-align":"left"}},ic=t("code",null,"树",-1),rc=t("code",null,"深度优先搜索",-1),ac=t("code",null,"二叉搜索树",-1),hc=t("code",null,"2+",-1),uc={style:{"text-align":"left"}},fc=t("td",{style:{"text-align":"center"}},"272",-1),gc={style:{"text-align":"left"}},mc={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},yc=t("td",{style:{"text-align":"center"}},null,-1),xc={style:{"text-align":"left"}},bc=t("code",null,"栈",-1),pc=t("code",null,"树",-1),kc=t("code",null,"深度优先搜索",-1),Mc=t("code",null,"4+",-1),jc={style:{"text-align":"left"}},vc=t("td",{style:{"text-align":"center"}},"285",-1),Ic={style:{"text-align":"left"}},Ec={href:"https://leetcode.com/problems/inorder-successor-in-bst",target:"_blank",rel:"noopener noreferrer"},wc=t("td",{style:{"text-align":"center"}},null,-1),Hc={style:{"text-align":"left"}},zc=t("code",null,"树",-1),Oc=t("code",null,"深度优先搜索",-1),qc=t("code",null,"二叉搜索树",-1),Nc=t("code",null,"1+",-1),Lc={style:{"text-align":"left"}},Cc=t("td",{style:{"text-align":"center"}},"297",-1),Pc={style:{"text-align":"left"}},Kc={href:"https://leetcode.com/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},Bc={style:{"text-align":"center"}},Tc={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0297",target:"_blank",rel:"noopener noreferrer"},Vc={style:{"text-align":"left"}},Uc=t("code",null,"树",-1),Rc=t("code",null,"深度优先搜索",-1),Wc=t("code",null,"广度优先搜索",-1),Gc=t("code",null,"3+",-1),Yc={style:{"text-align":"left"}},Qc=t("td",{style:{"text-align":"center"}},"298",-1),Sc={style:{"text-align":"left"}},Dc={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",target:"_blank",rel:"noopener noreferrer"},Fc=t("td",{style:{"text-align":"center"}},null,-1),Zc={style:{"text-align":"left"}},Ac=t("code",null,"树",-1),Jc=t("code",null,"深度优先搜索",-1),Xc=t("code",null,"二叉树",-1),$c={style:{"text-align":"left"}},ti=t("td",{style:{"text-align":"center"}},"314",-1),ei={style:{"text-align":"left"}},oi={href:"https://leetcode.com/problems/binary-tree-vertical-order-traversal",target:"_blank",rel:"noopener noreferrer"},li=t("td",{style:{"text-align":"center"}},null,-1),ni={style:{"text-align":"left"}},si=t("code",null,"树",-1),di=t("code",null,"深度优先搜索",-1),_i=t("code",null,"广度优先搜索",-1),ci=t("code",null,"3+",-1),ii={style:{"text-align":"left"}},ri=t("td",{style:{"text-align":"center"}},"331",-1),ai={style:{"text-align":"left"}},hi={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ui=t("td",{style:{"text-align":"center"}},null,-1),fi={style:{"text-align":"left"}},gi=t("code",null,"栈",-1),mi=t("code",null,"树",-1),yi=t("code",null,"字符串",-1),xi=t("code",null,"1+",-1),bi={style:{"text-align":"left"}},pi=t("td",{style:{"text-align":"center"}},"333",-1),ki={style:{"text-align":"left"}},Mi={href:"https://leetcode.com/problems/largest-bst-subtree",target:"_blank",rel:"noopener noreferrer"},ji=t("td",{style:{"text-align":"center"}},null,-1),vi={style:{"text-align":"left"}},Ii=t("code",null,"树",-1),Ei=t("code",null,"深度优先搜索",-1),wi=t("code",null,"二叉搜索树",-1),Hi=t("code",null,"2+",-1),zi={style:{"text-align":"left"}},Oi=t("td",{style:{"text-align":"center"}},"337",-1),qi={style:{"text-align":"left"}},Ni={href:"https://leetcode.com/problems/house-robber-iii",target:"_blank",rel:"noopener noreferrer"},Li=t("td",{style:{"text-align":"center"}},null,-1),Ci={style:{"text-align":"left"}},Pi=t("code",null,"树",-1),Ki=t("code",null,"深度优先搜索",-1),Bi=t("code",null,"动态规划",-1),Ti=t("code",null,"1+",-1),Vi={style:{"text-align":"left"}},Ui=t("td",{style:{"text-align":"center"}},"341",-1),Ri={style:{"text-align":"left"}},Wi={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},Gi=t("td",{style:{"text-align":"center"}},null,-1),Yi={style:{"text-align":"left"}},Qi=t("code",null,"栈",-1),Si=t("code",null,"树",-1),Di=t("code",null,"深度优先搜索",-1),Fi=t("code",null,"3+",-1),Zi={style:{"text-align":"left"}},Ai=t("td",{style:{"text-align":"center"}},"366",-1),Ji={style:{"text-align":"left"}},Xi={href:"https://leetcode.com/problems/find-leaves-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},$i={style:{"text-align":"center"}},tr={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0366",target:"_blank",rel:"noopener noreferrer"},er={style:{"text-align":"left"}},or=t("code",null,"树",-1),lr=t("code",null,"深度优先搜索",-1),nr=t("code",null,"二叉树",-1),sr={style:{"text-align":"left"}},dr=t("td",{style:{"text-align":"center"}},"404",-1),_r={style:{"text-align":"left"}},cr={href:"https://leetcode.com/problems/sum-of-left-leaves",target:"_blank",rel:"noopener noreferrer"},ir=t("td",{style:{"text-align":"center"}},null,-1),rr={style:{"text-align":"left"}},ar=t("code",null,"树",-1),hr=t("code",null,"深度优先搜索",-1),ur=t("code",null,"广度优先搜索",-1),fr=t("code",null,"1+",-1),gr={style:{"text-align":"left"}},mr=t("td",{style:{"text-align":"center"}},"426",-1),yr={style:{"text-align":"left"}},xr={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},br={style:{"text-align":"center"}},pr={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0426",target:"_blank",rel:"noopener noreferrer"},kr={style:{"text-align":"left"}},Mr=t("code",null,"栈",-1),jr=t("code",null,"树",-1),vr=t("code",null,"深度优先搜索",-1),Ir=t("code",null,"4+",-1),Er={style:{"text-align":"left"}},wr=t("td",{style:{"text-align":"center"}},"427",-1),Hr={style:{"text-align":"left"}},zr={href:"https://leetcode.com/problems/construct-quad-tree",target:"_blank",rel:"noopener noreferrer"},Or={style:{"text-align":"center"}},qr={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0427",target:"_blank",rel:"noopener noreferrer"},Nr={style:{"text-align":"left"}},Lr=t("code",null,"树",-1),Cr=t("code",null,"数组",-1),Pr=t("code",null,"分治",-1),Kr=t("code",null,"1+",-1),Br={style:{"text-align":"left"}},Tr=t("td",{style:{"text-align":"center"}},"428",-1),Vr={style:{"text-align":"left"}},Ur={href:"https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},Rr=t("td",{style:{"text-align":"center"}},null,-1),Wr={style:{"text-align":"left"}},Gr=t("code",null,"树",-1),Yr=t("code",null,"深度优先搜索",-1),Qr=t("code",null,"广度优先搜索",-1),Sr=t("code",null,"1+",-1),Dr={style:{"text-align":"left"}},Fr=t("td",{style:{"text-align":"center"}},"429",-1),Zr={style:{"text-align":"left"}},Ar={href:"https://leetcode.com/problems/n-ary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},Jr=t("td",{style:{"text-align":"center"}},null,-1),Xr={style:{"text-align":"left"}},$r=t("code",null,"树",-1),ta=t("code",null,"广度优先搜索",-1),ea={style:{"text-align":"left"}},oa=t("td",{style:{"text-align":"center"}},"431",-1),la={style:{"text-align":"left"}},na={href:"https://leetcode.com/problems/encode-n-ary-tree-to-binary-tree",target:"_blank",rel:"noopener noreferrer"},sa=t("td",{style:{"text-align":"center"}},null,-1),da={style:{"text-align":"left"}},_a=t("code",null,"树",-1),ca=t("code",null,"深度优先搜索",-1),ia=t("code",null,"广度优先搜索",-1),ra=t("code",null,"2+",-1),aa={style:{"text-align":"left"}},ha=t("td",{style:{"text-align":"center"}},"437",-1),ua={style:{"text-align":"left"}},fa={href:"https://leetcode.com/problems/path-sum-iii",target:"_blank",rel:"noopener noreferrer"},ga={style:{"text-align":"center"}},ma={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0437",target:"_blank",rel:"noopener noreferrer"},ya={style:{"text-align":"left"}},xa=t("code",null,"树",-1),ba=t("code",null,"深度优先搜索",-1),pa=t("code",null,"二叉树",-1),ka={style:{"text-align":"left"}},Ma=t("td",{style:{"text-align":"center"}},"449",-1),ja={style:{"text-align":"left"}},va={href:"https://leetcode.com/problems/serialize-and-deserialize-bst",target:"_blank",rel:"noopener noreferrer"},Ia=t("td",{style:{"text-align":"center"}},null,-1),Ea={style:{"text-align":"left"}},wa=t("code",null,"树",-1),Ha=t("code",null,"深度优先搜索",-1),za=t("code",null,"广度优先搜索",-1),Oa=t("code",null,"4+",-1),qa={style:{"text-align":"left"}},Na=t("td",{style:{"text-align":"center"}},"450",-1),La={style:{"text-align":"left"}},Ca={href:"https://leetcode.com/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Pa={style:{"text-align":"center"}},Ka={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0450",target:"_blank",rel:"noopener noreferrer"},Ba={style:{"text-align":"left"}},Ta=t("code",null,"树",-1),Va=t("code",null,"二叉搜索树",-1),Ua=t("code",null,"二叉树",-1),Ra={style:{"text-align":"left"}},Wa=t("td",{style:{"text-align":"center"}},"501",-1),Ga={style:{"text-align":"left"}},Ya={href:"https://leetcode.com/problems/find-mode-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Qa=t("td",{style:{"text-align":"center"}},null,-1),Sa={style:{"text-align":"left"}},Da=t("code",null,"树",-1),Fa=t("code",null,"深度优先搜索",-1),Za=t("code",null,"二叉搜索树",-1),Aa=t("code",null,"1+",-1),Ja={style:{"text-align":"left"}},Xa=t("td",{style:{"text-align":"center"}},"508",-1),$a={style:{"text-align":"left"}},th={href:"https://leetcode.com/problems/most-frequent-subtree-sum",target:"_blank",rel:"noopener noreferrer"},eh=t("td",{style:{"text-align":"center"}},null,-1),oh={style:{"text-align":"left"}},lh=t("code",null,"树",-1),nh=t("code",null,"深度优先搜索",-1),sh=t("code",null,"哈希表",-1),dh=t("code",null,"1+",-1),_h={style:{"text-align":"left"}},ch=t("td",{style:{"text-align":"center"}},"510",-1),ih={style:{"text-align":"left"}},rh={href:"https://leetcode.com/problems/inorder-successor-in-bst-ii",target:"_blank",rel:"noopener noreferrer"},ah=t("td",{style:{"text-align":"center"}},null,-1),hh={style:{"text-align":"left"}},uh=t("code",null,"树",-1),fh=t("code",null,"二叉搜索树",-1),gh=t("code",null,"二叉树",-1),mh={style:{"text-align":"left"}},yh=t("td",{style:{"text-align":"center"}},"513",-1),xh={style:{"text-align":"left"}},bh={href:"https://leetcode.com/problems/find-bottom-left-tree-value",target:"_blank",rel:"noopener noreferrer"},ph=t("td",{style:{"text-align":"center"}},null,-1),kh={style:{"text-align":"left"}},Mh=t("code",null,"树",-1),jh=t("code",null,"深度优先搜索",-1),vh=t("code",null,"广度优先搜索",-1),Ih=t("code",null,"1+",-1),Eh={style:{"text-align":"left"}},wh=t("td",{style:{"text-align":"center"}},"515",-1),Hh={style:{"text-align":"left"}},zh={href:"https://leetcode.com/problems/find-largest-value-in-each-tree-row",target:"_blank",rel:"noopener noreferrer"},Oh=t("td",{style:{"text-align":"center"}},null,-1),qh={style:{"text-align":"left"}},Nh=t("code",null,"树",-1),Lh=t("code",null,"深度优先搜索",-1),Ch=t("code",null,"广度优先搜索",-1),Ph=t("code",null,"1+",-1),Kh={style:{"text-align":"left"}},Bh=t("td",{style:{"text-align":"center"}},"530",-1),Th={style:{"text-align":"left"}},Vh={href:"https://leetcode.com/problems/minimum-absolute-difference-in-bst",target:"_blank",rel:"noopener noreferrer"},Uh={style:{"text-align":"center"}},Rh={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0530",target:"_blank",rel:"noopener noreferrer"},Wh={style:{"text-align":"left"}},Gh=t("code",null,"树",-1),Yh=t("code",null,"深度优先搜索",-1),Qh=t("code",null,"广度优先搜索",-1),Sh=t("code",null,"2+",-1),Dh={style:{"text-align":"left"}},Fh=t("td",{style:{"text-align":"center"}},"536",-1),Zh={style:{"text-align":"left"}},Ah={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},Jh=t("td",{style:{"text-align":"center"}},null,-1),Xh={style:{"text-align":"left"}},$h=t("code",null,"栈",-1),t1=t("code",null,"树",-1),e1=t("code",null,"深度优先搜索",-1),o1=t("code",null,"2+",-1),l1={style:{"text-align":"left"}},n1=t("td",{style:{"text-align":"center"}},"538",-1),s1={style:{"text-align":"left"}},d1={href:"https://leetcode.com/problems/convert-bst-to-greater-tree",target:"_blank",rel:"noopener noreferrer"},_1=t("td",{style:{"text-align":"center"}},null,-1),c1={style:{"text-align":"left"}},i1=t("code",null,"树",-1),r1=t("code",null,"深度优先搜索",-1),a1=t("code",null,"二叉搜索树",-1),h1=t("code",null,"1+",-1),u1={style:{"text-align":"left"}},f1=t("td",{style:{"text-align":"center"}},"543",-1),g1={style:{"text-align":"left"}},m1={href:"https://leetcode.com/problems/diameter-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},y1={style:{"text-align":"center"}},x1={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0543",target:"_blank",rel:"noopener noreferrer"},b1={style:{"text-align":"left"}},p1=t("code",null,"树",-1),k1=t("code",null,"深度优先搜索",-1),M1=t("code",null,"二叉树",-1),j1={style:{"text-align":"left"}},v1=t("td",{style:{"text-align":"center"}},"545",-1),I1={style:{"text-align":"left"}},E1={href:"https://leetcode.com/problems/boundary-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},w1=t("td",{style:{"text-align":"center"}},null,-1),H1={style:{"text-align":"left"}},z1=t("code",null,"树",-1),O1=t("code",null,"深度优先搜索",-1),q1=t("code",null,"二叉树",-1),N1={style:{"text-align":"left"}},L1=t("td",{style:{"text-align":"center"}},"549",-1),C1={style:{"text-align":"left"}},P1={href:"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii",target:"_blank",rel:"noopener noreferrer"},K1=t("td",{style:{"text-align":"center"}},null,-1),B1={style:{"text-align":"left"}},T1=t("code",null,"树",-1),V1=t("code",null,"深度优先搜索",-1),U1=t("code",null,"二叉树",-1),R1={style:{"text-align":"left"}},W1=t("td",{style:{"text-align":"center"}},"558",-1),G1={style:{"text-align":"left"}},Y1={href:"https://leetcode.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees",target:"_blank",rel:"noopener noreferrer"},Q1=t("td",{style:{"text-align":"center"}},null,-1),S1={style:{"text-align":"left"}},D1=t("code",null,"树",-1),F1=t("code",null,"分治",-1),Z1={style:{"text-align":"left"}},A1=t("td",{style:{"text-align":"center"}},"559",-1),J1={style:{"text-align":"left"}},X1={href:"https://leetcode.com/problems/maximum-depth-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},$1={style:{"text-align":"center"}},tu={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0559",target:"_blank",rel:"noopener noreferrer"},eu={style:{"text-align":"left"}},ou=t("code",null,"树",-1),lu=t("code",null,"深度优先搜索",-1),nu=t("code",null,"广度优先搜索",-1),su={style:{"text-align":"left"}},du=t("td",{style:{"text-align":"center"}},"563",-1),_u={style:{"text-align":"left"}},cu={href:"https://leetcode.com/problems/binary-tree-tilt",target:"_blank",rel:"noopener noreferrer"},iu=t("td",{style:{"text-align":"center"}},null,-1),ru={style:{"text-align":"left"}},au=t("code",null,"树",-1),hu=t("code",null,"深度优先搜索",-1),uu=t("code",null,"二叉树",-1),fu={style:{"text-align":"left"}},gu=t("td",{style:{"text-align":"center"}},"572",-1),mu={style:{"text-align":"left"}},yu={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},xu={style:{"text-align":"center"}},bu={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0572",target:"_blank",rel:"noopener noreferrer"},pu={style:{"text-align":"left"}},ku=t("code",null,"树",-1),Mu=t("code",null,"深度优先搜索",-1),ju=t("code",null,"二叉树",-1),vu=t("code",null,"2+",-1),Iu={style:{"text-align":"left"}},Eu=t("td",{style:{"text-align":"center"}},"582",-1),wu={style:{"text-align":"left"}},Hu={href:"https://leetcode.com/problems/kill-process",target:"_blank",rel:"noopener noreferrer"},zu=t("td",{style:{"text-align":"center"}},null,-1),Ou={style:{"text-align":"left"}},qu=t("code",null,"树",-1),Nu=t("code",null,"深度优先搜索",-1),Lu=t("code",null,"广度优先搜索",-1),Cu=t("code",null,"2+",-1),Pu={style:{"text-align":"left"}},Ku=t("td",{style:{"text-align":"center"}},"589",-1),Bu={style:{"text-align":"left"}},Tu={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Vu={style:{"text-align":"center"}},Uu={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0589",target:"_blank",rel:"noopener noreferrer"},Ru={style:{"text-align":"left"}},Wu=t("code",null,"栈",-1),Gu=t("code",null,"树",-1),Yu=t("code",null,"深度优先搜索",-1),Qu={style:{"text-align":"left"}},Su=t("td",{style:{"text-align":"center"}},"590",-1),Du={style:{"text-align":"left"}},Fu={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Zu={style:{"text-align":"center"}},Au={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0590",target:"_blank",rel:"noopener noreferrer"},Ju={style:{"text-align":"left"}},Xu=t("code",null,"栈",-1),$u=t("code",null,"树",-1),tf=t("code",null,"深度优先搜索",-1),ef={style:{"text-align":"left"}},of=t("td",{style:{"text-align":"center"}},"606",-1),lf={style:{"text-align":"left"}},nf={href:"https://leetcode.com/problems/construct-string-from-binary-tree",target:"_blank",rel:"noopener noreferrer"},sf=t("td",{style:{"text-align":"center"}},null,-1),df={style:{"text-align":"left"}},_f=t("code",null,"树",-1),cf=t("code",null,"深度优先搜索",-1),rf=t("code",null,"字符串",-1),af=t("code",null,"1+",-1),hf={style:{"text-align":"left"}},uf=t("td",{style:{"text-align":"center"}},"617",-1),ff={style:{"text-align":"left"}},gf={href:"https://leetcode.com/problems/merge-two-binary-trees",target:"_blank",rel:"noopener noreferrer"},mf={style:{"text-align":"center"}},yf={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0617",target:"_blank",rel:"noopener noreferrer"},xf={style:{"text-align":"left"}},bf=t("code",null,"树",-1),pf=t("code",null,"深度优先搜索",-1),kf=t("code",null,"广度优先搜索",-1),Mf=t("code",null,"1+",-1),jf={style:{"text-align":"left"}},vf=t("td",{style:{"text-align":"center"}},"623",-1),If={style:{"text-align":"left"}},Ef={href:"https://leetcode.com/problems/add-one-row-to-tree",target:"_blank",rel:"noopener noreferrer"},wf=t("td",{style:{"text-align":"center"}},null,-1),Hf={style:{"text-align":"left"}},zf=t("code",null,"树",-1),Of=t("code",null,"深度优先搜索",-1),qf=t("code",null,"广度优先搜索",-1),Nf=t("code",null,"1+",-1),Lf={style:{"text-align":"left"}},Cf=t("td",{style:{"text-align":"center"}},"637",-1),Pf={style:{"text-align":"left"}},Kf={href:"https://leetcode.com/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Bf={style:{"text-align":"center"}},Tf={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0637",target:"_blank",rel:"noopener noreferrer"},Vf={style:{"text-align":"left"}},Uf=t("code",null,"树",-1),Rf=t("code",null,"深度优先搜索",-1),Wf=t("code",null,"广度优先搜索",-1),Gf=t("code",null,"1+",-1),Yf={style:{"text-align":"left"}},Qf=t("td",{style:{"text-align":"center"}},"652",-1),Sf={style:{"text-align":"left"}},Df={href:"https://leetcode.com/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},Ff=t("td",{style:{"text-align":"center"}},null,-1),Zf={style:{"text-align":"left"}},Af=t("code",null,"树",-1),Jf=t("code",null,"深度优先搜索",-1),Xf=t("code",null,"哈希表",-1),$f=t("code",null,"1+",-1),tg={style:{"text-align":"left"}},eg=t("td",{style:{"text-align":"center"}},"653",-1),og={style:{"text-align":"left"}},lg={href:"https://leetcode.com/problems/two-sum-iv-input-is-a-bst",target:"_blank",rel:"noopener noreferrer"},ng=t("td",{style:{"text-align":"center"}},null,-1),sg={style:{"text-align":"left"}},dg=t("code",null,"树",-1),_g=t("code",null,"深度优先搜索",-1),cg=t("code",null,"广度优先搜索",-1),ig=t("code",null,"4+",-1),rg={style:{"text-align":"left"}},ag=t("td",{style:{"text-align":"center"}},"654",-1),hg={style:{"text-align":"left"}},ug={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},fg={style:{"text-align":"center"}},gg={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0654",target:"_blank",rel:"noopener noreferrer"},mg={style:{"text-align":"left"}},yg=t("code",null,"栈",-1),xg=t("code",null,"树",-1),bg=t("code",null,"数组",-1),pg=t("code",null,"3+",-1),kg={style:{"text-align":"left"}},Mg=t("td",{style:{"text-align":"center"}},"655",-1),jg={style:{"text-align":"left"}},vg={href:"https://leetcode.com/problems/print-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ig=t("td",{style:{"text-align":"center"}},null,-1),Eg={style:{"text-align":"left"}},wg=t("code",null,"树",-1),Hg=t("code",null,"深度优先搜索",-1),zg=t("code",null,"广度优先搜索",-1),Og=t("code",null,"1+",-1),qg={style:{"text-align":"left"}},Ng=t("td",{style:{"text-align":"center"}},"662",-1),Lg={style:{"text-align":"left"}},Cg={href:"https://leetcode.com/problems/maximum-width-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},Pg={style:{"text-align":"center"}},Kg={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0662",target:"_blank",rel:"noopener noreferrer"},Bg={style:{"text-align":"left"}},Tg=t("code",null,"树",-1),Vg=t("code",null,"深度优先搜索",-1),Ug=t("code",null,"广度优先搜索",-1),Rg=t("code",null,"1+",-1),Wg={style:{"text-align":"left"}},Gg=t("td",{style:{"text-align":"center"}},"663",-1),Yg={style:{"text-align":"left"}},Qg={href:"https://leetcode.com/problems/equal-tree-partition",target:"_blank",rel:"noopener noreferrer"},Sg=t("td",{style:{"text-align":"center"}},null,-1),Dg={style:{"text-align":"left"}},Fg=t("code",null,"树",-1),Zg=t("code",null,"深度优先搜索",-1),Ag=t("code",null,"二叉树",-1),Jg={style:{"text-align":"left"}},Xg=t("td",{style:{"text-align":"center"}},"666",-1),$g={style:{"text-align":"left"}},t2={href:"https://leetcode.com/problems/path-sum-iv",target:"_blank",rel:"noopener noreferrer"},e2=t("td",{style:{"text-align":"center"}},null,-1),o2={style:{"text-align":"left"}},l2=t("code",null,"树",-1),n2=t("code",null,"深度优先搜索",-1),s2=t("code",null,"数组",-1),d2=t("code",null,"2+",-1),_2={style:{"text-align":"left"}},c2=t("td",{style:{"text-align":"center"}},"669",-1),i2={style:{"text-align":"left"}},r2={href:"https://leetcode.com/problems/trim-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},a2=t("td",{style:{"text-align":"center"}},null,-1),h2={style:{"text-align":"left"}},u2=t("code",null,"树",-1),f2=t("code",null,"深度优先搜索",-1),g2=t("code",null,"二叉搜索树",-1),m2=t("code",null,"1+",-1),y2={style:{"text-align":"left"}},x2=t("td",{style:{"text-align":"center"}},"671",-1),b2={style:{"text-align":"left"}},p2={href:"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},k2=t("td",{style:{"text-align":"center"}},null,-1),M2={style:{"text-align":"left"}},j2=t("code",null,"树",-1),v2=t("code",null,"深度优先搜索",-1),I2=t("code",null,"二叉树",-1),E2={style:{"text-align":"left"}},w2=t("td",{style:{"text-align":"center"}},"687",-1),H2={style:{"text-align":"left"}},z2={href:"https://leetcode.com/problems/longest-univalue-path",target:"_blank",rel:"noopener noreferrer"},O2=t("td",{style:{"text-align":"center"}},null,-1),q2={style:{"text-align":"left"}},N2=t("code",null,"树",-1),L2=t("code",null,"深度优先搜索",-1),C2=t("code",null,"二叉树",-1),P2={style:{"text-align":"left"}},K2=t("td",{style:{"text-align":"center"}},"690",-1),B2={style:{"text-align":"left"}},T2={href:"https://leetcode.com/problems/employee-importance",target:"_blank",rel:"noopener noreferrer"},V2=t("td",{style:{"text-align":"center"}},null,-1),U2={style:{"text-align":"left"}},R2=t("code",null,"树",-1),W2=t("code",null,"深度优先搜索",-1),G2=t("code",null,"广度优先搜索",-1),Y2=t("code",null,"2+",-1),Q2={style:{"text-align":"left"}},S2=t("td",{style:{"text-align":"center"}},"700",-1),D2={style:{"text-align":"left"}},F2={href:"https://leetcode.com/problems/search-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Z2={style:{"text-align":"center"}},A2={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0700",target:"_blank",rel:"noopener noreferrer"},J2={style:{"text-align":"left"}},X2=t("code",null,"树",-1),$2=t("code",null,"二叉搜索树",-1),tm=t("code",null,"二叉树",-1),em={style:{"text-align":"left"}},om=t("td",{style:{"text-align":"center"}},"701",-1),lm={style:{"text-align":"left"}},nm={href:"https://leetcode.com/problems/insert-into-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},sm={style:{"text-align":"center"}},dm={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0701",target:"_blank",rel:"noopener noreferrer"},_m={style:{"text-align":"left"}},cm=t("code",null,"树",-1),im=t("code",null,"二叉搜索树",-1),rm=t("code",null,"二叉树",-1),am={style:{"text-align":"left"}},hm=t("td",{style:{"text-align":"center"}},"703",-1),um={style:{"text-align":"left"}},fm={href:"https://leetcode.com/problems/kth-largest-element-in-a-stream",target:"_blank",rel:"noopener noreferrer"},gm={style:{"text-align":"center"}},mm={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0703",target:"_blank",rel:"noopener noreferrer"},ym={style:{"text-align":"left"}},xm=t("code",null,"树",-1),bm=t("code",null,"设计",-1),pm=t("code",null,"二叉搜索树",-1),km=t("code",null,"3+",-1),Mm={style:{"text-align":"left"}},jm=t("td",{style:{"text-align":"center"}},"742",-1),vm={style:{"text-align":"left"}},Im={href:"https://leetcode.com/problems/closest-leaf-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Em=t("td",{style:{"text-align":"center"}},null,-1),wm={style:{"text-align":"left"}},Hm=t("code",null,"树",-1),zm=t("code",null,"深度优先搜索",-1),Om=t("code",null,"广度优先搜索",-1),qm=t("code",null,"1+",-1),Nm={style:{"text-align":"left"}},Lm=t("td",{style:{"text-align":"center"}},"776",-1),Cm={style:{"text-align":"left"}},Pm={href:"https://leetcode.com/problems/split-bst",target:"_blank",rel:"noopener noreferrer"},Km=t("td",{style:{"text-align":"center"}},null,-1),Bm={style:{"text-align":"left"}},Tm=t("code",null,"树",-1),Vm=t("code",null,"二叉搜索树",-1),Um=t("code",null,"递归",-1),Rm=t("code",null,"1+",-1),Wm={style:{"text-align":"left"}},Gm=t("td",{style:{"text-align":"center"}},"783",-1),Ym={style:{"text-align":"left"}},Qm={href:"https://leetcode.com/problems/minimum-distance-between-bst-nodes",target:"_blank",rel:"noopener noreferrer"},Sm={style:{"text-align":"center"}},Dm={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0783",target:"_blank",rel:"noopener noreferrer"},Fm={style:{"text-align":"left"}},Zm=t("code",null,"树",-1),Am=t("code",null,"深度优先搜索",-1),Jm=t("code",null,"广度优先搜索",-1),Xm=t("code",null,"2+",-1),$m={style:{"text-align":"left"}},ty=t("td",{style:{"text-align":"center"}},"814",-1),ey={style:{"text-align":"left"}},oy={href:"https://leetcode.com/problems/binary-tree-pruning",target:"_blank",rel:"noopener noreferrer"},ly=t("td",{style:{"text-align":"center"}},null,-1),ny={style:{"text-align":"left"}},sy=t("code",null,"树",-1),dy=t("code",null,"深度优先搜索",-1),_y=t("code",null,"二叉树",-1),cy={style:{"text-align":"left"}},iy=t("td",{style:{"text-align":"center"}},"834",-1),ry={style:{"text-align":"left"}},ay={href:"https://leetcode.com/problems/sum-of-distances-in-tree",target:"_blank",rel:"noopener noreferrer"},hy=t("td",{style:{"text-align":"center"}},null,-1),uy={style:{"text-align":"left"}},fy=t("code",null,"树",-1),gy=t("code",null,"深度优先搜索",-1),my=t("code",null,"图",-1),yy=t("code",null,"1+",-1),xy={style:{"text-align":"left"}},by=t("td",{style:{"text-align":"center"}},"863",-1),py={style:{"text-align":"left"}},ky={href:"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},My=t("td",{style:{"text-align":"center"}},null,-1),jy={style:{"text-align":"left"}},vy=t("code",null,"树",-1),Iy=t("code",null,"深度优先搜索",-1),Ey=t("code",null,"广度优先搜索",-1),wy=t("code",null,"2+",-1),Hy={style:{"text-align":"left"}},zy=t("td",{style:{"text-align":"center"}},"865",-1),Oy={style:{"text-align":"left"}},qy={href:"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",target:"_blank",rel:"noopener noreferrer"},Ny=t("td",{style:{"text-align":"center"}},null,-1),Ly={style:{"text-align":"left"}},Cy=t("code",null,"树",-1),Py=t("code",null,"深度优先搜索",-1),Ky=t("code",null,"广度优先搜索",-1),By=t("code",null,"2+",-1),Ty={style:{"text-align":"left"}},Vy=t("td",{style:{"text-align":"center"}},"872",-1),Uy={style:{"text-align":"left"}},Ry={href:"https://leetcode.com/problems/leaf-similar-trees",target:"_blank",rel:"noopener noreferrer"},Wy=t("td",{style:{"text-align":"center"}},null,-1),Gy={style:{"text-align":"left"}},Yy=t("code",null,"树",-1),Qy=t("code",null,"深度优先搜索",-1),Sy=t("code",null,"二叉树",-1),Dy={style:{"text-align":"left"}},Fy=t("td",{style:{"text-align":"center"}},"889",-1),Zy={style:{"text-align":"left"}},Ay={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},Jy={style:{"text-align":"center"}},Xy={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0889",target:"_blank",rel:"noopener noreferrer"},$y={style:{"text-align":"left"}},tx=t("code",null,"树",-1),ex=t("code",null,"数组",-1),ox=t("code",null,"哈希表",-1),lx=t("code",null,"2+",-1),nx={style:{"text-align":"left"}},sx=t("td",{style:{"text-align":"center"}},"894",-1),dx={style:{"text-align":"left"}},_x={href:"https://leetcode.com/problems/all-possible-full-binary-trees",target:"_blank",rel:"noopener noreferrer"},cx=t("td",{style:{"text-align":"center"}},null,-1),ix={style:{"text-align":"left"}},rx=t("code",null,"树",-1),ax=t("code",null,"递归",-1),hx=t("code",null,"记忆化搜索",-1),ux=t("code",null,"2+",-1),fx={style:{"text-align":"left"}},gx=t("td",{style:{"text-align":"center"}},"897",-1),mx={style:{"text-align":"left"}},yx={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},xx=t("td",{style:{"text-align":"center"}},null,-1),bx={style:{"text-align":"left"}},px=t("code",null,"栈",-1),kx=t("code",null,"树",-1),Mx=t("code",null,"深度优先搜索",-1),jx=t("code",null,"2+",-1),vx={style:{"text-align":"left"}},Ix=t("td",{style:{"text-align":"center"}},"919",-1),Ex={style:{"text-align":"left"}},wx={href:"https://leetcode.com/problems/complete-binary-tree-inserter",target:"_blank",rel:"noopener noreferrer"},Hx=t("td",{style:{"text-align":"center"}},null,-1),zx={style:{"text-align":"left"}},Ox=t("code",null,"树",-1),qx=t("code",null,"广度优先搜索",-1),Nx=t("code",null,"设计",-1),Lx=t("code",null,"1+",-1),Cx={style:{"text-align":"left"}},Px=t("td",{style:{"text-align":"center"}},"938",-1),Kx={style:{"text-align":"left"}},Bx={href:"https://leetcode.com/problems/range-sum-of-bst",target:"_blank",rel:"noopener noreferrer"},Tx=t("td",{style:{"text-align":"center"}},null,-1),Vx={style:{"text-align":"left"}},Ux=t("code",null,"树",-1),Rx=t("code",null,"深度优先搜索",-1),Wx=t("code",null,"二叉搜索树",-1),Gx=t("code",null,"1+",-1),Yx={style:{"text-align":"left"}},Qx=t("td",{style:{"text-align":"center"}},"951",-1),Sx={style:{"text-align":"left"}},Dx={href:"https://leetcode.com/problems/flip-equivalent-binary-trees",target:"_blank",rel:"noopener noreferrer"},Fx=t("td",{style:{"text-align":"center"}},null,-1),Zx={style:{"text-align":"left"}},Ax=t("code",null,"树",-1),Jx=t("code",null,"深度优先搜索",-1),Xx=t("code",null,"二叉树",-1),$x={style:{"text-align":"left"}},tb=t("td",{style:{"text-align":"center"}},"958",-1),eb={style:{"text-align":"left"}},ob={href:"https://leetcode.com/problems/check-completeness-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},lb={style:{"text-align":"center"}},nb={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0958",target:"_blank",rel:"noopener noreferrer"},sb={style:{"text-align":"left"}},db=t("code",null,"树",-1),_b=t("code",null,"广度优先搜索",-1),cb=t("code",null,"二叉树",-1),ib={style:{"text-align":"left"}},rb=t("td",{style:{"text-align":"center"}},"965",-1),ab={style:{"text-align":"left"}},hb={href:"https://leetcode.com/problems/univalued-binary-tree",target:"_blank",rel:"noopener noreferrer"},ub=t("td",{style:{"text-align":"center"}},null,-1),fb={style:{"text-align":"left"}},gb=t("code",null,"树",-1),mb=t("code",null,"深度优先搜索",-1),yb=t("code",null,"广度优先搜索",-1),xb=t("code",null,"1+",-1),bb={style:{"text-align":"left"}},pb=t("td",{style:{"text-align":"center"}},"968",-1),kb={style:{"text-align":"left"}},Mb={href:"https://leetcode.com/problems/binary-tree-cameras",target:"_blank",rel:"noopener noreferrer"},jb=t("td",{style:{"text-align":"center"}},null,-1),vb={style:{"text-align":"left"}},Ib=t("code",null,"树",-1),Eb=t("code",null,"深度优先搜索",-1),wb=t("code",null,"动态规划",-1),Hb=t("code",null,"1+",-1),zb={style:{"text-align":"left"}},Ob=t("td",{style:{"text-align":"center"}},"971",-1),qb={style:{"text-align":"left"}},Nb={href:"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Lb=t("td",{style:{"text-align":"center"}},null,-1),Cb={style:{"text-align":"left"}},Pb=t("code",null,"树",-1),Kb=t("code",null,"深度优先搜索",-1),Bb=t("code",null,"二叉树",-1),Tb={style:{"text-align":"left"}},Vb=t("td",{style:{"text-align":"center"}},"979",-1),Ub={style:{"text-align":"left"}},Rb={href:"https://leetcode.com/problems/distribute-coins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wb=t("td",{style:{"text-align":"center"}},null,-1),Gb={style:{"text-align":"left"}},Yb=t("code",null,"树",-1),Qb=t("code",null,"深度优先搜索",-1),Sb=t("code",null,"二叉树",-1),Db={style:{"text-align":"left"}},Fb=t("td",{style:{"text-align":"center"}},"987",-1),Zb={style:{"text-align":"left"}},Ab={href:"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Jb=t("td",{style:{"text-align":"center"}},null,-1),Xb={style:{"text-align":"left"}},$b=t("code",null,"树",-1),tp=t("code",null,"深度优先搜索",-1),ep=t("code",null,"广度优先搜索",-1),op=t("code",null,"3+",-1),lp={style:{"text-align":"left"}},np=t("td",{style:{"text-align":"center"}},"988",-1),sp={style:{"text-align":"left"}},dp={href:"https://leetcode.com/problems/smallest-string-starting-from-leaf",target:"_blank",rel:"noopener noreferrer"},_p=t("td",{style:{"text-align":"center"}},null,-1),cp={style:{"text-align":"left"}},ip=t("code",null,"树",-1),rp=t("code",null,"深度优先搜索",-1),ap=t("code",null,"字符串",-1),hp=t("code",null,"2+",-1),up={style:{"text-align":"left"}},fp=t("td",{style:{"text-align":"center"}},"993",-1),gp={style:{"text-align":"left"}},mp={href:"https://leetcode.com/problems/cousins-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},yp=t("td",{style:{"text-align":"center"}},null,-1),xp={style:{"text-align":"left"}},bp=t("code",null,"树",-1),pp=t("code",null,"深度优先搜索",-1),kp=t("code",null,"广度优先搜索",-1),Mp=t("code",null,"1+",-1),jp={style:{"text-align":"left"}},vp=t("td",{style:{"text-align":"center"}},"998",-1),Ip={style:{"text-align":"left"}},Ep={href:"https://leetcode.com/problems/maximum-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},wp=t("td",{style:{"text-align":"center"}},null,-1),Hp={style:{"text-align":"left"}},zp=t("code",null,"树",-1),Op=t("code",null,"二叉树",-1),qp={style:{"text-align":"left"}},Np=t("td",{style:{"text-align":"center"}},"1008",-1),Lp={style:{"text-align":"left"}},Cp={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},Pp={style:{"text-align":"center"}},Kp={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1008",target:"_blank",rel:"noopener noreferrer"},Bp={style:{"text-align":"left"}},Tp=t("code",null,"栈",-1),Vp=t("code",null,"树",-1),Up=t("code",null,"二叉搜索树",-1),Rp=t("code",null,"3+",-1),Wp={style:{"text-align":"left"}},Gp=t("td",{style:{"text-align":"center"}},"1022",-1),Yp={style:{"text-align":"left"}},Qp={href:"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers",target:"_blank",rel:"noopener noreferrer"},Sp=t("td",{style:{"text-align":"center"}},null,-1),Dp={style:{"text-align":"left"}},Fp=t("code",null,"树",-1),Zp=t("code",null,"深度优先搜索",-1),Ap=t("code",null,"二叉树",-1),Jp={style:{"text-align":"left"}},Xp=t("td",{style:{"text-align":"center"}},"1026",-1),$p={style:{"text-align":"left"}},t0={href:"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor",target:"_blank",rel:"noopener noreferrer"},e0=t("td",{style:{"text-align":"center"}},null,-1),o0={style:{"text-align":"left"}},l0=t("code",null,"树",-1),n0=t("code",null,"深度优先搜索",-1),s0=t("code",null,"二叉树",-1),d0={style:{"text-align":"left"}},_0=t("td",{style:{"text-align":"center"}},"1028",-1),c0={style:{"text-align":"left"}},i0={href:"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},r0=t("td",{style:{"text-align":"center"}},null,-1),a0={style:{"text-align":"left"}},h0=t("code",null,"树",-1),u0=t("code",null,"深度优先搜索",-1),f0=t("code",null,"字符串",-1),g0=t("code",null,"1+",-1),m0={style:{"text-align":"left"}},y0=t("td",{style:{"text-align":"center"}},"1038",-1),x0={style:{"text-align":"left"}},b0={href:"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree",target:"_blank",rel:"noopener noreferrer"},p0=t("td",{style:{"text-align":"center"}},null,-1),k0={style:{"text-align":"left"}},M0=t("code",null,"树",-1),j0=t("code",null,"深度优先搜索",-1),v0=t("code",null,"二叉搜索树",-1),I0=t("code",null,"1+",-1),E0={style:{"text-align":"left"}},w0=t("td",{style:{"text-align":"center"}},"1080",-1),H0={style:{"text-align":"left"}},z0={href:"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths",target:"_blank",rel:"noopener noreferrer"},O0=t("td",{style:{"text-align":"center"}},null,-1),q0={style:{"text-align":"left"}},N0=t("code",null,"树",-1),L0=t("code",null,"深度优先搜索",-1),C0=t("code",null,"二叉树",-1),P0={style:{"text-align":"left"}},K0=t("td",{style:{"text-align":"center"}},"1104",-1),B0={style:{"text-align":"left"}},T0={href:"https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree",target:"_blank",rel:"noopener noreferrer"},V0=t("td",{style:{"text-align":"center"}},null,-1),U0={style:{"text-align":"left"}},R0=t("code",null,"树",-1),W0=t("code",null,"数学",-1),G0=t("code",null,"二叉树",-1),Y0={style:{"text-align":"left"}},Q0=t("td",{style:{"text-align":"center"}},"1110",-1),S0={style:{"text-align":"left"}},D0={href:"https://leetcode.com/problems/delete-nodes-and-return-forest",target:"_blank",rel:"noopener noreferrer"},F0=t("td",{style:{"text-align":"center"}},null,-1),Z0={style:{"text-align":"left"}},A0=t("code",null,"树",-1),J0=t("code",null,"深度优先搜索",-1),X0=t("code",null,"数组",-1),$0=t("code",null,"2+",-1),t3={style:{"text-align":"left"}},e3=t("td",{style:{"text-align":"center"}},"1120",-1),o3={style:{"text-align":"left"}},l3={href:"https://leetcode.com/problems/maximum-average-subtree",target:"_blank",rel:"noopener noreferrer"},n3=t("td",{style:{"text-align":"center"}},null,-1),s3={style:{"text-align":"left"}},d3=t("code",null,"树",-1),_3=t("code",null,"深度优先搜索",-1),c3=t("code",null,"二叉树",-1),i3={style:{"text-align":"left"}},r3=t("td",{style:{"text-align":"center"}},"1123",-1),a3={style:{"text-align":"left"}},h3={href:"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves",target:"_blank",rel:"noopener noreferrer"},u3=t("td",{style:{"text-align":"center"}},null,-1),f3={style:{"text-align":"left"}},g3=t("code",null,"树",-1),m3=t("code",null,"深度优先搜索",-1),y3=t("code",null,"广度优先搜索",-1),x3=t("code",null,"2+",-1),b3={style:{"text-align":"left"}},p3=t("td",{style:{"text-align":"center"}},"1145",-1),k3={style:{"text-align":"left"}},M3={href:"https://leetcode.com/problems/binary-tree-coloring-game",target:"_blank",rel:"noopener noreferrer"},j3=t("td",{style:{"text-align":"center"}},null,-1),v3={style:{"text-align":"left"}},I3=t("code",null,"树",-1),E3=t("code",null,"深度优先搜索",-1),w3=t("code",null,"二叉树",-1),H3={style:{"text-align":"left"}},z3=t("td",{style:{"text-align":"center"}},"1161",-1),O3={style:{"text-align":"left"}},q3={href:"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},N3=t("td",{style:{"text-align":"center"}},null,-1),L3={style:{"text-align":"left"}},C3=t("code",null,"树",-1),P3=t("code",null,"深度优先搜索",-1),K3=t("code",null,"广度优先搜索",-1),B3=t("code",null,"1+",-1),T3={style:{"text-align":"left"}},V3=t("td",{style:{"text-align":"center"}},"1214",-1),U3={style:{"text-align":"left"}},R3={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},W3=t("td",{style:{"text-align":"center"}},null,-1),G3={style:{"text-align":"left"}},Y3=t("code",null,"栈",-1),Q3=t("code",null,"树",-1),S3=t("code",null,"深度优先搜索",-1),D3=t("code",null,"4+",-1),F3={style:{"text-align":"left"}},Z3=t("td",{style:{"text-align":"center"}},"1245",-1),A3={style:{"text-align":"left"}},J3={href:"https://leetcode.com/problems/tree-diameter",target:"_blank",rel:"noopener noreferrer"},X3=t("td",{style:{"text-align":"center"}},null,-1),$3={style:{"text-align":"left"}},t6=t("code",null,"树",-1),e6=t("code",null,"深度优先搜索",-1),o6=t("code",null,"广度优先搜索",-1),l6=t("code",null,"2+",-1),n6={style:{"text-align":"left"}},s6=t("td",{style:{"text-align":"center"}},"1257",-1),d6={style:{"text-align":"left"}},_6={href:"https://leetcode.com/problems/smallest-common-region",target:"_blank",rel:"noopener noreferrer"},c6=t("td",{style:{"text-align":"center"}},null,-1),i6={style:{"text-align":"left"}},r6=t("code",null,"树",-1),a6=t("code",null,"深度优先搜索",-1),h6=t("code",null,"广度优先搜索",-1),u6=t("code",null,"3+",-1),f6={style:{"text-align":"left"}},g6=t("td",{style:{"text-align":"center"}},"1261",-1),m6={style:{"text-align":"left"}},y6={href:"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree",target:"_blank",rel:"noopener noreferrer"},x6=t("td",{style:{"text-align":"center"}},null,-1),b6={style:{"text-align":"left"}},p6=t("code",null,"树",-1),k6=t("code",null,"深度优先搜索",-1),M6=t("code",null,"广度优先搜索",-1),j6=t("code",null,"3+",-1),v6={style:{"text-align":"left"}},I6=t("td",{style:{"text-align":"center"}},"1273",-1),E6={style:{"text-align":"left"}},w6={href:"https://leetcode.com/problems/delete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},H6=t("td",{style:{"text-align":"center"}},null,-1),z6={style:{"text-align":"left"}},O6=t("code",null,"树",-1),q6=t("code",null,"深度优先搜索",-1),N6=t("code",null,"广度优先搜索",-1),L6=t("code",null,"1+",-1),C6={style:{"text-align":"left"}},P6=t("td",{style:{"text-align":"center"}},"1302",-1),K6={style:{"text-align":"left"}},B6={href:"https://leetcode.com/problems/deepest-leaves-sum",target:"_blank",rel:"noopener noreferrer"},T6=t("td",{style:{"text-align":"center"}},null,-1),V6={style:{"text-align":"left"}},U6=t("code",null,"树",-1),R6=t("code",null,"深度优先搜索",-1),W6=t("code",null,"广度优先搜索",-1),G6=t("code",null,"1+",-1),Y6={style:{"text-align":"left"}},Q6=t("td",{style:{"text-align":"center"}},"1305",-1),S6={style:{"text-align":"left"}},D6={href:"https://leetcode.com/problems/all-elements-in-two-binary-search-trees",target:"_blank",rel:"noopener noreferrer"},F6=t("td",{style:{"text-align":"center"}},null,-1),Z6={style:{"text-align":"left"}},A6=t("code",null,"树",-1),J6=t("code",null,"深度优先搜索",-1),X6=t("code",null,"二叉搜索树",-1),$6=t("code",null,"2+",-1),t8={style:{"text-align":"left"}},e8=t("td",{style:{"text-align":"center"}},"1315",-1),o8={style:{"text-align":"left"}},l8={href:"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent",target:"_blank",rel:"noopener noreferrer"},n8=t("td",{style:{"text-align":"center"}},null,-1),s8={style:{"text-align":"left"}},d8=t("code",null,"树",-1),_8=t("code",null,"深度优先搜索",-1),c8=t("code",null,"广度优先搜索",-1),i8=t("code",null,"1+",-1),r8={style:{"text-align":"left"}},a8=t("td",{style:{"text-align":"center"}},"1325",-1),h8={style:{"text-align":"left"}},u8={href:"https://leetcode.com/problems/delete-leaves-with-a-given-value",target:"_blank",rel:"noopener noreferrer"},f8=t("td",{style:{"text-align":"center"}},null,-1),g8={style:{"text-align":"left"}},m8=t("code",null,"树",-1),y8=t("code",null,"深度优先搜索",-1),x8=t("code",null,"二叉树",-1),b8={style:{"text-align":"left"}},p8=t("td",{style:{"text-align":"center"}},"1339",-1),k8={style:{"text-align":"left"}},M8={href:"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree",target:"_blank",rel:"noopener noreferrer"},j8=t("td",{style:{"text-align":"center"}},null,-1),v8={style:{"text-align":"left"}},I8=t("code",null,"树",-1),E8=t("code",null,"深度优先搜索",-1),w8=t("code",null,"二叉树",-1),H8={style:{"text-align":"left"}},z8=t("td",{style:{"text-align":"center"}},"1361",-1),O8={style:{"text-align":"left"}},q8={href:"https://leetcode.com/problems/validate-binary-tree-nodes",target:"_blank",rel:"noopener noreferrer"},N8=t("td",{style:{"text-align":"center"}},null,-1),L8={style:{"text-align":"left"}},C8=t("code",null,"树",-1),P8=t("code",null,"深度优先搜索",-1),K8=t("code",null,"广度优先搜索",-1),B8=t("code",null,"3+",-1),T8={style:{"text-align":"left"}},V8=t("td",{style:{"text-align":"center"}},"1367",-1),U8={style:{"text-align":"left"}},R8={href:"https://leetcode.com/problems/linked-list-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},W8=t("td",{style:{"text-align":"center"}},null,-1),G8={style:{"text-align":"left"}},Y8=t("code",null,"树",-1),Q8=t("code",null,"深度优先搜索",-1),S8=t("code",null,"链表",-1),D8=t("code",null,"1+",-1),F8={style:{"text-align":"left"}},Z8=t("td",{style:{"text-align":"center"}},"1372",-1),A8={style:{"text-align":"left"}},J8={href:"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},X8=t("td",{style:{"text-align":"center"}},null,-1),$8={style:{"text-align":"left"}},t4=t("code",null,"树",-1),e4=t("code",null,"深度优先搜索",-1),o4=t("code",null,"动态规划",-1),l4=t("code",null,"1+",-1),n4={style:{"text-align":"left"}},s4=t("td",{style:{"text-align":"center"}},"1373",-1),d4={style:{"text-align":"left"}},_4={href:"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},c4=t("td",{style:{"text-align":"center"}},null,-1),i4={style:{"text-align":"left"}},r4=t("code",null,"树",-1),a4=t("code",null,"深度优先搜索",-1),h4=t("code",null,"二叉搜索树",-1),u4=t("code",null,"2+",-1),f4={style:{"text-align":"left"}},g4=t("td",{style:{"text-align":"center"}},"1376",-1),m4={style:{"text-align":"left"}},y4={href:"https://leetcode.com/problems/time-needed-to-inform-all-employees",target:"_blank",rel:"noopener noreferrer"},x4=t("td",{style:{"text-align":"center"}},null,-1),b4={style:{"text-align":"left"}},p4=t("code",null,"树",-1),k4=t("code",null,"深度优先搜索",-1),M4=t("code",null,"广度优先搜索",-1),j4={style:{"text-align":"left"}},v4=t("td",{style:{"text-align":"center"}},"1377",-1),I4={style:{"text-align":"left"}},E4={href:"https://leetcode.com/problems/frog-position-after-t-seconds",target:"_blank",rel:"noopener noreferrer"},w4=t("td",{style:{"text-align":"center"}},null,-1),H4={style:{"text-align":"left"}},z4=t("code",null,"树",-1),O4=t("code",null,"深度优先搜索",-1),q4=t("code",null,"广度优先搜索",-1),N4=t("code",null,"1+",-1),L4={style:{"text-align":"left"}},C4=t("td",{style:{"text-align":"center"}},"1379",-1),P4={style:{"text-align":"left"}},K4={href:"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",target:"_blank",rel:"noopener noreferrer"},B4=t("td",{style:{"text-align":"center"}},null,-1),T4={style:{"text-align":"left"}},V4=t("code",null,"树",-1),U4=t("code",null,"深度优先搜索",-1),R4=t("code",null,"广度优先搜索",-1),W4=t("code",null,"1+",-1),G4={style:{"text-align":"left"}},Y4=t("td",{style:{"text-align":"center"}},"1382",-1),Q4={style:{"text-align":"left"}},S4={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},D4=t("td",{style:{"text-align":"center"}},null,-1),F4={style:{"text-align":"left"}},Z4=t("code",null,"贪心",-1),A4=t("code",null,"树",-1),J4=t("code",null,"深度优先搜索",-1),X4=t("code",null,"3+",-1),$4={style:{"text-align":"left"}},t5=t("td",{style:{"text-align":"center"}},"1430",-1),e5={style:{"text-align":"left"}},o5={href:"https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},l5=t("td",{style:{"text-align":"center"}},null,-1),n5={style:{"text-align":"left"}},s5=t("code",null,"树",-1),d5=t("code",null,"深度优先搜索",-1),_5=t("code",null,"广度优先搜索",-1),c5=t("code",null,"1+",-1),i5={style:{"text-align":"left"}},r5=t("td",{style:{"text-align":"center"}},"1443",-1),a5={style:{"text-align":"left"}},h5={href:"https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree",target:"_blank",rel:"noopener noreferrer"},u5=t("td",{style:{"text-align":"center"}},null,-1),f5={style:{"text-align":"left"}},g5=t("code",null,"树",-1),m5=t("code",null,"深度优先搜索",-1),y5=t("code",null,"广度优先搜索",-1),x5=t("code",null,"1+",-1),b5={style:{"text-align":"left"}},p5=t("td",{style:{"text-align":"center"}},"1448",-1),k5={style:{"text-align":"left"}},M5={href:"https://leetcode.com/problems/count-good-nodes-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},j5=t("td",{style:{"text-align":"center"}},null,-1),v5={style:{"text-align":"left"}},I5=t("code",null,"树",-1),E5=t("code",null,"深度优先搜索",-1),w5=t("code",null,"广度优先搜索",-1),H5=t("code",null,"1+",-1),z5={style:{"text-align":"left"}},O5=t("td",{style:{"text-align":"center"}},"1457",-1),q5={style:{"text-align":"left"}},N5={href:"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},L5=t("td",{style:{"text-align":"center"}},null,-1),C5={style:{"text-align":"left"}},P5=t("code",null,"位运算",-1),K5=t("code",null,"树",-1),B5=t("code",null,"深度优先搜索",-1),T5=t("code",null,"2+",-1),V5={style:{"text-align":"left"}},U5=t("td",{style:{"text-align":"center"}},"1469",-1),R5={style:{"text-align":"left"}},W5={href:"https://leetcode.com/problems/find-all-the-lonely-nodes",target:"_blank",rel:"noopener noreferrer"},G5=t("td",{style:{"text-align":"center"}},null,-1),Y5={style:{"text-align":"left"}},Q5=t("code",null,"树",-1),S5=t("code",null,"深度优先搜索",-1),D5=t("code",null,"广度优先搜索",-1),F5=t("code",null,"1+",-1),Z5={style:{"text-align":"left"}},A5=t("td",{style:{"text-align":"center"}},"1483",-1),J5={style:{"text-align":"left"}},X5={href:"https://leetcode.com/problems/kth-ancestor-of-a-tree-node",target:"_blank",rel:"noopener noreferrer"},$5=t("td",{style:{"text-align":"center"}},null,-1),t7={style:{"text-align":"left"}},e7=t("code",null,"树",-1),o7=t("code",null,"深度优先搜索",-1),l7=t("code",null,"广度优先搜索",-1),n7=t("code",null,"3+",-1),s7={style:{"text-align":"left"}},d7=t("td",{style:{"text-align":"center"}},"1485",-1),_7={style:{"text-align":"left"}},c7={href:"https://leetcode.com/problems/clone-binary-tree-with-random-pointer",target:"_blank",rel:"noopener noreferrer"},i7=t("td",{style:{"text-align":"center"}},null,-1),r7={style:{"text-align":"left"}},a7=t("code",null,"树",-1),h7=t("code",null,"深度优先搜索",-1),u7=t("code",null,"广度优先搜索",-1),f7=t("code",null,"2+",-1),g7={style:{"text-align":"left"}},m7=t("td",{style:{"text-align":"center"}},"1490",-1),y7={style:{"text-align":"left"}},x7={href:"https://leetcode.com/problems/clone-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},b7=t("td",{style:{"text-align":"center"}},null,-1),p7={style:{"text-align":"left"}},k7=t("code",null,"树",-1),M7=t("code",null,"深度优先搜索",-1),j7=t("code",null,"广度优先搜索",-1),v7=t("code",null,"1+",-1),I7={style:{"text-align":"left"}},E7=t("td",{style:{"text-align":"center"}},"1506",-1),w7={style:{"text-align":"left"}},H7={href:"https://leetcode.com/problems/find-root-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},z7=t("td",{style:{"text-align":"center"}},null,-1),O7={style:{"text-align":"left"}},q7=t("code",null,"位运算",-1),N7=t("code",null,"树",-1),L7=t("code",null,"深度优先搜索",-1),C7=t("code",null,"1+",-1),P7={style:{"text-align":"left"}},K7=t("td",{style:{"text-align":"center"}},"1516",-1),B7={style:{"text-align":"left"}},T7={href:"https://leetcode.com/problems/move-sub-tree-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},V7=t("td",{style:{"text-align":"center"}},null,-1),U7={style:{"text-align":"left"}},R7=t("code",null,"树",-1),W7=t("code",null,"深度优先搜索",-1),G7={style:{"text-align":"left"}},Y7=t("td",{style:{"text-align":"center"}},"1519",-1),Q7={style:{"text-align":"left"}},S7={href:"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label",target:"_blank",rel:"noopener noreferrer"},D7=t("td",{style:{"text-align":"center"}},null,-1),F7={style:{"text-align":"left"}},Z7=t("code",null,"树",-1),A7=t("code",null,"深度优先搜索",-1),J7=t("code",null,"广度优先搜索",-1),X7=t("code",null,"2+",-1),$7={style:{"text-align":"left"}},t9=t("td",{style:{"text-align":"center"}},"1522",-1),e9={style:{"text-align":"left"}},o9={href:"https://leetcode.com/problems/diameter-of-n-ary-tree",target:"_blank",rel:"noopener noreferrer"},l9={style:{"text-align":"center"}},n9={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/1522",target:"_blank",rel:"noopener noreferrer"},s9={style:{"text-align":"left"}},d9=t("code",null,"树",-1),_9=t("code",null,"深度优先搜索",-1),c9={style:{"text-align":"left"}},i9=t("td",{style:{"text-align":"center"}},"1530",-1),r9={style:{"text-align":"left"}},a9={href:"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs",target:"_blank",rel:"noopener noreferrer"},h9=t("td",{style:{"text-align":"center"}},null,-1),u9={style:{"text-align":"left"}},f9=t("code",null,"树",-1),g9=t("code",null,"深度优先搜索",-1),m9=t("code",null,"二叉树",-1),y9={style:{"text-align":"left"}},x9=t("td",{style:{"text-align":"center"}},"1569",-1),b9={style:{"text-align":"left"}},p9={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},k9=t("td",{style:{"text-align":"center"}},null,-1),M9={style:{"text-align":"left"}},j9=t("code",null,"树",-1),v9=t("code",null,"并查集",-1),I9=t("code",null,"二叉搜索树",-1),E9=t("code",null,"7+",-1),w9={style:{"text-align":"left"}},H9=t("td",{style:{"text-align":"center"}},"1586",-1),z9={style:{"text-align":"left"}},O9={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},q9=t("td",{style:{"text-align":"center"}},null,-1),N9={style:{"text-align":"left"}},L9=t("code",null,"栈",-1),C9=t("code",null,"树",-1),P9=t("code",null,"设计",-1),K9=t("code",null,"3+",-1),B9={style:{"text-align":"left"}},T9=t("td",{style:{"text-align":"center"}},"1597",-1),V9={style:{"text-align":"left"}},U9={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},R9=t("td",{style:{"text-align":"center"}},null,-1),W9={style:{"text-align":"left"}},G9=t("code",null,"栈",-1),Y9=t("code",null,"树",-1),Q9=t("code",null,"字符串",-1),S9=t("code",null,"1+",-1),D9={style:{"text-align":"left"}},F9=t("td",{style:{"text-align":"center"}},"1600",-1),Z9={style:{"text-align":"left"}},A9={href:"https://leetcode.com/problems/throne-inheritance",target:"_blank",rel:"noopener noreferrer"},J9=t("td",{style:{"text-align":"center"}},null,-1),X9={style:{"text-align":"left"}},$9=t("code",null,"树",-1),tk=t("code",null,"深度优先搜索",-1),ek=t("code",null,"设计",-1),ok=t("code",null,"1+",-1),lk={style:{"text-align":"left"}},nk=t("td",{style:{"text-align":"center"}},"1602",-1),sk={style:{"text-align":"left"}},dk={href:"https://leetcode.com/problems/find-nearest-right-node-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},_k=t("td",{style:{"text-align":"center"}},null,-1),ck={style:{"text-align":"left"}},ik=t("code",null,"树",-1),rk=t("code",null,"广度优先搜索",-1),ak=t("code",null,"二叉树",-1),hk={style:{"text-align":"left"}},uk=t("td",{style:{"text-align":"center"}},"1609",-1),fk={style:{"text-align":"left"}},gk={href:"https://leetcode.com/problems/even-odd-tree",target:"_blank",rel:"noopener noreferrer"},mk=t("td",{style:{"text-align":"center"}},null,-1),yk={style:{"text-align":"left"}},xk=t("code",null,"树",-1),bk=t("code",null,"广度优先搜索",-1),pk=t("code",null,"二叉树",-1),kk={style:{"text-align":"left"}},Mk=t("td",{style:{"text-align":"center"}},"1612",-1),jk={style:{"text-align":"left"}},vk={href:"https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent",target:"_blank",rel:"noopener noreferrer"},Ik=t("td",{style:{"text-align":"center"}},null,-1),Ek={style:{"text-align":"left"}},wk=t("code",null,"树",-1),Hk=t("code",null,"深度优先搜索",-1),zk=t("code",null,"哈希表",-1),Ok=t("code",null,"2+",-1),qk={style:{"text-align":"left"}},Nk=t("td",{style:{"text-align":"center"}},"1617",-1),Lk={style:{"text-align":"left"}},Ck={href:"https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities",target:"_blank",rel:"noopener noreferrer"},Pk=t("td",{style:{"text-align":"center"}},null,-1),Kk={style:{"text-align":"left"}},Bk=t("code",null,"位运算",-1),Tk=t("code",null,"树",-1),Vk=t("code",null,"动态规划",-1),Uk=t("code",null,"2+",-1),Rk={style:{"text-align":"left"}},Wk=t("td",{style:{"text-align":"center"}},"1628",-1),Gk={style:{"text-align":"left"}},Yk={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},Qk=t("td",{style:{"text-align":"center"}},null,-1),Sk={style:{"text-align":"left"}},Dk=t("code",null,"栈",-1),Fk=t("code",null,"树",-1),Zk=t("code",null,"设计",-1),Ak=t("code",null,"3+",-1),Jk={style:{"text-align":"left"}},Xk=t("td",{style:{"text-align":"center"}},"1644",-1),$k={style:{"text-align":"left"}},tM={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},eM=t("td",{style:{"text-align":"center"}},null,-1),oM={style:{"text-align":"left"}},lM=t("code",null,"树",-1),nM=t("code",null,"深度优先搜索",-1),sM=t("code",null,"二叉树",-1),dM={style:{"text-align":"left"}},_M=t("td",{style:{"text-align":"center"}},"1650",-1),cM={style:{"text-align":"left"}},iM={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii",target:"_blank",rel:"noopener noreferrer"},rM=t("td",{style:{"text-align":"center"}},null,-1),aM={style:{"text-align":"left"}},hM=t("code",null,"树",-1),uM=t("code",null,"哈希表",-1),fM=t("code",null,"双指针",-1),gM=t("code",null,"1+",-1),mM={style:{"text-align":"left"}},yM=t("td",{style:{"text-align":"center"}},"1660",-1),xM={style:{"text-align":"left"}},bM={href:"https://leetcode.com/problems/correct-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},pM=t("td",{style:{"text-align":"center"}},null,-1),kM={style:{"text-align":"left"}},MM=t("code",null,"树",-1),jM=t("code",null,"深度优先搜索",-1),vM=t("code",null,"广度优先搜索",-1),IM=t("code",null,"2+",-1),EM={style:{"text-align":"left"}},wM=t("td",{style:{"text-align":"center"}},"1666",-1),HM={style:{"text-align":"left"}},zM={href:"https://leetcode.com/problems/change-the-root-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},OM=t("td",{style:{"text-align":"center"}},null,-1),qM={style:{"text-align":"left"}},NM=t("code",null,"树",-1),LM=t("code",null,"深度优先搜索",-1),CM=t("code",null,"二叉树",-1),PM={style:{"text-align":"left"}},KM=t("td",{style:{"text-align":"center"}},"1676",-1),BM={style:{"text-align":"left"}},TM={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv",target:"_blank",rel:"noopener noreferrer"},VM=t("td",{style:{"text-align":"center"}},null,-1),UM={style:{"text-align":"left"}},RM=t("code",null,"树",-1),WM=t("code",null,"深度优先搜索",-1),GM=t("code",null,"哈希表",-1),YM=t("code",null,"1+",-1),QM={style:{"text-align":"left"}},SM=t("td",{style:{"text-align":"center"}},"1719",-1),DM={style:{"text-align":"left"}},FM={href:"https://leetcode.com/problems/number-of-ways-to-reconstruct-a-tree",target:"_blank",rel:"noopener noreferrer"},ZM=t("td",{style:{"text-align":"center"}},null,-1),AM={style:{"text-align":"left"}},JM=t("code",null,"树",-1),XM=t("code",null,"图",-1),$M={style:{"text-align":"left"}},tj=t("td",{style:{"text-align":"center"}},"1740",-1),ej={style:{"text-align":"left"}},oj={href:"https://leetcode.com/problems/find-distance-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},lj=t("td",{style:{"text-align":"center"}},null,-1),nj={style:{"text-align":"left"}},sj=t("code",null,"树",-1),dj=t("code",null,"深度优先搜索",-1),_j=t("code",null,"广度优先搜索",-1),cj=t("code",null,"2+",-1),ij={style:{"text-align":"left"}},rj=t("td",{style:{"text-align":"center"}},"1766",-1),aj={style:{"text-align":"left"}},hj={href:"https://leetcode.com/problems/tree-of-coprimes",target:"_blank",rel:"noopener noreferrer"},uj=t("td",{style:{"text-align":"center"}},null,-1),fj={style:{"text-align":"left"}},gj=t("code",null,"树",-1),mj=t("code",null,"深度优先搜索",-1),yj=t("code",null,"数组",-1),xj=t("code",null,"2+",-1),bj={style:{"text-align":"left"}},pj=t("td",{style:{"text-align":"center"}},"1902",-1),kj={style:{"text-align":"left"}},Mj={href:"https://leetcode.com/problems/depth-of-bst-given-insertion-order",target:"_blank",rel:"noopener noreferrer"},jj=t("td",{style:{"text-align":"center"}},null,-1),vj={style:{"text-align":"left"}},Ij=t("code",null,"树",-1),Ej=t("code",null,"二叉搜索树",-1),wj=t("code",null,"数组",-1),Hj=t("code",null,"2+",-1),zj={style:{"text-align":"left"}},Oj=t("td",{style:{"text-align":"center"}},"1916",-1),qj={style:{"text-align":"left"}},Nj={href:"https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony",target:"_blank",rel:"noopener noreferrer"},Lj=t("td",{style:{"text-align":"center"}},null,-1),Cj={style:{"text-align":"left"}},Pj=t("code",null,"树",-1),Kj=t("code",null,"图",-1),Bj=t("code",null,"拓扑排序",-1),Tj=t("code",null,"3+",-1),Vj={style:{"text-align":"left"}},Uj=t("td",{style:{"text-align":"center"}},"1932",-1),Rj={style:{"text-align":"left"}},Wj={href:"https://leetcode.com/problems/merge-bsts-to-create-single-bst",target:"_blank",rel:"noopener noreferrer"},Gj=t("td",{style:{"text-align":"center"}},null,-1),Yj={style:{"text-align":"left"}},Qj=t("code",null,"树",-1),Sj=t("code",null,"深度优先搜索",-1),Dj=t("code",null,"哈希表",-1),Fj=t("code",null,"2+",-1),Zj={style:{"text-align":"left"}},Aj=t("td",{style:{"text-align":"center"}},"1973",-1),Jj={style:{"text-align":"left"}},Xj={href:"https://leetcode.com/problems/count-nodes-equal-to-sum-of-descendants",target:"_blank",rel:"noopener noreferrer"},$j=t("td",{style:{"text-align":"center"}},null,-1),tv={style:{"text-align":"left"}},ev=t("code",null,"树",-1),ov=t("code",null,"深度优先搜索",-1),lv=t("code",null,"二叉树",-1),nv={style:{"text-align":"left"}},sv=t("td",{style:{"text-align":"center"}},"1993",-1),dv={style:{"text-align":"left"}},_v={href:"https://leetcode.com/problems/operations-on-tree",target:"_blank",rel:"noopener noreferrer"},cv=t("td",{style:{"text-align":"center"}},null,-1),iv={style:{"text-align":"left"}},rv=t("code",null,"树",-1),av=t("code",null,"深度优先搜索",-1),hv=t("code",null,"广度优先搜索",-1),uv=t("code",null,"3+",-1),fv={style:{"text-align":"left"}},gv=t("td",{style:{"text-align":"center"}},"2003",-1),mv={style:{"text-align":"left"}},yv={href:"https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree",target:"_blank",rel:"noopener noreferrer"},xv=t("td",{style:{"text-align":"center"}},null,-1),bv={style:{"text-align":"left"}},pv=t("code",null,"树",-1),kv=t("code",null,"深度优先搜索",-1),Mv=t("code",null,"并查集",-1),jv=t("code",null,"1+",-1),vv={style:{"text-align":"left"}},Iv=t("td",{style:{"text-align":"center"}},"2005",-1),Ev={style:{"text-align":"left"}},wv={href:"https://leetcode.com/problems/subtree-removal-game-with-fibonacci-tree",target:"_blank",rel:"noopener noreferrer"},Hv=t("td",{style:{"text-align":"center"}},null,-1),zv={style:{"text-align":"left"}},Ov=t("code",null,"树",-1),qv=t("code",null,"数学",-1),Nv=t("code",null,"动态规划",-1),Lv=t("code",null,"2+",-1),Cv={style:{"text-align":"left"}},Pv=t("td",{style:{"text-align":"center"}},"2049",-1),Kv={style:{"text-align":"left"}},Bv={href:"https://leetcode.com/problems/count-nodes-with-the-highest-score",target:"_blank",rel:"noopener noreferrer"},Tv=t("td",{style:{"text-align":"center"}},null,-1),Vv={style:{"text-align":"left"}},Uv=t("code",null,"树",-1),Rv=t("code",null,"深度优先搜索",-1),Wv=t("code",null,"数组",-1),Gv=t("code",null,"1+",-1),Yv={style:{"text-align":"left"}},Qv=t("td",{style:{"text-align":"center"}},"2096",-1),Sv={style:{"text-align":"left"}},Dv={href:"https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",target:"_blank",rel:"noopener noreferrer"},Fv=t("td",{style:{"text-align":"center"}},null,-1),Zv={style:{"text-align":"left"}},Av=t("code",null,"树",-1),Jv=t("code",null,"深度优先搜索",-1),Xv=t("code",null,"字符串",-1),$v=t("code",null,"1+",-1),tI={style:{"text-align":"left"}},eI=t("td",{style:{"text-align":"center"}},"2196",-1),oI={style:{"text-align":"left"}},lI={href:"https://leetcode.com/problems/create-binary-tree-from-descriptions",target:"_blank",rel:"noopener noreferrer"},nI={style:{"text-align":"center"}},sI={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/2196",target:"_blank",rel:"noopener noreferrer"},dI={style:{"text-align":"left"}},_I=t("code",null,"树",-1),cI=t("code",null,"数组",-1),iI=t("code",null,"哈希表",-1),rI=t("code",null,"1+",-1),aI={style:{"text-align":"left"}},hI=t("td",{style:{"text-align":"center"}},"2236",-1),uI={style:{"text-align":"left"}},fI={href:"https://leetcode.com/problems/root-equals-sum-of-children",target:"_blank",rel:"noopener noreferrer"},gI=t("td",{style:{"text-align":"center"}},null,-1),mI={style:{"text-align":"left"}},yI=t("code",null,"树",-1),xI=t("code",null,"二叉树",-1),bI={style:{"text-align":"left"}},pI=t("td",{style:{"text-align":"center"}},"2246",-1),kI={style:{"text-align":"left"}},MI={href:"https://leetcode.com/problems/longest-path-with-different-adjacent-characters",target:"_blank",rel:"noopener noreferrer"},jI=t("td",{style:{"text-align":"center"}},null,-1),vI={style:{"text-align":"left"}},II=t("code",null,"树",-1),EI=t("code",null,"深度优先搜索",-1),wI=t("code",null,"图",-1),HI=t("code",null,"3+",-1),zI={style:{"text-align":"left"}},OI=t("td",{style:{"text-align":"center"}},"2265",-1),qI={style:{"text-align":"left"}},NI={href:"https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",target:"_blank",rel:"noopener noreferrer"},LI=t("td",{style:{"text-align":"center"}},null,-1),CI={style:{"text-align":"left"}},PI=t("code",null,"树",-1),KI=t("code",null,"深度优先搜索",-1),BI=t("code",null,"二叉树",-1),TI={style:{"text-align":"left"}},VI=t("td",{style:{"text-align":"center"}},"2277",-1),UI={style:{"text-align":"left"}},RI={href:"https://leetcode.com/problems/closest-node-to-path-in-tree",target:"_blank",rel:"noopener noreferrer"},WI=t("td",{style:{"text-align":"center"}},null,-1),GI={style:{"text-align":"left"}},YI=t("code",null,"树",-1),QI=t("code",null,"深度优先搜索",-1),SI=t("code",null,"广度优先搜索",-1),DI=t("code",null,"1+",-1),FI={style:{"text-align":"left"}},ZI=t("td",{style:{"text-align":"center"}},"2313",-1),AI={style:{"text-align":"left"}},JI={href:"https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result",target:"_blank",rel:"noopener noreferrer"},XI=t("td",{style:{"text-align":"center"}},null,-1),$I={style:{"text-align":"left"}},tE=t("code",null,"树",-1),eE=t("code",null,"深度优先搜索",-1),oE=t("code",null,"动态规划",-1),lE=t("code",null,"1+",-1),nE={style:{"text-align":"left"}},sE=t("td",{style:{"text-align":"center"}},"2322",-1),dE={style:{"text-align":"left"}},_E={href:"https://leetcode.com/problems/minimum-score-after-removals-on-a-tree",target:"_blank",rel:"noopener noreferrer"},cE=t("td",{style:{"text-align":"center"}},null,-1),iE={style:{"text-align":"left"}},rE=t("code",null,"位运算",-1),aE=t("code",null,"树",-1),hE=t("code",null,"深度优先搜索",-1),uE=t("code",null,"1+",-1),fE={style:{"text-align":"left"}},gE=t("td",{style:{"text-align":"center"}},"2331",-1),mE={style:{"text-align":"left"}},yE={href:"https://leetcode.com/problems/evaluate-boolean-binary-tree",target:"_blank",rel:"noopener noreferrer"},xE=t("td",{style:{"text-align":"center"}},null,-1),bE={style:{"text-align":"left"}},pE=t("code",null,"树",-1),kE=t("code",null,"深度优先搜索",-1),ME=t("code",null,"二叉树",-1),jE={style:{"text-align":"left"}},vE=t("td",{style:{"text-align":"center"}},"2368",-1),IE={style:{"text-align":"left"}},EE={href:"https://leetcode.com/problems/reachable-nodes-with-restrictions",target:"_blank",rel:"noopener noreferrer"},wE=t("td",{style:{"text-align":"center"}},null,-1),HE={style:{"text-align":"left"}},zE=t("code",null,"树",-1),OE=t("code",null,"深度优先搜索",-1),qE=t("code",null,"广度优先搜索",-1),NE=t("code",null,"4+",-1),LE={style:{"text-align":"left"}},CE=t("td",{style:{"text-align":"center"}},"2378",-1),PE={style:{"text-align":"left"}},KE={href:"https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",target:"_blank",rel:"noopener noreferrer"},BE=t("td",{style:{"text-align":"center"}},null,-1),TE={style:{"text-align":"left"}},VE=t("code",null,"树",-1),UE=t("code",null,"深度优先搜索",-1),RE=t("code",null,"动态规划",-1),WE={style:{"text-align":"left"}},GE=t("td",{style:{"text-align":"center"}},"2385",-1),YE={style:{"text-align":"left"}},QE={href:"https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected",target:"_blank",rel:"noopener noreferrer"},SE=t("td",{style:{"text-align":"center"}},null,-1),DE={style:{"text-align":"left"}},FE=t("code",null,"树",-1),ZE=t("code",null,"深度优先搜索",-1),AE=t("code",null,"广度优先搜索",-1),JE=t("code",null,"2+",-1),XE={style:{"text-align":"left"}},$E=t("td",{style:{"text-align":"center"}},"2415",-1),tw={style:{"text-align":"left"}},ew={href:"https://leetcode.com/problems/reverse-odd-levels-of-binary-tree",target:"_blank",rel:"noopener noreferrer"},ow=t("td",{style:{"text-align":"center"}},null,-1),lw={style:{"text-align":"left"}},nw=t("code",null,"树",-1),sw=t("code",null,"深度优先搜索",-1),dw=t("code",null,"广度优先搜索",-1),_w=t("code",null,"1+",-1),cw={style:{"text-align":"left"}},iw=t("td",{style:{"text-align":"center"}},"2421",-1),rw={style:{"text-align":"left"}},aw={href:"https://leetcode.com/problems/number-of-good-paths",target:"_blank",rel:"noopener noreferrer"},hw=t("td",{style:{"text-align":"center"}},null,-1),uw={style:{"text-align":"left"}},fw=t("code",null,"树",-1),gw=t("code",null,"并查集",-1),mw=t("code",null,"图",-1),yw=t("code",null,"3+",-1),xw={style:{"text-align":"left"}},bw=t("td",{style:{"text-align":"center"}},"2440",-1),pw={style:{"text-align":"left"}},kw={href:"https://leetcode.com/problems/create-components-with-same-value",target:"_blank",rel:"noopener noreferrer"},Mw=t("td",{style:{"text-align":"center"}},null,-1),jw={style:{"text-align":"left"}},vw=t("code",null,"树",-1),Iw=t("code",null,"深度优先搜索",-1),Ew=t("code",null,"数组",-1),ww=t("code",null,"2+",-1),Hw={style:{"text-align":"left"}},zw=t("td",{style:{"text-align":"center"}},"2445",-1),Ow={style:{"text-align":"left"}},qw={href:"https://leetcode.com/problems/number-of-nodes-with-value-one",target:"_blank",rel:"noopener noreferrer"},Nw=t("td",{style:{"text-align":"center"}},null,-1),Lw={style:{"text-align":"left"}},Cw=t("code",null,"树",-1),Pw=t("code",null,"深度优先搜索",-1),Kw=t("code",null,"广度优先搜索",-1),Bw=t("code",null,"1+",-1),Tw={style:{"text-align":"left"}},Vw=t("td",{style:{"text-align":"center"}},"2458",-1),Uw={style:{"text-align":"left"}},Rw={href:"https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries",target:"_blank",rel:"noopener noreferrer"},Ww=t("td",{style:{"text-align":"center"}},null,-1),Gw={style:{"text-align":"left"}},Yw=t("code",null,"树",-1),Qw=t("code",null,"深度优先搜索",-1),Sw=t("code",null,"广度优先搜索",-1),Dw=t("code",null,"2+",-1),Fw={style:{"text-align":"left"}},Zw=t("td",{style:{"text-align":"center"}},"2467",-1),Aw={style:{"text-align":"left"}},Jw={href:"https://leetcode.com/problems/most-profitable-path-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Xw=t("td",{style:{"text-align":"center"}},null,-1),$w={style:{"text-align":"left"}},tH=t("code",null,"树",-1),eH=t("code",null,"深度优先搜索",-1),oH=t("code",null,"广度优先搜索",-1),lH=t("code",null,"2+",-1),nH={style:{"text-align":"left"}},sH=t("td",{style:{"text-align":"center"}},"2471",-1),dH={style:{"text-align":"left"}},_H={href:"https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level",target:"_blank",rel:"noopener noreferrer"},cH=t("td",{style:{"text-align":"center"}},null,-1),iH={style:{"text-align":"left"}},rH=t("code",null,"树",-1),aH=t("code",null,"广度优先搜索",-1),hH=t("code",null,"二叉树",-1),uH={style:{"text-align":"left"}},fH=t("td",{style:{"text-align":"center"}},"2476",-1),gH={style:{"text-align":"left"}},mH={href:"https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},yH=t("td",{style:{"text-align":"center"}},null,-1),xH={style:{"text-align":"left"}},bH=t("code",null,"树",-1),pH=t("code",null,"深度优先搜索",-1),kH=t("code",null,"二叉搜索树",-1),MH=t("code",null,"3+",-1),jH={style:{"text-align":"left"}},vH=t("td",{style:{"text-align":"center"}},"2477",-1),IH={style:{"text-align":"left"}},EH={href:"https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital",target:"_blank",rel:"noopener noreferrer"},wH=t("td",{style:{"text-align":"center"}},null,-1),HH={style:{"text-align":"left"}},zH=t("code",null,"树",-1),OH=t("code",null,"深度优先搜索",-1),qH=t("code",null,"广度优先搜索",-1),NH=t("code",null,"1+",-1),LH={style:{"text-align":"left"}},CH=t("td",{style:{"text-align":"center"}},"2479",-1),PH={style:{"text-align":"left"}},KH={href:"https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",target:"_blank",rel:"noopener noreferrer"},BH=t("td",{style:{"text-align":"center"}},null,-1),TH={style:{"text-align":"left"}},VH=t("code",null,"树",-1),UH=t("code",null,"深度优先搜索",-1),RH=t("code",null,"图",-1),WH=t("code",null,"1+",-1),GH={style:{"text-align":"left"}},YH=t("td",{style:{"text-align":"center"}},"2509",-1),QH={style:{"text-align":"left"}},SH={href:"https://leetcode.com/problems/cycle-length-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},DH=t("td",{style:{"text-align":"center"}},null,-1),FH={style:{"text-align":"left"}},ZH=t("code",null,"树",-1),AH=t("code",null,"数组",-1),JH=t("code",null,"二叉树",-1),XH={style:{"text-align":"left"}},$H=t("td",{style:{"text-align":"center"}},"2538",-1),tz={style:{"text-align":"left"}},ez={href:"https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",target:"_blank",rel:"noopener noreferrer"},oz=t("td",{style:{"text-align":"center"}},null,-1),lz={style:{"text-align":"left"}},nz=t("code",null,"树",-1),sz=t("code",null,"深度优先搜索",-1),dz=t("code",null,"数组",-1),_z=t("code",null,"1+",-1),cz={style:{"text-align":"left"}},iz=t("td",{style:{"text-align":"center"}},"2581",-1),rz={style:{"text-align":"left"}},az={href:"https://leetcode.com/problems/count-number-of-possible-root-nodes",target:"_blank",rel:"noopener noreferrer"},hz=t("td",{style:{"text-align":"center"}},null,-1),uz={style:{"text-align":"left"}},fz=t("code",null,"树",-1),gz=t("code",null,"深度优先搜索",-1),mz=t("code",null,"数组",-1),yz=t("code",null,"2+",-1),xz={style:{"text-align":"left"}},bz=t("td",{style:{"text-align":"center"}},"2583",-1),pz={style:{"text-align":"left"}},kz={href:"https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Mz=t("td",{style:{"text-align":"center"}},null,-1),jz={style:{"text-align":"left"}},vz=t("code",null,"树",-1),Iz=t("code",null,"广度优先搜索",-1),Ez=t("code",null,"二叉树",-1),wz=t("code",null,"1+",-1),Hz={style:{"text-align":"left"}},zz=t("td",{style:{"text-align":"center"}},"2603",-1),Oz={style:{"text-align":"left"}},qz={href:"https://leetcode.com/problems/collect-coins-in-a-tree",target:"_blank",rel:"noopener noreferrer"},Nz=t("td",{style:{"text-align":"center"}},null,-1),Lz={style:{"text-align":"left"}},Cz=t("code",null,"树",-1),Pz=t("code",null,"图",-1),Kz=t("code",null,"拓扑排序",-1),Bz=t("code",null,"1+",-1),Tz={style:{"text-align":"left"}},Vz=t("td",{style:{"text-align":"center"}},"2641",-1),Uz={style:{"text-align":"left"}},Rz={href:"https://leetcode.com/problems/cousins-in-binary-tree-ii",target:"_blank",rel:"noopener noreferrer"},Wz=t("td",{style:{"text-align":"center"}},null,-1),Gz={style:{"text-align":"left"}},Yz=t("code",null,"树",-1),Qz=t("code",null,"深度优先搜索",-1),Sz=t("code",null,"广度优先搜索",-1),Dz=t("code",null,"2+",-1),Fz={style:{"text-align":"left"}},Zz=t("td",{style:{"text-align":"center"}},"2646",-1),Az={style:{"text-align":"left"}},Jz={href:"https://leetcode.com/problems/minimize-the-total-price-of-the-trips",target:"_blank",rel:"noopener noreferrer"},Xz=t("td",{style:{"text-align":"center"}},null,-1),$z={style:{"text-align":"left"}},tO=t("code",null,"树",-1),eO=t("code",null,"深度优先搜索",-1),oO=t("code",null,"图",-1),lO=t("code",null,"2+",-1),nO={style:{"text-align":"left"}},sO=t("td",{style:{"text-align":"center"}},"2673",-1),dO={style:{"text-align":"left"}},_O={href:"https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},cO=t("td",{style:{"text-align":"center"}},null,-1),iO={style:{"text-align":"left"}},rO=t("code",null,"贪心",-1),aO=t("code",null,"树",-1),hO=t("code",null,"数组",-1),uO=t("code",null,"2+",-1),fO={style:{"text-align":"left"}},gO=t("td",{style:{"text-align":"center"}},"2689",-1),mO={style:{"text-align":"left"}},yO={href:"https://leetcode.com/problems/extract-kth-character-from-the-rope-tree",target:"_blank",rel:"noopener noreferrer"},xO=t("td",{style:{"text-align":"center"}},null,-1),bO={style:{"text-align":"left"}},pO=t("code",null,"树",-1),kO=t("code",null,"深度优先搜索",-1),MO=t("code",null,"二叉树",-1),jO={style:{"text-align":"left"}},vO=t("td",{style:{"text-align":"center"}},"2764",-1),IO={style:{"text-align":"left"}},EO={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},wO=t("td",{style:{"text-align":"center"}},null,-1),HO={style:{"text-align":"left"}},zO=t("code",null,"栈",-1),OO=t("code",null,"树",-1),qO=t("code",null,"深度优先搜索",-1),NO=t("code",null,"1+",-1),LO={style:{"text-align":"left"}},CO=t("td",{style:{"text-align":"center"}},"2773",-1),PO={style:{"text-align":"left"}},KO={href:"https://leetcode.com/problems/height-of-special-binary-tree",target:"_blank",rel:"noopener noreferrer"},BO=t("td",{style:{"text-align":"center"}},null,-1),TO={style:{"text-align":"left"}},VO=t("code",null,"树",-1),UO=t("code",null,"深度优先搜索",-1),RO=t("code",null,"广度优先搜索",-1),WO=t("code",null,"1+",-1),GO={style:{"text-align":"left"}},YO=t("td",{style:{"text-align":"center"}},"2791",-1),QO={style:{"text-align":"left"}},SO={href:"https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree",target:"_blank",rel:"noopener noreferrer"},DO=t("td",{style:{"text-align":"center"}},null,-1),FO={style:{"text-align":"left"}},ZO=t("code",null,"位运算",-1),AO=t("code",null,"树",-1),JO=t("code",null,"深度优先搜索",-1),XO=t("code",null,"2+",-1),$O={style:{"text-align":"left"}},tq=t("td",{style:{"text-align":"center"}},"2792",-1),eq={style:{"text-align":"left"}},oq={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},lq=t("td",{style:{"text-align":"center"}},null,-1),nq={style:{"text-align":"left"}},sq=t("code",null,"树",-1),dq=t("code",null,"深度优先搜索",-1),_q=t("code",null,"分治",-1),cq=t("code",null,"1+",-1),iq={style:{"text-align":"left"}},rq=t("td",{style:{"text-align":"center"}},"2846",-1),aq={style:{"text-align":"left"}},hq={href:"https://leetcode.com/problems/minimum-edge-weight-equilibrium-queries-in-a-tree",target:"_blank",rel:"noopener noreferrer"},uq=t("td",{style:{"text-align":"center"}},null,-1),fq={style:{"text-align":"left"}},gq=t("code",null,"树",-1),mq=t("code",null,"图",-1),yq=t("code",null,"数组",-1),xq=t("code",null,"1+",-1),bq={style:{"text-align":"left"}},pq=t("td",{style:{"text-align":"center"}},"2867",-1),kq={style:{"text-align":"left"}},Mq={href:"https://leetcode.com/problems/count-valid-paths-in-a-tree",target:"_blank",rel:"noopener noreferrer"},jq=t("td",{style:{"text-align":"center"}},null,-1),vq={style:{"text-align":"left"}},Iq=t("code",null,"树",-1),Eq=t("code",null,"深度优先搜索",-1),wq=t("code",null,"数学",-1),Hq=t("code",null,"2+",-1),zq={style:{"text-align":"left"}},Oq=t("td",{style:{"text-align":"center"}},"2872",-1),qq={style:{"text-align":"left"}},Nq={href:"https://leetcode.com/problems/maximum-number-of-k-divisible-components",target:"_blank",rel:"noopener noreferrer"},Lq=t("td",{style:{"text-align":"center"}},null,-1),Cq={style:{"text-align":"left"}},Pq=t("code",null,"树",-1),Kq=t("code",null,"深度优先搜索",-1),Bq={style:{"text-align":"left"}},Tq=t("td",{style:{"text-align":"center"}},"2920",-1),Vq={style:{"text-align":"left"}},Uq={href:"https://leetcode.com/problems/maximum-points-after-collecting-coins-from-all-nodes",target:"_blank",rel:"noopener noreferrer"},Rq=t("td",{style:{"text-align":"center"}},null,-1),Wq={style:{"text-align":"left"}},Gq=t("code",null,"位运算",-1),Yq=t("code",null,"树",-1),Qq=t("code",null,"深度优先搜索",-1),Sq=t("code",null,"2+",-1),Dq={style:{"text-align":"left"}},Fq=t("td",{style:{"text-align":"center"}},"2925",-1),Zq={style:{"text-align":"left"}},Aq={href:"https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree",target:"_blank",rel:"noopener noreferrer"},Jq=t("td",{style:{"text-align":"center"}},null,-1),Xq={style:{"text-align":"left"}},$q=t("code",null,"树",-1),tN=t("code",null,"深度优先搜索",-1),eN=t("code",null,"动态规划",-1),oN={style:{"text-align":"left"}},lN=t("td",{style:{"text-align":"center"}},"2973",-1),nN={style:{"text-align":"left"}},sN={href:"https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes",target:"_blank",rel:"noopener noreferrer"},dN=t("td",{style:{"text-align":"center"}},null,-1),_N={style:{"text-align":"left"}},cN=t("code",null,"树",-1),iN=t("code",null,"深度优先搜索",-1),rN=t("code",null,"动态规划",-1),aN=t("code",null,"2+",-1),hN={style:{"text-align":"left"}},uN=t("td",{style:{"text-align":"center"}},"3004",-1),fN={style:{"text-align":"left"}},gN={href:"https://leetcode.com/problems/maximum-subtree-of-the-same-color",target:"_blank",rel:"noopener noreferrer"},mN=t("td",{style:{"text-align":"center"}},null,-1),yN={style:{"text-align":"left"}},xN=t("code",null,"树",-1),bN=t("code",null,"深度优先搜索",-1),pN=t("code",null,"数组",-1),kN=t("code",null,"1+",-1),MN={style:{"text-align":"left"}},jN=t("td",{style:{"text-align":"center"}},"3067",-1),vN={style:{"text-align":"left"}},IN={href:"https://leetcode.com/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network",target:"_blank",rel:"noopener noreferrer"},EN=t("td",{style:{"text-align":"center"}},null,-1),wN={style:{"text-align":"left"}},HN=t("code",null,"树",-1),zN=t("code",null,"深度优先搜索",-1),ON=t("code",null,"数组",-1),qN={style:{"text-align":"left"}},NN=t("td",{style:{"text-align":"center"}},"3068",-1),LN={style:{"text-align":"left"}},CN={href:"https://leetcode.com/problems/find-the-maximum-sum-of-node-values",target:"_blank",rel:"noopener noreferrer"},PN=t("td",{style:{"text-align":"center"}},null,-1),KN={style:{"text-align":"left"}},BN=t("code",null,"贪心",-1),TN=t("code",null,"位运算",-1),VN=t("code",null,"树",-1),UN=t("code",null,"3+",-1),RN={style:{"text-align":"left"}},WN=t("td",{style:{"text-align":"center"}},"3157",-1),GN={style:{"text-align":"left"}},YN={href:"https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum",target:"_blank",rel:"noopener noreferrer"},QN=t("td",{style:{"text-align":"center"}},null,-1),SN={style:{"text-align":"left"}},DN=t("code",null,"树",-1),FN=t("code",null,"深度优先搜索",-1),ZN=t("code",null,"广度优先搜索",-1),AN=t("code",null,"1+",-1),JN={style:{"text-align":"left"}},XN=t("td",{style:{"text-align":"center"}},"3203",-1),$N={style:{"text-align":"left"}},tL={href:"https://leetcode.com/problems/find-minimum-diameter-after-merging-two-trees",target:"_blank",rel:"noopener noreferrer"},eL=t("td",{style:{"text-align":"center"}},null,-1),oL={style:{"text-align":"left"}},lL=t("code",null,"树",-1),nL=t("code",null,"深度优先搜索",-1),sL=t("code",null,"广度优先搜索",-1),dL=t("code",null,"1+",-1),_L={style:{"text-align":"left"}},cL=t("td",{style:{"text-align":"center"}},"3241",-1),iL={style:{"text-align":"left"}},rL={href:"https://leetcode.com/problems/time-taken-to-mark-all-nodes",target:"_blank",rel:"noopener noreferrer"},aL=t("td",{style:{"text-align":"center"}},null,-1),hL={style:{"text-align":"left"}},uL=t("code",null,"树",-1),fL=t("code",null,"深度优先搜索",-1),gL=t("code",null,"图",-1),mL=t("code",null,"1+",-1),yL={style:{"text-align":"left"}},xL=t("td",{style:{"text-align":"center"}},"3249",-1),bL={style:{"text-align":"left"}},pL={href:"https://leetcode.com/problems/count-the-number-of-good-nodes",target:"_blank",rel:"noopener noreferrer"},kL=t("td",{style:{"text-align":"center"}},null,-1),ML={style:{"text-align":"left"}},jL=t("code",null,"树",-1),vL=t("code",null,"深度优先搜索",-1),IL={style:{"text-align":"left"}},EL=t("td",{style:{"text-align":"center"}},"3313",-1),wL={style:{"text-align":"left"}},HL={href:"https://leetcode.com/problems/find-the-last-marked-nodes-in-tree",target:"_blank",rel:"noopener noreferrer"},zL=t("td",{style:{"text-align":"center"}},null,-1),OL={style:{"text-align":"left"}},qL=t("code",null,"树",-1),NL=t("code",null,"深度优先搜索",-1),LL={style:{"text-align":"left"}},CL=t("td",{style:{"text-align":"center"}},"LCP 10",-1),PL={style:{"text-align":"left"}},KL={href:"https://leetcode.cn/problems/er-cha-shu-ren-wu-diao-du",target:"_blank",rel:"noopener noreferrer"},BL=t("td",{style:{"text-align":"center"}},null,-1),TL={style:{"text-align":"left"}},VL=t("code",null,"树",-1),UL=t("code",null,"深度优先搜索",-1),RL=t("code",null,"动态规划",-1),WL=t("code",null,"1+",-1),GL={style:{"text-align":"left"}},YL=t("td",{style:{"text-align":"center"}},"LCP 26",-1),QL={style:{"text-align":"left"}},SL={href:"https://leetcode.cn/problems/hSRGyL",target:"_blank",rel:"noopener noreferrer"},DL=t("td",{style:{"text-align":"center"}},null,-1),FL={style:{"text-align":"left"}},ZL=t("code",null,"树",-1),AL=t("code",null,"动态规划",-1),JL=t("code",null,"二叉树",-1),XL={style:{"text-align":"left"}},$L=t("td",{style:{"text-align":"center"}},"LCP 34",-1),tC={style:{"text-align":"left"}},eC={href:"https://leetcode.cn/problems/er-cha-shu-ran-se-UGC",target:"_blank",rel:"noopener noreferrer"},oC=t("td",{style:{"text-align":"center"}},null,-1),lC={style:{"text-align":"left"}},nC=t("code",null,"树",-1),sC=t("code",null,"动态规划",-1),dC=t("code",null,"二叉树",-1),_C={style:{"text-align":"left"}},cC=t("td",{style:{"text-align":"center"}},"LCP 44",-1),iC={style:{"text-align":"left"}},rC={href:"https://leetcode.cn/problems/sZ59z6",target:"_blank",rel:"noopener noreferrer"},aC=t("td",{style:{"text-align":"center"}},null,-1),hC={style:{"text-align":"left"}},uC=t("code",null,"树",-1),fC=t("code",null,"深度优先搜索",-1),gC=t("code",null,"广度优先搜索",-1),mC=t("code",null,"2+",-1),yC={style:{"text-align":"left"}},xC=t("td",{style:{"text-align":"center"}},"LCP 52",-1),bC={style:{"text-align":"left"}},pC={href:"https://leetcode.cn/problems/QO5KpG",target:"_blank",rel:"noopener noreferrer"},kC=t("td",{style:{"text-align":"center"}},null,-1),MC={style:{"text-align":"left"}},jC=t("code",null,"树",-1),vC=t("code",null,"线段树",-1),IC=t("code",null,"二叉搜索树",-1),EC=t("code",null,"4+",-1),wC={style:{"text-align":"left"}},HC=t("td",{style:{"text-align":"center"}},"LCP 60",-1),zC={style:{"text-align":"left"}},OC={href:"https://leetcode.cn/problems/WInSav",target:"_blank",rel:"noopener noreferrer"},qC=t("td",{style:{"text-align":"center"}},null,-1),NC={style:{"text-align":"left"}},LC=t("code",null,"树",-1),CC=t("code",null,"动态规划",-1),PC=t("code",null,"二叉树",-1),KC={style:{"text-align":"left"}},BC=t("td",{style:{"text-align":"center"}},"LCP 64",-1),TC={style:{"text-align":"left"}},VC={href:"https://leetcode.cn/problems/U7WvvU",target:"_blank",rel:"noopener noreferrer"},UC=t("td",{style:{"text-align":"center"}},null,-1),RC={style:{"text-align":"left"}},WC=t("code",null,"树",-1),GC=t("code",null,"深度优先搜索",-1),YC=t("code",null,"动态规划",-1),QC=t("code",null,"1+",-1),SC={style:{"text-align":"left"}},DC=t("td",{style:{"text-align":"center"}},"LCP 67",-1),FC={style:{"text-align":"left"}},ZC={href:"https://leetcode.cn/problems/KnLfVT",target:"_blank",rel:"noopener noreferrer"},AC=t("td",{style:{"text-align":"center"}},null,-1),JC={style:{"text-align":"left"}},XC=t("code",null,"树",-1),$C=t("code",null,"深度优先搜索",-1),tP=t("code",null,"广度优先搜索",-1),eP=t("code",null,"1+",-1),oP={style:{"text-align":"left"}},lP=t("td",{style:{"text-align":"center"}},"剑指 Offer 07",-1),nP={style:{"text-align":"left"}},sP={href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},dP={style:{"text-align":"center"}},_P={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_07_1",target:"_blank",rel:"noopener noreferrer"},cP={style:{"text-align":"left"}},iP=t("code",null,"树",-1),rP=t("code",null,"数组",-1),aP=t("code",null,"哈希表",-1),hP=t("code",null,"2+",-1),uP={style:{"text-align":"left"}},fP=t("td",{style:{"text-align":"center"}},"剑指 Offer 26",-1),gP={style:{"text-align":"left"}},mP={href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof",target:"_blank",rel:"noopener noreferrer"},yP={style:{"text-align":"center"}},xP={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_26_1",target:"_blank",rel:"noopener noreferrer"},bP={style:{"text-align":"left"}},pP=t("code",null,"树",-1),kP=t("code",null,"深度优先搜索",-1),MP=t("code",null,"二叉树",-1),jP={style:{"text-align":"left"}},vP=t("td",{style:{"text-align":"center"}},"剑指 Offer 27",-1),IP={style:{"text-align":"left"}},EP={href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof",target:"_blank",rel:"noopener noreferrer"},wP={style:{"text-align":"center"}},HP={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_27_1",target:"_blank",rel:"noopener noreferrer"},zP={style:{"text-align":"left"}},OP=t("code",null,"树",-1),qP=t("code",null,"深度优先搜索",-1),NP=t("code",null,"广度优先搜索",-1),LP=t("code",null,"1+",-1),CP={style:{"text-align":"left"}},PP=t("td",{style:{"text-align":"center"}},"剑指 Offer 28",-1),KP={style:{"text-align":"left"}},BP={href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},TP={style:{"text-align":"center"}},VP={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_28_1",target:"_blank",rel:"noopener noreferrer"},UP={style:{"text-align":"left"}},RP=t("code",null,"树",-1),WP=t("code",null,"深度优先搜索",-1),GP=t("code",null,"广度优先搜索",-1),YP=t("code",null,"1+",-1),QP={style:{"text-align":"left"}},SP=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - I",-1),DP={style:{"text-align":"left"}},FP={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},ZP={style:{"text-align":"center"}},AP={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_32_1",target:"_blank",rel:"noopener noreferrer"},JP={style:{"text-align":"left"}},XP=t("code",null,"树",-1),$P=t("code",null,"广度优先搜索",-1),tK=t("code",null,"二叉树",-1),eK={style:{"text-align":"left"}},oK=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - II",-1),lK={style:{"text-align":"left"}},nK={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof",target:"_blank",rel:"noopener noreferrer"},sK={style:{"text-align":"center"}},dK={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_32_2",target:"_blank",rel:"noopener noreferrer"},_K={style:{"text-align":"left"}},cK=t("code",null,"树",-1),iK=t("code",null,"广度优先搜索",-1),rK=t("code",null,"二叉树",-1),aK={style:{"text-align":"left"}},hK=t("td",{style:{"text-align":"center"}},"剑指 Offer 32 - III",-1),uK={style:{"text-align":"left"}},fK={href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof",target:"_blank",rel:"noopener noreferrer"},gK={style:{"text-align":"center"}},mK={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_32_3",target:"_blank",rel:"noopener noreferrer"},yK={style:{"text-align":"left"}},xK=t("code",null,"树",-1),bK=t("code",null,"广度优先搜索",-1),pK=t("code",null,"二叉树",-1),kK={style:{"text-align":"left"}},MK=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),jK={style:{"text-align":"left"}},vK={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},IK={style:{"text-align":"center"}},EK={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_33_1",target:"_blank",rel:"noopener noreferrer"},wK={style:{"text-align":"left"}},HK=t("code",null,"栈",-1),zK=t("code",null,"树",-1),OK=t("code",null,"二叉搜索树",-1),qK=t("code",null,"4+",-1),NK={style:{"text-align":"left"}},LK=t("td",{style:{"text-align":"center"}},"剑指 Offer 34",-1),CK={style:{"text-align":"left"}},PK={href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof",target:"_blank",rel:"noopener noreferrer"},KK={style:{"text-align":"center"}},BK={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_34_1",target:"_blank",rel:"noopener noreferrer"},TK={style:{"text-align":"left"}},VK=t("code",null,"树",-1),UK=t("code",null,"深度优先搜索",-1),RK=t("code",null,"回溯",-1),WK=t("code",null,"1+",-1),GK={style:{"text-align":"left"}},YK=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),QK={style:{"text-align":"left"}},SK={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},DK={style:{"text-align":"center"}},FK={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_36_1",target:"_blank",rel:"noopener noreferrer"},ZK={style:{"text-align":"left"}},AK=t("code",null,"栈",-1),JK=t("code",null,"树",-1),XK=t("code",null,"深度优先搜索",-1),$K=t("code",null,"4+",-1),tB={style:{"text-align":"left"}},eB=t("td",{style:{"text-align":"center"}},"剑指 Offer 37",-1),oB={style:{"text-align":"left"}},lB={href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},nB={style:{"text-align":"center"}},sB={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_37_1",target:"_blank",rel:"noopener noreferrer"},dB={style:{"text-align":"left"}},_B=t("code",null,"树",-1),cB=t("code",null,"深度优先搜索",-1),iB=t("code",null,"广度优先搜索",-1),rB=t("code",null,"3+",-1),aB={style:{"text-align":"left"}},hB=t("td",{style:{"text-align":"center"}},"剑指 Offer 54",-1),uB={style:{"text-align":"left"}},fB={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof",target:"_blank",rel:"noopener noreferrer"},gB={style:{"text-align":"center"}},mB={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_54_1",target:"_blank",rel:"noopener noreferrer"},yB={style:{"text-align":"left"}},xB=t("code",null,"树",-1),bB=t("code",null,"深度优先搜索",-1),pB=t("code",null,"二叉搜索树",-1),kB=t("code",null,"1+",-1),MB={style:{"text-align":"left"}},jB=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - I",-1),vB={style:{"text-align":"left"}},IB={href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof",target:"_blank",rel:"noopener noreferrer"},EB={style:{"text-align":"center"}},wB={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_55_1",target:"_blank",rel:"noopener noreferrer"},HB={style:{"text-align":"left"}},zB=t("code",null,"树",-1),OB=t("code",null,"深度优先搜索",-1),qB=t("code",null,"广度优先搜索",-1),NB=t("code",null,"1+",-1),LB={style:{"text-align":"left"}},CB=t("td",{style:{"text-align":"center"}},"剑指 Offer 55 - II",-1),PB={style:{"text-align":"left"}},KB={href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},BB=t("td",{style:{"text-align":"center"}},null,-1),TB={style:{"text-align":"left"}},VB=t("code",null,"树",-1),UB=t("code",null,"深度优先搜索",-1),RB=t("code",null,"二叉树",-1),WB={style:{"text-align":"left"}},GB=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - I",-1),YB={style:{"text-align":"left"}},QB={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},SB=t("td",{style:{"text-align":"center"}},null,-1),DB={style:{"text-align":"left"}},FB=t("code",null,"树",-1),ZB=t("code",null,"深度优先搜索",-1),AB=t("code",null,"二叉搜索树",-1),JB=t("code",null,"1+",-1),XB={style:{"text-align":"left"}},$B=t("td",{style:{"text-align":"center"}},"剑指 Offer 68 - II",-1),tT={style:{"text-align":"left"}},eT={href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof",target:"_blank",rel:"noopener noreferrer"},oT=t("td",{style:{"text-align":"center"}},null,-1),lT={style:{"text-align":"left"}},nT=t("code",null,"树",-1),sT=t("code",null,"深度优先搜索",-1),dT=t("code",null,"二叉树",-1),_T={style:{"text-align":"left"}},cT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 43",-1),iT={style:{"text-align":"left"}},rT={href:"https://leetcode.cn/problems/NaqhDT",target:"_blank",rel:"noopener noreferrer"},aT=t("td",{style:{"text-align":"center"}},null,-1),hT={style:{"text-align":"left"}},uT=t("code",null,"树",-1),fT=t("code",null,"广度优先搜索",-1),gT=t("code",null,"设计",-1),mT=t("code",null,"1+",-1),yT={style:{"text-align":"left"}},xT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 44",-1),bT={style:{"text-align":"left"}},pT={href:"https://leetcode.cn/problems/hPov7L",target:"_blank",rel:"noopener noreferrer"},kT=t("td",{style:{"text-align":"center"}},null,-1),MT={style:{"text-align":"left"}},jT=t("code",null,"树",-1),vT=t("code",null,"深度优先搜索",-1),IT=t("code",null,"广度优先搜索",-1),ET=t("code",null,"1+",-1),wT={style:{"text-align":"left"}},HT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 45",-1),zT={style:{"text-align":"left"}},OT={href:"https://leetcode.cn/problems/LwUNpT",target:"_blank",rel:"noopener noreferrer"},qT=t("td",{style:{"text-align":"center"}},null,-1),NT={style:{"text-align":"left"}},LT=t("code",null,"树",-1),CT=t("code",null,"深度优先搜索",-1),PT=t("code",null,"广度优先搜索",-1),KT=t("code",null,"1+",-1),BT={style:{"text-align":"left"}},TT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 46",-1),VT={style:{"text-align":"left"}},UT={href:"https://leetcode.cn/problems/WNC0Lk",target:"_blank",rel:"noopener noreferrer"},RT=t("td",{style:{"text-align":"center"}},null,-1),WT={style:{"text-align":"left"}},GT=t("code",null,"树",-1),YT=t("code",null,"深度优先搜索",-1),QT=t("code",null,"广度优先搜索",-1),ST=t("code",null,"1+",-1),DT={style:{"text-align":"left"}},FT=t("td",{style:{"text-align":"center"}},"剑指 Offer II 47",-1),ZT={style:{"text-align":"left"}},AT={href:"https://leetcode.cn/problems/pOCWxh",target:"_blank",rel:"noopener noreferrer"},JT=t("td",{style:{"text-align":"center"}},null,-1),XT={style:{"text-align":"left"}},$T=t("code",null,"树",-1),tV=t("code",null,"深度优先搜索",-1),eV=t("code",null,"二叉树",-1),oV={style:{"text-align":"left"}},lV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 48",-1),nV={style:{"text-align":"left"}},sV={href:"https://leetcode.cn/problems/h54YBf",target:"_blank",rel:"noopener noreferrer"},dV=t("td",{style:{"text-align":"center"}},null,-1),_V={style:{"text-align":"left"}},cV=t("code",null,"树",-1),iV=t("code",null,"深度优先搜索",-1),rV=t("code",null,"广度优先搜索",-1),aV=t("code",null,"3+",-1),hV={style:{"text-align":"left"}},uV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 49",-1),fV={style:{"text-align":"left"}},gV={href:"https://leetcode.cn/problems/3Etpl5",target:"_blank",rel:"noopener noreferrer"},mV=t("td",{style:{"text-align":"center"}},null,-1),yV={style:{"text-align":"left"}},xV=t("code",null,"树",-1),bV=t("code",null,"深度优先搜索",-1),pV=t("code",null,"二叉树",-1),kV={style:{"text-align":"left"}},MV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 50",-1),jV={style:{"text-align":"left"}},vV={href:"https://leetcode.cn/problems/6eUYwP",target:"_blank",rel:"noopener noreferrer"},IV=t("td",{style:{"text-align":"center"}},null,-1),EV={style:{"text-align":"left"}},wV=t("code",null,"树",-1),HV=t("code",null,"深度优先搜索",-1),zV=t("code",null,"二叉树",-1),OV={style:{"text-align":"left"}},qV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 51",-1),NV={style:{"text-align":"left"}},LV={href:"https://leetcode.cn/problems/jC7MId",target:"_blank",rel:"noopener noreferrer"},CV=t("td",{style:{"text-align":"center"}},null,-1),PV={style:{"text-align":"left"}},KV=t("code",null,"树",-1),BV=t("code",null,"深度优先搜索",-1),TV=t("code",null,"动态规划",-1),VV=t("code",null,"1+",-1),UV={style:{"text-align":"left"}},RV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),WV={style:{"text-align":"left"}},GV={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},YV=t("td",{style:{"text-align":"center"}},null,-1),QV={style:{"text-align":"left"}},SV=t("code",null,"栈",-1),DV=t("code",null,"树",-1),FV=t("code",null,"深度优先搜索",-1),ZV=t("code",null,"2+",-1),AV={style:{"text-align":"left"}},JV=t("td",{style:{"text-align":"center"}},"剑指 Offer II 53",-1),XV={style:{"text-align":"left"}},$V={href:"https://leetcode.cn/problems/P5rCT8",target:"_blank",rel:"noopener noreferrer"},tU=t("td",{style:{"text-align":"center"}},null,-1),eU={style:{"text-align":"left"}},oU=t("code",null,"树",-1),lU=t("code",null,"深度优先搜索",-1),nU=t("code",null,"二叉搜索树",-1),sU=t("code",null,"1+",-1),dU={style:{"text-align":"left"}},_U=t("td",{style:{"text-align":"center"}},"剑指 Offer II 54",-1),cU={style:{"text-align":"left"}},iU={href:"https://leetcode.cn/problems/w6cpku",target:"_blank",rel:"noopener noreferrer"},rU=t("td",{style:{"text-align":"center"}},null,-1),aU={style:{"text-align":"left"}},hU=t("code",null,"树",-1),uU=t("code",null,"深度优先搜索",-1),fU=t("code",null,"二叉搜索树",-1),gU=t("code",null,"1+",-1),mU={style:{"text-align":"left"}},yU=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),xU={style:{"text-align":"left"}},bU={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},pU=t("td",{style:{"text-align":"center"}},null,-1),kU={style:{"text-align":"left"}},MU=t("code",null,"栈",-1),jU=t("code",null,"树",-1),vU=t("code",null,"设计",-1),IU=t("code",null,"3+",-1),EU={style:{"text-align":"left"}},wU=t("td",{style:{"text-align":"center"}},"剑指 Offer II 59",-1),HU={style:{"text-align":"left"}},zU={href:"https://leetcode.cn/problems/jBjn9C",target:"_blank",rel:"noopener noreferrer"},OU=t("td",{style:{"text-align":"center"}},null,-1),qU={style:{"text-align":"left"}},NU=t("code",null,"树",-1),LU=t("code",null,"设计",-1),CU=t("code",null,"二叉搜索树",-1),PU=t("code",null,"3+",-1),KU={style:{"text-align":"left"}},BU=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),TU={style:{"text-align":"left"}},VU={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},UU=t("td",{style:{"text-align":"center"}},null,-1),RU={style:{"text-align":"left"}},WU=t("code",null,"树",-1),GU=t("code",null,"二叉搜索树",-1),YU=t("code",null,"数组",-1),QU=t("code",null,"2+",-1),SU={style:{"text-align":"left"}},DU=t("td",{style:{"text-align":"center"}},"面试题 04.03",-1),FU={style:{"text-align":"left"}},ZU={href:"https://leetcode.cn/problems/list-of-depth-lcci",target:"_blank",rel:"noopener noreferrer"},AU=t("td",{style:{"text-align":"center"}},null,-1),JU={style:{"text-align":"left"}},XU=t("code",null,"树",-1),$U=t("code",null,"广度优先搜索",-1),tR=t("code",null,"链表",-1),eR=t("code",null,"1+",-1),oR={style:{"text-align":"left"}},lR=t("td",{style:{"text-align":"center"}},"面试题 04.04",-1),nR={style:{"text-align":"left"}},sR={href:"https://leetcode.cn/problems/check-balance-lcci",target:"_blank",rel:"noopener noreferrer"},dR=t("td",{style:{"text-align":"center"}},null,-1),_R={style:{"text-align":"left"}},cR=t("code",null,"树",-1),iR=t("code",null,"深度优先搜索",-1),rR=t("code",null,"二叉树",-1),aR={style:{"text-align":"left"}},hR=t("td",{style:{"text-align":"center"}},"面试题 04.05",-1),uR={style:{"text-align":"left"}},fR={href:"https://leetcode.cn/problems/legal-binary-search-tree-lcci",target:"_blank",rel:"noopener noreferrer"},gR=t("td",{style:{"text-align":"center"}},null,-1),mR={style:{"text-align":"left"}},yR=t("code",null,"树",-1),xR=t("code",null,"深度优先搜索",-1),bR=t("code",null,"二叉搜索树",-1),pR=t("code",null,"1+",-1),kR={style:{"text-align":"left"}},MR=t("td",{style:{"text-align":"center"}},"面试题 04.06",-1),jR={style:{"text-align":"left"}},vR={href:"https://leetcode.cn/problems/successor-lcci",target:"_blank",rel:"noopener noreferrer"},IR=t("td",{style:{"text-align":"center"}},null,-1),ER={style:{"text-align":"left"}},wR=t("code",null,"树",-1),HR=t("code",null,"深度优先搜索",-1),zR=t("code",null,"二叉搜索树",-1),OR=t("code",null,"1+",-1),qR={style:{"text-align":"left"}},NR=t("td",{style:{"text-align":"center"}},"面试题 04.08",-1),LR={style:{"text-align":"left"}},CR={href:"https://leetcode.cn/problems/first-common-ancestor-lcci",target:"_blank",rel:"noopener noreferrer"},PR=t("td",{style:{"text-align":"center"}},null,-1),KR={style:{"text-align":"left"}},BR=t("code",null,"树",-1),TR=t("code",null,"深度优先搜索",-1),VR=t("code",null,"二叉树",-1),UR={style:{"text-align":"left"}},RR=t("td",{style:{"text-align":"center"}},"面试题 04.09",-1),WR={style:{"text-align":"left"}},GR={href:"https://leetcode.cn/problems/bst-sequences-lcci",target:"_blank",rel:"noopener noreferrer"},YR=t("td",{style:{"text-align":"center"}},null,-1),QR={style:{"text-align":"left"}},SR=t("code",null,"树",-1),DR=t("code",null,"二叉搜索树",-1),FR=t("code",null,"回溯",-1),ZR=t("code",null,"1+",-1),AR={style:{"text-align":"left"}},JR=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),XR={style:{"text-align":"left"}},$R={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},tW=t("td",{style:{"text-align":"center"}},null,-1),eW={style:{"text-align":"left"}},oW=t("code",null,"树",-1),lW=t("code",null,"深度优先搜索",-1),nW=t("code",null,"二叉树",-1),sW=t("code",null,"2+",-1),dW={style:{"text-align":"left"}},_W=t("td",{style:{"text-align":"center"}},"面试题 04.12",-1),cW={style:{"text-align":"left"}},iW={href:"https://leetcode.cn/problems/paths-with-sum-lcci",target:"_blank",rel:"noopener noreferrer"},rW=t("td",{style:{"text-align":"center"}},null,-1),aW={style:{"text-align":"left"}},hW=t("code",null,"树",-1),uW=t("code",null,"深度优先搜索",-1),fW=t("code",null,"二叉树",-1),gW={style:{"text-align":"left"}},mW=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),yW={style:{"text-align":"left"}},xW={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},bW=t("td",{style:{"text-align":"center"}},null,-1),pW={style:{"text-align":"left"}},kW=t("code",null,"栈",-1),MW=t("code",null,"树",-1),jW=t("code",null,"深度优先搜索",-1),vW=t("code",null,"3+",-1),IW={style:{"text-align":"left"}};function EW(wW,HW){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),r("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[H]),_:1}),o(),z,o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[Y]),_:1})]),Q,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[D]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[F]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[J]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[Ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[Lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Ct]),_:1})])]),Pt,a(" prettier-ignore "),t("table",null,[Kt,t("tbody",null,[t("tr",null,[Bt,t("td",Tt,[t("a",Vt,[o("二叉树的中序遍历"),e(s)])]),t("td",Ut,[t("a",Rt,[o("[✓]"),e(s)])]),t("td",Wt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Yt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Qt]),_:1}),o(),St]),t("td",Dt,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ft,t("td",Zt,[t("a",At,[o("不同的二叉搜索树 II"),e(s)])]),t("td",Jt,[t("a",Xt,[o("[✓]"),e(s)])]),t("td",$t,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[te]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[ee]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[oe]),_:1}),o(),le]),t("td",ne,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[se,t("td",de,[t("a",_e,[o("不同的二叉搜索树"),e(s)])]),t("td",ce,[t("a",ie,[o("[✓]"),e(s)])]),t("td",re,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[he]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[ue]),_:1}),o(),fe]),t("td",ge,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[me,t("td",ye,[t("a",xe,[o("验证二叉搜索树"),e(s)])]),t("td",be,[t("a",pe,[o("[✓]"),e(s)])]),t("td",ke,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Me]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[je]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[ve]),_:1}),o(),Ie]),t("td",Ee,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[we,t("td",He,[t("a",ze,[o("恢复二叉搜索树"),e(s)])]),t("td",Oe,[t("a",qe,[o("[✓]"),e(s)])]),t("td",Ne,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Le]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ce]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Pe]),_:1}),o(),Ke]),t("td",Be,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Te,t("td",Ve,[t("a",Ue,[o("相同的树"),e(s)])]),t("td",Re,[t("a",We,[o("[✓]"),e(s)])]),t("td",Ge,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ye]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Qe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Se]),_:1}),o(),De]),t("td",Fe,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ze,t("td",Ae,[t("a",Je,[o("对称二叉树"),e(s)])]),t("td",Xe,[t("a",$e,[o("[✓]"),e(s)])]),t("td",to,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[eo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[oo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[lo]),_:1}),o(),no]),t("td",so,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[_o,t("td",co,[t("a",io,[o("二叉树的层序遍历"),e(s)])]),t("td",ro,[t("a",ao,[o("[✓]"),e(s)])]),t("td",ho,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[uo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[fo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[go]),_:1})]),t("td",mo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yo,t("td",xo,[t("a",bo,[o("二叉树的锯齿形层序遍历"),e(s)])]),t("td",po,[t("a",ko,[o("[✓]"),e(s)])]),t("td",Mo,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[jo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[vo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Io]),_:1})]),t("td",Eo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[wo,t("td",Ho,[t("a",zo,[o("二叉树的最大深度"),e(s)])]),t("td",Oo,[t("a",qo,[o("[✓]"),e(s)])]),t("td",No,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Lo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Co]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Po]),_:1}),o(),Ko]),t("td",Bo,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[To,t("td",Vo,[t("a",Uo,[o("从前序与中序遍历序列构造二叉树"),e(s)])]),t("td",Ro,[t("a",Wo,[o("[✓]"),e(s)])]),t("td",Go,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Yo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Qo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[So]),_:1}),o(),Do]),t("td",Fo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Zo,t("td",Ao,[t("a",Jo,[o("从中序与后序遍历序列构造二叉树"),e(s)])]),t("td",Xo,[t("a",$o,[o("[✓]"),e(s)])]),t("td",tl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[el]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ol]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ll]),_:1}),o(),nl]),t("td",sl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[dl,t("td",_l,[t("a",cl,[o("二叉树的层序遍历 II"),e(s)])]),t("td",il,[t("a",rl,[o("[✓]"),e(s)])]),t("td",al,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[hl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ul]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[fl]),_:1})]),t("td",gl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ml,t("td",yl,[t("a",xl,[o("将有序数组转换为二叉搜索树"),e(s)])]),t("td",bl,[t("a",pl,[o("[✓]"),e(s)])]),t("td",kl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ml]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[jl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[vl]),_:1}),o(),Il]),t("td",El,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[wl,t("td",Hl,[t("a",zl,[o("有序链表转换二叉搜索树"),e(s)])]),t("td",Ol,[t("a",ql,[o("[✓]"),e(s)])]),t("td",Nl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ll]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Cl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[Pl]),_:1}),o(),Kl]),t("td",Bl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Tl,t("td",Vl,[t("a",Ul,[o("平衡二叉树"),e(s)])]),t("td",Rl,[t("a",Wl,[o("[✓]"),e(s)])]),t("td",Gl,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Yl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ql]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Sl]),_:1})]),t("td",Dl,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Fl,t("td",Zl,[t("a",Al,[o("二叉树的最小深度"),e(s)])]),t("td",Jl,[t("a",Xl,[o("[✓]"),e(s)])]),t("td",$l,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[tn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[en]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[on]),_:1}),o(),ln]),t("td",nn,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[sn,t("td",dn,[t("a",_n,[o("路径总和"),e(s)])]),t("td",cn,[t("a",rn,[o("[✓]"),e(s)])]),t("td",an,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[hn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[un]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[fn]),_:1}),o(),gn]),t("td",mn,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[yn,t("td",xn,[t("a",bn,[o("路径总和 II"),e(s)])]),t("td",pn,[t("a",kn,[o("[✓]"),e(s)])]),t("td",Mn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[jn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[vn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[In]),_:1}),o(),En]),t("td",wn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Hn,t("td",zn,[t("a",On,[o("二叉树展开为链表"),e(s)])]),t("td",qn,[t("a",Nn,[o("[✓]"),e(s)])]),t("td",Ln,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Cn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Pn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Kn]),_:1}),o(),Bn]),t("td",Tn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Vn,t("td",Un,[t("a",Rn,[o("填充每个节点的下一个右侧节点指针"),e(s)])]),t("td",Wn,[t("a",Gn,[o("[✓]"),e(s)])]),t("td",Yn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Qn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Sn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Dn]),_:1}),o(),Fn]),t("td",Zn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[An,t("td",Jn,[t("a",Xn,[o("填充每个节点的下一个右侧节点指针 II"),e(s)])]),t("td",$n,[t("a",ts,[o("[✓]"),e(s)])]),t("td",es,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[os]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ls]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ns]),_:1}),o(),ss]),t("td",ds,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_s,t("td",cs,[t("a",is,[o("二叉树中的最大路径和"),e(s)])]),t("td",rs,[t("a",as,[o("[✓]"),e(s)])]),t("td",hs,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[us]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[fs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[gs]),_:1}),o(),ms]),t("td",ys,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[xs,t("td",bs,[t("a",ps,[o("求根节点到叶节点数字之和"),e(s)])]),t("td",ks,[t("a",Ms,[o("[✓]"),e(s)])]),t("td",js,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[vs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Is]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Es]),_:1})]),t("td",ws,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Hs,t("td",zs,[t("a",Os,[o("二叉树的前序遍历"),e(s)])]),t("td",qs,[t("a",Ns,[o("[✓]"),e(s)])]),t("td",Ls,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Cs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ps]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ks]),_:1}),o(),Bs]),t("td",Ts,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Vs,t("td",Us,[t("a",Rs,[o("二叉树的后序遍历"),e(s)])]),t("td",Ws,[t("a",Gs,[o("[✓]"),e(s)])]),t("td",Ys,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Qs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ss]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ds]),_:1}),o(),Fs]),t("td",Zs,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[As,t("td",Js,[t("a",Xs,[o("上下翻转二叉树"),e(s)])]),t("td",$s,[t("a",td,[o("[✓]"),e(s)])]),t("td",ed,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[od]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ld]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[nd]),_:1})]),t("td",sd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[dd,t("td",_d,[t("a",cd,[o("二叉搜索树迭代器"),e(s)])]),t("td",id,[t("a",rd,[o("[✓]"),e(s)])]),t("td",ad,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[hd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ud]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[fd]),_:1}),o(),gd]),t("td",md,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yd,t("td",xd,[t("a",bd,[o("二叉树的右视图"),e(s)])]),t("td",pd,[t("a",kd,[o("[✓]"),e(s)])]),t("td",Md,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[jd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[vd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Id]),_:1}),o(),Ed]),t("td",wd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Hd,t("td",zd,[t("a",Od,[o("完全二叉树的节点个数"),e(s)])]),t("td",qd,[t("a",Nd,[o("[✓]"),e(s)])]),t("td",Ld,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Cd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Pd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Kd]),_:1}),o(),Bd]),t("td",Td,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Vd,t("td",Ud,[t("a",Rd,[o("翻转二叉树"),e(s)])]),t("td",Wd,[t("a",Gd,[o("[✓]"),e(s)])]),t("td",Yd,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Qd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Sd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Dd]),_:1}),o(),Fd]),t("td",Zd,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ad,t("td",Jd,[t("a",Xd,[o("二叉搜索树中第 K 小的元素"),e(s)])]),t("td",$d,[t("a",t_,[o("[✓]"),e(s)])]),t("td",e_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[o_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[l_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[n_]),_:1}),o(),s_]),t("td",d_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[__,t("td",c_,[t("a",i_,[o("二叉搜索树的最近公共祖先"),e(s)])]),t("td",r_,[t("a",a_,[o("[✓]"),e(s)])]),t("td",h_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[u_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[f_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[g_]),_:1}),o(),m_]),t("td",y_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[x_,t("td",b_,[t("a",p_,[o("二叉树的最近公共祖先"),e(s)])]),t("td",k_,[t("a",M_,[o("[✓]"),e(s)])]),t("td",j_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[v_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[I_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[E_]),_:1})]),t("td",w_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[H_,t("td",z_,[t("a",O_,[o("统计同值子树"),e(s)])]),q_,t("td",N_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[L_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[C_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[P_]),_:1})]),t("td",K_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[B_,t("td",T_,[t("a",V_,[o("验证二叉搜索树的前序遍历序列"),e(s)])]),U_,t("td",R_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[W_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[G_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Y_]),_:1}),o(),Q_]),t("td",S_,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[D_,t("td",F_,[t("a",Z_,[o("二叉树的所有路径"),e(s)])]),t("td",A_,[t("a",J_,[o("[✓]"),e(s)])]),t("td",X_,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[tc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[ec]),_:1}),o(),oc]),t("td",lc,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[nc,t("td",sc,[t("a",dc,[o("最接近的二叉搜索树值"),e(s)])]),_c,t("td",cc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ic]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[rc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[ac]),_:1}),o(),hc]),t("td",uc,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[fc,t("td",gc,[t("a",mc,[o("最接近的二叉搜索树值 II"),e(s)])]),yc,t("td",xc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[bc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[pc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[kc]),_:1}),o(),Mc]),t("td",jc,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[vc,t("td",Ic,[t("a",Ec,[o("二叉搜索树中的中序后继"),e(s)])]),wc,t("td",Hc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[zc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Oc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[qc]),_:1}),o(),Nc]),t("td",Lc,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Cc,t("td",Pc,[t("a",Kc,[o("二叉树的序列化与反序列化"),e(s)])]),t("td",Bc,[t("a",Tc,[o("[✓]"),e(s)])]),t("td",Vc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Uc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Rc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Wc]),_:1}),o(),Gc]),t("td",Yc,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Qc,t("td",Sc,[t("a",Dc,[o("二叉树最长连续序列"),e(s)])]),Fc,t("td",Zc,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ac]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Jc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Xc]),_:1})]),t("td",$c,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ti,t("td",ei,[t("a",oi,[o("二叉树的垂直遍历"),e(s)])]),li,t("td",ni,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[si]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[di]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[_i]),_:1}),o(),ci]),t("td",ii,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ri,t("td",ai,[t("a",hi,[o("验证二叉树的前序序列化"),e(s)])]),ui,t("td",fi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[gi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[mi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[yi]),_:1}),o(),xi]),t("td",bi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[pi,t("td",ki,[t("a",Mi,[o("最大二叉搜索子树"),e(s)])]),ji,t("td",vi,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ii]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ei]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[wi]),_:1}),o(),Hi]),t("td",zi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Oi,t("td",qi,[t("a",Ni,[o("打家劫舍 III"),e(s)])]),Li,t("td",Ci,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Pi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ki]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Bi]),_:1}),o(),Ti]),t("td",Vi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ui,t("td",Ri,[t("a",Wi,[o("扁平化嵌套列表迭代器"),e(s)])]),Gi,t("td",Yi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Qi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Si]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Di]),_:1}),o(),Fi]),t("td",Zi,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ai,t("td",Ji,[t("a",Xi,[o("寻找二叉树的叶子节点"),e(s)])]),t("td",$i,[t("a",tr,[o("[✓]"),e(s)])]),t("td",er,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[or]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[lr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[nr]),_:1})]),t("td",sr,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[dr,t("td",_r,[t("a",cr,[o("左叶子之和"),e(s)])]),ir,t("td",rr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ar]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[hr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ur]),_:1}),o(),fr]),t("td",gr,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[mr,t("td",yr,[t("a",xr,[o("将二叉搜索树转化为排序的双向链表"),e(s)])]),t("td",br,[t("a",pr,[o("[✓]"),e(s)])]),t("td",kr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Mr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[jr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[vr]),_:1}),o(),Ir]),t("td",Er,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[wr,t("td",Hr,[t("a",zr,[o("建立四叉树"),e(s)])]),t("td",Or,[t("a",qr,[o("[✓]"),e(s)])]),t("td",Nr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Lr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Cr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Pr]),_:1}),o(),Kr]),t("td",Br,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Tr,t("td",Vr,[t("a",Ur,[o("序列化和反序列化 N 叉树"),e(s)])]),Rr,t("td",Wr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Gr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Yr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Qr]),_:1}),o(),Sr]),t("td",Dr,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Fr,t("td",Zr,[t("a",Ar,[o("N 叉树的层序遍历"),e(s)])]),Jr,t("td",Xr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$r]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ta]),_:1})]),t("td",ea,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[oa,t("td",la,[t("a",na,[o("将 N 叉树编码为二叉树"),e(s)])]),sa,t("td",da,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[_a]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ca]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ia]),_:1}),o(),ra]),t("td",aa,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ha,t("td",ua,[t("a",fa,[o("路径总和 III"),e(s)])]),t("td",ga,[t("a",ma,[o("[✓]"),e(s)])]),t("td",ya,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[xa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ba]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[pa]),_:1})]),t("td",ka,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ma,t("td",ja,[t("a",va,[o("序列化和反序列化二叉搜索树"),e(s)])]),Ia,t("td",Ea,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[wa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Ha]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[za]),_:1}),o(),Oa]),t("td",qa,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Na,t("td",La,[t("a",Ca,[o("删除二叉搜索树中的节点"),e(s)])]),t("td",Pa,[t("a",Ka,[o("[✓]"),e(s)])]),t("td",Ba,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ta]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Va]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Ua]),_:1})]),t("td",Ra,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wa,t("td",Ga,[t("a",Ya,[o("二叉搜索树中的众数"),e(s)])]),Qa,t("td",Sa,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Da]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Fa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Za]),_:1}),o(),Aa]),t("td",Ja,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Xa,t("td",$a,[t("a",th,[o("出现次数最多的子树元素和"),e(s)])]),eh,t("td",oh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[lh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[nh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[sh]),_:1}),o(),dh]),t("td",_h,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ch,t("td",ih,[t("a",rh,[o("二叉搜索树中的中序后继 II"),e(s)])]),ah,t("td",hh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[uh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[fh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[gh]),_:1})]),t("td",mh,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yh,t("td",xh,[t("a",bh,[o("找树左下角的值"),e(s)])]),ph,t("td",kh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Mh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[jh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[vh]),_:1}),o(),Ih]),t("td",Eh,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[wh,t("td",Hh,[t("a",zh,[o("在每个树行中找最大值"),e(s)])]),Oh,t("td",qh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Nh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Lh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Ch]),_:1}),o(),Ph]),t("td",Kh,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Bh,t("td",Th,[t("a",Vh,[o("二叉搜索树的最小绝对差"),e(s)])]),t("td",Uh,[t("a",Rh,[o("[✓]"),e(s)])]),t("td",Wh,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Gh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Yh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Qh]),_:1}),o(),Sh]),t("td",Dh,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Fh,t("td",Zh,[t("a",Ah,[o("从字符串生成二叉树"),e(s)])]),Jh,t("td",Xh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[$h]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[t1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[e1]),_:1}),o(),o1]),t("td",l1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[n1,t("td",s1,[t("a",d1,[o("把二叉搜索树转换为累加树"),e(s)])]),_1,t("td",c1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[i1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[r1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[a1]),_:1}),o(),h1]),t("td",u1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[f1,t("td",g1,[t("a",m1,[o("二叉树的直径"),e(s)])]),t("td",y1,[t("a",x1,[o("[✓]"),e(s)])]),t("td",b1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[p1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[k1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[M1]),_:1})]),t("td",j1,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[v1,t("td",I1,[t("a",E1,[o("二叉树的边界"),e(s)])]),w1,t("td",H1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[z1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[O1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[q1]),_:1})]),t("td",N1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[L1,t("td",C1,[t("a",P1,[o("二叉树最长连续序列 II"),e(s)])]),K1,t("td",B1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[T1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[V1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[U1]),_:1})]),t("td",R1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[W1,t("td",G1,[t("a",Y1,[o("四叉树交集"),e(s)])]),Q1,t("td",S1,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[D1]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[F1]),_:1})]),t("td",Z1,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[A1,t("td",J1,[t("a",X1,[o("N 叉树的最大深度"),e(s)])]),t("td",$1,[t("a",tu,[o("[✓]"),e(s)])]),t("td",eu,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ou]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[lu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[nu]),_:1})]),t("td",su,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[du,t("td",_u,[t("a",cu,[o("二叉树的坡度"),e(s)])]),iu,t("td",ru,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[au]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[hu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[uu]),_:1})]),t("td",fu,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[gu,t("td",mu,[t("a",yu,[o("另一棵树的子树"),e(s)])]),t("td",xu,[t("a",bu,[o("[✓]"),e(s)])]),t("td",pu,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ku]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Mu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[ju]),_:1}),o(),vu]),t("td",Iu,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Eu,t("td",wu,[t("a",Hu,[o("杀掉进程"),e(s)])]),zu,t("td",Ou,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[qu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Nu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Lu]),_:1}),o(),Cu]),t("td",Pu,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ku,t("td",Bu,[t("a",Tu,[o("N 叉树的前序遍历"),e(s)])]),t("td",Vu,[t("a",Uu,[o("[✓]"),e(s)])]),t("td",Ru,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Wu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Gu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Yu]),_:1})]),t("td",Qu,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Su,t("td",Du,[t("a",Fu,[o("N 叉树的后序遍历"),e(s)])]),t("td",Zu,[t("a",Au,[o("[✓]"),e(s)])]),t("td",Ju,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Xu]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$u]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[tf]),_:1})]),t("td",ef,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[of,t("td",lf,[t("a",nf,[o("根据二叉树创建字符串"),e(s)])]),sf,t("td",df,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[_f]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[cf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[rf]),_:1}),o(),af]),t("td",hf,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[uf,t("td",ff,[t("a",gf,[o("合并二叉树"),e(s)])]),t("td",mf,[t("a",yf,[o("[✓]"),e(s)])]),t("td",xf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[bf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[pf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[kf]),_:1}),o(),Mf]),t("td",jf,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[vf,t("td",If,[t("a",Ef,[o("在二叉树中增加一行"),e(s)])]),wf,t("td",Hf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[zf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Of]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[qf]),_:1}),o(),Nf]),t("td",Lf,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Cf,t("td",Pf,[t("a",Kf,[o("二叉树的层平均值"),e(s)])]),t("td",Bf,[t("a",Tf,[o("[✓]"),e(s)])]),t("td",Vf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Uf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Rf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Wf]),_:1}),o(),Gf]),t("td",Yf,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Qf,t("td",Sf,[t("a",Df,[o("寻找重复的子树"),e(s)])]),Ff,t("td",Zf,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Af]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Jf]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Xf]),_:1}),o(),$f]),t("td",tg,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[eg,t("td",og,[t("a",lg,[o("两数之和 IV - 输入二叉搜索树"),e(s)])]),ng,t("td",sg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[dg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[_g]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[cg]),_:1}),o(),ig]),t("td",rg,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ag,t("td",hg,[t("a",ug,[o("最大二叉树"),e(s)])]),t("td",fg,[t("a",gg,[o("[✓]"),e(s)])]),t("td",mg,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[yg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[xg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[bg]),_:1}),o(),pg]),t("td",kg,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Mg,t("td",jg,[t("a",vg,[o("输出二叉树"),e(s)])]),Ig,t("td",Eg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[wg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Hg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[zg]),_:1}),o(),Og]),t("td",qg,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ng,t("td",Lg,[t("a",Cg,[o("二叉树最大宽度"),e(s)])]),t("td",Pg,[t("a",Kg,[o("[✓]"),e(s)])]),t("td",Bg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Tg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Vg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Ug]),_:1}),o(),Rg]),t("td",Wg,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Gg,t("td",Yg,[t("a",Qg,[o("均匀树划分"),e(s)])]),Sg,t("td",Dg,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Fg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Zg]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Ag]),_:1})]),t("td",Jg,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xg,t("td",$g,[t("a",t2,[o("路径总和 IV"),e(s)])]),e2,t("td",o2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[l2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[n2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[s2]),_:1}),o(),d2]),t("td",_2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[c2,t("td",i2,[t("a",r2,[o("修剪二叉搜索树"),e(s)])]),a2,t("td",h2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[u2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[f2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[g2]),_:1}),o(),m2]),t("td",y2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[x2,t("td",b2,[t("a",p2,[o("二叉树中第二小的节点"),e(s)])]),k2,t("td",M2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[j2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[v2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[I2]),_:1})]),t("td",E2,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[w2,t("td",H2,[t("a",z2,[o("最长同值路径"),e(s)])]),O2,t("td",q2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[N2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[L2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[C2]),_:1})]),t("td",P2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[K2,t("td",B2,[t("a",T2,[o("员工的重要性"),e(s)])]),V2,t("td",U2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[R2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[W2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[G2]),_:1}),o(),Y2]),t("td",Q2,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[S2,t("td",D2,[t("a",F2,[o("二叉搜索树中的搜索"),e(s)])]),t("td",Z2,[t("a",A2,[o("[✓]"),e(s)])]),t("td",J2,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[X2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[$2]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[tm]),_:1})]),t("td",em,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[om,t("td",lm,[t("a",nm,[o("二叉搜索树中的插入操作"),e(s)])]),t("td",sm,[t("a",dm,[o("[✓]"),e(s)])]),t("td",_m,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[cm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[im]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[rm]),_:1})]),t("td",am,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[hm,t("td",um,[t("a",fm,[o("数据流中的第 K 大元素"),e(s)])]),t("td",gm,[t("a",mm,[o("[✓]"),e(s)])]),t("td",ym,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[xm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[bm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[pm]),_:1}),o(),km]),t("td",Mm,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[jm,t("td",vm,[t("a",Im,[o("二叉树最近的叶节点"),e(s)])]),Em,t("td",wm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Hm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[zm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Om]),_:1}),o(),qm]),t("td",Nm,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Lm,t("td",Cm,[t("a",Pm,[o("拆分二叉搜索树"),e(s)])]),Km,t("td",Bm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Tm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Vm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[Um]),_:1}),o(),Rm]),t("td",Wm,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Gm,t("td",Ym,[t("a",Qm,[o("二叉搜索树节点最小距离"),e(s)])]),t("td",Sm,[t("a",Dm,[o("[✓]"),e(s)])]),t("td",Fm,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Zm]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Am]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Jm]),_:1}),o(),Xm]),t("td",$m,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ty,t("td",ey,[t("a",oy,[o("二叉树剪枝"),e(s)])]),ly,t("td",ny,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[sy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[dy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[_y]),_:1})]),t("td",cy,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[iy,t("td",ry,[t("a",ay,[o("树中距离之和"),e(s)])]),hy,t("td",uy,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[fy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[gy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[my]),_:1}),o(),yy]),t("td",xy,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[by,t("td",py,[t("a",ky,[o("二叉树中所有距离为 K 的结点"),e(s)])]),My,t("td",jy,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[vy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Iy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Ey]),_:1}),o(),wy]),t("td",Hy,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zy,t("td",Oy,[t("a",qy,[o("具有所有最深节点的最小子树"),e(s)])]),Ny,t("td",Ly,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Cy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Py]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Ky]),_:1}),o(),By]),t("td",Ty,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Vy,t("td",Uy,[t("a",Ry,[o("叶子相似的树"),e(s)])]),Wy,t("td",Gy,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Yy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Qy]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Sy]),_:1})]),t("td",Dy,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Fy,t("td",Zy,[t("a",Ay,[o("根据前序和后序遍历构造二叉树"),e(s)])]),t("td",Jy,[t("a",Xy,[o("[✓]"),e(s)])]),t("td",$y,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[tx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ex]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[ox]),_:1}),o(),lx]),t("td",nx,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[sx,t("td",dx,[t("a",_x,[o("所有可能的真二叉树"),e(s)])]),cx,t("td",ix,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[rx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[ax]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[hx]),_:1}),o(),ux]),t("td",fx,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[gx,t("td",mx,[t("a",yx,[o("递增顺序搜索树"),e(s)])]),xx,t("td",bx,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[px]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[kx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Mx]),_:1}),o(),jx]),t("td",vx,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ix,t("td",Ex,[t("a",wx,[o("完全二叉树插入器"),e(s)])]),Hx,t("td",zx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ox]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[qx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Nx]),_:1}),o(),Lx]),t("td",Cx,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Px,t("td",Kx,[t("a",Bx,[o("二叉搜索树的范围和"),e(s)])]),Tx,t("td",Vx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ux]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Rx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Wx]),_:1}),o(),Gx]),t("td",Yx,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Qx,t("td",Sx,[t("a",Dx,[o("翻转等价二叉树"),e(s)])]),Fx,t("td",Zx,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ax]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Jx]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Xx]),_:1})]),t("td",$x,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[tb,t("td",eb,[t("a",ob,[o("二叉树的完全性检验"),e(s)])]),t("td",lb,[t("a",nb,[o("[✓]"),e(s)])]),t("td",sb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[db]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[_b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[cb]),_:1})]),t("td",ib,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[rb,t("td",ab,[t("a",hb,[o("单值二叉树"),e(s)])]),ub,t("td",fb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[gb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[mb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[yb]),_:1}),o(),xb]),t("td",bb,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[pb,t("td",kb,[t("a",Mb,[o("监控二叉树"),e(s)])]),jb,t("td",vb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ib]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Eb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[wb]),_:1}),o(),Hb]),t("td",zb,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ob,t("td",qb,[t("a",Nb,[o("翻转二叉树以匹配先序遍历"),e(s)])]),Lb,t("td",Cb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Pb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Kb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Bb]),_:1})]),t("td",Tb,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Vb,t("td",Ub,[t("a",Rb,[o("在二叉树中分配硬币"),e(s)])]),Wb,t("td",Gb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Yb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Qb]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Sb]),_:1})]),t("td",Db,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Fb,t("td",Zb,[t("a",Ab,[o("二叉树的垂序遍历"),e(s)])]),Jb,t("td",Xb,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[tp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ep]),_:1}),o(),op]),t("td",lp,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[np,t("td",sp,[t("a",dp,[o("从叶结点开始的最小字符串"),e(s)])]),_p,t("td",cp,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ip]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[rp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[ap]),_:1}),o(),hp]),t("td",up,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fp,t("td",gp,[t("a",mp,[o("二叉树的堂兄弟节点"),e(s)])]),yp,t("td",xp,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[bp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[pp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[kp]),_:1}),o(),Mp]),t("td",jp,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[vp,t("td",Ip,[t("a",Ep,[o("最大二叉树 II"),e(s)])]),wp,t("td",Hp,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[zp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Op]),_:1})]),t("td",qp,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Np,t("td",Lp,[t("a",Cp,[o("前序遍历构造二叉搜索树"),e(s)])]),t("td",Pp,[t("a",Kp,[o("[✓]"),e(s)])]),t("td",Bp,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Tp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Vp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Up]),_:1}),o(),Rp]),t("td",Wp,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Gp,t("td",Yp,[t("a",Qp,[o("从根到叶的二进制数之和"),e(s)])]),Sp,t("td",Dp,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Fp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Zp]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Ap]),_:1})]),t("td",Jp,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Xp,t("td",$p,[t("a",t0,[o("节点与其祖先之间的最大差值"),e(s)])]),e0,t("td",o0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[l0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[n0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[s0]),_:1})]),t("td",d0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_0,t("td",c0,[t("a",i0,[o("从先序遍历还原二叉树"),e(s)])]),r0,t("td",a0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[h0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[u0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[f0]),_:1}),o(),g0]),t("td",m0,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[y0,t("td",x0,[t("a",b0,[o("从二叉搜索树到更大和树"),e(s)])]),p0,t("td",k0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[M0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[j0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[v0]),_:1}),o(),I0]),t("td",E0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[w0,t("td",H0,[t("a",z0,[o("根到叶路径上的不足节点"),e(s)])]),O0,t("td",q0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[N0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[L0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[C0]),_:1})]),t("td",P0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[K0,t("td",B0,[t("a",T0,[o("二叉树寻路"),e(s)])]),V0,t("td",U0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[R0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[W0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[G0]),_:1})]),t("td",Y0,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Q0,t("td",S0,[t("a",D0,[o("删点成林"),e(s)])]),F0,t("td",Z0,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[A0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[J0]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[X0]),_:1}),o(),$0]),t("td",t3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[e3,t("td",o3,[t("a",l3,[o("子树的最大平均值"),e(s)])]),n3,t("td",s3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[d3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[_3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[c3]),_:1})]),t("td",i3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[r3,t("td",a3,[t("a",h3,[o("最深叶节点的最近公共祖先"),e(s)])]),u3,t("td",f3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[g3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[m3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[y3]),_:1}),o(),x3]),t("td",b3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[p3,t("td",k3,[t("a",M3,[o("二叉树着色游戏"),e(s)])]),j3,t("td",v3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[I3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[E3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[w3]),_:1})]),t("td",H3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[z3,t("td",O3,[t("a",q3,[o("最大层内元素和"),e(s)])]),N3,t("td",L3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[C3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[P3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[K3]),_:1}),o(),B3]),t("td",T3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[V3,t("td",U3,[t("a",R3,[o("查找两棵二叉搜索树之和"),e(s)])]),W3,t("td",G3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Y3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Q3]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[S3]),_:1}),o(),D3]),t("td",F3,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Z3,t("td",A3,[t("a",J3,[o("树的直径"),e(s)])]),X3,t("td",$3,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[t6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[e6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[o6]),_:1}),o(),l6]),t("td",n6,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[s6,t("td",d6,[t("a",_6,[o("最小公共区域"),e(s)])]),c6,t("td",i6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[r6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[a6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[h6]),_:1}),o(),u6]),t("td",f6,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[g6,t("td",m6,[t("a",y6,[o("在受污染的二叉树中查找元素"),e(s)])]),x6,t("td",b6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[p6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[k6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[M6]),_:1}),o(),j6]),t("td",v6,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[I6,t("td",E6,[t("a",w6,[o("删除树节点"),e(s)])]),H6,t("td",z6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[O6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[q6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[N6]),_:1}),o(),L6]),t("td",C6,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[P6,t("td",K6,[t("a",B6,[o("层数最深叶子节点的和"),e(s)])]),T6,t("td",V6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[U6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[R6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[W6]),_:1}),o(),G6]),t("td",Y6,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Q6,t("td",S6,[t("a",D6,[o("两棵二叉搜索树中的所有元素"),e(s)])]),F6,t("td",Z6,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[A6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[J6]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[X6]),_:1}),o(),$6]),t("td",t8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[e8,t("td",o8,[t("a",l8,[o("祖父节点值为偶数的节点和"),e(s)])]),n8,t("td",s8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[d8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[_8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[c8]),_:1}),o(),i8]),t("td",r8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[a8,t("td",h8,[t("a",u8,[o("删除给定值的叶子节点"),e(s)])]),f8,t("td",g8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[m8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[y8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[x8]),_:1})]),t("td",b8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[p8,t("td",k8,[t("a",M8,[o("分裂二叉树的最大乘积"),e(s)])]),j8,t("td",v8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[I8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[E8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[w8]),_:1})]),t("td",H8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[z8,t("td",O8,[t("a",q8,[o("验证二叉树"),e(s)])]),N8,t("td",L8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[C8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[P8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[K8]),_:1}),o(),B8]),t("td",T8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[V8,t("td",U8,[t("a",R8,[o("二叉树中的链表"),e(s)])]),W8,t("td",G8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Y8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Q8]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[S8]),_:1}),o(),D8]),t("td",F8,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Z8,t("td",A8,[t("a",J8,[o("二叉树中的最长交错路径"),e(s)])]),X8,t("td",$8,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[t4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[e4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[o4]),_:1}),o(),l4]),t("td",n4,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[s4,t("td",d4,[t("a",_4,[o("二叉搜索子树的最大键值和"),e(s)])]),c4,t("td",i4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[r4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[a4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[h4]),_:1}),o(),u4]),t("td",f4,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[g4,t("td",m4,[t("a",y4,[o("通知所有员工所需的时间"),e(s)])]),x4,t("td",b4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[p4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[k4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[M4]),_:1})]),t("td",j4,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[v4,t("td",I4,[t("a",E4,[o("T 秒后青蛙的位置"),e(s)])]),w4,t("td",H4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[z4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[O4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[q4]),_:1}),o(),N4]),t("td",L4,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[C4,t("td",P4,[t("a",K4,[o("找出克隆二叉树中的相同节点"),e(s)])]),B4,t("td",T4,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[V4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[U4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[R4]),_:1}),o(),W4]),t("td",G4,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Y4,t("td",Q4,[t("a",S4,[o("将二叉搜索树变平衡"),e(s)])]),D4,t("td",F4,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Z4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[A4]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[J4]),_:1}),o(),X4]),t("td",$4,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[t5,t("td",e5,[t("a",o5,[o("判断给定的序列是否是二叉树从根到叶的路径"),e(s)])]),l5,t("td",n5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[s5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[d5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[_5]),_:1}),o(),c5]),t("td",i5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[r5,t("td",a5,[t("a",h5,[o("收集树上所有苹果的最少时间"),e(s)])]),u5,t("td",f5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[g5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[m5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[y5]),_:1}),o(),x5]),t("td",b5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[p5,t("td",k5,[t("a",M5,[o("统计二叉树中好节点的数目"),e(s)])]),j5,t("td",v5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[I5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[E5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[w5]),_:1}),o(),H5]),t("td",z5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[O5,t("td",q5,[t("a",N5,[o("二叉树中的伪回文路径"),e(s)])]),L5,t("td",C5,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[P5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[K5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[B5]),_:1}),o(),T5]),t("td",V5,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[U5,t("td",R5,[t("a",W5,[o("寻找所有的独生节点"),e(s)])]),G5,t("td",Y5,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Q5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[S5]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[D5]),_:1}),o(),F5]),t("td",Z5,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[A5,t("td",J5,[t("a",X5,[o("树节点的第 K 个祖先"),e(s)])]),$5,t("td",t7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[e7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[o7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[l7]),_:1}),o(),n7]),t("td",s7,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[d7,t("td",_7,[t("a",c7,[o("克隆含随机指针的二叉树"),e(s)])]),i7,t("td",r7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[a7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[h7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[u7]),_:1}),o(),f7]),t("td",g7,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[m7,t("td",y7,[t("a",x7,[o("克隆 N 叉树"),e(s)])]),b7,t("td",p7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[k7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[M7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[j7]),_:1}),o(),v7]),t("td",I7,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[E7,t("td",w7,[t("a",H7,[o("找到 N 叉树的根节点"),e(s)])]),z7,t("td",O7,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[q7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[N7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[L7]),_:1}),o(),C7]),t("td",P7,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[K7,t("td",B7,[t("a",T7,[o("移动 N 叉树的子树"),e(s)])]),V7,t("td",U7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[R7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[W7]),_:1})]),t("td",G7,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Y7,t("td",Q7,[t("a",S7,[o("子树中标签相同的节点数"),e(s)])]),D7,t("td",F7,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Z7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[A7]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[J7]),_:1}),o(),X7]),t("td",$7,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[t9,t("td",e9,[t("a",o9,[o("N 叉树的直径"),e(s)])]),t("td",l9,[t("a",n9,[o("[✓]"),e(s)])]),t("td",s9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[d9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[_9]),_:1})]),t("td",c9,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[i9,t("td",r9,[t("a",a9,[o("好叶子节点对的数量"),e(s)])]),h9,t("td",u9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[f9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[g9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[m9]),_:1})]),t("td",y9,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[x9,t("td",b9,[t("a",p9,[o("将子数组重新排序得到同一个二叉搜索树的方案数"),e(s)])]),k9,t("td",M9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[j9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[v9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[I9]),_:1}),o(),E9]),t("td",w9,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[H9,t("td",z9,[t("a",O9,[o("二叉搜索树迭代器 II"),e(s)])]),q9,t("td",N9,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[L9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[C9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[P9]),_:1}),o(),K9]),t("td",B9,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[T9,t("td",V9,[t("a",U9,[o("根据中缀表达式构造二叉表达式树"),e(s)])]),R9,t("td",W9,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[G9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Y9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Q9]),_:1}),o(),S9]),t("td",D9,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[F9,t("td",Z9,[t("a",A9,[o("王位继承顺序"),e(s)])]),J9,t("td",X9,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$9]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[tk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[ek]),_:1}),o(),ok]),t("td",lk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[nk,t("td",sk,[t("a",dk,[o("找到二叉树中最近的右侧节点"),e(s)])]),_k,t("td",ck,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ik]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[rk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[ak]),_:1})]),t("td",hk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[uk,t("td",fk,[t("a",gk,[o("奇偶树"),e(s)])]),mk,t("td",yk,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[xk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[bk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[pk]),_:1})]),t("td",kk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Mk,t("td",jk,[t("a",vk,[o("检查两棵二叉表达式树是否等价"),e(s)])]),Ik,t("td",Ek,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[wk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Hk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[zk]),_:1}),o(),Ok]),t("td",qk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Nk,t("td",Lk,[t("a",Ck,[o("统计子树中城市之间最大距离"),e(s)])]),Pk,t("td",Kk,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Bk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Tk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Vk]),_:1}),o(),Uk]),t("td",Rk,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Wk,t("td",Gk,[t("a",Yk,[o("设计带解析函数的表达式树"),e(s)])]),Qk,t("td",Sk,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[Dk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Fk]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[Zk]),_:1}),o(),Ak]),t("td",Jk,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xk,t("td",$k,[t("a",tM,[o("二叉树的最近公共祖先 II"),e(s)])]),eM,t("td",oM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[lM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[nM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[sM]),_:1})]),t("td",dM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_M,t("td",cM,[t("a",iM,[o("二叉树的最近公共祖先 III"),e(s)])]),rM,t("td",aM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[hM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[uM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[fM]),_:1}),o(),gM]),t("td",mM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yM,t("td",xM,[t("a",bM,[o("纠正二叉树"),e(s)])]),pM,t("td",kM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[MM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[jM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[vM]),_:1}),o(),IM]),t("td",EM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[wM,t("td",HM,[t("a",zM,[o("改变二叉树的根节点"),e(s)])]),OM,t("td",qM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[NM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[LM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[CM]),_:1})]),t("td",PM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[KM,t("td",BM,[t("a",TM,[o("二叉树的最近公共祖先 IV"),e(s)])]),VM,t("td",UM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[RM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[WM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[GM]),_:1}),o(),YM]),t("td",QM,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[SM,t("td",DM,[t("a",FM,[o("重构一棵树的方案数"),e(s)])]),ZM,t("td",AM,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[JM]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[XM]),_:1})]),t("td",$M,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[tj,t("td",ej,[t("a",oj,[o("找到二叉树中的距离"),e(s)])]),lj,t("td",nj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[sj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[dj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[_j]),_:1}),o(),cj]),t("td",ij,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[rj,t("td",aj,[t("a",hj,[o("互质树"),e(s)])]),uj,t("td",fj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[gj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[mj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[yj]),_:1}),o(),xj]),t("td",bj,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[pj,t("td",kj,[t("a",Mj,[o("给定二叉搜索树的插入顺序求深度"),e(s)])]),jj,t("td",vj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ij]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Ej]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[wj]),_:1}),o(),Hj]),t("td",zj,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Oj,t("td",qj,[t("a",Nj,[o("统计为蚁群构筑房间的不同顺序"),e(s)])]),Lj,t("td",Cj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Pj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Kj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[Bj]),_:1}),o(),Tj]),t("td",Vj,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Uj,t("td",Rj,[t("a",Wj,[o("合并多棵二叉搜索树"),e(s)])]),Gj,t("td",Yj,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Qj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Sj]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Dj]),_:1}),o(),Fj]),t("td",Zj,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Aj,t("td",Jj,[t("a",Xj,[o("值等于子节点值之和的节点数量"),e(s)])]),$j,t("td",tv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ev]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ov]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[lv]),_:1})]),t("td",nv,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[sv,t("td",dv,[t("a",_v,[o("树上的操作"),e(s)])]),cv,t("td",iv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[rv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[av]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[hv]),_:1}),o(),uv]),t("td",fv,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[gv,t("td",mv,[t("a",yv,[o("每棵子树内缺失的最小基因值"),e(s)])]),xv,t("td",bv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[pv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[kv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[Mv]),_:1}),o(),jv]),t("td",vv,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Iv,t("td",Ev,[t("a",wv,[o("斐波那契树的移除子树游戏"),e(s)])]),Hv,t("td",zv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ov]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[qv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Nv]),_:1}),o(),Lv]),t("td",Cv,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Pv,t("td",Kv,[t("a",Bv,[o("统计最高分的节点数目"),e(s)])]),Tv,t("td",Vv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Uv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Rv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Wv]),_:1}),o(),Gv]),t("td",Yv,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Qv,t("td",Sv,[t("a",Dv,[o("从二叉树一个节点到另一个节点每一步的方向"),e(s)])]),Fv,t("td",Zv,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Av]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Jv]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[Xv]),_:1}),o(),$v]),t("td",tI,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[eI,t("td",oI,[t("a",lI,[o("根据描述创建二叉树"),e(s)])]),t("td",nI,[t("a",sI,[o("[✓]"),e(s)])]),t("td",dI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[_I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[cI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[iI]),_:1}),o(),rI]),t("td",aI,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[hI,t("td",uI,[t("a",fI,[o("判断根结点是否等于子结点之和"),e(s)])]),gI,t("td",mI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[yI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[xI]),_:1})]),t("td",bI,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[pI,t("td",kI,[t("a",MI,[o("相邻字符不同的最长路径"),e(s)])]),jI,t("td",vI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[II]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[EI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[wI]),_:1}),o(),HI]),t("td",zI,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[OI,t("td",qI,[t("a",NI,[o("统计值等于子树平均值的节点数"),e(s)])]),LI,t("td",CI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[PI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[KI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[BI]),_:1})]),t("td",TI,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[VI,t("td",UI,[t("a",RI,[o("树中最接近路径的节点"),e(s)])]),WI,t("td",GI,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[YI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[QI]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[SI]),_:1}),o(),DI]),t("td",FI,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ZI,t("td",AI,[t("a",JI,[o("二叉树中得到结果所需的最少翻转次数"),e(s)])]),XI,t("td",$I,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[tE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[eE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[oE]),_:1}),o(),lE]),t("td",nE,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[sE,t("td",dE,[t("a",_E,[o("从树中删除边的最小分数"),e(s)])]),cE,t("td",iE,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[rE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[aE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[hE]),_:1}),o(),uE]),t("td",fE,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[gE,t("td",mE,[t("a",yE,[o("计算布尔二叉树的值"),e(s)])]),xE,t("td",bE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[pE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[kE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[ME]),_:1})]),t("td",jE,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[vE,t("td",IE,[t("a",EE,[o("受限条件下可到达节点的数目"),e(s)])]),wE,t("td",HE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[zE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[OE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[qE]),_:1}),o(),NE]),t("td",LE,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[CE,t("td",PE,[t("a",KE,[o("选择边来最大化树的得分"),e(s)])]),BE,t("td",TE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[VE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[UE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[RE]),_:1})]),t("td",WE,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[GE,t("td",YE,[t("a",QE,[o("感染二叉树需要的总时间"),e(s)])]),SE,t("td",DE,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[FE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ZE]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[AE]),_:1}),o(),JE]),t("td",XE,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[$E,t("td",tw,[t("a",ew,[o("反转二叉树的奇数层"),e(s)])]),ow,t("td",lw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[nw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[sw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[dw]),_:1}),o(),_w]),t("td",cw,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[iw,t("td",rw,[t("a",aw,[o("好路径的数目"),e(s)])]),hw,t("td",uw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[fw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[gw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[mw]),_:1}),o(),yw]),t("td",xw,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bw,t("td",pw,[t("a",kw,[o("创建价值相同的连通块"),e(s)])]),Mw,t("td",jw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[vw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Iw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ew]),_:1}),o(),ww]),t("td",Hw,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[zw,t("td",Ow,[t("a",qw,[o("值为 1 的节点数"),e(s)])]),Nw,t("td",Lw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Cw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Pw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Kw]),_:1}),o(),Bw]),t("td",Tw,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Vw,t("td",Uw,[t("a",Rw,[o("移除子树后的二叉树高度"),e(s)])]),Ww,t("td",Gw,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Yw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Qw]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Sw]),_:1}),o(),Dw]),t("td",Fw,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Zw,t("td",Aw,[t("a",Jw,[o("树上最大得分和路径"),e(s)])]),Xw,t("td",$w,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[tH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[eH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[oH]),_:1}),o(),lH]),t("td",nH,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[sH,t("td",dH,[t("a",_H,[o("逐层排序二叉树所需的最少操作数目"),e(s)])]),cH,t("td",iH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[rH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[aH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[hH]),_:1})]),t("td",uH,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fH,t("td",gH,[t("a",mH,[o("二叉搜索树最近节点查询"),e(s)])]),yH,t("td",xH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[bH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[pH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[kH]),_:1}),o(),MH]),t("td",jH,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[vH,t("td",IH,[t("a",EH,[o("到达首都的最少油耗"),e(s)])]),wH,t("td",HH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[zH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[OH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[qH]),_:1}),o(),NH]),t("td",LH,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[CH,t("td",PH,[t("a",KH,[o("两个不重叠子树的最大异或值"),e(s)])]),BH,t("td",TH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[VH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[UH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[RH]),_:1}),o(),WH]),t("td",GH,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[YH,t("td",QH,[t("a",SH,[o("查询树中环的长度"),e(s)])]),DH,t("td",FH,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ZH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[AH]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[JH]),_:1})]),t("td",XH,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$H,t("td",tz,[t("a",ez,[o("最大价值和与最小价值和的差值"),e(s)])]),oz,t("td",lz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[nz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[sz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[dz]),_:1}),o(),_z]),t("td",cz,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[iz,t("td",rz,[t("a",az,[o("统计可能的树根数目"),e(s)])]),hz,t("td",uz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[fz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[gz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[mz]),_:1}),o(),yz]),t("td",xz,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bz,t("td",pz,[t("a",kz,[o("二叉树中的第 K 大层和"),e(s)])]),Mz,t("td",jz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[vz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Iz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[Ez]),_:1}),o(),wz]),t("td",Hz,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zz,t("td",Oz,[t("a",qz,[o("收集树中金币"),e(s)])]),Nz,t("td",Lz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Cz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[Pz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[Kz]),_:1}),o(),Bz]),t("td",Tz,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Vz,t("td",Uz,[t("a",Rz,[o("二叉树的堂兄弟节点 II"),e(s)])]),Wz,t("td",Gz,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Yz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Qz]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[Sz]),_:1}),o(),Dz]),t("td",Fz,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Zz,t("td",Az,[t("a",Jz,[o("最小化旅行的价格总和"),e(s)])]),Xz,t("td",$z,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[tO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[eO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[oO]),_:1}),o(),lO]),t("td",nO,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[sO,t("td",dO,[t("a",_O,[o("使二叉树所有路径值相等的最小代价"),e(s)])]),cO,t("td",iO,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[rO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[aO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hO]),_:1}),o(),uO]),t("td",fO,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[gO,t("td",mO,[t("a",yO,[o("从 Rope 树中提取第 K 个字符"),e(s)])]),xO,t("td",bO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[pO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[kO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[MO]),_:1})]),t("td",jO,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[vO,t("td",IO,[t("a",EO,[o("数组是否表示某二叉树的前序遍历"),e(s)])]),wO,t("td",HO,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[zO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[OO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[qO]),_:1}),o(),NO]),t("td",LO,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[CO,t("td",PO,[t("a",KO,[o("特殊二叉树的高度"),e(s)])]),BO,t("td",TO,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[VO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[UO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[RO]),_:1}),o(),WO]),t("td",GO,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[YO,t("td",QO,[t("a",SO,[o("树中可以形成回文的路径数"),e(s)])]),DO,t("td",FO,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[ZO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[AO]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[JO]),_:1}),o(),XO]),t("td",$O,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[tq,t("td",eq,[t("a",oq,[o("计算足够大的节点数"),e(s)])]),lq,t("td",nq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[sq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[dq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[_q]),_:1}),o(),cq]),t("td",iq,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[rq,t("td",aq,[t("a",hq,[o("边权重均等查询"),e(s)])]),uq,t("td",fq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[gq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[mq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[yq]),_:1}),o(),xq]),t("td",bq,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[pq,t("td",kq,[t("a",Mq,[o("统计树中的合法路径数目"),e(s)])]),jq,t("td",vq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Iq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Eq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[wq]),_:1}),o(),Hq]),t("td",zq,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Oq,t("td",qq,[t("a",Nq,[o("可以被 K 整除连通块的最大数目"),e(s)])]),Lq,t("td",Cq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Pq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Kq]),_:1})]),t("td",Bq,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Tq,t("td",Vq,[t("a",Uq,[o("收集所有金币可获得的最大积分"),e(s)])]),Rq,t("td",Wq,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Gq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Yq]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Qq]),_:1}),o(),Sq]),t("td",Dq,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Fq,t("td",Zq,[t("a",Aq,[o("在树上执行操作以后得到的最大分数"),e(s)])]),Jq,t("td",Xq,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[tN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[eN]),_:1})]),t("td",oN,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[lN,t("td",nN,[t("a",sN,[o("树中每个节点放置的金币数目"),e(s)])]),dN,t("td",_N,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[cN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[iN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[rN]),_:1}),o(),aN]),t("td",hN,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[uN,t("td",fN,[t("a",gN,[o("相同颜色的最大子树"),e(s)])]),mN,t("td",yN,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[xN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[bN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[pN]),_:1}),o(),kN]),t("td",MN,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[jN,t("td",vN,[t("a",IN,[o("在带权树网络中统计可连接服务器对数目"),e(s)])]),EN,t("td",wN,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[HN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[zN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ON]),_:1})]),t("td",qN,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[NN,t("td",LN,[t("a",CN,[o("最大节点价值之和"),e(s)])]),PN,t("td",KN,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[BN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[TN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[VN]),_:1}),o(),UN]),t("td",RN,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[WN,t("td",GN,[t("a",YN,[o("找到具有最小和的树的层数"),e(s)])]),QN,t("td",SN,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[DN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[FN]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[ZN]),_:1}),o(),AN]),t("td",JN,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[XN,t("td",$N,[t("a",tL,[o("合并两棵树后的最小直径"),e(s)])]),eL,t("td",oL,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[lL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[nL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[sL]),_:1}),o(),dL]),t("td",_L,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[cL,t("td",iL,[t("a",rL,[o("标记所有节点需要的时间"),e(s)])]),aL,t("td",hL,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[uL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[fL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[gL]),_:1}),o(),mL]),t("td",yL,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[xL,t("td",bL,[t("a",pL,[o("统计好节点的数目"),e(s)])]),kL,t("td",ML,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[jL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[vL]),_:1})]),t("td",IL,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[EL,t("td",wL,[t("a",HL,[o("Find the Last Marked Nodes in Tree"),e(s)])]),zL,t("td",OL,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[qL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[NL]),_:1})]),t("td",LL,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[CL,t("td",PL,[t("a",KL,[o("二叉树任务调度"),e(s)])]),BL,t("td",TL,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[VL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[UL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[RL]),_:1}),o(),WL]),t("td",GL,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[YL,t("td",QL,[t("a",SL,[o("导航装置"),e(s)])]),DL,t("td",FL,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ZL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[AL]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[JL]),_:1})]),t("td",XL,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$L,t("td",tC,[t("a",eC,[o("二叉树染色"),e(s)])]),oC,t("td",lC,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[nC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[sC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[dC]),_:1})]),t("td",_C,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[cC,t("td",iC,[t("a",rC,[o("开幕式焰火"),e(s)])]),aC,t("td",hC,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[uC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[fC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[gC]),_:1}),o(),mC]),t("td",yC,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[xC,t("td",bC,[t("a",pC,[o("二叉搜索树染色"),e(s)])]),kC,t("td",MC,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[jC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[vC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[IC]),_:1}),o(),EC]),t("td",wC,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[HC,t("td",zC,[t("a",OC,[o("力扣泡泡龙"),e(s)])]),qC,t("td",NC,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[LC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[CC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[PC]),_:1})]),t("td",KC,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[BC,t("td",TC,[t("a",VC,[o("二叉树灯饰"),e(s)])]),UC,t("td",RC,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[WC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[GC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[YC]),_:1}),o(),QC]),t("td",SC,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[DC,t("td",FC,[t("a",ZC,[o("装饰树"),e(s)])]),AC,t("td",JC,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[XC]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[$C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[tP]),_:1}),o(),eP]),t("td",oP,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[lP,t("td",nP,[t("a",sP,[o("重建二叉树"),e(s)])]),t("td",dP,[t("a",_P,[o("[✓]"),e(s)])]),t("td",cP,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[iP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[rP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[aP]),_:1}),o(),hP]),t("td",uP,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fP,t("td",gP,[t("a",mP,[o("树的子结构"),e(s)])]),t("td",yP,[t("a",xP,[o("[✓]"),e(s)])]),t("td",bP,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[pP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[kP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[MP]),_:1})]),t("td",jP,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[vP,t("td",IP,[t("a",EP,[o("二叉树的镜像"),e(s)])]),t("td",wP,[t("a",HP,[o("[✓]"),e(s)])]),t("td",zP,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[OP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[qP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[NP]),_:1}),o(),LP]),t("td",CP,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[PP,t("td",KP,[t("a",BP,[o("对称的二叉树"),e(s)])]),t("td",TP,[t("a",VP,[o("[✓]"),e(s)])]),t("td",UP,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[RP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[WP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[GP]),_:1}),o(),YP]),t("td",QP,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[SP,t("td",DP,[t("a",FP,[o("从上到下打印二叉树"),e(s)])]),t("td",ZP,[t("a",AP,[o("[✓]"),e(s)])]),t("td",JP,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[XP]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[$P]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[tK]),_:1})]),t("td",eK,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[oK,t("td",lK,[t("a",nK,[o("从上到下打印二叉树 II"),e(s)])]),t("td",sK,[t("a",dK,[o("[✓]"),e(s)])]),t("td",_K,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[cK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[iK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[rK]),_:1})]),t("td",aK,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[hK,t("td",uK,[t("a",fK,[o("从上到下打印二叉树 III"),e(s)])]),t("td",gK,[t("a",mK,[o("[✓]"),e(s)])]),t("td",yK,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[xK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[bK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[pK]),_:1})]),t("td",kK,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[MK,t("td",jK,[t("a",vK,[o("二叉搜索树的后序遍历序列"),e(s)])]),t("td",IK,[t("a",EK,[o("[✓]"),e(s)])]),t("td",wK,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[HK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[zK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[OK]),_:1}),o(),qK]),t("td",NK,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[LK,t("td",CK,[t("a",PK,[o("二叉树中和为某一值的路径"),e(s)])]),t("td",KK,[t("a",BK,[o("[✓]"),e(s)])]),t("td",TK,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[VK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[UK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[RK]),_:1}),o(),WK]),t("td",GK,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[YK,t("td",QK,[t("a",SK,[o("二叉搜索树与双向链表"),e(s)])]),t("td",DK,[t("a",FK,[o("[✓]"),e(s)])]),t("td",ZK,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[AK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[JK]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[XK]),_:1}),o(),$K]),t("td",tB,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[eB,t("td",oB,[t("a",lB,[o("序列化二叉树"),e(s)])]),t("td",nB,[t("a",sB,[o("[✓]"),e(s)])]),t("td",dB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[_B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[cB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[iB]),_:1}),o(),rB]),t("td",aB,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[hB,t("td",uB,[t("a",fB,[o("二叉搜索树的第k大节点"),e(s)])]),t("td",gB,[t("a",mB,[o("[✓]"),e(s)])]),t("td",yB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[xB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[bB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[pB]),_:1}),o(),kB]),t("td",MB,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[jB,t("td",vB,[t("a",IB,[o("二叉树的深度"),e(s)])]),t("td",EB,[t("a",wB,[o("[✓]"),e(s)])]),t("td",HB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[zB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[OB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[qB]),_:1}),o(),NB]),t("td",LB,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[CB,t("td",PB,[t("a",KB,[o("平衡二叉树"),e(s)])]),BB,t("td",TB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[VB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[UB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[RB]),_:1})]),t("td",WB,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[GB,t("td",YB,[t("a",QB,[o("二叉搜索树的最近公共祖先"),e(s)])]),SB,t("td",DB,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[FB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ZB]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[AB]),_:1}),o(),JB]),t("td",XB,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[$B,t("td",tT,[t("a",eT,[o("二叉树的最近公共祖先"),e(s)])]),oT,t("td",lT,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[nT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[sT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[dT]),_:1})]),t("td",_T,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[cT,t("td",iT,[t("a",rT,[o("往完全二叉树添加节点"),e(s)])]),aT,t("td",hT,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[uT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[fT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[gT]),_:1}),o(),mT]),t("td",yT,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xT,t("td",bT,[t("a",pT,[o("二叉树每层的最大值"),e(s)])]),kT,t("td",MT,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[jT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[vT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[IT]),_:1}),o(),ET]),t("td",wT,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[HT,t("td",zT,[t("a",OT,[o("二叉树最底层最左边的值"),e(s)])]),qT,t("td",NT,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[LT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[CT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[PT]),_:1}),o(),KT]),t("td",BT,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[TT,t("td",VT,[t("a",UT,[o("二叉树的右侧视图"),e(s)])]),RT,t("td",WT,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[GT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[YT]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[QT]),_:1}),o(),ST]),t("td",DT,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[FT,t("td",ZT,[t("a",AT,[o("二叉树剪枝"),e(s)])]),JT,t("td",XT,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[tV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[eV]),_:1})]),t("td",oV,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[lV,t("td",nV,[t("a",sV,[o("序列化与反序列化二叉树"),e(s)])]),dV,t("td",_V,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[cV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[iV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[rV]),_:1}),o(),aV]),t("td",hV,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[uV,t("td",fV,[t("a",gV,[o("从根节点到叶节点的路径数字之和"),e(s)])]),mV,t("td",yV,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[xV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[bV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[pV]),_:1})]),t("td",kV,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[MV,t("td",jV,[t("a",vV,[o("向下的路径节点之和"),e(s)])]),IV,t("td",EV,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[wV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[HV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[zV]),_:1})]),t("td",OV,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qV,t("td",NV,[t("a",LV,[o("节点之和最大的路径"),e(s)])]),CV,t("td",PV,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[KV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[BV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[TV]),_:1}),o(),VV]),t("td",UV,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[RV,t("td",WV,[t("a",GV,[o("展平二叉搜索树"),e(s)])]),YV,t("td",QV,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[SV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[DV]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[FV]),_:1}),o(),ZV]),t("td",AV,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[JV,t("td",XV,[t("a",$V,[o("二叉搜索树中的中序后继"),e(s)])]),tU,t("td",eU,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[oU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[lU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[nU]),_:1}),o(),sU]),t("td",dU,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_U,t("td",cU,[t("a",iU,[o("所有大于等于节点的值之和"),e(s)])]),rU,t("td",aU,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[hU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[uU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[fU]),_:1}),o(),gU]),t("td",mU,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yU,t("td",xU,[t("a",bU,[o("二叉搜索树迭代器"),e(s)])]),pU,t("td",kU,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[MU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[jU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[vU]),_:1}),o(),IU]),t("td",EU,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[wU,t("td",HU,[t("a",zU,[o("数据流的第 K 大数值"),e(s)])]),OU,t("td",qU,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[NU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[LU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[CU]),_:1}),o(),PU]),t("td",KU,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[BU,t("td",TU,[t("a",VU,[o("最小高度树"),e(s)])]),UU,t("td",RU,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[WU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[GU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[YU]),_:1}),o(),QU]),t("td",SU,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[DU,t("td",FU,[t("a",ZU,[o("特定深度节点链表"),e(s)])]),AU,t("td",JU,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[XU]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[$U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[tR]),_:1}),o(),eR]),t("td",oR,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[lR,t("td",nR,[t("a",sR,[o("检查平衡性"),e(s)])]),dR,t("td",_R,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[cR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[iR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[rR]),_:1})]),t("td",aR,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[hR,t("td",uR,[t("a",fR,[o("合法二叉搜索树"),e(s)])]),gR,t("td",mR,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[yR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[xR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[bR]),_:1}),o(),pR]),t("td",kR,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[MR,t("td",jR,[t("a",vR,[o("后继者"),e(s)])]),IR,t("td",ER,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[wR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[HR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[zR]),_:1}),o(),OR]),t("td",qR,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[NR,t("td",LR,[t("a",CR,[o("首个共同祖先"),e(s)])]),PR,t("td",KR,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[BR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[TR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[VR]),_:1})]),t("td",UR,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[RR,t("td",WR,[t("a",GR,[o("二叉搜索树序列"),e(s)])]),YR,t("td",QR,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[SR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[DR]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[FR]),_:1}),o(),ZR]),t("td",AR,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[JR,t("td",XR,[t("a",$R,[o("检查子树"),e(s)])]),tW,t("td",eW,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[oW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[lW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[nW]),_:1}),o(),sW]),t("td",dW,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[_W,t("td",cW,[t("a",iW,[o("求和路径"),e(s)])]),rW,t("td",aW,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[hW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[uW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[fW]),_:1})]),t("td",gW,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[mW,t("td",yW,[t("a",xW,[o("BiNode"),e(s)])]),bW,t("td",pW,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[kW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[MW]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[jW]),_:1}),o(),vW]),t("td",IW,[e(d,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])])])])])}const OW=c(h,[["render",EW],["__file","tree.html.vue"]]);export{OW as default};
