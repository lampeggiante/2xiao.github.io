import{_ as c,r as _,o as i,c as a,a as t,d as e,w as o,b as l,f as r}from"./app-GnK0vSxb.js";const h={},u=t("h1",{id:"栈",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#栈","aria-hidden":"true"},"#"),l(" 栈")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),p=t("code",null,"链表",-1),b=t("code",null,"双向链表",-1),k=t("span",{class:"blue"},"栈",-1),M=t("code",null,"单调栈",-1),v=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),H=t("code",null,"堆（优先队列）",-1),w=t("code",null,"哈希表",-1),E=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),z=t("code",null,"树",-1),O=t("code",null,"二叉树",-1),j=t("code",null,"二叉搜索树",-1),N=t("code",null,"最小生成树",-1),L=t("code",null,"图",-1),B=t("code",null,"有序集合",-1),V=t("code",null,"拓扑排序",-1),C=t("code",null,"最短路",-1),Q=t("code",null,"强连通分量",-1),R=t("code",null,"欧拉回路",-1),Z=t("code",null,"双连通分量",-1),G=t("code",null,"并查集",-1),K=t("code",null,"字典树",-1),S=t("code",null,"线段树",-1),T=t("code",null,"树状数组",-1),U=t("code",null,"后缀数组",-1),X=t("p",null,[t("strong",null,"算法")],-1),Y=t("code",null,"枚举",-1),A=t("code",null,"递归",-1),P=t("code",null,"分治",-1),D=t("code",null,"回溯",-1),F=t("code",null,"贪心",-1),J=t("code",null,"动态规划",-1),W=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),pt=t("code",null,"数论",-1),bt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),Mt=t("code",null,"模拟",-1),vt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),Ht=t("code",null,"概率与统计",-1),wt=t("code",null,"水塘抽样",-1),Et=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),zt=t("code",null,"设计",-1),Ot=t("code",null,"数据流",-1),jt=t("code",null,"脑筋急转弯",-1),Nt=t("code",null,"交互",-1),Lt=t("code",null,"迭代器",-1),Bt=t("code",null,"多线程",-1),Vt=t("hr",null,null,-1),Ct=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Qt=t("td",{style:{"text-align":"center"}},"20",-1),Rt={style:{"text-align":"left"}},Zt={href:"https://leetcode.com/problems/valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Gt={style:{"text-align":"center"}},Kt={style:{"text-align":"left"}},St=t("code",null,"栈",-1),Tt=t("code",null,"字符串",-1),Ut={style:{"text-align":"left"}},Xt=t("td",{style:{"text-align":"center"}},"32",-1),Yt={style:{"text-align":"left"}},At={href:"https://leetcode.com/problems/longest-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Pt={style:{"text-align":"center"}},Dt={style:{"text-align":"left"}},Ft=t("code",null,"栈",-1),Jt=t("code",null,"字符串",-1),Wt=t("code",null,"动态规划",-1),$t={style:{"text-align":"left"}},te=t("td",{style:{"text-align":"center"}},"42",-1),ee={style:{"text-align":"left"}},le={href:"https://leetcode.com/problems/trapping-rain-water",target:"_blank",rel:"noopener noreferrer"},oe={style:{"text-align":"center"}},ne={style:{"text-align":"left"}},se=t("code",null,"栈",-1),de=t("code",null,"数组",-1),_e=t("code",null,"双指针",-1),ce=t("code",null,"2+",-1),ie={style:{"text-align":"left"}},ae=t("td",{style:{"text-align":"center"}},"71",-1),re={style:{"text-align":"left"}},he={href:"https://leetcode.com/problems/simplify-path",target:"_blank",rel:"noopener noreferrer"},ue={style:{"text-align":"center"}},fe={style:{"text-align":"left"}},ge=t("code",null,"栈",-1),me=t("code",null,"字符串",-1),ye={style:{"text-align":"left"}},xe=t("td",{style:{"text-align":"center"}},"84",-1),pe={style:{"text-align":"left"}},be={href:"https://leetcode.com/problems/largest-rectangle-in-histogram",target:"_blank",rel:"noopener noreferrer"},ke={style:{"text-align":"center"}},Me={style:{"text-align":"left"}},ve=t("code",null,"栈",-1),Ie=t("code",null,"数组",-1),He=t("code",null,"单调栈",-1),we={style:{"text-align":"left"}},Ee=t("td",{style:{"text-align":"center"}},"85",-1),qe={style:{"text-align":"left"}},ze={href:"https://leetcode.com/problems/maximal-rectangle",target:"_blank",rel:"noopener noreferrer"},Oe={style:{"text-align":"center"}},je={style:{"text-align":"left"}},Ne=t("code",null,"栈",-1),Le=t("code",null,"数组",-1),Be=t("code",null,"动态规划",-1),Ve=t("code",null,"2+",-1),Ce={style:{"text-align":"left"}},Qe=t("td",{style:{"text-align":"center"}},"94",-1),Re={style:{"text-align":"left"}},Ze={href:"https://leetcode.com/problems/binary-tree-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},Ge={style:{"text-align":"center"}},Ke={style:{"text-align":"left"}},Se=t("code",null,"栈",-1),Te=t("code",null,"树",-1),Ue=t("code",null,"深度优先搜索",-1),Xe=t("code",null,"1+",-1),Ye={style:{"text-align":"left"}},Ae=t("td",{style:{"text-align":"center"}},"114",-1),Pe={style:{"text-align":"left"}},De={href:"https://leetcode.com/problems/flatten-binary-tree-to-linked-list",target:"_blank",rel:"noopener noreferrer"},Fe={style:{"text-align":"center"}},Je={style:{"text-align":"left"}},We=t("code",null,"栈",-1),$e=t("code",null,"树",-1),tl=t("code",null,"深度优先搜索",-1),el=t("code",null,"2+",-1),ll={style:{"text-align":"left"}},ol=t("td",{style:{"text-align":"center"}},"143",-1),nl={style:{"text-align":"left"}},sl={href:"https://leetcode.com/problems/reorder-list",target:"_blank",rel:"noopener noreferrer"},dl={style:{"text-align":"center"}},_l={style:{"text-align":"left"}},cl=t("code",null,"栈",-1),il=t("code",null,"递归",-1),al=t("code",null,"链表",-1),rl=t("code",null,"1+",-1),hl={style:{"text-align":"left"}},ul=t("td",{style:{"text-align":"center"}},"144",-1),fl={style:{"text-align":"left"}},gl={href:"https://leetcode.com/problems/binary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},ml={style:{"text-align":"center"}},yl={style:{"text-align":"left"}},xl=t("code",null,"栈",-1),pl=t("code",null,"树",-1),bl=t("code",null,"深度优先搜索",-1),kl=t("code",null,"1+",-1),Ml={style:{"text-align":"left"}},vl=t("td",{style:{"text-align":"center"}},"145",-1),Il={style:{"text-align":"left"}},Hl={href:"https://leetcode.com/problems/binary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},wl={style:{"text-align":"center"}},El={style:{"text-align":"left"}},ql=t("code",null,"栈",-1),zl=t("code",null,"树",-1),Ol=t("code",null,"深度优先搜索",-1),jl=t("code",null,"1+",-1),Nl={style:{"text-align":"left"}},Ll=t("td",{style:{"text-align":"center"}},"150",-1),Bl={style:{"text-align":"left"}},Vl={href:"https://leetcode.com/problems/evaluate-reverse-polish-notation",target:"_blank",rel:"noopener noreferrer"},Cl={style:{"text-align":"center"}},Ql={style:{"text-align":"left"}},Rl=t("code",null,"栈",-1),Zl=t("code",null,"数组",-1),Gl=t("code",null,"数学",-1),Kl={style:{"text-align":"left"}},Sl=t("td",{style:{"text-align":"center"}},"155",-1),Tl={style:{"text-align":"left"}},Ul={href:"https://leetcode.com/problems/min-stack",target:"_blank",rel:"noopener noreferrer"},Xl={style:{"text-align":"center"}},Yl={style:{"text-align":"left"}},Al=t("code",null,"栈",-1),Pl=t("code",null,"设计",-1),Dl={style:{"text-align":"left"}},Fl=t("td",{style:{"text-align":"center"}},"173",-1),Jl={style:{"text-align":"left"}},Wl={href:"https://leetcode.com/problems/binary-search-tree-iterator",target:"_blank",rel:"noopener noreferrer"},$l={style:{"text-align":"center"}},to={style:{"text-align":"left"}},eo=t("code",null,"栈",-1),lo=t("code",null,"树",-1),oo=t("code",null,"设计",-1),no=t("code",null,"3+",-1),so={style:{"text-align":"left"}},_o=t("td",{style:{"text-align":"center"}},"224",-1),co={style:{"text-align":"left"}},io={href:"https://leetcode.com/problems/basic-calculator",target:"_blank",rel:"noopener noreferrer"},ao={style:{"text-align":"center"}},ro={style:{"text-align":"left"}},ho=t("code",null,"栈",-1),uo=t("code",null,"递归",-1),fo=t("code",null,"数学",-1),go=t("code",null,"1+",-1),mo={style:{"text-align":"left"}},yo=t("td",{style:{"text-align":"center"}},"225",-1),xo={style:{"text-align":"left"}},po={href:"https://leetcode.com/problems/implement-stack-using-queues",target:"_blank",rel:"noopener noreferrer"},bo={style:{"text-align":"center"}},ko={style:{"text-align":"left"}},Mo=t("code",null,"栈",-1),vo=t("code",null,"设计",-1),Io=t("code",null,"队列",-1),Ho={style:{"text-align":"left"}},wo=t("td",{style:{"text-align":"center"}},"227",-1),Eo={style:{"text-align":"left"}},qo={href:"https://leetcode.com/problems/basic-calculator-ii",target:"_blank",rel:"noopener noreferrer"},zo={style:{"text-align":"center"}},Oo={style:{"text-align":"left"}},jo=t("code",null,"栈",-1),No=t("code",null,"数学",-1),Lo=t("code",null,"字符串",-1),Bo={style:{"text-align":"left"}},Vo=t("td",{style:{"text-align":"center"}},"232",-1),Co={style:{"text-align":"left"}},Qo={href:"https://leetcode.com/problems/implement-queue-using-stacks",target:"_blank",rel:"noopener noreferrer"},Ro={style:{"text-align":"center"}},Zo={style:{"text-align":"left"}},Go=t("code",null,"栈",-1),Ko=t("code",null,"设计",-1),So=t("code",null,"队列",-1),To={style:{"text-align":"left"}},Uo=t("td",{style:{"text-align":"center"}},"234",-1),Xo={style:{"text-align":"left"}},Yo={href:"https://leetcode.com/problems/palindrome-linked-list",target:"_blank",rel:"noopener noreferrer"},Ao={style:{"text-align":"center"}},Po={style:{"text-align":"left"}},Do=t("code",null,"栈",-1),Fo=t("code",null,"递归",-1),Jo=t("code",null,"链表",-1),Wo=t("code",null,"1+",-1),$o={style:{"text-align":"left"}},tn=t("td",{style:{"text-align":"center"}},"255",-1),en={style:{"text-align":"left"}},ln={href:"https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},on=t("td",{style:{"text-align":"center"}},null,-1),nn={style:{"text-align":"left"}},sn=t("code",null,"栈",-1),dn=t("code",null,"树",-1),_n=t("code",null,"二叉搜索树",-1),cn=t("code",null,"4+",-1),an={style:{"text-align":"left"}},rn=t("td",{style:{"text-align":"center"}},"272",-1),hn={style:{"text-align":"left"}},un={href:"https://leetcode.com/problems/closest-binary-search-tree-value-ii",target:"_blank",rel:"noopener noreferrer"},fn=t("td",{style:{"text-align":"center"}},null,-1),gn={style:{"text-align":"left"}},mn=t("code",null,"栈",-1),yn=t("code",null,"树",-1),xn=t("code",null,"深度优先搜索",-1),pn=t("code",null,"4+",-1),bn={style:{"text-align":"left"}},kn=t("td",{style:{"text-align":"center"}},"316",-1),Mn={style:{"text-align":"left"}},vn={href:"https://leetcode.com/problems/remove-duplicate-letters",target:"_blank",rel:"noopener noreferrer"},In={style:{"text-align":"center"}},Hn={style:{"text-align":"left"}},wn=t("code",null,"栈",-1),En=t("code",null,"贪心",-1),qn=t("code",null,"字符串",-1),zn=t("code",null,"1+",-1),On={style:{"text-align":"left"}},jn=t("td",{style:{"text-align":"center"}},"321",-1),Nn={style:{"text-align":"left"}},Ln={href:"https://leetcode.com/problems/create-maximum-number",target:"_blank",rel:"noopener noreferrer"},Bn=t("td",{style:{"text-align":"center"}},null,-1),Vn={style:{"text-align":"left"}},Cn=t("code",null,"栈",-1),Qn=t("code",null,"贪心",-1),Rn=t("code",null,"数组",-1),Zn=t("code",null,"2+",-1),Gn={style:{"text-align":"left"}},Kn=t("td",{style:{"text-align":"center"}},"331",-1),Sn={style:{"text-align":"left"}},Tn={href:"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Un=t("td",{style:{"text-align":"center"}},null,-1),Xn={style:{"text-align":"left"}},Yn=t("code",null,"栈",-1),An=t("code",null,"树",-1),Pn=t("code",null,"字符串",-1),Dn=t("code",null,"1+",-1),Fn={style:{"text-align":"left"}},Jn=t("td",{style:{"text-align":"center"}},"341",-1),Wn={style:{"text-align":"left"}},$n={href:"https://leetcode.com/problems/flatten-nested-list-iterator",target:"_blank",rel:"noopener noreferrer"},ts=t("td",{style:{"text-align":"center"}},null,-1),es={style:{"text-align":"left"}},ls=t("code",null,"栈",-1),os=t("code",null,"树",-1),ns=t("code",null,"深度优先搜索",-1),ss=t("code",null,"3+",-1),ds={style:{"text-align":"left"}},_s=t("td",{style:{"text-align":"center"}},"364",-1),cs={style:{"text-align":"left"}},is={href:"https://leetcode.com/problems/nested-list-weight-sum-ii",target:"_blank",rel:"noopener noreferrer"},as=t("td",{style:{"text-align":"center"}},null,-1),rs={style:{"text-align":"left"}},hs=t("code",null,"栈",-1),us=t("code",null,"深度优先搜索",-1),fs=t("code",null,"广度优先搜索",-1),gs={style:{"text-align":"left"}},ms=t("td",{style:{"text-align":"center"}},"385",-1),ys={style:{"text-align":"left"}},xs={href:"https://leetcode.com/problems/mini-parser",target:"_blank",rel:"noopener noreferrer"},ps=t("td",{style:{"text-align":"center"}},null,-1),bs={style:{"text-align":"left"}},ks=t("code",null,"栈",-1),Ms=t("code",null,"深度优先搜索",-1),vs=t("code",null,"字符串",-1),Is={style:{"text-align":"left"}},Hs=t("td",{style:{"text-align":"center"}},"388",-1),ws={style:{"text-align":"left"}},Es={href:"https://leetcode.com/problems/longest-absolute-file-path",target:"_blank",rel:"noopener noreferrer"},qs=t("td",{style:{"text-align":"center"}},null,-1),zs={style:{"text-align":"left"}},Os=t("code",null,"栈",-1),js=t("code",null,"深度优先搜索",-1),Ns=t("code",null,"字符串",-1),Ls={style:{"text-align":"left"}},Bs=t("td",{style:{"text-align":"center"}},"394",-1),Vs={style:{"text-align":"left"}},Cs={href:"https://leetcode.com/problems/decode-string",target:"_blank",rel:"noopener noreferrer"},Qs={style:{"text-align":"center"}},Rs={style:{"text-align":"left"}},Zs=t("code",null,"栈",-1),Gs=t("code",null,"递归",-1),Ks=t("code",null,"字符串",-1),Ss={style:{"text-align":"left"}},Ts=t("td",{style:{"text-align":"center"}},"402",-1),Us={style:{"text-align":"left"}},Xs={href:"https://leetcode.com/problems/remove-k-digits",target:"_blank",rel:"noopener noreferrer"},Ys=t("td",{style:{"text-align":"center"}},null,-1),As={style:{"text-align":"left"}},Ps=t("code",null,"栈",-1),Ds=t("code",null,"贪心",-1),Fs=t("code",null,"字符串",-1),Js=t("code",null,"1+",-1),Ws={style:{"text-align":"left"}},$s=t("td",{style:{"text-align":"center"}},"426",-1),td={style:{"text-align":"left"}},ed={href:"https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list",target:"_blank",rel:"noopener noreferrer"},ld={style:{"text-align":"center"}},od={style:{"text-align":"left"}},nd=t("code",null,"栈",-1),sd=t("code",null,"树",-1),dd=t("code",null,"深度优先搜索",-1),_d=t("code",null,"4+",-1),cd={style:{"text-align":"left"}},id=t("td",{style:{"text-align":"center"}},"439",-1),ad={style:{"text-align":"left"}},rd={href:"https://leetcode.com/problems/ternary-expression-parser",target:"_blank",rel:"noopener noreferrer"},hd=t("td",{style:{"text-align":"center"}},null,-1),ud={style:{"text-align":"left"}},fd=t("code",null,"栈",-1),gd=t("code",null,"递归",-1),md=t("code",null,"字符串",-1),yd={style:{"text-align":"left"}},xd=t("td",{style:{"text-align":"center"}},"445",-1),pd={style:{"text-align":"left"}},bd={href:"https://leetcode.com/problems/add-two-numbers-ii",target:"_blank",rel:"noopener noreferrer"},kd={style:{"text-align":"center"}},Md={style:{"text-align":"left"}},vd=t("code",null,"栈",-1),Id=t("code",null,"链表",-1),Hd=t("code",null,"数学",-1),wd={style:{"text-align":"left"}},Ed=t("td",{style:{"text-align":"center"}},"456",-1),qd={style:{"text-align":"left"}},zd={href:"https://leetcode.com/problems/132-pattern",target:"_blank",rel:"noopener noreferrer"},Od=t("td",{style:{"text-align":"center"}},null,-1),jd={style:{"text-align":"left"}},Nd=t("code",null,"栈",-1),Ld=t("code",null,"数组",-1),Bd=t("code",null,"二分查找",-1),Vd=t("code",null,"2+",-1),Cd={style:{"text-align":"left"}},Qd=t("td",{style:{"text-align":"center"}},"484",-1),Rd={style:{"text-align":"left"}},Zd={href:"https://leetcode.com/problems/find-permutation",target:"_blank",rel:"noopener noreferrer"},Gd=t("td",{style:{"text-align":"center"}},null,-1),Kd={style:{"text-align":"left"}},Sd=t("code",null,"栈",-1),Td=t("code",null,"贪心",-1),Ud=t("code",null,"数组",-1),Xd=t("code",null,"1+",-1),Yd={style:{"text-align":"left"}},Ad=t("td",{style:{"text-align":"center"}},"488",-1),Pd={style:{"text-align":"left"}},Dd={href:"https://leetcode.com/problems/zuma-game",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},null,-1),Jd={style:{"text-align":"left"}},Wd=t("code",null,"栈",-1),$d=t("code",null,"广度优先搜索",-1),t_=t("code",null,"记忆化搜索",-1),e_=t("code",null,"2+",-1),l_={style:{"text-align":"left"}},o_=t("td",{style:{"text-align":"center"}},"496",-1),n_={style:{"text-align":"left"}},s_={href:"https://leetcode.com/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},d_={style:{"text-align":"center"}},__={style:{"text-align":"left"}},c_=t("code",null,"栈",-1),i_=t("code",null,"数组",-1),a_=t("code",null,"哈希表",-1),r_=t("code",null,"1+",-1),h_={style:{"text-align":"left"}},u_=t("td",{style:{"text-align":"center"}},"503",-1),f_={style:{"text-align":"left"}},g_={href:"https://leetcode.com/problems/next-greater-element-ii",target:"_blank",rel:"noopener noreferrer"},m_={style:{"text-align":"center"}},y_={style:{"text-align":"left"}},x_=t("code",null,"栈",-1),p_=t("code",null,"数组",-1),b_=t("code",null,"单调栈",-1),k_={style:{"text-align":"left"}},M_=t("td",{style:{"text-align":"center"}},"536",-1),v_={style:{"text-align":"left"}},I_={href:"https://leetcode.com/problems/construct-binary-tree-from-string",target:"_blank",rel:"noopener noreferrer"},H_=t("td",{style:{"text-align":"center"}},null,-1),w_={style:{"text-align":"left"}},E_=t("code",null,"栈",-1),q_=t("code",null,"树",-1),z_=t("code",null,"深度优先搜索",-1),O_=t("code",null,"2+",-1),j_={style:{"text-align":"left"}},N_=t("td",{style:{"text-align":"center"}},"581",-1),L_={style:{"text-align":"left"}},B_={href:"https://leetcode.com/problems/shortest-unsorted-continuous-subarray",target:"_blank",rel:"noopener noreferrer"},V_=t("td",{style:{"text-align":"center"}},null,-1),C_={style:{"text-align":"left"}},Q_=t("code",null,"栈",-1),R_=t("code",null,"贪心",-1),Z_=t("code",null,"数组",-1),G_=t("code",null,"3+",-1),K_={style:{"text-align":"left"}},S_=t("td",{style:{"text-align":"center"}},"589",-1),T_={style:{"text-align":"left"}},U_={href:"https://leetcode.com/problems/n-ary-tree-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},X_={style:{"text-align":"center"}},Y_={style:{"text-align":"left"}},A_=t("code",null,"栈",-1),P_=t("code",null,"树",-1),D_=t("code",null,"深度优先搜索",-1),F_={style:{"text-align":"left"}},J_=t("td",{style:{"text-align":"center"}},"590",-1),W_={style:{"text-align":"left"}},$_={href:"https://leetcode.com/problems/n-ary-tree-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},tc={style:{"text-align":"center"}},ec={style:{"text-align":"left"}},lc=t("code",null,"栈",-1),oc=t("code",null,"树",-1),nc=t("code",null,"深度优先搜索",-1),sc={style:{"text-align":"left"}},dc=t("td",{style:{"text-align":"center"}},"591",-1),_c={style:{"text-align":"left"}},cc={href:"https://leetcode.com/problems/tag-validator",target:"_blank",rel:"noopener noreferrer"},ic=t("td",{style:{"text-align":"center"}},null,-1),ac={style:{"text-align":"left"}},rc=t("code",null,"栈",-1),hc=t("code",null,"字符串",-1),uc={style:{"text-align":"left"}},fc=t("td",{style:{"text-align":"center"}},"636",-1),gc={style:{"text-align":"left"}},mc={href:"https://leetcode.com/problems/exclusive-time-of-functions",target:"_blank",rel:"noopener noreferrer"},yc=t("td",{style:{"text-align":"center"}},null,-1),xc={style:{"text-align":"left"}},pc=t("code",null,"栈",-1),bc=t("code",null,"数组",-1),kc={style:{"text-align":"left"}},Mc=t("td",{style:{"text-align":"center"}},"654",-1),vc={style:{"text-align":"left"}},Ic={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Hc={style:{"text-align":"center"}},wc={style:{"text-align":"left"}},Ec=t("code",null,"栈",-1),qc=t("code",null,"树",-1),zc=t("code",null,"数组",-1),Oc=t("code",null,"3+",-1),jc={style:{"text-align":"left"}},Nc=t("td",{style:{"text-align":"center"}},"678",-1),Lc={style:{"text-align":"left"}},Bc={href:"https://leetcode.com/problems/valid-parenthesis-string",target:"_blank",rel:"noopener noreferrer"},Vc={style:{"text-align":"center"}},Cc={style:{"text-align":"left"}},Qc=t("code",null,"栈",-1),Rc=t("code",null,"贪心",-1),Zc=t("code",null,"字符串",-1),Gc=t("code",null,"1+",-1),Kc={style:{"text-align":"left"}},Sc=t("td",{style:{"text-align":"center"}},"682",-1),Tc={style:{"text-align":"left"}},Uc={href:"https://leetcode.com/problems/baseball-game",target:"_blank",rel:"noopener noreferrer"},Xc={style:{"text-align":"center"}},Yc={style:{"text-align":"left"}},Ac=t("code",null,"栈",-1),Pc=t("code",null,"数组",-1),Dc=t("code",null,"模拟",-1),Fc={style:{"text-align":"left"}},Jc=t("td",{style:{"text-align":"center"}},"716",-1),Wc={style:{"text-align":"left"}},$c={href:"https://leetcode.com/problems/max-stack",target:"_blank",rel:"noopener noreferrer"},ti=t("td",{style:{"text-align":"center"}},null,-1),ei={style:{"text-align":"left"}},li=t("code",null,"栈",-1),oi=t("code",null,"设计",-1),ni=t("code",null,"链表",-1),si=t("code",null,"2+",-1),di={style:{"text-align":"left"}},_i=t("td",{style:{"text-align":"center"}},"726",-1),ci={style:{"text-align":"left"}},ii={href:"https://leetcode.com/problems/number-of-atoms",target:"_blank",rel:"noopener noreferrer"},ai=t("td",{style:{"text-align":"center"}},null,-1),ri={style:{"text-align":"left"}},hi=t("code",null,"栈",-1),ui=t("code",null,"哈希表",-1),fi=t("code",null,"字符串",-1),gi=t("code",null,"1+",-1),mi={style:{"text-align":"left"}},yi=t("td",{style:{"text-align":"center"}},"735",-1),xi={style:{"text-align":"left"}},pi={href:"https://leetcode.com/problems/asteroid-collision",target:"_blank",rel:"noopener noreferrer"},bi=t("td",{style:{"text-align":"center"}},null,-1),ki={style:{"text-align":"left"}},Mi=t("code",null,"栈",-1),vi=t("code",null,"数组",-1),Ii=t("code",null,"模拟",-1),Hi={style:{"text-align":"left"}},wi=t("td",{style:{"text-align":"center"}},"736",-1),Ei={style:{"text-align":"left"}},qi={href:"https://leetcode.com/problems/parse-lisp-expression",target:"_blank",rel:"noopener noreferrer"},zi=t("td",{style:{"text-align":"center"}},null,-1),Oi={style:{"text-align":"left"}},ji=t("code",null,"栈",-1),Ni=t("code",null,"递归",-1),Li=t("code",null,"哈希表",-1),Bi=t("code",null,"1+",-1),Vi={style:{"text-align":"left"}},Ci=t("td",{style:{"text-align":"center"}},"739",-1),Qi={style:{"text-align":"left"}},Ri={href:"https://leetcode.com/problems/daily-temperatures",target:"_blank",rel:"noopener noreferrer"},Zi={style:{"text-align":"center"}},Gi={style:{"text-align":"left"}},Ki=t("code",null,"栈",-1),Si=t("code",null,"数组",-1),Ti=t("code",null,"单调栈",-1),Ui={style:{"text-align":"left"}},Xi=t("td",{style:{"text-align":"center"}},"768",-1),Yi={style:{"text-align":"left"}},Ai={href:"https://leetcode.com/problems/max-chunks-to-make-sorted-ii",target:"_blank",rel:"noopener noreferrer"},Pi=t("td",{style:{"text-align":"center"}},null,-1),Di={style:{"text-align":"left"}},Fi=t("code",null,"栈",-1),Ji=t("code",null,"贪心",-1),Wi=t("code",null,"数组",-1),$i=t("code",null,"2+",-1),ta={style:{"text-align":"left"}},ea=t("td",{style:{"text-align":"center"}},"769",-1),la={style:{"text-align":"left"}},oa={href:"https://leetcode.com/problems/max-chunks-to-make-sorted",target:"_blank",rel:"noopener noreferrer"},na=t("td",{style:{"text-align":"center"}},null,-1),sa={style:{"text-align":"left"}},da=t("code",null,"栈",-1),_a=t("code",null,"贪心",-1),ca=t("code",null,"数组",-1),ia=t("code",null,"2+",-1),aa={style:{"text-align":"left"}},ra=t("td",{style:{"text-align":"center"}},"770",-1),ha={style:{"text-align":"left"}},ua={href:"https://leetcode.com/problems/basic-calculator-iv",target:"_blank",rel:"noopener noreferrer"},fa=t("td",{style:{"text-align":"center"}},null,-1),ga={style:{"text-align":"left"}},ma=t("code",null,"栈",-1),ya=t("code",null,"递归",-1),xa=t("code",null,"哈希表",-1),pa=t("code",null,"2+",-1),ba={style:{"text-align":"left"}},ka=t("td",{style:{"text-align":"center"}},"772",-1),Ma={style:{"text-align":"left"}},va={href:"https://leetcode.com/problems/basic-calculator-iii",target:"_blank",rel:"noopener noreferrer"},Ia={style:{"text-align":"center"}},Ha={style:{"text-align":"left"}},wa=t("code",null,"栈",-1),Ea=t("code",null,"递归",-1),qa=t("code",null,"数学",-1),za=t("code",null,"1+",-1),Oa={style:{"text-align":"left"}},ja=t("td",{style:{"text-align":"center"}},"844",-1),Na={style:{"text-align":"left"}},La={href:"https://leetcode.com/problems/backspace-string-compare",target:"_blank",rel:"noopener noreferrer"},Ba={style:{"text-align":"center"}},Va={style:{"text-align":"left"}},Ca=t("code",null,"栈",-1),Qa=t("code",null,"双指针",-1),Ra=t("code",null,"字符串",-1),Za=t("code",null,"1+",-1),Ga={style:{"text-align":"left"}},Ka=t("td",{style:{"text-align":"center"}},"853",-1),Sa={style:{"text-align":"left"}},Ta={href:"https://leetcode.com/problems/car-fleet",target:"_blank",rel:"noopener noreferrer"},Ua=t("td",{style:{"text-align":"center"}},null,-1),Xa={style:{"text-align":"left"}},Ya=t("code",null,"栈",-1),Aa=t("code",null,"数组",-1),Pa=t("code",null,"排序",-1),Da=t("code",null,"1+",-1),Fa={style:{"text-align":"left"}},Ja=t("td",{style:{"text-align":"center"}},"856",-1),Wa={style:{"text-align":"left"}},$a={href:"https://leetcode.com/problems/score-of-parentheses",target:"_blank",rel:"noopener noreferrer"},t1=t("td",{style:{"text-align":"center"}},null,-1),e1={style:{"text-align":"left"}},l1=t("code",null,"栈",-1),o1=t("code",null,"字符串",-1),n1={style:{"text-align":"left"}},s1=t("td",{style:{"text-align":"center"}},"880",-1),d1={style:{"text-align":"left"}},_1={href:"https://leetcode.com/problems/decoded-string-at-index",target:"_blank",rel:"noopener noreferrer"},c1={style:{"text-align":"center"}},i1={style:{"text-align":"left"}},a1=t("code",null,"栈",-1),r1=t("code",null,"字符串",-1),h1={style:{"text-align":"left"}},u1=t("td",{style:{"text-align":"center"}},"895",-1),f1={style:{"text-align":"left"}},g1={href:"https://leetcode.com/problems/maximum-frequency-stack",target:"_blank",rel:"noopener noreferrer"},m1=t("td",{style:{"text-align":"center"}},null,-1),y1={style:{"text-align":"left"}},x1=t("code",null,"栈",-1),p1=t("code",null,"设计",-1),b1=t("code",null,"哈希表",-1),k1=t("code",null,"1+",-1),M1={style:{"text-align":"left"}},v1=t("td",{style:{"text-align":"center"}},"897",-1),I1={style:{"text-align":"left"}},H1={href:"https://leetcode.com/problems/increasing-order-search-tree",target:"_blank",rel:"noopener noreferrer"},w1=t("td",{style:{"text-align":"center"}},null,-1),E1={style:{"text-align":"left"}},q1=t("code",null,"栈",-1),z1=t("code",null,"树",-1),O1=t("code",null,"深度优先搜索",-1),j1=t("code",null,"2+",-1),N1={style:{"text-align":"left"}},L1=t("td",{style:{"text-align":"center"}},"901",-1),B1={style:{"text-align":"left"}},V1={href:"https://leetcode.com/problems/online-stock-span",target:"_blank",rel:"noopener noreferrer"},C1=t("td",{style:{"text-align":"center"}},null,-1),Q1={style:{"text-align":"left"}},R1=t("code",null,"栈",-1),Z1=t("code",null,"设计",-1),G1=t("code",null,"数据流",-1),K1=t("code",null,"1+",-1),S1={style:{"text-align":"left"}},T1=t("td",{style:{"text-align":"center"}},"907",-1),U1={style:{"text-align":"left"}},X1={href:"https://leetcode.com/problems/sum-of-subarray-minimums",target:"_blank",rel:"noopener noreferrer"},Y1=t("td",{style:{"text-align":"center"}},null,-1),A1={style:{"text-align":"left"}},P1=t("code",null,"栈",-1),D1=t("code",null,"数组",-1),F1=t("code",null,"动态规划",-1),J1=t("code",null,"1+",-1),W1={style:{"text-align":"left"}},$1=t("td",{style:{"text-align":"center"}},"921",-1),tr={style:{"text-align":"left"}},er={href:"https://leetcode.com/problems/minimum-add-to-make-parentheses-valid",target:"_blank",rel:"noopener noreferrer"},lr={style:{"text-align":"center"}},or={style:{"text-align":"left"}},nr=t("code",null,"栈",-1),sr=t("code",null,"贪心",-1),dr=t("code",null,"字符串",-1),_r={style:{"text-align":"left"}},cr=t("td",{style:{"text-align":"center"}},"936",-1),ir={style:{"text-align":"left"}},ar={href:"https://leetcode.com/problems/stamping-the-sequence",target:"_blank",rel:"noopener noreferrer"},rr=t("td",{style:{"text-align":"center"}},null,-1),hr={style:{"text-align":"left"}},ur=t("code",null,"栈",-1),fr=t("code",null,"贪心",-1),gr=t("code",null,"队列",-1),mr=t("code",null,"1+",-1),yr={style:{"text-align":"left"}},xr=t("td",{style:{"text-align":"center"}},"946",-1),pr={style:{"text-align":"left"}},br={href:"https://leetcode.com/problems/validate-stack-sequences",target:"_blank",rel:"noopener noreferrer"},kr={style:{"text-align":"center"}},Mr={style:{"text-align":"left"}},vr=t("code",null,"栈",-1),Ir=t("code",null,"数组",-1),Hr=t("code",null,"模拟",-1),wr={style:{"text-align":"left"}},Er=t("td",{style:{"text-align":"center"}},"962",-1),qr={style:{"text-align":"left"}},zr={href:"https://leetcode.com/problems/maximum-width-ramp",target:"_blank",rel:"noopener noreferrer"},Or={style:{"text-align":"center"}},jr={style:{"text-align":"left"}},Nr=t("code",null,"栈",-1),Lr=t("code",null,"数组",-1),Br=t("code",null,"单调栈",-1),Vr={style:{"text-align":"left"}},Cr=t("td",{style:{"text-align":"center"}},"975",-1),Qr={style:{"text-align":"left"}},Rr={href:"https://leetcode.com/problems/odd-even-jump",target:"_blank",rel:"noopener noreferrer"},Zr=t("td",{style:{"text-align":"center"}},null,-1),Gr={style:{"text-align":"left"}},Kr=t("code",null,"栈",-1),Sr=t("code",null,"数组",-1),Tr=t("code",null,"动态规划",-1),Ur=t("code",null,"2+",-1),Xr={style:{"text-align":"left"}},Yr=t("td",{style:{"text-align":"center"}},"1003",-1),Ar={style:{"text-align":"left"}},Pr={href:"https://leetcode.com/problems/check-if-word-is-valid-after-substitutions",target:"_blank",rel:"noopener noreferrer"},Dr=t("td",{style:{"text-align":"center"}},null,-1),Fr={style:{"text-align":"left"}},Jr=t("code",null,"栈",-1),Wr=t("code",null,"字符串",-1),$r={style:{"text-align":"left"}},th=t("td",{style:{"text-align":"center"}},"1006",-1),eh={style:{"text-align":"left"}},lh={href:"https://leetcode.com/problems/clumsy-factorial",target:"_blank",rel:"noopener noreferrer"},oh=t("td",{style:{"text-align":"center"}},null,-1),nh={style:{"text-align":"left"}},sh=t("code",null,"栈",-1),dh=t("code",null,"数学",-1),_h=t("code",null,"模拟",-1),ch={style:{"text-align":"left"}},ih=t("td",{style:{"text-align":"center"}},"1008",-1),ah={style:{"text-align":"left"}},rh={href:"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal",target:"_blank",rel:"noopener noreferrer"},hh={style:{"text-align":"center"}},uh={style:{"text-align":"left"}},fh=t("code",null,"栈",-1),gh=t("code",null,"树",-1),mh=t("code",null,"二叉搜索树",-1),yh=t("code",null,"3+",-1),xh={style:{"text-align":"left"}},ph=t("td",{style:{"text-align":"center"}},"1019",-1),bh={style:{"text-align":"left"}},kh={href:"https://leetcode.com/problems/next-greater-node-in-linked-list",target:"_blank",rel:"noopener noreferrer"},Mh=t("td",{style:{"text-align":"center"}},null,-1),vh={style:{"text-align":"left"}},Ih=t("code",null,"栈",-1),Hh=t("code",null,"数组",-1),wh=t("code",null,"链表",-1),Eh=t("code",null,"1+",-1),qh={style:{"text-align":"left"}},zh=t("td",{style:{"text-align":"center"}},"1021",-1),Oh={style:{"text-align":"left"}},jh={href:"https://leetcode.com/problems/remove-outermost-parentheses",target:"_blank",rel:"noopener noreferrer"},Nh={style:{"text-align":"center"}},Lh={style:{"text-align":"left"}},Bh=t("code",null,"栈",-1),Vh=t("code",null,"字符串",-1),Ch={style:{"text-align":"left"}},Qh=t("td",{style:{"text-align":"center"}},"1047",-1),Rh={style:{"text-align":"left"}},Zh={href:"https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string",target:"_blank",rel:"noopener noreferrer"},Gh={style:{"text-align":"center"}},Kh={style:{"text-align":"left"}},Sh=t("code",null,"栈",-1),Th=t("code",null,"字符串",-1),Uh={style:{"text-align":"left"}},Xh=t("td",{style:{"text-align":"center"}},"1063",-1),Yh={style:{"text-align":"left"}},Ah={href:"https://leetcode.com/problems/number-of-valid-subarrays",target:"_blank",rel:"noopener noreferrer"},Ph=t("td",{style:{"text-align":"center"}},null,-1),Dh={style:{"text-align":"left"}},Fh=t("code",null,"栈",-1),Jh=t("code",null,"数组",-1),Wh=t("code",null,"单调栈",-1),$h={style:{"text-align":"left"}},tu=t("td",{style:{"text-align":"center"}},"1081",-1),eu={style:{"text-align":"left"}},lu={href:"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters",target:"_blank",rel:"noopener noreferrer"},ou={style:{"text-align":"center"}},nu={style:{"text-align":"left"}},su=t("code",null,"栈",-1),du=t("code",null,"贪心",-1),_u=t("code",null,"字符串",-1),cu=t("code",null,"1+",-1),iu={style:{"text-align":"left"}},au=t("td",{style:{"text-align":"center"}},"1096",-1),ru={style:{"text-align":"left"}},hu={href:"https://leetcode.com/problems/brace-expansion-ii",target:"_blank",rel:"noopener noreferrer"},uu=t("td",{style:{"text-align":"center"}},null,-1),fu={style:{"text-align":"left"}},gu=t("code",null,"栈",-1),mu=t("code",null,"广度优先搜索",-1),yu=t("code",null,"字符串",-1),xu=t("code",null,"1+",-1),pu={style:{"text-align":"left"}},bu=t("td",{style:{"text-align":"center"}},"1106",-1),ku={style:{"text-align":"left"}},Mu={href:"https://leetcode.com/problems/parsing-a-boolean-expression",target:"_blank",rel:"noopener noreferrer"},vu=t("td",{style:{"text-align":"center"}},null,-1),Iu={style:{"text-align":"left"}},Hu=t("code",null,"栈",-1),wu=t("code",null,"递归",-1),Eu=t("code",null,"字符串",-1),qu={style:{"text-align":"left"}},zu=t("td",{style:{"text-align":"center"}},"1111",-1),Ou={style:{"text-align":"left"}},ju={href:"https://leetcode.com/problems/maximum-nesting-depth-of-two-valid-parentheses-strings",target:"_blank",rel:"noopener noreferrer"},Nu=t("td",{style:{"text-align":"center"}},null,-1),Lu={style:{"text-align":"left"}},Bu=t("code",null,"栈",-1),Vu=t("code",null,"字符串",-1),Cu={style:{"text-align":"left"}},Qu=t("td",{style:{"text-align":"center"}},"1124",-1),Ru={style:{"text-align":"left"}},Zu={href:"https://leetcode.com/problems/longest-well-performing-interval",target:"_blank",rel:"noopener noreferrer"},Gu=t("td",{style:{"text-align":"center"}},null,-1),Ku={style:{"text-align":"left"}},Su=t("code",null,"栈",-1),Tu=t("code",null,"数组",-1),Uu=t("code",null,"哈希表",-1),Xu=t("code",null,"2+",-1),Yu={style:{"text-align":"left"}},Au=t("td",{style:{"text-align":"center"}},"1130",-1),Pu={style:{"text-align":"left"}},Du={href:"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values",target:"_blank",rel:"noopener noreferrer"},Fu=t("td",{style:{"text-align":"center"}},null,-1),Ju={style:{"text-align":"left"}},Wu=t("code",null,"栈",-1),$u=t("code",null,"贪心",-1),tf=t("code",null,"数组",-1),ef=t("code",null,"2+",-1),lf={style:{"text-align":"left"}},of=t("td",{style:{"text-align":"center"}},"1172",-1),nf={style:{"text-align":"left"}},sf={href:"https://leetcode.com/problems/dinner-plate-stacks",target:"_blank",rel:"noopener noreferrer"},df=t("td",{style:{"text-align":"center"}},null,-1),_f={style:{"text-align":"left"}},cf=t("code",null,"栈",-1),af=t("code",null,"设计",-1),rf=t("code",null,"哈希表",-1),hf=t("code",null,"1+",-1),uf={style:{"text-align":"left"}},ff=t("td",{style:{"text-align":"center"}},"1190",-1),gf={style:{"text-align":"left"}},mf={href:"https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses",target:"_blank",rel:"noopener noreferrer"},yf={style:{"text-align":"center"}},xf={style:{"text-align":"left"}},pf=t("code",null,"栈",-1),bf=t("code",null,"字符串",-1),kf={style:{"text-align":"left"}},Mf=t("td",{style:{"text-align":"center"}},"1209",-1),vf={style:{"text-align":"left"}},If={href:"https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii",target:"_blank",rel:"noopener noreferrer"},Hf=t("td",{style:{"text-align":"center"}},null,-1),wf={style:{"text-align":"left"}},Ef=t("code",null,"栈",-1),qf=t("code",null,"字符串",-1),zf={style:{"text-align":"left"}},Of=t("td",{style:{"text-align":"center"}},"1214",-1),jf={style:{"text-align":"left"}},Nf={href:"https://leetcode.com/problems/two-sum-bsts",target:"_blank",rel:"noopener noreferrer"},Lf=t("td",{style:{"text-align":"center"}},null,-1),Bf={style:{"text-align":"left"}},Vf=t("code",null,"栈",-1),Cf=t("code",null,"树",-1),Qf=t("code",null,"深度优先搜索",-1),Rf=t("code",null,"4+",-1),Zf={style:{"text-align":"left"}},Gf=t("td",{style:{"text-align":"center"}},"1249",-1),Kf={style:{"text-align":"left"}},Sf={href:"https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses",target:"_blank",rel:"noopener noreferrer"},Tf=t("td",{style:{"text-align":"center"}},null,-1),Uf={style:{"text-align":"left"}},Xf=t("code",null,"栈",-1),Yf=t("code",null,"字符串",-1),Af={style:{"text-align":"left"}},Pf=t("td",{style:{"text-align":"center"}},"1265",-1),Df={style:{"text-align":"left"}},Ff={href:"https://leetcode.com/problems/print-immutable-linked-list-in-reverse",target:"_blank",rel:"noopener noreferrer"},Jf=t("td",{style:{"text-align":"center"}},null,-1),Wf={style:{"text-align":"left"}},$f=t("code",null,"栈",-1),tg=t("code",null,"递归",-1),eg=t("code",null,"链表",-1),lg=t("code",null,"1+",-1),og={style:{"text-align":"left"}},ng=t("td",{style:{"text-align":"center"}},"1381",-1),sg={style:{"text-align":"left"}},dg={href:"https://leetcode.com/problems/design-a-stack-with-increment-operation",target:"_blank",rel:"noopener noreferrer"},_g={style:{"text-align":"center"}},cg={style:{"text-align":"left"}},ig=t("code",null,"栈",-1),ag=t("code",null,"设计",-1),rg=t("code",null,"数组",-1),hg={style:{"text-align":"left"}},ug=t("td",{style:{"text-align":"center"}},"1441",-1),fg={style:{"text-align":"left"}},gg={href:"https://leetcode.com/problems/build-an-array-with-stack-operations",target:"_blank",rel:"noopener noreferrer"},mg={style:{"text-align":"center"}},yg={style:{"text-align":"left"}},xg=t("code",null,"栈",-1),pg=t("code",null,"数组",-1),bg=t("code",null,"模拟",-1),kg={style:{"text-align":"left"}},Mg=t("td",{style:{"text-align":"center"}},"1472",-1),vg={style:{"text-align":"left"}},Ig={href:"https://leetcode.com/problems/design-browser-history",target:"_blank",rel:"noopener noreferrer"},Hg={style:{"text-align":"center"}},wg={style:{"text-align":"left"}},Eg=t("code",null,"栈",-1),qg=t("code",null,"设计",-1),zg=t("code",null,"数组",-1),Og=t("code",null,"3+",-1),jg={style:{"text-align":"left"}},Ng=t("td",{style:{"text-align":"center"}},"1475",-1),Lg={style:{"text-align":"left"}},Bg={href:"https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop",target:"_blank",rel:"noopener noreferrer"},Vg={style:{"text-align":"center"}},Cg={style:{"text-align":"left"}},Qg=t("code",null,"栈",-1),Rg=t("code",null,"数组",-1),Zg=t("code",null,"单调栈",-1),Gg={style:{"text-align":"left"}},Kg=t("td",{style:{"text-align":"center"}},"1504",-1),Sg={style:{"text-align":"left"}},Tg={href:"https://leetcode.com/problems/count-submatrices-with-all-ones",target:"_blank",rel:"noopener noreferrer"},Ug=t("td",{style:{"text-align":"center"}},null,-1),Xg={style:{"text-align":"left"}},Yg=t("code",null,"栈",-1),Ag=t("code",null,"数组",-1),Pg=t("code",null,"动态规划",-1),Dg=t("code",null,"2+",-1),Fg={style:{"text-align":"left"}},Jg=t("td",{style:{"text-align":"center"}},"1526",-1),Wg={style:{"text-align":"left"}},$g={href:"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array",target:"_blank",rel:"noopener noreferrer"},tm=t("td",{style:{"text-align":"center"}},null,-1),em={style:{"text-align":"left"}},lm=t("code",null,"栈",-1),om=t("code",null,"贪心",-1),nm=t("code",null,"数组",-1),sm=t("code",null,"2+",-1),dm={style:{"text-align":"left"}},_m=t("td",{style:{"text-align":"center"}},"1541",-1),cm={style:{"text-align":"left"}},im={href:"https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string",target:"_blank",rel:"noopener noreferrer"},am=t("td",{style:{"text-align":"center"}},null,-1),rm={style:{"text-align":"left"}},hm=t("code",null,"栈",-1),um=t("code",null,"贪心",-1),fm=t("code",null,"字符串",-1),gm={style:{"text-align":"left"}},mm=t("td",{style:{"text-align":"center"}},"1544",-1),ym={style:{"text-align":"left"}},xm={href:"https://leetcode.com/problems/make-the-string-great",target:"_blank",rel:"noopener noreferrer"},pm=t("td",{style:{"text-align":"center"}},null,-1),bm={style:{"text-align":"left"}},km=t("code",null,"栈",-1),Mm=t("code",null,"字符串",-1),vm={style:{"text-align":"left"}},Im=t("td",{style:{"text-align":"center"}},"1574",-1),Hm={style:{"text-align":"left"}},wm={href:"https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted",target:"_blank",rel:"noopener noreferrer"},Em=t("td",{style:{"text-align":"center"}},null,-1),qm={style:{"text-align":"left"}},zm=t("code",null,"栈",-1),Om=t("code",null,"数组",-1),jm=t("code",null,"双指针",-1),Nm=t("code",null,"2+",-1),Lm={style:{"text-align":"left"}},Bm=t("td",{style:{"text-align":"center"}},"1586",-1),Vm={style:{"text-align":"left"}},Cm={href:"https://leetcode.com/problems/binary-search-tree-iterator-ii",target:"_blank",rel:"noopener noreferrer"},Qm=t("td",{style:{"text-align":"center"}},null,-1),Rm={style:{"text-align":"left"}},Zm=t("code",null,"栈",-1),Gm=t("code",null,"树",-1),Km=t("code",null,"设计",-1),Sm=t("code",null,"3+",-1),Tm={style:{"text-align":"left"}},Um=t("td",{style:{"text-align":"center"}},"1597",-1),Xm={style:{"text-align":"left"}},Ym={href:"https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression",target:"_blank",rel:"noopener noreferrer"},Am=t("td",{style:{"text-align":"center"}},null,-1),Pm={style:{"text-align":"left"}},Dm=t("code",null,"栈",-1),Fm=t("code",null,"树",-1),Jm=t("code",null,"字符串",-1),Wm=t("code",null,"1+",-1),$m={style:{"text-align":"left"}},ty=t("td",{style:{"text-align":"center"}},"1598",-1),ey={style:{"text-align":"left"}},ly={href:"https://leetcode.com/problems/crawler-log-folder",target:"_blank",rel:"noopener noreferrer"},oy=t("td",{style:{"text-align":"center"}},null,-1),ny={style:{"text-align":"left"}},sy=t("code",null,"栈",-1),dy=t("code",null,"数组",-1),_y=t("code",null,"字符串",-1),cy={style:{"text-align":"left"}},iy=t("td",{style:{"text-align":"center"}},"1614",-1),ay={style:{"text-align":"left"}},ry={href:"https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses",target:"_blank",rel:"noopener noreferrer"},hy=t("td",{style:{"text-align":"center"}},null,-1),uy={style:{"text-align":"left"}},fy=t("code",null,"栈",-1),gy=t("code",null,"字符串",-1),my={style:{"text-align":"left"}},yy=t("td",{style:{"text-align":"center"}},"1628",-1),xy={style:{"text-align":"left"}},py={href:"https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function",target:"_blank",rel:"noopener noreferrer"},by=t("td",{style:{"text-align":"center"}},null,-1),ky={style:{"text-align":"left"}},My=t("code",null,"栈",-1),vy=t("code",null,"树",-1),Iy=t("code",null,"设计",-1),Hy=t("code",null,"3+",-1),wy={style:{"text-align":"left"}},Ey=t("td",{style:{"text-align":"center"}},"1653",-1),qy={style:{"text-align":"left"}},zy={href:"https://leetcode.com/problems/minimum-deletions-to-make-string-balanced",target:"_blank",rel:"noopener noreferrer"},Oy=t("td",{style:{"text-align":"center"}},null,-1),jy={style:{"text-align":"left"}},Ny=t("code",null,"栈",-1),Ly=t("code",null,"字符串",-1),By=t("code",null,"动态规划",-1),Vy={style:{"text-align":"left"}},Cy=t("td",{style:{"text-align":"center"}},"1673",-1),Qy={style:{"text-align":"left"}},Ry={href:"https://leetcode.com/problems/find-the-most-competitive-subsequence",target:"_blank",rel:"noopener noreferrer"},Zy=t("td",{style:{"text-align":"center"}},null,-1),Gy={style:{"text-align":"left"}},Ky=t("code",null,"栈",-1),Sy=t("code",null,"贪心",-1),Ty=t("code",null,"数组",-1),Uy=t("code",null,"1+",-1),Xy={style:{"text-align":"left"}},Yy=t("td",{style:{"text-align":"center"}},"1700",-1),Ay={style:{"text-align":"left"}},Py={href:"https://leetcode.com/problems/number-of-students-unable-to-eat-lunch",target:"_blank",rel:"noopener noreferrer"},Dy=t("td",{style:{"text-align":"center"}},null,-1),Fy={style:{"text-align":"left"}},Jy=t("code",null,"栈",-1),Wy=t("code",null,"队列",-1),$y=t("code",null,"数组",-1),tx=t("code",null,"1+",-1),ex={style:{"text-align":"left"}},lx=t("td",{style:{"text-align":"center"}},"1717",-1),ox={style:{"text-align":"left"}},nx={href:"https://leetcode.com/problems/maximum-score-from-removing-substrings",target:"_blank",rel:"noopener noreferrer"},sx=t("td",{style:{"text-align":"center"}},null,-1),dx={style:{"text-align":"left"}},_x=t("code",null,"栈",-1),cx=t("code",null,"贪心",-1),ix=t("code",null,"字符串",-1),ax={style:{"text-align":"left"}},rx=t("td",{style:{"text-align":"center"}},"1756",-1),hx={style:{"text-align":"left"}},ux={href:"https://leetcode.com/problems/design-most-recently-used-queue",target:"_blank",rel:"noopener noreferrer"},fx=t("td",{style:{"text-align":"center"}},null,-1),gx={style:{"text-align":"left"}},mx=t("code",null,"栈",-1),yx=t("code",null,"设计",-1),xx=t("code",null,"树状数组",-1),px=t("code",null,"3+",-1),bx={style:{"text-align":"left"}},kx=t("td",{style:{"text-align":"center"}},"1762",-1),Mx={style:{"text-align":"left"}},vx={href:"https://leetcode.com/problems/buildings-with-an-ocean-view",target:"_blank",rel:"noopener noreferrer"},Ix=t("td",{style:{"text-align":"center"}},null,-1),Hx={style:{"text-align":"left"}},wx=t("code",null,"栈",-1),Ex=t("code",null,"数组",-1),qx=t("code",null,"单调栈",-1),zx={style:{"text-align":"left"}},Ox=t("td",{style:{"text-align":"center"}},"1776",-1),jx={style:{"text-align":"left"}},Nx={href:"https://leetcode.com/problems/car-fleet-ii",target:"_blank",rel:"noopener noreferrer"},Lx=t("td",{style:{"text-align":"center"}},null,-1),Bx={style:{"text-align":"left"}},Vx=t("code",null,"栈",-1),Cx=t("code",null,"数组",-1),Qx=t("code",null,"数学",-1),Rx=t("code",null,"2+",-1),Zx={style:{"text-align":"left"}},Gx=t("td",{style:{"text-align":"center"}},"1793",-1),Kx={style:{"text-align":"left"}},Sx={href:"https://leetcode.com/problems/maximum-score-of-a-good-subarray",target:"_blank",rel:"noopener noreferrer"},Tx=t("td",{style:{"text-align":"center"}},null,-1),Ux={style:{"text-align":"left"}},Xx=t("code",null,"栈",-1),Yx=t("code",null,"数组",-1),Ax=t("code",null,"双指针",-1),Px=t("code",null,"2+",-1),Dx={style:{"text-align":"left"}},Fx=t("td",{style:{"text-align":"center"}},"1856",-1),Jx={style:{"text-align":"left"}},Wx={href:"https://leetcode.com/problems/maximum-subarray-min-product",target:"_blank",rel:"noopener noreferrer"},$x=t("td",{style:{"text-align":"center"}},null,-1),t0={style:{"text-align":"left"}},e0=t("code",null,"栈",-1),l0=t("code",null,"数组",-1),o0=t("code",null,"前缀和",-1),n0=t("code",null,"1+",-1),s0={style:{"text-align":"left"}},d0=t("td",{style:{"text-align":"center"}},"1896",-1),_0={style:{"text-align":"left"}},c0={href:"https://leetcode.com/problems/minimum-cost-to-change-the-final-value-of-expression",target:"_blank",rel:"noopener noreferrer"},i0=t("td",{style:{"text-align":"center"}},null,-1),a0={style:{"text-align":"left"}},r0=t("code",null,"栈",-1),h0=t("code",null,"数学",-1),u0=t("code",null,"字符串",-1),f0=t("code",null,"1+",-1),g0={style:{"text-align":"left"}},m0=t("td",{style:{"text-align":"center"}},"1910",-1),y0={style:{"text-align":"left"}},x0={href:"https://leetcode.com/problems/remove-all-occurrences-of-a-substring",target:"_blank",rel:"noopener noreferrer"},p0=t("td",{style:{"text-align":"center"}},null,-1),b0={style:{"text-align":"left"}},k0=t("code",null,"栈",-1),M0=t("code",null,"字符串",-1),v0=t("code",null,"模拟",-1),I0={style:{"text-align":"left"}},H0=t("td",{style:{"text-align":"center"}},"1944",-1),w0={style:{"text-align":"left"}},E0={href:"https://leetcode.com/problems/number-of-visible-people-in-a-queue",target:"_blank",rel:"noopener noreferrer"},q0=t("td",{style:{"text-align":"center"}},null,-1),z0={style:{"text-align":"left"}},O0=t("code",null,"栈",-1),j0=t("code",null,"数组",-1),N0=t("code",null,"单调栈",-1),L0={style:{"text-align":"left"}},B0=t("td",{style:{"text-align":"center"}},"1950",-1),V0={style:{"text-align":"left"}},C0={href:"https://leetcode.com/problems/maximum-of-minimum-values-in-all-subarrays",target:"_blank",rel:"noopener noreferrer"},Q0=t("td",{style:{"text-align":"center"}},null,-1),R0={style:{"text-align":"left"}},Z0=t("code",null,"栈",-1),G0=t("code",null,"数组",-1),K0=t("code",null,"单调栈",-1),S0={style:{"text-align":"left"}},T0=t("td",{style:{"text-align":"center"}},"1963",-1),U0={style:{"text-align":"left"}},X0={href:"https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-string-balanced",target:"_blank",rel:"noopener noreferrer"},Y0={style:{"text-align":"center"}},A0={style:{"text-align":"left"}},P0=t("code",null,"栈",-1),D0=t("code",null,"贪心",-1),F0=t("code",null,"双指针",-1),J0=t("code",null,"1+",-1),W0={style:{"text-align":"left"}},$0=t("td",{style:{"text-align":"center"}},"1996",-1),tp={style:{"text-align":"left"}},ep={href:"https://leetcode.com/problems/the-number-of-weak-characters-in-the-game",target:"_blank",rel:"noopener noreferrer"},lp=t("td",{style:{"text-align":"center"}},null,-1),op={style:{"text-align":"left"}},np=t("code",null,"栈",-1),sp=t("code",null,"贪心",-1),dp=t("code",null,"数组",-1),_p=t("code",null,"2+",-1),cp={style:{"text-align":"left"}},ip=t("td",{style:{"text-align":"center"}},"2000",-1),ap={style:{"text-align":"left"}},rp={href:"https://leetcode.com/problems/reverse-prefix-of-word",target:"_blank",rel:"noopener noreferrer"},hp=t("td",{style:{"text-align":"center"}},null,-1),up={style:{"text-align":"left"}},fp=t("code",null,"栈",-1),gp=t("code",null,"双指针",-1),mp=t("code",null,"字符串",-1),yp={style:{"text-align":"left"}},xp=t("td",{style:{"text-align":"center"}},"2019",-1),pp={style:{"text-align":"left"}},bp={href:"https://leetcode.com/problems/the-score-of-students-solving-math-expression",target:"_blank",rel:"noopener noreferrer"},kp=t("td",{style:{"text-align":"center"}},null,-1),Mp={style:{"text-align":"left"}},vp=t("code",null,"栈",-1),Ip=t("code",null,"记忆化搜索",-1),Hp=t("code",null,"数组",-1),wp=t("code",null,"3+",-1),Ep={style:{"text-align":"left"}},qp=t("td",{style:{"text-align":"center"}},"2030",-1),zp={style:{"text-align":"left"}},Op={href:"https://leetcode.com/problems/smallest-k-length-subsequence-with-occurrences-of-a-letter",target:"_blank",rel:"noopener noreferrer"},jp=t("td",{style:{"text-align":"center"}},null,-1),Np={style:{"text-align":"left"}},Lp=t("code",null,"栈",-1),Bp=t("code",null,"贪心",-1),Vp=t("code",null,"字符串",-1),Cp=t("code",null,"1+",-1),Qp={style:{"text-align":"left"}},Rp=t("td",{style:{"text-align":"center"}},"2104",-1),Zp={style:{"text-align":"left"}},Gp={href:"https://leetcode.com/problems/sum-of-subarray-ranges",target:"_blank",rel:"noopener noreferrer"},Kp=t("td",{style:{"text-align":"center"}},null,-1),Sp={style:{"text-align":"left"}},Tp=t("code",null,"栈",-1),Up=t("code",null,"数组",-1),Xp=t("code",null,"单调栈",-1),Yp={style:{"text-align":"left"}},Ap=t("td",{style:{"text-align":"center"}},"2116",-1),Pp={style:{"text-align":"left"}},Dp={href:"https://leetcode.com/problems/check-if-a-parentheses-string-can-be-valid",target:"_blank",rel:"noopener noreferrer"},Fp=t("td",{style:{"text-align":"center"}},null,-1),Jp={style:{"text-align":"left"}},Wp=t("code",null,"栈",-1),$p=t("code",null,"贪心",-1),t3=t("code",null,"字符串",-1),e3={style:{"text-align":"left"}},l3=t("td",{style:{"text-align":"center"}},"2130",-1),o3={style:{"text-align":"left"}},n3={href:"https://leetcode.com/problems/maximum-twin-sum-of-a-linked-list",target:"_blank",rel:"noopener noreferrer"},s3=t("td",{style:{"text-align":"center"}},null,-1),d3={style:{"text-align":"left"}},_3=t("code",null,"栈",-1),c3=t("code",null,"链表",-1),i3=t("code",null,"双指针",-1),a3={style:{"text-align":"left"}},r3=t("td",{style:{"text-align":"center"}},"2197",-1),h3={style:{"text-align":"left"}},u3={href:"https://leetcode.com/problems/replace-non-coprime-numbers-in-array",target:"_blank",rel:"noopener noreferrer"},f3=t("td",{style:{"text-align":"center"}},null,-1),g3={style:{"text-align":"left"}},m3=t("code",null,"栈",-1),y3=t("code",null,"数组",-1),x3=t("code",null,"数学",-1),p3=t("code",null,"1+",-1),b3={style:{"text-align":"left"}},k3=t("td",{style:{"text-align":"center"}},"2211",-1),M3={style:{"text-align":"left"}},v3={href:"https://leetcode.com/problems/count-collisions-on-a-road",target:"_blank",rel:"noopener noreferrer"},I3=t("td",{style:{"text-align":"center"}},null,-1),H3={style:{"text-align":"left"}},w3=t("code",null,"栈",-1),E3=t("code",null,"字符串",-1),q3=t("code",null,"模拟",-1),z3={style:{"text-align":"left"}},O3=t("td",{style:{"text-align":"center"}},"2216",-1),j3={style:{"text-align":"left"}},N3={href:"https://leetcode.com/problems/minimum-deletions-to-make-array-beautiful",target:"_blank",rel:"noopener noreferrer"},L3=t("td",{style:{"text-align":"center"}},null,-1),B3={style:{"text-align":"left"}},V3=t("code",null,"栈",-1),C3=t("code",null,"贪心",-1),Q3=t("code",null,"数组",-1),R3={style:{"text-align":"left"}},Z3=t("td",{style:{"text-align":"center"}},"2254",-1),G3={style:{"text-align":"left"}},K3={href:"https://leetcode.com/problems/design-video-sharing-platform",target:"_blank",rel:"noopener noreferrer"},S3=t("td",{style:{"text-align":"center"}},null,-1),T3={style:{"text-align":"left"}},U3=t("code",null,"栈",-1),X3=t("code",null,"设计",-1),Y3=t("code",null,"哈希表",-1),A3=t("code",null,"1+",-1),P3={style:{"text-align":"left"}},D3=t("td",{style:{"text-align":"center"}},"2281",-1),F3={style:{"text-align":"left"}},J3={href:"https://leetcode.com/problems/sum-of-total-strength-of-wizards",target:"_blank",rel:"noopener noreferrer"},W3=t("td",{style:{"text-align":"center"}},null,-1),$3={style:{"text-align":"left"}},tb=t("code",null,"栈",-1),eb=t("code",null,"数组",-1),lb=t("code",null,"前缀和",-1),ob=t("code",null,"1+",-1),nb={style:{"text-align":"left"}},sb=t("td",{style:{"text-align":"center"}},"2282",-1),db={style:{"text-align":"left"}},_b={href:"https://leetcode.com/problems/number-of-people-that-can-be-seen-in-a-grid",target:"_blank",rel:"noopener noreferrer"},cb=t("td",{style:{"text-align":"center"}},null,-1),ib={style:{"text-align":"left"}},ab=t("code",null,"栈",-1),rb=t("code",null,"数组",-1),hb=t("code",null,"矩阵",-1),ub=t("code",null,"1+",-1),fb={style:{"text-align":"left"}},gb=t("td",{style:{"text-align":"center"}},"2289",-1),mb={style:{"text-align":"left"}},yb={href:"https://leetcode.com/problems/steps-to-make-array-non-decreasing",target:"_blank",rel:"noopener noreferrer"},xb=t("td",{style:{"text-align":"center"}},null,-1),pb={style:{"text-align":"left"}},bb=t("code",null,"栈",-1),kb=t("code",null,"数组",-1),Mb=t("code",null,"链表",-1),vb=t("code",null,"1+",-1),Ib={style:{"text-align":"left"}},Hb=t("td",{style:{"text-align":"center"}},"2296",-1),wb={style:{"text-align":"left"}},Eb={href:"https://leetcode.com/problems/design-a-text-editor",target:"_blank",rel:"noopener noreferrer"},qb=t("td",{style:{"text-align":"center"}},null,-1),zb={style:{"text-align":"left"}},Ob=t("code",null,"栈",-1),jb=t("code",null,"设计",-1),Nb=t("code",null,"链表",-1),Lb=t("code",null,"3+",-1),Bb={style:{"text-align":"left"}},Vb=t("td",{style:{"text-align":"center"}},"2297",-1),Cb={style:{"text-align":"left"}},Qb={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},Rb=t("td",{style:{"text-align":"center"}},null,-1),Zb={style:{"text-align":"left"}},Gb=t("code",null,"栈",-1),Kb=t("code",null,"图",-1),Sb=t("code",null,"数组",-1),Tb=t("code",null,"3+",-1),Ub={style:{"text-align":"left"}},Xb=t("td",{style:{"text-align":"center"}},"2334",-1),Yb={style:{"text-align":"left"}},Ab={href:"https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold",target:"_blank",rel:"noopener noreferrer"},Pb=t("td",{style:{"text-align":"center"}},null,-1),Db={style:{"text-align":"left"}},Fb=t("code",null,"栈",-1),Jb=t("code",null,"并查集",-1),Wb=t("code",null,"数组",-1),$b=t("code",null,"1+",-1),t2={style:{"text-align":"left"}},e2=t("td",{style:{"text-align":"center"}},"2345",-1),l2={style:{"text-align":"left"}},o2={href:"https://leetcode.com/problems/finding-the-number-of-visible-mountains",target:"_blank",rel:"noopener noreferrer"},n2=t("td",{style:{"text-align":"center"}},null,-1),s2={style:{"text-align":"left"}},d2=t("code",null,"栈",-1),_2=t("code",null,"数组",-1),c2=t("code",null,"排序",-1),i2=t("code",null,"1+",-1),a2={style:{"text-align":"left"}},r2=t("td",{style:{"text-align":"center"}},"2355",-1),h2={style:{"text-align":"left"}},u2={href:"https://leetcode.com/problems/maximum-number-of-books-you-can-take",target:"_blank",rel:"noopener noreferrer"},f2=t("td",{style:{"text-align":"center"}},null,-1),g2={style:{"text-align":"left"}},m2=t("code",null,"栈",-1),y2=t("code",null,"数组",-1),x2=t("code",null,"动态规划",-1),p2=t("code",null,"1+",-1),b2={style:{"text-align":"left"}},k2=t("td",{style:{"text-align":"center"}},"2375",-1),M2={style:{"text-align":"left"}},v2={href:"https://leetcode.com/problems/construct-smallest-number-from-di-string",target:"_blank",rel:"noopener noreferrer"},I2=t("td",{style:{"text-align":"center"}},null,-1),H2={style:{"text-align":"left"}},w2=t("code",null,"栈",-1),E2=t("code",null,"贪心",-1),q2=t("code",null,"字符串",-1),z2=t("code",null,"1+",-1),O2={style:{"text-align":"left"}},j2=t("td",{style:{"text-align":"center"}},"2390",-1),N2={style:{"text-align":"left"}},L2={href:"https://leetcode.com/problems/removing-stars-from-a-string",target:"_blank",rel:"noopener noreferrer"},B2=t("td",{style:{"text-align":"center"}},null,-1),V2={style:{"text-align":"left"}},C2=t("code",null,"栈",-1),Q2=t("code",null,"字符串",-1),R2=t("code",null,"模拟",-1),Z2={style:{"text-align":"left"}},G2=t("td",{style:{"text-align":"center"}},"2434",-1),K2={style:{"text-align":"left"}},S2={href:"https://leetcode.com/problems/using-a-robot-to-print-the-lexicographically-smallest-string",target:"_blank",rel:"noopener noreferrer"},T2=t("td",{style:{"text-align":"center"}},null,-1),U2={style:{"text-align":"left"}},X2=t("code",null,"栈",-1),Y2=t("code",null,"贪心",-1),A2=t("code",null,"哈希表",-1),P2=t("code",null,"1+",-1),D2={style:{"text-align":"left"}},F2=t("td",{style:{"text-align":"center"}},"2454",-1),J2={style:{"text-align":"left"}},W2={href:"https://leetcode.com/problems/next-greater-element-iv",target:"_blank",rel:"noopener noreferrer"},$2=t("td",{style:{"text-align":"center"}},null,-1),t4={style:{"text-align":"left"}},e4=t("code",null,"栈",-1),l4=t("code",null,"数组",-1),o4=t("code",null,"二分查找",-1),n4=t("code",null,"3+",-1),s4={style:{"text-align":"left"}},d4=t("td",{style:{"text-align":"center"}},"2487",-1),_4={style:{"text-align":"left"}},c4={href:"https://leetcode.com/problems/remove-nodes-from-linked-list",target:"_blank",rel:"noopener noreferrer"},i4=t("td",{style:{"text-align":"center"}},null,-1),a4={style:{"text-align":"left"}},r4=t("code",null,"栈",-1),h4=t("code",null,"递归",-1),u4=t("code",null,"链表",-1),f4=t("code",null,"1+",-1),g4={style:{"text-align":"left"}},m4=t("td",{style:{"text-align":"center"}},"2589",-1),y4={style:{"text-align":"left"}},x4={href:"https://leetcode.com/problems/minimum-time-to-complete-all-tasks",target:"_blank",rel:"noopener noreferrer"},p4=t("td",{style:{"text-align":"center"}},null,-1),b4={style:{"text-align":"left"}},k4=t("code",null,"栈",-1),M4=t("code",null,"贪心",-1),v4=t("code",null,"数组",-1),I4=t("code",null,"2+",-1),H4={style:{"text-align":"left"}},w4=t("td",{style:{"text-align":"center"}},"2617",-1),E4={style:{"text-align":"left"}},q4={href:"https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid",target:"_blank",rel:"noopener noreferrer"},z4=t("td",{style:{"text-align":"center"}},null,-1),O4={style:{"text-align":"left"}},j4=t("code",null,"栈",-1),N4=t("code",null,"广度优先搜索",-1),L4=t("code",null,"并查集",-1),B4=t("code",null,"5+",-1),V4={style:{"text-align":"left"}},C4=t("td",{style:{"text-align":"center"}},"2645",-1),Q4={style:{"text-align":"left"}},R4={href:"https://leetcode.com/problems/minimum-additions-to-make-valid-string",target:"_blank",rel:"noopener noreferrer"},Z4=t("td",{style:{"text-align":"center"}},null,-1),G4={style:{"text-align":"left"}},K4=t("code",null,"栈",-1),S4=t("code",null,"贪心",-1),T4=t("code",null,"字符串",-1),U4=t("code",null,"1+",-1),X4={style:{"text-align":"left"}},Y4=t("td",{style:{"text-align":"center"}},"2696",-1),A4={style:{"text-align":"left"}},P4={href:"https://leetcode.com/problems/minimum-string-length-after-removing-substrings",target:"_blank",rel:"noopener noreferrer"},D4={style:{"text-align":"center"}},F4={style:{"text-align":"left"}},J4=t("code",null,"栈",-1),W4=t("code",null,"字符串",-1),$4=t("code",null,"模拟",-1),t6={style:{"text-align":"left"}},e6=t("td",{style:{"text-align":"center"}},"2736",-1),l6={style:{"text-align":"left"}},o6={href:"https://leetcode.com/problems/maximum-sum-queries",target:"_blank",rel:"noopener noreferrer"},n6=t("td",{style:{"text-align":"center"}},null,-1),s6={style:{"text-align":"left"}},d6=t("code",null,"栈",-1),_6=t("code",null,"树状数组",-1),c6=t("code",null,"线段树",-1),i6=t("code",null,"4+",-1),a6={style:{"text-align":"left"}},r6=t("td",{style:{"text-align":"center"}},"2751",-1),h6={style:{"text-align":"left"}},u6={href:"https://leetcode.com/problems/robot-collisions",target:"_blank",rel:"noopener noreferrer"},f6=t("td",{style:{"text-align":"center"}},null,-1),g6={style:{"text-align":"left"}},m6=t("code",null,"栈",-1),y6=t("code",null,"数组",-1),x6=t("code",null,"排序",-1),p6=t("code",null,"1+",-1),b6={style:{"text-align":"left"}},k6=t("td",{style:{"text-align":"center"}},"2764",-1),M6={style:{"text-align":"left"}},v6={href:"https://leetcode.com/problems/is-array-a-preorder-of-some-binary-tree",target:"_blank",rel:"noopener noreferrer"},I6=t("td",{style:{"text-align":"center"}},null,-1),H6={style:{"text-align":"left"}},w6=t("code",null,"栈",-1),E6=t("code",null,"树",-1),q6=t("code",null,"深度优先搜索",-1),z6=t("code",null,"1+",-1),O6={style:{"text-align":"left"}},j6=t("td",{style:{"text-align":"center"}},"2813",-1),N6={style:{"text-align":"left"}},L6={href:"https://leetcode.com/problems/maximum-elegance-of-a-k-length-subsequence",target:"_blank",rel:"noopener noreferrer"},B6=t("td",{style:{"text-align":"center"}},null,-1),V6={style:{"text-align":"left"}},C6=t("code",null,"栈",-1),Q6=t("code",null,"贪心",-1),R6=t("code",null,"数组",-1),Z6=t("code",null,"3+",-1),G6={style:{"text-align":"left"}},K6=t("td",{style:{"text-align":"center"}},"2816",-1),S6={style:{"text-align":"left"}},T6={href:"https://leetcode.com/problems/double-a-number-represented-as-a-linked-list",target:"_blank",rel:"noopener noreferrer"},U6=t("td",{style:{"text-align":"center"}},null,-1),X6={style:{"text-align":"left"}},Y6=t("code",null,"栈",-1),A6=t("code",null,"链表",-1),P6=t("code",null,"数学",-1),D6={style:{"text-align":"left"}},F6=t("td",{style:{"text-align":"center"}},"2818",-1),J6={style:{"text-align":"left"}},W6={href:"https://leetcode.com/problems/apply-operations-to-maximize-score",target:"_blank",rel:"noopener noreferrer"},$6=t("td",{style:{"text-align":"center"}},null,-1),t8={style:{"text-align":"left"}},e8=t("code",null,"栈",-1),l8=t("code",null,"贪心",-1),o8=t("code",null,"数组",-1),n8=t("code",null,"3+",-1),s8={style:{"text-align":"left"}},d8=t("td",{style:{"text-align":"center"}},"2832",-1),_8={style:{"text-align":"left"}},c8={href:"https://leetcode.com/problems/maximal-range-that-each-element-is-maximum-in-it",target:"_blank",rel:"noopener noreferrer"},i8=t("td",{style:{"text-align":"center"}},null,-1),a8={style:{"text-align":"left"}},r8=t("code",null,"栈",-1),h8=t("code",null,"数组",-1),u8=t("code",null,"单调栈",-1),f8={style:{"text-align":"left"}},g8=t("td",{style:{"text-align":"center"}},"2863",-1),m8={style:{"text-align":"left"}},y8={href:"https://leetcode.com/problems/maximum-length-of-semi-decreasing-subarrays",target:"_blank",rel:"noopener noreferrer"},x8=t("td",{style:{"text-align":"center"}},null,-1),p8={style:{"text-align":"left"}},b8=t("code",null,"栈",-1),k8=t("code",null,"数组",-1),M8=t("code",null,"排序",-1),v8=t("code",null,"1+",-1),I8={style:{"text-align":"left"}},H8=t("td",{style:{"text-align":"center"}},"2865",-1),w8={style:{"text-align":"left"}},E8={href:"https://leetcode.com/problems/beautiful-towers-i",target:"_blank",rel:"noopener noreferrer"},q8=t("td",{style:{"text-align":"center"}},null,-1),z8={style:{"text-align":"left"}},O8=t("code",null,"栈",-1),j8=t("code",null,"数组",-1),N8=t("code",null,"单调栈",-1),L8={style:{"text-align":"left"}},B8=t("td",{style:{"text-align":"center"}},"2866",-1),V8={style:{"text-align":"left"}},C8={href:"https://leetcode.com/problems/beautiful-towers-ii",target:"_blank",rel:"noopener noreferrer"},Q8=t("td",{style:{"text-align":"center"}},null,-1),R8={style:{"text-align":"left"}},Z8=t("code",null,"栈",-1),G8=t("code",null,"数组",-1),K8=t("code",null,"单调栈",-1),S8={style:{"text-align":"left"}},T8=t("td",{style:{"text-align":"center"}},"2940",-1),U8={style:{"text-align":"left"}},X8={href:"https://leetcode.com/problems/find-building-where-alice-and-bob-can-meet",target:"_blank",rel:"noopener noreferrer"},Y8=t("td",{style:{"text-align":"center"}},null,-1),A8={style:{"text-align":"left"}},P8=t("code",null,"栈",-1),D8=t("code",null,"树状数组",-1),F8=t("code",null,"线段树",-1),J8=t("code",null,"4+",-1),W8={style:{"text-align":"left"}},$8=t("td",{style:{"text-align":"center"}},"2945",-1),t5={style:{"text-align":"left"}},e5={href:"https://leetcode.com/problems/find-maximum-non-decreasing-array-length",target:"_blank",rel:"noopener noreferrer"},l5=t("td",{style:{"text-align":"center"}},null,-1),o5={style:{"text-align":"left"}},n5=t("code",null,"栈",-1),s5=t("code",null,"队列",-1),d5=t("code",null,"数组",-1),_5=t("code",null,"4+",-1),c5={style:{"text-align":"left"}},i5=t("td",{style:{"text-align":"center"}},"3113",-1),a5={style:{"text-align":"left"}},r5={href:"https://leetcode.com/problems/find-the-number-of-subarrays-where-boundary-elements-are-maximum",target:"_blank",rel:"noopener noreferrer"},h5=t("td",{style:{"text-align":"center"}},null,-1),u5={style:{"text-align":"left"}},f5=t("code",null,"栈",-1),g5=t("code",null,"数组",-1),m5=t("code",null,"二分查找",-1),y5=t("code",null,"1+",-1),x5={style:{"text-align":"left"}},p5=t("td",{style:{"text-align":"center"}},"3170",-1),b5={style:{"text-align":"left"}},k5={href:"https://leetcode.com/problems/lexicographically-minimum-string-after-removing-stars",target:"_blank",rel:"noopener noreferrer"},M5=t("td",{style:{"text-align":"center"}},null,-1),v5={style:{"text-align":"left"}},I5=t("code",null,"栈",-1),H5=t("code",null,"贪心",-1),w5=t("code",null,"哈希表",-1),E5=t("code",null,"2+",-1),q5={style:{"text-align":"left"}},z5=t("td",{style:{"text-align":"center"}},"3174",-1),O5={style:{"text-align":"left"}},j5={href:"https://leetcode.com/problems/clear-digits",target:"_blank",rel:"noopener noreferrer"},N5=t("td",{style:{"text-align":"center"}},null,-1),L5={style:{"text-align":"left"}},B5=t("code",null,"栈",-1),V5=t("code",null,"字符串",-1),C5=t("code",null,"模拟",-1),Q5={style:{"text-align":"left"}},R5=t("td",{style:{"text-align":"center"}},"3205",-1),Z5={style:{"text-align":"left"}},G5={href:"https://leetcode.com/problems/maximum-array-hopping-score-i",target:"_blank",rel:"noopener noreferrer"},K5=t("td",{style:{"text-align":"center"}},null,-1),S5={style:{"text-align":"left"}},T5=t("code",null,"栈",-1),U5=t("code",null,"贪心",-1),X5=t("code",null,"数组",-1),Y5=t("code",null,"2+",-1),A5={style:{"text-align":"left"}},P5=t("td",{style:{"text-align":"center"}},"3221",-1),D5={style:{"text-align":"left"}},F5={href:"https://leetcode.com/problems/maximum-array-hopping-score-ii",target:"_blank",rel:"noopener noreferrer"},J5=t("td",{style:{"text-align":"center"}},null,-1),W5={style:{"text-align":"left"}},$5=t("code",null,"栈",-1),t7=t("code",null,"贪心",-1),e7=t("code",null,"数组",-1),l7=t("code",null,"1+",-1),o7={style:{"text-align":"left"}},n7=t("td",{style:{"text-align":"center"}},"3229",-1),s7={style:{"text-align":"left"}},d7={href:"https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target",target:"_blank",rel:"noopener noreferrer"},_7=t("td",{style:{"text-align":"center"}},null,-1),c7={style:{"text-align":"left"}},i7=t("code",null,"栈",-1),a7=t("code",null,"贪心",-1),r7=t("code",null,"数组",-1),h7=t("code",null,"2+",-1),u7={style:{"text-align":"left"}},f7=t("td",{style:{"text-align":"center"}},"剑指 Offer 06",-1),g7={style:{"text-align":"left"}},m7={href:"https://leetcode.cn/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},y7={style:{"text-align":"center"}},x7={style:{"text-align":"left"}},p7=t("code",null,"栈",-1),b7=t("code",null,"递归",-1),k7=t("code",null,"链表",-1),M7=t("code",null,"1+",-1),v7={style:{"text-align":"left"}},I7=t("td",{style:{"text-align":"center"}},"剑指 Offer 09",-1),H7={style:{"text-align":"left"}},w7={href:"https://leetcode.cn/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof",target:"_blank",rel:"noopener noreferrer"},E7={style:{"text-align":"center"}},q7={style:{"text-align":"left"}},z7=t("code",null,"栈",-1),O7=t("code",null,"设计",-1),j7=t("code",null,"队列",-1),N7={style:{"text-align":"left"}},L7=t("td",{style:{"text-align":"center"}},"剑指 Offer 30",-1),B7={style:{"text-align":"left"}},V7={href:"https://leetcode.cn/problems/bao-han-minhan-shu-de-zhan-lcof",target:"_blank",rel:"noopener noreferrer"},C7={style:{"text-align":"center"}},Q7={style:{"text-align":"left"}},R7=t("code",null,"栈",-1),Z7=t("code",null,"设计",-1),G7={style:{"text-align":"left"}},K7=t("td",{style:{"text-align":"center"}},"剑指 Offer 31",-1),S7={style:{"text-align":"left"}},T7={href:"https://leetcode.cn/problems/zhan-de-ya-ru-dan-chu-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},U7={style:{"text-align":"center"}},X7={style:{"text-align":"left"}},Y7=t("code",null,"栈",-1),A7=t("code",null,"数组",-1),P7=t("code",null,"模拟",-1),D7={style:{"text-align":"left"}},F7=t("td",{style:{"text-align":"center"}},"剑指 Offer 33",-1),J7={style:{"text-align":"left"}},W7={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof",target:"_blank",rel:"noopener noreferrer"},$7={style:{"text-align":"center"}},t9={style:{"text-align":"left"}},e9=t("code",null,"栈",-1),l9=t("code",null,"树",-1),o9=t("code",null,"二叉搜索树",-1),n9=t("code",null,"4+",-1),s9={style:{"text-align":"left"}},d9=t("td",{style:{"text-align":"center"}},"剑指 Offer 36",-1),_9={style:{"text-align":"left"}},c9={href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof",target:"_blank",rel:"noopener noreferrer"},i9={style:{"text-align":"center"}},a9={style:{"text-align":"left"}},r9=t("code",null,"栈",-1),h9=t("code",null,"树",-1),u9=t("code",null,"深度优先搜索",-1),f9=t("code",null,"4+",-1),g9={style:{"text-align":"left"}},m9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 25",-1),y9={style:{"text-align":"left"}},x9={href:"https://leetcode.cn/problems/lMSNwu",target:"_blank",rel:"noopener noreferrer"},p9=t("td",{style:{"text-align":"center"}},null,-1),b9={style:{"text-align":"left"}},k9=t("code",null,"栈",-1),M9=t("code",null,"链表",-1),v9=t("code",null,"数学",-1),I9={style:{"text-align":"left"}},H9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 26",-1),w9={style:{"text-align":"left"}},E9={href:"https://leetcode.cn/problems/LGjMqU",target:"_blank",rel:"noopener noreferrer"},q9=t("td",{style:{"text-align":"center"}},null,-1),z9={style:{"text-align":"left"}},O9=t("code",null,"栈",-1),j9=t("code",null,"递归",-1),N9=t("code",null,"链表",-1),L9=t("code",null,"1+",-1),B9={style:{"text-align":"left"}},V9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 27",-1),C9={style:{"text-align":"left"}},Q9={href:"https://leetcode.cn/problems/aMhZSa",target:"_blank",rel:"noopener noreferrer"},R9={style:{"text-align":"center"}},Z9={style:{"text-align":"left"}},G9=t("code",null,"栈",-1),K9=t("code",null,"递归",-1),S9=t("code",null,"链表",-1),T9=t("code",null,"1+",-1),U9={style:{"text-align":"left"}},X9=t("td",{style:{"text-align":"center"}},"剑指 Offer II 36",-1),Y9={style:{"text-align":"left"}},A9={href:"https://leetcode.cn/problems/8Zf90G",target:"_blank",rel:"noopener noreferrer"},P9=t("td",{style:{"text-align":"center"}},null,-1),D9={style:{"text-align":"left"}},F9=t("code",null,"栈",-1),J9=t("code",null,"数组",-1),W9=t("code",null,"数学",-1),$9={style:{"text-align":"left"}},tk=t("td",{style:{"text-align":"center"}},"剑指 Offer II 37",-1),ek={style:{"text-align":"left"}},lk={href:"https://leetcode.cn/problems/XagZNi",target:"_blank",rel:"noopener noreferrer"},ok=t("td",{style:{"text-align":"center"}},null,-1),nk={style:{"text-align":"left"}},sk=t("code",null,"栈",-1),dk=t("code",null,"数组",-1),_k=t("code",null,"模拟",-1),ck={style:{"text-align":"left"}},ik=t("td",{style:{"text-align":"center"}},"剑指 Offer II 38",-1),ak={style:{"text-align":"left"}},rk={href:"https://leetcode.cn/problems/iIQa4I",target:"_blank",rel:"noopener noreferrer"},hk=t("td",{style:{"text-align":"center"}},null,-1),uk={style:{"text-align":"left"}},fk=t("code",null,"栈",-1),gk=t("code",null,"数组",-1),mk=t("code",null,"单调栈",-1),yk={style:{"text-align":"left"}},xk=t("td",{style:{"text-align":"center"}},"剑指 Offer II 39",-1),pk={style:{"text-align":"left"}},bk={href:"https://leetcode.cn/problems/0ynMMM",target:"_blank",rel:"noopener noreferrer"},kk=t("td",{style:{"text-align":"center"}},null,-1),Mk={style:{"text-align":"left"}},vk=t("code",null,"栈",-1),Ik=t("code",null,"数组",-1),Hk=t("code",null,"单调栈",-1),wk={style:{"text-align":"left"}},Ek=t("td",{style:{"text-align":"center"}},"剑指 Offer II 40",-1),qk={style:{"text-align":"left"}},zk={href:"https://leetcode.cn/problems/PLYXKQ",target:"_blank",rel:"noopener noreferrer"},Ok=t("td",{style:{"text-align":"center"}},null,-1),jk={style:{"text-align":"left"}},Nk=t("code",null,"栈",-1),Lk=t("code",null,"数组",-1),Bk=t("code",null,"动态规划",-1),Vk=t("code",null,"2+",-1),Ck={style:{"text-align":"left"}},Qk=t("td",{style:{"text-align":"center"}},"剑指 Offer II 52",-1),Rk={style:{"text-align":"left"}},Zk={href:"https://leetcode.cn/problems/NYBBNL",target:"_blank",rel:"noopener noreferrer"},Gk=t("td",{style:{"text-align":"center"}},null,-1),Kk={style:{"text-align":"left"}},Sk=t("code",null,"栈",-1),Tk=t("code",null,"树",-1),Uk=t("code",null,"深度优先搜索",-1),Xk=t("code",null,"2+",-1),Yk={style:{"text-align":"left"}},Ak=t("td",{style:{"text-align":"center"}},"剑指 Offer II 55",-1),Pk={style:{"text-align":"left"}},Dk={href:"https://leetcode.cn/problems/kTOapQ",target:"_blank",rel:"noopener noreferrer"},Fk=t("td",{style:{"text-align":"center"}},null,-1),Jk={style:{"text-align":"left"}},Wk=t("code",null,"栈",-1),$k=t("code",null,"树",-1),tM=t("code",null,"设计",-1),eM=t("code",null,"3+",-1),lM={style:{"text-align":"left"}},oM=t("td",{style:{"text-align":"center"}},"面试题 02.06",-1),nM={style:{"text-align":"left"}},sM={href:"https://leetcode.cn/problems/palindrome-linked-list-lcci",target:"_blank",rel:"noopener noreferrer"},dM=t("td",{style:{"text-align":"center"}},null,-1),_M={style:{"text-align":"left"}},cM=t("code",null,"栈",-1),iM=t("code",null,"递归",-1),aM=t("code",null,"链表",-1),rM=t("code",null,"1+",-1),hM={style:{"text-align":"left"}},uM=t("td",{style:{"text-align":"center"}},"面试题 03.01",-1),fM={style:{"text-align":"left"}},gM={href:"https://leetcode.cn/problems/three-in-one-lcci",target:"_blank",rel:"noopener noreferrer"},mM=t("td",{style:{"text-align":"center"}},null,-1),yM={style:{"text-align":"left"}},xM=t("code",null,"栈",-1),pM=t("code",null,"设计",-1),bM=t("code",null,"数组",-1),kM={style:{"text-align":"left"}},MM=t("td",{style:{"text-align":"center"}},"面试题 03.02",-1),vM={style:{"text-align":"left"}},IM={href:"https://leetcode.cn/problems/min-stack-lcci",target:"_blank",rel:"noopener noreferrer"},HM=t("td",{style:{"text-align":"center"}},null,-1),wM={style:{"text-align":"left"}},EM=t("code",null,"栈",-1),qM=t("code",null,"设计",-1),zM={style:{"text-align":"left"}},OM=t("td",{style:{"text-align":"center"}},"面试题 03.03",-1),jM={style:{"text-align":"left"}},NM={href:"https://leetcode.cn/problems/stack-of-plates-lcci",target:"_blank",rel:"noopener noreferrer"},LM=t("td",{style:{"text-align":"center"}},null,-1),BM={style:{"text-align":"left"}},VM=t("code",null,"栈",-1),CM=t("code",null,"设计",-1),QM=t("code",null,"链表",-1),RM={style:{"text-align":"left"}},ZM=t("td",{style:{"text-align":"center"}},"面试题 03.04",-1),GM={style:{"text-align":"left"}},KM={href:"https://leetcode.cn/problems/implement-queue-using-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},SM=t("td",{style:{"text-align":"center"}},null,-1),TM={style:{"text-align":"left"}},UM=t("code",null,"栈",-1),XM=t("code",null,"设计",-1),YM=t("code",null,"队列",-1),AM={style:{"text-align":"left"}},PM=t("td",{style:{"text-align":"center"}},"面试题 03.05",-1),DM={style:{"text-align":"left"}},FM={href:"https://leetcode.cn/problems/sort-of-stacks-lcci",target:"_blank",rel:"noopener noreferrer"},JM=t("td",{style:{"text-align":"center"}},null,-1),WM={style:{"text-align":"left"}},$M=t("code",null,"栈",-1),tv=t("code",null,"设计",-1),ev=t("code",null,"单调栈",-1),lv={style:{"text-align":"left"}},ov=t("td",{style:{"text-align":"center"}},"面试题 16.16",-1),nv={style:{"text-align":"left"}},sv={href:"https://leetcode.cn/problems/sub-sort-lcci",target:"_blank",rel:"noopener noreferrer"},dv=t("td",{style:{"text-align":"center"}},null,-1),_v={style:{"text-align":"left"}},cv=t("code",null,"栈",-1),iv=t("code",null,"贪心",-1),av=t("code",null,"数组",-1),rv=t("code",null,"3+",-1),hv={style:{"text-align":"left"}},uv=t("td",{style:{"text-align":"center"}},"面试题 16.26",-1),fv={style:{"text-align":"left"}},gv={href:"https://leetcode.cn/problems/calculator-lcci",target:"_blank",rel:"noopener noreferrer"},mv=t("td",{style:{"text-align":"center"}},null,-1),yv={style:{"text-align":"left"}},xv=t("code",null,"栈",-1),pv=t("code",null,"数学",-1),bv=t("code",null,"字符串",-1),kv={style:{"text-align":"left"}},Mv=t("td",{style:{"text-align":"center"}},"面试题 17.12",-1),vv={style:{"text-align":"left"}},Iv={href:"https://leetcode.cn/problems/binode-lcci",target:"_blank",rel:"noopener noreferrer"},Hv=t("td",{style:{"text-align":"center"}},null,-1),wv={style:{"text-align":"left"}},Ev=t("code",null,"栈",-1),qv=t("code",null,"树",-1),zv=t("code",null,"深度优先搜索",-1),Ov=t("code",null,"3+",-1),jv={style:{"text-align":"left"}},Nv=t("td",{style:{"text-align":"center"}},"面试题 17.21",-1),Lv={style:{"text-align":"left"}},Bv={href:"https://leetcode.cn/problems/volume-of-histogram-lcci",target:"_blank",rel:"noopener noreferrer"},Vv=t("td",{style:{"text-align":"center"}},null,-1),Cv={style:{"text-align":"left"}},Qv=t("code",null,"栈",-1),Rv=t("code",null,"数组",-1),Zv=t("code",null,"双指针",-1),Gv=t("code",null,"2+",-1),Kv={style:{"text-align":"left"}};function Sv(Tv,Uv){const n=_("RouterLink"),s=_("ExternalLinkIcon"),d=_("font");return i(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:o(()=>[b]),_:1}),l(),k,l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[M]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[E]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:o(()=>[O]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:o(()=>[U]),_:1})]),X,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:o(()=>[P]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[zt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[Ot]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:o(()=>[Bt]),_:1})])]),Vt,r(" prettier-ignore "),t("table",null,[Ct,t("tbody",null,[t("tr",null,[Qt,t("td",Rt,[t("a",Zt,[l("有效的括号"),e(s)])]),t("td",Gt,[e(n,{to:"/leetcode/problem/0020.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Kt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[St]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Tt]),_:1})]),t("td",Ut,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xt,t("td",Yt,[t("a",At,[l("最长有效括号"),e(s)])]),t("td",Pt,[e(n,{to:"/leetcode/problem/0032.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Dt,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ft]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Jt]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Wt]),_:1})]),t("td",$t,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[te,t("td",ee,[t("a",le,[l("接雨水"),e(s)])]),t("td",oe,[e(n,{to:"/leetcode/problem/0042.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ne,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[se]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[de]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[_e]),_:1}),l(),ce]),t("td",ie,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ae,t("td",re,[t("a",he,[l("简化路径"),e(s)])]),t("td",ue,[e(n,{to:"/leetcode/problem/0071.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",fe,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ge]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[me]),_:1})]),t("td",ye,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xe,t("td",pe,[t("a",be,[l("柱状图中最大的矩形"),e(s)])]),t("td",ke,[e(n,{to:"/leetcode/problem/0084.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Me,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ve]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ie]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[He]),_:1})]),t("td",we,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ee,t("td",qe,[t("a",ze,[l("最大矩形"),e(s)])]),t("td",Oe,[e(n,{to:"/leetcode/problem/0085.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",je,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ne]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Le]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Be]),_:1}),l(),Ve]),t("td",Ce,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qe,t("td",Re,[t("a",Ze,[l("二叉树的中序遍历"),e(s)])]),t("td",Ge,[e(n,{to:"/leetcode/problem/0094.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ke,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Se]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Te]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ue]),_:1}),l(),Xe]),t("td",Ye,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ae,t("td",Pe,[t("a",De,[l("二叉树展开为链表"),e(s)])]),t("td",Fe,[e(n,{to:"/leetcode/problem/0114.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Je,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[We]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$e]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[tl]),_:1}),l(),el]),t("td",ll,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ol,t("td",nl,[t("a",sl,[l("重排链表"),e(s)])]),t("td",dl,[e(n,{to:"/leetcode/problem/0143.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",_l,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[cl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[il]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[al]),_:1}),l(),rl]),t("td",hl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ul,t("td",fl,[t("a",gl,[l("二叉树的前序遍历"),e(s)])]),t("td",ml,[e(n,{to:"/leetcode/problem/0144.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yl,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[xl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[pl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[bl]),_:1}),l(),kl]),t("td",Ml,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[vl,t("td",Il,[t("a",Hl,[l("二叉树的后序遍历"),e(s)])]),t("td",wl,[e(n,{to:"/leetcode/problem/0145.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",El,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ql]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[zl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ol]),_:1}),l(),jl]),t("td",Nl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ll,t("td",Bl,[t("a",Vl,[l("逆波兰表达式求值"),e(s)])]),t("td",Cl,[e(n,{to:"/leetcode/problem/0150.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ql,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Rl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Zl]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[Gl]),_:1})]),t("td",Kl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sl,t("td",Tl,[t("a",Ul,[l("最小栈"),e(s)])]),t("td",Xl,[e(n,{to:"/leetcode/problem/0155.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yl,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Al]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Pl]),_:1})]),t("td",Dl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Fl,t("td",Jl,[t("a",Wl,[l("二叉搜索树迭代器"),e(s)])]),t("td",$l,[e(n,{to:"/leetcode/problem/0173.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",to,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[eo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[lo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[oo]),_:1}),l(),no]),t("td",so,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_o,t("td",co,[t("a",io,[l("基本计算器"),e(s)])]),t("td",ao,[e(n,{to:"/leetcode/problem/0224.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ro,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ho]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[uo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[fo]),_:1}),l(),go]),t("td",mo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yo,t("td",xo,[t("a",po,[l("用队列实现栈"),e(s)])]),t("td",bo,[e(n,{to:"/leetcode/problem/0225.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ko,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Mo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[vo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Io]),_:1})]),t("td",Ho,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[wo,t("td",Eo,[t("a",qo,[l("基本计算器 II"),e(s)])]),t("td",zo,[e(n,{to:"/leetcode/problem/0227.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Oo,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[jo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[No]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Lo]),_:1})]),t("td",Bo,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Vo,t("td",Co,[t("a",Qo,[l("用栈实现队列"),e(s)])]),t("td",Ro,[e(n,{to:"/leetcode/problem/0232.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Zo,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Go]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Ko]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[So]),_:1})]),t("td",To,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Uo,t("td",Xo,[t("a",Yo,[l("回文链表"),e(s)])]),t("td",Ao,[e(n,{to:"/leetcode/problem/0234.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Po,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Do]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[Fo]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[Jo]),_:1}),l(),Wo]),t("td",$o,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[tn,t("td",en,[t("a",ln,[l("验证二叉搜索树的前序遍历序列"),e(s)])]),on,t("td",nn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[dn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[_n]),_:1}),l(),cn]),t("td",an,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rn,t("td",hn,[t("a",un,[l("最接近的二叉搜索树值 II"),e(s)])]),fn,t("td",gn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[yn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[xn]),_:1}),l(),pn]),t("td",bn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kn,t("td",Mn,[t("a",vn,[l("去除重复字母"),e(s)])]),t("td",In,[e(n,{to:"/leetcode/problem/0316.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Hn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[wn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[En]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[qn]),_:1}),l(),zn]),t("td",On,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[jn,t("td",Nn,[t("a",Ln,[l("拼接最大数"),e(s)])]),Bn,t("td",Vn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Cn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Rn]),_:1}),l(),Zn]),t("td",Gn,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Kn,t("td",Sn,[t("a",Tn,[l("验证二叉树的前序序列化"),e(s)])]),Un,t("td",Xn,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Yn]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[An]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Pn]),_:1}),l(),Dn]),t("td",Fn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jn,t("td",Wn,[t("a",$n,[l("扁平化嵌套列表迭代器"),e(s)])]),ts,t("td",es,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ls]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[os]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[ns]),_:1}),l(),ss]),t("td",ds,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[_s,t("td",cs,[t("a",is,[l("嵌套列表加权和 II"),e(s)])]),as,t("td",rs,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[hs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[us]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[fs]),_:1})]),t("td",gs,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ms,t("td",ys,[t("a",xs,[l("迷你语法分析器"),e(s)])]),ps,t("td",bs,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ks]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Ms]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[vs]),_:1})]),t("td",Is,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hs,t("td",ws,[t("a",Es,[l("文件的最长绝对路径"),e(s)])]),qs,t("td",zs,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Os]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[js]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Ns]),_:1})]),t("td",Ls,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bs,t("td",Vs,[t("a",Cs,[l("字符串解码"),e(s)])]),t("td",Qs,[e(n,{to:"/leetcode/problem/0394.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Rs,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Zs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[Gs]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Ks]),_:1})]),t("td",Ss,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ts,t("td",Us,[t("a",Xs,[l("移掉 K 位数字"),e(s)])]),Ys,t("td",As,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ps]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Ds]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Fs]),_:1}),l(),Js]),t("td",Ws,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$s,t("td",td,[t("a",ed,[l("将二叉搜索树转化为排序的双向链表"),e(s)])]),t("td",ld,[e(n,{to:"/leetcode/problem/0426.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",od,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[nd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[sd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[dd]),_:1}),l(),_d]),t("td",cd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[id,t("td",ad,[t("a",rd,[l("三元表达式解析器"),e(s)])]),hd,t("td",ud,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[fd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[gd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[md]),_:1})]),t("td",yd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xd,t("td",pd,[t("a",bd,[l("两数相加 II"),e(s)])]),t("td",kd,[e(n,{to:"/leetcode/problem/0445.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Md,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[vd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[Id]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[Hd]),_:1})]),t("td",wd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ed,t("td",qd,[t("a",zd,[l("132 模式"),e(s)])]),Od,t("td",jd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Nd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ld]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[Bd]),_:1}),l(),Vd]),t("td",Cd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qd,t("td",Rd,[t("a",Zd,[l("寻找排列"),e(s)])]),Gd,t("td",Kd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Sd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Td]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ud]),_:1}),l(),Xd]),t("td",Yd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ad,t("td",Pd,[t("a",Dd,[l("祖玛游戏"),e(s)])]),Fd,t("td",Jd,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Wd]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[$d]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[t_]),_:1}),l(),e_]),t("td",l_,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[o_,t("td",n_,[t("a",s_,[l("下一个更大元素 I"),e(s)])]),t("td",d_,[e(n,{to:"/leetcode/problem/0496.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",__,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[c_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[i_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[a_]),_:1}),l(),r_]),t("td",h_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[u_,t("td",f_,[t("a",g_,[l("下一个更大元素 II"),e(s)])]),t("td",m_,[e(n,{to:"/leetcode/problem/0503.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",y_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[x_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[p_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[b_]),_:1})]),t("td",k_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[M_,t("td",v_,[t("a",I_,[l("从字符串生成二叉树"),e(s)])]),H_,t("td",w_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[E_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[q_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[z_]),_:1}),l(),O_]),t("td",j_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[N_,t("td",L_,[t("a",B_,[l("最短无序连续子数组"),e(s)])]),V_,t("td",C_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Q_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[R_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Z_]),_:1}),l(),G_]),t("td",K_,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[S_,t("td",T_,[t("a",U_,[l("N 叉树的前序遍历"),e(s)])]),t("td",X_,[e(n,{to:"/leetcode/problem/0589.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Y_,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[A_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[P_]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[D_]),_:1})]),t("td",F_,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[J_,t("td",W_,[t("a",$_,[l("N 叉树的后序遍历"),e(s)])]),t("td",tc,[e(n,{to:"/leetcode/problem/0590.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ec,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[lc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[oc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[nc]),_:1})]),t("td",sc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[dc,t("td",_c,[t("a",cc,[l("标签验证器"),e(s)])]),ic,t("td",ac,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[rc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[hc]),_:1})]),t("td",uc,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[fc,t("td",gc,[t("a",mc,[l("函数的独占时间"),e(s)])]),yc,t("td",xc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[pc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[bc]),_:1})]),t("td",kc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mc,t("td",vc,[t("a",Ic,[l("最大二叉树"),e(s)])]),t("td",Hc,[e(n,{to:"/leetcode/problem/0654.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ec]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[qc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[zc]),_:1}),l(),Oc]),t("td",jc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Nc,t("td",Lc,[t("a",Bc,[l("有效的括号字符串"),e(s)])]),t("td",Vc,[e(n,{to:"/leetcode/problem/0678.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Cc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Qc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Rc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Zc]),_:1}),l(),Gc]),t("td",Kc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Sc,t("td",Tc,[t("a",Uc,[l("棒球比赛"),e(s)])]),t("td",Xc,[e(n,{to:"/leetcode/problem/0682.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Yc,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ac]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Pc]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[Dc]),_:1})]),t("td",Fc,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Jc,t("td",Wc,[t("a",$c,[l("最大栈"),e(s)])]),ti,t("td",ei,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[li]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[oi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[ni]),_:1}),l(),si]),t("td",di,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_i,t("td",ci,[t("a",ii,[l("原子的数量"),e(s)])]),ai,t("td",ri,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[hi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[ui]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[fi]),_:1}),l(),gi]),t("td",mi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[yi,t("td",xi,[t("a",pi,[l("小行星碰撞"),e(s)])]),bi,t("td",ki,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Mi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[vi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[Ii]),_:1})]),t("td",Hi,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[wi,t("td",Ei,[t("a",qi,[l("Lisp 语法解析"),e(s)])]),zi,t("td",Oi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ji]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[Ni]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Li]),_:1}),l(),Bi]),t("td",Vi,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ci,t("td",Qi,[t("a",Ri,[l("每日温度"),e(s)])]),t("td",Zi,[e(n,{to:"/leetcode/problem/0739.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gi,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ki]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Si]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[Ti]),_:1})]),t("td",Ui,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xi,t("td",Yi,[t("a",Ai,[l("最多能完成排序的块 II"),e(s)])]),Pi,t("td",Di,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Fi]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Ji]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Wi]),_:1}),l(),$i]),t("td",ta,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ea,t("td",la,[t("a",oa,[l("最多能完成排序的块"),e(s)])]),na,t("td",sa,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[da]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[_a]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[ca]),_:1}),l(),ia]),t("td",aa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ra,t("td",ha,[t("a",ua,[l("基本计算器 IV"),e(s)])]),fa,t("td",ga,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ma]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[ya]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[xa]),_:1}),l(),pa]),t("td",ba,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ka,t("td",Ma,[t("a",va,[l("基本计算器 III"),e(s)])]),t("td",Ia,[e(n,{to:"/leetcode/problem/0772.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Ha,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[wa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[Ea]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[qa]),_:1}),l(),za]),t("td",Oa,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ja,t("td",Na,[t("a",La,[l("比较含退格的字符串"),e(s)])]),t("td",Ba,[e(n,{to:"/leetcode/problem/0844.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Va,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ca]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[Qa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Ra]),_:1}),l(),Za]),t("td",Ga,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ka,t("td",Sa,[t("a",Ta,[l("车队"),e(s)])]),Ua,t("td",Xa,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ya]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Aa]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[Pa]),_:1}),l(),Da]),t("td",Fa,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ja,t("td",Wa,[t("a",$a,[l("括号的分数"),e(s)])]),t1,t("td",e1,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[l1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[o1]),_:1})]),t("td",n1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[s1,t("td",d1,[t("a",_1,[l("索引处的解码字符串"),e(s)])]),t("td",c1,[e(n,{to:"/leetcode/problem/0880.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",i1,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[a1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[r1]),_:1})]),t("td",h1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[u1,t("td",f1,[t("a",g1,[l("最大频率栈"),e(s)])]),m1,t("td",y1,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[x1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[p1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[b1]),_:1}),l(),k1]),t("td",M1,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[v1,t("td",I1,[t("a",H1,[l("递增顺序搜索树"),e(s)])]),w1,t("td",E1,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[q1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[z1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[O1]),_:1}),l(),j1]),t("td",N1,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[L1,t("td",B1,[t("a",V1,[l("股票价格跨度"),e(s)])]),C1,t("td",Q1,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[R1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Z1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:o(()=>[G1]),_:1}),l(),K1]),t("td",S1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T1,t("td",U1,[t("a",X1,[l("子数组的最小值之和"),e(s)])]),Y1,t("td",A1,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[P1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[D1]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[F1]),_:1}),l(),J1]),t("td",W1,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$1,t("td",tr,[t("a",er,[l("使括号有效的最少添加"),e(s)])]),t("td",lr,[e(n,{to:"/leetcode/problem/0921.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",or,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[nr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[sr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[dr]),_:1})]),t("td",_r,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[cr,t("td",ir,[t("a",ar,[l("戳印序列"),e(s)])]),rr,t("td",hr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ur]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[fr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[gr]),_:1}),l(),mr]),t("td",yr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[xr,t("td",pr,[t("a",br,[l("验证栈序列"),e(s)])]),t("td",kr,[e(n,{to:"/leetcode/problem/0946.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Mr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[vr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ir]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[Hr]),_:1})]),t("td",wr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Er,t("td",qr,[t("a",zr,[l("最大宽度坡"),e(s)])]),t("td",Or,[e(n,{to:"/leetcode/problem/0962.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",jr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Nr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Lr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[Br]),_:1})]),t("td",Vr,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cr,t("td",Qr,[t("a",Rr,[l("奇偶跳"),e(s)])]),Zr,t("td",Gr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Kr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Sr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Tr]),_:1}),l(),Ur]),t("td",Xr,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Yr,t("td",Ar,[t("a",Pr,[l("检查替换后的词是否有效"),e(s)])]),Dr,t("td",Fr,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Jr]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Wr]),_:1})]),t("td",$r,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[th,t("td",eh,[t("a",lh,[l("笨阶乘"),e(s)])]),oh,t("td",nh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[sh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[dh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[_h]),_:1})]),t("td",ch,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ih,t("td",ah,[t("a",rh,[l("前序遍历构造二叉搜索树"),e(s)])]),t("td",hh,[e(n,{to:"/leetcode/problem/1008.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",uh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[fh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[gh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[mh]),_:1}),l(),yh]),t("td",xh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ph,t("td",bh,[t("a",kh,[l("链表中的下一个更大节点"),e(s)])]),Mh,t("td",vh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ih]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Hh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[wh]),_:1}),l(),Eh]),t("td",qh,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[zh,t("td",Oh,[t("a",jh,[l("删除最外层的括号"),e(s)])]),t("td",Nh,[e(n,{to:"/leetcode/problem/1021.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Lh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Bh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Vh]),_:1})]),t("td",Ch,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Qh,t("td",Rh,[t("a",Zh,[l("删除字符串中的所有相邻重复项"),e(s)])]),t("td",Gh,[e(n,{to:"/leetcode/problem/1047.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Kh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Sh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Th]),_:1})]),t("td",Uh,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Xh,t("td",Yh,[t("a",Ah,[l("有效子数组的数目"),e(s)])]),Ph,t("td",Dh,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Fh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Jh]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[Wh]),_:1})]),t("td",$h,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tu,t("td",eu,[t("a",lu,[l("不同字符的最小子序列"),e(s)])]),t("td",ou,[e(n,{to:"/leetcode/problem/1081.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",nu,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[su]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[du]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[_u]),_:1}),l(),cu]),t("td",iu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[au,t("td",ru,[t("a",hu,[l("花括号展开 II"),e(s)])]),uu,t("td",fu,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[gu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[mu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[yu]),_:1}),l(),xu]),t("td",pu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[bu,t("td",ku,[t("a",Mu,[l("解析布尔表达式"),e(s)])]),vu,t("td",Iu,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Hu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[wu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Eu]),_:1})]),t("td",qu,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[zu,t("td",Ou,[t("a",ju,[l("有效括号的嵌套深度"),e(s)])]),Nu,t("td",Lu,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Bu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Vu]),_:1})]),t("td",Cu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Qu,t("td",Ru,[t("a",Zu,[l("表现良好的最长时间段"),e(s)])]),Gu,t("td",Ku,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Su]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Tu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Uu]),_:1}),l(),Xu]),t("td",Yu,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Au,t("td",Pu,[t("a",Du,[l("叶值的最小代价生成树"),e(s)])]),Fu,t("td",Ju,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Wu]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[$u]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[tf]),_:1}),l(),ef]),t("td",lf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[of,t("td",nf,[t("a",sf,[l("餐盘栈"),e(s)])]),df,t("td",_f,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[cf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[af]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[rf]),_:1}),l(),hf]),t("td",uf,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ff,t("td",gf,[t("a",mf,[l("反转每对括号间的子串"),e(s)])]),t("td",yf,[e(n,{to:"/leetcode/problem/1190.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",xf,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[pf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[bf]),_:1})]),t("td",kf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mf,t("td",vf,[t("a",If,[l("删除字符串中的所有相邻重复项 II"),e(s)])]),Hf,t("td",wf,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ef]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[qf]),_:1})]),t("td",zf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Of,t("td",jf,[t("a",Nf,[l("查找两棵二叉搜索树之和"),e(s)])]),Lf,t("td",Bf,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Vf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Cf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Qf]),_:1}),l(),Rf]),t("td",Zf,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gf,t("td",Kf,[t("a",Sf,[l("移除无效的括号"),e(s)])]),Tf,t("td",Uf,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Xf]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Yf]),_:1})]),t("td",Af,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Pf,t("td",Df,[t("a",Ff,[l("逆序打印不可变链表"),e(s)])]),Jf,t("td",Wf,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[$f]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[tg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[eg]),_:1}),l(),lg]),t("td",og,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ng,t("td",sg,[t("a",dg,[l("设计一个支持增量操作的栈"),e(s)])]),t("td",_g,[e(n,{to:"/leetcode/problem/1381.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",cg,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ig]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[ag]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[rg]),_:1})]),t("td",hg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ug,t("td",fg,[t("a",gg,[l("用栈操作构建数组"),e(s)])]),t("td",mg,[e(n,{to:"/leetcode/problem/1441.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",yg,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[xg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[pg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[bg]),_:1})]),t("td",kg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mg,t("td",vg,[t("a",Ig,[l("设计浏览器历史记录"),e(s)])]),t("td",Hg,[e(n,{to:"/leetcode/problem/1472.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",wg,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Eg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[qg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[zg]),_:1}),l(),Og]),t("td",jg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ng,t("td",Lg,[t("a",Bg,[l("商品折扣后的最终价格"),e(s)])]),t("td",Vg,[e(n,{to:"/leetcode/problem/1475.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Cg,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Qg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Rg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[Zg]),_:1})]),t("td",Gg,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Kg,t("td",Sg,[t("a",Tg,[l("统计全 1 子矩形"),e(s)])]),Ug,t("td",Xg,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Yg]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ag]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Pg]),_:1}),l(),Dg]),t("td",Fg,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Jg,t("td",Wg,[t("a",$g,[l("形成目标数组的子数组最少增加次数"),e(s)])]),tm,t("td",em,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[lm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[om]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[nm]),_:1}),l(),sm]),t("td",dm,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[_m,t("td",cm,[t("a",im,[l("平衡括号字符串的最少插入次数"),e(s)])]),am,t("td",rm,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[hm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[um]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[fm]),_:1})]),t("td",gm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[mm,t("td",ym,[t("a",xm,[l("整理字符串"),e(s)])]),pm,t("td",bm,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[km]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Mm]),_:1})]),t("td",vm,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Im,t("td",Hm,[t("a",wm,[l("删除最短的子数组使剩余数组有序"),e(s)])]),Em,t("td",qm,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[zm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Om]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[jm]),_:1}),l(),Nm]),t("td",Lm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Bm,t("td",Vm,[t("a",Cm,[l("二叉搜索树迭代器 II"),e(s)])]),Qm,t("td",Rm,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Zm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Gm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Km]),_:1}),l(),Sm]),t("td",Tm,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Um,t("td",Xm,[t("a",Ym,[l("根据中缀表达式构造二叉表达式树"),e(s)])]),Am,t("td",Pm,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Dm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Fm]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Jm]),_:1}),l(),Wm]),t("td",$m,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[ty,t("td",ey,[t("a",ly,[l("文件夹操作日志搜集器"),e(s)])]),oy,t("td",ny,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[sy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[dy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[_y]),_:1})]),t("td",cy,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[iy,t("td",ay,[t("a",ry,[l("括号的最大嵌套深度"),e(s)])]),hy,t("td",uy,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[fy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[gy]),_:1})]),t("td",my,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[yy,t("td",xy,[t("a",py,[l("设计带解析函数的表达式树"),e(s)])]),by,t("td",ky,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[My]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[vy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Iy]),_:1}),l(),Hy]),t("td",wy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ey,t("td",qy,[t("a",zy,[l("使字符串平衡的最少删除次数"),e(s)])]),Oy,t("td",jy,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ny]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Ly]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[By]),_:1})]),t("td",Vy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Cy,t("td",Qy,[t("a",Ry,[l("找出最具竞争力的子序列"),e(s)])]),Zy,t("td",Gy,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ky]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Sy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ty]),_:1}),l(),Uy]),t("td",Xy,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yy,t("td",Ay,[t("a",Py,[l("无法吃午餐的学生数量"),e(s)])]),Dy,t("td",Fy,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Jy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[Wy]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[$y]),_:1}),l(),tx]),t("td",ex,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[lx,t("td",ox,[t("a",nx,[l("删除子字符串的最大得分"),e(s)])]),sx,t("td",dx,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[_x]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[cx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[ix]),_:1})]),t("td",ax,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[rx,t("td",hx,[t("a",ux,[l("设计最近使用（MRU）队列"),e(s)])]),fx,t("td",gx,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[mx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[yx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[xx]),_:1}),l(),px]),t("td",bx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[kx,t("td",Mx,[t("a",vx,[l("能看到海景的建筑物"),e(s)])]),Ix,t("td",Hx,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[wx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ex]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[qx]),_:1})]),t("td",zx,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ox,t("td",jx,[t("a",Nx,[l("车队 II"),e(s)])]),Lx,t("td",Bx,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Vx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Cx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[Qx]),_:1}),l(),Rx]),t("td",Zx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Gx,t("td",Kx,[t("a",Sx,[l("好子数组的最大分数"),e(s)])]),Tx,t("td",Ux,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Xx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Yx]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[Ax]),_:1}),l(),Px]),t("td",Dx,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Fx,t("td",Jx,[t("a",Wx,[l("子数组最小乘积的最大值"),e(s)])]),$x,t("td",t0,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[e0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[l0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[o0]),_:1}),l(),n0]),t("td",s0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d0,t("td",_0,[t("a",c0,[l("反转表达式值的最少操作次数"),e(s)])]),i0,t("td",a0,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[r0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[h0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[u0]),_:1}),l(),f0]),t("td",g0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[m0,t("td",y0,[t("a",x0,[l("删除一个字符串中所有出现的给定子字符串"),e(s)])]),p0,t("td",b0,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[M0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[v0]),_:1})]),t("td",I0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H0,t("td",w0,[t("a",E0,[l("队列中可以看到的人数"),e(s)])]),q0,t("td",z0,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[O0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[j0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[N0]),_:1})]),t("td",L0,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[B0,t("td",V0,[t("a",C0,[l("所有子数组最小值中的最大值"),e(s)])]),Q0,t("td",R0,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Z0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[G0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[K0]),_:1})]),t("td",S0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T0,t("td",U0,[t("a",X0,[l("使字符串平衡的最小交换次数"),e(s)])]),t("td",Y0,[e(n,{to:"/leetcode/problem/1963.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",A0,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[P0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[D0]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[F0]),_:1}),l(),J0]),t("td",W0,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[$0,t("td",tp,[t("a",ep,[l("游戏中弱角色的数量"),e(s)])]),lp,t("td",op,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[np]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[sp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[dp]),_:1}),l(),_p]),t("td",cp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ip,t("td",ap,[t("a",rp,[l("反转单词前缀"),e(s)])]),hp,t("td",up,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[fp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[gp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[mp]),_:1})]),t("td",yp,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[xp,t("td",pp,[t("a",bp,[l("解出数学表达式的学生分数"),e(s)])]),kp,t("td",Mp,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[vp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:o(()=>[Ip]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Hp]),_:1}),l(),wp]),t("td",Ep,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[qp,t("td",zp,[t("a",Op,[l("含特定字母的最小子序列"),e(s)])]),jp,t("td",Np,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Lp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Bp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Vp]),_:1}),l(),Cp]),t("td",Qp,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Rp,t("td",Zp,[t("a",Gp,[l("子数组范围和"),e(s)])]),Kp,t("td",Sp,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Tp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Up]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[Xp]),_:1})]),t("td",Yp,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ap,t("td",Pp,[t("a",Dp,[l("判断一个括号字符串是否有效"),e(s)])]),Fp,t("td",Jp,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Wp]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[$p]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[t3]),_:1})]),t("td",e3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[l3,t("td",o3,[t("a",n3,[l("链表最大孪生和"),e(s)])]),s3,t("td",d3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[_3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[c3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[i3]),_:1})]),t("td",a3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r3,t("td",h3,[t("a",u3,[l("替换数组中的非互质数"),e(s)])]),f3,t("td",g3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[m3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[x3]),_:1}),l(),p3]),t("td",b3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[k3,t("td",M3,[t("a",v3,[l("统计道路上的碰撞次数"),e(s)])]),I3,t("td",H3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[w3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[E3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[q3]),_:1})]),t("td",z3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[O3,t("td",j3,[t("a",N3,[l("美化数组的最少删除数"),e(s)])]),L3,t("td",B3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[V3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[C3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Q3]),_:1})]),t("td",R3,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Z3,t("td",G3,[t("a",K3,[l("设计视频共享平台"),e(s)])]),S3,t("td",T3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[U3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[X3]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[Y3]),_:1}),l(),A3]),t("td",P3,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[D3,t("td",F3,[t("a",J3,[l("巫师的总力量和"),e(s)])]),W3,t("td",$3,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[tb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[eb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:o(()=>[lb]),_:1}),l(),ob]),t("td",nb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[sb,t("td",db,[t("a",_b,[l("在一个网格中可以看到的人数"),e(s)])]),cb,t("td",ib,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[ab]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[rb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:o(()=>[hb]),_:1}),l(),ub]),t("td",fb,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[gb,t("td",mb,[t("a",yb,[l("使数组按非递减顺序排列"),e(s)])]),xb,t("td",pb,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[bb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[kb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[Mb]),_:1}),l(),vb]),t("td",Ib,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Hb,t("td",wb,[t("a",Eb,[l("设计一个文本编辑器"),e(s)])]),qb,t("td",zb,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ob]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[jb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[Nb]),_:1}),l(),Lb]),t("td",Bb,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Vb,t("td",Cb,[t("a",Qb,[l("跳跃游戏 VIII"),e(s)])]),Rb,t("td",Zb,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Gb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:o(()=>[Kb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Sb]),_:1}),l(),Tb]),t("td",Ub,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Xb,t("td",Yb,[t("a",Ab,[l("元素值大于变化阈值的子数组"),e(s)])]),Pb,t("td",Db,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Fb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[Jb]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Wb]),_:1}),l(),$b]),t("td",t2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[e2,t("td",l2,[t("a",o2,[l("寻找可见山的数量"),e(s)])]),n2,t("td",s2,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[d2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[_2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[c2]),_:1}),l(),i2]),t("td",a2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[r2,t("td",h2,[t("a",u2,[l("你能拿走的最大图书数量"),e(s)])]),f2,t("td",g2,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[m2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[x2]),_:1}),l(),p2]),t("td",b2,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[k2,t("td",M2,[t("a",v2,[l("根据模式串构造最小数字"),e(s)])]),I2,t("td",H2,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[w2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[E2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[q2]),_:1}),l(),z2]),t("td",O2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j2,t("td",N2,[t("a",L2,[l("从字符串中移除星号"),e(s)])]),B2,t("td",V2,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[C2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[Q2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[R2]),_:1})]),t("td",Z2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[G2,t("td",K2,[t("a",S2,[l("使用机器人打印字典序最小的字符串"),e(s)])]),T2,t("td",U2,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[X2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Y2]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[A2]),_:1}),l(),P2]),t("td",D2,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F2,t("td",J2,[t("a",W2,[l("下一个更大元素 IV"),e(s)])]),$2,t("td",t4,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[e4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[l4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[o4]),_:1}),l(),n4]),t("td",s4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d4,t("td",_4,[t("a",c4,[l("从链表中移除节点"),e(s)])]),i4,t("td",a4,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[r4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[h4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[u4]),_:1}),l(),f4]),t("td",g4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m4,t("td",y4,[t("a",x4,[l("完成所有任务的最少时间"),e(s)])]),p4,t("td",b4,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[M4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[v4]),_:1}),l(),I4]),t("td",H4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[w4,t("td",E4,[t("a",q4,[l("网格图中最少访问的格子数"),e(s)])]),z4,t("td",O4,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[j4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:o(()=>[N4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:o(()=>[L4]),_:1}),l(),B4]),t("td",V4,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[C4,t("td",Q4,[t("a",R4,[l("构造有效字符串的最少插入数"),e(s)])]),Z4,t("td",G4,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[K4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[S4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[T4]),_:1}),l(),U4]),t("td",X4,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Y4,t("td",A4,[t("a",P4,[l("删除子串后的字符串最小长度"),e(s)])]),t("td",D4,[e(n,{to:"/leetcode/problem/2696.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",F4,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[J4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[W4]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[$4]),_:1})]),t("td",t6,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[e6,t("td",l6,[t("a",o6,[l("最大和查询"),e(s)])]),n6,t("td",s6,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[d6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[_6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[c6]),_:1}),l(),i6]),t("td",a6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[r6,t("td",h6,[t("a",u6,[l("机器人碰撞"),e(s)])]),f6,t("td",g6,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[m6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[y6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[x6]),_:1}),l(),p6]),t("td",b6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[k6,t("td",M6,[t("a",v6,[l("数组是否表示某二叉树的前序遍历"),e(s)])]),I6,t("td",H6,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[w6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[E6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[q6]),_:1}),l(),z6]),t("td",O6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[j6,t("td",N6,[t("a",L6,[l("子序列最大优雅度"),e(s)])]),B6,t("td",V6,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[C6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[Q6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[R6]),_:1}),l(),Z6]),t("td",G6,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[K6,t("td",S6,[t("a",T6,[l("翻倍以链表形式表示的数字"),e(s)])]),U6,t("td",X6,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Y6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[A6]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[P6]),_:1})]),t("td",D6,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F6,t("td",J6,[t("a",W6,[l("操作使得分最大"),e(s)])]),$6,t("td",t8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[e8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[l8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[o8]),_:1}),l(),n8]),t("td",s8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[d8,t("td",_8,[t("a",c8,[l("每个元素为最大值的最大范围"),e(s)])]),i8,t("td",a8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[r8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[h8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[u8]),_:1})]),t("td",f8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[g8,t("td",m8,[t("a",y8,[l("最长半递减子数组的长度"),e(s)])]),x8,t("td",p8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[b8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[k8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:o(()=>[M8]),_:1}),l(),v8]),t("td",I8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H8,t("td",w8,[t("a",E8,[l("美丽塔 I"),e(s)])]),q8,t("td",z8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[O8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[j8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[N8]),_:1})]),t("td",L8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[B8,t("td",V8,[t("a",C8,[l("美丽塔 II"),e(s)])]),Q8,t("td",R8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Z8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[G8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[K8]),_:1})]),t("td",S8,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[T8,t("td",U8,[t("a",X8,[l("找到 Alice 和 Bob 可以相遇的建筑"),e(s)])]),Y8,t("td",A8,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[P8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:o(()=>[D8]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:o(()=>[F8]),_:1}),l(),J8]),t("td",W8,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[$8,t("td",t5,[t("a",e5,[l("找到最大非递减数组的长度"),e(s)])]),l5,t("td",o5,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[n5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[s5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[d5]),_:1}),l(),_5]),t("td",c5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[i5,t("td",a5,[t("a",r5,[l("边界元素是最大值的子数组数目"),e(s)])]),h5,t("td",u5,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[f5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[g5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:o(()=>[m5]),_:1}),l(),y5]),t("td",x5,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[p5,t("td",b5,[t("a",k5,[l("删除星号以后字典序最小的字符串"),e(s)])]),M5,t("td",v5,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[I5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[H5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:o(()=>[w5]),_:1}),l(),E5]),t("td",q5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[z5,t("td",O5,[t("a",j5,[l("清除数字"),e(s)])]),N5,t("td",L5,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[B5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[V5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[C5]),_:1})]),t("td",Q5,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[R5,t("td",Z5,[t("a",G5,[l("最大数组跳跃得分 I"),e(s)])]),K5,t("td",S5,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[T5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[U5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[X5]),_:1}),l(),Y5]),t("td",A5,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[P5,t("td",D5,[t("a",F5,[l("最大数组跳跃得分 II"),e(s)])]),J5,t("td",W5,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[$5]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[t7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[e7]),_:1}),l(),l7]),t("td",o7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[n7,t("td",s7,[t("a",d7,[l("使数组等于目标数组所需的最少操作次数"),e(s)])]),_7,t("td",c7,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[i7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[a7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[r7]),_:1}),l(),h7]),t("td",u7,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[f7,t("td",g7,[t("a",m7,[l("从尾到头打印链表"),e(s)])]),t("td",y7,[e(n,{to:"/leetcode/problem/jz_offer_06_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",x7,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[p7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[b7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[k7]),_:1}),l(),M7]),t("td",v7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[I7,t("td",H7,[t("a",w7,[l("用两个栈实现队列"),e(s)])]),t("td",E7,[e(n,{to:"/leetcode/problem/jz_offer_09_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",q7,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[z7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[O7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[j7]),_:1})]),t("td",N7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[L7,t("td",B7,[t("a",V7,[l("包含min函数的栈"),e(s)])]),t("td",C7,[e(n,{to:"/leetcode/problem/jz_offer_30_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Q7,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[R7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[Z7]),_:1})]),t("td",G7,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[K7,t("td",S7,[t("a",T7,[l("栈的压入、弹出序列"),e(s)])]),t("td",U7,[e(n,{to:"/leetcode/problem/jz_offer_31_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",X7,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Y7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[A7]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[P7]),_:1})]),t("td",D7,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[F7,t("td",J7,[t("a",W7,[l("二叉搜索树的后序遍历序列"),e(s)])]),t("td",$7,[e(n,{to:"/leetcode/problem/jz_offer_33_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",t9,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[e9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[l9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:o(()=>[o9]),_:1}),l(),n9]),t("td",s9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[d9,t("td",_9,[t("a",c9,[l("二叉搜索树与双向链表"),e(s)])]),t("td",i9,[e(n,{to:"/leetcode/problem/jz_offer_36_1.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",a9,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[r9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[h9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[u9]),_:1}),l(),f9]),t("td",g9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[m9,t("td",y9,[t("a",x9,[l("链表中的两数相加"),e(s)])]),p9,t("td",b9,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[k9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[M9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[v9]),_:1})]),t("td",I9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[H9,t("td",w9,[t("a",E9,[l("重排链表"),e(s)])]),q9,t("td",z9,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[O9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[j9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[N9]),_:1}),l(),L9]),t("td",B9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[V9,t("td",C9,[t("a",Q9,[l("回文链表"),e(s)])]),t("td",R9,[e(n,{to:"/leetcode/problem/jz_offer_II_027.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Z9,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[G9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[K9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[S9]),_:1}),l(),T9]),t("td",U9,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[X9,t("td",Y9,[t("a",A9,[l("后缀表达式"),e(s)])]),P9,t("td",D9,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[F9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[J9]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[W9]),_:1})]),t("td",$9,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[tk,t("td",ek,[t("a",lk,[l("小行星碰撞"),e(s)])]),ok,t("td",nk,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[sk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[dk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:o(()=>[_k]),_:1})]),t("td",ck,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ik,t("td",ak,[t("a",rk,[l("每日温度"),e(s)])]),hk,t("td",uk,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[fk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[gk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[mk]),_:1})]),t("td",yk,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[xk,t("td",pk,[t("a",bk,[l("直方图最大矩形面积"),e(s)])]),kk,t("td",Mk,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[vk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Ik]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[Hk]),_:1})]),t("td",wk,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ek,t("td",qk,[t("a",zk,[l("矩阵中最大的矩形"),e(s)])]),Ok,t("td",jk,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Nk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Lk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:o(()=>[Bk]),_:1}),l(),Vk]),t("td",Ck,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Qk,t("td",Rk,[t("a",Zk,[l("展平二叉搜索树"),e(s)])]),Gk,t("td",Kk,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Sk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[Tk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[Uk]),_:1}),l(),Xk]),t("td",Yk,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ak,t("td",Pk,[t("a",Dk,[l("二叉搜索树迭代器"),e(s)])]),Fk,t("td",Jk,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Wk]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[$k]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[tM]),_:1}),l(),eM]),t("td",lM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[oM,t("td",nM,[t("a",sM,[l("回文链表"),e(s)])]),dM,t("td",_M,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[cM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:o(()=>[iM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[aM]),_:1}),l(),rM]),t("td",hM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[uM,t("td",fM,[t("a",gM,[l("三合一"),e(s)])]),mM,t("td",yM,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[xM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[pM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[bM]),_:1})]),t("td",kM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[MM,t("td",vM,[t("a",IM,[l("栈的最小值"),e(s)])]),HM,t("td",wM,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[EM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[qM]),_:1})]),t("td",zM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[OM,t("td",jM,[t("a",NM,[l("堆盘子"),e(s)])]),LM,t("td",BM,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[VM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[CM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:o(()=>[QM]),_:1})]),t("td",RM,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ZM,t("td",GM,[t("a",KM,[l("化栈为队"),e(s)])]),SM,t("td",TM,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[UM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[XM]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:o(()=>[YM]),_:1})]),t("td",AM,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[PM,t("td",DM,[t("a",FM,[l("栈排序"),e(s)])]),JM,t("td",WM,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[$M]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:o(()=>[tv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:o(()=>[ev]),_:1})]),t("td",lv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ov,t("td",nv,[t("a",sv,[l("部分排序"),e(s)])]),dv,t("td",_v,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[cv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:o(()=>[iv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[av]),_:1}),l(),rv]),t("td",hv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[uv,t("td",fv,[t("a",gv,[l("计算器"),e(s)])]),mv,t("td",yv,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[xv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:o(()=>[pv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:o(()=>[bv]),_:1})]),t("td",kv,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Mv,t("td",vv,[t("a",Iv,[l("BiNode"),e(s)])]),Hv,t("td",wv,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Ev]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:o(()=>[qv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:o(()=>[zv]),_:1}),l(),Ov]),t("td",jv,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Nv,t("td",Lv,[t("a",Bv,[l("直方图的水量"),e(s)])]),Vv,t("td",Cv,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:o(()=>[Qv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:o(()=>[Rv]),_:1}),l(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:o(()=>[Zv]),_:1}),l(),Gv]),t("td",Kv,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])])])])])}const Yv=c(h,[["render",Sv],["__file","stack.html.vue"]]);export{Yv as default};
