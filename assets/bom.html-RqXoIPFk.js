import{_ as n,o as a,c as s,e}from"./app-b4s7f53x.js";const o={},t=e(`<h1 id="说说你对-bom-的理解" tabindex="-1"><a class="header-anchor" href="#说说你对-bom-的理解" aria-hidden="true">#</a> 说说你对 BOM 的理解</h1><h2 id="一、bom-的定义" tabindex="-1"><a class="header-anchor" href="#一、bom-的定义" aria-hidden="true">#</a> 一、BOM 的定义</h2><p><code>BOM</code>（Browser Object Model，浏览器对象模型）提供了接口，使 JavaScript 能与浏览器对话。它主要用来操作浏览器窗口、地址栏、历史记录等，提供了一些方法和属性与浏览器的整体环境进行交互。</p><h2 id="二、bom-核心对象" tabindex="-1"><a class="header-anchor" href="#二、bom-核心对象" aria-hidden="true">#</a> 二、BOM 核心对象</h2><h3 id="_1-window-对象" tabindex="-1"><a class="header-anchor" href="#_1-window-对象" aria-hidden="true">#</a> 1. <code>window</code> 对象</h3><p><code>window</code> 是 BOM 的核心对象，代表浏览器窗口，并且是全局对象（即全局作用域下定义的变量和函数会成为它的属性或方法）。</p><p><strong>常见的 <code>window</code> 方法：</strong></p><ul><li><strong>控制窗口大小和位置：</strong><ul><li><code>moveBy(x, y)</code> 和 <code>moveTo(x, y)</code>：移动窗口位置。</li><li><code>resizeBy(w, h)</code> 和 <code>resizeTo(w, h)</code>：调整窗口大小。</li></ul></li><li><strong>滚动操作：</strong><ul><li><code>scrollTo(x, y)</code> 和 <code>scrollBy(x, y)</code>：滚动窗口。</li></ul></li><li><strong>打开和关闭窗口：</strong><ul><li><code>window.open(url, name, specs)</code>：打开新窗口。</li><li><code>window.close()</code>：关闭通过 <code>open</code> 打开的窗口。</li></ul></li><li><strong>全局对象示例：</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&#39;BOM&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// BOM</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_2-location-对象" tabindex="-1"><a class="header-anchor" href="#_2-location-对象" aria-hidden="true">#</a> 2. <code>location</code> 对象</h3><p>表示当前页面的地址（URL），可用于访问和修改 URL 信息。</p><p><strong>常见属性：</strong></p><ul><li><code>hash</code>：<code>#</code> 后的内容。</li><li><code>host</code>：主机名 + 端口号。</li><li><code>pathname</code>：路径部分。</li><li><code>protocol</code>：协议部分。</li><li><code>search</code>：<code>?</code> 后的查询参数。</li><li><code>href</code>：完整的 URL。</li></ul><p><strong>常见方法：</strong></p><ul><li><code>location.assign(url)</code>：跳转到指定 URL。</li><li><code>location.reload()</code>：刷新当前页面，<code>true</code> 强制从服务器获取。</li><li><code>location.replace(url)</code>：跳转到新页面，但不会保存到历史记录。</li></ul><h3 id="_3-navigator-对象" tabindex="-1"><a class="header-anchor" href="#_3-navigator-对象" aria-hidden="true">#</a> 3. <code>navigator</code> 对象</h3><p>主要提供关于浏览器的信息，常用于浏览器检测。</p><p><strong>常见属性：</strong></p><ul><li><code>userAgent</code>：客户端的用户代理字符串。</li><li><code>platform</code>：浏览器运行的系统平台。</li><li><code>language</code>：浏览器的语言。</li></ul><h3 id="_4-screen-对象" tabindex="-1"><a class="header-anchor" href="#_4-screen-对象" aria-hidden="true">#</a> 4. <code>screen</code> 对象</h3><p>提供有关用户屏幕的信息，通常用于调整布局。</p><p><strong>常见属性：</strong></p><ul><li><code>width</code> 和 <code>height</code>：屏幕分辨率的宽和高。</li><li><code>availWidth</code> 和 <code>availHeight</code>：可用的屏幕宽高（扣除任务栏等）。</li><li><code>colorDepth</code>：屏幕颜色的位数。</li></ul><h3 id="_5-history-对象" tabindex="-1"><a class="header-anchor" href="#_5-history-对象" aria-hidden="true">#</a> 5. <code>history</code> 对象</h3><p>用于操作浏览器的历史记录。</p><p><strong>常见方法：</strong></p><ul><li><code>history.back()</code>：返回上一页。</li><li><code>history.forward()</code>：前往下一页。</li><li><code>history.go(n)</code>：跳转到历史记录中相对位置为 <code>n</code> 的页面（正数向前，负数向后）。</li><li><code>history.length</code>：历史记录的数量。</li></ul><h2 id="三、bom-和-dom-的区别" tabindex="-1"><a class="header-anchor" href="#三、bom-和-dom-的区别" aria-hidden="true">#</a> 三、BOM 和 DOM 的区别</h2><table><thead><tr><th><strong>区别</strong></th><th><strong>BOM</strong></th><th><strong>DOM</strong></th></tr></thead><tbody><tr><td><strong>定义</strong></td><td>浏览器对象模型，与浏览器交互的接口。</td><td>文档对象模型，与网页内容交互的接口。</td></tr><tr><td><strong>主要对象</strong></td><td><code>window</code>、<code>location</code>、<code>navigator</code> 等。</td><td><code>document</code> 和 HTML 元素节点。</td></tr><tr><td><strong>作用范围</strong></td><td>操作整个浏览器环境。</td><td>操作网页内容。</td></tr></tbody></table><h2 id="四、使用-bom-的典型场景" tabindex="-1"><a class="header-anchor" href="#四、使用-bom-的典型场景" aria-hidden="true">#</a> 四、使用 BOM 的典型场景</h2><ol><li><strong>页面跳转：</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><strong>检测浏览器信息：</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;Chrome&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;This is Chrome browser.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>窗口操作：</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> newWin <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;newWindow&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newWin<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 关闭新窗口</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>滚动页面：</strong><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">scrollBy</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 向下滚动 100 像素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol>`,30),c=[t];function i(d,l){return a(),s("div",null,c)}const p=n(o,[["render",i],["__file","bom.html.vue"]]);export{p as default};
