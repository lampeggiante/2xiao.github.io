import{_ as c,r as _,o as i,c as a,a as t,d as e,w as l,b as o,f as r}from"./app-mvY9N9Pc.js";const h={},u=t("h1",{id:"分治",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#分治","aria-hidden":"true"},"#"),o(" 分治")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),b=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),k=t("code",null,"栈",-1),q=t("code",null,"单调栈",-1),v=t("code",null,"队列",-1),M=t("code",null,"单调队列",-1),j=t("code",null,"堆（优先队列）",-1),z=t("code",null,"哈希表",-1),H=t("code",null,"字符串",-1),w=t("code",null,"字符串匹配",-1),I=t("code",null,"树",-1),E=t("code",null,"二叉树",-1),K=t("code",null,"二叉搜索树",-1),O=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),L=t("code",null,"拓扑排序",-1),N=t("code",null,"最短路",-1),V=t("code",null,"强连通分量",-1),R=t("code",null,"欧拉回路",-1),T=t("code",null,"双连通分量",-1),W=t("code",null,"并查集",-1),A=t("code",null,"字典树",-1),S=t("code",null,"线段树",-1),X=t("code",null,"树状数组",-1),D=t("code",null,"后缀数组",-1),F=t("p",null,[t("strong",null,"算法")],-1),G=t("code",null,"枚举",-1),J=t("code",null,"递归",-1),P=t("span",{class:"blue"},"分治",-1),Q=t("code",null,"回溯",-1),U=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),dt=t("code",null,"记忆化搜索",-1),st=t("code",null,"深度优先搜索",-1),_t=t("code",null,"广度优先搜索",-1),ct=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),bt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),kt=t("code",null,"博弈",-1),qt=t("code",null,"模拟",-1),vt=t("code",null,"组合数学",-1),Mt=t("code",null,"随机化",-1),jt=t("code",null,"概率与统计",-1),zt=t("code",null,"水塘抽样",-1),Ht=t("code",null,"拒绝采样",-1),wt=t("code",null,"数据库",-1),It=t("code",null,"设计",-1),Et=t("code",null,"数据流",-1),Kt=t("code",null,"脑筋急转弯",-1),Ot=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),Lt=t("hr",null,null,-1),Nt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Vt=t("td",{style:{"text-align":"center"}},"4",-1),Rt={style:{"text-align":"left"}},Tt={href:"https://leetcode.com/problems/median-of-two-sorted-arrays",target:"_blank",rel:"noopener noreferrer"},Wt={style:{"text-align":"center"}},At={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0004",target:"_blank",rel:"noopener noreferrer"},St={style:{"text-align":"left"}},Xt=t("code",null,"数组",-1),Dt=t("code",null,"二分查找",-1),Ft=t("code",null,"分治",-1),Gt={style:{"text-align":"left"}},Jt=t("td",{style:{"text-align":"center"}},"23",-1),Pt={style:{"text-align":"left"}},Qt={href:"https://leetcode.com/problems/merge-k-sorted-lists",target:"_blank",rel:"noopener noreferrer"},Ut={style:{"text-align":"center"}},Yt={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0023",target:"_blank",rel:"noopener noreferrer"},Zt={style:{"text-align":"left"}},$t=t("code",null,"链表",-1),te=t("code",null,"分治",-1),ee=t("code",null,"堆（优先队列）",-1),oe=t("code",null,"1+",-1),le={style:{"text-align":"left"}},ne=t("td",{style:{"text-align":"center"}},"53",-1),de={style:{"text-align":"left"}},se={href:"https://leetcode.com/problems/maximum-subarray",target:"_blank",rel:"noopener noreferrer"},_e={style:{"text-align":"center"}},ce={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0053",target:"_blank",rel:"noopener noreferrer"},ie={style:{"text-align":"left"}},ae=t("code",null,"数组",-1),re=t("code",null,"分治",-1),he=t("code",null,"动态规划",-1),ue={style:{"text-align":"left"}},fe=t("td",{style:{"text-align":"center"}},"105",-1),ge={style:{"text-align":"left"}},me={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",target:"_blank",rel:"noopener noreferrer"},ye={style:{"text-align":"center"}},xe={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0105",target:"_blank",rel:"noopener noreferrer"},be={style:{"text-align":"left"}},pe=t("code",null,"树",-1),ke=t("code",null,"数组",-1),qe=t("code",null,"哈希表",-1),ve=t("code",null,"2+",-1),Me={style:{"text-align":"left"}},je=t("td",{style:{"text-align":"center"}},"106",-1),ze={style:{"text-align":"left"}},He={href:"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},we={style:{"text-align":"center"}},Ie={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0106",target:"_blank",rel:"noopener noreferrer"},Ee={style:{"text-align":"left"}},Ke=t("code",null,"树",-1),Oe=t("code",null,"数组",-1),Be=t("code",null,"哈希表",-1),Ce=t("code",null,"2+",-1),Le={style:{"text-align":"left"}},Ne=t("td",{style:{"text-align":"center"}},"108",-1),Ve={style:{"text-align":"left"}},Re={href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Te={style:{"text-align":"center"}},We={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0108",target:"_blank",rel:"noopener noreferrer"},Ae={style:{"text-align":"left"}},Se=t("code",null,"树",-1),Xe=t("code",null,"二叉搜索树",-1),De=t("code",null,"数组",-1),Fe=t("code",null,"2+",-1),Ge={style:{"text-align":"left"}},Je=t("td",{style:{"text-align":"center"}},"109",-1),Pe={style:{"text-align":"left"}},Qe={href:"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},Ue={style:{"text-align":"center"}},Ye={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0109",target:"_blank",rel:"noopener noreferrer"},Ze={style:{"text-align":"left"}},$e=t("code",null,"树",-1),to=t("code",null,"二叉搜索树",-1),eo=t("code",null,"链表",-1),oo=t("code",null,"2+",-1),lo={style:{"text-align":"left"}},no=t("td",{style:{"text-align":"center"}},"148",-1),so={style:{"text-align":"left"}},_o={href:"https://leetcode.com/problems/sort-list",target:"_blank",rel:"noopener noreferrer"},co={style:{"text-align":"center"}},io={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0148",target:"_blank",rel:"noopener noreferrer"},ao={style:{"text-align":"left"}},ro=t("code",null,"链表",-1),ho=t("code",null,"双指针",-1),uo=t("code",null,"分治",-1),fo=t("code",null,"2+",-1),go={style:{"text-align":"left"}},mo=t("td",{style:{"text-align":"center"}},"169",-1),yo={style:{"text-align":"left"}},xo={href:"https://leetcode.com/problems/majority-element",target:"_blank",rel:"noopener noreferrer"},bo={style:{"text-align":"center"}},po={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0169",target:"_blank",rel:"noopener noreferrer"},ko={style:{"text-align":"left"}},qo=t("code",null,"数组",-1),vo=t("code",null,"哈希表",-1),Mo=t("code",null,"分治",-1),jo=t("code",null,"2+",-1),zo={style:{"text-align":"left"}},Ho=t("td",{style:{"text-align":"center"}},"190",-1),wo={style:{"text-align":"left"}},Io={href:"https://leetcode.com/problems/reverse-bits",target:"_blank",rel:"noopener noreferrer"},Eo={style:{"text-align":"center"}},Ko={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0190",target:"_blank",rel:"noopener noreferrer"},Oo={style:{"text-align":"left"}},Bo=t("code",null,"位运算",-1),Co=t("code",null,"分治",-1),Lo={style:{"text-align":"left"}},No=t("td",{style:{"text-align":"center"}},"191",-1),Vo={style:{"text-align":"left"}},Ro={href:"https://leetcode.com/problems/number-of-1-bits",target:"_blank",rel:"noopener noreferrer"},To={style:{"text-align":"center"}},Wo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0191",target:"_blank",rel:"noopener noreferrer"},Ao={style:{"text-align":"left"}},So=t("code",null,"位运算",-1),Xo=t("code",null,"分治",-1),Do={style:{"text-align":"left"}},Fo=t("td",{style:{"text-align":"center"}},"215",-1),Go={style:{"text-align":"left"}},Jo={href:"https://leetcode.com/problems/kth-largest-element-in-an-array",target:"_blank",rel:"noopener noreferrer"},Po={style:{"text-align":"center"}},Qo={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0215",target:"_blank",rel:"noopener noreferrer"},Uo={style:{"text-align":"left"}},Yo=t("code",null,"数组",-1),Zo=t("code",null,"分治",-1),$o=t("code",null,"快速选择",-1),tl=t("code",null,"2+",-1),el={style:{"text-align":"left"}},ol=t("td",{style:{"text-align":"center"}},"218",-1),ll={style:{"text-align":"left"}},nl={href:"https://leetcode.com/problems/the-skyline-problem",target:"_blank",rel:"noopener noreferrer"},dl=t("td",{style:{"text-align":"center"}},null,-1),sl={style:{"text-align":"left"}},_l=t("code",null,"树状数组",-1),cl=t("code",null,"线段树",-1),il=t("code",null,"数组",-1),al=t("code",null,"4+",-1),rl={style:{"text-align":"left"}},hl=t("td",{style:{"text-align":"center"}},"240",-1),ul={style:{"text-align":"left"}},fl={href:"https://leetcode.com/problems/search-a-2d-matrix-ii",target:"_blank",rel:"noopener noreferrer"},gl={style:{"text-align":"center"}},ml={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0240",target:"_blank",rel:"noopener noreferrer"},yl={style:{"text-align":"left"}},xl=t("code",null,"数组",-1),bl=t("code",null,"二分查找",-1),pl=t("code",null,"分治",-1),kl=t("code",null,"1+",-1),ql={style:{"text-align":"left"}},vl=t("td",{style:{"text-align":"center"}},"315",-1),Ml={style:{"text-align":"left"}},jl={href:"https://leetcode.com/problems/count-of-smaller-numbers-after-self",target:"_blank",rel:"noopener noreferrer"},zl=t("td",{style:{"text-align":"center"}},null,-1),Hl={style:{"text-align":"left"}},wl=t("code",null,"树状数组",-1),Il=t("code",null,"线段树",-1),El=t("code",null,"数组",-1),Kl=t("code",null,"4+",-1),Ol={style:{"text-align":"left"}},Bl=t("td",{style:{"text-align":"center"}},"324",-1),Cl={style:{"text-align":"left"}},Ll={href:"https://leetcode.com/problems/wiggle-sort-ii",target:"_blank",rel:"noopener noreferrer"},Nl=t("td",{style:{"text-align":"center"}},null,-1),Vl={style:{"text-align":"left"}},Rl=t("code",null,"贪心",-1),Tl=t("code",null,"数组",-1),Wl=t("code",null,"分治",-1),Al=t("code",null,"2+",-1),Sl={style:{"text-align":"left"}},Xl=t("td",{style:{"text-align":"center"}},"327",-1),Dl={style:{"text-align":"left"}},Fl={href:"https://leetcode.com/problems/count-of-range-sum",target:"_blank",rel:"noopener noreferrer"},Gl=t("td",{style:{"text-align":"center"}},null,-1),Jl={style:{"text-align":"left"}},Pl=t("code",null,"树状数组",-1),Ql=t("code",null,"线段树",-1),Ul=t("code",null,"数组",-1),Yl=t("code",null,"4+",-1),Zl={style:{"text-align":"left"}},$l=t("td",{style:{"text-align":"center"}},"347",-1),tn={style:{"text-align":"left"}},en={href:"https://leetcode.com/problems/top-k-frequent-elements",target:"_blank",rel:"noopener noreferrer"},on={style:{"text-align":"center"}},ln={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0347",target:"_blank",rel:"noopener noreferrer"},nn={style:{"text-align":"left"}},dn=t("code",null,"数组",-1),sn=t("code",null,"哈希表",-1),_n=t("code",null,"分治",-1),cn=t("code",null,"5+",-1),an={style:{"text-align":"left"}},rn=t("td",{style:{"text-align":"center"}},"372",-1),hn={style:{"text-align":"left"}},un={href:"https://leetcode.com/problems/super-pow",target:"_blank",rel:"noopener noreferrer"},fn=t("td",{style:{"text-align":"center"}},null,-1),gn={style:{"text-align":"left"}},mn=t("code",null,"数学",-1),yn=t("code",null,"分治",-1),xn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"395",-1),pn={style:{"text-align":"left"}},kn={href:"https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters",target:"_blank",rel:"noopener noreferrer"},qn=t("td",{style:{"text-align":"center"}},null,-1),vn={style:{"text-align":"left"}},Mn=t("code",null,"哈希表",-1),jn=t("code",null,"字符串",-1),zn=t("code",null,"分治",-1),Hn=t("code",null,"1+",-1),wn={style:{"text-align":"left"}},In=t("td",{style:{"text-align":"center"}},"427",-1),En={style:{"text-align":"left"}},Kn={href:"https://leetcode.com/problems/construct-quad-tree",target:"_blank",rel:"noopener noreferrer"},On={style:{"text-align":"center"}},Bn={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0427",target:"_blank",rel:"noopener noreferrer"},Cn={style:{"text-align":"left"}},Ln=t("code",null,"树",-1),Nn=t("code",null,"数组",-1),Vn=t("code",null,"分治",-1),Rn=t("code",null,"1+",-1),Tn={style:{"text-align":"left"}},Wn=t("td",{style:{"text-align":"center"}},"493",-1),An={style:{"text-align":"left"}},Sn={href:"https://leetcode.com/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},Xn=t("td",{style:{"text-align":"center"}},null,-1),Dn={style:{"text-align":"left"}},Fn=t("code",null,"树状数组",-1),Gn=t("code",null,"线段树",-1),Jn=t("code",null,"数组",-1),Pn=t("code",null,"4+",-1),Qn={style:{"text-align":"left"}},Un=t("td",{style:{"text-align":"center"}},"558",-1),Yn={style:{"text-align":"left"}},Zn={href:"https://leetcode.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees",target:"_blank",rel:"noopener noreferrer"},$n=t("td",{style:{"text-align":"center"}},null,-1),td={style:{"text-align":"left"}},ed=t("code",null,"树",-1),od=t("code",null,"分治",-1),ld={style:{"text-align":"left"}},nd=t("td",{style:{"text-align":"center"}},"654",-1),dd={style:{"text-align":"left"}},sd={href:"https://leetcode.com/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},_d={style:{"text-align":"center"}},cd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0654",target:"_blank",rel:"noopener noreferrer"},id={style:{"text-align":"left"}},ad=t("code",null,"栈",-1),rd=t("code",null,"树",-1),hd=t("code",null,"数组",-1),ud=t("code",null,"3+",-1),fd={style:{"text-align":"left"}},gd=t("td",{style:{"text-align":"center"}},"889",-1),md={style:{"text-align":"left"}},yd={href:"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},xd={style:{"text-align":"center"}},bd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0889",target:"_blank",rel:"noopener noreferrer"},pd={style:{"text-align":"left"}},kd=t("code",null,"树",-1),qd=t("code",null,"数组",-1),vd=t("code",null,"哈希表",-1),Md=t("code",null,"2+",-1),jd={style:{"text-align":"left"}},zd=t("td",{style:{"text-align":"center"}},"912",-1),Hd={style:{"text-align":"left"}},wd={href:"https://leetcode.com/problems/sort-an-array",target:"_blank",rel:"noopener noreferrer"},Id=t("td",{style:{"text-align":"center"}},null,-1),Ed={style:{"text-align":"left"}},Kd=t("code",null,"数组",-1),Od=t("code",null,"分治",-1),Bd=t("code",null,"桶排序",-1),Cd=t("code",null,"5+",-1),Ld={style:{"text-align":"left"}},Nd=t("td",{style:{"text-align":"center"}},"918",-1),Vd={style:{"text-align":"left"}},Rd={href:"https://leetcode.com/problems/maximum-sum-circular-subarray",target:"_blank",rel:"noopener noreferrer"},Td={style:{"text-align":"center"}},Wd={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0918",target:"_blank",rel:"noopener noreferrer"},Ad={style:{"text-align":"left"}},Sd=t("code",null,"队列",-1),Xd=t("code",null,"数组",-1),Dd=t("code",null,"分治",-1),Fd=t("code",null,"2+",-1),Gd={style:{"text-align":"left"}},Jd=t("td",{style:{"text-align":"center"}},"932",-1),Pd={style:{"text-align":"left"}},Qd={href:"https://leetcode.com/problems/beautiful-array",target:"_blank",rel:"noopener noreferrer"},Ud=t("td",{style:{"text-align":"center"}},null,-1),Yd={style:{"text-align":"left"}},Zd=t("code",null,"数组",-1),$d=t("code",null,"数学",-1),ts=t("code",null,"分治",-1),es={style:{"text-align":"left"}},os=t("td",{style:{"text-align":"center"}},"973",-1),ls={style:{"text-align":"left"}},ns={href:"https://leetcode.com/problems/k-closest-points-to-origin",target:"_blank",rel:"noopener noreferrer"},ds={style:{"text-align":"center"}},ss={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0973",target:"_blank",rel:"noopener noreferrer"},_s={style:{"text-align":"left"}},cs=t("code",null,"几何",-1),is=t("code",null,"数组",-1),as=t("code",null,"数学",-1),rs=t("code",null,"4+",-1),hs={style:{"text-align":"left"}},us=t("td",{style:{"text-align":"center"}},"1274",-1),fs={style:{"text-align":"left"}},gs={href:"https://leetcode.com/problems/number-of-ships-in-a-rectangle",target:"_blank",rel:"noopener noreferrer"},ms=t("td",{style:{"text-align":"center"}},null,-1),ys={style:{"text-align":"left"}},xs=t("code",null,"数组",-1),bs=t("code",null,"分治",-1),ps=t("code",null,"交互",-1),ks={style:{"text-align":"left"}},qs=t("td",{style:{"text-align":"center"}},"1382",-1),vs={style:{"text-align":"left"}},Ms={href:"https://leetcode.com/problems/balance-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},js=t("td",{style:{"text-align":"center"}},null,-1),zs={style:{"text-align":"left"}},Hs=t("code",null,"贪心",-1),ws=t("code",null,"树",-1),Is=t("code",null,"深度优先搜索",-1),Es=t("code",null,"3+",-1),Ks={style:{"text-align":"left"}},Os=t("td",{style:{"text-align":"center"}},"1569",-1),Bs={style:{"text-align":"left"}},Cs={href:"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst",target:"_blank",rel:"noopener noreferrer"},Ls=t("td",{style:{"text-align":"center"}},null,-1),Ns={style:{"text-align":"left"}},Vs=t("code",null,"树",-1),Rs=t("code",null,"并查集",-1),Ts=t("code",null,"二叉搜索树",-1),Ws=t("code",null,"7+",-1),As={style:{"text-align":"left"}},Ss=t("td",{style:{"text-align":"center"}},"1649",-1),Xs={style:{"text-align":"left"}},Ds={href:"https://leetcode.com/problems/create-sorted-array-through-instructions",target:"_blank",rel:"noopener noreferrer"},Fs=t("td",{style:{"text-align":"center"}},null,-1),Gs={style:{"text-align":"left"}},Js=t("code",null,"树状数组",-1),Ps=t("code",null,"线段树",-1),Qs=t("code",null,"数组",-1),Us=t("code",null,"4+",-1),Ys={style:{"text-align":"left"}},Zs=t("td",{style:{"text-align":"center"}},"1738",-1),$s={style:{"text-align":"left"}},t_={href:"https://leetcode.com/problems/find-kth-largest-xor-coordinate-value",target:"_blank",rel:"noopener noreferrer"},e_=t("td",{style:{"text-align":"center"}},null,-1),o_={style:{"text-align":"left"}},l_=t("code",null,"位运算",-1),n_=t("code",null,"数组",-1),d_=t("code",null,"分治",-1),s_=t("code",null,"5+",-1),__={style:{"text-align":"left"}},c_=t("td",{style:{"text-align":"center"}},"1763",-1),i_={style:{"text-align":"left"}},a_={href:"https://leetcode.com/problems/longest-nice-substring",target:"_blank",rel:"noopener noreferrer"},r_=t("td",{style:{"text-align":"center"}},null,-1),h_={style:{"text-align":"left"}},u_=t("code",null,"位运算",-1),f_=t("code",null,"哈希表",-1),g_=t("code",null,"字符串",-1),m_=t("code",null,"2+",-1),y_={style:{"text-align":"left"}},x_=t("td",{style:{"text-align":"center"}},"1982",-1),b_={style:{"text-align":"left"}},p_={href:"https://leetcode.com/problems/find-array-given-subset-sums",target:"_blank",rel:"noopener noreferrer"},k_=t("td",{style:{"text-align":"center"}},null,-1),q_={style:{"text-align":"left"}},v_=t("code",null,"数组",-1),M_=t("code",null,"分治",-1),j_={style:{"text-align":"left"}},z_=t("td",{style:{"text-align":"center"}},"1985",-1),H_={style:{"text-align":"left"}},w_={href:"https://leetcode.com/problems/find-the-kth-largest-integer-in-the-array",target:"_blank",rel:"noopener noreferrer"},I_=t("td",{style:{"text-align":"center"}},null,-1),E_={style:{"text-align":"left"}},K_=t("code",null,"数组",-1),O_=t("code",null,"字符串",-1),B_=t("code",null,"分治",-1),C_=t("code",null,"3+",-1),L_={style:{"text-align":"left"}},N_=t("td",{style:{"text-align":"center"}},"2031",-1),V_={style:{"text-align":"left"}},R_={href:"https://leetcode.com/problems/count-subarrays-with-more-ones-than-zeros",target:"_blank",rel:"noopener noreferrer"},T_=t("td",{style:{"text-align":"center"}},null,-1),W_={style:{"text-align":"left"}},A_=t("code",null,"树状数组",-1),S_=t("code",null,"线段树",-1),X_=t("code",null,"数组",-1),D_=t("code",null,"4+",-1),F_={style:{"text-align":"left"}},G_=t("td",{style:{"text-align":"center"}},"2179",-1),J_={style:{"text-align":"left"}},P_={href:"https://leetcode.com/problems/count-good-triplets-in-an-array",target:"_blank",rel:"noopener noreferrer"},Q_=t("td",{style:{"text-align":"center"}},null,-1),U_={style:{"text-align":"left"}},Y_=t("code",null,"树状数组",-1),Z_=t("code",null,"线段树",-1),$_=t("code",null,"数组",-1),tc=t("code",null,"4+",-1),ec={style:{"text-align":"left"}},oc=t("td",{style:{"text-align":"center"}},"2343",-1),lc={style:{"text-align":"left"}},nc={href:"https://leetcode.com/problems/query-kth-smallest-trimmed-number",target:"_blank",rel:"noopener noreferrer"},dc=t("td",{style:{"text-align":"center"}},null,-1),sc={style:{"text-align":"left"}},_c=t("code",null,"数组",-1),cc=t("code",null,"字符串",-1),ic=t("code",null,"分治",-1),ac=t("code",null,"4+",-1),rc={style:{"text-align":"left"}},hc=t("td",{style:{"text-align":"center"}},"2407",-1),uc={style:{"text-align":"left"}},fc={href:"https://leetcode.com/problems/longest-increasing-subsequence-ii",target:"_blank",rel:"noopener noreferrer"},gc=t("td",{style:{"text-align":"center"}},null,-1),mc={style:{"text-align":"left"}},yc=t("code",null,"树状数组",-1),xc=t("code",null,"线段树",-1),bc=t("code",null,"队列",-1),pc=t("code",null,"4+",-1),kc={style:{"text-align":"left"}},qc=t("td",{style:{"text-align":"center"}},"2426",-1),vc={style:{"text-align":"left"}},Mc={href:"https://leetcode.com/problems/number-of-pairs-satisfying-inequality",target:"_blank",rel:"noopener noreferrer"},jc=t("td",{style:{"text-align":"center"}},null,-1),zc={style:{"text-align":"left"}},Hc=t("code",null,"树状数组",-1),wc=t("code",null,"线段树",-1),Ic=t("code",null,"数组",-1),Ec=t("code",null,"4+",-1),Kc={style:{"text-align":"left"}},Oc=t("td",{style:{"text-align":"center"}},"2519",-1),Bc={style:{"text-align":"left"}},Cc={href:"https://leetcode.com/problems/count-the-number-of-k-big-indices",target:"_blank",rel:"noopener noreferrer"},Lc=t("td",{style:{"text-align":"center"}},null,-1),Nc={style:{"text-align":"left"}},Vc=t("code",null,"树状数组",-1),Rc=t("code",null,"线段树",-1),Tc=t("code",null,"数组",-1),Wc=t("code",null,"4+",-1),Ac={style:{"text-align":"left"}},Sc=t("td",{style:{"text-align":"center"}},"2613",-1),Xc={style:{"text-align":"left"}},Dc={href:"https://leetcode.com/problems/beautiful-pairs",target:"_blank",rel:"noopener noreferrer"},Fc=t("td",{style:{"text-align":"center"}},null,-1),Gc={style:{"text-align":"left"}},Jc=t("code",null,"几何",-1),Pc=t("code",null,"数组",-1),Qc=t("code",null,"数学",-1),Uc=t("code",null,"3+",-1),Yc={style:{"text-align":"left"}},Zc=t("td",{style:{"text-align":"center"}},"2792",-1),$c={style:{"text-align":"left"}},ti={href:"https://leetcode.com/problems/count-nodes-that-are-great-enough",target:"_blank",rel:"noopener noreferrer"},ei=t("td",{style:{"text-align":"center"}},null,-1),oi={style:{"text-align":"left"}},li=t("code",null,"树",-1),ni=t("code",null,"深度优先搜索",-1),di=t("code",null,"分治",-1),si=t("code",null,"1+",-1),_i={style:{"text-align":"left"}},ci=t("td",{style:{"text-align":"center"}},"3109",-1),ii={style:{"text-align":"left"}},ai={href:"https://leetcode.com/problems/find-the-index-of-permutation",target:"_blank",rel:"noopener noreferrer"},ri=t("td",{style:{"text-align":"center"}},null,-1),hi={style:{"text-align":"left"}},ui=t("code",null,"树状数组",-1),fi=t("code",null,"线段树",-1),gi=t("code",null,"数组",-1),mi=t("code",null,"4+",-1),yi={style:{"text-align":"left"}},xi=t("td",{style:{"text-align":"center"}},"3165",-1),bi={style:{"text-align":"left"}},pi={href:"https://leetcode.com/problems/maximum-sum-of-subsequence-with-non-adjacent-elements",target:"_blank",rel:"noopener noreferrer"},ki=t("td",{style:{"text-align":"center"}},null,-1),qi={style:{"text-align":"left"}},vi=t("code",null,"线段树",-1),Mi=t("code",null,"数组",-1),ji=t("code",null,"分治",-1),zi=t("code",null,"1+",-1),Hi={style:{"text-align":"left"}},wi=t("td",{style:{"text-align":"center"}},"剑指 Offer 04",-1),Ii={style:{"text-align":"left"}},Ei={href:"https://leetcode.cn/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof",target:"_blank",rel:"noopener noreferrer"},Ki={style:{"text-align":"center"}},Oi={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_04_1",target:"_blank",rel:"noopener noreferrer"},Bi={style:{"text-align":"left"}},Ci=t("code",null,"数组",-1),Li=t("code",null,"二分查找",-1),Ni=t("code",null,"分治",-1),Vi=t("code",null,"1+",-1),Ri={style:{"text-align":"left"}},Ti=t("td",{style:{"text-align":"center"}},"剑指 Offer 07",-1),Wi={style:{"text-align":"left"}},Ai={href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof",target:"_blank",rel:"noopener noreferrer"},Si={style:{"text-align":"center"}},Xi={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_07_1",target:"_blank",rel:"noopener noreferrer"},Di={style:{"text-align":"left"}},Fi=t("code",null,"树",-1),Gi=t("code",null,"数组",-1),Ji=t("code",null,"哈希表",-1),Pi=t("code",null,"2+",-1),Qi={style:{"text-align":"left"}},Ui=t("td",{style:{"text-align":"center"}},"剑指 Offer 39",-1),Yi={style:{"text-align":"left"}},Zi={href:"https://leetcode.cn/problems/shu-zu-zhong-chu-xian-ci-shu-chao-guo-yi-ban-de-shu-zi-lcof",target:"_blank",rel:"noopener noreferrer"},$i={style:{"text-align":"center"}},ta={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_39_1",target:"_blank",rel:"noopener noreferrer"},ea={style:{"text-align":"left"}},oa=t("code",null,"数组",-1),la=t("code",null,"哈希表",-1),na=t("code",null,"分治",-1),da=t("code",null,"2+",-1),sa={style:{"text-align":"left"}},_a=t("td",{style:{"text-align":"center"}},"剑指 Offer 40",-1),ca={style:{"text-align":"left"}},ia={href:"https://leetcode.cn/problems/zui-xiao-de-kge-shu-lcof",target:"_blank",rel:"noopener noreferrer"},aa=t("td",{style:{"text-align":"center"}},null,-1),ra={style:{"text-align":"left"}},ha=t("code",null,"数组",-1),ua=t("code",null,"分治",-1),fa=t("code",null,"快速选择",-1),ga=t("code",null,"2+",-1),ma={style:{"text-align":"left"}},ya=t("td",{style:{"text-align":"center"}},"剑指 Offer 42",-1),xa={style:{"text-align":"left"}},ba={href:"https://leetcode.cn/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof",target:"_blank",rel:"noopener noreferrer"},pa={style:{"text-align":"center"}},ka={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/jz_offer_42_1",target:"_blank",rel:"noopener noreferrer"},qa={style:{"text-align":"left"}},va=t("code",null,"数组",-1),Ma=t("code",null,"分治",-1),ja=t("code",null,"动态规划",-1),za={style:{"text-align":"left"}},Ha=t("td",{style:{"text-align":"center"}},"剑指 Offer 51",-1),wa={style:{"text-align":"left"}},Ia={href:"https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof",target:"_blank",rel:"noopener noreferrer"},Ea=t("td",{style:{"text-align":"center"}},null,-1),Ka={style:{"text-align":"left"}},Oa=t("code",null,"树状数组",-1),Ba=t("code",null,"线段树",-1),Ca=t("code",null,"数组",-1),La=t("code",null,"4+",-1),Na={style:{"text-align":"left"}},Va=t("td",{style:{"text-align":"center"}},"剑指 Offer II 60",-1),Ra={style:{"text-align":"left"}},Ta={href:"https://leetcode.cn/problems/g5c51o",target:"_blank",rel:"noopener noreferrer"},Wa=t("td",{style:{"text-align":"center"}},null,-1),Aa={style:{"text-align":"left"}},Sa=t("code",null,"数组",-1),Xa=t("code",null,"哈希表",-1),Da=t("code",null,"分治",-1),Fa=t("code",null,"5+",-1),Ga={style:{"text-align":"left"}},Ja=t("td",{style:{"text-align":"center"}},"剑指 Offer II 76",-1),Pa={style:{"text-align":"left"}},Qa={href:"https://leetcode.cn/problems/xx4gT2",target:"_blank",rel:"noopener noreferrer"},Ua=t("td",{style:{"text-align":"center"}},null,-1),Ya={style:{"text-align":"left"}},Za=t("code",null,"数组",-1),$a=t("code",null,"分治",-1),tr=t("code",null,"快速选择",-1),er=t("code",null,"2+",-1),or={style:{"text-align":"left"}},lr=t("td",{style:{"text-align":"center"}},"剑指 Offer II 77",-1),nr={style:{"text-align":"left"}},dr={href:"https://leetcode.cn/problems/7WHec2",target:"_blank",rel:"noopener noreferrer"},sr=t("td",{style:{"text-align":"center"}},null,-1),_r={style:{"text-align":"left"}},cr=t("code",null,"链表",-1),ir=t("code",null,"双指针",-1),ar=t("code",null,"分治",-1),rr=t("code",null,"2+",-1),hr={style:{"text-align":"left"}},ur=t("td",{style:{"text-align":"center"}},"剑指 Offer II 78",-1),fr={style:{"text-align":"left"}},gr={href:"https://leetcode.cn/problems/vvXgSW",target:"_blank",rel:"noopener noreferrer"},mr=t("td",{style:{"text-align":"center"}},null,-1),yr={style:{"text-align":"left"}},xr=t("code",null,"链表",-1),br=t("code",null,"分治",-1),pr=t("code",null,"堆（优先队列）",-1),kr=t("code",null,"1+",-1),qr={style:{"text-align":"left"}},vr=t("td",{style:{"text-align":"center"}},"面试题 04.02",-1),Mr={style:{"text-align":"left"}},jr={href:"https://leetcode.cn/problems/minimum-height-tree-lcci",target:"_blank",rel:"noopener noreferrer"},zr=t("td",{style:{"text-align":"center"}},null,-1),Hr={style:{"text-align":"left"}},wr=t("code",null,"树",-1),Ir=t("code",null,"二叉搜索树",-1),Er=t("code",null,"数组",-1),Kr=t("code",null,"2+",-1),Or={style:{"text-align":"left"}},Br=t("td",{style:{"text-align":"center"}},"面试题 10.09",-1),Cr={style:{"text-align":"left"}},Lr={href:"https://leetcode.cn/problems/sorted-matrix-search-lcci",target:"_blank",rel:"noopener noreferrer"},Nr=t("td",{style:{"text-align":"center"}},null,-1),Vr={style:{"text-align":"left"}},Rr=t("code",null,"数组",-1),Tr=t("code",null,"二分查找",-1),Wr=t("code",null,"分治",-1),Ar=t("code",null,"1+",-1),Sr={style:{"text-align":"left"}},Xr=t("td",{style:{"text-align":"center"}},"面试题 16.17",-1),Dr={style:{"text-align":"left"}},Fr={href:"https://leetcode.cn/problems/contiguous-sequence-lcci",target:"_blank",rel:"noopener noreferrer"},Gr=t("td",{style:{"text-align":"center"}},null,-1),Jr={style:{"text-align":"left"}},Pr=t("code",null,"数组",-1),Qr=t("code",null,"分治",-1),Ur=t("code",null,"动态规划",-1),Yr={style:{"text-align":"left"}},Zr=t("td",{style:{"text-align":"center"}},"面试题 17.14",-1),$r={style:{"text-align":"left"}},th={href:"https://leetcode.cn/problems/smallest-k-lcci",target:"_blank",rel:"noopener noreferrer"},eh=t("td",{style:{"text-align":"center"}},null,-1),oh={style:{"text-align":"left"}},lh=t("code",null,"数组",-1),nh=t("code",null,"分治",-1),dh=t("code",null,"快速选择",-1),sh=t("code",null,"2+",-1),_h={style:{"text-align":"left"}};function ch(ih,ah){const n=_("RouterLink"),d=_("ExternalLinkIcon"),s=_("font");return i(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/matrix.html"},{default:l(()=>[x]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[b]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/doubly-linked-list.html"},{default:l(()=>[p]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[k]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-stack.html"},{default:l(()=>[q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[v]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/monotonic-queue.html"},{default:l(()=>[M]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[j]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[H]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string-matching.html"},{default:l(()=>[w]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[I]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-tree.html"},{default:l(()=>[E]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[K]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[O]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/graph.html"},{default:l(()=>[B]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/ordered-set.html"},{default:l(()=>[C]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/topological-sort.html"},{default:l(()=>[L]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/shortest-path.html"},{default:l(()=>[N]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/strongly-connected-component.html"},{default:l(()=>[V]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/eulerian-circuit.html"},{default:l(()=>[R]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/biconnected-component.html"},{default:l(()=>[T]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[W]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/trie.html"},{default:l(()=>[A]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[S]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[X]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/suffix-array.html"},{default:l(()=>[D]),_:1})]),F,t("p",null,[e(n,{to:"/leetcode/outline/tag/enumeration.html"},{default:l(()=>[G]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/recursion.html"},{default:l(()=>[J]),_:1}),o(),P,o(),e(n,{to:"/leetcode/outline/tag/backtracking.html"},{default:l(()=>[Q]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[U]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[nt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/memoization.html"},{default:l(()=>[dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[st]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/breadth-first-search.html"},{default:l(()=>[_t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[ct]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/counting.html"},{default:l(()=>[rt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/sliding-window.html"},{default:l(()=>[ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/number-theory.html"},{default:l(()=>[bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[pt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/game-theory.html"},{default:l(()=>[kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/simulation.html"},{default:l(()=>[qt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/combinatorics.html"},{default:l(()=>[vt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/randomized.html"},{default:l(()=>[Mt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/probability-and-statistics.html"},{default:l(()=>[jt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/reservoir-sampling.html"},{default:l(()=>[zt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/rejection-sampling.html"},{default:l(()=>[Ht]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/database.html"},{default:l(()=>[wt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/design.html"},{default:l(()=>[It]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/data-stream.html"},{default:l(()=>[Et]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/brainteaser.html"},{default:l(()=>[Kt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[Ot]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/iterator.html"},{default:l(()=>[Bt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/concurrency.html"},{default:l(()=>[Ct]),_:1})])]),Lt,r(" prettier-ignore "),t("table",null,[Nt,t("tbody",null,[t("tr",null,[Vt,t("td",Rt,[t("a",Tt,[o("寻找两个正序数组的中位数"),e(d)])]),t("td",Wt,[t("a",At,[o("[✓]"),e(d)])]),t("td",St,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Xt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Dt]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Ft]),_:1})]),t("td",Gt,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Jt,t("td",Pt,[t("a",Qt,[o("合并 K 个升序链表"),e(d)])]),t("td",Ut,[t("a",Yt,[o("[✓]"),e(d)])]),t("td",Zt,[e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[$t]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[te]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[ee]),_:1}),o(),oe]),t("td",le,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ne,t("td",de,[t("a",se,[o("最大子数组和"),e(d)])]),t("td",_e,[t("a",ce,[o("[✓]"),e(d)])]),t("td",ie,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ae]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[re]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[he]),_:1})]),t("td",ue,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[fe,t("td",ge,[t("a",me,[o("从前序与中序遍历序列构造二叉树"),e(d)])]),t("td",ye,[t("a",xe,[o("[✓]"),e(d)])]),t("td",be,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[pe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ke]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[qe]),_:1}),o(),ve]),t("td",Me,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[je,t("td",ze,[t("a",He,[o("从中序与后序遍历序列构造二叉树"),e(d)])]),t("td",we,[t("a",Ie,[o("[✓]"),e(d)])]),t("td",Ee,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ke]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Oe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Be]),_:1}),o(),Ce]),t("td",Le,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ne,t("td",Ve,[t("a",Re,[o("将有序数组转换为二叉搜索树"),e(d)])]),t("td",Te,[t("a",We,[o("[✓]"),e(d)])]),t("td",Ae,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Se]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Xe]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[De]),_:1}),o(),Fe]),t("td",Ge,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Je,t("td",Pe,[t("a",Qe,[o("有序链表转换二叉搜索树"),e(d)])]),t("td",Ue,[t("a",Ye,[o("[✓]"),e(d)])]),t("td",Ze,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[$e]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[to]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[eo]),_:1}),o(),oo]),t("td",lo,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[no,t("td",so,[t("a",_o,[o("排序链表"),e(d)])]),t("td",co,[t("a",io,[o("[✓]"),e(d)])]),t("td",ao,[e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[ro]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[ho]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[uo]),_:1}),o(),fo]),t("td",go,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[mo,t("td",yo,[t("a",xo,[o("多数元素"),e(d)])]),t("td",bo,[t("a",po,[o("[✓]"),e(d)])]),t("td",ko,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[qo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[vo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Mo]),_:1}),o(),jo]),t("td",zo,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ho,t("td",wo,[t("a",Io,[o("颠倒二进制位"),e(d)])]),t("td",Eo,[t("a",Ko,[o("[✓]"),e(d)])]),t("td",Oo,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[Bo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Co]),_:1})]),t("td",Lo,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[No,t("td",Vo,[t("a",Ro,[o("位1的个数"),e(d)])]),t("td",To,[t("a",Wo,[o("[✓]"),e(d)])]),t("td",Ao,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[So]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Xo]),_:1})]),t("td",Do,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Fo,t("td",Go,[t("a",Jo,[o("数组中的第K个最大元素"),e(d)])]),t("td",Po,[t("a",Qo,[o("[✓]"),e(d)])]),t("td",Uo,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Yo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Zo]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[$o]),_:1}),o(),tl]),t("td",el,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ol,t("td",ll,[t("a",nl,[o("天际线问题"),e(d)])]),dl,t("td",sl,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[_l]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[cl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[il]),_:1}),o(),al]),t("td",rl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[hl,t("td",ul,[t("a",fl,[o("搜索二维矩阵 II"),e(d)])]),t("td",gl,[t("a",ml,[o("[✓]"),e(d)])]),t("td",yl,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[xl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[bl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[pl]),_:1}),o(),kl]),t("td",ql,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[vl,t("td",Ml,[t("a",jl,[o("计算右侧小于当前元素的个数"),e(d)])]),zl,t("td",Hl,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[wl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Il]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[El]),_:1}),o(),Kl]),t("td",Ol,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Bl,t("td",Cl,[t("a",Ll,[o("摆动排序 II"),e(d)])]),Nl,t("td",Vl,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Rl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Tl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Wl]),_:1}),o(),Al]),t("td",Sl,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xl,t("td",Dl,[t("a",Fl,[o("区间和的个数"),e(d)])]),Gl,t("td",Jl,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Pl]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Ql]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ul]),_:1}),o(),Yl]),t("td",Zl,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[$l,t("td",tn,[t("a",en,[o("前 K 个高频元素"),e(d)])]),t("td",on,[t("a",ln,[o("[✓]"),e(d)])]),t("td",nn,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[dn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[sn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[_n]),_:1}),o(),cn]),t("td",an,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[rn,t("td",hn,[t("a",un,[o("超级次方"),e(d)])]),fn,t("td",gn,[e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[mn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[yn]),_:1})]),t("td",xn,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[bn,t("td",pn,[t("a",kn,[o("至少有 K 个重复字符的最长子串"),e(d)])]),qn,t("td",vn,[e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Mn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[jn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[zn]),_:1}),o(),Hn]),t("td",wn,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[In,t("td",En,[t("a",Kn,[o("建立四叉树"),e(d)])]),t("td",On,[t("a",Bn,[o("[✓]"),e(d)])]),t("td",Cn,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Ln]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Nn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Vn]),_:1}),o(),Rn]),t("td",Tn,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Wn,t("td",An,[t("a",Sn,[o("翻转对"),e(d)])]),Xn,t("td",Dn,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Fn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Gn]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Jn]),_:1}),o(),Pn]),t("td",Qn,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Un,t("td",Yn,[t("a",Zn,[o("四叉树交集"),e(d)])]),$n,t("td",td,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ed]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[od]),_:1})]),t("td",ld,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[nd,t("td",dd,[t("a",sd,[o("最大二叉树"),e(d)])]),t("td",_d,[t("a",cd,[o("[✓]"),e(d)])]),t("td",id,[e(n,{to:"/leetcode/outline/tag/stack.html"},{default:l(()=>[ad]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[rd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[hd]),_:1}),o(),ud]),t("td",fd,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[gd,t("td",md,[t("a",yd,[o("根据前序和后序遍历构造二叉树"),e(d)])]),t("td",xd,[t("a",bd,[o("[✓]"),e(d)])]),t("td",pd,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[kd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[qd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[vd]),_:1}),o(),Md]),t("td",jd,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zd,t("td",Hd,[t("a",wd,[o("排序数组"),e(d)])]),Id,t("td",Ed,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Kd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Od]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/bucket-sort.html"},{default:l(()=>[Bd]),_:1}),o(),Cd]),t("td",Ld,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Nd,t("td",Vd,[t("a",Rd,[o("环形子数组的最大和"),e(d)])]),t("td",Td,[t("a",Wd,[o("[✓]"),e(d)])]),t("td",Ad,[e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[Sd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Xd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Dd]),_:1}),o(),Fd]),t("td",Gd,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Jd,t("td",Pd,[t("a",Qd,[o("漂亮数组"),e(d)])]),Ud,t("td",Yd,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Zd]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[$d]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[ts]),_:1})]),t("td",es,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[os,t("td",ls,[t("a",ns,[o("最接近原点的 K 个点"),e(d)])]),t("td",ds,[t("a",ss,[o("[✓]"),e(d)])]),t("td",_s,[e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[cs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[is]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[as]),_:1}),o(),rs]),t("td",hs,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[us,t("td",fs,[t("a",gs,[o("矩形内船只的数目"),e(d)])]),ms,t("td",ys,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[xs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[bs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/interactive.html"},{default:l(()=>[ps]),_:1})]),t("td",ks,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[qs,t("td",vs,[t("a",Ms,[o("将二叉搜索树变平衡"),e(d)])]),js,t("td",zs,[e(n,{to:"/leetcode/outline/tag/greedy.html"},{default:l(()=>[Hs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[ws]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[Is]),_:1}),o(),Es]),t("td",Ks,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Os,t("td",Bs,[t("a",Cs,[o("将子数组重新排序得到同一个二叉搜索树的方案数"),e(d)])]),Ls,t("td",Ns,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Vs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/union-find.html"},{default:l(()=>[Rs]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Ts]),_:1}),o(),Ws]),t("td",As,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ss,t("td",Xs,[t("a",Ds,[o("通过指令创建有序数组"),e(d)])]),Fs,t("td",Gs,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Js]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Ps]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Qs]),_:1}),o(),Us]),t("td",Ys,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Zs,t("td",$s,[t("a",t_,[o("找出第 K 大的异或坐标值"),e(d)])]),e_,t("td",o_,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[l_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[n_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[d_]),_:1}),o(),s_]),t("td",__,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[c_,t("td",i_,[t("a",a_,[o("最长的美好子字符串"),e(d)])]),r_,t("td",h_,[e(n,{to:"/leetcode/outline/tag/bit-manipulation.html"},{default:l(()=>[u_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[f_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[g_]),_:1}),o(),m_]),t("td",y_,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[x_,t("td",b_,[t("a",p_,[o("从子集的和还原数组"),e(d)])]),k_,t("td",q_,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[v_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[M_]),_:1})]),t("td",j_,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[z_,t("td",H_,[t("a",w_,[o("找出数组中的第 K 大整数"),e(d)])]),I_,t("td",E_,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[K_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[O_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[B_]),_:1}),o(),C_]),t("td",L_,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[N_,t("td",V_,[t("a",R_,[o("1 比 0 多的子数组个数"),e(d)])]),T_,t("td",W_,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[A_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[S_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[X_]),_:1}),o(),D_]),t("td",F_,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[G_,t("td",J_,[t("a",P_,[o("统计数组中好三元组数目"),e(d)])]),Q_,t("td",U_,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Y_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Z_]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[$_]),_:1}),o(),tc]),t("td",ec,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[oc,t("td",lc,[t("a",nc,[o("裁剪数字后查询第 K 小的数字"),e(d)])]),dc,t("td",sc,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[_c]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/string.html"},{default:l(()=>[cc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[ic]),_:1}),o(),ac]),t("td",rc,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[hc,t("td",uc,[t("a",fc,[o("最长递增子序列 II"),e(d)])]),gc,t("td",mc,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[yc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[xc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/queue.html"},{default:l(()=>[bc]),_:1}),o(),pc]),t("td",kc,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[qc,t("td",vc,[t("a",Mc,[o("满足不等式的数对数目"),e(d)])]),jc,t("td",zc,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Hc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[wc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ic]),_:1}),o(),Ec]),t("td",Kc,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Oc,t("td",Bc,[t("a",Cc,[o("统计 K-Big 索引的数量"),e(d)])]),Lc,t("td",Nc,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Vc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Rc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Tc]),_:1}),o(),Wc]),t("td",Ac,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Sc,t("td",Xc,[t("a",Dc,[o("美数对"),e(d)])]),Fc,t("td",Gc,[e(n,{to:"/leetcode/outline/tag/geometry.html"},{default:l(()=>[Jc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Pc]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/math.html"},{default:l(()=>[Qc]),_:1}),o(),Uc]),t("td",Yc,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Zc,t("td",$c,[t("a",ti,[o("计算足够大的节点数"),e(d)])]),ei,t("td",oi,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[li]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/depth-first-search.html"},{default:l(()=>[ni]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[di]),_:1}),o(),si]),t("td",_i,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ci,t("td",ii,[t("a",ai,[o("查找排列的下标"),e(d)])]),ri,t("td",hi,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[ui]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[fi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[gi]),_:1}),o(),mi]),t("td",yi,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[xi,t("td",bi,[t("a",pi,[o("不包含相邻元素的子序列的最大和"),e(d)])]),ki,t("td",qi,[e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[vi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Mi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[ji]),_:1}),o(),zi]),t("td",Hi,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[wi,t("td",Ii,[t("a",Ei,[o("二维数组中的查找"),e(d)])]),t("td",Ki,[t("a",Oi,[o("[✓]"),e(d)])]),t("td",Bi,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ci]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Li]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Ni]),_:1}),o(),Vi]),t("td",Ri,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ti,t("td",Wi,[t("a",Ai,[o("重建二叉树"),e(d)])]),t("td",Si,[t("a",Xi,[o("[✓]"),e(d)])]),t("td",Di,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[Fi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Gi]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Ji]),_:1}),o(),Pi]),t("td",Qi,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ui,t("td",Yi,[t("a",Zi,[o("数组中出现次数超过一半的数字"),e(d)])]),t("td",$i,[t("a",ta,[o("[✓]"),e(d)])]),t("td",ea,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[oa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[la]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[na]),_:1}),o(),da]),t("td",sa,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[_a,t("td",ca,[t("a",ia,[o("最小的k个数"),e(d)])]),aa,t("td",ra,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[ha]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[ua]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[fa]),_:1}),o(),ga]),t("td",ma,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[ya,t("td",xa,[t("a",ba,[o("连续子数组的最大和"),e(d)])]),t("td",pa,[t("a",ka,[o("[✓]"),e(d)])]),t("td",qa,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[va]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Ma]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[ja]),_:1})]),t("td",za,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Ha,t("td",wa,[t("a",Ia,[o("数组中的逆序对"),e(d)])]),Ea,t("td",Ka,[e(n,{to:"/leetcode/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Oa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/segment-tree.html"},{default:l(()=>[Ba]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Ca]),_:1}),o(),La]),t("td",Na,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Va,t("td",Ra,[t("a",Ta,[o("出现频率最高的 k 个数字"),e(d)])]),Wa,t("td",Aa,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Sa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/hash-table.html"},{default:l(()=>[Xa]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Da]),_:1}),o(),Fa]),t("td",Ga,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ja,t("td",Pa,[t("a",Qa,[o("数组中的第 k 大的数字"),e(d)])]),Ua,t("td",Ya,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Za]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[$a]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[tr]),_:1}),o(),er]),t("td",or,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[lr,t("td",nr,[t("a",dr,[o("链表排序"),e(d)])]),sr,t("td",_r,[e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[cr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/two-pointers.html"},{default:l(()=>[ir]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[ar]),_:1}),o(),rr]),t("td",hr,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ur,t("td",fr,[t("a",gr,[o("合并排序链表"),e(d)])]),mr,t("td",yr,[e(n,{to:"/leetcode/outline/tag/linked-list.html"},{default:l(()=>[xr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[br]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/heap-priority-queue.html"},{default:l(()=>[pr]),_:1}),o(),kr]),t("td",qr,[e(s,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[vr,t("td",Mr,[t("a",jr,[o("最小高度树"),e(d)])]),zr,t("td",Hr,[e(n,{to:"/leetcode/outline/tag/tree.html"},{default:l(()=>[wr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search-tree.html"},{default:l(()=>[Ir]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Er]),_:1}),o(),Kr]),t("td",Or,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Br,t("td",Cr,[t("a",Lr,[o("排序矩阵查找"),e(d)])]),Nr,t("td",Vr,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Rr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/binary-search.html"},{default:l(()=>[Tr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Wr]),_:1}),o(),Ar]),t("td",Sr,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Xr,t("td",Dr,[t("a",Fr,[o("连续数列"),e(d)])]),Gr,t("td",Jr,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[Pr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[Qr]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/dynamic-programming.html"},{default:l(()=>[Ur]),_:1})]),t("td",Yr,[e(s,{color:"#15bd66"},{default:l(()=>[o("Easy")]),_:1})])]),t("tr",null,[Zr,t("td",$r,[t("a",th,[o("最小K个数"),e(d)])]),eh,t("td",oh,[e(n,{to:"/leetcode/outline/tag/array.html"},{default:l(()=>[lh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/divide-and-conquer.html"},{default:l(()=>[nh]),_:1}),o(),e(n,{to:"/leetcode/outline/tag/quickselect.html"},{default:l(()=>[dh]),_:1}),o(),sh]),t("td",_h,[e(s,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const hh=c(h,[["render",ch],["__file","divide-and-conquer.html.vue"]]);export{hh as default};
