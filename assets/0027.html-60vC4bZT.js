import{_ as d,r as c,o as i,c as p,a as e,b as n,d as t,w as s,f as u,e as r}from"./app-mvY9N9Pc.js";const h={},_={id:"_27-移除元素",tabindex:"-1"},m=e("a",{class:"header-anchor",href:"#_27-移除元素","aria-hidden":"true"},"#",-1),k={href:"https://leetcode.com/problems/remove-element",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"数组",-1),b=e("code",null,"双指针",-1),v={href:"https://leetcode.com/problems/remove-element",target:"_blank",rel:"noopener noreferrer"},g=e("code",null,"LeetCode",-1),y=e("h2",{id:"题目",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#题目","aria-hidden":"true"},"#"),n(" 题目")],-1),x=e("code",null,"nums",-1),w=e("code",null,"val",-1),E=e("code",null,"val",-1),q=e("code",null,"nums",-1),C={href:"https://en.wikipedia.org/wiki/In-place_algorithm",target:"_blank",rel:"noopener noreferrer"},I=e("strong",null,"in-place",-1),j=e("em",null,"the number of elements in",-1),N=e("code",null,"nums",-1),L=e("em",null,"which are not equal to",-1),V=e("code",null,"val",-1),O=r('<p>Consider the number of elements in <code>nums</code> which are not equal to <code>val</code> be <code>k</code>, to get accepted, you need to do the following things:</p><ul><li>Change the array <code>nums</code> such that the first <code>k</code> elements of <code>nums</code> contain the elements which are not equal to <code>val</code>. The remaining elements of <code>nums</code> are not important as well as the size of <code>nums</code>.</li><li>Return <code>k</code>.</li></ul><p><strong>Example 1:</strong></p><blockquote><p>Input: nums = [3,2,2,3], val = 3</p><p>Output: 2, nums = [2,2,<em>,</em>]</p><p>Explanation: Your function should return k = 2, with the first two elements of nums being 2.</p><p>It does not matter what you leave beyond the returned k (hence they are underscores).</p></blockquote><p><strong>Example 2:</strong></p><blockquote><p>Input: nums = [0,1,2,2,3,0,4,2], val = 2</p><p>Output: 5, nums = [0,1,4,0,3,<em>,</em>,_]</p><p>Explanation: Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4.</p><p>Note that the five elements can be returned in any order.</p><p>It does not matter what you leave beyond the returned k (hence they are underscores).</p></blockquote><p><strong>Constraints:</strong></p><ul><li><code>0 &lt;= nums.length &lt;= 100</code></li><li><code>0 &lt;= nums[i] &lt;= 50</code></li><li><code>0 &lt;= val &lt;= 100</code></li></ul><h2 id="题目大意" tabindex="-1"><a class="header-anchor" href="#题目大意" aria-hidden="true">#</a> 题目大意</h2><p>给定一个数组 nums 和一个数值 <code>val</code>，将数组中所有等于 <code>val</code> 的元素删除，并返回剩余的元素个数。</p><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路" aria-hidden="true">#</a> 解题思路</h2>',11),T=r(`<p>可以使用快慢指针，<code>fast</code> 指针往前遍历数组，遇到与 <code>val</code> 不同的数，就将它往前移，用 <code>slow</code> 指针标记与 <code>val</code> 不同的数要移动的位置，最后返回 <code>slow</code> 即可。</p><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析" aria-hidden="true">#</a> 复杂度分析</h4><ul><li><strong>时间复杂度</strong>：<code>O(n)</code>，其中<code>n</code> 表示 <code>nums</code> 的长度，需要遍历数组一遍。</li><li><strong>空间复杂度</strong>：<code>O(1)</code>，用了常数个变量存储中间状态。</li></ul><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">val</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">removeElement</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
	<span class="token keyword">let</span> slow <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> fast <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> fast <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> fast<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>fast<span class="token punctuation">]</span> <span class="token operator">!=</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			nums<span class="token punctuation">[</span>slow<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>fast<span class="token punctuation">]</span><span class="token punctuation">;</span>
			slow<span class="token operator">++</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> slow<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关题目" tabindex="-1"><a class="header-anchor" href="#相关题目" aria-hidden="true">#</a> 相关题目</h2>`,6),B=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"center"}},"题号"),e("th",{style:{"text-align":"left"}},"标题"),e("th",{style:{"text-align":"center"}},"题解"),e("th",{style:{"text-align":"left"}},"标签"),e("th",{style:{"text-align":"left"}},"难度")])],-1),R=e("td",{style:{"text-align":"center"}},"26",-1),z={style:{"text-align":"left"}},Y={href:"https://leetcode.com/problems/remove-duplicates-from-sorted-array",target:"_blank",rel:"noopener noreferrer"},G={style:{"text-align":"center"}},S={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0026",target:"_blank",rel:"noopener noreferrer"},A={style:{"text-align":"left"}},D=e("code",null,"数组",-1),F=e("code",null,"双指针",-1),H={style:{"text-align":"left"}},J=e("td",{style:{"text-align":"center"}},"203",-1),K={style:{"text-align":"left"}},M={href:"https://leetcode.com/problems/remove-linked-list-elements",target:"_blank",rel:"noopener noreferrer"},P={style:{"text-align":"center"}},Q={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0203",target:"_blank",rel:"noopener noreferrer"},U={style:{"text-align":"left"}},W=e("code",null,"递归",-1),X=e("code",null,"链表",-1),Z={style:{"text-align":"left"}},$=e("td",{style:{"text-align":"center"}},"283",-1),ee={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/move-zeroes",target:"_blank",rel:"noopener noreferrer"},te={style:{"text-align":"center"}},se={href:"https://2xiao.github.io/leetcode-js/leetcode/problem/0283",target:"_blank",rel:"noopener noreferrer"},oe={style:{"text-align":"left"}},ae=e("code",null,"数组",-1),le=e("code",null,"双指针",-1),ce={style:{"text-align":"left"}};function re(de,ie){const o=c("ExternalLinkIcon"),l=c("font"),a=c("RouterLink");return i(),p("div",null,[e("h1",_,[m,n(),e("a",k,[n("27. 移除元素"),t(o)])]),e("p",null,[n("🟢 "),t(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1}),n("  🔖  "),t(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[f]),_:1}),n(),t(a,{to:"/leetcode/outline/tag/two-pointers.html"},{default:s(()=>[b]),_:1}),n("  🔗 "),e("a",v,[g,t(o)])]),y,e("p",null,[n("Given an integer array "),x,n(" and an integer "),w,n(", remove all occurrences of "),E,n(" in "),q,n(),e("a",C,[I,t(o)]),n(". The order of the elements may be changed. Then return "),j,N,n(),L,V,n(".")]),O,e("p",null,[n("这道题和 "),t(a,{to:"/leetcode/problem/0283.html"},{default:s(()=>[n("第 283 题")]),_:1}),n(" 基本一致，283 题是删除 0，这一题是给定的一个 val，实质是一样的。")]),T,u(" prettier-ignore "),e("table",null,[B,e("tbody",null,[e("tr",null,[R,e("td",z,[e("a",Y,[n("删除有序数组中的重复项"),t(o)])]),e("td",G,[e("a",S,[n("[✓]"),t(o)])]),e("td",A,[t(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[D]),_:1}),n(),t(a,{to:"/leetcode/outline/tag/two-pointers.html"},{default:s(()=>[F]),_:1})]),e("td",H,[t(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])]),e("tr",null,[J,e("td",K,[e("a",M,[n("移除链表元素"),t(o)])]),e("td",P,[e("a",Q,[n("[✓]"),t(o)])]),e("td",U,[t(a,{to:"/leetcode/outline/tag/recursion.html"},{default:s(()=>[W]),_:1}),n(),t(a,{to:"/leetcode/outline/tag/linked-list.html"},{default:s(()=>[X]),_:1})]),e("td",Z,[t(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])]),e("tr",null,[$,e("td",ee,[e("a",ne,[n("移动零"),t(o)])]),e("td",te,[e("a",se,[n("[✓]"),t(o)])]),e("td",oe,[t(a,{to:"/leetcode/outline/tag/array.html"},{default:s(()=>[ae]),_:1}),n(),t(a,{to:"/leetcode/outline/tag/two-pointers.html"},{default:s(()=>[le]),_:1})]),e("td",ce,[t(l,{color:"#15bd66"},{default:s(()=>[n("Easy")]),_:1})])])])])])}const ue=d(h,[["render",re],["__file","0027.html.vue"]]);export{ue as default};
