import{_,r as c,o as i,c as a,a as t,d as e,w as l,b as o,f as h}from"./app-qrCIIj1V.js";const r={},u=t("h1",{id:"最短路",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#最短路","aria-hidden":"true"},"#"),o(" 最短路")],-1),f={class:"hint-container details"},g=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),p=t("code",null,"数组",-1),y=t("code",null,"矩阵",-1),x=t("code",null,"链表",-1),j=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),v=t("code",null,"单调队列",-1),M=t("code",null,"堆（优先队列）",-1),I=t("code",null,"哈希表",-1),H=t("code",null,"字符串",-1),q=t("code",null,"字符串匹配",-1),L=t("code",null,"树",-1),z=t("code",null,"二叉树",-1),C=t("code",null,"二叉搜索树",-1),V=t("code",null,"最小生成树",-1),E=t("code",null,"图",-1),N=t("code",null,"有序集合",-1),P=t("code",null,"拓扑排序",-1),B=t("span",{class:"blue"},"最短路",-1),F=t("code",null,"强连通分量",-1),K=t("code",null,"欧拉回路",-1),R=t("code",null,"双连通分量",-1),D=t("code",null,"并查集",-1),J=t("code",null,"字典树",-1),O=t("code",null,"线段树",-1),Q=t("code",null,"树状数组",-1),T=t("code",null,"后缀数组",-1),U=t("p",null,[t("strong",null,"算法")],-1),X=t("code",null,"枚举",-1),A=t("code",null,"递归",-1),G=t("code",null,"分治",-1),S=t("code",null,"回溯",-1),W=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),ot=t("code",null,"归并排序",-1),lt=t("code",null,"快速选择",-1),st=t("code",null,"二分查找",-1),nt=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),ht=t("code",null,"计数",-1),rt=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),ft=t("code",null,"哈希函数",-1),gt=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),pt=t("p",null,[t("strong",null,"其他")],-1),yt=t("code",null,"数学",-1),xt=t("code",null,"数论",-1),jt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),wt=t("code",null,"组合数学",-1),vt=t("code",null,"随机化",-1),Mt=t("code",null,"概率与统计",-1),It=t("code",null,"水塘抽样",-1),Ht=t("code",null,"拒绝采样",-1),qt=t("code",null,"数据库",-1),Lt=t("code",null,"设计",-1),zt=t("code",null,"数据流",-1),Ct=t("code",null,"脑筋急转弯",-1),Vt=t("code",null,"交互",-1),Et=t("code",null,"迭代器",-1),Nt=t("code",null,"多线程",-1),Pt=t("hr",null,null,-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Ft=t("td",{style:{"text-align":"center"}},"399",-1),Kt={style:{"text-align":"left"}},Rt={href:"https://leetcode.com/problems/evaluate-division",target:"_blank",rel:"noopener noreferrer"},Dt={style:{"text-align":"center"}},Jt={style:{"text-align":"left"}},Ot=t("code",null,"深度优先搜索",-1),Qt=t("code",null,"广度优先搜索",-1),Tt=t("code",null,"并查集",-1),Ut=t("code",null,"4+",-1),Xt={style:{"text-align":"left"}},At=t("td",{style:{"text-align":"center"}},"499",-1),Gt={style:{"text-align":"left"}},St={href:"https://leetcode.com/problems/the-maze-iii",target:"_blank",rel:"noopener noreferrer"},Wt=t("td",{style:{"text-align":"center"}},null,-1),Yt={style:{"text-align":"left"}},Zt=t("code",null,"深度优先搜索",-1),$t=t("code",null,"广度优先搜索",-1),te=t("code",null,"图",-1),ee=t("code",null,"5+",-1),oe={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"505",-1),se={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/the-maze-ii",target:"_blank",rel:"noopener noreferrer"},de=t("td",{style:{"text-align":"center"}},null,-1),ce={style:{"text-align":"left"}},_e=t("code",null,"深度优先搜索",-1),ie=t("code",null,"广度优先搜索",-1),ae=t("code",null,"图",-1),he=t("code",null,"4+",-1),re={style:{"text-align":"left"}},ue=t("td",{style:{"text-align":"center"}},"743",-1),fe={style:{"text-align":"left"}},ge={href:"https://leetcode.com/problems/network-delay-time",target:"_blank",rel:"noopener noreferrer"},me=t("td",{style:{"text-align":"center"}},null,-1),pe={style:{"text-align":"left"}},ye=t("code",null,"深度优先搜索",-1),xe=t("code",null,"广度优先搜索",-1),je=t("code",null,"图",-1),be=t("code",null,"2+",-1),ke={style:{"text-align":"left"}},we=t("td",{style:{"text-align":"center"}},"787",-1),ve={style:{"text-align":"left"}},Me={href:"https://leetcode.com/problems/cheapest-flights-within-k-stops",target:"_blank",rel:"noopener noreferrer"},Ie=t("td",{style:{"text-align":"center"}},null,-1),He={style:{"text-align":"left"}},qe=t("code",null,"深度优先搜索",-1),Le=t("code",null,"广度优先搜索",-1),ze=t("code",null,"图",-1),Ce=t("code",null,"3+",-1),Ve={style:{"text-align":"left"}},Ee=t("td",{style:{"text-align":"center"}},"882",-1),Ne={style:{"text-align":"left"}},Pe={href:"https://leetcode.com/problems/reachable-nodes-in-subdivided-graph",target:"_blank",rel:"noopener noreferrer"},Be=t("td",{style:{"text-align":"center"}},null,-1),Fe={style:{"text-align":"left"}},Ke=t("code",null,"图",-1),Re=t("code",null,"最短路",-1),De=t("code",null,"堆（优先队列）",-1),Je={style:{"text-align":"left"}},Oe=t("td",{style:{"text-align":"center"}},"1334",-1),Qe={style:{"text-align":"left"}},Te={href:"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",target:"_blank",rel:"noopener noreferrer"},Ue=t("td",{style:{"text-align":"center"}},null,-1),Xe={style:{"text-align":"left"}},Ae=t("code",null,"图",-1),Ge=t("code",null,"动态规划",-1),Se=t("code",null,"最短路",-1),We={style:{"text-align":"left"}},Ye=t("td",{style:{"text-align":"center"}},"1368",-1),Ze={style:{"text-align":"left"}},$e={href:"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid",target:"_blank",rel:"noopener noreferrer"},to=t("td",{style:{"text-align":"center"}},null,-1),eo={style:{"text-align":"left"}},oo=t("code",null,"广度优先搜索",-1),lo=t("code",null,"图",-1),so=t("code",null,"数组",-1),no=t("code",null,"3+",-1),co={style:{"text-align":"left"}},_o=t("td",{style:{"text-align":"center"}},"1514",-1),io={style:{"text-align":"left"}},ao={href:"https://leetcode.com/problems/path-with-maximum-probability",target:"_blank",rel:"noopener noreferrer"},ho=t("td",{style:{"text-align":"center"}},null,-1),ro={style:{"text-align":"left"}},uo=t("code",null,"图",-1),fo=t("code",null,"数组",-1),go=t("code",null,"最短路",-1),mo=t("code",null,"1+",-1),po={style:{"text-align":"left"}},yo=t("td",{style:{"text-align":"center"}},"1786",-1),xo={style:{"text-align":"left"}},jo={href:"https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node",target:"_blank",rel:"noopener noreferrer"},bo=t("td",{style:{"text-align":"center"}},null,-1),ko={style:{"text-align":"left"}},wo=t("code",null,"图",-1),vo=t("code",null,"拓扑排序",-1),Mo=t("code",null,"动态规划",-1),Io=t("code",null,"2+",-1),Ho={style:{"text-align":"left"}},qo=t("td",{style:{"text-align":"center"}},"1976",-1),Lo={style:{"text-align":"left"}},zo={href:"https://leetcode.com/problems/number-of-ways-to-arrive-at-destination",target:"_blank",rel:"noopener noreferrer"},Co=t("td",{style:{"text-align":"center"}},null,-1),Vo={style:{"text-align":"left"}},Eo=t("code",null,"图",-1),No=t("code",null,"拓扑排序",-1),Po=t("code",null,"动态规划",-1),Bo=t("code",null,"1+",-1),Fo={style:{"text-align":"left"}},Ko=t("td",{style:{"text-align":"center"}},"2045",-1),Ro={style:{"text-align":"left"}},Do={href:"https://leetcode.com/problems/second-minimum-time-to-reach-destination",target:"_blank",rel:"noopener noreferrer"},Jo=t("td",{style:{"text-align":"center"}},null,-1),Oo={style:{"text-align":"left"}},Qo=t("code",null,"广度优先搜索",-1),To=t("code",null,"图",-1),Uo=t("code",null,"最短路",-1),Xo={style:{"text-align":"left"}},Ao=t("td",{style:{"text-align":"center"}},"2093",-1),Go={style:{"text-align":"left"}},So={href:"https://leetcode.com/problems/minimum-cost-to-reach-city-with-discounts",target:"_blank",rel:"noopener noreferrer"},Wo=t("td",{style:{"text-align":"center"}},null,-1),Yo={style:{"text-align":"left"}},Zo=t("code",null,"图",-1),$o=t("code",null,"最短路",-1),tl=t("code",null,"堆（优先队列）",-1),el={style:{"text-align":"left"}},ol=t("td",{style:{"text-align":"center"}},"2203",-1),ll={style:{"text-align":"left"}},sl={href:"https://leetcode.com/problems/minimum-weighted-subgraph-with-the-required-paths",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},null,-1),dl={style:{"text-align":"left"}},cl=t("code",null,"图",-1),_l=t("code",null,"最短路",-1),il={style:{"text-align":"left"}},al=t("td",{style:{"text-align":"center"}},"2290",-1),hl={style:{"text-align":"left"}},rl={href:"https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner",target:"_blank",rel:"noopener noreferrer"},ul=t("td",{style:{"text-align":"center"}},null,-1),fl={style:{"text-align":"left"}},gl=t("code",null,"广度优先搜索",-1),ml=t("code",null,"图",-1),pl=t("code",null,"数组",-1),yl=t("code",null,"3+",-1),xl={style:{"text-align":"left"}},jl=t("td",{style:{"text-align":"center"}},"2297",-1),bl={style:{"text-align":"left"}},kl={href:"https://leetcode.com/problems/jump-game-viii",target:"_blank",rel:"noopener noreferrer"},wl=t("td",{style:{"text-align":"center"}},null,-1),vl={style:{"text-align":"left"}},Ml=t("code",null,"栈",-1),Il=t("code",null,"图",-1),Hl=t("code",null,"数组",-1),ql=t("code",null,"3+",-1),Ll={style:{"text-align":"left"}},zl=t("td",{style:{"text-align":"center"}},"2473",-1),Cl={style:{"text-align":"left"}},Vl={href:"https://leetcode.com/problems/minimum-cost-to-buy-apples",target:"_blank",rel:"noopener noreferrer"},El=t("td",{style:{"text-align":"center"}},null,-1),Nl={style:{"text-align":"left"}},Pl=t("code",null,"图",-1),Bl=t("code",null,"数组",-1),Fl=t("code",null,"最短路",-1),Kl=t("code",null,"1+",-1),Rl={style:{"text-align":"left"}},Dl=t("td",{style:{"text-align":"center"}},"2577",-1),Jl={style:{"text-align":"left"}},Ol={href:"https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid",target:"_blank",rel:"noopener noreferrer"},Ql=t("td",{style:{"text-align":"center"}},null,-1),Tl={style:{"text-align":"left"}},Ul=t("code",null,"广度优先搜索",-1),Xl=t("code",null,"图",-1),Al=t("code",null,"数组",-1),Gl=t("code",null,"3+",-1),Sl={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"2642",-1),Yl={style:{"text-align":"left"}},Zl={href:"https://leetcode.com/problems/design-graph-with-shortest-path-calculator",target:"_blank",rel:"noopener noreferrer"},$l=t("td",{style:{"text-align":"center"}},null,-1),ts={style:{"text-align":"left"}},es=t("code",null,"图",-1),os=t("code",null,"设计",-1),ls=t("code",null,"最短路",-1),ss=t("code",null,"1+",-1),ns={style:{"text-align":"left"}},ds=t("td",{style:{"text-align":"center"}},"2662",-1),cs={style:{"text-align":"left"}},_s={href:"https://leetcode.com/problems/minimum-cost-of-a-path-with-special-roads",target:"_blank",rel:"noopener noreferrer"},is=t("td",{style:{"text-align":"center"}},null,-1),as={style:{"text-align":"left"}},hs=t("code",null,"图",-1),rs=t("code",null,"数组",-1),us=t("code",null,"最短路",-1),fs=t("code",null,"1+",-1),gs={style:{"text-align":"left"}},ms=t("td",{style:{"text-align":"center"}},"2699",-1),ps={style:{"text-align":"left"}},ys={href:"https://leetcode.com/problems/modify-graph-edge-weights",target:"_blank",rel:"noopener noreferrer"},xs=t("td",{style:{"text-align":"center"}},null,-1),js={style:{"text-align":"left"}},bs=t("code",null,"图",-1),ks=t("code",null,"最短路",-1),ws=t("code",null,"堆（优先队列）",-1),vs={style:{"text-align":"left"}},Ms=t("td",{style:{"text-align":"center"}},"2714",-1),Is={style:{"text-align":"left"}},Hs={href:"https://leetcode.com/problems/find-shortest-path-with-k-hops",target:"_blank",rel:"noopener noreferrer"},qs=t("td",{style:{"text-align":"center"}},null,-1),Ls={style:{"text-align":"left"}},zs=t("code",null,"图",-1),Cs=t("code",null,"最短路",-1),Vs=t("code",null,"堆（优先队列）",-1),Es={style:{"text-align":"left"}},Ns=t("td",{style:{"text-align":"center"}},"2737",-1),Ps={style:{"text-align":"left"}},Bs={href:"https://leetcode.com/problems/find-the-closest-marked-node",target:"_blank",rel:"noopener noreferrer"},Fs=t("td",{style:{"text-align":"center"}},null,-1),Ks={style:{"text-align":"left"}},Rs=t("code",null,"图",-1),Ds=t("code",null,"数组",-1),Js=t("code",null,"最短路",-1),Os=t("code",null,"1+",-1),Qs={style:{"text-align":"left"}},Ts=t("td",{style:{"text-align":"center"}},"2959",-1),Us={style:{"text-align":"left"}},Xs={href:"https://leetcode.com/problems/number-of-possible-sets-of-closing-branches",target:"_blank",rel:"noopener noreferrer"},As=t("td",{style:{"text-align":"center"}},null,-1),Gs={style:{"text-align":"left"}},Ss=t("code",null,"位运算",-1),Ws=t("code",null,"图",-1),Ys=t("code",null,"枚举",-1),Zs=t("code",null,"2+",-1),$s={style:{"text-align":"left"}},tn=t("td",{style:{"text-align":"center"}},"2976",-1),en={style:{"text-align":"left"}},on={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-i",target:"_blank",rel:"noopener noreferrer"},ln=t("td",{style:{"text-align":"center"}},null,-1),sn={style:{"text-align":"left"}},nn=t("code",null,"图",-1),dn=t("code",null,"数组",-1),cn=t("code",null,"字符串",-1),_n=t("code",null,"1+",-1),an={style:{"text-align":"left"}},hn=t("td",{style:{"text-align":"center"}},"2977",-1),rn={style:{"text-align":"left"}},un={href:"https://leetcode.com/problems/minimum-cost-to-convert-string-ii",target:"_blank",rel:"noopener noreferrer"},fn=t("td",{style:{"text-align":"center"}},null,-1),gn={style:{"text-align":"left"}},mn=t("code",null,"图",-1),pn=t("code",null,"字典树",-1),yn=t("code",null,"数组",-1),xn=t("code",null,"3+",-1),jn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"3112",-1),kn={style:{"text-align":"left"}},wn={href:"https://leetcode.com/problems/minimum-time-to-visit-disappearing-nodes",target:"_blank",rel:"noopener noreferrer"},vn=t("td",{style:{"text-align":"center"}},null,-1),Mn={style:{"text-align":"left"}},In=t("code",null,"图",-1),Hn=t("code",null,"数组",-1),qn=t("code",null,"最短路",-1),Ln=t("code",null,"1+",-1),zn={style:{"text-align":"left"}},Cn=t("td",{style:{"text-align":"center"}},"3123",-1),Vn={style:{"text-align":"left"}},En={href:"https://leetcode.com/problems/find-edges-in-shortest-paths",target:"_blank",rel:"noopener noreferrer"},Nn=t("td",{style:{"text-align":"center"}},null,-1),Pn={style:{"text-align":"left"}},Bn=t("code",null,"深度优先搜索",-1),Fn=t("code",null,"广度优先搜索",-1),Kn=t("code",null,"图",-1),Rn=t("code",null,"2+",-1),Dn={style:{"text-align":"left"}},Jn=t("td",{style:{"text-align":"center"}},"3286",-1),On={style:{"text-align":"left"}},Qn={href:"https://leetcode.com/problems/find-a-safe-walk-through-a-grid",target:"_blank",rel:"noopener noreferrer"},Tn=t("td",{style:{"text-align":"center"}},null,-1),Un={style:{"text-align":"left"}},Xn=t("code",null,"广度优先搜索",-1),An=t("code",null,"图",-1),Gn=t("code",null,"数组",-1),Sn=t("code",null,"3+",-1),Wn={style:{"text-align":"left"}},Yn=t("td",{style:{"text-align":"center"}},"LCP 35",-1),Zn={style:{"text-align":"left"}},$n={href:"https://leetcode.cn/problems/DFPeFJ",target:"_blank",rel:"noopener noreferrer"},td=t("td",{style:{"text-align":"center"}},null,-1),ed={style:{"text-align":"left"}},od=t("code",null,"图",-1),ld=t("code",null,"最短路",-1),sd=t("code",null,"堆（优先队列）",-1),nd={style:{"text-align":"left"}},dd=t("td",{style:{"text-align":"center"}},"LCP 56",-1),cd={style:{"text-align":"left"}},_d={href:"https://leetcode.cn/problems/6UEx57",target:"_blank",rel:"noopener noreferrer"},id=t("td",{style:{"text-align":"center"}},null,-1),ad={style:{"text-align":"left"}},hd=t("code",null,"广度优先搜索",-1),rd=t("code",null,"图",-1),ud=t("code",null,"数组",-1),fd=t("code",null,"3+",-1),gd={style:{"text-align":"left"}},md=t("td",{style:{"text-align":"center"}},"剑指 Offer II 111",-1),pd={style:{"text-align":"left"}},yd={href:"https://leetcode.cn/problems/vlzXQL",target:"_blank",rel:"noopener noreferrer"},xd=t("td",{style:{"text-align":"center"}},null,-1),jd={style:{"text-align":"left"}},bd=t("code",null,"深度优先搜索",-1),kd=t("code",null,"广度优先搜索",-1),wd=t("code",null,"并查集",-1),vd=t("code",null,"3+",-1),Md={style:{"text-align":"left"}};function Id(Hd,qd){const s=c("RouterLink"),n=c("ExternalLinkIcon"),d=c("font");return i(),a("div",null,[u,t("details",f,[g,m,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[p]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/matrix.html"},{default:l(()=>[y]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:l(()=>[x]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:l(()=>[j]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:l(()=>[b]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:l(()=>[k]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/queue.html"},{default:l(()=>[w]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/monotonic-queue.html"},{default:l(()=>[v]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:l(()=>[M]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:l(()=>[I]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:l(()=>[H]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:l(()=>[q]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/tree.html"},{default:l(()=>[L]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:l(()=>[z]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:l(()=>[C]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:l(()=>[V]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[E]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:l(()=>[N]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:l(()=>[P]),_:1}),o(),B,o(),e(s,{to:"/leetcode-js/outline/tag/strongly-connected-component.html"},{default:l(()=>[F]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:l(()=>[K]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:l(()=>[R]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:l(()=>[D]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/trie.html"},{default:l(()=>[J]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:l(()=>[O]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:l(()=>[Q]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:l(()=>[T]),_:1})]),U,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:l(()=>[X]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/recursion.html"},{default:l(()=>[A]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:l(()=>[G]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:l(()=>[S]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/greedy.html"},{default:l(()=>[W]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Y]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/sorting.html"},{default:l(()=>[Z]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/bucket-sort.html"},{default:l(()=>[$]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/counting-sort.html"},{default:l(()=>[tt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/radix-sort.html"},{default:l(()=>[et]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/merge-sort.html"},{default:l(()=>[ot]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/quickselect.html"},{default:l(()=>[lt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:l(()=>[st]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/memoization.html"},{default:l(()=>[nt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[dt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[ct]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:l(()=>[_t]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:l(()=>[it]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:l(()=>[at]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/counting.html"},{default:l(()=>[ht]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:l(()=>[rt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/bitmask.html"},{default:l(()=>[ut]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:l(()=>[ft]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:l(()=>[gt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/line-sweep.html"},{default:l(()=>[mt]),_:1})]),pt,t("p",null,[e(s,{to:"/leetcode-js/outline/tag/math.html"},{default:l(()=>[yt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:l(()=>[xt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/geometry.html"},{default:l(()=>[jt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:l(()=>[bt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/simulation.html"},{default:l(()=>[kt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:l(()=>[wt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/randomized.html"},{default:l(()=>[vt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:l(()=>[Mt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/reservoir-sampling.html"},{default:l(()=>[It]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/rejection-sampling.html"},{default:l(()=>[Ht]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/database.html"},{default:l(()=>[qt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:l(()=>[Lt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:l(()=>[zt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:l(()=>[Ct]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/interactive.html"},{default:l(()=>[Vt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/iterator.html"},{default:l(()=>[Et]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/concurrency.html"},{default:l(()=>[Nt]),_:1})])]),Pt,h(" prettier-ignore "),t("table",null,[Bt,t("tbody",null,[t("tr",null,[Ft,t("td",Kt,[t("a",Rt,[o("除法求值"),e(n)])]),t("td",Dt,[e(s,{to:"/leetcode-js/problem/0399.html"},{default:l(()=>[o("[✓]")]),_:1})]),t("td",Jt,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[Ot]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[Qt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:l(()=>[Tt]),_:1}),o(),Ut]),t("td",Xt,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[At,t("td",Gt,[t("a",St,[o("迷宫 III"),e(n)])]),Wt,t("td",Yt,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[Zt]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[$t]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[te]),_:1}),o(),ee]),t("td",oe,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[le,t("td",se,[t("a",ne,[o("迷宫 II"),e(n)])]),de,t("td",ce,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[_e]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[ie]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[ae]),_:1}),o(),he]),t("td",re,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ue,t("td",fe,[t("a",ge,[o("网络延迟时间"),e(n)])]),me,t("td",pe,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[ye]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[xe]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[je]),_:1}),o(),be]),t("td",ke,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[we,t("td",ve,[t("a",Me,[o("K 站中转内最便宜的航班"),e(n)])]),Ie,t("td",He,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[qe]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[Le]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[ze]),_:1}),o(),Ce]),t("td",Ve,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ee,t("td",Ne,[t("a",Pe,[o("细分图中的可到达节点"),e(n)])]),Be,t("td",Fe,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[Ke]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[Re]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:l(()=>[De]),_:1})]),t("td",Je,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Oe,t("td",Qe,[t("a",Te,[o("阈值距离内邻居最少的城市"),e(n)])]),Ue,t("td",Xe,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[Ae]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Ge]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[Se]),_:1})]),t("td",We,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ye,t("td",Ze,[t("a",$e,[o("使网格图至少有一条有效路径的最小代价"),e(n)])]),to,t("td",eo,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[oo]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[lo]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[so]),_:1}),o(),no]),t("td",co,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[_o,t("td",io,[t("a",ao,[o("概率最大的路径"),e(n)])]),ho,t("td",ro,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[uo]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[fo]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[go]),_:1}),o(),mo]),t("td",po,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[yo,t("td",xo,[t("a",jo,[o("从第一个节点出发到最后一个节点的受限路径数"),e(n)])]),bo,t("td",ko,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[wo]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:l(()=>[vo]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Mo]),_:1}),o(),Io]),t("td",Ho,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[qo,t("td",Lo,[t("a",zo,[o("到达目的地的方案数"),e(n)])]),Co,t("td",Vo,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[Eo]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:l(()=>[No]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:l(()=>[Po]),_:1}),o(),Bo]),t("td",Fo,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ko,t("td",Ro,[t("a",Do,[o("到达目的地的第二短时间"),e(n)])]),Jo,t("td",Oo,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[Qo]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[To]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[Uo]),_:1})]),t("td",Xo,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ao,t("td",Go,[t("a",So,[o("前往目标城市的最小费用"),e(n)])]),Wo,t("td",Yo,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[Zo]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[$o]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:l(()=>[tl]),_:1})]),t("td",el,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ol,t("td",ll,[t("a",sl,[o("得到要求路径的最小带权子图"),e(n)])]),nl,t("td",dl,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[cl]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[_l]),_:1})]),t("td",il,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[al,t("td",hl,[t("a",rl,[o("到达角落需要移除障碍物的最小数目"),e(n)])]),ul,t("td",fl,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[gl]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[ml]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[pl]),_:1}),o(),yl]),t("td",xl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[jl,t("td",bl,[t("a",kl,[o("跳跃游戏 VIII"),e(n)])]),wl,t("td",vl,[e(s,{to:"/leetcode-js/outline/tag/stack.html"},{default:l(()=>[Ml]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[Il]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Hl]),_:1}),o(),ql]),t("td",Ll,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[zl,t("td",Cl,[t("a",Vl,[o("购买苹果的最低成本"),e(n)])]),El,t("td",Nl,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[Pl]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Bl]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[Fl]),_:1}),o(),Kl]),t("td",Rl,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Dl,t("td",Jl,[t("a",Ol,[o("在网格图中访问一个格子的最少时间"),e(n)])]),Ql,t("td",Tl,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[Ul]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[Xl]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Al]),_:1}),o(),Gl]),t("td",Sl,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Wl,t("td",Yl,[t("a",Zl,[o("设计可以求最短路径的图类"),e(n)])]),$l,t("td",ts,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[es]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/design.html"},{default:l(()=>[os]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[ls]),_:1}),o(),ss]),t("td",ns,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[ds,t("td",cs,[t("a",_s,[o("前往目标的最小代价"),e(n)])]),is,t("td",as,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[hs]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[rs]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[us]),_:1}),o(),fs]),t("td",gs,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[ms,t("td",ps,[t("a",ys,[o("修改图中的边权"),e(n)])]),xs,t("td",js,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[bs]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[ks]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:l(()=>[ws]),_:1})]),t("td",vs,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ms,t("td",Is,[t("a",Hs,[o("找到 K 次跨越的最短路径"),e(n)])]),qs,t("td",Ls,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[zs]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[Cs]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:l(()=>[Vs]),_:1})]),t("td",Es,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Ns,t("td",Ps,[t("a",Bs,[o("找到最近的标记节点"),e(n)])]),Fs,t("td",Ks,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[Rs]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Ds]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[Js]),_:1}),o(),Os]),t("td",Qs,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Ts,t("td",Us,[t("a",Xs,[o("关闭分部的可行集合数目"),e(n)])]),As,t("td",Gs,[e(s,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:l(()=>[Ss]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[Ws]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:l(()=>[Ys]),_:1}),o(),Zs]),t("td",$s,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[tn,t("td",en,[t("a",on,[o("转换字符串的最小成本 I"),e(n)])]),ln,t("td",sn,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[nn]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[dn]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/string.html"},{default:l(()=>[cn]),_:1}),o(),_n]),t("td",an,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[hn,t("td",rn,[t("a",un,[o("转换字符串的最小成本 II"),e(n)])]),fn,t("td",gn,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[mn]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/trie.html"},{default:l(()=>[pn]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[yn]),_:1}),o(),xn]),t("td",jn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[bn,t("td",kn,[t("a",wn,[o("访问消失节点的最少时间"),e(n)])]),vn,t("td",Mn,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[In]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Hn]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[qn]),_:1}),o(),Ln]),t("td",zn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Cn,t("td",Vn,[t("a",En,[o("最短路径中的边"),e(n)])]),Nn,t("td",Pn,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[Bn]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[Fn]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[Kn]),_:1}),o(),Rn]),t("td",Dn,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[Jn,t("td",On,[t("a",Qn,[o("穿越网格图的安全路径"),e(n)])]),Tn,t("td",Un,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[Xn]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[An]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[Gn]),_:1}),o(),Sn]),t("td",Wn,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[Yn,t("td",Zn,[t("a",$n,[o("电动车游城市"),e(n)])]),td,t("td",ed,[e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[od]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:l(()=>[ld]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:l(()=>[sd]),_:1})]),t("td",nd,[e(d,{color:"#ff334b"},{default:l(()=>[o("Hard")]),_:1})])]),t("tr",null,[dd,t("td",cd,[t("a",_d,[o("信物传送"),e(n)])]),id,t("td",ad,[e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[hd]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/graph.html"},{default:l(()=>[rd]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/array.html"},{default:l(()=>[ud]),_:1}),o(),fd]),t("td",gd,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])]),t("tr",null,[md,t("td",pd,[t("a",yd,[o("计算除法"),e(n)])]),xd,t("td",jd,[e(s,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:l(()=>[bd]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:l(()=>[kd]),_:1}),o(),e(s,{to:"/leetcode-js/outline/tag/union-find.html"},{default:l(()=>[wd]),_:1}),o(),vd]),t("td",Md,[e(d,{color:"#ffb800"},{default:l(()=>[o("Medium")]),_:1})])])])])])}const zd=_(r,[["render",Id],["__file","shortest-path.html.vue"]]);export{zd as default};
