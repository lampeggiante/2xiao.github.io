import{_,r as c,o as i,c as a,a as t,d as e,w as o,b as l,f as r}from"./app-5VBZs9Uu.js";const h={},u=t("h1",{id:"字符串匹配",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#字符串匹配","aria-hidden":"true"},"#"),l(" 字符串匹配")],-1),g={class:"hint-container details"},f=t("summary",null,"全部标签",-1),m=t("p",null,[t("strong",null,"数据结构")],-1),y=t("code",null,"数组",-1),x=t("code",null,"矩阵",-1),j=t("code",null,"链表",-1),p=t("code",null,"双向链表",-1),b=t("code",null,"栈",-1),k=t("code",null,"单调栈",-1),w=t("code",null,"队列",-1),I=t("code",null,"单调队列",-1),H=t("code",null,"堆（优先队列）",-1),v=t("code",null,"哈希表",-1),E=t("code",null,"字符串",-1),M=t("span",{class:"blue"},"字符串匹配",-1),q=t("code",null,"树",-1),L=t("code",null,"二叉树",-1),N=t("code",null,"二叉搜索树",-1),V=t("code",null,"最小生成树",-1),B=t("code",null,"图",-1),C=t("code",null,"有序集合",-1),z=t("code",null,"拓扑排序",-1),R=t("code",null,"最短路",-1),T=t("code",null,"强连通分量",-1),A=t("code",null,"欧拉回路",-1),D=t("code",null,"双连通分量",-1),F=t("code",null,"并查集",-1),G=t("code",null,"字典树",-1),J=t("code",null,"线段树",-1),K=t("code",null,"树状数组",-1),O=t("code",null,"后缀数组",-1),P=t("p",null,[t("strong",null,"算法")],-1),Q=t("code",null,"枚举",-1),S=t("code",null,"递归",-1),U=t("code",null,"分治",-1),W=t("code",null,"回溯",-1),X=t("code",null,"贪心",-1),Y=t("code",null,"动态规划",-1),Z=t("code",null,"排序",-1),$=t("code",null,"桶排序",-1),tt=t("code",null,"计数排序",-1),et=t("code",null,"基数排序",-1),lt=t("code",null,"归并排序",-1),ot=t("code",null,"快速选择",-1),nt=t("code",null,"二分查找",-1),st=t("code",null,"记忆化搜索",-1),dt=t("code",null,"深度优先搜索",-1),ct=t("code",null,"广度优先搜索",-1),_t=t("code",null,"双指针",-1),it=t("code",null,"位运算",-1),at=t("code",null,"前缀和",-1),rt=t("code",null,"计数",-1),ht=t("code",null,"滑动窗口",-1),ut=t("code",null,"状态压缩",-1),gt=t("code",null,"哈希函数",-1),ft=t("code",null,"滚动哈希",-1),mt=t("code",null,"扫描线",-1),yt=t("p",null,[t("strong",null,"其他")],-1),xt=t("code",null,"数学",-1),jt=t("code",null,"数论",-1),pt=t("code",null,"几何",-1),bt=t("code",null,"博弈",-1),kt=t("code",null,"模拟",-1),wt=t("code",null,"组合数学",-1),It=t("code",null,"随机化",-1),Ht=t("code",null,"概率与统计",-1),vt=t("code",null,"水塘抽样",-1),Et=t("code",null,"拒绝采样",-1),Mt=t("code",null,"数据库",-1),qt=t("code",null,"设计",-1),Lt=t("code",null,"数据流",-1),Nt=t("code",null,"脑筋急转弯",-1),Vt=t("code",null,"交互",-1),Bt=t("code",null,"迭代器",-1),Ct=t("code",null,"多线程",-1),zt=t("hr",null,null,-1),Rt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"题号"),t("th",{style:{"text-align":"left"}},"标题"),t("th",{style:{"text-align":"center"}},"题解"),t("th",{style:{"text-align":"left"}},"标签"),t("th",{style:{"text-align":"left"}},"难度")])],-1),Tt=t("td",{style:{"text-align":"center"}},"28",-1),At={style:{"text-align":"left"}},Dt={href:"https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string",target:"_blank",rel:"noopener noreferrer"},Ft={style:{"text-align":"center"}},Gt={style:{"text-align":"left"}},Jt=t("code",null,"双指针",-1),Kt=t("code",null,"字符串",-1),Ot=t("code",null,"字符串匹配",-1),Pt={style:{"text-align":"left"}},Qt=t("td",{style:{"text-align":"center"}},"214",-1),St={style:{"text-align":"left"}},Ut={href:"https://leetcode.com/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},Wt=t("td",{style:{"text-align":"center"}},null,-1),Xt={style:{"text-align":"left"}},Yt=t("code",null,"字符串",-1),Zt=t("code",null,"字符串匹配",-1),$t=t("code",null,"哈希函数",-1),te=t("code",null,"1+",-1),ee={style:{"text-align":"left"}},le=t("td",{style:{"text-align":"center"}},"459",-1),oe={style:{"text-align":"left"}},ne={href:"https://leetcode.com/problems/repeated-substring-pattern",target:"_blank",rel:"noopener noreferrer"},se={style:{"text-align":"center"}},de={style:{"text-align":"left"}},ce=t("code",null,"字符串",-1),_e=t("code",null,"字符串匹配",-1),ie={style:{"text-align":"left"}},ae=t("td",{style:{"text-align":"center"}},"572",-1),re={style:{"text-align":"left"}},he={href:"https://leetcode.com/problems/subtree-of-another-tree",target:"_blank",rel:"noopener noreferrer"},ue={style:{"text-align":"center"}},ge={style:{"text-align":"left"}},fe=t("code",null,"树",-1),me=t("code",null,"深度优先搜索",-1),ye=t("code",null,"二叉树",-1),xe=t("code",null,"2+",-1),je={style:{"text-align":"left"}},pe=t("td",{style:{"text-align":"center"}},"616",-1),be={style:{"text-align":"left"}},ke={href:"https://leetcode.com/problems/add-bold-tag-in-string",target:"_blank",rel:"noopener noreferrer"},we=t("td",{style:{"text-align":"center"}},null,-1),Ie={style:{"text-align":"left"}},He=t("code",null,"字典树",-1),ve=t("code",null,"数组",-1),Ee=t("code",null,"哈希表",-1),Me=t("code",null,"2+",-1),qe={style:{"text-align":"left"}},Le=t("td",{style:{"text-align":"center"}},"686",-1),Ne={style:{"text-align":"left"}},Ve={href:"https://leetcode.com/problems/repeated-string-match",target:"_blank",rel:"noopener noreferrer"},Be=t("td",{style:{"text-align":"center"}},null,-1),Ce={style:{"text-align":"left"}},ze=t("code",null,"字符串",-1),Re=t("code",null,"字符串匹配",-1),Te={style:{"text-align":"left"}},Ae=t("td",{style:{"text-align":"center"}},"758",-1),De={style:{"text-align":"left"}},Fe={href:"https://leetcode.com/problems/bold-words-in-string",target:"_blank",rel:"noopener noreferrer"},Ge=t("td",{style:{"text-align":"center"}},null,-1),Je={style:{"text-align":"left"}},Ke=t("code",null,"字典树",-1),Oe=t("code",null,"数组",-1),Pe=t("code",null,"哈希表",-1),Qe=t("code",null,"2+",-1),Se={style:{"text-align":"left"}},Ue=t("td",{style:{"text-align":"center"}},"796",-1),We={style:{"text-align":"left"}},Xe={href:"https://leetcode.com/problems/rotate-string",target:"_blank",rel:"noopener noreferrer"},Ye=t("td",{style:{"text-align":"center"}},null,-1),Ze={style:{"text-align":"left"}},$e=t("code",null,"字符串",-1),tl=t("code",null,"字符串匹配",-1),el={style:{"text-align":"left"}},ll=t("td",{style:{"text-align":"center"}},"1023",-1),ol={style:{"text-align":"left"}},nl={href:"https://leetcode.com/problems/camelcase-matching",target:"_blank",rel:"noopener noreferrer"},sl=t("td",{style:{"text-align":"center"}},null,-1),dl={style:{"text-align":"left"}},cl=t("code",null,"字典树",-1),_l=t("code",null,"数组",-1),il=t("code",null,"双指针",-1),al=t("code",null,"2+",-1),rl={style:{"text-align":"left"}},hl=t("td",{style:{"text-align":"center"}},"1392",-1),ul={style:{"text-align":"left"}},gl={href:"https://leetcode.com/problems/longest-happy-prefix",target:"_blank",rel:"noopener noreferrer"},fl=t("td",{style:{"text-align":"center"}},null,-1),ml={style:{"text-align":"left"}},yl=t("code",null,"字符串",-1),xl=t("code",null,"字符串匹配",-1),jl=t("code",null,"哈希函数",-1),pl=t("code",null,"1+",-1),bl={style:{"text-align":"left"}},kl=t("td",{style:{"text-align":"center"}},"1397",-1),wl={style:{"text-align":"left"}},Il={href:"https://leetcode.com/problems/find-all-good-strings",target:"_blank",rel:"noopener noreferrer"},Hl=t("td",{style:{"text-align":"center"}},null,-1),vl={style:{"text-align":"left"}},El=t("code",null,"字符串",-1),Ml=t("code",null,"动态规划",-1),ql=t("code",null,"字符串匹配",-1),Ll={style:{"text-align":"left"}},Nl=t("td",{style:{"text-align":"center"}},"1408",-1),Vl={style:{"text-align":"left"}},Bl={href:"https://leetcode.com/problems/string-matching-in-an-array",target:"_blank",rel:"noopener noreferrer"},Cl=t("td",{style:{"text-align":"center"}},null,-1),zl={style:{"text-align":"left"}},Rl=t("code",null,"数组",-1),Tl=t("code",null,"字符串",-1),Al=t("code",null,"字符串匹配",-1),Dl={style:{"text-align":"left"}},Fl=t("td",{style:{"text-align":"center"}},"1455",-1),Gl={style:{"text-align":"left"}},Jl={href:"https://leetcode.com/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",target:"_blank",rel:"noopener noreferrer"},Kl=t("td",{style:{"text-align":"center"}},null,-1),Ol={style:{"text-align":"left"}},Pl=t("code",null,"双指针",-1),Ql=t("code",null,"字符串",-1),Sl=t("code",null,"字符串匹配",-1),Ul={style:{"text-align":"left"}},Wl=t("td",{style:{"text-align":"center"}},"1668",-1),Xl={style:{"text-align":"left"}},Yl={href:"https://leetcode.com/problems/maximum-repeating-substring",target:"_blank",rel:"noopener noreferrer"},Zl=t("td",{style:{"text-align":"center"}},null,-1),$l={style:{"text-align":"left"}},to=t("code",null,"字符串",-1),eo=t("code",null,"动态规划",-1),lo=t("code",null,"字符串匹配",-1),oo={style:{"text-align":"left"}},no=t("td",{style:{"text-align":"center"}},"1764",-1),so={style:{"text-align":"left"}},co={href:"https://leetcode.com/problems/form-array-by-concatenating-subarrays-of-another-array",target:"_blank",rel:"noopener noreferrer"},_o=t("td",{style:{"text-align":"center"}},null,-1),io={style:{"text-align":"left"}},ao=t("code",null,"贪心",-1),ro=t("code",null,"数组",-1),ho=t("code",null,"双指针",-1),uo=t("code",null,"1+",-1),go={style:{"text-align":"left"}},fo=t("td",{style:{"text-align":"center"}},"2185",-1),mo={style:{"text-align":"left"}},yo={href:"https://leetcode.com/problems/counting-words-with-a-given-prefix",target:"_blank",rel:"noopener noreferrer"},xo=t("td",{style:{"text-align":"center"}},null,-1),jo={style:{"text-align":"left"}},po=t("code",null,"数组",-1),bo=t("code",null,"字符串",-1),ko=t("code",null,"字符串匹配",-1),wo={style:{"text-align":"left"}},Io=t("td",{style:{"text-align":"center"}},"2223",-1),Ho={style:{"text-align":"left"}},vo={href:"https://leetcode.com/problems/sum-of-scores-of-built-strings",target:"_blank",rel:"noopener noreferrer"},Eo=t("td",{style:{"text-align":"center"}},null,-1),Mo={style:{"text-align":"left"}},qo=t("code",null,"字符串",-1),Lo=t("code",null,"二分查找",-1),No=t("code",null,"字符串匹配",-1),Vo=t("code",null,"3+",-1),Bo={style:{"text-align":"left"}},Co=t("td",{style:{"text-align":"center"}},"2301",-1),zo={style:{"text-align":"left"}},Ro={href:"https://leetcode.com/problems/match-substring-after-replacement",target:"_blank",rel:"noopener noreferrer"},To=t("td",{style:{"text-align":"center"}},null,-1),Ao={style:{"text-align":"left"}},Do=t("code",null,"数组",-1),Fo=t("code",null,"哈希表",-1),Go=t("code",null,"字符串",-1),Jo=t("code",null,"1+",-1),Ko={style:{"text-align":"left"}},Oo=t("td",{style:{"text-align":"center"}},"2430",-1),Po={style:{"text-align":"left"}},Qo={href:"https://leetcode.com/problems/maximum-deletions-on-a-string",target:"_blank",rel:"noopener noreferrer"},So=t("td",{style:{"text-align":"center"}},null,-1),Uo={style:{"text-align":"left"}},Wo=t("code",null,"字符串",-1),Xo=t("code",null,"动态规划",-1),Yo=t("code",null,"字符串匹配",-1),Zo=t("code",null,"2+",-1),$o={style:{"text-align":"left"}},tn=t("td",{style:{"text-align":"center"}},"2851",-1),en={style:{"text-align":"left"}},ln={href:"https://leetcode.com/problems/string-transformation",target:"_blank",rel:"noopener noreferrer"},on=t("td",{style:{"text-align":"center"}},null,-1),nn={style:{"text-align":"left"}},sn=t("code",null,"数学",-1),dn=t("code",null,"字符串",-1),cn=t("code",null,"动态规划",-1),_n=t("code",null,"1+",-1),an={style:{"text-align":"left"}},rn=t("td",{style:{"text-align":"center"}},"3006",-1),hn={style:{"text-align":"left"}},un={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i",target:"_blank",rel:"noopener noreferrer"},gn=t("td",{style:{"text-align":"center"}},null,-1),fn={style:{"text-align":"left"}},mn=t("code",null,"双指针",-1),yn=t("code",null,"字符串",-1),xn=t("code",null,"二分查找",-1),jn=t("code",null,"3+",-1),pn={style:{"text-align":"left"}},bn=t("td",{style:{"text-align":"center"}},"3008",-1),kn={style:{"text-align":"left"}},wn={href:"https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-ii",target:"_blank",rel:"noopener noreferrer"},In=t("td",{style:{"text-align":"center"}},null,-1),Hn={style:{"text-align":"left"}},vn=t("code",null,"双指针",-1),En=t("code",null,"字符串",-1),Mn=t("code",null,"二分查找",-1),qn=t("code",null,"3+",-1),Ln={style:{"text-align":"left"}},Nn=t("td",{style:{"text-align":"center"}},"3023",-1),Vn={style:{"text-align":"left"}},Bn={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-i",target:"_blank",rel:"noopener noreferrer"},Cn=t("td",{style:{"text-align":"center"}},null,-1),zn={style:{"text-align":"left"}},Rn=t("code",null,"数组",-1),Tn=t("code",null,"字符串匹配",-1),An=t("code",null,"滑动窗口",-1),Dn=t("code",null,"2+",-1),Fn={style:{"text-align":"left"}},Gn=t("td",{style:{"text-align":"center"}},"3029",-1),Jn={style:{"text-align":"left"}},Kn={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",target:"_blank",rel:"noopener noreferrer"},On=t("td",{style:{"text-align":"center"}},null,-1),Pn={style:{"text-align":"left"}},Qn=t("code",null,"字符串",-1),Sn=t("code",null,"字符串匹配",-1),Un=t("code",null,"哈希函数",-1),Wn=t("code",null,"1+",-1),Xn={style:{"text-align":"left"}},Yn=t("td",{style:{"text-align":"center"}},"3031",-1),Zn={style:{"text-align":"left"}},$n={href:"https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",target:"_blank",rel:"noopener noreferrer"},ts=t("td",{style:{"text-align":"center"}},null,-1),es={style:{"text-align":"left"}},ls=t("code",null,"字符串",-1),os=t("code",null,"字符串匹配",-1),ns=t("code",null,"哈希函数",-1),ss=t("code",null,"1+",-1),ds={style:{"text-align":"left"}},cs=t("td",{style:{"text-align":"center"}},"3034",-1),_s={style:{"text-align":"left"}},is={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i",target:"_blank",rel:"noopener noreferrer"},as=t("td",{style:{"text-align":"center"}},null,-1),rs={style:{"text-align":"left"}},hs=t("code",null,"数组",-1),us=t("code",null,"字符串匹配",-1),gs=t("code",null,"哈希函数",-1),fs=t("code",null,"1+",-1),ms={style:{"text-align":"left"}},ys=t("td",{style:{"text-align":"center"}},"3036",-1),xs={style:{"text-align":"left"}},js={href:"https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-ii",target:"_blank",rel:"noopener noreferrer"},ps=t("td",{style:{"text-align":"center"}},null,-1),bs={style:{"text-align":"left"}},ks=t("code",null,"数组",-1),ws=t("code",null,"字符串匹配",-1),Is=t("code",null,"哈希函数",-1),Hs=t("code",null,"1+",-1),vs={style:{"text-align":"left"}},Es=t("td",{style:{"text-align":"center"}},"3037",-1),Ms={style:{"text-align":"left"}},qs={href:"https://leetcode.com/problems/find-pattern-in-infinite-stream-ii",target:"_blank",rel:"noopener noreferrer"},Ls=t("td",{style:{"text-align":"center"}},null,-1),Ns={style:{"text-align":"left"}},Vs=t("code",null,"数组",-1),Bs=t("code",null,"字符串匹配",-1),Cs=t("code",null,"滑动窗口",-1),zs=t("code",null,"2+",-1),Rs={style:{"text-align":"left"}},Ts=t("td",{style:{"text-align":"center"}},"3042",-1),As={style:{"text-align":"left"}},Ds={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-i",target:"_blank",rel:"noopener noreferrer"},Fs=t("td",{style:{"text-align":"center"}},null,-1),Gs={style:{"text-align":"left"}},Js=t("code",null,"字典树",-1),Ks=t("code",null,"数组",-1),Os=t("code",null,"字符串",-1),Ps=t("code",null,"3+",-1),Qs={style:{"text-align":"left"}},Ss=t("td",{style:{"text-align":"center"}},"3045",-1),Us={style:{"text-align":"left"}},Ws={href:"https://leetcode.com/problems/count-prefix-and-suffix-pairs-ii",target:"_blank",rel:"noopener noreferrer"},Xs=t("td",{style:{"text-align":"center"}},null,-1),Ys={style:{"text-align":"left"}},Zs=t("code",null,"字典树",-1),$s=t("code",null,"数组",-1),td=t("code",null,"字符串",-1),ed=t("code",null,"3+",-1),ld={style:{"text-align":"left"}},od=t("td",{style:{"text-align":"center"}},"3291",-1),nd={style:{"text-align":"left"}},sd={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i",target:"_blank",rel:"noopener noreferrer"},dd=t("td",{style:{"text-align":"center"}},null,-1),cd={style:{"text-align":"left"}},_d=t("code",null,"字典树",-1),id=t("code",null,"线段树",-1),ad=t("code",null,"数组",-1),rd=t("code",null,"6+",-1),hd={style:{"text-align":"left"}},ud=t("td",{style:{"text-align":"center"}},"3292",-1),gd={style:{"text-align":"left"}},fd={href:"https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-ii",target:"_blank",rel:"noopener noreferrer"},md=t("td",{style:{"text-align":"center"}},null,-1),yd={style:{"text-align":"left"}},xd=t("code",null,"线段树",-1),jd=t("code",null,"数组",-1),pd=t("code",null,"字符串",-1),bd=t("code",null,"5+",-1),kd={style:{"text-align":"left"}},wd=t("td",{style:{"text-align":"center"}},"3303",-1),Id={style:{"text-align":"left"}},Hd={href:"https://leetcode.com/problems/find-the-occurrence-of-first-almost-equal-substring",target:"_blank",rel:"noopener noreferrer"},vd=t("td",{style:{"text-align":"center"}},null,-1),Ed={style:{"text-align":"left"}},Md=t("code",null,"字符串",-1),qd=t("code",null,"字符串匹配",-1),Ld={style:{"text-align":"left"}},Nd=t("td",{style:{"text-align":"center"}},"面试题 01.09",-1),Vd={style:{"text-align":"left"}},Bd={href:"https://leetcode.cn/problems/string-rotation-lcci",target:"_blank",rel:"noopener noreferrer"},Cd=t("td",{style:{"text-align":"center"}},null,-1),zd={style:{"text-align":"left"}},Rd=t("code",null,"字符串",-1),Td=t("code",null,"字符串匹配",-1),Ad={style:{"text-align":"left"}},Dd=t("td",{style:{"text-align":"center"}},"面试题 04.10",-1),Fd={style:{"text-align":"left"}},Gd={href:"https://leetcode.cn/problems/check-subtree-lcci",target:"_blank",rel:"noopener noreferrer"},Jd=t("td",{style:{"text-align":"center"}},null,-1),Kd={style:{"text-align":"left"}},Od=t("code",null,"树",-1),Pd=t("code",null,"深度优先搜索",-1),Qd=t("code",null,"二叉树",-1),Sd=t("code",null,"2+",-1),Ud={style:{"text-align":"left"}},Wd=t("td",{style:{"text-align":"center"}},"面试题 17.17",-1),Xd={style:{"text-align":"left"}},Yd={href:"https://leetcode.cn/problems/multi-search-lcci",target:"_blank",rel:"noopener noreferrer"},Zd=t("td",{style:{"text-align":"center"}},null,-1),$d={style:{"text-align":"left"}},tc=t("code",null,"字典树",-1),ec=t("code",null,"数组",-1),lc=t("code",null,"哈希表",-1),oc=t("code",null,"3+",-1),nc={style:{"text-align":"left"}};function sc(dc,cc){const n=c("RouterLink"),s=c("ExternalLinkIcon"),d=c("font");return i(),a("div",null,[u,t("details",g,[f,m,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/matrix.html"},{default:o(()=>[x]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/linked-list.html"},{default:o(()=>[j]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/doubly-linked-list.html"},{default:o(()=>[p]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/stack.html"},{default:o(()=>[b]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-stack.html"},{default:o(()=>[k]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/queue.html"},{default:o(()=>[w]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/monotonic-queue.html"},{default:o(()=>[I]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/heap-priority-queue.html"},{default:o(()=>[H]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[v]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[E]),_:1}),l(),M,l(),e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[L]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search-tree.html"},{default:o(()=>[N]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/minimum-spanning-tree.html"},{default:o(()=>[V]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/graph.html"},{default:o(()=>[B]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/ordered-set.html"},{default:o(()=>[C]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/topological-sort.html"},{default:o(()=>[z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/shortest-path.html"},{default:o(()=>[R]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/strongly-connected-component.html"},{default:o(()=>[T]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/eulerian-circuit.html"},{default:o(()=>[A]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/biconnected-component.html"},{default:o(()=>[D]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/union-find.html"},{default:o(()=>[F]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[G]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[J]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-indexed-tree.html"},{default:o(()=>[K]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/suffix-array.html"},{default:o(()=>[O]),_:1})]),P,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/enumeration.html"},{default:o(()=>[Q]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/recursion.html"},{default:o(()=>[S]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/divide-and-conquer.html"},{default:o(()=>[U]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/backtracking.html"},{default:o(()=>[W]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[X]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Y]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sorting.html"},{default:o(()=>[Z]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bucket-sort.html"},{default:o(()=>[$]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting-sort.html"},{default:o(()=>[tt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/radix-sort.html"},{default:o(()=>[et]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/merge-sort.html"},{default:o(()=>[lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/quickselect.html"},{default:o(()=>[ot]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[nt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/memoization.html"},{default:o(()=>[st]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[dt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/breadth-first-search.html"},{default:o(()=>[ct]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[_t]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bit-manipulation.html"},{default:o(()=>[it]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/prefix-sum.html"},{default:o(()=>[at]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/counting.html"},{default:o(()=>[rt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/bitmask.html"},{default:o(()=>[ut]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[gt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rolling-hash.html"},{default:o(()=>[ft]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/line-sweep.html"},{default:o(()=>[mt]),_:1})]),yt,t("p",null,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[xt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/number-theory.html"},{default:o(()=>[jt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/geometry.html"},{default:o(()=>[pt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/game-theory.html"},{default:o(()=>[bt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/simulation.html"},{default:o(()=>[kt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/combinatorics.html"},{default:o(()=>[wt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/randomized.html"},{default:o(()=>[It]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/probability-and-statistics.html"},{default:o(()=>[Ht]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/reservoir-sampling.html"},{default:o(()=>[vt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/rejection-sampling.html"},{default:o(()=>[Et]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/database.html"},{default:o(()=>[Mt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/design.html"},{default:o(()=>[qt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/data-stream.html"},{default:o(()=>[Lt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/brainteaser.html"},{default:o(()=>[Nt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/interactive.html"},{default:o(()=>[Vt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/iterator.html"},{default:o(()=>[Bt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/concurrency.html"},{default:o(()=>[Ct]),_:1})])]),zt,r(" prettier-ignore "),t("table",null,[Rt,t("tbody",null,[t("tr",null,[Tt,t("td",At,[t("a",Dt,[l("找出字符串中第一个匹配项的下标"),e(s)])]),t("td",Ft,[e(n,{to:"/leetcode-js/problem/0028.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",Gt,[e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[Jt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Kt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Ot]),_:1})]),t("td",Pt,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Qt,t("td",St,[t("a",Ut,[l("最短回文串"),e(s)])]),Wt,t("td",Xt,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Yt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Zt]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[$t]),_:1}),l(),te]),t("td",ee,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[le,t("td",oe,[t("a",ne,[l("重复的子字符串"),e(s)])]),t("td",se,[e(n,{to:"/leetcode-js/problem/0459.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",de,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[ce]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[_e]),_:1})]),t("td",ie,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ae,t("td",re,[t("a",he,[l("另一棵树的子树"),e(s)])]),t("td",ue,[e(n,{to:"/leetcode-js/problem/0572.html"},{default:o(()=>[l("[✓]")]),_:1})]),t("td",ge,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[fe]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[me]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[ye]),_:1}),l(),xe]),t("td",je,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[pe,t("td",be,[t("a",ke,[l("给字符串添加加粗标签"),e(s)])]),we,t("td",Ie,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[He]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ve]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Ee]),_:1}),l(),Me]),t("td",qe,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Le,t("td",Ne,[t("a",Ve,[l("重复叠加字符串匹配"),e(s)])]),Be,t("td",Ce,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[ze]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Re]),_:1})]),t("td",Te,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ae,t("td",De,[t("a",Fe,[l("字符串中的加粗单词"),e(s)])]),Ge,t("td",Je,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[Ke]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Oe]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Pe]),_:1}),l(),Qe]),t("td",Se,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Ue,t("td",We,[t("a",Xe,[l("旋转字符串"),e(s)])]),Ye,t("td",Ze,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[$e]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[tl]),_:1})]),t("td",el,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[ll,t("td",ol,[t("a",nl,[l("驼峰式匹配"),e(s)])]),sl,t("td",dl,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[cl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[_l]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[il]),_:1}),l(),al]),t("td",rl,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[hl,t("td",ul,[t("a",gl,[l("最长快乐前缀"),e(s)])]),fl,t("td",ml,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[yl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[xl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[jl]),_:1}),l(),pl]),t("td",bl,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[kl,t("td",wl,[t("a",Il,[l("找到所有好字符串"),e(s)])]),Hl,t("td",vl,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[El]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Ml]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[ql]),_:1})]),t("td",Ll,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nl,t("td",Vl,[t("a",Bl,[l("数组中的字符串匹配"),e(s)])]),Cl,t("td",zl,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Rl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Tl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Al]),_:1})]),t("td",Dl,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Fl,t("td",Gl,[t("a",Jl,[l("检查单词是否为句中其他单词的前缀"),e(s)])]),Kl,t("td",Ol,[e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[Pl]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Ql]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Sl]),_:1})]),t("td",Ul,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Wl,t("td",Xl,[t("a",Yl,[l("最大重复子字符串"),e(s)])]),Zl,t("td",$l,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[to]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[eo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[lo]),_:1})]),t("td",oo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[no,t("td",so,[t("a",co,[l("通过连接另一个数组的子数组得到一个数组"),e(s)])]),_o,t("td",io,[e(n,{to:"/leetcode-js/outline/tag/greedy.html"},{default:o(()=>[ao]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ro]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[ho]),_:1}),l(),uo]),t("td",go,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[fo,t("td",mo,[t("a",yo,[l("统计包含给定前缀的字符串"),e(s)])]),xo,t("td",jo,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[po]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[bo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[ko]),_:1})]),t("td",wo,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Io,t("td",Ho,[t("a",vo,[l("构造字符串的总得分和"),e(s)])]),Eo,t("td",Mo,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[qo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[Lo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[No]),_:1}),l(),Vo]),t("td",Bo,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Co,t("td",zo,[t("a",Ro,[l("替换字符后匹配"),e(s)])]),To,t("td",Ao,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Do]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[Fo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Go]),_:1}),l(),Jo]),t("td",Ko,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Oo,t("td",Po,[t("a",Qo,[l("对字母串可执行的最大删除数"),e(s)])]),So,t("td",Uo,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Wo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[Xo]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Yo]),_:1}),l(),Zo]),t("td",$o,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[tn,t("td",en,[t("a",ln,[l("字符串转换"),e(s)])]),on,t("td",nn,[e(n,{to:"/leetcode-js/outline/tag/math.html"},{default:o(()=>[sn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[dn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/dynamic-programming.html"},{default:o(()=>[cn]),_:1}),l(),_n]),t("td",an,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[rn,t("td",hn,[t("a",un,[l("找出数组中的美丽下标 I"),e(s)])]),gn,t("td",fn,[e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[mn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[yn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[xn]),_:1}),l(),jn]),t("td",pn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[bn,t("td",kn,[t("a",wn,[l("找出数组中的美丽下标 II"),e(s)])]),In,t("td",Hn,[e(n,{to:"/leetcode-js/outline/tag/two-pointers.html"},{default:o(()=>[vn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[En]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-search.html"},{default:o(()=>[Mn]),_:1}),l(),qn]),t("td",Ln,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nn,t("td",Vn,[t("a",Bn,[l("在无限流中寻找模式 I"),e(s)])]),Cn,t("td",zn,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Rn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Tn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[An]),_:1}),l(),Dn]),t("td",Fn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Gn,t("td",Jn,[t("a",Kn,[l("将单词恢复初始状态所需的最短时间 I"),e(s)])]),On,t("td",Pn,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Qn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Sn]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[Un]),_:1}),l(),Wn]),t("td",Xn,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Yn,t("td",Zn,[t("a",$n,[l("将单词恢复初始状态所需的最短时间 II"),e(s)])]),ts,t("td",es,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[ls]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[os]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[ns]),_:1}),l(),ss]),t("td",ds,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[cs,t("td",_s,[t("a",is,[l("匹配模式数组的子数组数目 I"),e(s)])]),as,t("td",rs,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[hs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[us]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[gs]),_:1}),l(),fs]),t("td",ms,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ys,t("td",xs,[t("a",js,[l("匹配模式数组的子数组数目 II"),e(s)])]),ps,t("td",bs,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ks]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[ws]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-function.html"},{default:o(()=>[Is]),_:1}),l(),Hs]),t("td",vs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Es,t("td",Ms,[t("a",qs,[l("在无限流中寻找模式 II"),e(s)])]),Ls,t("td",Ns,[e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Vs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Bs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/sliding-window.html"},{default:o(()=>[Cs]),_:1}),l(),zs]),t("td",Rs,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Ts,t("td",As,[t("a",Ds,[l("统计前后缀下标对 I"),e(s)])]),Fs,t("td",Gs,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[Js]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[Ks]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Os]),_:1}),l(),Ps]),t("td",Qs,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Ss,t("td",Us,[t("a",Ws,[l("统计前后缀下标对 II"),e(s)])]),Xs,t("td",Ys,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[Zs]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[$s]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[td]),_:1}),l(),ed]),t("td",ld,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[od,t("td",nd,[t("a",sd,[l("形成目标字符串需要的最少字符串数 I"),e(s)])]),dd,t("td",cd,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[_d]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[id]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ad]),_:1}),l(),rd]),t("td",hd,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[ud,t("td",gd,[t("a",fd,[l("形成目标字符串需要的最少字符串数 II"),e(s)])]),md,t("td",yd,[e(n,{to:"/leetcode-js/outline/tag/segment-tree.html"},{default:o(()=>[xd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[jd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[pd]),_:1}),l(),bd]),t("td",kd,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[wd,t("td",Id,[t("a",Hd,[l("第一个几乎相等子字符串的下标"),e(s)])]),vd,t("td",Ed,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Md]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[qd]),_:1})]),t("td",Ld,[e(d,{color:"#ff334b"},{default:o(()=>[l("Hard")]),_:1})])]),t("tr",null,[Nd,t("td",Vd,[t("a",Bd,[l("字符串轮转"),e(s)])]),Cd,t("td",zd,[e(n,{to:"/leetcode-js/outline/tag/string.html"},{default:o(()=>[Rd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/string-matching.html"},{default:o(()=>[Td]),_:1})]),t("td",Ad,[e(d,{color:"#15bd66"},{default:o(()=>[l("Easy")]),_:1})])]),t("tr",null,[Dd,t("td",Fd,[t("a",Gd,[l("检查子树"),e(s)])]),Jd,t("td",Kd,[e(n,{to:"/leetcode-js/outline/tag/tree.html"},{default:o(()=>[Od]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/depth-first-search.html"},{default:o(()=>[Pd]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/binary-tree.html"},{default:o(()=>[Qd]),_:1}),l(),Sd]),t("td",Ud,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])]),t("tr",null,[Wd,t("td",Xd,[t("a",Yd,[l("多次搜索"),e(s)])]),Zd,t("td",$d,[e(n,{to:"/leetcode-js/outline/tag/trie.html"},{default:o(()=>[tc]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/array.html"},{default:o(()=>[ec]),_:1}),l(),e(n,{to:"/leetcode-js/outline/tag/hash-table.html"},{default:o(()=>[lc]),_:1}),l(),oc]),t("td",nc,[e(d,{color:"#ffb800"},{default:o(()=>[l("Medium")]),_:1})])])])])])}const ic=_(h,[["render",sc],["__file","string-matching.html.vue"]]);export{ic as default};
